### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl"
  id: "PartitionProcessorFactoryImpl"
  parent: "com.azure.cosmos.implementation.changefeed.implementation"
  children:
  - "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl.PartitionProcessorFactoryImpl(com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient,com.azure.cosmos.models.ChangeFeedProcessorOptions,com.azure.cosmos.implementation.changefeed.LeaseCheckpointer,com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl.create(com.azure.cosmos.implementation.changefeed.Lease,com.azure.cosmos.implementation.changefeed.ChangeFeedObserver)"
  langs:
  - "java"
  name: "PartitionProcessorFactoryImpl"
  nameWithType: "PartitionProcessorFactoryImpl"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl"
  type: "Class"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Implementation for <xref uid=\"com.azure.cosmos.implementation.changefeed.PartitionProcessorFactory\" data-throw-if-not-resolved=\"false\">PartitionProcessorFactory</xref>."
  syntax:
    content: " class PartitionProcessorFactoryImpl implements PartitionProcessorFactory"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.implementation.changefeed.PartitionProcessorFactory"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl.PartitionProcessorFactoryImpl(com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient,com.azure.cosmos.models.ChangeFeedProcessorOptions,com.azure.cosmos.implementation.changefeed.LeaseCheckpointer,com.azure.cosmos.CosmosAsyncContainer)"
  id: "PartitionProcessorFactoryImpl(com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient,com.azure.cosmos.models.ChangeFeedProcessorOptions,com.azure.cosmos.implementation.changefeed.LeaseCheckpointer,com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl"
  langs:
  - "java"
  name: "PartitionProcessorFactoryImpl(ChangeFeedContextClient documentClient, ChangeFeedProcessorOptions changeFeedProcessorOptions, LeaseCheckpointer leaseCheckpointer, CosmosAsyncContainer collectionSelfLink)"
  nameWithType: "PartitionProcessorFactoryImpl.PartitionProcessorFactoryImpl(ChangeFeedContextClient documentClient, ChangeFeedProcessorOptions changeFeedProcessorOptions, LeaseCheckpointer leaseCheckpointer, CosmosAsyncContainer collectionSelfLink)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl.PartitionProcessorFactoryImpl(ChangeFeedContextClient documentClient, ChangeFeedProcessorOptions changeFeedProcessorOptions, LeaseCheckpointer leaseCheckpointer, CosmosAsyncContainer collectionSelfLink)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl.PartitionProcessorFactoryImpl*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public PartitionProcessorFactoryImpl(ChangeFeedContextClient documentClient, ChangeFeedProcessorOptions changeFeedProcessorOptions, LeaseCheckpointer leaseCheckpointer, CosmosAsyncContainer collectionSelfLink)"
    parameters:
    - id: "documentClient"
      type: "com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient"
    - id: "changeFeedProcessorOptions"
      type: "com.azure.cosmos.models.ChangeFeedProcessorOptions"
    - id: "leaseCheckpointer"
      type: "com.azure.cosmos.implementation.changefeed.LeaseCheckpointer"
    - id: "collectionSelfLink"
      type: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl.create(com.azure.cosmos.implementation.changefeed.Lease,com.azure.cosmos.implementation.changefeed.ChangeFeedObserver)"
  id: "create(com.azure.cosmos.implementation.changefeed.Lease,com.azure.cosmos.implementation.changefeed.ChangeFeedObserver)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl"
  langs:
  - "java"
  name: "create(Lease lease, ChangeFeedObserver observer)"
  nameWithType: "PartitionProcessorFactoryImpl.create(Lease lease, ChangeFeedObserver observer)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl.create(Lease lease, ChangeFeedObserver observer)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl.create*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public PartitionProcessor create(Lease lease, ChangeFeedObserver observer)"
    parameters:
    - id: "lease"
      type: "com.azure.cosmos.implementation.changefeed.Lease"
    - id: "observer"
      type: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
    return:
      type: "com.azure.cosmos.implementation.changefeed.PartitionProcessor"
references:
- uid: "com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient"
  name: "ChangeFeedContextClient"
  nameWithType: "ChangeFeedContextClient"
  fullName: "com.azure.cosmos.implementation.changefeed.ChangeFeedContextClient"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions"
  name: "ChangeFeedProcessorOptions"
  nameWithType: "ChangeFeedProcessorOptions"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions"
- uid: "com.azure.cosmos.implementation.changefeed.LeaseCheckpointer"
  name: "LeaseCheckpointer"
  nameWithType: "LeaseCheckpointer"
  fullName: "com.azure.cosmos.implementation.changefeed.LeaseCheckpointer"
- uid: "com.azure.cosmos.CosmosAsyncContainer"
  name: "CosmosAsyncContainer"
  nameWithType: "CosmosAsyncContainer"
  fullName: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl.PartitionProcessorFactoryImpl*"
  name: "PartitionProcessorFactoryImpl"
  nameWithType: "PartitionProcessorFactoryImpl.PartitionProcessorFactoryImpl"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl.PartitionProcessorFactoryImpl"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.Lease"
  name: "Lease"
  nameWithType: "Lease"
  fullName: "com.azure.cosmos.implementation.changefeed.Lease"
- uid: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
  name: "ChangeFeedObserver"
  nameWithType: "ChangeFeedObserver"
  fullName: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
- uid: "com.azure.cosmos.implementation.changefeed.PartitionProcessor"
  name: "PartitionProcessor"
  nameWithType: "PartitionProcessor"
  fullName: "com.azure.cosmos.implementation.changefeed.PartitionProcessor"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl.create*"
  name: "create"
  nameWithType: "PartitionProcessorFactoryImpl.create"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.PartitionProcessorFactoryImpl.create"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.PartitionProcessorFactory"
  name: "PartitionProcessorFactory"
  nameWithType: "PartitionProcessorFactory"
  fullName: "com.azure.cosmos.implementation.changefeed.PartitionProcessorFactory"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
