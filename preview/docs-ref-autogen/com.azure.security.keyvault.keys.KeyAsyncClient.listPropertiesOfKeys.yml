### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyAsyncClient.listPropertiesOfKeys*"
fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.listPropertiesOfKeys"
name: "listPropertiesOfKeys"
nameWithType: "KeyAsyncClient.listPropertiesOfKeys"
members:
- uid: "com.azure.security.keyvault.keys.KeyAsyncClient.listPropertiesOfKeys()"
  fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.listPropertiesOfKeys()"
  name: "listPropertiesOfKeys()"
  nameWithType: "KeyAsyncClient.listPropertiesOfKeys()"
  summary: "List <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"keys\"></xref> in the key vault. Retrieves a list of the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"keys\"></xref> in the key vault as <xref uid=\"com.azure.security.keyvault.keys.models.JsonWebKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonWebKey\"></xref> structures that contain the public part of a stored <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>. The list operation is applicable to all <xref uid=\"com.azure.security.keyvault.keys.models.KeyType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key types\"></xref> and the individual <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> response in the list is represented by <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyProperties\"></xref> as only the key identifier, attributes and tags are provided in the response. The key material and individual key versions are not listed in the response. This operation requires the `keys/list` permission.\n\nIt is possible to get <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"full keys\"></xref> with key material from this information. Convert the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> containing <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key properties\"></xref> to <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> containing <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> using <xref uid=\"com.azure.security.keyvault.keys.KeyAsyncClient.getKey(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyAsyncClient#getKey(String, String)\"></xref> within <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux#flatMap(Function)\"></xref>.\n\n```java\nkeyAsyncClient.listPropertiesOfKeys()\n     .contextWrite(Context.of(\"key1\", \"value1\", \"key2\", \"value2\"))\n     .flatMap(keyProperties -> keyAsyncClient.getKey(keyProperties.getName(), keyProperties.getVersion()))\n     .subscribe(key -> System.out.printf(\"Retrieved key with name: %s and type: %s%n\",\n         key.getName(),\n         key.getKeyType()));\n```"
  syntax: "public PagedFlux<KeyProperties> listPropertiesOfKeys()"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> of all the keys in the vault."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyProperties?alt=com.azure.security.keyvault.keys.models.KeyProperties&text=KeyProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.4.0-beta.5
