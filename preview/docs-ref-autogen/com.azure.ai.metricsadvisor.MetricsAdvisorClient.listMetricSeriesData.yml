### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listMetricSeriesData*"
fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listMetricSeriesData"
name: "listMetricSeriesData"
nameWithType: "MetricsAdvisorClient.listMetricSeriesData"
members:
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listMetricSeriesData(java.lang.String,java.util.List<com.azure.ai.metricsadvisor.models.DimensionKey>,com.azure.ai.metricsadvisor.models.ListMetricSeriesDataOptions)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listMetricSeriesData(String metricId, List<DimensionKey> seriesKeys, ListMetricSeriesDataOptions options)"
  name: "listMetricSeriesData(String metricId, List<DimensionKey> seriesKeys, ListMetricSeriesDataOptions options)"
  nameWithType: "MetricsAdvisorClient.listMetricSeriesData(String metricId, List<DimensionKey> seriesKeys, ListMetricSeriesDataOptions options)"
  summary: "Get time series data from metric.\n\n**Code sample**\n\n```java\nmetricAdvisorClient.listMetricSeriesData(\"metricId\",\n     Arrays.asList(new DimensionKey(new HashMap<String, String>() {{\n             put(\"Dim1\", \"value1\");\n         }})),\n     new ListMetricSeriesDataOptions(OffsetDateTime.parse(\"2020-01-01T00:00:00Z\"),\n         OffsetDateTime.parse(\"2020-09-09T00:00:00Z\")))\n     .forEach(metricSeriesData -> {\n         System.out.println(\"List of data points for this series:\");\n         System.out.println(metricSeriesData.getValueList());\n         System.out.println(\"Timestamps of the data related to this time series:\");\n         System.out.println(metricSeriesData.getTimestampList());\n         System.out.printf(\"Series Key:\");\n         System.out.println(metricSeriesData.getSeriesKey().asMap());\n     });\n```"
  parameters:
  - description: "metric unique id."
    name: "metricId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the series key to filter.\n <p>This enables additional filtering of dimension values being queried.\n For example, let's say we've the dimensions 'category' and 'city',\n so the api can query value of the dimension 'category', with series key as 'city=redmond'.\n </p>"
    name: "seriesKeys"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.DimensionKey?alt=com.azure.ai.metricsadvisor.models.DimensionKey&text=DimensionKey\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "query time series data condition."
    name: "options"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.ListMetricSeriesDataOptions?alt=com.azure.ai.metricsadvisor.models.ListMetricSeriesDataOptions&text=ListMetricSeriesDataOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<MetricSeriesData> listMetricSeriesData(String metricId, List<DimensionKey> seriesKeys, ListMetricSeriesDataOptions options)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\">PagedIterable</xref> of the <xref uid=\"com.azure.ai.metricsadvisor.models.MetricSeriesData\" data-throw-if-not-resolved=\"false\">metric series data points</xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.MetricSeriesData?alt=com.azure.ai.metricsadvisor.models.MetricSeriesData&text=MetricSeriesData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listMetricSeriesData(java.lang.String,java.util.List<com.azure.ai.metricsadvisor.models.DimensionKey>,com.azure.ai.metricsadvisor.models.ListMetricSeriesDataOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listMetricSeriesData(String metricId, List<DimensionKey> seriesKeys, ListMetricSeriesDataOptions options, Context context)"
  name: "listMetricSeriesData(String metricId, List<DimensionKey> seriesKeys, ListMetricSeriesDataOptions options, Context context)"
  nameWithType: "MetricsAdvisorClient.listMetricSeriesData(String metricId, List<DimensionKey> seriesKeys, ListMetricSeriesDataOptions options, Context context)"
  summary: "Get time series data from metric.\n\n**Code sample**\n\n```java\nmetricAdvisorClient.listMetricSeriesData(\"metricId\",\n     Arrays.asList(new DimensionKey(new HashMap<String, String>() {{\n             put(\"Dim1\", \"value1\");\n         }})),\n     new ListMetricSeriesDataOptions(OffsetDateTime.parse(\"2020-01-01T00:00:00Z\"),\n         OffsetDateTime.parse(\"2020-09-09T00:00:00Z\")))\n     .forEach(metricSeriesData -> {\n         System.out.printf(\"Data feed Id: %s%n\", metricSeriesData.getMetricId());\n         System.out.printf(\"Data feed description: %s%n\", metricSeriesData.getSeriesKey());\n         System.out.printf(\"Data feed source type: %.2f%n\", metricSeriesData.getTimestampList());\n         System.out.printf(\"Data feed creator: %.2f%n\", metricSeriesData.getValueList());\n     });\n```"
  parameters:
  - description: "metric unique id."
    name: "metricId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the series key to filter.\n <p>This enables additional filtering of dimension values being queried.\n For example, let's say we've the dimensions 'category' and 'city',\n so the api can query value of the dimension 'category', with series key as 'city=redmond'.\n </p>"
    name: "seriesKeys"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.DimensionKey?alt=com.azure.ai.metricsadvisor.models.DimensionKey&text=DimensionKey\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "query time series data condition."
    name: "options"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.ListMetricSeriesDataOptions?alt=com.azure.ai.metricsadvisor.models.ListMetricSeriesDataOptions&text=ListMetricSeriesDataOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<MetricSeriesData> listMetricSeriesData(String metricId, List<DimensionKey> seriesKeys, ListMetricSeriesDataOptions options, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\">PagedIterable</xref> of the <xref uid=\"com.azure.ai.metricsadvisor.models.MetricSeriesData\" data-throw-if-not-resolved=\"false\">metric series data points</xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.MetricSeriesData?alt=com.azure.ai.metricsadvisor.models.MetricSeriesData&text=MetricSeriesData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.1
