### YamlMime:JavaMember
uid: "com.azure.storage.blob.BlobClient.upload*"
fullName: "com.azure.storage.blob.BlobClient.upload"
name: "upload"
nameWithType: "BlobClient.upload"
members:
- uid: "com.azure.storage.blob.BlobClient.upload(java.io.InputStream,long)"
  fullName: "com.azure.storage.blob.BlobClient.upload(InputStream data, long length)"
  name: "upload(InputStream data, long length)"
  nameWithType: "BlobClient.upload(InputStream data, long length)"
  summary: "Creates a new blob. By default this method will not overwrite an existing blob."
  parameters:
  - description: "The data to write to the blob. The data must be markable. This is in order to support retries. If\n the data is not markable, consider opening a <xref uid=\"com.azure.storage.blob.specialized.BlobOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.storage.blob.specialized.BlobOutputStream\"></xref> and\n writing to the returned stream. Alternatively, consider wrapping your data source in a\n <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.io.BufferedInputStream\"></xref> to add mark support."
    name: "data"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void upload(InputStream data, long length)"
- uid: "com.azure.storage.blob.BlobClient.upload(java.io.InputStream,long,boolean)"
  fullName: "com.azure.storage.blob.BlobClient.upload(InputStream data, long length, boolean overwrite)"
  name: "upload(InputStream data, long length, boolean overwrite)"
  nameWithType: "BlobClient.upload(InputStream data, long length, boolean overwrite)"
  summary: "Creates a new blob, or updates the content of an existing blob."
  parameters:
  - description: "The data to write to the blob. The data must be markable. This is in order to support retries. If\n the data is not markable, consider opening a <xref uid=\"com.azure.storage.blob.specialized.BlobOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.storage.blob.specialized.BlobOutputStream\"></xref> and\n writing to the returned stream. Alternatively, consider wrapping your data source in a\n <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.io.BufferedInputStream\"></xref> to add mark support."
    name: "data"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether or not to overwrite, should data exist on the blob."
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void upload(InputStream data, long length, boolean overwrite)"
type: "method"
metadata: {}
package: "com.azure.storage.blob"
artifact: com.azure:azure-storage-blob:12.9.0-beta.1
