### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException*"
fullName: "com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException"
name: "reportWrongTokenException"
nameWithType: "DeserializationContext.reportWrongTokenException"
members:
- uid: "com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(JsonParser p, JsonToken expToken, String msg, Object[] msgArgs)"
  name: "reportWrongTokenException(JsonParser p, JsonToken expToken, String msg, Object[] msgArgs)"
  nameWithType: "DeserializationContext.reportWrongTokenException(JsonParser p, JsonToken expToken, String msg, Object[] msgArgs)"
  parameters:
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "expToken"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
  - name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "msgArgs"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void reportWrongTokenException(JsonParser p, JsonToken expToken, String msg, Object[] msgArgs)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(JavaType targetType, JsonToken expToken, String msg, Object[] msgArgs)"
  name: "reportWrongTokenException(JavaType targetType, JsonToken expToken, String msg, Object[] msgArgs)"
  nameWithType: "DeserializationContext.reportWrongTokenException(JavaType targetType, JsonToken expToken, String msg, Object[] msgArgs)"
  summary: "Method for deserializers to call when the token encountered was of type different than what **should** be seen at that position, usually within a sequence of expected tokens. Note that this method will throw a <xref uid=\"com.fasterxml.jackson.databind.JsonMappingException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonMappingException\"></xref> and no recovery is attempted (via <xref uid=\"com.fasterxml.jackson.databind.deser.DeserializationProblemHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeserializationProblemHandler\"></xref>, as problem is considered to be difficult to recover from, in general."
  parameters:
  - name: "targetType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "expToken"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
  - name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "msgArgs"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void reportWrongTokenException(JavaType targetType, JsonToken expToken, String msg, Object[] msgArgs)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(JsonDeserializer<?> deser, JsonToken expToken, String msg, Object[] msgArgs)"
  name: "reportWrongTokenException(JsonDeserializer<?> deser, JsonToken expToken, String msg, Object[] msgArgs)"
  nameWithType: "DeserializationContext.reportWrongTokenException(JsonDeserializer<?> deser, JsonToken expToken, String msg, Object[] msgArgs)"
  summary: "Method for deserializers to call when the token encountered was of type different than what **should** be seen at that position, usually within a sequence of expected tokens. Note that this method will throw a <xref uid=\"com.fasterxml.jackson.databind.JsonMappingException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonMappingException\"></xref> and no recovery is attempted (via <xref uid=\"com.fasterxml.jackson.databind.deser.DeserializationProblemHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeserializationProblemHandler\"></xref>, as problem is considered to be difficult to recover from, in general."
  parameters:
  - name: "deser"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonDeserializer?alt=com.fasterxml.jackson.databind.JsonDeserializer&text=JsonDeserializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "expToken"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
  - name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "msgArgs"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void reportWrongTokenException(JsonDeserializer<?> deser, JsonToken expToken, String msg, Object[] msgArgs)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(java.lang.Class<?>,com.fasterxml.jackson.core.JsonToken,java.lang.String,java.lang.Object...)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(Class<?> targetType, JsonToken expToken, String msg, Object[] msgArgs)"
  name: "reportWrongTokenException(Class<?> targetType, JsonToken expToken, String msg, Object[] msgArgs)"
  nameWithType: "DeserializationContext.reportWrongTokenException(Class<?> targetType, JsonToken expToken, String msg, Object[] msgArgs)"
  summary: "Method for deserializers to call when the token encountered was of type different than what **should** be seen at that position, usually within a sequence of expected tokens. Note that this method will throw a <xref uid=\"com.fasterxml.jackson.databind.JsonMappingException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonMappingException\"></xref> and no recovery is attempted (via <xref uid=\"com.fasterxml.jackson.databind.deser.DeserializationProblemHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeserializationProblemHandler\"></xref>, as problem is considered to be difficult to recover from, in general."
  parameters:
  - name: "targetType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "expToken"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
  - name: "msg"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "msgArgs"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void reportWrongTokenException(Class<?> targetType, JsonToken expToken, String msg, Object[] msgArgs)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
