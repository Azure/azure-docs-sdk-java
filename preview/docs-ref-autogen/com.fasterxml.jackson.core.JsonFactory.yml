### YamlMime:JavaType
uid: "com.fasterxml.jackson.core.JsonFactory"
fullName: "com.fasterxml.jackson.core.JsonFactory"
name: "JsonFactory"
nameWithType: "JsonFactory"
summary: "The main factory class of Jackson package, used to configure and construct reader (aka parser, <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref>) and writer (aka generator, <xref uid=\"com.fasterxml.jackson.core.JsonGenerator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonGenerator\"></xref>) instances.\n\nFactory instances are thread-safe and reusable after configuration (if any). Typically applications and services use only a single globally shared factory instance, unless they need differently configured factories. Factory reuse is important if efficiency matters; most recycling of expensive construct is done on per-factory basis.\n\nCreation of a factory instance is a light-weight operation, and since there is no need for pluggable alternative implementations (as there is no \"standard\" JSON processor API to implement), the default constructor is used for constructing factory instances."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.core.TokenStreamFactory\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.core.TokenStreamFactory._createDataOutputWrapper(java.io.DataOutput)"
- "com.fasterxml.jackson.core.TokenStreamFactory._optimizedStreamFromURL(java.net.URL)"
- "com.fasterxml.jackson.core.TokenStreamFactory.canHandleBinaryNatively()"
- "com.fasterxml.jackson.core.TokenStreamFactory.canParseAsync()"
- "com.fasterxml.jackson.core.TokenStreamFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.DataOutput)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.DataOutput,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.OutputStream)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createGenerator(java.io.Writer)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createNonBlockingByteArrayParser()"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(byte[])"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(byte[],int,int)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(char[])"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(char[],int,int)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.DataInput)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.File)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.InputStream)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.io.Reader)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.lang.String)"
- "com.fasterxml.jackson.core.TokenStreamFactory.createParser(java.net.URL)"
- "com.fasterxml.jackson.core.TokenStreamFactory.getFormatGeneratorFeatures()"
- "com.fasterxml.jackson.core.TokenStreamFactory.getFormatName()"
- "com.fasterxml.jackson.core.TokenStreamFactory.getFormatParserFeatures()"
- "com.fasterxml.jackson.core.TokenStreamFactory.getFormatReadFeatureType()"
- "com.fasterxml.jackson.core.TokenStreamFactory.getFormatWriteFeatureType()"
- "com.fasterxml.jackson.core.TokenStreamFactory.getGeneratorFeatures()"
- "com.fasterxml.jackson.core.TokenStreamFactory.getParserFeatures()"
- "com.fasterxml.jackson.core.TokenStreamFactory.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)"
- "com.fasterxml.jackson.core.TokenStreamFactory.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.TokenStreamFactory.requiresPropertyOrdering()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class JsonFactory extends TokenStreamFactory implements Versioned, Serializable"
constructors:
- "com.fasterxml.jackson.core.JsonFactory.JsonFactory()"
- "com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.ObjectCodec)"
- "com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.JsonFactoryBuilder)"
- "com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.ObjectCodec)"
- "com.fasterxml.jackson.core.JsonFactory.JsonFactory(com.fasterxml.jackson.core.TSFBuilder<?,?>,boolean)"
fields:
- "com.fasterxml.jackson.core.JsonFactory.DEFAULT_FACTORY_FEATURE_FLAGS"
- "com.fasterxml.jackson.core.JsonFactory.DEFAULT_GENERATOR_FEATURE_FLAGS"
- "com.fasterxml.jackson.core.JsonFactory.DEFAULT_PARSER_FEATURE_FLAGS"
- "com.fasterxml.jackson.core.JsonFactory.DEFAULT_QUOTE_CHAR"
- "com.fasterxml.jackson.core.JsonFactory.DEFAULT_ROOT_VALUE_SEPARATOR"
- "com.fasterxml.jackson.core.JsonFactory.FORMAT_NAME_JSON"
- "com.fasterxml.jackson.core.JsonFactory._byteSymbolCanonicalizer"
- "com.fasterxml.jackson.core.JsonFactory._characterEscapes"
- "com.fasterxml.jackson.core.JsonFactory._factoryFeatures"
- "com.fasterxml.jackson.core.JsonFactory._generatorFeatures"
- "com.fasterxml.jackson.core.JsonFactory._inputDecorator"
- "com.fasterxml.jackson.core.JsonFactory._maximumNonEscapedChar"
- "com.fasterxml.jackson.core.JsonFactory._objectCodec"
- "com.fasterxml.jackson.core.JsonFactory._outputDecorator"
- "com.fasterxml.jackson.core.JsonFactory._parserFeatures"
- "com.fasterxml.jackson.core.JsonFactory._quoteChar"
- "com.fasterxml.jackson.core.JsonFactory._rootCharSymbols"
- "com.fasterxml.jackson.core.JsonFactory._rootValueSeparator"
methods:
- "com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class<?>)"
- "com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object,boolean)"
- "com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._createNonBlockingContext(java.lang.Object)"
- "com.fasterxml.jackson.core.JsonFactory._createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._createParser(char[],int,int,com.fasterxml.jackson.core.io.IOContext,boolean)"
- "com.fasterxml.jackson.core.JsonFactory._createParser(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._decorate(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._decorate(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._decorate(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()"
- "com.fasterxml.jackson.core.JsonFactory.builder()"
- "com.fasterxml.jackson.core.JsonFactory.canHandleBinaryNatively()"
- "com.fasterxml.jackson.core.JsonFactory.canParseAsync()"
- "com.fasterxml.jackson.core.JsonFactory.canUseCharArrays()"
- "com.fasterxml.jackson.core.JsonFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonFactory.Feature,boolean)"
- "com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonGenerator.Feature,boolean)"
- "com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)"
- "com.fasterxml.jackson.core.JsonFactory.copy()"
- "com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.DataOutput)"
- "com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.DataOutput,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream)"
- "com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.Writer)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[])"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[],int,int)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.File)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.InputStream)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.Reader)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.lang.String)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.net.URL)"
- "com.fasterxml.jackson.core.JsonFactory.createNonBlockingByteArrayParser()"
- "com.fasterxml.jackson.core.JsonFactory.createParser(byte[])"
- "com.fasterxml.jackson.core.JsonFactory.createParser(byte[],int,int)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(char[])"
- "com.fasterxml.jackson.core.JsonFactory.createParser(char[],int,int)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(java.io.DataInput)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)"
- "com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonFactory.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonGenerator.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonFactory.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonGenerator.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.getCharacterEscapes()"
- "com.fasterxml.jackson.core.JsonFactory.getCodec()"
- "com.fasterxml.jackson.core.JsonFactory.getFormatGeneratorFeatures()"
- "com.fasterxml.jackson.core.JsonFactory.getFormatName()"
- "com.fasterxml.jackson.core.JsonFactory.getFormatParserFeatures()"
- "com.fasterxml.jackson.core.JsonFactory.getFormatReadFeatureType()"
- "com.fasterxml.jackson.core.JsonFactory.getFormatWriteFeatureType()"
- "com.fasterxml.jackson.core.JsonFactory.getGeneratorFeatures()"
- "com.fasterxml.jackson.core.JsonFactory.getInputDecorator()"
- "com.fasterxml.jackson.core.JsonFactory.getOutputDecorator()"
- "com.fasterxml.jackson.core.JsonFactory.getParserFeatures()"
- "com.fasterxml.jackson.core.JsonFactory.getRootValueSeparator()"
- "com.fasterxml.jackson.core.JsonFactory.hasFormat(com.fasterxml.jackson.core.format.InputAccessor)"
- "com.fasterxml.jackson.core.JsonFactory.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)"
- "com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonFactory.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)"
- "com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)"
- "com.fasterxml.jackson.core.JsonFactory.readResolve()"
- "com.fasterxml.jackson.core.JsonFactory.rebuild()"
- "com.fasterxml.jackson.core.JsonFactory.requiresCustomCodec()"
- "com.fasterxml.jackson.core.JsonFactory.requiresPropertyOrdering()"
- "com.fasterxml.jackson.core.JsonFactory.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)"
- "com.fasterxml.jackson.core.JsonFactory.setCodec(com.fasterxml.jackson.core.ObjectCodec)"
- "com.fasterxml.jackson.core.JsonFactory.setInputDecorator(com.fasterxml.jackson.core.io.InputDecorator)"
- "com.fasterxml.jackson.core.JsonFactory.setOutputDecorator(com.fasterxml.jackson.core.io.OutputDecorator)"
- "com.fasterxml.jackson.core.JsonFactory.setRootValueSeparator(java.lang.String)"
- "com.fasterxml.jackson.core.JsonFactory.version()"
type: "class"
implements:
- "<xref href=\"com.fasterxml.jackson.core.Versioned?alt=com.fasterxml.jackson.core.Versioned&text=Versioned\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
