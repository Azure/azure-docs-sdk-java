### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
  id: CheckpointFrequency
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed
  children:
  - com.azure.cosmos.implementation.changefeed.CheckpointFrequency.CheckpointFrequency()
  - com.azure.cosmos.implementation.changefeed.CheckpointFrequency.getProcessedDocumentCount()
  - com.azure.cosmos.implementation.changefeed.CheckpointFrequency.getTimeInterval()
  - com.azure.cosmos.implementation.changefeed.CheckpointFrequency.isExplicitCheckpoint()
  - com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withExplicitCheckpoint()
  - com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withProcessedDocumentCount(int)
  - com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withTimeInterval(java.time.Duration)
  - com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withoutExplicitCheckpoint()
  langs:
  - java
  name: CheckpointFrequency
  nameWithType: CheckpointFrequency
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
  type: Class
  package: com.azure.cosmos.implementation.changefeed
  summary: Specifies the frequency of lease event. The event will trigger when either of conditions is satisfied.
  syntax:
    content: public class CheckpointFrequency
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.CheckpointFrequency()
  id: CheckpointFrequency()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
  langs:
  - java
  name: CheckpointFrequency()
  nameWithType: CheckpointFrequency.CheckpointFrequency()
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.CheckpointFrequency()
  overload: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.CheckpointFrequency*
  type: Constructor
  package: com.azure.cosmos.implementation.changefeed
  syntax:
    content: public CheckpointFrequency()
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.getProcessedDocumentCount()
  id: getProcessedDocumentCount()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
  langs:
  - java
  name: getProcessedDocumentCount()
  nameWithType: CheckpointFrequency.getProcessedDocumentCount()
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.getProcessedDocumentCount()
  overload: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.getProcessedDocumentCount*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Gets the value that specifies to checkpoint every specified number of docs.
  syntax:
    content: public int getProcessedDocumentCount()
    return:
      type: int
      description: the value that specifies to checkpoint every specified number of docs.
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.getTimeInterval()
  id: getTimeInterval()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
  langs:
  - java
  name: getTimeInterval()
  nameWithType: CheckpointFrequency.getTimeInterval()
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.getTimeInterval()
  overload: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.getTimeInterval*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Gets the value that specifies to checkpoint every specified time interval.
  syntax:
    content: public Duration getTimeInterval()
    return:
      type: java.time.Duration
      description: the value that specifies to checkpoint every specified time interval.
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.isExplicitCheckpoint()
  id: isExplicitCheckpoint()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
  langs:
  - java
  name: isExplicitCheckpoint()
  nameWithType: CheckpointFrequency.isExplicitCheckpoint()
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.isExplicitCheckpoint()
  overload: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.isExplicitCheckpoint*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: >-
    Gets a value indicating whether explicit check-pointing is enabled.


    By default false. Setting to true means changefeed host will never checkpoint and client code needs to explicitly checkpoint via <xref uid="com.azure.cosmos.implementation.changefeed.PartitionCheckpointer" data-throw-if-not-resolved="false">PartitionCheckpointer</xref>
  syntax:
    content: public boolean isExplicitCheckpoint()
    return:
      type: boolean
      description: a value indicating whether explicit check-pointing is enabled.
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withExplicitCheckpoint()
  id: withExplicitCheckpoint()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
  langs:
  - java
  name: withExplicitCheckpoint()
  nameWithType: CheckpointFrequency.withExplicitCheckpoint()
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withExplicitCheckpoint()
  overload: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withExplicitCheckpoint*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Sets a value indicating explicit check-pointing is enabled.
  syntax:
    content: public CheckpointFrequency withExplicitCheckpoint()
    return:
      type: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
      description: current <xref uid="com.azure.cosmos.implementation.changefeed.CheckpointFrequency" data-throw-if-not-resolved="false">CheckpointFrequency</xref>.
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withProcessedDocumentCount(int)
  id: withProcessedDocumentCount(int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
  langs:
  - java
  name: withProcessedDocumentCount(int processedDocumentCount)
  nameWithType: CheckpointFrequency.withProcessedDocumentCount(int processedDocumentCount)
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withProcessedDocumentCount(int processedDocumentCount)
  overload: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withProcessedDocumentCount*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Sets the value that specifies to checkpoint every specified number of docs.
  syntax:
    content: public CheckpointFrequency withProcessedDocumentCount(int processedDocumentCount)
    parameters:
    - id: processedDocumentCount
      type: int
      description: the value that specifies to checkpoint every specified number of docs.
    return:
      type: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
      description: current <xref uid="com.azure.cosmos.implementation.changefeed.CheckpointFrequency" data-throw-if-not-resolved="false">CheckpointFrequency</xref>.
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withTimeInterval(java.time.Duration)
  id: withTimeInterval(java.time.Duration)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
  langs:
  - java
  name: withTimeInterval(Duration timeInterval)
  nameWithType: CheckpointFrequency.withTimeInterval(Duration timeInterval)
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withTimeInterval(Duration timeInterval)
  overload: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withTimeInterval*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Sets the value that specifies to checkpoint every specified time interval.
  syntax:
    content: public CheckpointFrequency withTimeInterval(Duration timeInterval)
    parameters:
    - id: timeInterval
      type: java.time.Duration
      description: the value that specifies to checkpoint every specified time interval.
    return:
      type: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
      description: current <xref uid="com.azure.cosmos.implementation.changefeed.CheckpointFrequency" data-throw-if-not-resolved="false">CheckpointFrequency</xref>.
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withoutExplicitCheckpoint()
  id: withoutExplicitCheckpoint()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
  langs:
  - java
  name: withoutExplicitCheckpoint()
  nameWithType: CheckpointFrequency.withoutExplicitCheckpoint()
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withoutExplicitCheckpoint()
  overload: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withoutExplicitCheckpoint*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Sets a value indicating explicit checkpointing is disabled.
  syntax:
    content: public CheckpointFrequency withoutExplicitCheckpoint()
    return:
      type: com.azure.cosmos.implementation.changefeed.CheckpointFrequency
      description: current <xref uid="com.azure.cosmos.implementation.changefeed.CheckpointFrequency" data-throw-if-not-resolved="false">CheckpointFrequency</xref>.
references:
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.CheckpointFrequency*
  name: CheckpointFrequency
  nameWithType: CheckpointFrequency.CheckpointFrequency
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.CheckpointFrequency
  package: com.azure.cosmos.implementation.changefeed
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.isExplicitCheckpoint*
  name: isExplicitCheckpoint
  nameWithType: CheckpointFrequency.isExplicitCheckpoint
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.isExplicitCheckpoint
  package: com.azure.cosmos.implementation.changefeed
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.getProcessedDocumentCount*
  name: getProcessedDocumentCount
  nameWithType: CheckpointFrequency.getProcessedDocumentCount
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.getProcessedDocumentCount
  package: com.azure.cosmos.implementation.changefeed
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.getTimeInterval*
  name: getTimeInterval
  nameWithType: CheckpointFrequency.getTimeInterval
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.getTimeInterval
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withExplicitCheckpoint*
  name: withExplicitCheckpoint
  nameWithType: CheckpointFrequency.withExplicitCheckpoint
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withExplicitCheckpoint
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withoutExplicitCheckpoint*
  name: withoutExplicitCheckpoint
  nameWithType: CheckpointFrequency.withoutExplicitCheckpoint
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withoutExplicitCheckpoint
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withProcessedDocumentCount*
  name: withProcessedDocumentCount
  nameWithType: CheckpointFrequency.withProcessedDocumentCount
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withProcessedDocumentCount
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withTimeInterval*
  name: withTimeInterval
  nameWithType: CheckpointFrequency.withTimeInterval
  fullName: com.azure.cosmos.implementation.changefeed.CheckpointFrequency.withTimeInterval
  package: com.azure.cosmos.implementation.changefeed
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
