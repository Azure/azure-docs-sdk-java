### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService"
name: "TeamDeskLinkedService"
nameWithType: "TeamDeskLinkedService"
summary: "Linked service for TeamDesk."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TeamDeskLinkedService extends LinkedService"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.TeamDeskLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.TeamDeskLinkedService()"
  name: "TeamDeskLinkedService()"
  nameWithType: "TeamDeskLinkedService.TeamDeskLinkedService()"
  syntax: "public TeamDeskLinkedService()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.apiToken()"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.apiToken()"
  name: "apiToken()"
  nameWithType: "TeamDeskLinkedService.apiToken()"
  summary: "Get the apiToken property: The api token for the TeamDesk source."
  syntax: "public SecretBase apiToken()"
  returns:
    description: "the apiToken value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.authenticationType()"
  name: "authenticationType()"
  nameWithType: "TeamDeskLinkedService.authenticationType()"
  summary: "Get the authenticationType property: The authentication type to use."
  syntax: "public TeamDeskAuthenticationType authenticationType()"
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeamDeskAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.TeamDeskAuthenticationType&text=TeamDeskAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "TeamDeskLinkedService.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.password()"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.password()"
  name: "password()"
  nameWithType: "TeamDeskLinkedService.password()"
  summary: "Get the password property: The password of the TeamDesk source."
  syntax: "public SecretBase password()"
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.url()"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.url()"
  name: "url()"
  nameWithType: "TeamDeskLinkedService.url()"
  summary: "Get the url property: The url to connect TeamDesk source. Type: string (or Expression with resultType string)."
  syntax: "public Object url()"
  returns:
    description: "the url value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.username()"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.username()"
  name: "username()"
  nameWithType: "TeamDeskLinkedService.username()"
  summary: "Get the username property: The username of the TeamDesk source. Type: string (or Expression with resultType string)."
  syntax: "public Object username()"
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.validate()"
  name: "validate()"
  nameWithType: "TeamDeskLinkedService.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "TeamDeskLinkedService.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TeamDeskLinkedService withAnnotations(List<Object> annotations)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService?alt=com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService&text=TeamDeskLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withApiToken(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withApiToken(SecretBase apiToken)"
  name: "withApiToken(SecretBase apiToken)"
  nameWithType: "TeamDeskLinkedService.withApiToken(SecretBase apiToken)"
  summary: "Set the apiToken property: The api token for the TeamDesk source."
  parameters:
  - description: "the apiToken value to set."
    name: "apiToken"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeamDeskLinkedService withApiToken(SecretBase apiToken)"
  returns:
    description: "the TeamDeskLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService?alt=com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService&text=TeamDeskLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withAuthenticationType(com.azure.resourcemanager.datafactory.models.TeamDeskAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withAuthenticationType(TeamDeskAuthenticationType authenticationType)"
  name: "withAuthenticationType(TeamDeskAuthenticationType authenticationType)"
  nameWithType: "TeamDeskLinkedService.withAuthenticationType(TeamDeskAuthenticationType authenticationType)"
  summary: "Set the authenticationType property: The authentication type to use."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeamDeskAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.TeamDeskAuthenticationType&text=TeamDeskAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeamDeskLinkedService withAuthenticationType(TeamDeskAuthenticationType authenticationType)"
  returns:
    description: "the TeamDeskLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService?alt=com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService&text=TeamDeskLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  name: "withConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "TeamDeskLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connectVia property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeamDeskLinkedService withConnectVia(IntegrationRuntimeReference connectVia)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService?alt=com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService&text=TeamDeskLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "TeamDeskLinkedService.withDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeamDeskLinkedService withDescription(String description)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService?alt=com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService&text=TeamDeskLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "TeamDeskLinkedService.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeamDeskLinkedService withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the TeamDeskLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService?alt=com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService&text=TeamDeskLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "TeamDeskLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TeamDeskLinkedService withParameters(Map<String,ParameterSpecification> parameters)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService?alt=com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService&text=TeamDeskLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "TeamDeskLinkedService.withPassword(SecretBase password)"
  summary: "Set the password property: The password of the TeamDesk source."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeamDeskLinkedService withPassword(SecretBase password)"
  returns:
    description: "the TeamDeskLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService?alt=com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService&text=TeamDeskLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withUrl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withUrl(Object url)"
  name: "withUrl(Object url)"
  nameWithType: "TeamDeskLinkedService.withUrl(Object url)"
  summary: "Set the url property: The url to connect TeamDesk source. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the url value to set."
    name: "url"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeamDeskLinkedService withUrl(Object url)"
  returns:
    description: "the TeamDeskLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService?alt=com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService&text=TeamDeskLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "TeamDeskLinkedService.withUsername(Object username)"
  summary: "Set the username property: The username of the TeamDesk source. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeamDeskLinkedService withUsername(Object username)"
  returns:
    description: "the TeamDeskLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService?alt=com.azure.resourcemanager.datafactory.models.TeamDeskLinkedService&text=TeamDeskLinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
