### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  id: BeanAsArraySerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl
  children:
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer._defaultSerializer
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.asArraySerializer()
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.isUnwrappingSerializer()
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.toString()
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withFilterId(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withIgnorals(java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  - com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  langs:
  - java
  name: BeanAsArraySerializer
  nameWithType: BeanAsArraySerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  type: Class
  package: com.fasterxml.jackson.databind.ser.impl
  summary: >-
    Specialized POJO serializer that differs from <xref uid="com.fasterxml.jackson.databind.ser.BeanSerializer" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.ser.BeanSerializer</xref> in that instead of producing a JSON Object it will output a JSON Array, omitting field names, and serializing values in specified serialization order. This behavior is usually triggered by using annotation <xref uid="com.fasterxml.jackson.annotation.JsonFormat" data-throw-if-not-resolved="false">com.fasterxml.jackson.annotation.JsonFormat</xref> or its equivalents.


    This serializer can be used for "simple" instances; and will NOT be used if one of following is true:

     *  Unwrapping is used (no way to expand out array in JSON Object)
     *  Type information ("type id") is to be used: while this could work for some embedding methods, it would likely cause conflicts.
     *  Object Identity ("object id") is used: while references would work, the problem is inclusion of id itself.

    Note that it is theoretically possible that last 2 issues could be addressed (by reserving room in array, for example); and if so, support improved.


    In cases where array-based output is not feasible, this serializer can instead delegate to the original Object-based serializer; this is why a reference is retained to the original serializer.
  syntax:
    content: public class BeanAsArraySerializer extends BeanSerializerBase
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializer
  - com.fasterxml.jackson.databind.ser.std.StdSerializer
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  - com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  - com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._customTypeId(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.asArraySerializer()
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.properties()
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.resolve(com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.usesObjectId()
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withFilterId(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.lang.String[])
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set<java.lang.String>)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  - com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  - com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
  - com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)
  id: BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: BeanAsArraySerializer(BeanSerializerBase src)
  nameWithType: BeanAsArraySerializer.BeanAsArraySerializer(BeanSerializerBase src)
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer(BeanSerializerBase src)
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public BeanAsArraySerializer(BeanSerializerBase src)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
  id: BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: BeanAsArraySerializer(BeanSerializerBase src, ObjectIdWriter oiw, Object filterId)
  nameWithType: BeanAsArraySerializer.BeanAsArraySerializer(BeanSerializerBase src, ObjectIdWriter oiw, Object filterId)
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer(BeanSerializerBase src, ObjectIdWriter oiw, Object filterId)
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: protected BeanAsArraySerializer(BeanSerializerBase src, ObjectIdWriter oiw, Object filterId)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
    - id: oiw
      type: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
    - id: filterId
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set<java.lang.String>)
  id: BeanAsArraySerializer(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: BeanAsArraySerializer(BeanSerializerBase src, Set<String> toIgnore)
  nameWithType: BeanAsArraySerializer.BeanAsArraySerializer(BeanSerializerBase src, Set<String> toIgnore)
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer(BeanSerializerBase src, Set<String> toIgnore)
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: protected BeanAsArraySerializer(BeanSerializerBase src, Set<String> toIgnore)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
    - id: toIgnore
      type: java.util.Set<java.lang.String>
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer._defaultSerializer
  id: _defaultSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: _defaultSerializer
  nameWithType: BeanAsArraySerializer._defaultSerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer._defaultSerializer
  type: Field
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Serializer that would produce JSON Object version; used in cases where array output cannot be used.
  syntax:
    content: protected final BeanSerializerBase _defaultSerializer
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.asArraySerializer()
  id: asArraySerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: asArraySerializer()
  nameWithType: BeanAsArraySerializer.asArraySerializer()
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.asArraySerializer()
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.asArraySerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Mutant factory for creating a variant that output POJO as a JSON Array. Implementations may ignore this request if output as array is not possible (either at all, or reliably).
  syntax:
    content: protected BeanSerializerBase asArraySerializer()
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.isUnwrappingSerializer()
  id: isUnwrappingSerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: isUnwrappingSerializer()
  nameWithType: BeanAsArraySerializer.isUnwrappingSerializer()
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.isUnwrappingSerializer()
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.isUnwrappingSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Accessor for checking whether this serializer is an "unwrapping" serializer; this is necessary to know since it may also require caller to suppress writing of the leading property name.
  syntax:
    content: public boolean isUnwrappingSerializer()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: serialize(Object bean, JsonGenerator gen, SerializerProvider provider)
  nameWithType: BeanAsArraySerializer.serialize(Object bean, JsonGenerator gen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serialize(Object bean, JsonGenerator gen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Main serialization method that will delegate actual output to configured <xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter" data-throw-if-not-resolved="false">BeanPropertyWriter</xref> instances.
  syntax:
    content: public final void serialize(Object bean, JsonGenerator gen, SerializerProvider provider)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: serializeAsArray(Object bean, JsonGenerator gen, SerializerProvider provider)
  nameWithType: BeanAsArraySerializer.serializeAsArray(Object bean, JsonGenerator gen, SerializerProvider provider)
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeAsArray(Object bean, JsonGenerator gen, SerializerProvider provider)
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeAsArray*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: protected final void serializeAsArray(Object bean, JsonGenerator gen, SerializerProvider provider)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  id: serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: serializeWithType(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)
  nameWithType: BeanAsArraySerializer.serializeWithType(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeWithType(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: >-
    Method that can be called to ask implementation to serialize values of type this serializer handles, using specified type serializer for embedding necessary type information.


    Default implementation will throw <xref uid="" data-throw-if-not-resolved="false">UnsupportedOperationException</xref> to indicate that proper type handling needs to be implemented.


    For simple datatypes written as a single scalar value (JSON String, Number, Boolean), implementation would look like:


    ```java

    // note: method to call depends on whether this type is serialized as JSON scalar, object or Array!
      typeSer.writeTypePrefixForScalar(value, gen);
      serialize(value, gen, provider);
      typeSer.writeTypeSuffixForScalar(value, gen);
    ```


    and implementations for type serialized as JSON Arrays or Objects would differ slightly, as `START-ARRAY`/`END-ARRAY` and `START-OBJECT`/`END-OBJECT` pairs need to be properly handled with respect to serializing of contents.
  syntax:
    content: public void serializeWithType(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: toString()
  nameWithType: BeanAsArraySerializer.toString()
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.toString()
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.toString*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  id: unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: unwrappingSerializer(NameTransformer transformer)
  nameWithType: BeanAsArraySerializer.unwrappingSerializer(NameTransformer transformer)
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.unwrappingSerializer(NameTransformer transformer)
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.unwrappingSerializer*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: >-
    Method that will return serializer instance that produces "unwrapped" serialization, if applicable for type being serialized (which is the case for some serializers that produce JSON Objects as output). If no unwrapped serializer can be constructed, will simply return serializer as-is.


    Default implementation just returns serializer as-is, indicating that no unwrapped variant exists
  syntax:
    content: public JsonSerializer<Object> unwrappingSerializer(NameTransformer transformer)
    parameters:
    - id: transformer
      type: com.fasterxml.jackson.databind.util.NameTransformer
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withFilterId(java.lang.Object)
  id: withFilterId(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: withFilterId(Object filterId)
  nameWithType: BeanAsArraySerializer.withFilterId(Object filterId)
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withFilterId(Object filterId)
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withFilterId*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Mutant factory used for creating a new instance with different filter id (used with `JsonFilter` annotation)
  syntax:
    content: public BeanSerializerBase withFilterId(Object filterId)
    parameters:
    - id: filterId
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withIgnorals(java.util.Set<java.lang.String>)
  id: withIgnorals(java.util.Set<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: withIgnorals(Set<String> toIgnore)
  nameWithType: BeanAsArraySerializer.withIgnorals(Set<String> toIgnore)
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withIgnorals(Set<String> toIgnore)
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withIgnorals*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Mutant factory used for creating a new instance with additional set of properties to ignore (from properties this instance otherwise has)
  syntax:
    content: protected BeanAsArraySerializer withIgnorals(Set<String> toIgnore)
    parameters:
    - id: toIgnore
      type: java.util.Set<java.lang.String>
    return:
      type: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  id: withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: withObjectIdWriter(ObjectIdWriter objectIdWriter)
  nameWithType: BeanAsArraySerializer.withObjectIdWriter(ObjectIdWriter objectIdWriter)
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withObjectIdWriter(ObjectIdWriter objectIdWriter)
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withObjectIdWriter*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: Mutant factory used for creating a new instance with different <xref uid="com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter" data-throw-if-not-resolved="false">ObjectIdWriter</xref>.
  syntax:
    content: public BeanSerializerBase withObjectIdWriter(ObjectIdWriter objectIdWriter)
    parameters:
    - id: objectIdWriter
      type: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  id: withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer
  langs:
  - java
  name: withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  nameWithType: BeanAsArraySerializer.withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
  overload: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withProperties*
  type: Method
  package: com.fasterxml.jackson.databind.ser.impl
  summary: >-
    Mutant factory used for creating a new instance with modified set of properties.


    Note: in 2.11.x, need to keep non-abstract for slightly better compatibility (XML module extends)
  syntax:
    content: protected BeanSerializerBase withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties)
    parameters:
    - id: properties
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
    - id: filteredProperties
      type: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
    return:
      type: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
references:
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
  name: BeanSerializerBase
  nameWithType: BeanSerializerBase
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer*
  name: BeanAsArraySerializer
  nameWithType: BeanAsArraySerializer.BeanAsArraySerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.BeanAsArraySerializer
  package: com.fasterxml.jackson.databind.ser.impl
- uid: java.util.Set<java.lang.String>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
  name: ObjectIdWriter
  nameWithType: ObjectIdWriter
  fullName: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.NameTransformer
  name: NameTransformer
  nameWithType: NameTransformer
  fullName: com.fasterxml.jackson.databind.util.NameTransformer
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.unwrappingSerializer*
  name: unwrappingSerializer
  nameWithType: BeanAsArraySerializer.unwrappingSerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.unwrappingSerializer
  package: com.fasterxml.jackson.databind.ser.impl
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.isUnwrappingSerializer*
  name: isUnwrappingSerializer
  nameWithType: BeanAsArraySerializer.isUnwrappingSerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.isUnwrappingSerializer
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withObjectIdWriter*
  name: withObjectIdWriter
  nameWithType: BeanAsArraySerializer.withObjectIdWriter
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withObjectIdWriter
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withFilterId*
  name: withFilterId
  nameWithType: BeanAsArraySerializer.withFilterId
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withFilterId
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withIgnorals*
  name: withIgnorals
  nameWithType: BeanAsArraySerializer.withIgnorals
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withIgnorals
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
    name: BeanPropertyWriter
    fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withProperties*
  name: withProperties
  nameWithType: BeanAsArraySerializer.withProperties
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.withProperties
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.asArraySerializer*
  name: asArraySerializer
  nameWithType: BeanAsArraySerializer.asArraySerializer
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.asArraySerializer
  package: com.fasterxml.jackson.databind.ser.impl
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeWithType*
  name: serializeWithType
  nameWithType: BeanAsArraySerializer.serializeWithType
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeWithType
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serialize*
  name: serialize
  nameWithType: BeanAsArraySerializer.serialize
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serialize
  package: com.fasterxml.jackson.databind.ser.impl
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeAsArray*
  name: serializeAsArray
  nameWithType: BeanAsArraySerializer.serializeAsArray
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeAsArray
  package: com.fasterxml.jackson.databind.ser.impl
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.toString*
  name: toString
  nameWithType: BeanAsArraySerializer.toString
  fullName: com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.toString
  package: com.fasterxml.jackson.databind.ser.impl
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class<?>,JsonFormat.Feature)
  nameWithType: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class<?>,JsonFormat.Feature)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  name: JsonSerializer.isEmpty(SerializerProvider,T)
  nameWithType: JsonSerializer.isEmpty(SerializerProvider,T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class<?>)
  nameWithType: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.asArraySerializer()
  name: BeanSerializerBase.asArraySerializer()
  nameWithType: BeanSerializerBase.asArraySerializer()
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.asArraySerializer()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  name: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  nameWithType: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken)
  name: BeanSerializerBase._typeIdDef(TypeSerializer,Object,JsonToken)
  nameWithType: BeanSerializerBase._typeIdDef(TypeSerializer,Object,JsonToken)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeIdDef(com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanSerializerBase.serializeFieldsFiltered(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanSerializerBase.serializeFieldsFiltered(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  name: BeanSerializerBase.createContextual(SerializerProvider,BeanProperty)
  nameWithType: BeanSerializerBase.createContextual(SerializerProvider,BeanProperty)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  nameWithType: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
  name: StdSerializer.visitFloatFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  nameWithType: StdSerializer.visitFloatFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.usesObjectId()
  name: BeanSerializerBase.usesObjectId()
  nameWithType: BeanSerializerBase.usesObjectId()
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.usesObjectId()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
  name: BeanSerializerBase.withObjectIdWriter(ObjectIdWriter)
  nameWithType: BeanSerializerBase.withObjectIdWriter(ObjectIdWriter)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
  name: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)
  nameWithType: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.resolve(com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanSerializerBase.resolve(SerializerProvider)
  nameWithType: BeanSerializerBase.resolve(SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.resolve(com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  name: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonValueFormat)
  nameWithType: StdSerializer.visitStringFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonValueFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
  name: StdSerializer.getSchema(SerializerProvider,Type,boolean)
  nameWithType: StdSerializer.getSchema(SerializerProvider,Type,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  name: JsonSerializer.isUnwrappingSerializer()
  nameWithType: JsonSerializer.isUnwrappingSerializer()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
  name: StdSerializer._nonEmpty(Collection<?>)
  nameWithType: StdSerializer._nonEmpty(Collection<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection<?>)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: BeanSerializerBase.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: BeanSerializerBase.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
  name: StdSerializer.handledType()
  nameWithType: StdSerializer.handledType()
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.handledType()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
  name: StdSerializer.createSchemaNode(String,boolean)
  nameWithType: StdSerializer.createSchemaNode(String,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String,boolean)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
  name: StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)
  nameWithType: StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class<?>)
  nameWithType: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: BeanSerializerBase.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: BeanSerializerBase.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
  name: BeanSerializerBase.getSchema(SerializerProvider,Type)
  nameWithType: BeanSerializerBase.getSchema(SerializerProvider,Type)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  nameWithType: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withFilterId(java.lang.Object)
  name: BeanSerializerBase.withFilterId(Object)
  nameWithType: BeanSerializerBase.withFilterId(Object)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withFilterId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanSerializerBase.serialize(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanSerializerBase.serialize(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
  name: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)
  nameWithType: StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
  name: StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)
  nameWithType: StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: StdSerializer.serialize(T,JsonGenerator,SerializerProvider)
  nameWithType: StdSerializer.serialize(T,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
  name: BeanSerializerBase.findConvertingSerializer(SerializerProvider,BeanPropertyWriter)
  nameWithType: BeanSerializerBase.findConvertingSerializer(SerializerProvider,BeanPropertyWriter)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._customTypeId(java.lang.Object)
  name: BeanSerializerBase._customTypeId(Object)
  nameWithType: BeanSerializerBase._customTypeId(Object)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._customTypeId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
  name: BeanSerializerBase.withProperties(BeanPropertyWriter[],BeanPropertyWriter[])
  nameWithType: BeanSerializerBase.withProperties(BeanPropertyWriter[],BeanPropertyWriter[])
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
- uid: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  name: JsonSerializer.getDelegatee()
  nameWithType: JsonSerializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)
  name: BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,boolean)
  nameWithType: BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,boolean)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.lang.String[])
  name: BeanSerializerBase.withIgnorals(String[])
  nameWithType: BeanSerializerBase.withIgnorals(String[])
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.lang.String[])
- uid: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonSerializer.unwrappingSerializer(NameTransformer)
  nameWithType: JsonSerializer.unwrappingSerializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonFormatTypes)
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,jsonFormatVisitors.JsonFormatTypes)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.properties()
  name: BeanSerializerBase.properties()
  nameWithType: BeanSerializerBase.properties()
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.properties()
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
  name: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType,jsonFormatVisitors.JsonValueFormat)
  nameWithType: StdSerializer.visitIntFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonParser.NumberType,jsonFormatVisitors.JsonValueFormat)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser.NumberType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: StdSerializer.isDefaultSerializer(JsonSerializer<?>)
  nameWithType: StdSerializer.isDefaultSerializer(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)
  name: BeanSerializerBase._serializeObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer,WritableObjectId)
  nameWithType: BeanSerializerBase._serializeObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer,WritableObjectId)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
  name: StdSerializer.createSchemaNode(String)
  nameWithType: StdSerializer.createSchemaNode(String)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(java.lang.String)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer<?>,JavaType)
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer<?>,JavaType)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  name: JsonSerializer.isEmpty(T)
  nameWithType: JsonSerializer.isEmpty(T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanSerializerBase.serializeFields(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanSerializerBase.serializeFields(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set<java.lang.String>)
  name: BeanSerializerBase.withIgnorals(Set<String>)
  nameWithType: BeanSerializerBase.withIgnorals(Set<String>)
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set<java.lang.String>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
  name: StdSerializer._neitherNull(Object,Object)
  nameWithType: StdSerializer._neitherNull(Object,Object)
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._neitherNull(java.lang.Object,java.lang.Object)
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: ?>,JsonFormat.Feature)
  nameWithType: ?>,JsonFormat.Feature)
  fullName: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findFormatFeature(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatFeature(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer
  nameWithType: StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection
  name: StdSerializer._nonEmpty(Collection
  nameWithType: StdSerializer._nonEmpty(Collection
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer._nonEmpty(java.util.Collection
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class
  nameWithType: StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer.replaceDelegatee(JsonSerializer
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer
  nameWithType: StdSerializer.findContextualConvertingSerializer(SerializerProvider,BeanProperty,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.isDefaultSerializer(JsonSerializer
  nameWithType: StdSerializer.isDefaultSerializer(JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
  name: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer
  nameWithType: StdSerializer.visitArrayFormat(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer
- uid: ?>,com.fasterxml.jackson.databind.JavaType)
  name: ?>,JavaType)
  nameWithType: ?>,JavaType)
  fullName: ?>,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set
  name: BeanSerializerBase.withIgnorals(Set
  nameWithType: BeanSerializerBase.withIgnorals(Set
  fullName: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.withIgnorals(java.util.Set
- uid: java.lang.String>)
  name: String>)
  nameWithType: String>)
  fullName: java.lang.String>)
