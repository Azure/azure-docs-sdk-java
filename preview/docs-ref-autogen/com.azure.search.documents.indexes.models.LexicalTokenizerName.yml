### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName"
fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName"
name: "LexicalTokenizerName"
nameWithType: "LexicalTokenizerName"
summary: "Defines values for LexicalTokenizerName."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.ExpandableStringEnum?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.util.ExpandableStringEnum.<T>fromString(java.lang.String,java.lang.Class<T>)"
- "com.azure.core.util.ExpandableStringEnum.<T>values(java.lang.Class<T>)"
- "com.azure.core.util.ExpandableStringEnum.equals(java.lang.Object)"
- "com.azure.core.util.ExpandableStringEnum.hashCode()"
- "com.azure.core.util.ExpandableStringEnum.toString()"
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LexicalTokenizerName extends ExpandableStringEnum<LexicalTokenizerName>"
constructors:
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.LexicalTokenizerName()"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.LexicalTokenizerName()"
  name: "LexicalTokenizerName()"
  nameWithType: "LexicalTokenizerName.LexicalTokenizerName()"
  syntax: "public LexicalTokenizerName()"
fields:
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.CLASSIC"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.CLASSIC"
  name: "CLASSIC"
  nameWithType: "LexicalTokenizerName.CLASSIC"
  summary: "Static value classic for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName CLASSIC"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.EDGE_NGRAM"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.EDGE_NGRAM"
  name: "EDGE_NGRAM"
  nameWithType: "LexicalTokenizerName.EDGE_NGRAM"
  summary: "Static value edgeNGram for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName EDGE_NGRAM"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.KEYWORD"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.KEYWORD"
  name: "KEYWORD"
  nameWithType: "LexicalTokenizerName.KEYWORD"
  summary: "Static value keyword\\_v2 for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName KEYWORD"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.LETTER"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.LETTER"
  name: "LETTER"
  nameWithType: "LexicalTokenizerName.LETTER"
  summary: "Static value letter for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName LETTER"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.LOWERCASE"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.LOWERCASE"
  name: "LOWERCASE"
  nameWithType: "LexicalTokenizerName.LOWERCASE"
  summary: "Static value lowercase for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName LOWERCASE"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.MICROSOFT_LANGUAGE_STEMMING_TOKENIZER"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.MICROSOFT_LANGUAGE_STEMMING_TOKENIZER"
  name: "MICROSOFT_LANGUAGE_STEMMING_TOKENIZER"
  nameWithType: "LexicalTokenizerName.MICROSOFT_LANGUAGE_STEMMING_TOKENIZER"
  summary: "Static value microsoft\\_language\\_stemming\\_tokenizer for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName MICROSOFT_LANGUAGE_STEMMING_TOKENIZER"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.MICROSOFT_LANGUAGE_TOKENIZER"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.MICROSOFT_LANGUAGE_TOKENIZER"
  name: "MICROSOFT_LANGUAGE_TOKENIZER"
  nameWithType: "LexicalTokenizerName.MICROSOFT_LANGUAGE_TOKENIZER"
  summary: "Static value microsoft\\_language\\_tokenizer for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName MICROSOFT_LANGUAGE_TOKENIZER"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.NGRAM"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.NGRAM"
  name: "NGRAM"
  nameWithType: "LexicalTokenizerName.NGRAM"
  summary: "Static value nGram for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName NGRAM"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.PATH_HIERARCHY"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.PATH_HIERARCHY"
  name: "PATH_HIERARCHY"
  nameWithType: "LexicalTokenizerName.PATH_HIERARCHY"
  summary: "Static value path\\_hierarchy\\_v2 for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName PATH_HIERARCHY"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.PATTERN"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.PATTERN"
  name: "PATTERN"
  nameWithType: "LexicalTokenizerName.PATTERN"
  summary: "Static value pattern for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName PATTERN"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.STANDARD"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.STANDARD"
  name: "STANDARD"
  nameWithType: "LexicalTokenizerName.STANDARD"
  summary: "Static value standard\\_v2 for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName STANDARD"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.UAX_URL_EMAIL"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.UAX_URL_EMAIL"
  name: "UAX_URL_EMAIL"
  nameWithType: "LexicalTokenizerName.UAX_URL_EMAIL"
  summary: "Static value uax\\_url\\_email for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName UAX_URL_EMAIL"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.WHITESPACE"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.WHITESPACE"
  name: "WHITESPACE"
  nameWithType: "LexicalTokenizerName.WHITESPACE"
  summary: "Static value whitespace for LexicalTokenizerName."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final LexicalTokenizerName WHITESPACE"
methods:
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.fromString(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.fromString(String name)"
  name: "fromString(String name)"
  nameWithType: "LexicalTokenizerName.fromString(String name)"
  summary: "Creates or finds a LexicalTokenizerName from its string representation."
  modifiers:
  - "static"
  parameters:
  - description: "a name to look for."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static LexicalTokenizerName fromString(String name)"
  returns:
    description: "the corresponding LexicalTokenizerName."
    type: "<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.LexicalTokenizerName.values()"
  fullName: "com.azure.search.documents.indexes.models.LexicalTokenizerName.values()"
  name: "values()"
  nameWithType: "LexicalTokenizerName.values()"
  modifiers:
  - "static"
  syntax: "public static Collection<LexicalTokenizerName> values()"
  returns:
    description: "known LexicalTokenizerName values."
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.LexicalTokenizerName?alt=com.azure.search.documents.indexes.models.LexicalTokenizerName&text=LexicalTokenizerName\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.5.0-beta.11
