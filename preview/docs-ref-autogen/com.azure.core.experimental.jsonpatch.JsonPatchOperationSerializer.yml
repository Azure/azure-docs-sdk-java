### YamlMime:ManagedReference
items:
- uid: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer
  id: JsonPatchOperationSerializer
  artifact: com.azure:azure-core-experimental:1.0.0-beta.7
  parent: com.azure.core.experimental.jsonpatch
  children:
  - com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.JsonPatchOperationSerializer()
  - com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.getModule()
  - com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.serialize(com.azure.core.experimental.jsonpatch.JsonPatchOperation,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  langs:
  - java
  name: JsonPatchOperationSerializer
  nameWithType: JsonPatchOperationSerializer
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer
  type: Class
  package: com.azure.core.experimental.jsonpatch
  summary: Handles serialization of a <xref uid="com.azure.core.experimental.jsonpatch.JsonPatchOperation" data-throw-if-not-resolved="false">JsonPatchOperation</xref>.
  syntax:
    content: public class JsonPatchOperationSerializer extends JsonSerializer<JsonPatchOperation>
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializer
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonSerializer.handledType()
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  - com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  - com.fasterxml.jackson.databind.JsonSerializer.properties()
  - com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
  - com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.JsonPatchOperationSerializer()
  id: JsonPatchOperationSerializer()
  artifact: com.azure:azure-core-experimental:1.0.0-beta.7
  parent: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer
  langs:
  - java
  name: JsonPatchOperationSerializer()
  nameWithType: JsonPatchOperationSerializer.JsonPatchOperationSerializer()
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.JsonPatchOperationSerializer()
  overload: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.JsonPatchOperationSerializer*
  type: Constructor
  package: com.azure.core.experimental.jsonpatch
  syntax:
    content: public JsonPatchOperationSerializer()
- uid: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.getModule()
  id: getModule()
  artifact: com.azure:azure-core-experimental:1.0.0-beta.7
  parent: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer
  langs:
  - java
  name: getModule()
  nameWithType: JsonPatchOperationSerializer.getModule()
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.getModule()
  overload: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.getModule*
  type: Method
  package: com.azure.core.experimental.jsonpatch
  summary: Gets the module for this serializer that can be added into an <xref uid="" data-throw-if-not-resolved="false">ObjectMapper</xref>.
  syntax:
    content: public static Module getModule()
    return:
      type: com.fasterxml.jackson.databind.Module
      description: The module for this serializer.
- uid: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.serialize(com.azure.core.experimental.jsonpatch.JsonPatchOperation,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(com.azure.core.experimental.jsonpatch.JsonPatchOperation,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-core-experimental:1.0.0-beta.7
  parent: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer
  langs:
  - java
  name: serialize(JsonPatchOperation value, JsonGenerator gen, SerializerProvider serializers)
  nameWithType: JsonPatchOperationSerializer.serialize(JsonPatchOperation value, JsonGenerator gen, SerializerProvider serializers)
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.serialize(JsonPatchOperation value, JsonGenerator gen, SerializerProvider serializers)
  overload: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.serialize*
  type: Method
  package: com.azure.core.experimental.jsonpatch
  syntax:
    content: public void serialize(JsonPatchOperation value, JsonGenerator gen, SerializerProvider serializers)
    parameters:
    - id: value
      type: com.azure.core.experimental.jsonpatch.JsonPatchOperation
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: serializers
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
references:
- uid: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.JsonPatchOperationSerializer*
  name: JsonPatchOperationSerializer
  nameWithType: JsonPatchOperationSerializer.JsonPatchOperationSerializer
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.JsonPatchOperationSerializer
  package: com.azure.core.experimental.jsonpatch
- uid: com.fasterxml.jackson.databind.Module
  spec.java:
  - uid: com.fasterxml.jackson.databind.Module
    name: Module
    fullName: com.fasterxml.jackson.databind.Module
- uid: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.getModule*
  name: getModule
  nameWithType: JsonPatchOperationSerializer.getModule
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.getModule
  package: com.azure.core.experimental.jsonpatch
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.azure.core.experimental.jsonpatch.JsonPatchOperation
  name: JsonPatchOperation
  nameWithType: JsonPatchOperation
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchOperation
- uid: com.fasterxml.jackson.core.JsonGenerator
  spec.java:
  - uid: com.fasterxml.jackson.core.JsonGenerator
    name: JsonGenerator
    fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  spec.java:
  - uid: com.fasterxml.jackson.databind.SerializerProvider
    name: SerializerProvider
    fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.serialize*
  name: serialize
  nameWithType: JsonPatchOperationSerializer.serialize
  fullName: com.azure.core.experimental.jsonpatch.JsonPatchOperationSerializer.serialize
  package: com.azure.core.experimental.jsonpatch
- uid: com.fasterxml.jackson.databind.JsonSerializer<com.azure.core.experimental.jsonpatch.JsonPatchOperation>
  name: JsonSerializer<JsonPatchOperation>
  nameWithType: JsonSerializer<JsonPatchOperation>
  fullName: com.fasterxml.jackson.databind.JsonSerializer<com.azure.core.experimental.jsonpatch.JsonPatchOperation>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  name: JsonSerializer.isEmpty(SerializerProvider,T)
  nameWithType: JsonSerializer.isEmpty(SerializerProvider,T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.JsonSerializer.properties()
  name: JsonSerializer.properties()
  nameWithType: JsonSerializer.properties()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.properties()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: JsonSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: JsonSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  name: JsonSerializer.getDelegatee()
  nameWithType: JsonSerializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: JsonSerializer.serialize(T,JsonGenerator,SerializerProvider)
  nameWithType: JsonSerializer.serialize(T,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
  name: JsonSerializer.withFilterId(Object)
  nameWithType: JsonSerializer.withFilterId(Object)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonSerializer.handledType()
  name: JsonSerializer.handledType()
  nameWithType: JsonSerializer.handledType()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.handledType()
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  name: JsonSerializer.isEmpty(T)
  nameWithType: JsonSerializer.isEmpty(T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
- uid: com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
  name: JsonSerializer.usesObjectId()
  nameWithType: JsonSerializer.usesObjectId()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
- uid: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonSerializer.unwrappingSerializer(NameTransformer)
  nameWithType: JsonSerializer.unwrappingSerializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  name: JsonSerializer.isUnwrappingSerializer()
  nameWithType: JsonSerializer.isUnwrappingSerializer()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer.replaceDelegatee(JsonSerializer
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
