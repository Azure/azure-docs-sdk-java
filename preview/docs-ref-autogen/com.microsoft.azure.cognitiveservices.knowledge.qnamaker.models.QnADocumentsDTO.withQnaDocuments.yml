### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO.withQnaDocuments*"
fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO.withQnaDocuments"
name: "withQnaDocuments"
nameWithType: "QnADocumentsDTO.withQnaDocuments"
members:
- uid: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO.withQnaDocuments(java.util.List<com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO>)"
  fullName: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO.withQnaDocuments(List<QnADTO> qnaDocuments)"
  name: "withQnaDocuments(List<QnADTO> qnaDocuments)"
  nameWithType: "QnADocumentsDTO.withQnaDocuments(List<QnADTO> qnaDocuments)"
  summary: "Set the qnaDocuments value."
  parameters:
  - description: "the qnaDocuments value to set"
    name: "qnaDocuments"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADTO&text=QnADTO\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public QnADocumentsDTO withQnaDocuments(List<QnADTO> qnaDocuments)"
  returns:
    description: "the QnADocumentsDTO object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO?alt=com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models.QnADocumentsDTO&text=QnADocumentsDTO\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-qnamaker:1.0.0-beta.2
