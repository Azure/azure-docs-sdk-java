### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._readBinary*"
fullName: "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._readBinary"
name: "_readBinary"
nameWithType: "UTF8DataInputJsonParser._readBinary"
members:
- uid: "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[])"
  fullName: "com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._readBinary(Base64Variant b64variant, OutputStream out, byte[] buffer)"
  name: "_readBinary(Base64Variant b64variant, OutputStream out, byte[] buffer)"
  nameWithType: "UTF8DataInputJsonParser._readBinary(Base64Variant b64variant, OutputStream out, byte[] buffer)"
  parameters:
  - name: "b64variant"
    type: "<xref href=\"com.fasterxml.jackson.core.Base64Variant?alt=com.fasterxml.jackson.core.Base64Variant&text=Base64Variant\" data-throw-if-not-resolved=\"False\" />"
  - name: "out"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "buffer"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "protected int _readBinary(Base64Variant b64variant, OutputStream out, byte[] buffer)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
