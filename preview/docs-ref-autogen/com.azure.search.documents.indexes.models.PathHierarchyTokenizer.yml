### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  id: PathHierarchyTokenizer
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models
  children:
  - com.azure.search.documents.indexes.models.PathHierarchyTokenizer.PathHierarchyTokenizer(java.lang.String)
  - com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getDelimiter()
  - com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getMaxTokenLength()
  - com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getNumberOfTokensToSkip()
  - com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getReplacement()
  - com.azure.search.documents.indexes.models.PathHierarchyTokenizer.isTokenOrderReversed()
  - com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setDelimiter(java.lang.Character)
  - com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setMaxTokenLength(java.lang.Integer)
  - com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setNumberOfTokensToSkip(java.lang.Integer)
  - com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setReplacement(java.lang.Character)
  - com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setTokenOrderReversed(java.lang.Boolean)
  langs:
  - java
  name: PathHierarchyTokenizer
  nameWithType: PathHierarchyTokenizer
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  type: Class
  package: com.azure.search.documents.indexes.models
  summary: Tokenizer for path-like hierarchies. This tokenizer is implemented using Apache Lucene.
  syntax:
    content: public final class PathHierarchyTokenizer extends LexicalTokenizer
  inheritance:
  - java.lang.Object
  - com.azure.search.documents.indexes.models.LexicalTokenizer
  inheritedMembers:
  - com.azure.search.documents.indexes.models.LexicalTokenizer.getName()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.PathHierarchyTokenizer(java.lang.String)
  id: PathHierarchyTokenizer(java.lang.String)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  langs:
  - java
  name: PathHierarchyTokenizer(String name)
  nameWithType: PathHierarchyTokenizer.PathHierarchyTokenizer(String name)
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.PathHierarchyTokenizer(String name)
  overload: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.PathHierarchyTokenizer*
  type: Constructor
  package: com.azure.search.documents.indexes.models
  summary: Constructor of <xref uid="com.azure.search.documents.indexes.models.PathHierarchyTokenizer" data-throw-if-not-resolved="false">PathHierarchyTokenizer</xref>.
  syntax:
    content: public PathHierarchyTokenizer(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: >-
        The name of the tokenizer. It must only contain letters, digits, spaces,
         dashes or underscores, can only start and end with alphanumeric
         characters, and is limited to 128 characters.
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getDelimiter()
  id: getDelimiter()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  langs:
  - java
  name: getDelimiter()
  nameWithType: PathHierarchyTokenizer.getDelimiter()
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getDelimiter()
  overload: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getDelimiter*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the delimiter property: The delimiter character to use. Default is "/".'
  syntax:
    content: public Character getDelimiter()
    return:
      type: java.lang.Character
      description: the delimiter value.
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getMaxTokenLength()
  id: getMaxTokenLength()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  langs:
  - java
  name: getMaxTokenLength()
  nameWithType: PathHierarchyTokenizer.getMaxTokenLength()
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getMaxTokenLength()
  overload: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getMaxTokenLength*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the maxTokenLength property: The maximum token length. Default and maximum is 300.'
  syntax:
    content: public Integer getMaxTokenLength()
    return:
      type: java.lang.Integer
      description: the maxTokenLength value.
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getNumberOfTokensToSkip()
  id: getNumberOfTokensToSkip()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  langs:
  - java
  name: getNumberOfTokensToSkip()
  nameWithType: PathHierarchyTokenizer.getNumberOfTokensToSkip()
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getNumberOfTokensToSkip()
  overload: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getNumberOfTokensToSkip*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the numberOfTokensToSkip property: The number of initial tokens to skip. Default is 0.'
  syntax:
    content: public Integer getNumberOfTokensToSkip()
    return:
      type: java.lang.Integer
      description: the numberOfTokensToSkip value.
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getReplacement()
  id: getReplacement()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  langs:
  - java
  name: getReplacement()
  nameWithType: PathHierarchyTokenizer.getReplacement()
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getReplacement()
  overload: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getReplacement*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the replacement property: A value that, if set, replaces the delimiter character. Default is "/".'
  syntax:
    content: public Character getReplacement()
    return:
      type: java.lang.Character
      description: the replacement value.
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.isTokenOrderReversed()
  id: isTokenOrderReversed()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  langs:
  - java
  name: isTokenOrderReversed()
  nameWithType: PathHierarchyTokenizer.isTokenOrderReversed()
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.isTokenOrderReversed()
  overload: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.isTokenOrderReversed*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the reverseTokenOrder property: A value indicating whether to generate tokens in reverse order. Default is false.'
  syntax:
    content: public Boolean isTokenOrderReversed()
    return:
      type: java.lang.Boolean
      description: the reverseTokenOrder value.
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setDelimiter(java.lang.Character)
  id: setDelimiter(java.lang.Character)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  langs:
  - java
  name: setDelimiter(Character delimiter)
  nameWithType: PathHierarchyTokenizer.setDelimiter(Character delimiter)
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setDelimiter(Character delimiter)
  overload: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setDelimiter*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the delimiter property: The delimiter character to use. Default is "/".'
  syntax:
    content: public PathHierarchyTokenizer setDelimiter(Character delimiter)
    parameters:
    - id: delimiter
      type: java.lang.Character
      description: the delimiter value to set.
    return:
      type: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
      description: the PathHierarchyTokenizerV2 object itself.
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setMaxTokenLength(java.lang.Integer)
  id: setMaxTokenLength(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  langs:
  - java
  name: setMaxTokenLength(Integer maxTokenLength)
  nameWithType: PathHierarchyTokenizer.setMaxTokenLength(Integer maxTokenLength)
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setMaxTokenLength(Integer maxTokenLength)
  overload: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setMaxTokenLength*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the maxTokenLength property: The maximum token length. Default and maximum is 300.'
  syntax:
    content: public PathHierarchyTokenizer setMaxTokenLength(Integer maxTokenLength)
    parameters:
    - id: maxTokenLength
      type: java.lang.Integer
      description: the maxTokenLength value to set.
    return:
      type: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
      description: the PathHierarchyTokenizerV2 object itself.
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setNumberOfTokensToSkip(java.lang.Integer)
  id: setNumberOfTokensToSkip(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  langs:
  - java
  name: setNumberOfTokensToSkip(Integer numberOfTokensToSkip)
  nameWithType: PathHierarchyTokenizer.setNumberOfTokensToSkip(Integer numberOfTokensToSkip)
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setNumberOfTokensToSkip(Integer numberOfTokensToSkip)
  overload: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setNumberOfTokensToSkip*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the numberOfTokensToSkip property: The number of initial tokens to skip. Default is 0.'
  syntax:
    content: public PathHierarchyTokenizer setNumberOfTokensToSkip(Integer numberOfTokensToSkip)
    parameters:
    - id: numberOfTokensToSkip
      type: java.lang.Integer
      description: the numberOfTokensToSkip value to set.
    return:
      type: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
      description: the PathHierarchyTokenizerV2 object itself.
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setReplacement(java.lang.Character)
  id: setReplacement(java.lang.Character)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  langs:
  - java
  name: setReplacement(Character replacement)
  nameWithType: PathHierarchyTokenizer.setReplacement(Character replacement)
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setReplacement(Character replacement)
  overload: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setReplacement*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the replacement property: A value that, if set, replaces the delimiter character. Default is "/".'
  syntax:
    content: public PathHierarchyTokenizer setReplacement(Character replacement)
    parameters:
    - id: replacement
      type: java.lang.Character
      description: the replacement value to set.
    return:
      type: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
      description: the PathHierarchyTokenizerV2 object itself.
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setTokenOrderReversed(java.lang.Boolean)
  id: setTokenOrderReversed(java.lang.Boolean)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
  langs:
  - java
  name: setTokenOrderReversed(Boolean tokenOrderReversed)
  nameWithType: PathHierarchyTokenizer.setTokenOrderReversed(Boolean tokenOrderReversed)
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setTokenOrderReversed(Boolean tokenOrderReversed)
  overload: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setTokenOrderReversed*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the reverseTokenOrder property: A value indicating whether to generate tokens in reverse order. Default is false.'
  syntax:
    content: public PathHierarchyTokenizer setTokenOrderReversed(Boolean tokenOrderReversed)
    parameters:
    - id: tokenOrderReversed
      type: java.lang.Boolean
      description: the reverseTokenOrder value to set.
    return:
      type: com.azure.search.documents.indexes.models.PathHierarchyTokenizer
      description: the PathHierarchyTokenizerV2 object itself.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.PathHierarchyTokenizer*
  name: PathHierarchyTokenizer
  nameWithType: PathHierarchyTokenizer.PathHierarchyTokenizer
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.PathHierarchyTokenizer
  package: com.azure.search.documents.indexes.models
- uid: java.lang.Character
  spec.java:
  - uid: java.lang.Character
    name: Character
    fullName: java.lang.Character
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getDelimiter*
  name: getDelimiter
  nameWithType: PathHierarchyTokenizer.getDelimiter
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getDelimiter
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setDelimiter*
  name: setDelimiter
  nameWithType: PathHierarchyTokenizer.setDelimiter
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setDelimiter
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getReplacement*
  name: getReplacement
  nameWithType: PathHierarchyTokenizer.getReplacement
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getReplacement
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setReplacement*
  name: setReplacement
  nameWithType: PathHierarchyTokenizer.setReplacement
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setReplacement
  package: com.azure.search.documents.indexes.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getMaxTokenLength*
  name: getMaxTokenLength
  nameWithType: PathHierarchyTokenizer.getMaxTokenLength
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getMaxTokenLength
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setMaxTokenLength*
  name: setMaxTokenLength
  nameWithType: PathHierarchyTokenizer.setMaxTokenLength
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setMaxTokenLength
  package: com.azure.search.documents.indexes.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.isTokenOrderReversed*
  name: isTokenOrderReversed
  nameWithType: PathHierarchyTokenizer.isTokenOrderReversed
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.isTokenOrderReversed
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setTokenOrderReversed*
  name: setTokenOrderReversed
  nameWithType: PathHierarchyTokenizer.setTokenOrderReversed
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setTokenOrderReversed
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getNumberOfTokensToSkip*
  name: getNumberOfTokensToSkip
  nameWithType: PathHierarchyTokenizer.getNumberOfTokensToSkip
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.getNumberOfTokensToSkip
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setNumberOfTokensToSkip*
  name: setNumberOfTokensToSkip
  nameWithType: PathHierarchyTokenizer.setNumberOfTokensToSkip
  fullName: com.azure.search.documents.indexes.models.PathHierarchyTokenizer.setNumberOfTokensToSkip
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.LexicalTokenizer
  name: LexicalTokenizer
  nameWithType: LexicalTokenizer
  fullName: com.azure.search.documents.indexes.models.LexicalTokenizer
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.search.documents.indexes.models.LexicalTokenizer.getName()
  name: LexicalTokenizer.getName()
  nameWithType: LexicalTokenizer.getName()
  fullName: com.azure.search.documents.indexes.models.LexicalTokenizer.getName()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
