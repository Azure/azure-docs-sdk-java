### YamlMime:JavaMember
uid: "com.azure.resourcemanager.mediaservices.models.Mp4Format.withOutputFiles*"
fullName: "com.azure.resourcemanager.mediaservices.models.Mp4Format.withOutputFiles"
name: "withOutputFiles"
nameWithType: "Mp4Format.withOutputFiles"
members:
- uid: "com.azure.resourcemanager.mediaservices.models.Mp4Format.withOutputFiles(java.util.List<com.azure.resourcemanager.mediaservices.models.OutputFile>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Mp4Format.withOutputFiles(List<OutputFile> outputFiles)"
  name: "withOutputFiles(List<OutputFile> outputFiles)"
  nameWithType: "Mp4Format.withOutputFiles(List<OutputFile> outputFiles)"
  summary: "Set the outputFiles property: The list of output files to produce. Each entry in the list is a set of audio and video layer labels to be muxed together ."
  overridden: "com.azure.resourcemanager.mediaservices.models.MultiBitrateFormat.withOutputFiles(java.util.List<com.azure.resourcemanager.mediaservices.models.OutputFile>)"
  parameters:
  - name: "outputFiles"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.OutputFile?alt=com.azure.resourcemanager.mediaservices.models.OutputFile&text=OutputFile\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mp4Format withOutputFiles(List<OutputFile> outputFiles)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Mp4Format?alt=com.azure.resourcemanager.mediaservices.models.Mp4Format&text=Mp4Format\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:1.0.0-beta.1
