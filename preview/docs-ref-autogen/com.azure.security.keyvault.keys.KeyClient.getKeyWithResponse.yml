### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyClient.getKeyWithResponse*"
fullName: "com.azure.security.keyvault.keys.KeyClient.getKeyWithResponse"
name: "getKeyWithResponse"
nameWithType: "KeyClient.getKeyWithResponse"
members:
- uid: "com.azure.security.keyvault.keys.KeyClient.getKeyWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.security.keyvault.keys.KeyClient.getKeyWithResponse(String name, String version, Context context)"
  name: "getKeyWithResponse(String name, String version, Context context)"
  nameWithType: "KeyClient.getKeyWithResponse(String name, String version, Context context)"
  summary: "Gets the public part of the specified key and key version. The get key operation is applicable to all key types and it requires the `keys/get` permission.\n\n**Code Samples**\n\nGets a specific version of the key in the key vault. Prints out the details of the returned key.\n\n```java\nString keyVersion = \"6A385B124DEF4096AF1361A85B16C204\";\n KeyVaultKey keyWithVersion = keyClient.getKeyWithResponse(\"keyName\", keyVersion,\n     new Context(key1, value1)).getValue();\n System.out.printf(\"Key is returned with name %s and id %s %n\", keyWithVersion.getName(),\n     keyWithVersion.getId());\n```"
  parameters:
  - description: "The name of the key, cannot be null"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The version of the key to retrieve. If this is an empty String or null, this call is\n     equivalent to calling <xref uid=\"com.azure.security.keyvault.keys.KeyClient.getKey(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyClient#getKey(String)\"></xref>, with the latest version being retrieved."
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<KeyVaultKey> getKeyWithResponse(String name, String version, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the requested <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>.\n The content of the key is null if both <code>name</code> and <code>version</code> are null or empty."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.3.0-beta.3
