### YamlMime:ManagedReference
items:
- uid: "com.azure.search.models.SynonymMap"
  id: "SynonymMap"
  parent: "com.azure.search.models"
  children:
  - "com.azure.search.models.SynonymMap.SynonymMap()"
  - "com.azure.search.models.SynonymMap.getETag()"
  - "com.azure.search.models.SynonymMap.getEncryptionKey()"
  - "com.azure.search.models.SynonymMap.getFormat()"
  - "com.azure.search.models.SynonymMap.getName()"
  - "com.azure.search.models.SynonymMap.getSynonyms()"
  - "com.azure.search.models.SynonymMap.setETag(java.lang.String)"
  - "com.azure.search.models.SynonymMap.setEncryptionKey(com.azure.search.models.EncryptionKey)"
  - "com.azure.search.models.SynonymMap.setFormat(java.lang.String)"
  - "com.azure.search.models.SynonymMap.setName(java.lang.String)"
  - "com.azure.search.models.SynonymMap.setSynonyms(java.lang.String)"
  langs:
  - "java"
  name: "SynonymMap"
  nameWithType: "SynonymMap"
  fullName: "com.azure.search.models.SynonymMap"
  type: "Class"
  package: "com.azure.search.models"
  summary: "Represents a synonym map definition."
  syntax:
    content: "public final class SynonymMap"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.search.models.SynonymMap.SynonymMap()"
  id: "SynonymMap()"
  parent: "com.azure.search.models.SynonymMap"
  langs:
  - "java"
  name: "SynonymMap()"
  nameWithType: "SynonymMap.SynonymMap()"
  fullName: "com.azure.search.models.SynonymMap.SynonymMap()"
  overload: "com.azure.search.models.SynonymMap.SynonymMap*"
  type: "Constructor"
  package: "com.azure.search.models"
  summary: "Creates an instance of SynonymMap class."
  syntax:
    content: "public SynonymMap()"
- uid: "com.azure.search.models.SynonymMap.getETag()"
  id: "getETag()"
  parent: "com.azure.search.models.SynonymMap"
  langs:
  - "java"
  name: "getETag()"
  nameWithType: "SynonymMap.getETag()"
  fullName: "com.azure.search.models.SynonymMap.getETag()"
  overload: "com.azure.search.models.SynonymMap.getETag*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Get the eTag property: The ETag of the synonym map."
  syntax:
    content: "public String getETag()"
    return:
      type: "java.lang.String"
      description: "the eTag value."
- uid: "com.azure.search.models.SynonymMap.getEncryptionKey()"
  id: "getEncryptionKey()"
  parent: "com.azure.search.models.SynonymMap"
  langs:
  - "java"
  name: "getEncryptionKey()"
  nameWithType: "SynonymMap.getEncryptionKey()"
  fullName: "com.azure.search.models.SynonymMap.getEncryptionKey()"
  overload: "com.azure.search.models.SynonymMap.getEncryptionKey*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Get the encryptionKey property: A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019."
  syntax:
    content: "public EncryptionKey getEncryptionKey()"
    return:
      type: "com.azure.search.models.EncryptionKey"
      description: "the encryptionKey value."
- uid: "com.azure.search.models.SynonymMap.getFormat()"
  id: "getFormat()"
  parent: "com.azure.search.models.SynonymMap"
  langs:
  - "java"
  name: "getFormat()"
  nameWithType: "SynonymMap.getFormat()"
  fullName: "com.azure.search.models.SynonymMap.getFormat()"
  overload: "com.azure.search.models.SynonymMap.getFormat*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Get the format property: The format of the synonym map. Only the 'solr' format is currently supported."
  syntax:
    content: "public String getFormat()"
    return:
      type: "java.lang.String"
      description: "the format value."
- uid: "com.azure.search.models.SynonymMap.getName()"
  id: "getName()"
  parent: "com.azure.search.models.SynonymMap"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "SynonymMap.getName()"
  fullName: "com.azure.search.models.SynonymMap.getName()"
  overload: "com.azure.search.models.SynonymMap.getName*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Get the name property: The name of the synonym map."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
      description: "the name value."
- uid: "com.azure.search.models.SynonymMap.getSynonyms()"
  id: "getSynonyms()"
  parent: "com.azure.search.models.SynonymMap"
  langs:
  - "java"
  name: "getSynonyms()"
  nameWithType: "SynonymMap.getSynonyms()"
  fullName: "com.azure.search.models.SynonymMap.getSynonyms()"
  overload: "com.azure.search.models.SynonymMap.getSynonyms*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Get the synonyms property: A series of synonym rules in the specified synonym map format. The rules must be separated by newlines."
  syntax:
    content: "public String getSynonyms()"
    return:
      type: "java.lang.String"
      description: "the synonyms value."
- uid: "com.azure.search.models.SynonymMap.setETag(java.lang.String)"
  id: "setETag(java.lang.String)"
  parent: "com.azure.search.models.SynonymMap"
  langs:
  - "java"
  name: "setETag(String eTag)"
  nameWithType: "SynonymMap.setETag(String eTag)"
  fullName: "com.azure.search.models.SynonymMap.setETag(String eTag)"
  overload: "com.azure.search.models.SynonymMap.setETag*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Set the eTag property: The ETag of the synonym map."
  syntax:
    content: "public SynonymMap setETag(String eTag)"
    parameters:
    - id: "eTag"
      type: "java.lang.String"
      description: "the eTag value to set."
    return:
      type: "com.azure.search.models.SynonymMap"
      description: "the SynonymMap object itself."
- uid: "com.azure.search.models.SynonymMap.setEncryptionKey(com.azure.search.models.EncryptionKey)"
  id: "setEncryptionKey(com.azure.search.models.EncryptionKey)"
  parent: "com.azure.search.models.SynonymMap"
  langs:
  - "java"
  name: "setEncryptionKey(EncryptionKey encryptionKey)"
  nameWithType: "SynonymMap.setEncryptionKey(EncryptionKey encryptionKey)"
  fullName: "com.azure.search.models.SynonymMap.setEncryptionKey(EncryptionKey encryptionKey)"
  overload: "com.azure.search.models.SynonymMap.setEncryptionKey*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Set the encryptionKey property: A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019."
  syntax:
    content: "public SynonymMap setEncryptionKey(EncryptionKey encryptionKey)"
    parameters:
    - id: "encryptionKey"
      type: "com.azure.search.models.EncryptionKey"
      description: "the encryptionKey value to set."
    return:
      type: "com.azure.search.models.SynonymMap"
      description: "the SynonymMap object itself."
- uid: "com.azure.search.models.SynonymMap.setFormat(java.lang.String)"
  id: "setFormat(java.lang.String)"
  parent: "com.azure.search.models.SynonymMap"
  langs:
  - "java"
  name: "setFormat(String format)"
  nameWithType: "SynonymMap.setFormat(String format)"
  fullName: "com.azure.search.models.SynonymMap.setFormat(String format)"
  overload: "com.azure.search.models.SynonymMap.setFormat*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Set the format property: The format of the synonym map. Only the 'solr' format is currently supported."
  syntax:
    content: "public SynonymMap setFormat(String format)"
    parameters:
    - id: "format"
      type: "java.lang.String"
      description: "the format value to set."
    return:
      type: "com.azure.search.models.SynonymMap"
      description: "the SynonymMap object itself."
- uid: "com.azure.search.models.SynonymMap.setName(java.lang.String)"
  id: "setName(java.lang.String)"
  parent: "com.azure.search.models.SynonymMap"
  langs:
  - "java"
  name: "setName(String name)"
  nameWithType: "SynonymMap.setName(String name)"
  fullName: "com.azure.search.models.SynonymMap.setName(String name)"
  overload: "com.azure.search.models.SynonymMap.setName*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Set the name property: The name of the synonym map."
  syntax:
    content: "public SynonymMap setName(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "the name value to set."
    return:
      type: "com.azure.search.models.SynonymMap"
      description: "the SynonymMap object itself."
- uid: "com.azure.search.models.SynonymMap.setSynonyms(java.lang.String)"
  id: "setSynonyms(java.lang.String)"
  parent: "com.azure.search.models.SynonymMap"
  langs:
  - "java"
  name: "setSynonyms(String synonyms)"
  nameWithType: "SynonymMap.setSynonyms(String synonyms)"
  fullName: "com.azure.search.models.SynonymMap.setSynonyms(String synonyms)"
  overload: "com.azure.search.models.SynonymMap.setSynonyms*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Set the synonyms property: A series of synonym rules in the specified synonym map format. The rules must be separated by newlines."
  syntax:
    content: "public SynonymMap setSynonyms(String synonyms)"
    parameters:
    - id: "synonyms"
      type: "java.lang.String"
      description: "the synonyms value to set."
    return:
      type: "com.azure.search.models.SynonymMap"
      description: "the SynonymMap object itself."
references:
- uid: "com.azure.search.models.SynonymMap.SynonymMap*"
  name: "SynonymMap"
  nameWithType: "SynonymMap.SynonymMap"
  fullName: "com.azure.search.models.SynonymMap.SynonymMap"
  package: "com.azure.search.models"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.search.models.SynonymMap.getName*"
  name: "getName"
  nameWithType: "SynonymMap.getName"
  fullName: "com.azure.search.models.SynonymMap.getName"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.SynonymMap.setName*"
  name: "setName"
  nameWithType: "SynonymMap.setName"
  fullName: "com.azure.search.models.SynonymMap.setName"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.SynonymMap.getFormat*"
  name: "getFormat"
  nameWithType: "SynonymMap.getFormat"
  fullName: "com.azure.search.models.SynonymMap.getFormat"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.SynonymMap.setFormat*"
  name: "setFormat"
  nameWithType: "SynonymMap.setFormat"
  fullName: "com.azure.search.models.SynonymMap.setFormat"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.SynonymMap.getSynonyms*"
  name: "getSynonyms"
  nameWithType: "SynonymMap.getSynonyms"
  fullName: "com.azure.search.models.SynonymMap.getSynonyms"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.SynonymMap.setSynonyms*"
  name: "setSynonyms"
  nameWithType: "SynonymMap.setSynonyms"
  fullName: "com.azure.search.models.SynonymMap.setSynonyms"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.EncryptionKey"
  name: "EncryptionKey"
  nameWithType: "EncryptionKey"
  fullName: "com.azure.search.models.EncryptionKey"
- uid: "com.azure.search.models.SynonymMap.getEncryptionKey*"
  name: "getEncryptionKey"
  nameWithType: "SynonymMap.getEncryptionKey"
  fullName: "com.azure.search.models.SynonymMap.getEncryptionKey"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.SynonymMap.setEncryptionKey*"
  name: "setEncryptionKey"
  nameWithType: "SynonymMap.setEncryptionKey"
  fullName: "com.azure.search.models.SynonymMap.setEncryptionKey"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.SynonymMap.getETag*"
  name: "getETag"
  nameWithType: "SynonymMap.getETag"
  fullName: "com.azure.search.models.SynonymMap.getETag"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.SynonymMap.setETag*"
  name: "setETag"
  nameWithType: "SynonymMap.setETag"
  fullName: "com.azure.search.models.SynonymMap.setETag"
  package: "com.azure.search.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
