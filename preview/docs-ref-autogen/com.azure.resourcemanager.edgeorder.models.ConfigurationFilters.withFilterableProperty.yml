### YamlMime:JavaMember
uid: "com.azure.resourcemanager.edgeorder.models.ConfigurationFilters.withFilterableProperty*"
fullName: "com.azure.resourcemanager.edgeorder.models.ConfigurationFilters.withFilterableProperty"
name: "withFilterableProperty"
nameWithType: "ConfigurationFilters.withFilterableProperty"
members:
- uid: "com.azure.resourcemanager.edgeorder.models.ConfigurationFilters.withFilterableProperty(java.util.List<com.azure.resourcemanager.edgeorder.models.FilterableProperty>)"
  fullName: "com.azure.resourcemanager.edgeorder.models.ConfigurationFilters.withFilterableProperty(List<FilterableProperty> filterableProperty)"
  name: "withFilterableProperty(List<FilterableProperty> filterableProperty)"
  nameWithType: "ConfigurationFilters.withFilterableProperty(List<FilterableProperty> filterableProperty)"
  summary: "Set the filterableProperty property: Filters specific to product."
  parameters:
  - description: "the filterableProperty value to set."
    name: "filterableProperty"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.edgeorder.models.FilterableProperty?alt=com.azure.resourcemanager.edgeorder.models.FilterableProperty&text=FilterableProperty\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ConfigurationFilters withFilterableProperty(List<FilterableProperty> filterableProperty)"
  returns:
    description: "the ConfigurationFilters object itself."
    type: "<xref href=\"com.azure.resourcemanager.edgeorder.models.ConfigurationFilters?alt=com.azure.resourcemanager.edgeorder.models.ConfigurationFilters&text=ConfigurationFilters\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.edgeorder.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-edgeorder:1.0.0-beta.1
