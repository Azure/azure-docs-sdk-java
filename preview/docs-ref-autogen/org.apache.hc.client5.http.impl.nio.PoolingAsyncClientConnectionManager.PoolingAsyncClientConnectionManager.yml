### YamlMime:JavaMember
uid: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager*"
fullName: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager"
name: "PoolingAsyncClientConnectionManager"
nameWithType: "PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager"
members:
- uid: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager()"
  fullName: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager()"
  name: "PoolingAsyncClientConnectionManager()"
  nameWithType: "PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager()"
  syntax: "public PoolingAsyncClientConnectionManager()"
- uid: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(org.apache.hc.client5.http.nio.AsyncClientConnectionOperator,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue)"
  fullName: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(AsyncClientConnectionOperator connectionOperator, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive)"
  name: "PoolingAsyncClientConnectionManager(AsyncClientConnectionOperator connectionOperator, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive)"
  nameWithType: "PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(AsyncClientConnectionOperator connectionOperator, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive)"
  parameters:
  - name: "connectionOperator"
    type: "<xref href=\"org.apache.hc.client5.http.nio.AsyncClientConnectionOperator?alt=org.apache.hc.client5.http.nio.AsyncClientConnectionOperator&text=AsyncClientConnectionOperator\" data-throw-if-not-resolved=\"False\" />"
  - name: "poolConcurrencyPolicy"
    type: "<xref href=\"org.apache.hc.core5.pool.PoolConcurrencyPolicy?alt=org.apache.hc.core5.pool.PoolConcurrencyPolicy&text=PoolConcurrencyPolicy\" data-throw-if-not-resolved=\"False\" />"
  - name: "poolReusePolicy"
    type: "<xref href=\"org.apache.hc.core5.pool.PoolReusePolicy?alt=org.apache.hc.core5.pool.PoolReusePolicy&text=PoolReusePolicy\" data-throw-if-not-resolved=\"False\" />"
  - name: "timeToLive"
    type: "<xref href=\"org.apache.hc.core5.util.TimeValue?alt=org.apache.hc.core5.util.TimeValue&text=TimeValue\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected PoolingAsyncClientConnectionManager(AsyncClientConnectionOperator connectionOperator, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive)"
- uid: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.core5.http.nio.ssl.TlsStrategy>)"
  fullName: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup)"
  name: "PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup)"
  nameWithType: "PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup)"
  parameters:
  - name: "tlsStrategyLookup"
    type: "<xref href=\"org.apache.hc.core5.http.config.Lookup?alt=org.apache.hc.core5.http.config.Lookup&text=Lookup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.hc.core5.http.nio.ssl.TlsStrategy?alt=org.apache.hc.core5.http.nio.ssl.TlsStrategy&text=TlsStrategy\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup)"
- uid: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.core5.http.nio.ssl.TlsStrategy>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue)"
  fullName: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive)"
  name: "PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive)"
  nameWithType: "PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive)"
  parameters:
  - name: "tlsStrategyLookup"
    type: "<xref href=\"org.apache.hc.core5.http.config.Lookup?alt=org.apache.hc.core5.http.config.Lookup&text=Lookup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.hc.core5.http.nio.ssl.TlsStrategy?alt=org.apache.hc.core5.http.nio.ssl.TlsStrategy&text=TlsStrategy\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "poolConcurrencyPolicy"
    type: "<xref href=\"org.apache.hc.core5.pool.PoolConcurrencyPolicy?alt=org.apache.hc.core5.pool.PoolConcurrencyPolicy&text=PoolConcurrencyPolicy\" data-throw-if-not-resolved=\"False\" />"
  - name: "poolReusePolicy"
    type: "<xref href=\"org.apache.hc.core5.pool.PoolReusePolicy?alt=org.apache.hc.core5.pool.PoolReusePolicy&text=PoolReusePolicy\" data-throw-if-not-resolved=\"False\" />"
  - name: "timeToLive"
    type: "<xref href=\"org.apache.hc.core5.util.TimeValue?alt=org.apache.hc.core5.util.TimeValue&text=TimeValue\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive)"
- uid: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.core5.http.nio.ssl.TlsStrategy>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.pool.PoolReusePolicy,org.apache.hc.core5.util.TimeValue,org.apache.hc.client5.http.SchemePortResolver,org.apache.hc.client5.http.DnsResolver)"
  fullName: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, SchemePortResolver schemePortResolver, DnsResolver dnsResolver)"
  name: "PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, SchemePortResolver schemePortResolver, DnsResolver dnsResolver)"
  nameWithType: "PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, SchemePortResolver schemePortResolver, DnsResolver dnsResolver)"
  parameters:
  - name: "tlsStrategyLookup"
    type: "<xref href=\"org.apache.hc.core5.http.config.Lookup?alt=org.apache.hc.core5.http.config.Lookup&text=Lookup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.hc.core5.http.nio.ssl.TlsStrategy?alt=org.apache.hc.core5.http.nio.ssl.TlsStrategy&text=TlsStrategy\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "poolConcurrencyPolicy"
    type: "<xref href=\"org.apache.hc.core5.pool.PoolConcurrencyPolicy?alt=org.apache.hc.core5.pool.PoolConcurrencyPolicy&text=PoolConcurrencyPolicy\" data-throw-if-not-resolved=\"False\" />"
  - name: "poolReusePolicy"
    type: "<xref href=\"org.apache.hc.core5.pool.PoolReusePolicy?alt=org.apache.hc.core5.pool.PoolReusePolicy&text=PoolReusePolicy\" data-throw-if-not-resolved=\"False\" />"
  - name: "timeToLive"
    type: "<xref href=\"org.apache.hc.core5.util.TimeValue?alt=org.apache.hc.core5.util.TimeValue&text=TimeValue\" data-throw-if-not-resolved=\"False\" />"
  - name: "schemePortResolver"
    type: "<xref href=\"org.apache.hc.client5.http.SchemePortResolver?alt=org.apache.hc.client5.http.SchemePortResolver&text=SchemePortResolver\" data-throw-if-not-resolved=\"False\" />"
  - name: "dnsResolver"
    type: "<xref href=\"org.apache.hc.client5.http.DnsResolver?alt=org.apache.hc.client5.http.DnsResolver&text=DnsResolver\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup, PoolConcurrencyPolicy poolConcurrencyPolicy, PoolReusePolicy poolReusePolicy, TimeValue timeToLive, SchemePortResolver schemePortResolver, DnsResolver dnsResolver)"
- uid: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.core5.http.nio.ssl.TlsStrategy>,org.apache.hc.core5.pool.PoolConcurrencyPolicy,org.apache.hc.core5.util.TimeValue)"
  fullName: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup, PoolConcurrencyPolicy poolConcurrencyPolicy, TimeValue timeToLive)"
  name: "PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup, PoolConcurrencyPolicy poolConcurrencyPolicy, TimeValue timeToLive)"
  nameWithType: "PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup, PoolConcurrencyPolicy poolConcurrencyPolicy, TimeValue timeToLive)"
  parameters:
  - name: "tlsStrategyLookup"
    type: "<xref href=\"org.apache.hc.core5.http.config.Lookup?alt=org.apache.hc.core5.http.config.Lookup&text=Lookup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.hc.core5.http.nio.ssl.TlsStrategy?alt=org.apache.hc.core5.http.nio.ssl.TlsStrategy&text=TlsStrategy\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "poolConcurrencyPolicy"
    type: "<xref href=\"org.apache.hc.core5.pool.PoolConcurrencyPolicy?alt=org.apache.hc.core5.pool.PoolConcurrencyPolicy&text=PoolConcurrencyPolicy\" data-throw-if-not-resolved=\"False\" />"
  - name: "timeToLive"
    type: "<xref href=\"org.apache.hc.core5.util.TimeValue?alt=org.apache.hc.core5.util.TimeValue&text=TimeValue\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolingAsyncClientConnectionManager(Lookup<TlsStrategy> tlsStrategyLookup, PoolConcurrencyPolicy poolConcurrencyPolicy, TimeValue timeToLive)"
- uid: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(org.apache.hc.core5.pool.ManagedConnPool<org.apache.hc.client5.http.HttpRoute,org.apache.hc.client5.http.nio.ManagedAsyncClientConnection>,org.apache.hc.client5.http.nio.AsyncClientConnectionOperator)"
  fullName: "org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(ManagedConnPool<HttpRoute,ManagedAsyncClientConnection> pool, AsyncClientConnectionOperator connectionOperator)"
  name: "PoolingAsyncClientConnectionManager(ManagedConnPool<HttpRoute,ManagedAsyncClientConnection> pool, AsyncClientConnectionOperator connectionOperator)"
  nameWithType: "PoolingAsyncClientConnectionManager.PoolingAsyncClientConnectionManager(ManagedConnPool<HttpRoute,ManagedAsyncClientConnection> pool, AsyncClientConnectionOperator connectionOperator)"
  parameters:
  - name: "pool"
    type: "<xref href=\"org.apache.hc.core5.pool.ManagedConnPool?alt=org.apache.hc.core5.pool.ManagedConnPool&text=ManagedConnPool\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.hc.client5.http.HttpRoute?alt=org.apache.hc.client5.http.HttpRoute&text=HttpRoute\" data-throw-if-not-resolved=\"False\" />,<xref href=\"org.apache.hc.client5.http.nio.ManagedAsyncClientConnection?alt=org.apache.hc.client5.http.nio.ManagedAsyncClientConnection&text=ManagedAsyncClientConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "connectionOperator"
    type: "<xref href=\"org.apache.hc.client5.http.nio.AsyncClientConnectionOperator?alt=org.apache.hc.client5.http.nio.AsyncClientConnectionOperator&text=AsyncClientConnectionOperator\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected PoolingAsyncClientConnectionManager(ManagedConnPool<HttpRoute,ManagedAsyncClientConnection> pool, AsyncClientConnectionOperator connectionOperator)"
type: "constructor"
metadata: {}
package: "org.apache.hc.client5.http.impl.nio"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
