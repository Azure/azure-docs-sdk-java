### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink"
fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink"
name: "SnowflakeSink"
nameWithType: "SnowflakeSink"
summary: "A copy activity snowflake sink."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.CopySink?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.CopySink.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.CopySink.disableMetricsCollection()"
- "com.azure.resourcemanager.datafactory.models.CopySink.maxConcurrentConnections()"
- "com.azure.resourcemanager.datafactory.models.CopySink.sinkRetryCount()"
- "com.azure.resourcemanager.datafactory.models.CopySink.sinkRetryWait()"
- "com.azure.resourcemanager.datafactory.models.CopySink.validate()"
- "com.azure.resourcemanager.datafactory.models.CopySink.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withDisableMetricsCollection(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withMaxConcurrentConnections(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryCount(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryWait(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchSize(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchTimeout(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.CopySink.writeBatchSize()"
- "com.azure.resourcemanager.datafactory.models.CopySink.writeBatchTimeout()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SnowflakeSink extends CopySink"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.SnowflakeSink()"
  fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.SnowflakeSink()"
  name: "SnowflakeSink()"
  nameWithType: "SnowflakeSink.SnowflakeSink()"
  syntax: "public SnowflakeSink()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.importSettings()"
  fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.importSettings()"
  name: "importSettings()"
  nameWithType: "SnowflakeSink.importSettings()"
  summary: "Get the import<wbr>Settings property: Snowflake import settings."
  syntax: "public SnowflakeImportCopyCommand importSettings()"
  desc: "Get the importSettings property: Snowflake import settings."
  returns:
    description: "the importSettings value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SnowflakeImportCopyCommand?alt=com.azure.resourcemanager.datafactory.models.SnowflakeImportCopyCommand&text=SnowflakeImportCopyCommand\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.preCopyScript()"
  fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.preCopyScript()"
  name: "preCopyScript()"
  nameWithType: "SnowflakeSink.preCopyScript()"
  summary: "Get the pre<wbr>Copy<wbr>Script property: SQL pre-copy script."
  syntax: "public Object preCopyScript()"
  desc: "Get the preCopyScript property: SQL pre-copy script. Type: string (or Expression with resultType string)."
  returns:
    description: "the preCopyScript value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.validate()"
  name: "validate()"
  nameWithType: "SnowflakeSink.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withDisableMetricsCollection(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withDisableMetricsCollection(Object disableMetricsCollection)"
  name: "withDisableMetricsCollection(Object disableMetricsCollection)"
  nameWithType: "SnowflakeSink.withDisableMetricsCollection(Object disableMetricsCollection)"
  summary: "Set the disable<wbr>Metrics<wbr>Collection property: If true, disable data store metrics collection."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withDisableMetricsCollection(java.lang.Object)"
  parameters:
  - name: "disableMetricsCollection"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SnowflakeSink withDisableMetricsCollection(Object disableMetricsCollection)"
  desc: "Set the disableMetricsCollection property: If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SnowflakeSink?alt=com.azure.resourcemanager.datafactory.models.SnowflakeSink&text=SnowflakeSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withImportSettings(com.azure.resourcemanager.datafactory.models.SnowflakeImportCopyCommand)"
  fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withImportSettings(SnowflakeImportCopyCommand importSettings)"
  name: "withImportSettings(SnowflakeImportCopyCommand importSettings)"
  nameWithType: "SnowflakeSink.withImportSettings(SnowflakeImportCopyCommand importSettings)"
  summary: "Set the import<wbr>Settings property: Snowflake import settings."
  parameters:
  - description: "the importSettings value to set."
    name: "importSettings"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SnowflakeImportCopyCommand?alt=com.azure.resourcemanager.datafactory.models.SnowflakeImportCopyCommand&text=SnowflakeImportCopyCommand\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SnowflakeSink withImportSettings(SnowflakeImportCopyCommand importSettings)"
  desc: "Set the importSettings property: Snowflake import settings."
  returns:
    description: "the SnowflakeSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SnowflakeSink?alt=com.azure.resourcemanager.datafactory.models.SnowflakeSink&text=SnowflakeSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withMaxConcurrentConnections(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withMaxConcurrentConnections(Object maxConcurrentConnections)"
  name: "withMaxConcurrentConnections(Object maxConcurrentConnections)"
  nameWithType: "SnowflakeSink.withMaxConcurrentConnections(Object maxConcurrentConnections)"
  summary: "Set the max<wbr>Concurrent<wbr>Connections property: The maximum concurrent connection count for the sink data store."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withMaxConcurrentConnections(java.lang.Object)"
  parameters:
  - name: "maxConcurrentConnections"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SnowflakeSink withMaxConcurrentConnections(Object maxConcurrentConnections)"
  desc: "Set the maxConcurrentConnections property: The maximum concurrent connection count for the sink data store. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SnowflakeSink?alt=com.azure.resourcemanager.datafactory.models.SnowflakeSink&text=SnowflakeSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withPreCopyScript(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withPreCopyScript(Object preCopyScript)"
  name: "withPreCopyScript(Object preCopyScript)"
  nameWithType: "SnowflakeSink.withPreCopyScript(Object preCopyScript)"
  summary: "Set the pre<wbr>Copy<wbr>Script property: SQL pre-copy script."
  parameters:
  - description: "the preCopyScript value to set."
    name: "preCopyScript"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SnowflakeSink withPreCopyScript(Object preCopyScript)"
  desc: "Set the preCopyScript property: SQL pre-copy script. Type: string (or Expression with resultType string)."
  returns:
    description: "the SnowflakeSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SnowflakeSink?alt=com.azure.resourcemanager.datafactory.models.SnowflakeSink&text=SnowflakeSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withSinkRetryCount(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withSinkRetryCount(Object sinkRetryCount)"
  name: "withSinkRetryCount(Object sinkRetryCount)"
  nameWithType: "SnowflakeSink.withSinkRetryCount(Object sinkRetryCount)"
  summary: "Set the sink<wbr>Retry<wbr>Count property: Sink retry count."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryCount(java.lang.Object)"
  parameters:
  - name: "sinkRetryCount"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SnowflakeSink withSinkRetryCount(Object sinkRetryCount)"
  desc: "Set the sinkRetryCount property: Sink retry count. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SnowflakeSink?alt=com.azure.resourcemanager.datafactory.models.SnowflakeSink&text=SnowflakeSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withSinkRetryWait(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withSinkRetryWait(Object sinkRetryWait)"
  name: "withSinkRetryWait(Object sinkRetryWait)"
  nameWithType: "SnowflakeSink.withSinkRetryWait(Object sinkRetryWait)"
  summary: "Set the sink<wbr>Retry<wbr>Wait property: Sink retry wait."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withSinkRetryWait(java.lang.Object)"
  parameters:
  - name: "sinkRetryWait"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SnowflakeSink withSinkRetryWait(Object sinkRetryWait)"
  desc: "Set the sinkRetryWait property: Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SnowflakeSink?alt=com.azure.resourcemanager.datafactory.models.SnowflakeSink&text=SnowflakeSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withWriteBatchSize(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withWriteBatchSize(Object writeBatchSize)"
  name: "withWriteBatchSize(Object writeBatchSize)"
  nameWithType: "SnowflakeSink.withWriteBatchSize(Object writeBatchSize)"
  summary: "Set the write<wbr>Batch<wbr>Size property: Write batch size."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchSize(java.lang.Object)"
  parameters:
  - name: "writeBatchSize"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SnowflakeSink withWriteBatchSize(Object writeBatchSize)"
  desc: "Set the writeBatchSize property: Write batch size. Type: integer (or Expression with resultType integer), minimum: 0."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SnowflakeSink?alt=com.azure.resourcemanager.datafactory.models.SnowflakeSink&text=SnowflakeSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withWriteBatchTimeout(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SnowflakeSink.withWriteBatchTimeout(Object writeBatchTimeout)"
  name: "withWriteBatchTimeout(Object writeBatchTimeout)"
  nameWithType: "SnowflakeSink.withWriteBatchTimeout(Object writeBatchTimeout)"
  summary: "Set the write<wbr>Batch<wbr>Timeout property: Write batch timeout."
  overridden: "com.azure.resourcemanager.datafactory.models.CopySink.withWriteBatchTimeout(java.lang.Object)"
  parameters:
  - name: "writeBatchTimeout"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SnowflakeSink withWriteBatchTimeout(Object writeBatchTimeout)"
  desc: "Set the writeBatchTimeout property: Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SnowflakeSink?alt=com.azure.resourcemanager.datafactory.models.SnowflakeSink&text=SnowflakeSink\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A copy activity snowflake sink."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
