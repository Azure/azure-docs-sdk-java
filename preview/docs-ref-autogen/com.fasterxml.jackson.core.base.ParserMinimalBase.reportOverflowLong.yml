### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong*"
fullName: "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong"
name: "reportOverflowLong"
nameWithType: "ParserMinimalBase.reportOverflowLong"
members:
- uid: "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()"
  fullName: "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()"
  name: "reportOverflowLong()"
  nameWithType: "ParserMinimalBase.reportOverflowLong()"
  summary: "Method called to throw an exception for integral (not floating point) input token with value outside of Java signed 64-bit range when requested as <xref uid=\"long\" data-throw-if-not-resolved=\"false\" data-raw-source=\"long\"></xref>. Result will be <xref uid=\"com.fasterxml.jackson.core.exc.InputCoercionException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputCoercionException\"></xref> being thrown."
  syntax: "protected void reportOverflowLong()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)"
  fullName: "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(String numDesc)"
  name: "reportOverflowLong(String numDesc)"
  nameWithType: "ParserMinimalBase.reportOverflowLong(String numDesc)"
  parameters:
  - name: "numDesc"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void reportOverflowLong(String numDesc)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)"
  fullName: "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(String numDesc, JsonToken inputType)"
  name: "reportOverflowLong(String numDesc, JsonToken inputType)"
  nameWithType: "ParserMinimalBase.reportOverflowLong(String numDesc, JsonToken inputType)"
  parameters:
  - name: "numDesc"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "inputType"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void reportOverflowLong(String numDesc, JsonToken inputType)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.base"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
