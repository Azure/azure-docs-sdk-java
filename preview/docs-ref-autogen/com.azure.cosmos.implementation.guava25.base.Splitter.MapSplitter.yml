### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter"
fullName: "com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter"
name: "Splitter.MapSplitter"
nameWithType: "Splitter.MapSplitter"
summary: "An object that splits strings into maps as `Splitter` splits iterables and lists. Like `Splitter`, it is thread-safe and immutable. The common way to build instances is by providing an additional <xref uid=\"com.azure.cosmos.implementation.guava25.base.Splitter.withKeyValueSeparator*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key-value separator\"></xref> to <xref uid=\"com.azure.cosmos.implementation.guava25.base.Splitter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Splitter\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static final class Splitter.MapSplitter"
methods:
- "com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter.split(java.lang.CharSequence)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
