### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter
  id: MapSplitter
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base
  children:
  - com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter.split(java.lang.CharSequence)
  langs:
  - java
  name: Splitter.MapSplitter
  nameWithType: Splitter.MapSplitter
  fullName: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter
  type: Class
  package: com.azure.cosmos.implementation.guava25.base
  summary: An object that splits strings into maps as `Splitter` splits iterables and lists. Like `Splitter`, it is thread-safe and immutable. The common way to build instances is by providing an additional <xref uid="com.azure.cosmos.implementation.guava25.base.Splitter.withKeyValueSeparator*" data-throw-if-not-resolved="false">key-value separator</xref> to <xref uid="com.azure.cosmos.implementation.guava25.base.Splitter" data-throw-if-not-resolved="false">Splitter</xref>.
  syntax:
    content: public static final class Splitter.MapSplitter
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter.MapSplitter(com.azure.cosmos.implementation.guava25.base.Splitter,com.azure.cosmos.implementation.guava25.base.Splitter)
  id: MapSplitter(com.azure.cosmos.implementation.guava25.base.Splitter,com.azure.cosmos.implementation.guava25.base.Splitter)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter
  langs:
  - java
  name: MapSplitter(Splitter outerSplitter, Splitter entrySplitter)
  nameWithType: Splitter.MapSplitter.MapSplitter(Splitter outerSplitter, Splitter entrySplitter)
  fullName: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter.MapSplitter(Splitter outerSplitter, Splitter entrySplitter)
  overload: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter.MapSplitter*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.base
  syntax:
    content: private MapSplitter(Splitter outerSplitter, Splitter entrySplitter)
    parameters:
    - id: outerSplitter
      type: com.azure.cosmos.implementation.guava25.base.Splitter
    - id: entrySplitter
      type: com.azure.cosmos.implementation.guava25.base.Splitter
- uid: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter.split(java.lang.CharSequence)
  id: split(java.lang.CharSequence)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter
  langs:
  - java
  name: split(CharSequence sequence)
  nameWithType: Splitter.MapSplitter.split(CharSequence sequence)
  fullName: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter.split(CharSequence sequence)
  overload: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter.split*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: >-
    Splits `sequence` into substrings, splits each substring into an entry, and returns an unmodifiable map with each of the entries. For example, `Splitter.on(';').trimResults().withKeyValueSeparator("=>").split("a=>b ; c=>b")` will return a mapping from `"a"` to `"b"` and `"c"` to `"b"`.


    The returned map preserves the order of the entries from `sequence`.
  syntax:
    content: public Map<String,String> split(CharSequence sequence)
    parameters:
    - id: sequence
      type: java.lang.CharSequence
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
references:
- uid: com.azure.cosmos.implementation.guava25.base.Splitter
  name: Splitter
  nameWithType: Splitter
  fullName: com.azure.cosmos.implementation.guava25.base.Splitter
- uid: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter.MapSplitter*
  name: MapSplitter
  nameWithType: Splitter.MapSplitter.MapSplitter
  fullName: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter.MapSplitter
  package: com.azure.cosmos.implementation.guava25.base
- uid: java.lang.CharSequence
  spec.java:
  - uid: java.lang.CharSequence
    name: CharSequence
    fullName: java.lang.CharSequence
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter.split*
  name: split
  nameWithType: Splitter.MapSplitter.split
  fullName: com.azure.cosmos.implementation.guava25.base.Splitter.MapSplitter.split
  package: com.azure.cosmos.implementation.guava25.base
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
