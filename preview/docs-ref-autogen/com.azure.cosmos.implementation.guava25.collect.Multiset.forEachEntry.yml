### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Multiset.forEachEntry*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Multiset<E>.forEachEntry"
name: "forEachEntry"
nameWithType: "Multiset<E>.forEachEntry"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Multiset.forEachEntry(java.util.function.ObjIntConsumer<? super E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Multiset<E>.forEachEntry(ObjIntConsumer<? super E> action)"
  name: "forEachEntry(ObjIntConsumer<? super E> action)"
  nameWithType: "Multiset<E>.forEachEntry(ObjIntConsumer<? super E> action)"
  summary: "Runs the specified action for each distinct element in this multiset, and the number of occurrences of that element. For some `Multiset` implementations, this may be more efficient than iterating over the <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multiset.entrySet()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#entrySet()\"></xref> either explicitly or with `entrySet().forEach(action)`."
  parameters:
  - name: "action"
    type: "<xref href=\"java.util.function.ObjIntConsumer?alt=java.util.function.ObjIntConsumer&text=ObjIntConsumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super E?alt=? super E&text=? super E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public default void forEachEntry(ObjIntConsumer<? super E> action)"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
