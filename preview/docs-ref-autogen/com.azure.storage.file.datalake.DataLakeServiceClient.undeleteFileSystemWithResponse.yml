### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeServiceClient.undeleteFileSystemWithResponse*"
fullName: "com.azure.storage.file.datalake.DataLakeServiceClient.undeleteFileSystemWithResponse"
name: "undeleteFileSystemWithResponse"
nameWithType: "DataLakeServiceClient.undeleteFileSystemWithResponse"
members:
- uid: "com.azure.storage.file.datalake.DataLakeServiceClient.undeleteFileSystemWithResponse(com.azure.storage.file.datalake.options.FileSystemUndeleteOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.datalake.DataLakeServiceClient.undeleteFileSystemWithResponse(FileSystemUndeleteOptions options, Duration timeout, Context context)"
  name: "undeleteFileSystemWithResponse(FileSystemUndeleteOptions options, Duration timeout, Context context)"
  nameWithType: "DataLakeServiceClient.undeleteFileSystemWithResponse(FileSystemUndeleteOptions options, Duration timeout, Context context)"
  summary: "Restores a previously deleted file system. The restored file system will be renamed to the `destinationFileSystemName` if provided in `options`. Otherwise `deletedFileSystemName` is used as destination file system name. If the file system associated with provided `destinationFileSYstemName` already exists, this call will result in a 409 (conflict). This API is only functional if Container Soft Delete is enabled for the storage account associated with the file system.\n\n**Code Samples**\n\n```java\nListFileSystemsOptions listFileSystemsOptions = new ListFileSystemsOptions();\n listFileSystemsOptions.getDetails().setRetrieveDeleted(true);\n client.listFileSystems(listFileSystemsOptions, null).forEach(\n     deletedFileSystem -> {\n         DataLakeFileSystemClient fileSystemClient = client.undeleteFileSystemWithResponse(\n             new FileSystemUndeleteOptions(deletedFileSystem.getName(), deletedFileSystem.getVersion())\n                 .setDestinationFileSystemName(deletedFileSystem.getName() + \"V2\"), timeout,\n             context).getValue();\n     }\n );\n```"
  parameters:
  - description: "<xref uid=\"com.azure.storage.file.datalake.options.FileSystemUndeleteOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileSystemUndeleteOptions\"></xref>."
    name: "options"
    type: "<xref href=\"com.azure.storage.file.datalake.options.FileSystemUndeleteOptions?alt=com.azure.storage.file.datalake.options.FileSystemUndeleteOptions&text=FileSystemUndeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<DataLakeFileSystemClient> undeleteFileSystemWithResponse(FileSystemUndeleteOptions options, Duration timeout, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the <xref uid=\"com.azure.storage.file.datalake.DataLakeFileSystemClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataLakeFileSystemClient\"></xref>\n used to interact with the restored file system."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.DataLakeFileSystemClient?alt=com.azure.storage.file.datalake.DataLakeFileSystemClient&text=DataLakeFileSystemClient\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.5.0-beta.2
