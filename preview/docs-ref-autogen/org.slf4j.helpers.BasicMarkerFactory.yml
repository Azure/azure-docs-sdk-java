### YamlMime:ManagedReference
items:
- uid: org.slf4j.helpers.BasicMarkerFactory
  id: BasicMarkerFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers
  children:
  - org.slf4j.helpers.BasicMarkerFactory.BasicMarkerFactory()
  - org.slf4j.helpers.BasicMarkerFactory.detachMarker(java.lang.String)
  - org.slf4j.helpers.BasicMarkerFactory.exists(java.lang.String)
  - org.slf4j.helpers.BasicMarkerFactory.getDetachedMarker(java.lang.String)
  - org.slf4j.helpers.BasicMarkerFactory.getMarker(java.lang.String)
  langs:
  - java
  name: BasicMarkerFactory
  nameWithType: BasicMarkerFactory
  fullName: org.slf4j.helpers.BasicMarkerFactory
  type: Class
  package: org.slf4j.helpers
  summary: >-
    An almost trivial implementation of the <xref uid="org.slf4j.IMarkerFactory" data-throw-if-not-resolved="false">IMarkerFactory</xref> interface which creates <xref uid="org.slf4j.helpers.BasicMarker" data-throw-if-not-resolved="false">BasicMarker</xref> instances.


    Simple logging systems can conform to the SLF4J API by binding <xref uid="org.slf4j.MarkerFactory" data-throw-if-not-resolved="false">org.slf4j.MarkerFactory</xref> with an instance of this class.
  syntax:
    content: public class BasicMarkerFactory implements IMarkerFactory
  inheritance:
  - java.lang.Object
  implements:
  - org.slf4j.IMarkerFactory
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.slf4j.helpers.BasicMarkerFactory.BasicMarkerFactory()
  id: BasicMarkerFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarkerFactory
  langs:
  - java
  name: BasicMarkerFactory()
  nameWithType: BasicMarkerFactory.BasicMarkerFactory()
  fullName: org.slf4j.helpers.BasicMarkerFactory.BasicMarkerFactory()
  overload: org.slf4j.helpers.BasicMarkerFactory.BasicMarkerFactory*
  type: Constructor
  package: org.slf4j.helpers
  summary: Regular users should *not* create `BasicMarkerFactory` instances. `Marker` instances can be obtained using the static <xref uid="org.slf4j.MarkerFactory.getMarker" data-throw-if-not-resolved="false">org.slf4j.MarkerFactory#getMarker</xref> method.
  syntax:
    content: public BasicMarkerFactory()
- uid: org.slf4j.helpers.BasicMarkerFactory.detachMarker(java.lang.String)
  id: detachMarker(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarkerFactory
  langs:
  - java
  name: detachMarker(String name)
  nameWithType: BasicMarkerFactory.detachMarker(String name)
  fullName: org.slf4j.helpers.BasicMarkerFactory.detachMarker(String name)
  overload: org.slf4j.helpers.BasicMarkerFactory.detachMarker*
  type: Method
  package: org.slf4j.helpers
  summary: >-
    Detach an existing marker.


    Note that after a marker is detached, there might still be "dangling" references to the detached marker.
  syntax:
    content: public boolean detachMarker(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: boolean
- uid: org.slf4j.helpers.BasicMarkerFactory.exists(java.lang.String)
  id: exists(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarkerFactory
  langs:
  - java
  name: exists(String name)
  nameWithType: BasicMarkerFactory.exists(String name)
  fullName: org.slf4j.helpers.BasicMarkerFactory.exists(String name)
  overload: org.slf4j.helpers.BasicMarkerFactory.exists*
  type: Method
  package: org.slf4j.helpers
  summary: Does the name marked already exist?
  syntax:
    content: public boolean exists(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: boolean
- uid: org.slf4j.helpers.BasicMarkerFactory.getDetachedMarker(java.lang.String)
  id: getDetachedMarker(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarkerFactory
  langs:
  - java
  name: getDetachedMarker(String name)
  nameWithType: BasicMarkerFactory.getDetachedMarker(String name)
  fullName: org.slf4j.helpers.BasicMarkerFactory.getDetachedMarker(String name)
  overload: org.slf4j.helpers.BasicMarkerFactory.getDetachedMarker*
  type: Method
  package: org.slf4j.helpers
  summary: Create a marker which is detached (even at birth) from this IMarkerFactory.
  syntax:
    content: public Marker getDetachedMarker(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: org.slf4j.Marker
- uid: org.slf4j.helpers.BasicMarkerFactory.getMarker(java.lang.String)
  id: getMarker(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.slf4j.helpers.BasicMarkerFactory
  langs:
  - java
  name: getMarker(String name)
  nameWithType: BasicMarkerFactory.getMarker(String name)
  fullName: org.slf4j.helpers.BasicMarkerFactory.getMarker(String name)
  overload: org.slf4j.helpers.BasicMarkerFactory.getMarker*
  type: Method
  package: org.slf4j.helpers
  summary: Manufacture a <xref uid="org.slf4j.helpers.BasicMarker" data-throw-if-not-resolved="false">BasicMarker</xref> instance by name. If the instance has been created earlier, return the previously created instance.
  syntax:
    content: public Marker getMarker(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: the name of the marker to be created
    return:
      type: org.slf4j.Marker
      description: a Marker instance
references:
- uid: org.slf4j.helpers.BasicMarkerFactory.BasicMarkerFactory*
  name: BasicMarkerFactory
  nameWithType: BasicMarkerFactory.BasicMarkerFactory
  fullName: org.slf4j.helpers.BasicMarkerFactory.BasicMarkerFactory
  package: org.slf4j.helpers
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.slf4j.Marker
  name: Marker
  nameWithType: Marker
  fullName: org.slf4j.Marker
- uid: org.slf4j.helpers.BasicMarkerFactory.getMarker*
  name: getMarker
  nameWithType: BasicMarkerFactory.getMarker
  fullName: org.slf4j.helpers.BasicMarkerFactory.getMarker
  package: org.slf4j.helpers
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.slf4j.helpers.BasicMarkerFactory.exists*
  name: exists
  nameWithType: BasicMarkerFactory.exists
  fullName: org.slf4j.helpers.BasicMarkerFactory.exists
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.BasicMarkerFactory.detachMarker*
  name: detachMarker
  nameWithType: BasicMarkerFactory.detachMarker
  fullName: org.slf4j.helpers.BasicMarkerFactory.detachMarker
  package: org.slf4j.helpers
- uid: org.slf4j.helpers.BasicMarkerFactory.getDetachedMarker*
  name: getDetachedMarker
  nameWithType: BasicMarkerFactory.getDetachedMarker
  fullName: org.slf4j.helpers.BasicMarkerFactory.getDetachedMarker
  package: org.slf4j.helpers
- uid: org.slf4j.IMarkerFactory
  name: IMarkerFactory
  nameWithType: IMarkerFactory
  fullName: org.slf4j.IMarkerFactory
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
