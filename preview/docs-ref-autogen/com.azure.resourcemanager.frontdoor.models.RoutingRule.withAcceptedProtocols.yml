### YamlMime:JavaMember
uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withAcceptedProtocols*"
fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withAcceptedProtocols"
name: "withAcceptedProtocols"
nameWithType: "RoutingRule.withAcceptedProtocols"
members:
- uid: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withAcceptedProtocols(java.util.List<com.azure.resourcemanager.frontdoor.models.FrontDoorProtocol>)"
  fullName: "com.azure.resourcemanager.frontdoor.models.RoutingRule.withAcceptedProtocols(List<FrontDoorProtocol> acceptedProtocols)"
  name: "withAcceptedProtocols(List<FrontDoorProtocol> acceptedProtocols)"
  nameWithType: "RoutingRule.withAcceptedProtocols(List<FrontDoorProtocol> acceptedProtocols)"
  summary: "Set the acceptedProtocols property: Protocol schemes to match for this rule."
  parameters:
  - description: "the acceptedProtocols value to set."
    name: "acceptedProtocols"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.frontdoor.models.FrontDoorProtocol?alt=com.azure.resourcemanager.frontdoor.models.FrontDoorProtocol&text=FrontDoorProtocol\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RoutingRule withAcceptedProtocols(List<FrontDoorProtocol> acceptedProtocols)"
  returns:
    description: "the RoutingRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.RoutingRule?alt=com.azure.resourcemanager.frontdoor.models.RoutingRule&text=RoutingRule\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.frontdoor.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-frontdoor:1.0.0-beta.1
