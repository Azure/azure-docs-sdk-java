### YamlMime:JavaType
uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions"
fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions"
name: "CosmosChangeFeedRequestOptions"
nameWithType: "CosmosChangeFeedRequestOptions"
summary: "Encapsulates options that can be specified for an operation within a change feed request."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CosmosChangeFeedRequestOptions"
methods:
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.createForProcessingFromBeginning(com.azure.cosmos.models.FeedRange)"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.createForProcessingFromBeginning(FeedRange feedRange)"
  name: "createForProcessingFromBeginning(FeedRange feedRange)"
  nameWithType: "CosmosChangeFeedRequestOptions.createForProcessingFromBeginning(FeedRange feedRange)"
  summary: "Creates a new <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance to start processing change feed items from the beginning of the change feed"
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"com.azure.cosmos.models.FeedRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FeedRange\"></xref> that is used to define the scope (entire container,\n                  logical partition or subset of a container)"
    name: "feedRange"
    type: "<xref href=\"com.azure.cosmos.models.FeedRange?alt=com.azure.cosmos.models.FeedRange&text=FeedRange\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosChangeFeedRequestOptions createForProcessingFromBeginning(FeedRange feedRange)"
  desc: "Creates a new <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance to start processing change feed items from the beginning of the change feed"
  returns:
    description: "a new <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance"
    type: "<xref href=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions?alt=com.azure.cosmos.models.CosmosChangeFeedRequestOptions&text=CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.createForProcessingFromContinuation(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.createForProcessingFromContinuation(String continuation)"
  name: "createForProcessingFromContinuation(String continuation)"
  nameWithType: "CosmosChangeFeedRequestOptions.createForProcessingFromContinuation(String continuation)"
  summary: "Creates a new <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance to start processing change feed items from a previous continuation"
  modifiers:
  - "static"
  parameters:
  - description: "The continuation that was retrieved from a previously retrieved\n                     FeedResponse"
    name: "continuation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosChangeFeedRequestOptions createForProcessingFromContinuation(String continuation)"
  desc: "Creates a new <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance to start processing change feed items from a previous continuation"
  returns:
    description: "a new <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance"
    type: "<xref href=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions?alt=com.azure.cosmos.models.CosmosChangeFeedRequestOptions&text=CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.createForProcessingFromNow(com.azure.cosmos.models.FeedRange)"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.createForProcessingFromNow(FeedRange feedRange)"
  name: "createForProcessingFromNow(FeedRange feedRange)"
  nameWithType: "CosmosChangeFeedRequestOptions.createForProcessingFromNow(FeedRange feedRange)"
  summary: "Creates a new <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance to start processing change feed items from the current time - so only events for all future changes will be retrieved"
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"com.azure.cosmos.models.FeedRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FeedRange\"></xref> that is used to define the scope (entire container,\n                  logical partition or subset of a container)"
    name: "feedRange"
    type: "<xref href=\"com.azure.cosmos.models.FeedRange?alt=com.azure.cosmos.models.FeedRange&text=FeedRange\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosChangeFeedRequestOptions createForProcessingFromNow(FeedRange feedRange)"
  desc: "Creates a new <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance to start processing change feed items from the current time - so only events for all future changes will be retrieved"
  returns:
    description: "a new <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance"
    type: "<xref href=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions?alt=com.azure.cosmos.models.CosmosChangeFeedRequestOptions&text=CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.createForProcessingFromPointInTime(java.time.Instant,com.azure.cosmos.models.FeedRange)"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.createForProcessingFromPointInTime(Instant pointInTime, FeedRange feedRange)"
  name: "createForProcessingFromPointInTime(Instant pointInTime, FeedRange feedRange)"
  nameWithType: "CosmosChangeFeedRequestOptions.createForProcessingFromPointInTime(Instant pointInTime, FeedRange feedRange)"
  summary: "Creates a new <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance to start processing change feed items from a certain point in time"
  modifiers:
  - "static"
  parameters:
  - description: "The point in time from which processing of change feed events should start"
    name: "pointInTime"
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
  - description: "The <xref uid=\"com.azure.cosmos.models.FeedRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FeedRange\"></xref> that is used to define the scope (entire container,\n                    logical partition or subset of a container)"
    name: "feedRange"
    type: "<xref href=\"com.azure.cosmos.models.FeedRange?alt=com.azure.cosmos.models.FeedRange&text=FeedRange\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CosmosChangeFeedRequestOptions createForProcessingFromPointInTime(Instant pointInTime, FeedRange feedRange)"
  desc: "Creates a new <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance to start processing change feed items from a certain point in time"
  returns:
    description: "a new <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance"
    type: "<xref href=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions?alt=com.azure.cosmos.models.CosmosChangeFeedRequestOptions&text=CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.fullFidelity()"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.fullFidelity()"
  name: "fullFidelity()"
  nameWithType: "CosmosChangeFeedRequestOptions.fullFidelity()"
  summary: "Changes the change feed mode so that the change feed will contain events for creations, deletes as well as all intermediary snapshots for updates."
  syntax: "public CosmosChangeFeedRequestOptions fullFidelity()"
  desc: "Changes the change feed mode so that the change feed will contain events for creations, deletes as well as all intermediary snapshots for updates. Enabling full fidelity change feed mode requires configuring a retention duration in the change feed policy of the container. <xref uid=\"com.azure.cosmos.models.ChangeFeedPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ChangeFeedPolicy\"></xref>\n\nIntermediary snapshots of changes as well as deleted documents would be available for processing for 8 minutes before they vanish. When enabling full fidelity mode you will only be able to process change feed events within the retention window configured in the change feed policy of the container. If you attempt to process a change feed after more than the retention window an error (Status Code 400) will be returned because the events for intermediary updates and deletes have vanished. It would still be possible to process changes using Incremental mode even when configuring a full fidelity change feed policy with retention window on the container and when using Incremental mode it doesn't matter whether your are out of the retention window or not - but no events for deletes or intermediary updates would be included. When events are not getting processed within the retention window it is also possible to continue processing future events in full fidelity mode by querying the change feed with a new CosmosChangeFeedRequestOptions instance."
  returns:
    description: "a <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref> instance with full fidelity mode enabled"
    type: "<xref href=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions?alt=com.azure.cosmos.models.CosmosChangeFeedRequestOptions&text=CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.getFeedRange()"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.getFeedRange()"
  name: "getFeedRange()"
  nameWithType: "CosmosChangeFeedRequestOptions.getFeedRange()"
  summary: "Gets the feed range."
  syntax: "public FeedRange getFeedRange()"
  desc: "Gets the feed range."
  returns:
    description: "the feed range."
    type: "<xref href=\"com.azure.cosmos.models.FeedRange?alt=com.azure.cosmos.models.FeedRange&text=FeedRange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.getMaxItemCount()"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.getMaxItemCount()"
  name: "getMaxItemCount()"
  nameWithType: "CosmosChangeFeedRequestOptions.getMaxItemCount()"
  summary: "Gets the maximum number of items to be returned in the enumeration operation."
  syntax: "public int getMaxItemCount()"
  desc: "Gets the maximum number of items to be returned in the enumeration operation."
  returns:
    description: "the max number of items."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.getMaxPrefetchPageCount()"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.getMaxPrefetchPageCount()"
  name: "getMaxPrefetchPageCount()"
  nameWithType: "CosmosChangeFeedRequestOptions.getMaxPrefetchPageCount()"
  summary: "Gets the maximum number of pages that will be prefetched from the backend asynchronously in the background."
  syntax: "public int getMaxPrefetchPageCount()"
  desc: "Gets the maximum number of pages that will be prefetched from the backend asynchronously in the background. By pre-fetching these changes the throughput of processing the change feed records can be increased because the processing doesn't have to stop while waiting for the IO operations to retrieve a new page form the backend to complete. The only scenario where it can be useful to disable prefetching pages (with setMaxPrefetchPageCount(0)) would be when the caller only plans to retrieve just one page - so any prefetched pages would not be used anyway."
  returns:
    description: "the modified change feed request options."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.getThroughputControlGroupName()"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.getThroughputControlGroupName()"
  name: "getThroughputControlGroupName()"
  nameWithType: "CosmosChangeFeedRequestOptions.getThroughputControlGroupName()"
  summary: "Get the throughput control group name."
  syntax: "public String getThroughputControlGroupName()"
  desc: "Get the throughput control group name."
  returns:
    description: "The throughput control group name."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.isQuotaInfoEnabled()"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.isQuotaInfoEnabled()"
  name: "isQuotaInfoEnabled()"
  nameWithType: "CosmosChangeFeedRequestOptions.isQuotaInfoEnabled()"
  summary: "Gets the quota<wbr>Info<wbr>Enabled setting for change feed request in the Azure Cosmos DB database service."
  syntax: "public boolean isQuotaInfoEnabled()"
  desc: "Gets the quotaInfoEnabled setting for change feed request in the Azure Cosmos DB database service. quotaInfoEnabled is used to enable/disable getting quota related stats"
  returns:
    description: "true if quotaInfoEnabled is enabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.setMaxItemCount(int)"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.setMaxItemCount(int maxItemCount)"
  name: "setMaxItemCount(int maxItemCount)"
  nameWithType: "CosmosChangeFeedRequestOptions.setMaxItemCount(int maxItemCount)"
  summary: "Sets the maximum number of items to be returned in the enumeration operation."
  parameters:
  - description: "the max number of items."
    name: "maxItemCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosChangeFeedRequestOptions setMaxItemCount(int maxItemCount)"
  desc: "Sets the maximum number of items to be returned in the enumeration operation."
  returns:
    description: "the FeedOptionsBase."
    type: "<xref href=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions?alt=com.azure.cosmos.models.CosmosChangeFeedRequestOptions&text=CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.setMaxPrefetchPageCount(int)"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.setMaxPrefetchPageCount(int maxPrefetchPageCount)"
  name: "setMaxPrefetchPageCount(int maxPrefetchPageCount)"
  nameWithType: "CosmosChangeFeedRequestOptions.setMaxPrefetchPageCount(int maxPrefetchPageCount)"
  summary: "Sets the maximum number of pages that will be prefetched from the backend asynchronously in the background."
  parameters:
  - description: "the max number of pages that will be prefetched from the backend\n                             asynchronously in the background"
    name: "maxPrefetchPageCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosChangeFeedRequestOptions setMaxPrefetchPageCount(int maxPrefetchPageCount)"
  desc: "Sets the maximum number of pages that will be prefetched from the backend asynchronously in the background. By pre-fetching these changes the throughput of processing the change feed records can be increased because the processing doesn't have to stop while waiting for the IO operations to retrieve a new page form the backend to complete. The only scenario where it can be useful to disable prefetching pages (with setMaxPrefetchPageCount(0)) would be when the caller only plans to retrieve just one page - so any prefetched pages would not be used anyway."
  returns:
    description: "the modified change feed request options."
    type: "<xref href=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions?alt=com.azure.cosmos.models.CosmosChangeFeedRequestOptions&text=CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.setQuotaInfoEnabled(boolean)"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.setQuotaInfoEnabled(boolean quotaInfoEnabled)"
  name: "setQuotaInfoEnabled(boolean quotaInfoEnabled)"
  nameWithType: "CosmosChangeFeedRequestOptions.setQuotaInfoEnabled(boolean quotaInfoEnabled)"
  summary: "Gets the quota<wbr>Info<wbr>Enabled setting for change feed request in the Azure Cosmos DB database service."
  parameters:
  - description: "a boolean value indicating whether quotaInfoEnabled is enabled or not"
    name: "quotaInfoEnabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setQuotaInfoEnabled(boolean quotaInfoEnabled)"
  desc: "Gets the quotaInfoEnabled setting for change feed request in the Azure Cosmos DB database service. quotaInfoEnabled is used to enable/disable getting quota related stats"
- uid: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.setThroughputControlGroupName(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosChangeFeedRequestOptions.setThroughputControlGroupName(String throughputControlGroupName)"
  name: "setThroughputControlGroupName(String throughputControlGroupName)"
  nameWithType: "CosmosChangeFeedRequestOptions.setThroughputControlGroupName(String throughputControlGroupName)"
  summary: "Set the throughput control group name."
  parameters:
  - description: "The throughput control group name."
    name: "throughputControlGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosChangeFeedRequestOptions setThroughputControlGroupName(String throughputControlGroupName)"
  desc: "Set the throughput control group name."
  returns:
    description: "A <xref uid=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosChangeFeedRequestOptions\"></xref>."
    type: "<xref href=\"com.azure.cosmos.models.CosmosChangeFeedRequestOptions?alt=com.azure.cosmos.models.CosmosChangeFeedRequestOptions&text=CosmosChangeFeedRequestOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Encapsulates options that can be specified for an operation within a change feed request."
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.26.0-beta.1
