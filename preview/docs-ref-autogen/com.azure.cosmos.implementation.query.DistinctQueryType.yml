### YamlMime:JavaEnum
uid: "com.azure.cosmos.implementation.query.DistinctQueryType"
fullName: "com.azure.cosmos.implementation.query.DistinctQueryType"
name: "DistinctQueryType"
nameWithType: "DistinctQueryType"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum DistinctQueryType extends Enum<DistinctQueryType>"
fields:
- uid: "com.azure.cosmos.implementation.query.DistinctQueryType.NONE"
  fullName: "com.azure.cosmos.implementation.query.DistinctQueryType.NONE"
  name: "NONE"
  nameWithType: "DistinctQueryType.NONE"
- uid: "com.azure.cosmos.implementation.query.DistinctQueryType.ORDERED"
  fullName: "com.azure.cosmos.implementation.query.DistinctQueryType.ORDERED"
  name: "ORDERED"
  nameWithType: "DistinctQueryType.ORDERED"
- uid: "com.azure.cosmos.implementation.query.DistinctQueryType.UNORDERED"
  fullName: "com.azure.cosmos.implementation.query.DistinctQueryType.UNORDERED"
  name: "UNORDERED"
  nameWithType: "DistinctQueryType.UNORDERED"
methods:
- uid: "com.azure.cosmos.implementation.query.DistinctQueryType.fromServiceSerializedFormat(java.lang.String)"
  fullName: "com.azure.cosmos.implementation.query.DistinctQueryType.fromServiceSerializedFormat(String consistencyLevel)"
  name: "fromServiceSerializedFormat(String consistencyLevel)"
  nameWithType: "DistinctQueryType.fromServiceSerializedFormat(String consistencyLevel)"
  summary: "Given the over wire version of ConsistencyLevel gives the corresponding enum or return null"
  parameters:
  - description: "String value of consistency level"
    name: "consistencyLevel"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DistinctQueryType fromServiceSerializedFormat(String consistencyLevel)"
  returns:
    description: "ConsistencyLevel Enum consistency level"
    type: "<xref href=\"com.azure.cosmos.implementation.query.DistinctQueryType?alt=com.azure.cosmos.implementation.query.DistinctQueryType&text=DistinctQueryType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.query.DistinctQueryType.toString()"
  fullName: "com.azure.cosmos.implementation.query.DistinctQueryType.toString()"
  name: "toString()"
  nameWithType: "DistinctQueryType.toString()"
  overridden: "java.lang.Enum.toString()"
  syntax: "public String toString()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.query.DistinctQueryType.valueOf(java.lang.String)"
  fullName: "com.azure.cosmos.implementation.query.DistinctQueryType.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "DistinctQueryType.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DistinctQueryType valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.query.DistinctQueryType?alt=com.azure.cosmos.implementation.query.DistinctQueryType&text=DistinctQueryType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.query.DistinctQueryType.values()"
  fullName: "com.azure.cosmos.implementation.query.DistinctQueryType.values()"
  name: "values()"
  nameWithType: "DistinctQueryType.values()"
  syntax: "public static DistinctQueryType[] values()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.query.DistinctQueryType?alt=com.azure.cosmos.implementation.query.DistinctQueryType&text=DistinctQueryType\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
