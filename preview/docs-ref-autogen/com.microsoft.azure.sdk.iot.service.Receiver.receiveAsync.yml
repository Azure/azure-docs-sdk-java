### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync*"
fullName: "com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync"
name: "receiveAsync"
nameWithType: "Receiver.receiveAsync"
members:
- uid: "com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync()"
  fullName: "com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync()"
  name: "receiveAsync()"
  nameWithType: "Receiver.receiveAsync()"
  syntax: "protected abstract CompletableFuture<?> receiveAsync()"
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
- uid: "com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync(long)"
  fullName: "com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync(long timeoutSeconds)"
  name: "receiveAsync(long timeoutSeconds)"
  nameWithType: "Receiver.receiveAsync(long timeoutSeconds)"
  parameters:
  - name: "timeoutSeconds"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected abstract CompletableFuture<?> receiveAsync(long timeoutSeconds)"
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service"
artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.2.0
