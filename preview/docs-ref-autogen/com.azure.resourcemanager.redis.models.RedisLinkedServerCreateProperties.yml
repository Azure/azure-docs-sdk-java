### YamlMime:JavaType
uid: "com.azure.resourcemanager.redis.models.RedisLinkedServerCreateProperties"
fullName: "com.azure.resourcemanager.redis.models.RedisLinkedServerCreateProperties"
name: "RedisLinkedServerCreateProperties"
nameWithType: "RedisLinkedServerCreateProperties"
summary: "Create properties for a linked server."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RedisLinkedServerCreateProperties"
constructors:
- "com.azure.resourcemanager.redis.models.RedisLinkedServerCreateProperties.RedisLinkedServerCreateProperties()"
methods:
- "com.azure.resourcemanager.redis.models.RedisLinkedServerCreateProperties.linkedRedisCacheId()"
- "com.azure.resourcemanager.redis.models.RedisLinkedServerCreateProperties.linkedRedisCacheLocation()"
- "com.azure.resourcemanager.redis.models.RedisLinkedServerCreateProperties.serverRole()"
- "com.azure.resourcemanager.redis.models.RedisLinkedServerCreateProperties.validate()"
- "com.azure.resourcemanager.redis.models.RedisLinkedServerCreateProperties.withLinkedRedisCacheId(java.lang.String)"
- "com.azure.resourcemanager.redis.models.RedisLinkedServerCreateProperties.withLinkedRedisCacheLocation(java.lang.String)"
- "com.azure.resourcemanager.redis.models.RedisLinkedServerCreateProperties.withServerRole(com.azure.resourcemanager.redis.models.ReplicationRole)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.redis.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
