### YamlMime:JavaType
uid: "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler"
fullName: "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler"
name: "AbstractClassicServerExchangeHandler"
nameWithType: "AbstractClassicServerExchangeHandler"
summary: "<xref uid=\"org.apache.hc.core5.http.nio.AsyncServerExchangeHandler\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AsyncServerExchangeHandler\"></xref> implementation that acts as a compatibility layer for classic <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref> / <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> based interfaces. Blocking input / output processing is executed through an <xref uid=\"java.util.concurrent.Executor\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Executor\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class AbstractClassicServerExchangeHandler implements AsyncServerExchangeHandler"
constructors:
- "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.AbstractClassicServerExchangeHandler(int,java.util.concurrent.Executor)"
methods:
- "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.available()"
- "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.consume(java.nio.ByteBuffer)"
- "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.failed(java.lang.Exception)"
- "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.getException()"
- "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handle(org.apache.hc.core5.http.HttpRequest,java.io.InputStream,org.apache.hc.core5.http.HttpResponse,java.io.OutputStream,org.apache.hc.core5.http.protocol.HttpContext)"
- "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handleRequest(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.nio.ResponseChannel,org.apache.hc.core5.http.protocol.HttpContext)"
- "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.produce(org.apache.hc.core5.http.nio.DataStreamChannel)"
- "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.releaseResources()"
- "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.streamEnd(java.util.List<? extends org.apache.hc.core5.http.Header>)"
- "org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.updateCapacity(org.apache.hc.core5.http.nio.CapacityChannel)"
type: "class"
implements:
- "<xref href=\"org.apache.hc.core5.http.nio.AsyncServerExchangeHandler?alt=org.apache.hc.core5.http.nio.AsyncServerExchangeHandler&text=AsyncServerExchangeHandler\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "org.apache.hc.core5.http.nio.support.classic"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
