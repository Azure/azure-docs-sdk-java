### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  id: AbstractClassicServerExchangeHandler
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.classic
  children:
  - org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.AbstractClassicServerExchangeHandler(int,java.util.concurrent.Executor)
  - org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.available()
  - org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.consume(java.nio.ByteBuffer)
  - org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.failed(java.lang.Exception)
  - org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.getException()
  - org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handle(org.apache.hc.core5.http.HttpRequest,java.io.InputStream,org.apache.hc.core5.http.HttpResponse,java.io.OutputStream,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handleRequest(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.nio.ResponseChannel,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.produce(org.apache.hc.core5.http.nio.DataStreamChannel)
  - org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.releaseResources()
  - org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.streamEnd(java.util.List<? extends org.apache.hc.core5.http.Header>)
  - org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.updateCapacity(org.apache.hc.core5.http.nio.CapacityChannel)
  langs:
  - java
  name: AbstractClassicServerExchangeHandler
  nameWithType: AbstractClassicServerExchangeHandler
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  type: Class
  package: org.apache.hc.core5.http.nio.support.classic
  summary: <xref uid="org.apache.hc.core5.http.nio.AsyncServerExchangeHandler" data-throw-if-not-resolved="false">AsyncServerExchangeHandler</xref> implementation that acts as a compatibility layer for classic <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">InputStream</xref> / <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref> based interfaces. Blocking input / output processing is executed through an <xref uid="java.util.concurrent.Executor" data-throw-if-not-resolved="false">Executor</xref>.
  syntax:
    content: public abstract class AbstractClassicServerExchangeHandler implements AsyncServerExchangeHandler
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.core5.http.nio.AsyncServerExchangeHandler
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.AbstractClassicServerExchangeHandler(int,java.util.concurrent.Executor)
  id: AbstractClassicServerExchangeHandler(int,java.util.concurrent.Executor)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  langs:
  - java
  name: AbstractClassicServerExchangeHandler(int initialBufferSize, Executor executor)
  nameWithType: AbstractClassicServerExchangeHandler.AbstractClassicServerExchangeHandler(int initialBufferSize, Executor executor)
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.AbstractClassicServerExchangeHandler(int initialBufferSize, Executor executor)
  overload: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.AbstractClassicServerExchangeHandler*
  type: Constructor
  package: org.apache.hc.core5.http.nio.support.classic
  syntax:
    content: public AbstractClassicServerExchangeHandler(int initialBufferSize, Executor executor)
    parameters:
    - id: initialBufferSize
      type: int
    - id: executor
      type: java.util.concurrent.Executor
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.available()
  id: available()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  langs:
  - java
  name: available()
  nameWithType: AbstractClassicServerExchangeHandler.available()
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.available()
  overload: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.available*
  type: Method
  package: org.apache.hc.core5.http.nio.support.classic
  summary: Returns the number of bytes immediately available for output. This method can be used as a hint to control output events of the underlying I/O session.
  syntax:
    content: public final int available()
    return:
      type: int
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.consume(java.nio.ByteBuffer)
  id: consume(java.nio.ByteBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  langs:
  - java
  name: consume(ByteBuffer src)
  nameWithType: AbstractClassicServerExchangeHandler.consume(ByteBuffer src)
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.consume(ByteBuffer src)
  overload: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.consume*
  type: Method
  package: org.apache.hc.core5.http.nio.support.classic
  summary: Triggered to pass incoming data to the data consumer. The consumer must consume the entire content of the data buffer. The consumer must stop incrementing its capacity on the capacity channel if it is unable to accept more data. Once the data consumer has handled accumulated data or allocated more intermediate storage it can update its capacity information on the capacity channel.
  syntax:
    content: public final void consume(ByteBuffer src)
    parameters:
    - id: src
      type: java.nio.ByteBuffer
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.failed(java.lang.Exception)
  id: failed(java.lang.Exception)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  langs:
  - java
  name: failed(Exception cause)
  nameWithType: AbstractClassicServerExchangeHandler.failed(Exception cause)
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.failed(Exception cause)
  overload: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.failed*
  type: Method
  package: org.apache.hc.core5.http.nio.support.classic
  summary: Triggered to signal a failure in data processing.
  syntax:
    content: public final void failed(Exception cause)
    parameters:
    - id: cause
      type: java.lang.Exception
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.getException()
  id: getException()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  langs:
  - java
  name: getException()
  nameWithType: AbstractClassicServerExchangeHandler.getException()
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.getException()
  overload: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.getException*
  type: Method
  package: org.apache.hc.core5.http.nio.support.classic
  syntax:
    content: public Exception getException()
    return:
      type: java.lang.Exception
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handle(org.apache.hc.core5.http.HttpRequest,java.io.InputStream,org.apache.hc.core5.http.HttpResponse,java.io.OutputStream,org.apache.hc.core5.http.protocol.HttpContext)
  id: handle(org.apache.hc.core5.http.HttpRequest,java.io.InputStream,org.apache.hc.core5.http.HttpResponse,java.io.OutputStream,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  langs:
  - java
  name: handle(HttpRequest request, InputStream requestStream, HttpResponse response, OutputStream responseStream, HttpContext context)
  nameWithType: AbstractClassicServerExchangeHandler.handle(HttpRequest request, InputStream requestStream, HttpResponse response, OutputStream responseStream, HttpContext context)
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handle(HttpRequest request, InputStream requestStream, HttpResponse response, OutputStream responseStream, HttpContext context)
  overload: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handle*
  type: Method
  package: org.apache.hc.core5.http.nio.support.classic
  summary: Handles an incoming request optionally reading its entity content form the given input stream and generates a response optionally writing out its entity content into the given output stream.
  syntax:
    content: protected abstract void handle(HttpRequest request, InputStream requestStream, HttpResponse response, OutputStream responseStream, HttpContext context)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.HttpRequest
      description: the incoming request
    - id: requestStream
      type: java.io.InputStream
      description: >-
        the request stream if the request encloses an entity,
                              <code>null</code> otherwise.
    - id: response
      type: org.apache.hc.core5.http.HttpResponse
      description: the outgoing response.
    - id: responseStream
      type: java.io.OutputStream
      description: the response entity output stream.
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the actual execution context.
  exceptions:
  - type: java.io.IOException
  - type: org.apache.hc.core5.http.HttpException
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handleRequest(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.nio.ResponseChannel,org.apache.hc.core5.http.protocol.HttpContext)
  id: handleRequest(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.nio.ResponseChannel,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  langs:
  - java
  name: handleRequest(HttpRequest request, EntityDetails entityDetails, ResponseChannel responseChannel, HttpContext context)
  nameWithType: AbstractClassicServerExchangeHandler.handleRequest(HttpRequest request, EntityDetails entityDetails, ResponseChannel responseChannel, HttpContext context)
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handleRequest(HttpRequest request, EntityDetails entityDetails, ResponseChannel responseChannel, HttpContext context)
  overload: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handleRequest*
  type: Method
  package: org.apache.hc.core5.http.nio.support.classic
  summary: Processes the actual HTTP request. The handler can choose to send response messages immediately inside the call or asynchronously at some later point.
  syntax:
    content: public final void handleRequest(HttpRequest request, EntityDetails entityDetails, ResponseChannel responseChannel, HttpContext context)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.HttpRequest
    - id: entityDetails
      type: org.apache.hc.core5.http.EntityDetails
    - id: responseChannel
      type: org.apache.hc.core5.http.nio.ResponseChannel
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
  - type: java.io.IOException
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.produce(org.apache.hc.core5.http.nio.DataStreamChannel)
  id: produce(org.apache.hc.core5.http.nio.DataStreamChannel)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  langs:
  - java
  name: produce(DataStreamChannel channel)
  nameWithType: AbstractClassicServerExchangeHandler.produce(DataStreamChannel channel)
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.produce(DataStreamChannel channel)
  overload: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.produce*
  type: Method
  package: org.apache.hc.core5.http.nio.support.classic
  summary: Triggered to signal the ability of the underlying data channel to accept more data. The data producer can choose to write data immediately inside the call or asynchronously at some later point.
  syntax:
    content: public final void produce(DataStreamChannel channel)
    parameters:
    - id: channel
      type: org.apache.hc.core5.http.nio.DataStreamChannel
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.releaseResources()
  id: releaseResources()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  langs:
  - java
  name: releaseResources()
  nameWithType: AbstractClassicServerExchangeHandler.releaseResources()
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.releaseResources()
  overload: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.releaseResources*
  type: Method
  package: org.apache.hc.core5.http.nio.support.classic
  syntax:
    content: public void releaseResources()
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.streamEnd(java.util.List<? extends org.apache.hc.core5.http.Header>)
  id: streamEnd(java.util.List<? extends org.apache.hc.core5.http.Header>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  langs:
  - java
  name: streamEnd(List<? extends Header> trailers)
  nameWithType: AbstractClassicServerExchangeHandler.streamEnd(List<? extends Header> trailers)
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.streamEnd(List<? extends Header> trailers)
  overload: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.streamEnd*
  type: Method
  package: org.apache.hc.core5.http.nio.support.classic
  summary: Triggered to signal termination of the data stream.
  syntax:
    content: public final void streamEnd(List<? extends Header> trailers)
    parameters:
    - id: trailers
      type: java.util.List<? extends org.apache.hc.core5.http.Header>
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
  - type: java.io.IOException
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.updateCapacity(org.apache.hc.core5.http.nio.CapacityChannel)
  id: updateCapacity(org.apache.hc.core5.http.nio.CapacityChannel)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler
  langs:
  - java
  name: updateCapacity(CapacityChannel capacityChannel)
  nameWithType: AbstractClassicServerExchangeHandler.updateCapacity(CapacityChannel capacityChannel)
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.updateCapacity(CapacityChannel capacityChannel)
  overload: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.updateCapacity*
  type: Method
  package: org.apache.hc.core5.http.nio.support.classic
  summary: Triggered to signal ability of the underlying data stream to receive data capacity update. The data consumer can choose to write data immediately inside the call or asynchronously at some later point.
  syntax:
    content: public final void updateCapacity(CapacityChannel capacityChannel)
    parameters:
    - id: capacityChannel
      type: org.apache.hc.core5.http.nio.CapacityChannel
  exceptions:
  - type: java.io.IOException
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.util.concurrent.Executor
  spec.java:
  - uid: java.util.concurrent.Executor
    name: Executor
    fullName: java.util.concurrent.Executor
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.AbstractClassicServerExchangeHandler*
  name: AbstractClassicServerExchangeHandler
  nameWithType: AbstractClassicServerExchangeHandler.AbstractClassicServerExchangeHandler
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.AbstractClassicServerExchangeHandler
  package: org.apache.hc.core5.http.nio.support.classic
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.HttpException
  name: HttpException
  nameWithType: HttpException
  fullName: org.apache.hc.core5.http.HttpException
- uid: org.apache.hc.core5.http.HttpRequest
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: org.apache.hc.core5.http.HttpRequest
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: org.apache.hc.core5.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: org.apache.hc.core5.http.HttpResponse
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handle*
  name: handle
  nameWithType: AbstractClassicServerExchangeHandler.handle
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handle
  package: org.apache.hc.core5.http.nio.support.classic
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.getException*
  name: getException
  nameWithType: AbstractClassicServerExchangeHandler.getException
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.getException
  package: org.apache.hc.core5.http.nio.support.classic
- uid: org.apache.hc.core5.http.EntityDetails
  name: EntityDetails
  nameWithType: EntityDetails
  fullName: org.apache.hc.core5.http.EntityDetails
- uid: org.apache.hc.core5.http.nio.ResponseChannel
  name: ResponseChannel
  nameWithType: ResponseChannel
  fullName: org.apache.hc.core5.http.nio.ResponseChannel
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handleRequest*
  name: handleRequest
  nameWithType: AbstractClassicServerExchangeHandler.handleRequest
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.handleRequest
  package: org.apache.hc.core5.http.nio.support.classic
- uid: org.apache.hc.core5.http.nio.CapacityChannel
  name: CapacityChannel
  nameWithType: CapacityChannel
  fullName: org.apache.hc.core5.http.nio.CapacityChannel
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.updateCapacity*
  name: updateCapacity
  nameWithType: AbstractClassicServerExchangeHandler.updateCapacity
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.updateCapacity
  package: org.apache.hc.core5.http.nio.support.classic
- uid: java.nio.ByteBuffer
  spec.java:
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.consume*
  name: consume
  nameWithType: AbstractClassicServerExchangeHandler.consume
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.consume
  package: org.apache.hc.core5.http.nio.support.classic
- uid: java.util.List<? extends org.apache.hc.core5.http.Header>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: '? extends org.apache.hc.core5.http.Header'
    name: Header
    fullName: '? extends org.apache.hc.core5.http.Header'
  - name: '>'
    fullName: '>'
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.streamEnd*
  name: streamEnd
  nameWithType: AbstractClassicServerExchangeHandler.streamEnd
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.streamEnd
  package: org.apache.hc.core5.http.nio.support.classic
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.available*
  name: available
  nameWithType: AbstractClassicServerExchangeHandler.available
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.available
  package: org.apache.hc.core5.http.nio.support.classic
- uid: org.apache.hc.core5.http.nio.DataStreamChannel
  name: DataStreamChannel
  nameWithType: DataStreamChannel
  fullName: org.apache.hc.core5.http.nio.DataStreamChannel
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.produce*
  name: produce
  nameWithType: AbstractClassicServerExchangeHandler.produce
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.produce
  package: org.apache.hc.core5.http.nio.support.classic
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.failed*
  name: failed
  nameWithType: AbstractClassicServerExchangeHandler.failed
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.failed
  package: org.apache.hc.core5.http.nio.support.classic
- uid: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.releaseResources*
  name: releaseResources
  nameWithType: AbstractClassicServerExchangeHandler.releaseResources
  fullName: org.apache.hc.core5.http.nio.support.classic.AbstractClassicServerExchangeHandler.releaseResources
  package: org.apache.hc.core5.http.nio.support.classic
- uid: org.apache.hc.core5.http.nio.AsyncServerExchangeHandler
  name: AsyncServerExchangeHandler
  nameWithType: AsyncServerExchangeHandler
  fullName: org.apache.hc.core5.http.nio.AsyncServerExchangeHandler
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: '? extends org.apache.hc.core5.http.Header'
  name: '? extends Header'
  nameWithType: '? extends Header'
  fullName: '? extends org.apache.hc.core5.http.Header'
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
