### YamlMime:JavaType
uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner"
fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner"
name: "CapacityPoolInner"
nameWithType: "CapacityPoolInner"
summary: "Capacity pool resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CapacityPoolInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.CapacityPoolInner()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.CapacityPoolInner()"
  name: "CapacityPoolInner()"
  nameWithType: "CapacityPoolInner.CapacityPoolInner()"
  syntax: "public CapacityPoolInner()"
methods:
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.coolAccess()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.coolAccess()"
  name: "coolAccess()"
  nameWithType: "CapacityPoolInner.coolAccess()"
  summary: "Get the coolAccess property: If enabled (true) the pool can contain cool Access enabled volumes."
  syntax: "public Boolean coolAccess()"
  returns:
    description: "the coolAccess value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.encryptionType()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.encryptionType()"
  name: "encryptionType()"
  nameWithType: "CapacityPoolInner.encryptionType()"
  summary: "Get the encryptionType property: encryptionType Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool."
  syntax: "public EncryptionType encryptionType()"
  returns:
    description: "the encryptionType value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.EncryptionType?alt=com.azure.resourcemanager.netapp.models.EncryptionType&text=EncryptionType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.etag()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.etag()"
  name: "etag()"
  nameWithType: "CapacityPoolInner.etag()"
  summary: "Get the etag property: A unique read-only string that changes whenever the resource is updated."
  syntax: "public String etag()"
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.poolId()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.poolId()"
  name: "poolId()"
  nameWithType: "CapacityPoolInner.poolId()"
  summary: "Get the poolId property: poolId UUID v4 used to identify the Pool."
  syntax: "public String poolId()"
  returns:
    description: "the poolId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.provisioningState()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "CapacityPoolInner.provisioningState()"
  summary: "Get the provisioningState property: Azure lifecycle management."
  syntax: "public String provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.qosType()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.qosType()"
  name: "qosType()"
  nameWithType: "CapacityPoolInner.qosType()"
  summary: "Get the qosType property: The qos type of the pool."
  syntax: "public QosType qosType()"
  returns:
    description: "the qosType value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.QosType?alt=com.azure.resourcemanager.netapp.models.QosType&text=QosType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.serviceLevel()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.serviceLevel()"
  name: "serviceLevel()"
  nameWithType: "CapacityPoolInner.serviceLevel()"
  summary: "Get the serviceLevel property: serviceLevel The service level of the file system."
  syntax: "public ServiceLevel serviceLevel()"
  returns:
    description: "the serviceLevel value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ServiceLevel?alt=com.azure.resourcemanager.netapp.models.ServiceLevel&text=ServiceLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.size()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.size()"
  name: "size()"
  nameWithType: "CapacityPoolInner.size()"
  summary: "Get the size property: size Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiply of 4398046511104)."
  syntax: "public long size()"
  returns:
    description: "the size value."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.systemData()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.systemData()"
  name: "systemData()"
  nameWithType: "CapacityPoolInner.systemData()"
  summary: "Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information."
  syntax: "public SystemData systemData()"
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.totalThroughputMibps()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.totalThroughputMibps()"
  name: "totalThroughputMibps()"
  nameWithType: "CapacityPoolInner.totalThroughputMibps()"
  summary: "Get the totalThroughputMibps property: Total throughput of pool in Mibps."
  syntax: "public Float totalThroughputMibps()"
  returns:
    description: "the totalThroughputMibps value."
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.utilizedThroughputMibps()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.utilizedThroughputMibps()"
  name: "utilizedThroughputMibps()"
  nameWithType: "CapacityPoolInner.utilizedThroughputMibps()"
  summary: "Get the utilizedThroughputMibps property: Utilized throughput of pool in Mibps."
  syntax: "public Float utilizedThroughputMibps()"
  returns:
    description: "the utilizedThroughputMibps value."
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.validate()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.validate()"
  name: "validate()"
  nameWithType: "CapacityPoolInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withCoolAccess(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withCoolAccess(Boolean coolAccess)"
  name: "withCoolAccess(Boolean coolAccess)"
  nameWithType: "CapacityPoolInner.withCoolAccess(Boolean coolAccess)"
  summary: "Set the coolAccess property: If enabled (true) the pool can contain cool Access enabled volumes."
  parameters:
  - description: "the coolAccess value to set."
    name: "coolAccess"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CapacityPoolInner withCoolAccess(Boolean coolAccess)"
  returns:
    description: "the CapacityPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withEncryptionType(com.azure.resourcemanager.netapp.models.EncryptionType)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withEncryptionType(EncryptionType encryptionType)"
  name: "withEncryptionType(EncryptionType encryptionType)"
  nameWithType: "CapacityPoolInner.withEncryptionType(EncryptionType encryptionType)"
  summary: "Set the encryptionType property: encryptionType Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool."
  parameters:
  - description: "the encryptionType value to set."
    name: "encryptionType"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.EncryptionType?alt=com.azure.resourcemanager.netapp.models.EncryptionType&text=EncryptionType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CapacityPoolInner withEncryptionType(EncryptionType encryptionType)"
  returns:
    description: "the CapacityPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "CapacityPoolInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CapacityPoolInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withQosType(com.azure.resourcemanager.netapp.models.QosType)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withQosType(QosType qosType)"
  name: "withQosType(QosType qosType)"
  nameWithType: "CapacityPoolInner.withQosType(QosType qosType)"
  summary: "Set the qosType property: The qos type of the pool."
  parameters:
  - description: "the qosType value to set."
    name: "qosType"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.QosType?alt=com.azure.resourcemanager.netapp.models.QosType&text=QosType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CapacityPoolInner withQosType(QosType qosType)"
  returns:
    description: "the CapacityPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withServiceLevel(com.azure.resourcemanager.netapp.models.ServiceLevel)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withServiceLevel(ServiceLevel serviceLevel)"
  name: "withServiceLevel(ServiceLevel serviceLevel)"
  nameWithType: "CapacityPoolInner.withServiceLevel(ServiceLevel serviceLevel)"
  summary: "Set the serviceLevel property: serviceLevel The service level of the file system."
  parameters:
  - description: "the serviceLevel value to set."
    name: "serviceLevel"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ServiceLevel?alt=com.azure.resourcemanager.netapp.models.ServiceLevel&text=ServiceLevel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CapacityPoolInner withServiceLevel(ServiceLevel serviceLevel)"
  returns:
    description: "the CapacityPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withSize(long)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withSize(long size)"
  name: "withSize(long size)"
  nameWithType: "CapacityPoolInner.withSize(long size)"
  summary: "Set the size property: size Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiply of 4398046511104)."
  parameters:
  - description: "the size value to set."
    name: "size"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CapacityPoolInner withSize(long size)"
  returns:
    description: "the CapacityPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "CapacityPoolInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CapacityPoolInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.netapp.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-netapp:1.0.0-beta.9
