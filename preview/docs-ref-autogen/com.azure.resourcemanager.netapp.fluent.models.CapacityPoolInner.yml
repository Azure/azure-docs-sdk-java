### YamlMime:JavaType
uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner"
fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner"
name: "CapacityPoolInner"
nameWithType: "CapacityPoolInner"
summary: "Capacity pool resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CapacityPoolInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.CapacityPoolInner()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.CapacityPoolInner()"
  name: "CapacityPoolInner()"
  nameWithType: "CapacityPoolInner.CapacityPoolInner()"
  syntax: "public CapacityPoolInner()"
methods:
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.coolAccess()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.coolAccess()"
  name: "coolAccess()"
  nameWithType: "CapacityPoolInner.coolAccess()"
  summary: "Get the cool<wbr>Access property: If enabled (true) the pool can contain cool Access enabled volumes."
  syntax: "public Boolean coolAccess()"
  desc: "Get the coolAccess property: If enabled (true) the pool can contain cool Access enabled volumes."
  returns:
    description: "the coolAccess value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.encryptionType()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.encryptionType()"
  name: "encryptionType()"
  nameWithType: "CapacityPoolInner.encryptionType()"
  summary: "Get the encryption<wbr>Type property: encryption<wbr>Type Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it."
  syntax: "public EncryptionType encryptionType()"
  desc: "Get the encryptionType property: encryptionType Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool."
  returns:
    description: "the encryptionType value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.EncryptionType?alt=com.azure.resourcemanager.netapp.models.EncryptionType&text=EncryptionType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.etag()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.etag()"
  name: "etag()"
  nameWithType: "CapacityPoolInner.etag()"
  summary: "Get the etag property: A unique read-only string that changes whenever the resource is updated."
  syntax: "public String etag()"
  desc: "Get the etag property: A unique read-only string that changes whenever the resource is updated."
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.poolId()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.poolId()"
  name: "poolId()"
  nameWithType: "CapacityPoolInner.poolId()"
  summary: "Get the pool<wbr>Id property: pool<wbr>Id UUID v4 used to identify the Pool."
  syntax: "public String poolId()"
  desc: "Get the poolId property: poolId UUID v4 used to identify the Pool."
  returns:
    description: "the poolId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.provisioningState()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "CapacityPoolInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Azure lifecycle management."
  syntax: "public String provisioningState()"
  desc: "Get the provisioningState property: Azure lifecycle management."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.qosType()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.qosType()"
  name: "qosType()"
  nameWithType: "CapacityPoolInner.qosType()"
  summary: "Get the qos<wbr>Type property: The qos type of the pool."
  syntax: "public QosType qosType()"
  desc: "Get the qosType property: The qos type of the pool."
  returns:
    description: "the qosType value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.QosType?alt=com.azure.resourcemanager.netapp.models.QosType&text=QosType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.serviceLevel()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.serviceLevel()"
  name: "serviceLevel()"
  nameWithType: "CapacityPoolInner.serviceLevel()"
  summary: "Get the service<wbr>Level property: service<wbr>Level The service level of the file system."
  syntax: "public ServiceLevel serviceLevel()"
  desc: "Get the serviceLevel property: serviceLevel The service level of the file system."
  returns:
    description: "the serviceLevel value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ServiceLevel?alt=com.azure.resourcemanager.netapp.models.ServiceLevel&text=ServiceLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.size()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.size()"
  name: "size()"
  nameWithType: "CapacityPoolInner.size()"
  summary: "Get the size property: size Provisioned size of the pool (in bytes)."
  syntax: "public long size()"
  desc: "Get the size property: size Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiply of 4398046511104)."
  returns:
    description: "the size value."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.systemData()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.systemData()"
  name: "systemData()"
  nameWithType: "CapacityPoolInner.systemData()"
  summary: "Get the system<wbr>Data property: Azure Resource Manager metadata containing created<wbr>By and modified<wbr>By information."
  syntax: "public SystemData systemData()"
  desc: "Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.totalThroughputMibps()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.totalThroughputMibps()"
  name: "totalThroughputMibps()"
  nameWithType: "CapacityPoolInner.totalThroughputMibps()"
  summary: "Get the total<wbr>Throughput<wbr>Mibps property: Total throughput of pool in MiB/s."
  syntax: "public Float totalThroughputMibps()"
  desc: "Get the totalThroughputMibps property: Total throughput of pool in MiB/s."
  returns:
    description: "the totalThroughputMibps value."
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.utilizedThroughputMibps()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.utilizedThroughputMibps()"
  name: "utilizedThroughputMibps()"
  nameWithType: "CapacityPoolInner.utilizedThroughputMibps()"
  summary: "Get the utilized<wbr>Throughput<wbr>Mibps property: Utilized throughput of pool in MiB/s."
  syntax: "public Float utilizedThroughputMibps()"
  desc: "Get the utilizedThroughputMibps property: Utilized throughput of pool in MiB/s."
  returns:
    description: "the utilizedThroughputMibps value."
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.validate()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.validate()"
  name: "validate()"
  nameWithType: "CapacityPoolInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withCoolAccess(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withCoolAccess(Boolean coolAccess)"
  name: "withCoolAccess(Boolean coolAccess)"
  nameWithType: "CapacityPoolInner.withCoolAccess(Boolean coolAccess)"
  summary: "Set the cool<wbr>Access property: If enabled (true) the pool can contain cool Access enabled volumes."
  parameters:
  - description: "the coolAccess value to set."
    name: "coolAccess"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CapacityPoolInner withCoolAccess(Boolean coolAccess)"
  desc: "Set the coolAccess property: If enabled (true) the pool can contain cool Access enabled volumes."
  returns:
    description: "the CapacityPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withEncryptionType(com.azure.resourcemanager.netapp.models.EncryptionType)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withEncryptionType(EncryptionType encryptionType)"
  name: "withEncryptionType(EncryptionType encryptionType)"
  nameWithType: "CapacityPoolInner.withEncryptionType(EncryptionType encryptionType)"
  summary: "Set the encryption<wbr>Type property: encryption<wbr>Type Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it."
  parameters:
  - description: "the encryptionType value to set."
    name: "encryptionType"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.EncryptionType?alt=com.azure.resourcemanager.netapp.models.EncryptionType&text=EncryptionType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CapacityPoolInner withEncryptionType(EncryptionType encryptionType)"
  desc: "Set the encryptionType property: encryptionType Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool."
  returns:
    description: "the CapacityPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "CapacityPoolInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CapacityPoolInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withQosType(com.azure.resourcemanager.netapp.models.QosType)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withQosType(QosType qosType)"
  name: "withQosType(QosType qosType)"
  nameWithType: "CapacityPoolInner.withQosType(QosType qosType)"
  summary: "Set the qos<wbr>Type property: The qos type of the pool."
  parameters:
  - description: "the qosType value to set."
    name: "qosType"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.QosType?alt=com.azure.resourcemanager.netapp.models.QosType&text=QosType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CapacityPoolInner withQosType(QosType qosType)"
  desc: "Set the qosType property: The qos type of the pool."
  returns:
    description: "the CapacityPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withServiceLevel(com.azure.resourcemanager.netapp.models.ServiceLevel)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withServiceLevel(ServiceLevel serviceLevel)"
  name: "withServiceLevel(ServiceLevel serviceLevel)"
  nameWithType: "CapacityPoolInner.withServiceLevel(ServiceLevel serviceLevel)"
  summary: "Set the service<wbr>Level property: service<wbr>Level The service level of the file system."
  parameters:
  - description: "the serviceLevel value to set."
    name: "serviceLevel"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ServiceLevel?alt=com.azure.resourcemanager.netapp.models.ServiceLevel&text=ServiceLevel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CapacityPoolInner withServiceLevel(ServiceLevel serviceLevel)"
  desc: "Set the serviceLevel property: serviceLevel The service level of the file system."
  returns:
    description: "the CapacityPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withSize(long)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withSize(long size)"
  name: "withSize(long size)"
  nameWithType: "CapacityPoolInner.withSize(long size)"
  summary: "Set the size property: size Provisioned size of the pool (in bytes)."
  parameters:
  - description: "the size value to set."
    name: "size"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CapacityPoolInner withSize(long size)"
  desc: "Set the size property: size Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiply of 4398046511104)."
  returns:
    description: "the CapacityPoolInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "CapacityPoolInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CapacityPoolInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner?alt=com.azure.resourcemanager.netapp.fluent.models.CapacityPoolInner&text=CapacityPoolInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Capacity pool resource."
metadata: {}
package: "com.azure.resourcemanager.netapp.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-netapp:1.0.0-beta.10
