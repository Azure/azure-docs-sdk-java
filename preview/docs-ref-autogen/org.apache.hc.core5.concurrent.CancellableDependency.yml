### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.concurrent.CancellableDependency
  id: CancellableDependency
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent
  children:
  - org.apache.hc.core5.concurrent.CancellableDependency.isCancelled()
  - org.apache.hc.core5.concurrent.CancellableDependency.setDependency(org.apache.hc.core5.concurrent.Cancellable)
  langs:
  - java
  name: CancellableDependency
  nameWithType: CancellableDependency
  fullName: org.apache.hc.core5.concurrent.CancellableDependency
  type: Interface
  package: org.apache.hc.core5.concurrent
  summary: This interface represents <xref uid="org.apache.hc.core5.concurrent.Cancellable" data-throw-if-not-resolved="false">Cancellable</xref> object dependent on another ongoing process or operation.
  syntax:
    content: public interface CancellableDependency extends Cancellable
  implements:
  - org.apache.hc.core5.concurrent.Cancellable
- uid: org.apache.hc.core5.concurrent.CancellableDependency.isCancelled()
  id: isCancelled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent.CancellableDependency
  langs:
  - java
  name: isCancelled()
  nameWithType: CancellableDependency.isCancelled()
  fullName: org.apache.hc.core5.concurrent.CancellableDependency.isCancelled()
  overload: org.apache.hc.core5.concurrent.CancellableDependency.isCancelled*
  type: Method
  package: org.apache.hc.core5.concurrent
  summary: Determines whether the process or operation has been cancelled.
  syntax:
    content: public abstract boolean isCancelled()
    return:
      type: boolean
      description: cancelled flag.
- uid: org.apache.hc.core5.concurrent.CancellableDependency.setDependency(org.apache.hc.core5.concurrent.Cancellable)
  id: setDependency(org.apache.hc.core5.concurrent.Cancellable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent.CancellableDependency
  langs:
  - java
  name: setDependency(Cancellable cancellable)
  nameWithType: CancellableDependency.setDependency(Cancellable cancellable)
  fullName: org.apache.hc.core5.concurrent.CancellableDependency.setDependency(Cancellable cancellable)
  overload: org.apache.hc.core5.concurrent.CancellableDependency.setDependency*
  type: Method
  package: org.apache.hc.core5.concurrent
  summary: Sets <xref uid="org.apache.hc.core5.concurrent.Cancellable" data-throw-if-not-resolved="false">Cancellable</xref> dependency on another ongoing process or operation represented by <xref uid="org.apache.hc.core5.concurrent.Cancellable" data-throw-if-not-resolved="false">Cancellable</xref>.
  syntax:
    content: public abstract void setDependency(Cancellable cancellable)
    parameters:
    - id: cancellable
      type: org.apache.hc.core5.concurrent.Cancellable
references:
- uid: org.apache.hc.core5.concurrent.Cancellable
  name: Cancellable
  nameWithType: Cancellable
  fullName: org.apache.hc.core5.concurrent.Cancellable
- uid: org.apache.hc.core5.concurrent.CancellableDependency.setDependency*
  name: setDependency
  nameWithType: CancellableDependency.setDependency
  fullName: org.apache.hc.core5.concurrent.CancellableDependency.setDependency
  package: org.apache.hc.core5.concurrent
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.concurrent.CancellableDependency.isCancelled*
  name: isCancelled
  nameWithType: CancellableDependency.isCancelled
  fullName: org.apache.hc.core5.concurrent.CancellableDependency.isCancelled
  package: org.apache.hc.core5.concurrent
