### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Ordering.explicit*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Ordering<T>.<T>explicit"
name: "<T>explicit"
nameWithType: "Ordering<T>.<T>explicit"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Ordering.<T>explicit(T,T...)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Ordering<T>.<T>explicit(T leastValue, T[] remainingValuesInOrder)"
  name: "<T>explicit(T leastValue, T[] remainingValuesInOrder)"
  nameWithType: "Ordering<T>.<T>explicit(T leastValue, T[] remainingValuesInOrder)"
  summary: "Returns an ordering that compares objects according to the order in which they are given to this method. Only objects present in the argument list (according to <xref uid=\"java.lang.Object.equals\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Object#equals\"></xref>) may be compared. This comparator imposes a \"partial ordering\" over the type `T`. Null values in the argument list are not supported.\n\nThe returned comparator throws a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClassCastException\"></xref> when it receives an input parameter that isn't among the provided values.\n\nThe generated comparator is serializable if all the provided values are serializable."
  parameters:
  - description: "the value which the returned comparator should consider the \"least\" of all\n     values"
    name: "leastValue"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "the rest of the values that the returned comparator will be able\n     to compare, in the order the comparator should follow"
    name: "remainingValuesInOrder"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static Ordering<T> <T>explicit(T leastValue, T[] remainingValuesInOrder)"
  returns:
    description: "the comparator described above"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Ordering?alt=com.azure.cosmos.implementation.guava25.collect.Ordering&text=Ordering\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Ordering.<T>explicit(java.util.List<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Ordering<T>.<T>explicit(List<T> valuesInOrder)"
  name: "<T>explicit(List<T> valuesInOrder)"
  nameWithType: "Ordering<T>.<T>explicit(List<T> valuesInOrder)"
  summary: "Returns an ordering that compares objects according to the order in which they appear in the given list. Only objects present in the list (according to <xref uid=\"java.lang.Object.equals\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Object#equals\"></xref>) may be compared. This comparator imposes a \"partial ordering\" over the type `T`. Subsequent changes to the `valuesInOrder` list will have no effect on the returned comparator. Null values in the list are not supported.\n\nThe returned comparator throws a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClassCastException\"></xref> when it receives an input parameter that isn't among the provided values.\n\nThe generated comparator is serializable if all the provided values are serializable."
  parameters:
  - description: "the values that the returned comparator will be able to compare, in the\n     order the comparator should induce"
    name: "valuesInOrder"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Ordering<T> <T>explicit(List<T> valuesInOrder)"
  returns:
    description: "the comparator described above"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Ordering?alt=com.azure.cosmos.implementation.guava25.collect.Ordering&text=Ordering\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
