### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  id: TypeDeserializerBase
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl
  children:
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.TypeDeserializerBase(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.TypeDeserializerBase(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._baseType
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._defaultImpl
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._defaultImplDeserializer
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializers
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._idResolver
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._property
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._typeIdVisible
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._typePropertyName
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeInclusion()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString()
  langs:
  - java
  name: TypeDeserializerBase
  nameWithType: TypeDeserializerBase
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  type: Class
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Base class for all standard Jackson <xref uid="com.fasterxml.jackson.databind.jsontype.TypeDeserializer" data-throw-if-not-resolved="false">TypeDeserializer</xref>s.
  syntax:
    content: public abstract class TypeDeserializerBase extends TypeDeserializer implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getDefaultImpl()
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getPropertyName()
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getTypeIdResolver()
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getTypeInclusion()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.TypeDeserializerBase(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)
  id: TypeDeserializerBase(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: TypeDeserializerBase(JavaType baseType, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl)
  nameWithType: TypeDeserializerBase.TypeDeserializerBase(JavaType baseType, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.TypeDeserializerBase(JavaType baseType, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.TypeDeserializerBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected TypeDeserializerBase(JavaType baseType, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
    - id: idRes
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
    - id: typePropertyName
      type: java.lang.String
    - id: typeIdVisible
      type: boolean
    - id: defaultImpl
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.TypeDeserializerBase(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty)
  id: TypeDeserializerBase(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: TypeDeserializerBase(TypeDeserializerBase src, BeanProperty property)
  nameWithType: TypeDeserializerBase.TypeDeserializerBase(TypeDeserializerBase src, BeanProperty property)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.TypeDeserializerBase(TypeDeserializerBase src, BeanProperty property)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.TypeDeserializerBase*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected TypeDeserializerBase(TypeDeserializerBase src, BeanProperty property)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
    - id: property
      type: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._baseType
  id: _baseType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _baseType
  nameWithType: TypeDeserializerBase._baseType
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._baseType
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected final JavaType _baseType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._defaultImpl
  id: _defaultImpl
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _defaultImpl
  nameWithType: TypeDeserializerBase._defaultImpl
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._defaultImpl
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Type to use as the default implementation, if type id is missing or cannot be resolved.
  syntax:
    content: protected final JavaType _defaultImpl
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._defaultImplDeserializer
  id: _defaultImplDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _defaultImplDeserializer
  nameWithType: TypeDeserializerBase._defaultImplDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._defaultImplDeserializer
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected JsonDeserializer<Object> _defaultImplDeserializer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _deserializeWithNativeTypeId(JsonParser jp, DeserializationContext ctxt)
  nameWithType: TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser jp, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser jp, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Helper method called when <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> indicates that it can use so-called native type ids. Assumption from there is that only native type ids are to be used.
  syntax:
    content: protected Object _deserializeWithNativeTypeId(JsonParser jp, DeserializationContext ctxt)
    parameters:
    - id: jp
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  id: _deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _deserializeWithNativeTypeId(JsonParser p, DeserializationContext ctxt, Object typeId)
  nameWithType: TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser p, DeserializationContext ctxt, Object typeId)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser p, DeserializationContext ctxt, Object typeId)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Helper method called when <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> indicates that it can use so-called native type ids, and such type id has been found.
  syntax:
    content: protected Object _deserializeWithNativeTypeId(JsonParser p, DeserializationContext ctxt, Object typeId)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: typeId
      type: java.lang.Object
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializers
  id: _deserializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _deserializers
  nameWithType: TypeDeserializerBase._deserializers
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializers
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: For efficient operation we will lazily build mappings from type ids to actual deserializers, once needed.
  syntax:
    content: protected final Map<String,JsonDeserializer<Object>> _deserializers
    return:
      type: java.util.Map<java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>>
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  id: _findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _findDefaultImplDeserializer(DeserializationContext ctxt)
  nameWithType: TypeDeserializerBase._findDefaultImplDeserializer(DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer(DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected final JsonDeserializer<Object> _findDefaultImplDeserializer(DeserializationContext ctxt)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  id: _findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _findDeserializer(DeserializationContext ctxt, String typeId)
  nameWithType: TypeDeserializerBase._findDeserializer(DeserializationContext ctxt, String typeId)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(DeserializationContext ctxt, String typeId)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected final JsonDeserializer<Object> _findDeserializer(DeserializationContext ctxt, String typeId)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: typeId
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  id: _handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _handleMissingTypeId(DeserializationContext ctxt, String extraDesc)
  nameWithType: TypeDeserializerBase._handleMissingTypeId(DeserializationContext ctxt, String extraDesc)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId(DeserializationContext ctxt, String extraDesc)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected JavaType _handleMissingTypeId(DeserializationContext ctxt, String extraDesc)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: extraDesc
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JavaType
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  id: _handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _handleUnknownTypeId(DeserializationContext ctxt, String typeId)
  nameWithType: TypeDeserializerBase._handleUnknownTypeId(DeserializationContext ctxt, String typeId)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(DeserializationContext ctxt, String typeId)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Helper method called when given type id cannot be resolved into concrete deserializer either directly (using given <xref uid="com.fasterxml.jackson.databind.jsontype.TypeIdResolver" data-throw-if-not-resolved="false">TypeIdResolver</xref>), or using default type. Default implementation simply throws a <xref uid="com.fasterxml.jackson.databind.JsonMappingException" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.JsonMappingException</xref> to indicate the problem; sub-classes may choose
  syntax:
    content: protected JavaType _handleUnknownTypeId(DeserializationContext ctxt, String typeId)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: typeId
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.JavaType
      description: >-
        If it is possible to resolve type id into a <xref uid="com.fasterxml.jackson.databind.JsonDeserializer" data-throw-if-not-resolved="false">JsonDeserializer</xref>
           should return that deserializer; otherwise throw an exception to indicate
           the problem.
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._idResolver
  id: _idResolver
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _idResolver
  nameWithType: TypeDeserializerBase._idResolver
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._idResolver
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected final TypeIdResolver _idResolver
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._property
  id: _property
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _property
  nameWithType: TypeDeserializerBase._property
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._property
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Property that contains value for which type information is included; null if value is a root value. Note that this value is not assigned during construction but only when <xref uid="com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.forProperty*" data-throw-if-not-resolved="false">#forProperty</xref> is called to create a copy.
  syntax:
    content: protected final BeanProperty _property
    return:
      type: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._typeIdVisible
  id: _typeIdVisible
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _typeIdVisible
  nameWithType: TypeDeserializerBase._typeIdVisible
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._typeIdVisible
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected final boolean _typeIdVisible
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._typePropertyName
  id: _typePropertyName
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: _typePropertyName
  nameWithType: TypeDeserializerBase._typePropertyName
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._typePropertyName
  type: Field
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Name of type property used; needed for non-property versions too, in cases where type id is to be exposed as part of JSON.
  syntax:
    content: protected final String _typePropertyName
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType()
  id: baseType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: baseType()
  nameWithType: TypeDeserializerBase.baseType()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public JavaType baseType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName()
  id: baseTypeName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: baseTypeName()
  nameWithType: TypeDeserializerBase.baseTypeName()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public String baseTypeName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  id: forProperty(com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: forProperty(BeanProperty prop)
  nameWithType: TypeDeserializerBase.forProperty(BeanProperty prop)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.forProperty(BeanProperty prop)
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.forProperty*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method called to create contextual version, to be used for values of given property. This may be the type itself (as is the case for bean properties), or values contained (for <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> or <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> valued properties).
  syntax:
    content: public abstract TypeDeserializer forProperty(BeanProperty prop)
    parameters:
    - id: prop
      type: com.fasterxml.jackson.databind.BeanProperty
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl()
  id: getDefaultImpl()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: getDefaultImpl()
  nameWithType: TypeDeserializerBase.getDefaultImpl()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Accessor for "default implementation" type; optionally defined class to use in cases where type id is not accessible for some reason (either missing, or cannot be resolved)
  syntax:
    content: public Class<?> getDefaultImpl()
    return:
      type: java.lang.Class<?>
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName()
  id: getPropertyName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: getPropertyName()
  nameWithType: TypeDeserializerBase.getPropertyName()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Name of property that contains type information, if property-based inclusion is used.
  syntax:
    content: public final String getPropertyName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver()
  id: getTypeIdResolver()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: getTypeIdResolver()
  nameWithType: TypeDeserializerBase.getTypeIdResolver()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Accessor for object that handles conversions between types and matching type ids.
  syntax:
    content: public TypeIdResolver getTypeIdResolver()
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeInclusion()
  id: getTypeInclusion()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: getTypeInclusion()
  nameWithType: TypeDeserializerBase.getTypeInclusion()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeInclusion()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeInclusion*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Accessor for type information inclusion method that deserializer uses; indicates how type information is (expected to be) embedded in JSON input.
  syntax:
    content: public abstract JsonTypeInfo.As getTypeInclusion()
    return:
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.As
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  langs:
  - java
  name: toString()
  nameWithType: TypeDeserializerBase.toString()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString()
  overload: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
  name: TypeIdResolver
  nameWithType: TypeIdResolver
  fullName: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.TypeDeserializerBase*
  name: TypeDeserializerBase
  nameWithType: TypeDeserializerBase.TypeDeserializerBase
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.TypeDeserializerBase
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  name: TypeDeserializer
  nameWithType: TypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.forProperty*
  name: forProperty
  nameWithType: TypeDeserializerBase.forProperty
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.forProperty
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.annotation.JsonTypeInfo.As
  name: JsonTypeInfo.As
  nameWithType: JsonTypeInfo.As
  fullName: com.fasterxml.jackson.annotation.JsonTypeInfo.As
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeInclusion*
  name: getTypeInclusion
  nameWithType: TypeDeserializerBase.getTypeInclusion
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeInclusion
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName*
  name: baseTypeName
  nameWithType: TypeDeserializerBase.baseTypeName
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName*
  name: getPropertyName
  nameWithType: TypeDeserializerBase.getPropertyName
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver*
  name: getTypeIdResolver
  nameWithType: TypeDeserializerBase.getTypeIdResolver
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl*
  name: getDefaultImpl
  nameWithType: TypeDeserializerBase.getDefaultImpl
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType*
  name: baseType
  nameWithType: TypeDeserializerBase.baseType
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString*
  name: toString
  nameWithType: TypeDeserializerBase.toString
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer*
  name: _findDeserializer
  nameWithType: TypeDeserializerBase._findDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer*
  name: _findDefaultImplDeserializer
  nameWithType: TypeDeserializerBase._findDefaultImplDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId*
  name: _deserializeWithNativeTypeId
  nameWithType: TypeDeserializerBase._deserializeWithNativeTypeId
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId*
  name: _handleUnknownTypeId
  nameWithType: TypeDeserializerBase._handleUnknownTypeId
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId*
  name: _handleMissingTypeId
  nameWithType: TypeDeserializerBase._handleMissingTypeId
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.util.Map<java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getTypeInclusion()
  name: TypeDeserializer.getTypeInclusion()
  nameWithType: TypeDeserializer.getTypeInclusion()
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getTypeInclusion()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getDefaultImpl()
  name: TypeDeserializer.getDefaultImpl()
  nameWithType: TypeDeserializer.getDefaultImpl()
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getDefaultImpl()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getPropertyName()
  name: TypeDeserializer.getPropertyName()
  nameWithType: TypeDeserializer.getPropertyName()
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getPropertyName()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: TypeDeserializer.deserializeTypedFromArray(JsonParser,DeserializationContext)
  nameWithType: TypeDeserializer.deserializeTypedFromArray(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: TypeDeserializer.deserializeTypedFromAny(JsonParser,DeserializationContext)
  nameWithType: TypeDeserializer.deserializeTypedFromAny(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: TypeDeserializer.deserializeTypedFromObject(JsonParser,DeserializationContext)
  nameWithType: TypeDeserializer.deserializeTypedFromObject(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  name: TypeDeserializer.forProperty(BeanProperty)
  nameWithType: TypeDeserializer.forProperty(BeanProperty)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>)
  name: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,Class<?>)
  nameWithType: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,Class<?>)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getTypeIdResolver()
  name: TypeDeserializer.getTypeIdResolver()
  nameWithType: TypeDeserializer.getTypeIdResolver()
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getTypeIdResolver()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  name: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,JavaType)
  nameWithType: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,JavaType)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: TypeDeserializer.deserializeTypedFromScalar(JsonParser,DeserializationContext)
  nameWithType: TypeDeserializer.deserializeTypedFromScalar(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer
  name: String,JsonDeserializer
  nameWithType: String,JsonDeserializer
  fullName: java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class
  name: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,Class
  nameWithType: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,Class
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
