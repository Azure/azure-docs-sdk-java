### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"
fullName: "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase"
name: "TypeDeserializerBase"
nameWithType: "TypeDeserializerBase"
summary: "Base class for all standard Jackson <xref uid=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeDeserializer\"></xref>s."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getDefaultImpl()"
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getPropertyName()"
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getTypeIdResolver()"
- "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.getTypeInclusion()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class TypeDeserializerBase extends TypeDeserializer implements Serializable"
constructors:
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.TypeDeserializerBase(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.TypeDeserializerBase(com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase,com.fasterxml.jackson.databind.BeanProperty)"
fields:
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._baseType"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._defaultImpl"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._defaultImplDeserializer"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializers"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._idResolver"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._property"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._typeIdVisible"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._typePropertyName"
methods:
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.forProperty(com.fasterxml.jackson.databind.BeanProperty)"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeInclusion()"
- "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString()"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype.impl"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
