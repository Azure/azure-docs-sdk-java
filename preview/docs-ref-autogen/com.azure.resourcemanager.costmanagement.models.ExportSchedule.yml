### YamlMime:JavaType
uid: "com.azure.resourcemanager.costmanagement.models.ExportSchedule"
fullName: "com.azure.resourcemanager.costmanagement.models.ExportSchedule"
name: "ExportSchedule"
nameWithType: "ExportSchedule"
summary: "The schedule associated with a export."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ExportSchedule"
constructors:
- uid: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.ExportSchedule()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.ExportSchedule()"
  name: "ExportSchedule()"
  nameWithType: "ExportSchedule.ExportSchedule()"
  syntax: "public ExportSchedule()"
methods:
- uid: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.recurrence()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.recurrence()"
  name: "recurrence()"
  nameWithType: "ExportSchedule.recurrence()"
  summary: "Get the recurrence property: The schedule recurrence."
  syntax: "public RecurrenceType recurrence()"
  desc: "Get the recurrence property: The schedule recurrence."
  returns:
    description: "the recurrence value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.RecurrenceType?alt=com.azure.resourcemanager.costmanagement.models.RecurrenceType&text=RecurrenceType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.recurrencePeriod()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.recurrencePeriod()"
  name: "recurrencePeriod()"
  nameWithType: "ExportSchedule.recurrencePeriod()"
  summary: "Get the recurrence<wbr>Period property: Has start and end date of the recurrence."
  syntax: "public ExportRecurrencePeriod recurrencePeriod()"
  desc: "Get the recurrencePeriod property: Has start and end date of the recurrence. The start date must be in future. If present, the end date must be greater than start date."
  returns:
    description: "the recurrencePeriod value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ExportRecurrencePeriod?alt=com.azure.resourcemanager.costmanagement.models.ExportRecurrencePeriod&text=ExportRecurrencePeriod\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.status()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.status()"
  name: "status()"
  nameWithType: "ExportSchedule.status()"
  summary: "Get the status property: The status of the schedule."
  syntax: "public StatusType status()"
  desc: "Get the status property: The status of the schedule. Whether active or not. If inactive, the export's scheduled execution is paused."
  returns:
    description: "the status value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.StatusType?alt=com.azure.resourcemanager.costmanagement.models.StatusType&text=StatusType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.validate()"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.validate()"
  name: "validate()"
  nameWithType: "ExportSchedule.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.withRecurrence(com.azure.resourcemanager.costmanagement.models.RecurrenceType)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.withRecurrence(RecurrenceType recurrence)"
  name: "withRecurrence(RecurrenceType recurrence)"
  nameWithType: "ExportSchedule.withRecurrence(RecurrenceType recurrence)"
  summary: "Set the recurrence property: The schedule recurrence."
  parameters:
  - description: "the recurrence value to set."
    name: "recurrence"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.RecurrenceType?alt=com.azure.resourcemanager.costmanagement.models.RecurrenceType&text=RecurrenceType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExportSchedule withRecurrence(RecurrenceType recurrence)"
  desc: "Set the recurrence property: The schedule recurrence."
  returns:
    description: "the ExportSchedule object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ExportSchedule?alt=com.azure.resourcemanager.costmanagement.models.ExportSchedule&text=ExportSchedule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.withRecurrencePeriod(com.azure.resourcemanager.costmanagement.models.ExportRecurrencePeriod)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.withRecurrencePeriod(ExportRecurrencePeriod recurrencePeriod)"
  name: "withRecurrencePeriod(ExportRecurrencePeriod recurrencePeriod)"
  nameWithType: "ExportSchedule.withRecurrencePeriod(ExportRecurrencePeriod recurrencePeriod)"
  summary: "Set the recurrence<wbr>Period property: Has start and end date of the recurrence."
  parameters:
  - description: "the recurrencePeriod value to set."
    name: "recurrencePeriod"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ExportRecurrencePeriod?alt=com.azure.resourcemanager.costmanagement.models.ExportRecurrencePeriod&text=ExportRecurrencePeriod\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExportSchedule withRecurrencePeriod(ExportRecurrencePeriod recurrencePeriod)"
  desc: "Set the recurrencePeriod property: Has start and end date of the recurrence. The start date must be in future. If present, the end date must be greater than start date."
  returns:
    description: "the ExportSchedule object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ExportSchedule?alt=com.azure.resourcemanager.costmanagement.models.ExportSchedule&text=ExportSchedule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.withStatus(com.azure.resourcemanager.costmanagement.models.StatusType)"
  fullName: "com.azure.resourcemanager.costmanagement.models.ExportSchedule.withStatus(StatusType status)"
  name: "withStatus(StatusType status)"
  nameWithType: "ExportSchedule.withStatus(StatusType status)"
  summary: "Set the status property: The status of the schedule."
  parameters:
  - description: "the status value to set."
    name: "status"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.StatusType?alt=com.azure.resourcemanager.costmanagement.models.StatusType&text=StatusType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExportSchedule withStatus(StatusType status)"
  desc: "Set the status property: The status of the schedule. Whether active or not. If inactive, the export's scheduled execution is paused."
  returns:
    description: "the ExportSchedule object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.ExportSchedule?alt=com.azure.resourcemanager.costmanagement.models.ExportSchedule&text=ExportSchedule\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The schedule associated with a export."
metadata: {}
package: "com.azure.resourcemanager.costmanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-costmanagement:1.0.0-beta.3
