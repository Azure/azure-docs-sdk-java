### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.AnnotationIntrospector._findAnnotation*"
fullName: "com.fasterxml.jackson.databind.AnnotationIntrospector.<A>_findAnnotation"
name: "<A>_findAnnotation"
nameWithType: "AnnotationIntrospector.<A>_findAnnotation"
members:
- uid: "com.fasterxml.jackson.databind.AnnotationIntrospector.<A>_findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class<A>)"
  fullName: "com.fasterxml.jackson.databind.AnnotationIntrospector.<A>_findAnnotation(Annotated ann, Class<A> annoClass)"
  name: "<A>_findAnnotation(Annotated ann, Class<A> annoClass)"
  nameWithType: "AnnotationIntrospector.<A>_findAnnotation(Annotated ann, Class<A> annoClass)"
  summary: "Method that should be used by sub-classes for ALL annotation access; overridable so that sub-classes may, if they choose to, mangle actual access to block access (\"hide\" annotations) or perhaps change it.\n\nDefault implementation is simply: `return annotated.getAnnotation(annoClass);`"
  parameters:
  - description: "Annotated entity to check for specified annotation"
    name: "ann"
    type: "<xref href=\"com.fasterxml.jackson.databind.introspect.Annotated?alt=com.fasterxml.jackson.databind.introspect.Annotated&text=Annotated\" data-throw-if-not-resolved=\"False\" />"
  - description: "Type of annotation to find"
    name: "annoClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected A <A>_findAnnotation(Annotated ann, Class<A> annoClass)"
  returns:
    description: "Value of given annotation (as per <code>annoClass</code>), if entity\n    has one; <code>null</code> otherwise"
    type: "<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
