### YamlMime:JavaType
uid: "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer"
fullName: "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer"
name: "ByteQuadsCanonicalizer"
nameWithType: "ByteQuadsCanonicalizer"
summary: "Replacement for `BytesToNameCanonicalizer` which aims at more localized memory access due to flattening of name quad data. Performance improvement modest for simple JSON document data binding (maybe 3%), but should help more for larger symbol tables, or for binary formats like Smile.\n\nHash area is divided into 4 sections:\n\n1.  Primary area (1/2 of total size), direct match from hash (LSB)\n2.  Secondary area (1/4 of total size), match from `hash (LSB) >> 1`\n3.  Tertiary area (1/8 of total size), match from `hash (LSB) >> 2`\n4.  Spill-over area (remaining 1/8) with linear scan, insertion order\n5.  \n\nand within every area, entries are 4 `int`s, where 1 - 3 ints contain 1 - 12 UTF-8 encoded bytes of name (null-padded), and last int is offset in `_names` that contains actual name Strings."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ByteQuadsCanonicalizer"
methods:
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._reportTooManyCollisions()"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(java.lang.String,int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(java.lang.String,int,int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(java.lang.String,int,int,int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(java.lang.String,int[],int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.bucketCount()"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int,int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int,int,int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int[],int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot()"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot(int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int,int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int,int,int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int[],int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.hashSeed()"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.makeChild(int)"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.maybeDirty()"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.primaryCount()"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.release()"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.secondaryCount()"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.size()"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.spilloverCount()"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.tertiaryCount()"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.toString()"
- "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.totalCount()"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.core.sym"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
