### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  id: ByteQuadsCanonicalizer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym
  children:
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._reportTooManyCollisions()
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(java.lang.String,int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(java.lang.String,int,int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(java.lang.String,int,int,int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(java.lang.String,int[],int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.bucketCount()
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int,int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int,int,int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int[],int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot()
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot(int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int,int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int,int,int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int[],int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.hashSeed()
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.makeChild(int)
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.maybeDirty()
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.primaryCount()
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.release()
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.secondaryCount()
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.size()
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.spilloverCount()
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.tertiaryCount()
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.toString()
  - com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.totalCount()
  langs:
  - java
  name: ByteQuadsCanonicalizer
  nameWithType: ByteQuadsCanonicalizer
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  type: Class
  package: com.fasterxml.jackson.core.sym
  summary: "Replacement for `BytesToNameCanonicalizer` which aims at more localized memory access due to flattening of name quad data. Performance improvement modest for simple JSON document data binding (maybe 3%), but should help more for larger symbol tables, or for binary formats like Smile.\n\nHash area is divided into 4 sections:\n\n1.  Primary area (1/2 of total size), direct match from hash (LSB)\n2.  Secondary area (1/4 of total size), match from `hash (LSB) >> 1`\n3.  Tertiary area (1/8 of total size), match from `hash (LSB) >> 2`\n4.  Spill-over area (remaining 1/8) with linear scan, insertion order\n5.  \n\nand within every area, entries are 4 `int`s, where 1 - 3 ints contain 1 - 12 UTF-8 encoded bytes of name (null-padded), and last int is offset in `_names` that contains actual name Strings."
  syntax:
    content: public final class ByteQuadsCanonicalizer
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.ByteQuadsCanonicalizer(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,boolean,int,boolean,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.TableInfo)
  id: ByteQuadsCanonicalizer(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,boolean,int,boolean,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.TableInfo)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, ByteQuadsCanonicalizer.TableInfo state)
  nameWithType: ByteQuadsCanonicalizer.ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, ByteQuadsCanonicalizer.TableInfo state)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, ByteQuadsCanonicalizer.TableInfo state)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.ByteQuadsCanonicalizer*
  type: Constructor
  package: com.fasterxml.jackson.core.sym
  summary: Constructor used when creating a child instance
  syntax:
    content: private ByteQuadsCanonicalizer(ByteQuadsCanonicalizer parent, boolean intern, int seed, boolean failOnDoS, ByteQuadsCanonicalizer.TableInfo state)
    parameters:
    - id: parent
      type: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
    - id: intern
      type: boolean
    - id: seed
      type: int
    - id: failOnDoS
      type: boolean
    - id: state
      type: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.TableInfo
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.ByteQuadsCanonicalizer(int,boolean,int,boolean)
  id: ByteQuadsCanonicalizer(int,boolean,int,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: ByteQuadsCanonicalizer(int sz, boolean intern, int seed, boolean failOnDoS)
  nameWithType: ByteQuadsCanonicalizer.ByteQuadsCanonicalizer(int sz, boolean intern, int seed, boolean failOnDoS)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.ByteQuadsCanonicalizer(int sz, boolean intern, int seed, boolean failOnDoS)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.ByteQuadsCanonicalizer*
  type: Constructor
  package: com.fasterxml.jackson.core.sym
  summary: 'Constructor used for creating per-`JsonFactory` "root" symbol tables: ones used for merging and sharing common symbols'
  syntax:
    content: private ByteQuadsCanonicalizer(int sz, boolean intern, int seed, boolean failOnDoS)
    parameters:
    - id: sz
      type: int
      description: Initial primary hash area size
    - id: intern
      type: boolean
      description: Whether Strings contained should be <xref uid="java.lang.String.intern" data-throw-if-not-resolved="false">String#intern</xref>ed
    - id: seed
      type: int
      description: >-
        Random seed valued used to make it more difficult to cause
           collisions (used for collision-based DoS attacks).
    - id: failOnDoS
      type: boolean
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._reportTooManyCollisions()
  id: _reportTooManyCollisions()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: _reportTooManyCollisions()
  nameWithType: ByteQuadsCanonicalizer._reportTooManyCollisions()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._reportTooManyCollisions()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._reportTooManyCollisions*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: protected void _reportTooManyCollisions()
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(java.lang.String,int)
  id: addName(java.lang.String,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: addName(String name, int q1)
  nameWithType: ByteQuadsCanonicalizer.addName(String name, int q1)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(String name, int q1)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public String addName(String name, int q1)
    parameters:
    - id: name
      type: java.lang.String
    - id: q1
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(java.lang.String,int,int)
  id: addName(java.lang.String,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: addName(String name, int q1, int q2)
  nameWithType: ByteQuadsCanonicalizer.addName(String name, int q1, int q2)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(String name, int q1, int q2)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public String addName(String name, int q1, int q2)
    parameters:
    - id: name
      type: java.lang.String
    - id: q1
      type: int
    - id: q2
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(java.lang.String,int,int,int)
  id: addName(java.lang.String,int,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: addName(String name, int q1, int q2, int q3)
  nameWithType: ByteQuadsCanonicalizer.addName(String name, int q1, int q2, int q3)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(String name, int q1, int q2, int q3)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public String addName(String name, int q1, int q2, int q3)
    parameters:
    - id: name
      type: java.lang.String
    - id: q1
      type: int
    - id: q2
      type: int
    - id: q3
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(java.lang.String,int[],int)
  id: addName(java.lang.String,int[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: addName(String name, int[] q, int qlen)
  nameWithType: ByteQuadsCanonicalizer.addName(String name, int[] q, int qlen)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(String name, int[] q, int qlen)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public String addName(String name, int[] q, int qlen)
    parameters:
    - id: name
      type: java.lang.String
    - id: q
      type: int[]
    - id: qlen
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.bucketCount()
  id: bucketCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: bucketCount()
  nameWithType: ByteQuadsCanonicalizer.bucketCount()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.bucketCount()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.bucketCount*
  type: Method
  package: com.fasterxml.jackson.core.sym
  summary: Returns number of primary slots table has currently
  syntax:
    content: public int bucketCount()
    return:
      type: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int)
  id: calcHash(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: calcHash(int q1)
  nameWithType: ByteQuadsCanonicalizer.calcHash(int q1)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int q1)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public int calcHash(int q1)
    parameters:
    - id: q1
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int,int)
  id: calcHash(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: calcHash(int q1, int q2)
  nameWithType: ByteQuadsCanonicalizer.calcHash(int q1, int q2)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int q1, int q2)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public int calcHash(int q1, int q2)
    parameters:
    - id: q1
      type: int
    - id: q2
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int,int,int)
  id: calcHash(int,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: calcHash(int q1, int q2, int q3)
  nameWithType: ByteQuadsCanonicalizer.calcHash(int q1, int q2, int q3)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int q1, int q2, int q3)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public int calcHash(int q1, int q2, int q3)
    parameters:
    - id: q1
      type: int
    - id: q2
      type: int
    - id: q3
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int[],int)
  id: calcHash(int[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: calcHash(int[] q, int qlen)
  nameWithType: ByteQuadsCanonicalizer.calcHash(int[] q, int qlen)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int[] q, int qlen)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public int calcHash(int[] q, int qlen)
    parameters:
    - id: q
      type: int[]
    - id: qlen
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot()
  id: createRoot()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: createRoot()
  nameWithType: ByteQuadsCanonicalizer.createRoot()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot*
  type: Method
  package: com.fasterxml.jackson.core.sym
  summary: Factory method to call to create a symbol table instance with a randomized seed value.
  syntax:
    content: public static ByteQuadsCanonicalizer createRoot()
    return:
      type: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot(int)
  id: createRoot(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: createRoot(int seed)
  nameWithType: ByteQuadsCanonicalizer.createRoot(int seed)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot(int seed)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: protected static ByteQuadsCanonicalizer createRoot(int seed)
    parameters:
    - id: seed
      type: int
    return:
      type: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int)
  id: findName(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: findName(int q1)
  nameWithType: ByteQuadsCanonicalizer.findName(int q1)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int q1)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public String findName(int q1)
    parameters:
    - id: q1
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int,int)
  id: findName(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: findName(int q1, int q2)
  nameWithType: ByteQuadsCanonicalizer.findName(int q1, int q2)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int q1, int q2)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public String findName(int q1, int q2)
    parameters:
    - id: q1
      type: int
    - id: q2
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int,int,int)
  id: findName(int,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: findName(int q1, int q2, int q3)
  nameWithType: ByteQuadsCanonicalizer.findName(int q1, int q2, int q3)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int q1, int q2, int q3)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public String findName(int q1, int q2, int q3)
    parameters:
    - id: q1
      type: int
    - id: q2
      type: int
    - id: q3
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int[],int)
  id: findName(int[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: findName(int[] q, int qlen)
  nameWithType: ByteQuadsCanonicalizer.findName(int[] q, int qlen)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int[] q, int qlen)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public String findName(int[] q, int qlen)
    parameters:
    - id: q
      type: int[]
    - id: qlen
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.hashSeed()
  id: hashSeed()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: hashSeed()
  nameWithType: ByteQuadsCanonicalizer.hashSeed()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.hashSeed()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.hashSeed*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public int hashSeed()
    return:
      type: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.makeChild(int)
  id: makeChild(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: makeChild(int flags)
  nameWithType: ByteQuadsCanonicalizer.makeChild(int flags)
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.makeChild(int flags)
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.makeChild*
  type: Method
  package: com.fasterxml.jackson.core.sym
  summary: Factory method used to create actual symbol table instance to use for parsing.
  syntax:
    content: public ByteQuadsCanonicalizer makeChild(int flags)
    parameters:
    - id: flags
      type: int
    return:
      type: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.maybeDirty()
  id: maybeDirty()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: maybeDirty()
  nameWithType: ByteQuadsCanonicalizer.maybeDirty()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.maybeDirty()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.maybeDirty*
  type: Method
  package: com.fasterxml.jackson.core.sym
  summary: Method called to check to quickly see if a child symbol table may have gotten additional entries. Used for checking to see if a child table should be merged into shared table.
  syntax:
    content: public boolean maybeDirty()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.primaryCount()
  id: primaryCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: primaryCount()
  nameWithType: ByteQuadsCanonicalizer.primaryCount()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.primaryCount()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.primaryCount*
  type: Method
  package: com.fasterxml.jackson.core.sym
  summary: Method mostly needed by unit tests; calculates number of entries that are in the primary slot set. These are "perfect" entries, accessible with a single lookup
  syntax:
    content: public int primaryCount()
    return:
      type: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.release()
  id: release()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: release()
  nameWithType: ByteQuadsCanonicalizer.release()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.release()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.release*
  type: Method
  package: com.fasterxml.jackson.core.sym
  summary: Method called by the using code to indicate it is done with this instance. This lets instance merge accumulated changes into parent (if need be), safely and efficiently, and without calling code having to know about parent information.
  syntax:
    content: public void release()
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.secondaryCount()
  id: secondaryCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: secondaryCount()
  nameWithType: ByteQuadsCanonicalizer.secondaryCount()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.secondaryCount()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.secondaryCount*
  type: Method
  package: com.fasterxml.jackson.core.sym
  summary: Method mostly needed by unit tests; calculates number of entries in secondary buckets
  syntax:
    content: public int secondaryCount()
    return:
      type: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.size()
  id: size()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: size()
  nameWithType: ByteQuadsCanonicalizer.size()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.size()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.size*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public int size()
    return:
      type: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.spilloverCount()
  id: spilloverCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: spilloverCount()
  nameWithType: ByteQuadsCanonicalizer.spilloverCount()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.spilloverCount()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.spilloverCount*
  type: Method
  package: com.fasterxml.jackson.core.sym
  summary: Method mostly needed by unit tests; calculates number of entries in shared spillover area
  syntax:
    content: public int spilloverCount()
    return:
      type: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.tertiaryCount()
  id: tertiaryCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: tertiaryCount()
  nameWithType: ByteQuadsCanonicalizer.tertiaryCount()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.tertiaryCount()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.tertiaryCount*
  type: Method
  package: com.fasterxml.jackson.core.sym
  summary: Method mostly needed by unit tests; calculates number of entries in tertiary buckets
  syntax:
    content: public int tertiaryCount()
    return:
      type: int
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: toString()
  nameWithType: ByteQuadsCanonicalizer.toString()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.toString()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.toString*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.totalCount()
  id: totalCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer
  langs:
  - java
  name: totalCount()
  nameWithType: ByteQuadsCanonicalizer.totalCount()
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.totalCount()
  overload: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.totalCount*
  type: Method
  package: com.fasterxml.jackson.core.sym
  syntax:
    content: public int totalCount()
    return:
      type: int
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.ByteQuadsCanonicalizer*
  name: ByteQuadsCanonicalizer
  nameWithType: ByteQuadsCanonicalizer.ByteQuadsCanonicalizer
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.ByteQuadsCanonicalizer
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.TableInfo
  spec.java:
  - uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.TableInfo
    name: TableInfo
    fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.TableInfo
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot*
  name: createRoot
  nameWithType: ByteQuadsCanonicalizer.createRoot
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.createRoot
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.makeChild*
  name: makeChild
  nameWithType: ByteQuadsCanonicalizer.makeChild
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.makeChild
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.release*
  name: release
  nameWithType: ByteQuadsCanonicalizer.release
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.release
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.size*
  name: size
  nameWithType: ByteQuadsCanonicalizer.size
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.size
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.bucketCount*
  name: bucketCount
  nameWithType: ByteQuadsCanonicalizer.bucketCount
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.bucketCount
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.maybeDirty*
  name: maybeDirty
  nameWithType: ByteQuadsCanonicalizer.maybeDirty
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.maybeDirty
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.hashSeed*
  name: hashSeed
  nameWithType: ByteQuadsCanonicalizer.hashSeed
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.hashSeed
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.primaryCount*
  name: primaryCount
  nameWithType: ByteQuadsCanonicalizer.primaryCount
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.primaryCount
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.secondaryCount*
  name: secondaryCount
  nameWithType: ByteQuadsCanonicalizer.secondaryCount
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.secondaryCount
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.tertiaryCount*
  name: tertiaryCount
  nameWithType: ByteQuadsCanonicalizer.tertiaryCount
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.tertiaryCount
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.spilloverCount*
  name: spilloverCount
  nameWithType: ByteQuadsCanonicalizer.spilloverCount
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.spilloverCount
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.totalCount*
  name: totalCount
  nameWithType: ByteQuadsCanonicalizer.totalCount
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.totalCount
  package: com.fasterxml.jackson.core.sym
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.toString*
  name: toString
  nameWithType: ByteQuadsCanonicalizer.toString
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.toString
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName*
  name: findName
  nameWithType: ByteQuadsCanonicalizer.findName
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName
  package: com.fasterxml.jackson.core.sym
- uid: int[]
  spec.java:
  - uid: int
    name: int
    fullName: int
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName*
  name: addName
  nameWithType: ByteQuadsCanonicalizer.addName
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash*
  name: calcHash
  nameWithType: ByteQuadsCanonicalizer.calcHash
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash
  package: com.fasterxml.jackson.core.sym
- uid: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._reportTooManyCollisions*
  name: _reportTooManyCollisions
  nameWithType: ByteQuadsCanonicalizer._reportTooManyCollisions
  fullName: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._reportTooManyCollisions
  package: com.fasterxml.jackson.core.sym
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
