### YamlMime:ManagedReference
items:
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient
  id: AnomalyDetectorAsyncClient
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector
  children:
  - com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectChangePoint(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  - com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectChangePointWithResponse(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  - com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectEntireSeries(com.azure.ai.anomalydetector.models.DetectRequest)
  - com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectEntireSeriesWithResponse(com.azure.ai.anomalydetector.models.DetectRequest)
  - com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectLastPoint(com.azure.ai.anomalydetector.models.DetectRequest)
  - com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectLastPointWithResponse(com.azure.ai.anomalydetector.models.DetectRequest)
  langs:
  - java
  name: AnomalyDetectorAsyncClient
  nameWithType: AnomalyDetectorAsyncClient
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient
  type: Class
  package: com.azure.ai.anomalydetector
  summary: Initializes a new instance of the asynchronous AnomalyDetectorClient type.
  syntax:
    content: public final class AnomalyDetectorAsyncClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.AnomalyDetectorAsyncClient(com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl)
  id: AnomalyDetectorAsyncClient(com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient
  langs:
  - java
  name: AnomalyDetectorAsyncClient(AnomalyDetectorClientImpl serviceClient)
  nameWithType: AnomalyDetectorAsyncClient.AnomalyDetectorAsyncClient(AnomalyDetectorClientImpl serviceClient)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.AnomalyDetectorAsyncClient(AnomalyDetectorClientImpl serviceClient)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.AnomalyDetectorAsyncClient*
  type: Constructor
  package: com.azure.ai.anomalydetector
  summary: Initializes an instance of AnomalyDetectorClient client.
  syntax:
    content: " AnomalyDetectorAsyncClient(AnomalyDetectorClientImpl serviceClient)"
    parameters:
    - id: serviceClient
      type: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectChangePoint(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  id: detectChangePoint(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient
  langs:
  - java
  name: detectChangePoint(ChangePointDetectRequest body)
  nameWithType: AnomalyDetectorAsyncClient.detectChangePoint(ChangePointDetectRequest body)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectChangePoint(ChangePointDetectRequest body)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectChangePoint*
  type: Method
  package: com.azure.ai.anomalydetector
  summary: Evaluate change point score of every series point.
  syntax:
    content: public Mono<ChangePointDetectResponse> detectChangePoint(ChangePointDetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
      description: >-
        Time series points and granularity is needed. Advanced model parameters can also be set in the
             request if needed.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectChangePointWithResponse(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  id: detectChangePointWithResponse(com.azure.ai.anomalydetector.models.ChangePointDetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient
  langs:
  - java
  name: detectChangePointWithResponse(ChangePointDetectRequest body)
  nameWithType: AnomalyDetectorAsyncClient.detectChangePointWithResponse(ChangePointDetectRequest body)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectChangePointWithResponse(ChangePointDetectRequest body)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectChangePointWithResponse*
  type: Method
  package: com.azure.ai.anomalydetector
  summary: Evaluate change point score of every series point.
  syntax:
    content: public Mono<Response<ChangePointDetectResponse>> detectChangePointWithResponse(ChangePointDetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
      description: >-
        Time series points and granularity is needed. Advanced model parameters can also be set in the
             request if needed.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>>
      description: the response.
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectEntireSeries(com.azure.ai.anomalydetector.models.DetectRequest)
  id: detectEntireSeries(com.azure.ai.anomalydetector.models.DetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient
  langs:
  - java
  name: detectEntireSeries(DetectRequest body)
  nameWithType: AnomalyDetectorAsyncClient.detectEntireSeries(DetectRequest body)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectEntireSeries(DetectRequest body)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectEntireSeries*
  type: Method
  package: com.azure.ai.anomalydetector
  summary: This operation generates a model using an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series.
  syntax:
    content: public Mono<EntireDetectResponse> detectEntireSeries(DetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.EntireDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectEntireSeriesWithResponse(com.azure.ai.anomalydetector.models.DetectRequest)
  id: detectEntireSeriesWithResponse(com.azure.ai.anomalydetector.models.DetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient
  langs:
  - java
  name: detectEntireSeriesWithResponse(DetectRequest body)
  nameWithType: AnomalyDetectorAsyncClient.detectEntireSeriesWithResponse(DetectRequest body)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectEntireSeriesWithResponse(DetectRequest body)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectEntireSeriesWithResponse*
  type: Method
  package: com.azure.ai.anomalydetector
  summary: This operation generates a model using an entire series, each point is detected with the same model. With this method, points before and after a certain point are used to determine whether it is an anomaly. The entire detection can give user an overall status of the time series.
  syntax:
    content: public Mono<Response<EntireDetectResponse>> detectEntireSeriesWithResponse(DetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.EntireDetectResponse>>
      description: the response.
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectLastPoint(com.azure.ai.anomalydetector.models.DetectRequest)
  id: detectLastPoint(com.azure.ai.anomalydetector.models.DetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient
  langs:
  - java
  name: detectLastPoint(DetectRequest body)
  nameWithType: AnomalyDetectorAsyncClient.detectLastPoint(DetectRequest body)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectLastPoint(DetectRequest body)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectLastPoint*
  type: Method
  package: com.azure.ai.anomalydetector
  summary: This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics.
  syntax:
    content: public Mono<LastDetectResponse> detectLastPoint(DetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.LastDetectResponse>
      description: the response.
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectLastPointWithResponse(com.azure.ai.anomalydetector.models.DetectRequest)
  id: detectLastPointWithResponse(com.azure.ai.anomalydetector.models.DetectRequest)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient
  langs:
  - java
  name: detectLastPointWithResponse(DetectRequest body)
  nameWithType: AnomalyDetectorAsyncClient.detectLastPointWithResponse(DetectRequest body)
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectLastPointWithResponse(DetectRequest body)
  overload: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectLastPointWithResponse*
  type: Method
  package: com.azure.ai.anomalydetector
  summary: This operation generates a model using points before the latest one. With this method, only historical points are used to determine whether the target point is an anomaly. The latest point detecting operation matches the scenario of real-time monitoring of business metrics.
  syntax:
    content: public Mono<Response<LastDetectResponse>> detectLastPointWithResponse(DetectRequest body)
    parameters:
    - id: body
      type: com.azure.ai.anomalydetector.models.DetectRequest
      description: Time series points and period if needed. Advanced model parameters can also be set in the request.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.LastDetectResponse>>
      description: the response.
references:
- uid: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
  name: AnomalyDetectorClientImpl
  nameWithType: AnomalyDetectorClientImpl
  fullName: com.azure.ai.anomalydetector.implementation.AnomalyDetectorClientImpl
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.AnomalyDetectorAsyncClient*
  name: AnomalyDetectorAsyncClient
  nameWithType: AnomalyDetectorAsyncClient.AnomalyDetectorAsyncClient
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.AnomalyDetectorAsyncClient
  package: com.azure.ai.anomalydetector
- uid: com.azure.ai.anomalydetector.models.DetectRequest
  name: DetectRequest
  nameWithType: DetectRequest
  fullName: com.azure.ai.anomalydetector.models.DetectRequest
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.EntireDetectResponse>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.EntireDetectResponse
    name: EntireDetectResponse
    fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectEntireSeriesWithResponse*
  name: detectEntireSeriesWithResponse
  nameWithType: AnomalyDetectorAsyncClient.detectEntireSeriesWithResponse
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectEntireSeriesWithResponse
  package: com.azure.ai.anomalydetector
- uid: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.EntireDetectResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.EntireDetectResponse
    name: EntireDetectResponse
    fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectEntireSeries*
  name: detectEntireSeries
  nameWithType: AnomalyDetectorAsyncClient.detectEntireSeries
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectEntireSeries
  package: com.azure.ai.anomalydetector
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.LastDetectResponse>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.LastDetectResponse
    name: LastDetectResponse
    fullName: com.azure.ai.anomalydetector.models.LastDetectResponse
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectLastPointWithResponse*
  name: detectLastPointWithResponse
  nameWithType: AnomalyDetectorAsyncClient.detectLastPointWithResponse
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectLastPointWithResponse
  package: com.azure.ai.anomalydetector
- uid: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.LastDetectResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.LastDetectResponse
    name: LastDetectResponse
    fullName: com.azure.ai.anomalydetector.models.LastDetectResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectLastPoint*
  name: detectLastPoint
  nameWithType: AnomalyDetectorAsyncClient.detectLastPoint
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectLastPoint
  package: com.azure.ai.anomalydetector
- uid: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
  name: ChangePointDetectRequest
  nameWithType: ChangePointDetectRequest
  fullName: com.azure.ai.anomalydetector.models.ChangePointDetectRequest
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
    name: ChangePointDetectResponse
    fullName: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectChangePointWithResponse*
  name: detectChangePointWithResponse
  nameWithType: AnomalyDetectorAsyncClient.detectChangePointWithResponse
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectChangePointWithResponse
  package: com.azure.ai.anomalydetector
- uid: reactor.core.publisher.Mono<com.azure.ai.anomalydetector.models.ChangePointDetectResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
    name: ChangePointDetectResponse
    fullName: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectChangePoint*
  name: detectChangePoint
  nameWithType: AnomalyDetectorAsyncClient.detectChangePoint
  fullName: com.azure.ai.anomalydetector.AnomalyDetectorAsyncClient.detectChangePoint
  package: com.azure.ai.anomalydetector
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse
  name: EntireDetectResponse
  nameWithType: EntireDetectResponse
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse
- uid: com.azure.ai.anomalydetector.models.LastDetectResponse
  name: LastDetectResponse
  nameWithType: LastDetectResponse
  fullName: com.azure.ai.anomalydetector.models.LastDetectResponse
- uid: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
  name: ChangePointDetectResponse
  nameWithType: ChangePointDetectResponse
  fullName: com.azure.ai.anomalydetector.models.ChangePointDetectResponse
