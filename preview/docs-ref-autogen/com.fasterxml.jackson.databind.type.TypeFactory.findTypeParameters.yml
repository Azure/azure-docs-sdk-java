### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters*"
fullName: "com.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters"
name: "findTypeParameters"
nameWithType: "TypeFactory.findTypeParameters"
members:
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(JavaType type, Class<?> expType)"
  name: "findTypeParameters(JavaType type, Class<?> expType)"
  nameWithType: "TypeFactory.findTypeParameters(JavaType type, Class<?> expType)"
  summary: "Method that is to figure out actual type parameters that given class binds to generic types defined by given (generic) interface or class. This could mean, for example, trying to figure out key and value types for Map implementations."
  parameters:
  - description: "Sub-type (leaf type) that implements <code>expType</code>"
    name: "type"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "expType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public JavaType[] findTypeParameters(JavaType type, Class<?> expType)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(java.lang.Class<?>,java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(Class<?> clz, Class<?> expType)"
  name: "findTypeParameters(Class<?> clz, Class<?> expType)"
  nameWithType: "TypeFactory.findTypeParameters(Class<?> clz, Class<?> expType)"
  parameters:
  - name: "clz"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "expType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public JavaType[] findTypeParameters(Class<?> clz, Class<?> expType)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(java.lang.Class<?>,java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(Class<?> clz, Class<?> expType, TypeBindings bindings)"
  name: "findTypeParameters(Class<?> clz, Class<?> expType, TypeBindings bindings)"
  nameWithType: "TypeFactory.findTypeParameters(Class<?> clz, Class<?> expType, TypeBindings bindings)"
  parameters:
  - name: "clz"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "expType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - name: "bindings"
    type: "<xref href=\"com.fasterxml.jackson.databind.type.TypeBindings?alt=com.fasterxml.jackson.databind.type.TypeBindings&text=TypeBindings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JavaType[] findTypeParameters(Class<?> clz, Class<?> expType, TypeBindings bindings)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />[]"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
