### YamlMime:JavaType
uid: "com.azure.storage.common.policy.MetadataValidationPolicy"
fullName: "com.azure.storage.common.policy.MetadataValidationPolicy"
name: "MetadataValidationPolicy"
nameWithType: "MetadataValidationPolicy"
summary: "This is a request policy in an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.http.HttpPipeline\"></xref> to validate that metadata does not contain leading or trailing whitespace characters."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class MetadataValidationPolicy implements HttpPipelinePolicy"
constructors:
- uid: "com.azure.storage.common.policy.MetadataValidationPolicy.MetadataValidationPolicy()"
  fullName: "com.azure.storage.common.policy.MetadataValidationPolicy.MetadataValidationPolicy()"
  name: "MetadataValidationPolicy()"
  nameWithType: "MetadataValidationPolicy.MetadataValidationPolicy()"
  syntax: "public MetadataValidationPolicy()"
methods:
- uid: "com.azure.storage.common.policy.MetadataValidationPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  fullName: "com.azure.storage.common.policy.MetadataValidationPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  name: "process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  nameWithType: "MetadataValidationPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "next"
    type: "<xref href=\"com.azure.core.http.HttpPipelineNextPolicy?alt=com.azure.core.http.HttpPipelineNextPolicy&text=HttpPipelineNextPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "This is a request policy in an <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.http.HttpPipeline\"></xref> to validate that metadata does not contain leading or trailing whitespace characters. We do this since the service trims whitespace for the string to sign, but the client does not, resulting in an auth failure."
implements:
- "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.storage.common.policy"
artifact: com.azure:azure-storage-common:12.17.0-beta.1
