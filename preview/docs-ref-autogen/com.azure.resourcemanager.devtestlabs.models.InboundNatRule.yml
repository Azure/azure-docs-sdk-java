### YamlMime:JavaType
uid: "com.azure.resourcemanager.devtestlabs.models.InboundNatRule"
fullName: "com.azure.resourcemanager.devtestlabs.models.InboundNatRule"
name: "InboundNatRule"
nameWithType: "InboundNatRule"
summary: "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class InboundNatRule"
constructors:
- "com.azure.resourcemanager.devtestlabs.models.InboundNatRule.InboundNatRule()"
methods:
- "com.azure.resourcemanager.devtestlabs.models.InboundNatRule.backendPort()"
- "com.azure.resourcemanager.devtestlabs.models.InboundNatRule.frontendPort()"
- "com.azure.resourcemanager.devtestlabs.models.InboundNatRule.transportProtocol()"
- "com.azure.resourcemanager.devtestlabs.models.InboundNatRule.validate()"
- "com.azure.resourcemanager.devtestlabs.models.InboundNatRule.withBackendPort(java.lang.Integer)"
- "com.azure.resourcemanager.devtestlabs.models.InboundNatRule.withFrontendPort(java.lang.Integer)"
- "com.azure.resourcemanager.devtestlabs.models.InboundNatRule.withTransportProtocol(com.azure.resourcemanager.devtestlabs.models.TransportProtocol)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.devtestlabs.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-devtestlabs:1.0.0-beta.1
