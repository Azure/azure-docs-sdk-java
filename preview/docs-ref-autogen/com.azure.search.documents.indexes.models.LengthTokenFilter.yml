### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.LengthTokenFilter"
fullName: "com.azure.search.documents.indexes.models.LengthTokenFilter"
name: "LengthTokenFilter"
nameWithType: "LengthTokenFilter"
summary: "Removes words that are too long or too short."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter?alt=com.azure.search.documents.indexes.models.TokenFilter&text=TokenFilter\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter.fromJson(com.azure.json.JsonReader)?alt=com.azure.search.documents.indexes.models.TokenFilter.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter.getName()?alt=com.azure.search.documents.indexes.models.TokenFilter.getName&text=getName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter.getOdataType()?alt=com.azure.search.documents.indexes.models.TokenFilter.getOdataType&text=getOdataType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter.toJson(com.azure.json.JsonWriter)?alt=com.azure.search.documents.indexes.models.TokenFilter.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **LengthTokenFilter**</br> extends <xref href=\"com.azure.search.documents.indexes.models.TokenFilter?alt=com.azure.search.documents.indexes.models.TokenFilter&text=TokenFilter\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.search.documents.indexes.models.LengthTokenFilter.LengthTokenFilter(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.LengthTokenFilter.LengthTokenFilter(String name)"
  name: "LengthTokenFilter(String name)"
  nameWithType: "LengthTokenFilter.LengthTokenFilter(String name)"
  summary: "Creates an instance of Length<wbr>Token<wbr>Filter class."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LengthTokenFilter(String name)"
  desc: "Creates an instance of LengthTokenFilter class."
methods:
- uid: "com.azure.search.documents.indexes.models.LengthTokenFilter.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.search.documents.indexes.models.LengthTokenFilter.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "LengthTokenFilter.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Length<wbr>Token<wbr>Filter from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static LengthTokenFilter fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of LengthTokenFilter from the JsonReader."
  returns:
    description: "An instance of LengthTokenFilter if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.search.documents.indexes.models.LengthTokenFilter?alt=com.azure.search.documents.indexes.models.LengthTokenFilter&text=LengthTokenFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.LengthTokenFilter.getMaxLength()"
  fullName: "com.azure.search.documents.indexes.models.LengthTokenFilter.getMaxLength()"
  name: "getMaxLength()"
  nameWithType: "LengthTokenFilter.getMaxLength()"
  summary: "Get the max<wbr>Length property: The maximum length in characters."
  syntax: "public Integer getMaxLength()"
  desc: "Get the maxLength property: The maximum length in characters. Default and maximum is 300."
  returns:
    description: "the maxLength value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.search.documents.indexes.models.LengthTokenFilter.getMinLength()"
  fullName: "com.azure.search.documents.indexes.models.LengthTokenFilter.getMinLength()"
  name: "getMinLength()"
  nameWithType: "LengthTokenFilter.getMinLength()"
  summary: "Get the min<wbr>Length property: The minimum length in characters."
  syntax: "public Integer getMinLength()"
  desc: "Get the minLength property: The minimum length in characters. Default is 0. Maximum is 300. Must be less than the value of max."
  returns:
    description: "the minLength value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.search.documents.indexes.models.LengthTokenFilter.getOdataType()"
  fullName: "com.azure.search.documents.indexes.models.LengthTokenFilter.getOdataType()"
  name: "getOdataType()"
  nameWithType: "LengthTokenFilter.getOdataType()"
  summary: "Get the odata<wbr>Type property: A URI fragment specifying the type of token filter."
  overridden: "com.azure.search.documents.indexes.models.TokenFilter.getOdataType()"
  syntax: "public String getOdataType()"
  desc: "Get the odataType property: A URI fragment specifying the type of token filter."
  returns:
    description: "the odataType value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.documents.indexes.models.LengthTokenFilter.setMaxLength(java.lang.Integer)"
  fullName: "com.azure.search.documents.indexes.models.LengthTokenFilter.setMaxLength(Integer maxLength)"
  name: "setMaxLength(Integer maxLength)"
  nameWithType: "LengthTokenFilter.setMaxLength(Integer maxLength)"
  summary: "Set the max<wbr>Length property: The maximum length in characters."
  parameters:
  - description: "the maxLength value to set."
    name: "maxLength"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public LengthTokenFilter setMaxLength(Integer maxLength)"
  desc: "Set the maxLength property: The maximum length in characters. Default and maximum is 300."
  returns:
    description: "the LengthTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.LengthTokenFilter?alt=com.azure.search.documents.indexes.models.LengthTokenFilter&text=LengthTokenFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.LengthTokenFilter.setMinLength(java.lang.Integer)"
  fullName: "com.azure.search.documents.indexes.models.LengthTokenFilter.setMinLength(Integer minLength)"
  name: "setMinLength(Integer minLength)"
  nameWithType: "LengthTokenFilter.setMinLength(Integer minLength)"
  summary: "Set the min<wbr>Length property: The minimum length in characters."
  parameters:
  - description: "the minLength value to set."
    name: "minLength"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public LengthTokenFilter setMinLength(Integer minLength)"
  desc: "Set the minLength property: The minimum length in characters. Default is 0. Maximum is 300. Must be less than the value of max."
  returns:
    description: "the LengthTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.LengthTokenFilter?alt=com.azure.search.documents.indexes.models.LengthTokenFilter&text=LengthTokenFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.LengthTokenFilter.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.search.documents.indexes.models.LengthTokenFilter.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "LengthTokenFilter.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.search.documents.indexes.models.TokenFilter.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Removes words that are too long or too short. This token filter is implemented using Apache Lucene."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.8.0-beta.1
