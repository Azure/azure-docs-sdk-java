### YamlMime:JavaMember
uid: "org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.parseChallengeResponse*"
fullName: "org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.parseChallengeResponse"
name: "parseChallengeResponse"
nameWithType: "AbstractAsyncServerAuthFilter<T>.parseChallengeResponse"
members:
- uid: "org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.parseChallengeResponse(java.lang.String,org.apache.hc.core5.http.protocol.HttpContext)"
  fullName: "org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.parseChallengeResponse(String authorizationValue, HttpContext context)"
  name: "parseChallengeResponse(String authorizationValue, HttpContext context)"
  nameWithType: "AbstractAsyncServerAuthFilter<T>.parseChallengeResponse(String authorizationValue, HttpContext context)"
  summary: "Parses authorization header value into an authentication token sent by the client as a response to an authentication challenge."
  parameters:
  - description: "the authorization header value."
    name: "authorizationValue"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the actual execution context."
    name: "context"
    type: "<xref href=\"org.apache.hc.core5.http.protocol.HttpContext?alt=org.apache.hc.core5.http.protocol.HttpContext&text=HttpContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected abstract T parseChallengeResponse(String authorizationValue, HttpContext context)"
  exceptions:
  - type: "<xref href=\"org.apache.hc.core5.http.HttpException?alt=org.apache.hc.core5.http.HttpException&text=HttpException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "authorization token"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.apache.hc.core5.http.nio.support"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
