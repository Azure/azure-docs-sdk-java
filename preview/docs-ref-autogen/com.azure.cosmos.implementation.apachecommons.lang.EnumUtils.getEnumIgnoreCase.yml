### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.apachecommons.lang.EnumUtils.getEnumIgnoreCase*"
fullName: "com.azure.cosmos.implementation.apachecommons.lang.EnumUtils.<E>getEnumIgnoreCase"
name: "<E>getEnumIgnoreCase"
nameWithType: "EnumUtils.<E>getEnumIgnoreCase"
members:
- uid: "com.azure.cosmos.implementation.apachecommons.lang.EnumUtils.<E>getEnumIgnoreCase(java.lang.Class<E>,java.lang.String)"
  fullName: "com.azure.cosmos.implementation.apachecommons.lang.EnumUtils.<E>getEnumIgnoreCase(Class<E> enumClass, String enumName)"
  name: "<E>getEnumIgnoreCase(Class<E> enumClass, String enumName)"
  nameWithType: "EnumUtils.<E>getEnumIgnoreCase(Class<E> enumClass, String enumName)"
  summary: "Gets the enum for the class, returning `null` if not found.\n\nThis method differs from <xref uid=\"java.lang.Enum.valueOf\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Enum#valueOf\"></xref> in that it does not throw an exception for an invalid enum name and performs case insensitive matching of the name."
  parameters:
  - description: "the class of the enum to query, not null"
    name: "enumClass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the enum name, null returns null"
    name: "enumName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static E <E>getEnumIgnoreCase(Class<E> enumClass, String enumName)"
  returns:
    description: "the enum, null if not found"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.apachecommons.lang"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
