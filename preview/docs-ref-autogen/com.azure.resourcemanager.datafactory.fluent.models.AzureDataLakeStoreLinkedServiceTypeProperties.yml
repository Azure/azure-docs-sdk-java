### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties"
name: "AzureDataLakeStoreLinkedServiceTypeProperties"
nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties"
summary: "Azure Data Lake Store linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureDataLakeStoreLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.AzureDataLakeStoreLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.AzureDataLakeStoreLinkedServiceTypeProperties()"
  name: "AzureDataLakeStoreLinkedServiceTypeProperties()"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.AzureDataLakeStoreLinkedServiceTypeProperties()"
  syntax: "public AzureDataLakeStoreLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.accountName()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.accountName()"
  name: "accountName()"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.accountName()"
  summary: "Get the accountName property: Data Lake Store account name. Type: string (or Expression with resultType string)."
  syntax: "public Object accountName()"
  returns:
    description: "the accountName value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.azureCloudType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.azureCloudType()"
  name: "azureCloudType()"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.azureCloudType()"
  summary: "Get the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  syntax: "public Object azureCloudType()"
  returns:
    description: "the azureCloudType value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.credential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.credential()"
  name: "credential()"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.credential()"
  summary: "Get the credential property: The credential reference containing authentication information."
  syntax: "public CredentialReference credential()"
  returns:
    description: "the credential value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.dataLakeStoreUri()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.dataLakeStoreUri()"
  name: "dataLakeStoreUri()"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.dataLakeStoreUri()"
  summary: "Get the dataLakeStoreUri property: Data Lake Store service URI. Type: string (or Expression with resultType string)."
  syntax: "public Object dataLakeStoreUri()"
  returns:
    description: "the dataLakeStoreUri value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.resourceGroupName()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.resourceGroupName()"
  summary: "Get the resourceGroupName property: Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string)."
  syntax: "public Object resourceGroupName()"
  returns:
    description: "the resourceGroupName value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.servicePrincipalId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.servicePrincipalId()"
  name: "servicePrincipalId()"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.servicePrincipalId()"
  summary: "Get the servicePrincipalId property: The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string)."
  syntax: "public Object servicePrincipalId()"
  returns:
    description: "the servicePrincipalId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.servicePrincipalKey()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.servicePrincipalKey()"
  name: "servicePrincipalKey()"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.servicePrincipalKey()"
  summary: "Get the servicePrincipalKey property: The Key of the application used to authenticate against the Azure Data Lake Store account."
  syntax: "public SecretBase servicePrincipalKey()"
  returns:
    description: "the servicePrincipalKey value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.subscriptionId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.subscriptionId()"
  name: "subscriptionId()"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.subscriptionId()"
  summary: "Get the subscriptionId property: Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string)."
  syntax: "public Object subscriptionId()"
  returns:
    description: "the subscriptionId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.tenant()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.tenant()"
  name: "tenant()"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.tenant()"
  summary: "Get the tenant property: The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
  syntax: "public Object tenant()"
  returns:
    description: "the tenant value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withAccountName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withAccountName(Object accountName)"
  name: "withAccountName(Object accountName)"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.withAccountName(Object accountName)"
  summary: "Set the accountName property: Data Lake Store account name. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the accountName value to set."
    name: "accountName"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeStoreLinkedServiceTypeProperties withAccountName(Object accountName)"
  returns:
    description: "the AzureDataLakeStoreLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties&text=AzureDataLakeStoreLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withAzureCloudType(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withAzureCloudType(Object azureCloudType)"
  name: "withAzureCloudType(Object azureCloudType)"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.withAzureCloudType(Object azureCloudType)"
  summary: "Set the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the azureCloudType value to set."
    name: "azureCloudType"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeStoreLinkedServiceTypeProperties withAzureCloudType(Object azureCloudType)"
  returns:
    description: "the AzureDataLakeStoreLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties&text=AzureDataLakeStoreLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withCredential(com.azure.resourcemanager.datafactory.models.CredentialReference)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withCredential(CredentialReference credential)"
  name: "withCredential(CredentialReference credential)"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.withCredential(CredentialReference credential)"
  summary: "Set the credential property: The credential reference containing authentication information."
  parameters:
  - description: "the credential value to set."
    name: "credential"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeStoreLinkedServiceTypeProperties withCredential(CredentialReference credential)"
  returns:
    description: "the AzureDataLakeStoreLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties&text=AzureDataLakeStoreLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withDataLakeStoreUri(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withDataLakeStoreUri(Object dataLakeStoreUri)"
  name: "withDataLakeStoreUri(Object dataLakeStoreUri)"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.withDataLakeStoreUri(Object dataLakeStoreUri)"
  summary: "Set the dataLakeStoreUri property: Data Lake Store service URI. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the dataLakeStoreUri value to set."
    name: "dataLakeStoreUri"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeStoreLinkedServiceTypeProperties withDataLakeStoreUri(Object dataLakeStoreUri)"
  returns:
    description: "the AzureDataLakeStoreLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties&text=AzureDataLakeStoreLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeStoreLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the AzureDataLakeStoreLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties&text=AzureDataLakeStoreLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withResourceGroupName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withResourceGroupName(Object resourceGroupName)"
  name: "withResourceGroupName(Object resourceGroupName)"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.withResourceGroupName(Object resourceGroupName)"
  summary: "Set the resourceGroupName property: Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string)."
  parameters:
  - description: "the resourceGroupName value to set."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeStoreLinkedServiceTypeProperties withResourceGroupName(Object resourceGroupName)"
  returns:
    description: "the AzureDataLakeStoreLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties&text=AzureDataLakeStoreLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withServicePrincipalId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withServicePrincipalId(Object servicePrincipalId)"
  name: "withServicePrincipalId(Object servicePrincipalId)"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.withServicePrincipalId(Object servicePrincipalId)"
  summary: "Set the servicePrincipalId property: The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the servicePrincipalId value to set."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeStoreLinkedServiceTypeProperties withServicePrincipalId(Object servicePrincipalId)"
  returns:
    description: "the AzureDataLakeStoreLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties&text=AzureDataLakeStoreLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withServicePrincipalKey(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withServicePrincipalKey(SecretBase servicePrincipalKey)"
  name: "withServicePrincipalKey(SecretBase servicePrincipalKey)"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.withServicePrincipalKey(SecretBase servicePrincipalKey)"
  summary: "Set the servicePrincipalKey property: The Key of the application used to authenticate against the Azure Data Lake Store account."
  parameters:
  - description: "the servicePrincipalKey value to set."
    name: "servicePrincipalKey"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeStoreLinkedServiceTypeProperties withServicePrincipalKey(SecretBase servicePrincipalKey)"
  returns:
    description: "the AzureDataLakeStoreLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties&text=AzureDataLakeStoreLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withSubscriptionId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withSubscriptionId(Object subscriptionId)"
  name: "withSubscriptionId(Object subscriptionId)"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.withSubscriptionId(Object subscriptionId)"
  summary: "Set the subscriptionId property: Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string)."
  parameters:
  - description: "the subscriptionId value to set."
    name: "subscriptionId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeStoreLinkedServiceTypeProperties withSubscriptionId(Object subscriptionId)"
  returns:
    description: "the AzureDataLakeStoreLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties&text=AzureDataLakeStoreLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withTenant(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties.withTenant(Object tenant)"
  name: "withTenant(Object tenant)"
  nameWithType: "AzureDataLakeStoreLinkedServiceTypeProperties.withTenant(Object tenant)"
  summary: "Set the tenant property: The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the tenant value to set."
    name: "tenant"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDataLakeStoreLinkedServiceTypeProperties withTenant(Object tenant)"
  returns:
    description: "the AzureDataLakeStoreLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.AzureDataLakeStoreLinkedServiceTypeProperties&text=AzureDataLakeStoreLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
