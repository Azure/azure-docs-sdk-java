### YamlMime:JavaType
uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner"
fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner"
name: "CustomImageInner"
nameWithType: "CustomImageInner"
summary: "A custom image."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CustomImageInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.CustomImageInner()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.CustomImageInner()"
  name: "CustomImageInner()"
  nameWithType: "CustomImageInner.CustomImageInner()"
  syntax: "public CustomImageInner()"
methods:
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.author()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.author()"
  name: "author()"
  nameWithType: "CustomImageInner.author()"
  summary: "Get the author property: The author of the custom image."
  syntax: "public String author()"
  desc: "Get the author property: The author of the custom image."
  returns:
    description: "the author value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.creationDate()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.creationDate()"
  name: "creationDate()"
  nameWithType: "CustomImageInner.creationDate()"
  summary: "Get the creation<wbr>Date property: The creation date of the custom image."
  syntax: "public OffsetDateTime creationDate()"
  desc: "Get the creationDate property: The creation date of the custom image."
  returns:
    description: "the creationDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.customImagePlan()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.customImagePlan()"
  name: "customImagePlan()"
  nameWithType: "CustomImageInner.customImagePlan()"
  summary: "Get the custom<wbr>Image<wbr>Plan property: Storage information about the plan related to this custom image."
  syntax: "public CustomImagePropertiesFromPlan customImagePlan()"
  desc: "Get the customImagePlan property: Storage information about the plan related to this custom image."
  returns:
    description: "the customImagePlan value."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesFromPlan?alt=com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesFromPlan&text=CustomImagePropertiesFromPlan\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.dataDiskStorageInfo()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.dataDiskStorageInfo()"
  name: "dataDiskStorageInfo()"
  nameWithType: "CustomImageInner.dataDiskStorageInfo()"
  summary: "Get the data<wbr>Disk<wbr>Storage<wbr>Info property: Storage information about the data disks present in the custom image."
  syntax: "public List<DataDiskStorageTypeInfo> dataDiskStorageInfo()"
  desc: "Get the dataDiskStorageInfo property: Storage information about the data disks present in the custom image."
  returns:
    description: "the dataDiskStorageInfo value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.devtestlabs.models.DataDiskStorageTypeInfo?alt=com.azure.resourcemanager.devtestlabs.models.DataDiskStorageTypeInfo&text=DataDiskStorageTypeInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.description()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.description()"
  name: "description()"
  nameWithType: "CustomImageInner.description()"
  summary: "Get the description property: The description of the custom image."
  syntax: "public String description()"
  desc: "Get the description property: The description of the custom image."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.isPlanAuthorized()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.isPlanAuthorized()"
  name: "isPlanAuthorized()"
  nameWithType: "CustomImageInner.isPlanAuthorized()"
  summary: "Get the is<wbr>Plan<wbr>Authorized property: Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment."
  syntax: "public Boolean isPlanAuthorized()"
  desc: "Get the isPlanAuthorized property: Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment."
  returns:
    description: "the isPlanAuthorized value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.managedImageId()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.managedImageId()"
  name: "managedImageId()"
  nameWithType: "CustomImageInner.managedImageId()"
  summary: "Get the managed<wbr>Image<wbr>Id property: The Managed Image Id backing the custom image."
  syntax: "public String managedImageId()"
  desc: "Get the managedImageId property: The Managed Image Id backing the custom image."
  returns:
    description: "the managedImageId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.managedSnapshotId()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.managedSnapshotId()"
  name: "managedSnapshotId()"
  nameWithType: "CustomImageInner.managedSnapshotId()"
  summary: "Get the managed<wbr>Snapshot<wbr>Id property: The Managed Snapshot Id backing the custom image."
  syntax: "public String managedSnapshotId()"
  desc: "Get the managedSnapshotId property: The Managed Snapshot Id backing the custom image."
  returns:
    description: "the managedSnapshotId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.provisioningState()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "CustomImageInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning status of the resource."
  syntax: "public String provisioningState()"
  desc: "Get the provisioningState property: The provisioning status of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.uniqueIdentifier()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.uniqueIdentifier()"
  name: "uniqueIdentifier()"
  nameWithType: "CustomImageInner.uniqueIdentifier()"
  summary: "Get the unique<wbr>Identifier property: The unique immutable identifier of a resource (Guid)."
  syntax: "public String uniqueIdentifier()"
  desc: "Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid)."
  returns:
    description: "the uniqueIdentifier value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.validate()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.validate()"
  name: "validate()"
  nameWithType: "CustomImageInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.vhd()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.vhd()"
  name: "vhd()"
  nameWithType: "CustomImageInner.vhd()"
  summary: "Get the vhd property: The VHD from which the image is to be created."
  syntax: "public CustomImagePropertiesCustom vhd()"
  desc: "Get the vhd property: The VHD from which the image is to be created."
  returns:
    description: "the vhd value."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesCustom?alt=com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesCustom&text=CustomImagePropertiesCustom\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.vm()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.vm()"
  name: "vm()"
  nameWithType: "CustomImageInner.vm()"
  summary: "Get the vm property: The virtual machine from which the image is to be created."
  syntax: "public CustomImagePropertiesFromVm vm()"
  desc: "Get the vm property: The virtual machine from which the image is to be created."
  returns:
    description: "the vm value."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesFromVm?alt=com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesFromVm&text=CustomImagePropertiesFromVm\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withAuthor(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withAuthor(String author)"
  name: "withAuthor(String author)"
  nameWithType: "CustomImageInner.withAuthor(String author)"
  summary: "Set the author property: The author of the custom image."
  parameters:
  - description: "the author value to set."
    name: "author"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomImageInner withAuthor(String author)"
  desc: "Set the author property: The author of the custom image."
  returns:
    description: "the CustomImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner&text=CustomImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withCustomImagePlan(com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesFromPlan)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withCustomImagePlan(CustomImagePropertiesFromPlan customImagePlan)"
  name: "withCustomImagePlan(CustomImagePropertiesFromPlan customImagePlan)"
  nameWithType: "CustomImageInner.withCustomImagePlan(CustomImagePropertiesFromPlan customImagePlan)"
  summary: "Set the custom<wbr>Image<wbr>Plan property: Storage information about the plan related to this custom image."
  parameters:
  - description: "the customImagePlan value to set."
    name: "customImagePlan"
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesFromPlan?alt=com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesFromPlan&text=CustomImagePropertiesFromPlan\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomImageInner withCustomImagePlan(CustomImagePropertiesFromPlan customImagePlan)"
  desc: "Set the customImagePlan property: Storage information about the plan related to this custom image."
  returns:
    description: "the CustomImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner&text=CustomImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withDataDiskStorageInfo(java.util.List<com.azure.resourcemanager.devtestlabs.models.DataDiskStorageTypeInfo>)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withDataDiskStorageInfo(List<DataDiskStorageTypeInfo> dataDiskStorageInfo)"
  name: "withDataDiskStorageInfo(List<DataDiskStorageTypeInfo> dataDiskStorageInfo)"
  nameWithType: "CustomImageInner.withDataDiskStorageInfo(List<DataDiskStorageTypeInfo> dataDiskStorageInfo)"
  summary: "Set the data<wbr>Disk<wbr>Storage<wbr>Info property: Storage information about the data disks present in the custom image."
  parameters:
  - description: "the dataDiskStorageInfo value to set."
    name: "dataDiskStorageInfo"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.devtestlabs.models.DataDiskStorageTypeInfo?alt=com.azure.resourcemanager.devtestlabs.models.DataDiskStorageTypeInfo&text=DataDiskStorageTypeInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CustomImageInner withDataDiskStorageInfo(List<DataDiskStorageTypeInfo> dataDiskStorageInfo)"
  desc: "Set the dataDiskStorageInfo property: Storage information about the data disks present in the custom image."
  returns:
    description: "the CustomImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner&text=CustomImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "CustomImageInner.withDescription(String description)"
  summary: "Set the description property: The description of the custom image."
  parameters:
  - description: "the description value to set."
    name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomImageInner withDescription(String description)"
  desc: "Set the description property: The description of the custom image."
  returns:
    description: "the CustomImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner&text=CustomImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withIsPlanAuthorized(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withIsPlanAuthorized(Boolean isPlanAuthorized)"
  name: "withIsPlanAuthorized(Boolean isPlanAuthorized)"
  nameWithType: "CustomImageInner.withIsPlanAuthorized(Boolean isPlanAuthorized)"
  summary: "Set the is<wbr>Plan<wbr>Authorized property: Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment."
  parameters:
  - description: "the isPlanAuthorized value to set."
    name: "isPlanAuthorized"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomImageInner withIsPlanAuthorized(Boolean isPlanAuthorized)"
  desc: "Set the isPlanAuthorized property: Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment."
  returns:
    description: "the CustomImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner&text=CustomImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "CustomImageInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomImageInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner&text=CustomImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withManagedImageId(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withManagedImageId(String managedImageId)"
  name: "withManagedImageId(String managedImageId)"
  nameWithType: "CustomImageInner.withManagedImageId(String managedImageId)"
  summary: "Set the managed<wbr>Image<wbr>Id property: The Managed Image Id backing the custom image."
  parameters:
  - description: "the managedImageId value to set."
    name: "managedImageId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomImageInner withManagedImageId(String managedImageId)"
  desc: "Set the managedImageId property: The Managed Image Id backing the custom image."
  returns:
    description: "the CustomImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner&text=CustomImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withManagedSnapshotId(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withManagedSnapshotId(String managedSnapshotId)"
  name: "withManagedSnapshotId(String managedSnapshotId)"
  nameWithType: "CustomImageInner.withManagedSnapshotId(String managedSnapshotId)"
  summary: "Set the managed<wbr>Snapshot<wbr>Id property: The Managed Snapshot Id backing the custom image."
  parameters:
  - description: "the managedSnapshotId value to set."
    name: "managedSnapshotId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomImageInner withManagedSnapshotId(String managedSnapshotId)"
  desc: "Set the managedSnapshotId property: The Managed Snapshot Id backing the custom image."
  returns:
    description: "the CustomImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner&text=CustomImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "CustomImageInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CustomImageInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner&text=CustomImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withVhd(com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesCustom)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withVhd(CustomImagePropertiesCustom vhd)"
  name: "withVhd(CustomImagePropertiesCustom vhd)"
  nameWithType: "CustomImageInner.withVhd(CustomImagePropertiesCustom vhd)"
  summary: "Set the vhd property: The VHD from which the image is to be created."
  parameters:
  - description: "the vhd value to set."
    name: "vhd"
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesCustom?alt=com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesCustom&text=CustomImagePropertiesCustom\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomImageInner withVhd(CustomImagePropertiesCustom vhd)"
  desc: "Set the vhd property: The VHD from which the image is to be created."
  returns:
    description: "the CustomImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner&text=CustomImageInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withVm(com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesFromVm)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner.withVm(CustomImagePropertiesFromVm vm)"
  name: "withVm(CustomImagePropertiesFromVm vm)"
  nameWithType: "CustomImageInner.withVm(CustomImagePropertiesFromVm vm)"
  summary: "Set the vm property: The virtual machine from which the image is to be created."
  parameters:
  - description: "the vm value to set."
    name: "vm"
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesFromVm?alt=com.azure.resourcemanager.devtestlabs.models.CustomImagePropertiesFromVm&text=CustomImagePropertiesFromVm\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CustomImageInner withVm(CustomImagePropertiesFromVm vm)"
  desc: "Set the vm property: The virtual machine from which the image is to be created."
  returns:
    description: "the CustomImageInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.CustomImageInner&text=CustomImageInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A custom image."
metadata: {}
package: "com.azure.resourcemanager.devtestlabs.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-devtestlabs:1.0.0-beta.1
