### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat
  id: CaseFormat
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base
  children:
  - com.azure.cosmos.implementation.guava25.base.CaseFormat.LOWER_CAMEL
  - com.azure.cosmos.implementation.guava25.base.CaseFormat.LOWER_HYPHEN
  - com.azure.cosmos.implementation.guava25.base.CaseFormat.LOWER_UNDERSCORE
  - com.azure.cosmos.implementation.guava25.base.CaseFormat.UPPER_CAMEL
  - com.azure.cosmos.implementation.guava25.base.CaseFormat.UPPER_UNDERSCORE
  - com.azure.cosmos.implementation.guava25.base.CaseFormat.converterTo(com.azure.cosmos.implementation.guava25.base.CaseFormat)
  - com.azure.cosmos.implementation.guava25.base.CaseFormat.to(com.azure.cosmos.implementation.guava25.base.CaseFormat,java.lang.String)
  - com.azure.cosmos.implementation.guava25.base.CaseFormat.valueOf(java.lang.String)
  - com.azure.cosmos.implementation.guava25.base.CaseFormat.values()
  langs:
  - java
  name: CaseFormat
  nameWithType: CaseFormat
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat
  type: Enum
  package: com.azure.cosmos.implementation.guava25.base
  summary: Utility class for converting between various ASCII case formats. Behavior is undefined for non-ASCII input.
  syntax:
    content: public enum CaseFormat extends Enum<CaseFormat>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.CaseFormat(com.azure.cosmos.implementation.guava25.base.CharMatcher,java.lang.String)
  id: CaseFormat(com.azure.cosmos.implementation.guava25.base.CharMatcher,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.CaseFormat
  langs:
  - java
  name: CaseFormat(CharMatcher wordBoundary, String wordSeparator)
  nameWithType: CaseFormat.CaseFormat(CharMatcher wordBoundary, String wordSeparator)
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.CaseFormat(CharMatcher wordBoundary, String wordSeparator)
  overload: com.azure.cosmos.implementation.guava25.base.CaseFormat.CaseFormat*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.base
  syntax:
    content: private CaseFormat(CharMatcher wordBoundary, String wordSeparator)
    parameters:
    - id: wordBoundary
      type: com.azure.cosmos.implementation.guava25.base.CharMatcher
    - id: wordSeparator
      type: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.LOWER_CAMEL
  id: LOWER_CAMEL
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.CaseFormat
  langs:
  - java
  name: LOWER_CAMEL
  nameWithType: CaseFormat.LOWER_CAMEL
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.LOWER_CAMEL
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: Java variable naming convention, e.g., "lowerCamel".
  syntax:
    content: public static final CaseFormat LOWER_CAMEL
    return:
      type: com.azure.cosmos.implementation.guava25.base.CaseFormat
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.LOWER_HYPHEN
  id: LOWER_HYPHEN
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.CaseFormat
  langs:
  - java
  name: LOWER_HYPHEN
  nameWithType: CaseFormat.LOWER_HYPHEN
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.LOWER_HYPHEN
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: Hyphenated variable naming convention, e.g., "lower-hyphen".
  syntax:
    content: public static final CaseFormat LOWER_HYPHEN
    return:
      type: com.azure.cosmos.implementation.guava25.base.CaseFormat
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.LOWER_UNDERSCORE
  id: LOWER_UNDERSCORE
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.CaseFormat
  langs:
  - java
  name: LOWER_UNDERSCORE
  nameWithType: CaseFormat.LOWER_UNDERSCORE
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.LOWER_UNDERSCORE
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: C++ variable naming convention, e.g., "lower\_underscore".
  syntax:
    content: public static final CaseFormat LOWER_UNDERSCORE
    return:
      type: com.azure.cosmos.implementation.guava25.base.CaseFormat
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.UPPER_CAMEL
  id: UPPER_CAMEL
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.CaseFormat
  langs:
  - java
  name: UPPER_CAMEL
  nameWithType: CaseFormat.UPPER_CAMEL
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.UPPER_CAMEL
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: Java and C++ class naming convention, e.g., "UpperCamel".
  syntax:
    content: public static final CaseFormat UPPER_CAMEL
    return:
      type: com.azure.cosmos.implementation.guava25.base.CaseFormat
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.UPPER_UNDERSCORE
  id: UPPER_UNDERSCORE
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.CaseFormat
  langs:
  - java
  name: UPPER_UNDERSCORE
  nameWithType: CaseFormat.UPPER_UNDERSCORE
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.UPPER_UNDERSCORE
  type: Field
  package: com.azure.cosmos.implementation.guava25.base
  summary: Java and C++ constant naming convention, e.g., "UPPER\_UNDERSCORE".
  syntax:
    content: public static final CaseFormat UPPER_UNDERSCORE
    return:
      type: com.azure.cosmos.implementation.guava25.base.CaseFormat
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.converterTo(com.azure.cosmos.implementation.guava25.base.CaseFormat)
  id: converterTo(com.azure.cosmos.implementation.guava25.base.CaseFormat)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.CaseFormat
  langs:
  - java
  name: converterTo(CaseFormat targetFormat)
  nameWithType: CaseFormat.converterTo(CaseFormat targetFormat)
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.converterTo(CaseFormat targetFormat)
  overload: com.azure.cosmos.implementation.guava25.base.CaseFormat.converterTo*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Returns a `Converter` that converts strings from this format to `targetFormat`.
  syntax:
    content: public Converter<String,String> converterTo(CaseFormat targetFormat)
    parameters:
    - id: targetFormat
      type: com.azure.cosmos.implementation.guava25.base.CaseFormat
    return:
      type: com.azure.cosmos.implementation.guava25.base.Converter<java.lang.String,java.lang.String>
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.to(com.azure.cosmos.implementation.guava25.base.CaseFormat,java.lang.String)
  id: to(com.azure.cosmos.implementation.guava25.base.CaseFormat,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.CaseFormat
  langs:
  - java
  name: to(CaseFormat format, String str)
  nameWithType: CaseFormat.to(CaseFormat format, String str)
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.to(CaseFormat format, String str)
  overload: com.azure.cosmos.implementation.guava25.base.CaseFormat.to*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Converts the specified `String str` from this format to the specified `format`. A "best effort" approach is taken; if `str` does not conform to the assumed format, then the behavior of this method is undefined but we make a reasonable effort at converting anyway.
  syntax:
    content: public final String to(CaseFormat format, String str)
    parameters:
    - id: format
      type: com.azure.cosmos.implementation.guava25.base.CaseFormat
    - id: str
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.CaseFormat
  langs:
  - java
  name: valueOf(String name)
  nameWithType: CaseFormat.valueOf(String name)
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.valueOf(String name)
  overload: com.azure.cosmos.implementation.guava25.base.CaseFormat.valueOf*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  syntax:
    content: public static CaseFormat valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.azure.cosmos.implementation.guava25.base.CaseFormat
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.values()
  id: values()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.CaseFormat
  langs:
  - java
  name: values()
  nameWithType: CaseFormat.values()
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.values()
  overload: com.azure.cosmos.implementation.guava25.base.CaseFormat.values*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  syntax:
    content: public static CaseFormat[] values()
    return:
      type: com.azure.cosmos.implementation.guava25.base.CaseFormat[]
references:
- uid: com.azure.cosmos.implementation.guava25.base.CharMatcher
  name: CharMatcher
  nameWithType: CharMatcher
  fullName: com.azure.cosmos.implementation.guava25.base.CharMatcher
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.CaseFormat*
  name: CaseFormat
  nameWithType: CaseFormat.CaseFormat
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.CaseFormat
  package: com.azure.cosmos.implementation.guava25.base
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat[]
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.base.CaseFormat
    name: CaseFormat
    fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.values*
  name: values
  nameWithType: CaseFormat.values
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.values
  package: com.azure.cosmos.implementation.guava25.base
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.valueOf*
  name: valueOf
  nameWithType: CaseFormat.valueOf
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.valueOf
  package: com.azure.cosmos.implementation.guava25.base
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.to*
  name: to
  nameWithType: CaseFormat.to
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.to
  package: com.azure.cosmos.implementation.guava25.base
- uid: com.azure.cosmos.implementation.guava25.base.Converter<java.lang.String,java.lang.String>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.base.Converter
    name: Converter
    fullName: com.azure.cosmos.implementation.guava25.base.Converter
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.base.CaseFormat.converterTo*
  name: converterTo
  nameWithType: CaseFormat.converterTo
  fullName: com.azure.cosmos.implementation.guava25.base.CaseFormat.converterTo
  package: com.azure.cosmos.implementation.guava25.base
- uid: java.lang.Enum<com.azure.cosmos.implementation.guava25.base.CaseFormat>
  name: Enum<CaseFormat>
  nameWithType: Enum<CaseFormat>
  fullName: java.lang.Enum<com.azure.cosmos.implementation.guava25.base.CaseFormat>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.base.Converter
  name: Converter
  nameWithType: Converter
  fullName: com.azure.cosmos.implementation.guava25.base.Converter
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
