### YamlMime:ManagedReference
items:
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse
  id: EntireDetectResponse
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models
  children:
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.EntireDetectResponse()
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.getExpectedValues()
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsAnomaly()
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsNegativeAnomaly()
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsPositiveAnomaly()
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.getLowerMargins()
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.getPeriod()
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.getUpperMargins()
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.setExpectedValues(java.util.List<java.lang.Float>)
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsAnomaly(java.util.List<java.lang.Boolean>)
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsNegativeAnomaly(java.util.List<java.lang.Boolean>)
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsPositiveAnomaly(java.util.List<java.lang.Boolean>)
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.setLowerMargins(java.util.List<java.lang.Float>)
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.setPeriod(int)
  - com.azure.ai.anomalydetector.models.EntireDetectResponse.setUpperMargins(java.util.List<java.lang.Float>)
  langs:
  - java
  name: EntireDetectResponse
  nameWithType: EntireDetectResponse
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse
  type: Class
  package: com.azure.ai.anomalydetector.models
  summary: The EntireDetectResponse model.
  syntax:
    content: public final class EntireDetectResponse
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.EntireDetectResponse()
  id: EntireDetectResponse()
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: EntireDetectResponse()
  nameWithType: EntireDetectResponse.EntireDetectResponse()
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.EntireDetectResponse()
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.EntireDetectResponse*
  type: Constructor
  package: com.azure.ai.anomalydetector.models
  syntax:
    content: public EntireDetectResponse()
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getExpectedValues()
  id: getExpectedValues()
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: getExpectedValues()
  nameWithType: EntireDetectResponse.getExpectedValues()
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getExpectedValues()
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.getExpectedValues*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Get the expectedValues property: ExpectedValues contain expected value for each input point. The index of the array is consistent with the input series.'
  syntax:
    content: public List<Float> getExpectedValues()
    return:
      type: java.util.List<java.lang.Float>
      description: the expectedValues value.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsAnomaly()
  id: getIsAnomaly()
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: getIsAnomaly()
  nameWithType: EntireDetectResponse.getIsAnomaly()
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsAnomaly()
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsAnomaly*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Get the isAnomaly property: IsAnomaly contains anomaly properties for each input point. True means an anomaly either negative or positive has been detected. The index of the array is consistent with the input series.'
  syntax:
    content: public List<Boolean> getIsAnomaly()
    return:
      type: java.util.List<java.lang.Boolean>
      description: the isAnomaly value.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsNegativeAnomaly()
  id: getIsNegativeAnomaly()
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: getIsNegativeAnomaly()
  nameWithType: EntireDetectResponse.getIsNegativeAnomaly()
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsNegativeAnomaly()
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsNegativeAnomaly*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Get the isNegativeAnomaly property: IsNegativeAnomaly contains anomaly status in negative direction for each input point. True means a negative anomaly has been detected. A negative anomaly means the point is detected as an anomaly and its real value is smaller than the expected one. The index of the array is consistent with the input series.'
  syntax:
    content: public List<Boolean> getIsNegativeAnomaly()
    return:
      type: java.util.List<java.lang.Boolean>
      description: the isNegativeAnomaly value.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsPositiveAnomaly()
  id: getIsPositiveAnomaly()
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: getIsPositiveAnomaly()
  nameWithType: EntireDetectResponse.getIsPositiveAnomaly()
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsPositiveAnomaly()
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsPositiveAnomaly*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Get the isPositiveAnomaly property: IsPositiveAnomaly contain anomaly status in positive direction for each input point. True means a positive anomaly has been detected. A positive anomaly means the point is detected as an anomaly and its real value is larger than the expected one. The index of the array is consistent with the input series.'
  syntax:
    content: public List<Boolean> getIsPositiveAnomaly()
    return:
      type: java.util.List<java.lang.Boolean>
      description: the isPositiveAnomaly value.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getLowerMargins()
  id: getLowerMargins()
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: getLowerMargins()
  nameWithType: EntireDetectResponse.getLowerMargins()
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getLowerMargins()
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.getLowerMargins*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Get the lowerMargins property: LowerMargins contain lower margin of each input point. LowerMargin is used to calculate lowerBoundary, which equals to expectedValue - (100 - marginScale)\*lowerMargin. Points between the boundary can be marked as normal ones in client side. The index of the array is consistent with the input series.'
  syntax:
    content: public List<Float> getLowerMargins()
    return:
      type: java.util.List<java.lang.Float>
      description: the lowerMargins value.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getPeriod()
  id: getPeriod()
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: getPeriod()
  nameWithType: EntireDetectResponse.getPeriod()
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getPeriod()
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.getPeriod*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Get the period property: Frequency extracted from the series, zero means no recurrent pattern has been found.'
  syntax:
    content: public int getPeriod()
    return:
      type: int
      description: the period value.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getUpperMargins()
  id: getUpperMargins()
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: getUpperMargins()
  nameWithType: EntireDetectResponse.getUpperMargins()
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getUpperMargins()
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.getUpperMargins*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Get the upperMargins property: UpperMargins contain upper margin of each input point. UpperMargin is used to calculate upperBoundary, which equals to expectedValue + (100 - marginScale)\*upperMargin. Anomalies in response can be filtered by upperBoundary and lowerBoundary. By adjusting marginScale value, less significant anomalies can be filtered in client side. The index of the array is consistent with the input series.'
  syntax:
    content: public List<Float> getUpperMargins()
    return:
      type: java.util.List<java.lang.Float>
      description: the upperMargins value.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setExpectedValues(java.util.List<java.lang.Float>)
  id: setExpectedValues(java.util.List<java.lang.Float>)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: setExpectedValues(List<Float> expectedValues)
  nameWithType: EntireDetectResponse.setExpectedValues(List<Float> expectedValues)
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setExpectedValues(List<Float> expectedValues)
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.setExpectedValues*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Set the expectedValues property: ExpectedValues contain expected value for each input point. The index of the array is consistent with the input series.'
  syntax:
    content: public EntireDetectResponse setExpectedValues(List<Float> expectedValues)
    parameters:
    - id: expectedValues
      type: java.util.List<java.lang.Float>
      description: the expectedValues value to set.
    return:
      type: com.azure.ai.anomalydetector.models.EntireDetectResponse
      description: the EntireDetectResponse object itself.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsAnomaly(java.util.List<java.lang.Boolean>)
  id: setIsAnomaly(java.util.List<java.lang.Boolean>)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: setIsAnomaly(List<Boolean> isAnomaly)
  nameWithType: EntireDetectResponse.setIsAnomaly(List<Boolean> isAnomaly)
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsAnomaly(List<Boolean> isAnomaly)
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsAnomaly*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Set the isAnomaly property: IsAnomaly contains anomaly properties for each input point. True means an anomaly either negative or positive has been detected. The index of the array is consistent with the input series.'
  syntax:
    content: public EntireDetectResponse setIsAnomaly(List<Boolean> isAnomaly)
    parameters:
    - id: isAnomaly
      type: java.util.List<java.lang.Boolean>
      description: the isAnomaly value to set.
    return:
      type: com.azure.ai.anomalydetector.models.EntireDetectResponse
      description: the EntireDetectResponse object itself.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsNegativeAnomaly(java.util.List<java.lang.Boolean>)
  id: setIsNegativeAnomaly(java.util.List<java.lang.Boolean>)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: setIsNegativeAnomaly(List<Boolean> isNegativeAnomaly)
  nameWithType: EntireDetectResponse.setIsNegativeAnomaly(List<Boolean> isNegativeAnomaly)
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsNegativeAnomaly(List<Boolean> isNegativeAnomaly)
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsNegativeAnomaly*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Set the isNegativeAnomaly property: IsNegativeAnomaly contains anomaly status in negative direction for each input point. True means a negative anomaly has been detected. A negative anomaly means the point is detected as an anomaly and its real value is smaller than the expected one. The index of the array is consistent with the input series.'
  syntax:
    content: public EntireDetectResponse setIsNegativeAnomaly(List<Boolean> isNegativeAnomaly)
    parameters:
    - id: isNegativeAnomaly
      type: java.util.List<java.lang.Boolean>
      description: the isNegativeAnomaly value to set.
    return:
      type: com.azure.ai.anomalydetector.models.EntireDetectResponse
      description: the EntireDetectResponse object itself.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsPositiveAnomaly(java.util.List<java.lang.Boolean>)
  id: setIsPositiveAnomaly(java.util.List<java.lang.Boolean>)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: setIsPositiveAnomaly(List<Boolean> isPositiveAnomaly)
  nameWithType: EntireDetectResponse.setIsPositiveAnomaly(List<Boolean> isPositiveAnomaly)
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsPositiveAnomaly(List<Boolean> isPositiveAnomaly)
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsPositiveAnomaly*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Set the isPositiveAnomaly property: IsPositiveAnomaly contain anomaly status in positive direction for each input point. True means a positive anomaly has been detected. A positive anomaly means the point is detected as an anomaly and its real value is larger than the expected one. The index of the array is consistent with the input series.'
  syntax:
    content: public EntireDetectResponse setIsPositiveAnomaly(List<Boolean> isPositiveAnomaly)
    parameters:
    - id: isPositiveAnomaly
      type: java.util.List<java.lang.Boolean>
      description: the isPositiveAnomaly value to set.
    return:
      type: com.azure.ai.anomalydetector.models.EntireDetectResponse
      description: the EntireDetectResponse object itself.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setLowerMargins(java.util.List<java.lang.Float>)
  id: setLowerMargins(java.util.List<java.lang.Float>)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: setLowerMargins(List<Float> lowerMargins)
  nameWithType: EntireDetectResponse.setLowerMargins(List<Float> lowerMargins)
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setLowerMargins(List<Float> lowerMargins)
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.setLowerMargins*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Set the lowerMargins property: LowerMargins contain lower margin of each input point. LowerMargin is used to calculate lowerBoundary, which equals to expectedValue - (100 - marginScale)\*lowerMargin. Points between the boundary can be marked as normal ones in client side. The index of the array is consistent with the input series.'
  syntax:
    content: public EntireDetectResponse setLowerMargins(List<Float> lowerMargins)
    parameters:
    - id: lowerMargins
      type: java.util.List<java.lang.Float>
      description: the lowerMargins value to set.
    return:
      type: com.azure.ai.anomalydetector.models.EntireDetectResponse
      description: the EntireDetectResponse object itself.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setPeriod(int)
  id: setPeriod(int)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: setPeriod(int period)
  nameWithType: EntireDetectResponse.setPeriod(int period)
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setPeriod(int period)
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.setPeriod*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Set the period property: Frequency extracted from the series, zero means no recurrent pattern has been found.'
  syntax:
    content: public EntireDetectResponse setPeriod(int period)
    parameters:
    - id: period
      type: int
      description: the period value to set.
    return:
      type: com.azure.ai.anomalydetector.models.EntireDetectResponse
      description: the EntireDetectResponse object itself.
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setUpperMargins(java.util.List<java.lang.Float>)
  id: setUpperMargins(java.util.List<java.lang.Float>)
  artifact: com.azure:azure-ai-anomalydetector:3.0.0-beta.1
  parent: com.azure.ai.anomalydetector.models.EntireDetectResponse
  langs:
  - java
  name: setUpperMargins(List<Float> upperMargins)
  nameWithType: EntireDetectResponse.setUpperMargins(List<Float> upperMargins)
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setUpperMargins(List<Float> upperMargins)
  overload: com.azure.ai.anomalydetector.models.EntireDetectResponse.setUpperMargins*
  type: Method
  package: com.azure.ai.anomalydetector.models
  summary: 'Set the upperMargins property: UpperMargins contain upper margin of each input point. UpperMargin is used to calculate upperBoundary, which equals to expectedValue + (100 - marginScale)\*upperMargin. Anomalies in response can be filtered by upperBoundary and lowerBoundary. By adjusting marginScale value, less significant anomalies can be filtered in client side. The index of the array is consistent with the input series.'
  syntax:
    content: public EntireDetectResponse setUpperMargins(List<Float> upperMargins)
    parameters:
    - id: upperMargins
      type: java.util.List<java.lang.Float>
      description: the upperMargins value to set.
    return:
      type: com.azure.ai.anomalydetector.models.EntireDetectResponse
      description: the EntireDetectResponse object itself.
references:
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.EntireDetectResponse*
  name: EntireDetectResponse
  nameWithType: EntireDetectResponse.EntireDetectResponse
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.EntireDetectResponse
  package: com.azure.ai.anomalydetector.models
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getPeriod*
  name: getPeriod
  nameWithType: EntireDetectResponse.getPeriod
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getPeriod
  package: com.azure.ai.anomalydetector.models
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setPeriod*
  name: setPeriod
  nameWithType: EntireDetectResponse.setPeriod
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setPeriod
  package: com.azure.ai.anomalydetector.models
- uid: java.util.List<java.lang.Float>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.Float
    name: Float
    fullName: java.lang.Float
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getExpectedValues*
  name: getExpectedValues
  nameWithType: EntireDetectResponse.getExpectedValues
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getExpectedValues
  package: com.azure.ai.anomalydetector.models
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setExpectedValues*
  name: setExpectedValues
  nameWithType: EntireDetectResponse.setExpectedValues
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setExpectedValues
  package: com.azure.ai.anomalydetector.models
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getUpperMargins*
  name: getUpperMargins
  nameWithType: EntireDetectResponse.getUpperMargins
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getUpperMargins
  package: com.azure.ai.anomalydetector.models
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setUpperMargins*
  name: setUpperMargins
  nameWithType: EntireDetectResponse.setUpperMargins
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setUpperMargins
  package: com.azure.ai.anomalydetector.models
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getLowerMargins*
  name: getLowerMargins
  nameWithType: EntireDetectResponse.getLowerMargins
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getLowerMargins
  package: com.azure.ai.anomalydetector.models
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setLowerMargins*
  name: setLowerMargins
  nameWithType: EntireDetectResponse.setLowerMargins
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setLowerMargins
  package: com.azure.ai.anomalydetector.models
- uid: java.util.List<java.lang.Boolean>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsAnomaly*
  name: getIsAnomaly
  nameWithType: EntireDetectResponse.getIsAnomaly
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsAnomaly
  package: com.azure.ai.anomalydetector.models
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsAnomaly*
  name: setIsAnomaly
  nameWithType: EntireDetectResponse.setIsAnomaly
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsAnomaly
  package: com.azure.ai.anomalydetector.models
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsNegativeAnomaly*
  name: getIsNegativeAnomaly
  nameWithType: EntireDetectResponse.getIsNegativeAnomaly
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsNegativeAnomaly
  package: com.azure.ai.anomalydetector.models
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsNegativeAnomaly*
  name: setIsNegativeAnomaly
  nameWithType: EntireDetectResponse.setIsNegativeAnomaly
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsNegativeAnomaly
  package: com.azure.ai.anomalydetector.models
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsPositiveAnomaly*
  name: getIsPositiveAnomaly
  nameWithType: EntireDetectResponse.getIsPositiveAnomaly
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.getIsPositiveAnomaly
  package: com.azure.ai.anomalydetector.models
- uid: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsPositiveAnomaly*
  name: setIsPositiveAnomaly
  nameWithType: EntireDetectResponse.setIsPositiveAnomaly
  fullName: com.azure.ai.anomalydetector.models.EntireDetectResponse.setIsPositiveAnomaly
  package: com.azure.ai.anomalydetector.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Float
  name: Float
  nameWithType: Float
  fullName: java.lang.Float
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: java.lang.Boolean
