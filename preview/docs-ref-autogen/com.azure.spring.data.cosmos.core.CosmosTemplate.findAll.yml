### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.core.CosmosTemplate.findAll*"
fullName: "com.azure.spring.data.cosmos.core.CosmosTemplate.<T>findAll"
name: "<T>findAll"
nameWithType: "CosmosTemplate.<T>findAll"
members:
- uid: "com.azure.spring.data.cosmos.core.CosmosTemplate.<T>findAll(com.azure.cosmos.models.PartitionKey,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosTemplate.<T>findAll(PartitionKey partitionKey, Class<T> domainType)"
  name: "<T>findAll(PartitionKey partitionKey, Class<T> domainType)"
  nameWithType: "CosmosTemplate.<T>findAll(PartitionKey partitionKey, Class<T> domainType)"
  summary: "Find the DocumentQuery, find all the items specified by domain type in the given container."
  parameters:
  - name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - name: "domainType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Iterable<T> <T>findAll(PartitionKey partitionKey, Class<T> domainType)"
  returns:
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosTemplate.<T>findAll(java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosTemplate.<T>findAll(Class<T> domainType)"
  name: "<T>findAll(Class<T> domainType)"
  nameWithType: "CosmosTemplate.<T>findAll(Class<T> domainType)"
  summary: "Find the DocumentQuery, find all the items specified by domain type."
  parameters:
  - description: "the domain type"
    name: "domainType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Iterable<T> <T>findAll(Class<T> domainType)"
  returns:
    description: "found results in a List"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosTemplate.<T>findAll(java.lang.String,java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosTemplate.<T>findAll(String containerName, Class<T> domainType)"
  name: "<T>findAll(String containerName, Class<T> domainType)"
  nameWithType: "CosmosTemplate.<T>findAll(String containerName, Class<T> domainType)"
  summary: "Find the DocumentQuery, find all the items specified by domain type in the given container."
  parameters:
  - description: "the container name"
    name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the domain type"
    name: "domainType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Iterable<T> <T>findAll(String containerName, Class<T> domainType)"
  returns:
    description: "found results in a List"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.core.CosmosTemplate.<T>findAll(org.springframework.data.domain.Pageable,java.lang.Class<T>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosTemplate.<T>findAll(Pageable pageable, Class<T> domainType, String containerName)"
  name: "<T>findAll(Pageable pageable, Class<T> domainType, String containerName)"
  nameWithType: "CosmosTemplate.<T>findAll(Pageable pageable, Class<T> domainType, String containerName)"
  summary: "Find all items in a given container with partition key"
  parameters:
  - name: "pageable"
    type: "<xref href=\"org.springframework.data.domain.Pageable?alt=org.springframework.data.domain.Pageable&text=Pageable\" data-throw-if-not-resolved=\"False\" />"
  - name: "domainType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Page<T> <T>findAll(Pageable pageable, Class<T> domainType, String containerName)"
  returns:
    type: "<xref href=\"org.springframework.data.domain.Page?alt=org.springframework.data.domain.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.core"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
