### YamlMime:ManagedReference
items:
- uid: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes
  id: UnexpectedResponseExceptionTypes
  parent: com.azure.core.implementation.annotation
  children:
  - com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes.value()
  href: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes.yml
  langs:
  - java
  name: UnexpectedResponseExceptionTypes
  nameWithType: UnexpectedResponseExceptionTypes
  fullName: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes
  type: Interface
  source:
    remote: &o0
      path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/annotation/UnexpectedResponseExceptionTypes.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/annotation/UnexpectedResponseExceptionTypes.java
    startLine: 17
  package: com.azure.core.implementation.annotation
  summary: "<p>The<code>@RepeatableÂ \r\n    </code> container annotation for <xref uid=\"com.azure.core.implementation.annotation.UnexpectedResponseExceptionType\" data-throw-if-not-resolved=\"false\">UnexpectedResponseExceptionType</xref>. This allows methods to have different exceptions to be thrown or returned based on the response status codes returned from a REST API. </p>"
  syntax:
    content: public interface UnexpectedResponseExceptionTypes
- uid: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes.value()
  id: value()
  parent: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes
  href: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes.yml
  langs:
  - java
  name: value()
  nameWithType: UnexpectedResponseExceptionTypes.value()
  fullName: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes.value()
  overload: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes.value*
  type: Method
  source:
    remote: *o0
    path: sdk/core/azure-core/src/main/java/com/azure/core/implementation/annotation/UnexpectedResponseExceptionTypes.java
    startLine: 21
  package: com.azure.core.implementation.annotation
  syntax:
    content: public UnexpectedResponseExceptionType [] value()
    return:
      type: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypee5b41c5f
      description: <p>array of <xref uid="com.azure.core.implementation.annotation.UnexpectedResponseExceptionType" data-throw-if-not-resolved="false">UnexpectedResponseExceptionType</xref> that annotate a method. </p>
references:
- uid: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypee5b41c5f
  spec.java:
  - uid: com.azure.core.implementation.annotation.UnexpectedResponseExceptionType
    name: UnexpectedResponseExceptionType
    fullName: com.azure.core.implementation.annotation.UnexpectedResponseExceptionType
    href: com.azure.core.implementation.annotation.UnexpectedResponseExceptionType.yml
  - name: " []"
    fullName: " []"
- uid: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes.value*
  name: value
  nameWithType: UnexpectedResponseExceptionTypes.value
  fullName: com.azure.core.implementation.annotation.UnexpectedResponseExceptionTypes.value
  package: com.azure.core.implementation.annotation
- uid: com.azure.core.implementation.annotation.UnexpectedResponseExceptionType
  parent: com.azure.core.implementation.annotation
  href: com.azure.core.implementation.annotation.UnexpectedResponseExceptionType.yml
  name: UnexpectedResponseExceptionType
  nameWithType: UnexpectedResponseExceptionType
  fullName: com.azure.core.implementation.annotation.UnexpectedResponseExceptionType
  type: Interface
  summary: "<p>POST(\"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getEntityTypeImageUploadUrl\") void getUploadUrlForEntityType((\"resourceGroupName\") String resourceGroupName, (\"hubName\") String hubName, (\"subscriptionId\") String subscriptionId,  GetImageUploadUrlInputInner parameters); </p>\r\n<p>If multiple annotations share the same HTTP status code or there is multiple default annotations the exception from the last annotation in the top to bottom order will be used. </p>"
  syntax:
    content: public interface UnexpectedResponseExceptionType
