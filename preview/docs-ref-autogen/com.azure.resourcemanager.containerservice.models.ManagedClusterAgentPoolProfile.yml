### YamlMime:JavaType
uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile"
fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile"
name: "ManagedClusterAgentPoolProfile"
nameWithType: "ManagedClusterAgentPoolProfile"
summary: "Profile for the container service agent pool."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.availabilityZones()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.count()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.creationData()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.enableAutoScaling()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.enableEncryptionAtHost()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.enableFips()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.enableNodePublicIp()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.enableUltraSsd()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.gpuInstanceProfile()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.kubeletConfig()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.kubeletDiskType()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.linuxOSConfig()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.maxCount()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.maxPods()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.minCount()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.mode()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.nodeImageVersion()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.nodeLabels()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.nodePublicIpPrefixId()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.nodeTaints()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.orchestratorVersion()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.osDiskSizeGB()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.osDiskType()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.osSku()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.osType()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.podSubnetId()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.powerState()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.provisioningState()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.proximityPlacementGroupId()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.scaleDownMode()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.scaleSetEvictionPolicy()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.scaleSetPriority()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.spotMaxPrice()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.tags()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.type()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.upgradeSettings()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.validate()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.vmSize()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.vnetSubnetId()"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withAvailabilityZones(java.util.List<java.lang.String>)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withCount(java.lang.Integer)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withCreationData(com.azure.resourcemanager.containerservice.models.CreationData)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withEnableAutoScaling(java.lang.Boolean)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withEnableEncryptionAtHost(java.lang.Boolean)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withEnableFips(java.lang.Boolean)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withEnableNodePublicIp(java.lang.Boolean)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withEnableUltraSsd(java.lang.Boolean)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withGpuInstanceProfile(com.azure.resourcemanager.containerservice.models.GpuInstanceProfile)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withKubeletConfig(com.azure.resourcemanager.containerservice.models.KubeletConfig)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withKubeletDiskType(com.azure.resourcemanager.containerservice.models.KubeletDiskType)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withLinuxOSConfig(com.azure.resourcemanager.containerservice.models.LinuxOSConfig)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withMaxCount(java.lang.Integer)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withMaxPods(java.lang.Integer)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withMinCount(java.lang.Integer)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withMode(com.azure.resourcemanager.containerservice.models.AgentPoolMode)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withNodeLabels(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withNodePublicIpPrefixId(java.lang.String)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withNodeTaints(java.util.List<java.lang.String>)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withOrchestratorVersion(java.lang.String)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withOsDiskSizeGB(java.lang.Integer)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withOsDiskType(com.azure.resourcemanager.containerservice.models.OSDiskType)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withOsSku(com.azure.resourcemanager.containerservice.models.OSSku)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withOsType(com.azure.resourcemanager.containerservice.models.OSType)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withPodSubnetId(java.lang.String)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withPowerState(com.azure.resourcemanager.containerservice.models.PowerState)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withProximityPlacementGroupId(java.lang.String)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withScaleDownMode(com.azure.resourcemanager.containerservice.models.ScaleDownMode)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withScaleSetEvictionPolicy(com.azure.resourcemanager.containerservice.models.ScaleSetEvictionPolicy)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withScaleSetPriority(com.azure.resourcemanager.containerservice.models.ScaleSetPriority)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withSpotMaxPrice(java.lang.Float)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withType(com.azure.resourcemanager.containerservice.models.AgentPoolType)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withUpgradeSettings(com.azure.resourcemanager.containerservice.models.AgentPoolUpgradeSettings)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withVmSize(java.lang.String)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withVnetSubnetId(java.lang.String)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withWorkloadRuntime(com.azure.resourcemanager.containerservice.models.WorkloadRuntime)"
- "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.workloadRuntime()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ManagedClusterAgentPoolProfile extends ManagedClusterAgentPoolProfileProperties"
constructors:
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.ManagedClusterAgentPoolProfile()"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.ManagedClusterAgentPoolProfile()"
  name: "ManagedClusterAgentPoolProfile()"
  nameWithType: "ManagedClusterAgentPoolProfile.ManagedClusterAgentPoolProfile()"
  syntax: "public ManagedClusterAgentPoolProfile()"
methods:
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.name()"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.name()"
  name: "name()"
  nameWithType: "ManagedClusterAgentPoolProfile.name()"
  summary: "Get the name property: Unique name of the agent pool profile in the context of the subscription and resource group. Windows agent pool names must be 6 characters or less."
  syntax: "public String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.validate()"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.validate()"
  name: "validate()"
  nameWithType: "ManagedClusterAgentPoolProfile.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withAvailabilityZones(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withAvailabilityZones(List<String> availabilityZones)"
  name: "withAvailabilityZones(List<String> availabilityZones)"
  nameWithType: "ManagedClusterAgentPoolProfile.withAvailabilityZones(List<String> availabilityZones)"
  summary: "Set the availabilityZones property: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withAvailabilityZones(java.util.List<java.lang.String>)"
  parameters:
  - name: "availabilityZones"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ManagedClusterAgentPoolProfile withAvailabilityZones(List<String> availabilityZones)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withCount(Integer count)"
  name: "withCount(Integer count)"
  nameWithType: "ManagedClusterAgentPoolProfile.withCount(Integer count)"
  summary: "Set the count property: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withCount(java.lang.Integer)"
  parameters:
  - name: "count"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withCount(Integer count)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withCreationData(com.azure.resourcemanager.containerservice.models.CreationData)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withCreationData(CreationData creationData)"
  name: "withCreationData(CreationData creationData)"
  nameWithType: "ManagedClusterAgentPoolProfile.withCreationData(CreationData creationData)"
  summary: "Set the creationData property: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withCreationData(com.azure.resourcemanager.containerservice.models.CreationData)"
  parameters:
  - name: "creationData"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.CreationData?alt=com.azure.resourcemanager.containerservice.models.CreationData&text=CreationData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withCreationData(CreationData creationData)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withEnableAutoScaling(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withEnableAutoScaling(Boolean enableAutoScaling)"
  name: "withEnableAutoScaling(Boolean enableAutoScaling)"
  nameWithType: "ManagedClusterAgentPoolProfile.withEnableAutoScaling(Boolean enableAutoScaling)"
  summary: "Set the enableAutoScaling property: Whether to enable auto-scaler."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withEnableAutoScaling(java.lang.Boolean)"
  parameters:
  - name: "enableAutoScaling"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withEnableAutoScaling(Boolean enableAutoScaling)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withEnableEncryptionAtHost(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withEnableEncryptionAtHost(Boolean enableEncryptionAtHost)"
  name: "withEnableEncryptionAtHost(Boolean enableEncryptionAtHost)"
  nameWithType: "ManagedClusterAgentPoolProfile.withEnableEncryptionAtHost(Boolean enableEncryptionAtHost)"
  summary: "Set the enableEncryptionAtHost property: Whether to enable host based OS and data drive encryption. This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withEnableEncryptionAtHost(java.lang.Boolean)"
  parameters:
  - name: "enableEncryptionAtHost"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withEnableEncryptionAtHost(Boolean enableEncryptionAtHost)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withEnableFips(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withEnableFips(Boolean enableFips)"
  name: "withEnableFips(Boolean enableFips)"
  nameWithType: "ManagedClusterAgentPoolProfile.withEnableFips(Boolean enableFips)"
  summary: "Set the enableFips property: Whether to use a FIPS-enabled OS. See \\[Add a FIPS-enabled node pool\\](https://docs.microsoft.com/azure/aks/use-multiple-node-pools\\#add-a-fips-enabled-node-pool-preview) for more details."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withEnableFips(java.lang.Boolean)"
  parameters:
  - name: "enableFips"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withEnableFips(Boolean enableFips)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withEnableNodePublicIp(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withEnableNodePublicIp(Boolean enableNodePublicIp)"
  name: "withEnableNodePublicIp(Boolean enableNodePublicIp)"
  nameWithType: "ManagedClusterAgentPoolProfile.withEnableNodePublicIp(Boolean enableNodePublicIp)"
  summary: "Set the enableNodePublicIp property: Whether each node is allocated its own public IP. Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see \\[assigning a public IP per node\\](https://docs.microsoft.com/azure/aks/use-multiple-node-pools\\#assign-a-public-ip-per-node-for-your-node-pools). The default is false."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withEnableNodePublicIp(java.lang.Boolean)"
  parameters:
  - name: "enableNodePublicIp"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withEnableNodePublicIp(Boolean enableNodePublicIp)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withEnableUltraSsd(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withEnableUltraSsd(Boolean enableUltraSsd)"
  name: "withEnableUltraSsd(Boolean enableUltraSsd)"
  nameWithType: "ManagedClusterAgentPoolProfile.withEnableUltraSsd(Boolean enableUltraSsd)"
  summary: "Set the enableUltraSsd property: Whether to enable UltraSSD."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withEnableUltraSsd(java.lang.Boolean)"
  parameters:
  - name: "enableUltraSsd"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withEnableUltraSsd(Boolean enableUltraSsd)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withGpuInstanceProfile(com.azure.resourcemanager.containerservice.models.GpuInstanceProfile)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withGpuInstanceProfile(GpuInstanceProfile gpuInstanceProfile)"
  name: "withGpuInstanceProfile(GpuInstanceProfile gpuInstanceProfile)"
  nameWithType: "ManagedClusterAgentPoolProfile.withGpuInstanceProfile(GpuInstanceProfile gpuInstanceProfile)"
  summary: "Set the gpuInstanceProfile property: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withGpuInstanceProfile(com.azure.resourcemanager.containerservice.models.GpuInstanceProfile)"
  parameters:
  - name: "gpuInstanceProfile"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.GpuInstanceProfile?alt=com.azure.resourcemanager.containerservice.models.GpuInstanceProfile&text=GpuInstanceProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withGpuInstanceProfile(GpuInstanceProfile gpuInstanceProfile)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withKubeletConfig(com.azure.resourcemanager.containerservice.models.KubeletConfig)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withKubeletConfig(KubeletConfig kubeletConfig)"
  name: "withKubeletConfig(KubeletConfig kubeletConfig)"
  nameWithType: "ManagedClusterAgentPoolProfile.withKubeletConfig(KubeletConfig kubeletConfig)"
  summary: "Set the kubeletConfig property: Kubelet configurations of agent nodes. The Kubelet configuration on the agent pool nodes."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withKubeletConfig(com.azure.resourcemanager.containerservice.models.KubeletConfig)"
  parameters:
  - name: "kubeletConfig"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletConfig?alt=com.azure.resourcemanager.containerservice.models.KubeletConfig&text=KubeletConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withKubeletConfig(KubeletConfig kubeletConfig)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withKubeletDiskType(com.azure.resourcemanager.containerservice.models.KubeletDiskType)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withKubeletDiskType(KubeletDiskType kubeletDiskType)"
  name: "withKubeletDiskType(KubeletDiskType kubeletDiskType)"
  nameWithType: "ManagedClusterAgentPoolProfile.withKubeletDiskType(KubeletDiskType kubeletDiskType)"
  summary: "Set the kubeletDiskType property: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withKubeletDiskType(com.azure.resourcemanager.containerservice.models.KubeletDiskType)"
  parameters:
  - name: "kubeletDiskType"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.KubeletDiskType?alt=com.azure.resourcemanager.containerservice.models.KubeletDiskType&text=KubeletDiskType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withKubeletDiskType(KubeletDiskType kubeletDiskType)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withLinuxOSConfig(com.azure.resourcemanager.containerservice.models.LinuxOSConfig)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withLinuxOSConfig(LinuxOSConfig linuxOSConfig)"
  name: "withLinuxOSConfig(LinuxOSConfig linuxOSConfig)"
  nameWithType: "ManagedClusterAgentPoolProfile.withLinuxOSConfig(LinuxOSConfig linuxOSConfig)"
  summary: "Set the linuxOSConfig property: OS configurations of Linux agent nodes. The OS configuration of Linux agent nodes."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withLinuxOSConfig(com.azure.resourcemanager.containerservice.models.LinuxOSConfig)"
  parameters:
  - name: "linuxOSConfig"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.LinuxOSConfig?alt=com.azure.resourcemanager.containerservice.models.LinuxOSConfig&text=LinuxOSConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withLinuxOSConfig(LinuxOSConfig linuxOSConfig)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withMaxCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withMaxCount(Integer maxCount)"
  name: "withMaxCount(Integer maxCount)"
  nameWithType: "ManagedClusterAgentPoolProfile.withMaxCount(Integer maxCount)"
  summary: "Set the maxCount property: The maximum number of nodes for auto-scaling."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withMaxCount(java.lang.Integer)"
  parameters:
  - name: "maxCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withMaxCount(Integer maxCount)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withMaxPods(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withMaxPods(Integer maxPods)"
  name: "withMaxPods(Integer maxPods)"
  nameWithType: "ManagedClusterAgentPoolProfile.withMaxPods(Integer maxPods)"
  summary: "Set the maxPods property: The maximum number of pods that can run on a node."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withMaxPods(java.lang.Integer)"
  parameters:
  - name: "maxPods"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withMaxPods(Integer maxPods)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withMinCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withMinCount(Integer minCount)"
  name: "withMinCount(Integer minCount)"
  nameWithType: "ManagedClusterAgentPoolProfile.withMinCount(Integer minCount)"
  summary: "Set the minCount property: The minimum number of nodes for auto-scaling."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withMinCount(java.lang.Integer)"
  parameters:
  - name: "minCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withMinCount(Integer minCount)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withMode(com.azure.resourcemanager.containerservice.models.AgentPoolMode)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withMode(AgentPoolMode mode)"
  name: "withMode(AgentPoolMode mode)"
  nameWithType: "ManagedClusterAgentPoolProfile.withMode(AgentPoolMode mode)"
  summary: "Set the mode property: The mode of an agent pool. A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withMode(com.azure.resourcemanager.containerservice.models.AgentPoolMode)"
  parameters:
  - name: "mode"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.AgentPoolMode?alt=com.azure.resourcemanager.containerservice.models.AgentPoolMode&text=AgentPoolMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withMode(AgentPoolMode mode)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withName(String name)"
  name: "withName(String name)"
  nameWithType: "ManagedClusterAgentPoolProfile.withName(String name)"
  summary: "Set the name property: Unique name of the agent pool profile in the context of the subscription and resource group. Windows agent pool names must be 6 characters or less."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withName(String name)"
  returns:
    description: "the ManagedClusterAgentPoolProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withNodeLabels(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withNodeLabels(Map<String,String> nodeLabels)"
  name: "withNodeLabels(Map<String,String> nodeLabels)"
  nameWithType: "ManagedClusterAgentPoolProfile.withNodeLabels(Map<String,String> nodeLabels)"
  summary: "Set the nodeLabels property: The node labels to be persisted across all nodes in agent pool."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withNodeLabels(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "nodeLabels"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ManagedClusterAgentPoolProfile withNodeLabels(Map<String,String> nodeLabels)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withNodePublicIpPrefixId(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withNodePublicIpPrefixId(String nodePublicIpPrefixId)"
  name: "withNodePublicIpPrefixId(String nodePublicIpPrefixId)"
  nameWithType: "ManagedClusterAgentPoolProfile.withNodePublicIpPrefixId(String nodePublicIpPrefixId)"
  summary: "Set the nodePublicIpPrefixId property: The public IP prefix ID which VM nodes should use IPs from. This is of the form: /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroupName\\}/providers/Microsoft.Network/publicIPPrefixes/\\{publicIPPrefixName\\}."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withNodePublicIpPrefixId(java.lang.String)"
  parameters:
  - name: "nodePublicIpPrefixId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withNodePublicIpPrefixId(String nodePublicIpPrefixId)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withNodeTaints(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withNodeTaints(List<String> nodeTaints)"
  name: "withNodeTaints(List<String> nodeTaints)"
  nameWithType: "ManagedClusterAgentPoolProfile.withNodeTaints(List<String> nodeTaints)"
  summary: "Set the nodeTaints property: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withNodeTaints(java.util.List<java.lang.String>)"
  parameters:
  - name: "nodeTaints"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ManagedClusterAgentPoolProfile withNodeTaints(List<String> nodeTaints)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withOrchestratorVersion(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withOrchestratorVersion(String orchestratorVersion)"
  name: "withOrchestratorVersion(String orchestratorVersion)"
  nameWithType: "ManagedClusterAgentPoolProfile.withOrchestratorVersion(String orchestratorVersion)"
  summary: "Set the orchestratorVersion property: The version of Kubernetes running on the Agent Pool. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see \\[upgrading a node pool\\](https://docs.microsoft.com/azure/aks/use-multiple-node-pools\\#upgrade-a-node-pool)."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withOrchestratorVersion(java.lang.String)"
  parameters:
  - name: "orchestratorVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withOrchestratorVersion(String orchestratorVersion)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withOsDiskSizeGB(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withOsDiskSizeGB(Integer osDiskSizeGB)"
  name: "withOsDiskSizeGB(Integer osDiskSizeGB)"
  nameWithType: "ManagedClusterAgentPoolProfile.withOsDiskSizeGB(Integer osDiskSizeGB)"
  summary: "Set the osDiskSizeGB property: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withOsDiskSizeGB(java.lang.Integer)"
  parameters:
  - name: "osDiskSizeGB"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withOsDiskSizeGB(Integer osDiskSizeGB)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withOsDiskType(com.azure.resourcemanager.containerservice.models.OSDiskType)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withOsDiskType(OSDiskType osDiskType)"
  name: "withOsDiskType(OSDiskType osDiskType)"
  nameWithType: "ManagedClusterAgentPoolProfile.withOsDiskType(OSDiskType osDiskType)"
  summary: "Set the osDiskType property: The OS disk type to be used for machines in the agent pool. The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see \\[Ephemeral OS\\](https://docs.microsoft.com/azure/aks/cluster-configuration\\#ephemeral-os)."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withOsDiskType(com.azure.resourcemanager.containerservice.models.OSDiskType)"
  parameters:
  - name: "osDiskType"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSDiskType?alt=com.azure.resourcemanager.containerservice.models.OSDiskType&text=OSDiskType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withOsDiskType(OSDiskType osDiskType)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withOsSku(com.azure.resourcemanager.containerservice.models.OSSku)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withOsSku(OSSku osSku)"
  name: "withOsSku(OSSku osSku)"
  nameWithType: "ManagedClusterAgentPoolProfile.withOsSku(OSSku osSku)"
  summary: "Set the osSku property: Specifies an OS SKU. This value must not be specified if OSType is Windows."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withOsSku(com.azure.resourcemanager.containerservice.models.OSSku)"
  parameters:
  - name: "osSku"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSSku?alt=com.azure.resourcemanager.containerservice.models.OSSku&text=OSSku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withOsSku(OSSku osSku)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withOsType(com.azure.resourcemanager.containerservice.models.OSType)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withOsType(OSType osType)"
  name: "withOsType(OSType osType)"
  nameWithType: "ManagedClusterAgentPoolProfile.withOsType(OSType osType)"
  summary: "Set the osType property: OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withOsType(com.azure.resourcemanager.containerservice.models.OSType)"
  parameters:
  - name: "osType"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSType?alt=com.azure.resourcemanager.containerservice.models.OSType&text=OSType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withOsType(OSType osType)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withPodSubnetId(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withPodSubnetId(String podSubnetId)"
  name: "withPodSubnetId(String podSubnetId)"
  nameWithType: "ManagedClusterAgentPoolProfile.withPodSubnetId(String podSubnetId)"
  summary: "Set the podSubnetId property: The ID of the subnet which pods will join when launched. If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroupName\\}/providers/Microsoft.Network/virtualNetworks/\\{virtualNetworkName\\}/subnets/\\{subnetName\\}."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withPodSubnetId(java.lang.String)"
  parameters:
  - name: "podSubnetId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withPodSubnetId(String podSubnetId)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withPowerState(com.azure.resourcemanager.containerservice.models.PowerState)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withPowerState(PowerState powerState)"
  name: "withPowerState(PowerState powerState)"
  nameWithType: "ManagedClusterAgentPoolProfile.withPowerState(PowerState powerState)"
  summary: "Set the powerState property: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withPowerState(com.azure.resourcemanager.containerservice.models.PowerState)"
  parameters:
  - name: "powerState"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.PowerState?alt=com.azure.resourcemanager.containerservice.models.PowerState&text=PowerState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withPowerState(PowerState powerState)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withProximityPlacementGroupId(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withProximityPlacementGroupId(String proximityPlacementGroupId)"
  name: "withProximityPlacementGroupId(String proximityPlacementGroupId)"
  nameWithType: "ManagedClusterAgentPoolProfile.withProximityPlacementGroupId(String proximityPlacementGroupId)"
  summary: "Set the proximityPlacementGroupId property: The ID for Proximity Placement Group."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withProximityPlacementGroupId(java.lang.String)"
  parameters:
  - name: "proximityPlacementGroupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withProximityPlacementGroupId(String proximityPlacementGroupId)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withScaleDownMode(com.azure.resourcemanager.containerservice.models.ScaleDownMode)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withScaleDownMode(ScaleDownMode scaleDownMode)"
  name: "withScaleDownMode(ScaleDownMode scaleDownMode)"
  nameWithType: "ManagedClusterAgentPoolProfile.withScaleDownMode(ScaleDownMode scaleDownMode)"
  summary: "Set the scaleDownMode property: This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withScaleDownMode(com.azure.resourcemanager.containerservice.models.ScaleDownMode)"
  parameters:
  - name: "scaleDownMode"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ScaleDownMode?alt=com.azure.resourcemanager.containerservice.models.ScaleDownMode&text=ScaleDownMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withScaleDownMode(ScaleDownMode scaleDownMode)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withScaleSetEvictionPolicy(com.azure.resourcemanager.containerservice.models.ScaleSetEvictionPolicy)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withScaleSetEvictionPolicy(ScaleSetEvictionPolicy scaleSetEvictionPolicy)"
  name: "withScaleSetEvictionPolicy(ScaleSetEvictionPolicy scaleSetEvictionPolicy)"
  nameWithType: "ManagedClusterAgentPoolProfile.withScaleSetEvictionPolicy(ScaleSetEvictionPolicy scaleSetEvictionPolicy)"
  summary: "Set the scaleSetEvictionPolicy property: The Virtual Machine Scale Set eviction policy. This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withScaleSetEvictionPolicy(com.azure.resourcemanager.containerservice.models.ScaleSetEvictionPolicy)"
  parameters:
  - name: "scaleSetEvictionPolicy"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ScaleSetEvictionPolicy?alt=com.azure.resourcemanager.containerservice.models.ScaleSetEvictionPolicy&text=ScaleSetEvictionPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withScaleSetEvictionPolicy(ScaleSetEvictionPolicy scaleSetEvictionPolicy)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withScaleSetPriority(com.azure.resourcemanager.containerservice.models.ScaleSetPriority)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withScaleSetPriority(ScaleSetPriority scaleSetPriority)"
  name: "withScaleSetPriority(ScaleSetPriority scaleSetPriority)"
  nameWithType: "ManagedClusterAgentPoolProfile.withScaleSetPriority(ScaleSetPriority scaleSetPriority)"
  summary: "Set the scaleSetPriority property: The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withScaleSetPriority(com.azure.resourcemanager.containerservice.models.ScaleSetPriority)"
  parameters:
  - name: "scaleSetPriority"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ScaleSetPriority?alt=com.azure.resourcemanager.containerservice.models.ScaleSetPriority&text=ScaleSetPriority\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withScaleSetPriority(ScaleSetPriority scaleSetPriority)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withSpotMaxPrice(java.lang.Float)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withSpotMaxPrice(Float spotMaxPrice)"
  name: "withSpotMaxPrice(Float spotMaxPrice)"
  nameWithType: "ManagedClusterAgentPoolProfile.withSpotMaxPrice(Float spotMaxPrice)"
  summary: "Set the spotMaxPrice property: The max price (in US Dollars) you are willing to pay for spot instances. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand. Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see \\[spot VMs pricing\\](https://docs.microsoft.com/azure/virtual-machines/spot-vms\\#pricing)."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withSpotMaxPrice(java.lang.Float)"
  parameters:
  - name: "spotMaxPrice"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withSpotMaxPrice(Float spotMaxPrice)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "ManagedClusterAgentPoolProfile.withTags(Map<String,String> tags)"
  summary: "Set the tags property: The tags to be persisted on the agent pool virtual machine scale set."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ManagedClusterAgentPoolProfile withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withType(com.azure.resourcemanager.containerservice.models.AgentPoolType)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withType(AgentPoolType type)"
  name: "withType(AgentPoolType type)"
  nameWithType: "ManagedClusterAgentPoolProfile.withType(AgentPoolType type)"
  summary: "Set the type property: The type of Agent Pool."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withType(com.azure.resourcemanager.containerservice.models.AgentPoolType)"
  parameters:
  - name: "type"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.AgentPoolType?alt=com.azure.resourcemanager.containerservice.models.AgentPoolType&text=AgentPoolType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withType(AgentPoolType type)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withUpgradeSettings(com.azure.resourcemanager.containerservice.models.AgentPoolUpgradeSettings)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withUpgradeSettings(AgentPoolUpgradeSettings upgradeSettings)"
  name: "withUpgradeSettings(AgentPoolUpgradeSettings upgradeSettings)"
  nameWithType: "ManagedClusterAgentPoolProfile.withUpgradeSettings(AgentPoolUpgradeSettings upgradeSettings)"
  summary: "Set the upgradeSettings property: Settings for upgrading the agentpool."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withUpgradeSettings(com.azure.resourcemanager.containerservice.models.AgentPoolUpgradeSettings)"
  parameters:
  - name: "upgradeSettings"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.AgentPoolUpgradeSettings?alt=com.azure.resourcemanager.containerservice.models.AgentPoolUpgradeSettings&text=AgentPoolUpgradeSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withUpgradeSettings(AgentPoolUpgradeSettings upgradeSettings)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withVmSize(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withVmSize(String vmSize)"
  name: "withVmSize(String vmSize)"
  nameWithType: "ManagedClusterAgentPoolProfile.withVmSize(String vmSize)"
  summary: "Set the vmSize property: The size of the agent pool VMs. VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withVmSize(java.lang.String)"
  parameters:
  - name: "vmSize"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withVmSize(String vmSize)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withVnetSubnetId(java.lang.String)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withVnetSubnetId(String vnetSubnetId)"
  name: "withVnetSubnetId(String vnetSubnetId)"
  nameWithType: "ManagedClusterAgentPoolProfile.withVnetSubnetId(String vnetSubnetId)"
  summary: "Set the vnetSubnetId property: The ID of the subnet which agent pool nodes and optionally pods will join on startup. If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroupName\\}/providers/Microsoft.Network/virtualNetworks/\\{virtualNetworkName\\}/subnets/\\{subnetName\\}."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withVnetSubnetId(java.lang.String)"
  parameters:
  - name: "vnetSubnetId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withVnetSubnetId(String vnetSubnetId)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withWorkloadRuntime(com.azure.resourcemanager.containerservice.models.WorkloadRuntime)"
  fullName: "com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile.withWorkloadRuntime(WorkloadRuntime workloadRuntime)"
  name: "withWorkloadRuntime(WorkloadRuntime workloadRuntime)"
  nameWithType: "ManagedClusterAgentPoolProfile.withWorkloadRuntime(WorkloadRuntime workloadRuntime)"
  summary: "Set the workloadRuntime property: Determines the type of workload a node can run."
  overridden: "com.azure.resourcemanager.containerservice.fluent.models.ManagedClusterAgentPoolProfileProperties.withWorkloadRuntime(com.azure.resourcemanager.containerservice.models.WorkloadRuntime)"
  parameters:
  - name: "workloadRuntime"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.WorkloadRuntime?alt=com.azure.resourcemanager.containerservice.models.WorkloadRuntime&text=WorkloadRuntime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ManagedClusterAgentPoolProfile withWorkloadRuntime(WorkloadRuntime workloadRuntime)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile?alt=com.azure.resourcemanager.containerservice.models.ManagedClusterAgentPoolProfile&text=ManagedClusterAgentPoolProfile\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.containerservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.13.0-beta.1
