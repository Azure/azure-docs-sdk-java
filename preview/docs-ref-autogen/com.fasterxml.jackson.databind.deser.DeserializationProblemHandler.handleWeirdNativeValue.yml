### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleWeirdNativeValue*"
fullName: "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleWeirdNativeValue"
name: "handleWeirdNativeValue"
nameWithType: "DeserializationProblemHandler.handleWeirdNativeValue"
members:
- uid: "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleWeirdNativeValue(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.JsonParser)"
  fullName: "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.handleWeirdNativeValue(DeserializationContext ctxt, JavaType targetType, Object valueToConvert, JsonParser p)"
  name: "handleWeirdNativeValue(DeserializationContext ctxt, JavaType targetType, Object valueToConvert, JsonParser p)"
  nameWithType: "DeserializationProblemHandler.handleWeirdNativeValue(DeserializationContext ctxt, JavaType targetType, Object valueToConvert, JsonParser p)"
  summary: "Method called when an embedded (native) value (<xref uid=\"com.fasterxml.jackson.core.JsonToken.VALUE_EMBEDDED_OBJECT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#VALUE_EMBEDDED_OBJECT\"></xref>) cannot be converted directly into expected value type (usually POJO). Handler may choose to do one of 3 things:\n\n *  Indicate it does not know what to do by returning <xref uid=\"com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.NOT_HANDLED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#NOT_HANDLED\"></xref>\n *  Throw a <xref uid=\"java.io.IOException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IOException\"></xref> to indicate specific fail message (instead of standard exception caller would throw\n *  Return actual converted value (of type `targetType`) to use as replacement, and continue processing."
  parameters:
  - name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationContext?alt=com.fasterxml.jackson.databind.DeserializationContext&text=DeserializationContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "targetType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "valueToConvert"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "p"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Object handleWeirdNativeValue(DeserializationContext ctxt, JavaType targetType, Object valueToConvert, JsonParser p)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Either <xref uid=\"com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.NOT_HANDLED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#NOT_HANDLED\"></xref> to indicate that handler does not know\n    what to do (and exception may be thrown), or value to use (possibly\n    <code>null</code>)"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.deser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
