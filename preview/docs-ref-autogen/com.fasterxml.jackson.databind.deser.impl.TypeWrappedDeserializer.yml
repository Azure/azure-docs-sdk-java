### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer"
fullName: "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer"
name: "TypeWrappedDeserializer"
nameWithType: "TypeWrappedDeserializer"
summary: "Simple deserializer that will call configured type deserializer, passing in configured data deserializer, and exposing it all as a simple deserializer. This is necessary when there is no \"parent\" deserializer which could handle details of calling a <xref uid=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeDeserializer\"></xref>, most commonly used with root values."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.JsonDeserializer\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)"
- "com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)"
- "com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)"
- "com.fasterxml.jackson.databind.JsonDeserializer.findBackReference(java.lang.String)"
- "com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()"
- "com.fasterxml.jackson.databind.JsonDeserializer.getEmptyAccessPattern()"
- "com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()"
- "com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()"
- "com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()"
- "com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()"
- "com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()"
- "com.fasterxml.jackson.databind.JsonDeserializer.handledType()"
- "com.fasterxml.jackson.databind.JsonDeserializer.isCachable()"
- "com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)"
- "com.fasterxml.jackson.databind.JsonDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)"
- "com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TypeWrappedDeserializer extends JsonDeserializer<Object> implements Serializable"
constructors:
- "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.TypeWrappedDeserializer(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)"
fields:
- "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer._deserializer"
- "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer._typeDeserializer"
methods:
- "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)"
- "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)"
- "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.getDelegatee()"
- "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.getKnownPropertyNames()"
- "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)"
- "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.handledType()"
- "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.deser.impl"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
