### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter.filterStartObject*"
fullName: "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter.filterStartObject"
name: "filterStartObject"
nameWithType: "JsonPointerBasedFilter.filterStartObject"
members:
- uid: "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter.filterStartObject()"
  fullName: "com.fasterxml.jackson.core.filter.JsonPointerBasedFilter.filterStartObject()"
  name: "filterStartObject()"
  nameWithType: "JsonPointerBasedFilter.filterStartObject()"
  summary: "Method called to check whether Object value at current output location should be included in output. Three kinds of return values may be used as follows:\n\n *  `null` to indicate that the Object should be skipped\n *  <xref uid=\"com.fasterxml.jackson.core.filter.JsonPointerBasedFilter.INCLUDE_ALL\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#INCLUDE_ALL\"></xref> to indicate that the Object should be included completely in output\n *  Any other <xref uid=\"com.fasterxml.jackson.core.filter.TokenFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenFilter\"></xref> implementation (possibly this one) to mean that further inclusion calls on return filter object need to be made on contained properties, as necessary. <xref uid=\"com.fasterxml.jackson.core.filter.JsonPointerBasedFilter.filterFinishObject*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#filterFinishObject()\"></xref> will also be called on returned filter object\n\nDefault implementation returns `this`, which means that checks are made recursively for properties of the Object to determine possible inclusion."
  overridden: "com.fasterxml.jackson.core.filter.TokenFilter.filterStartObject()"
  syntax: "public TokenFilter filterStartObject()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.filter.TokenFilter?alt=com.fasterxml.jackson.core.filter.TokenFilter&text=TokenFilter\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.filter"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
