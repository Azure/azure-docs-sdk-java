### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.EventHubConsumerClient"
fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient"
name: "EventHubConsumerClient"
nameWithType: "EventHubConsumerClient"
summary: "A **synchronous** consumer responsible for reading <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> from an Event Hub partition in the context of a specific consumer group."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class EventHubConsumerClient implements Closeable"
methods:
- uid: "com.azure.messaging.eventhubs.EventHubConsumerClient.close()"
  fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient.close()"
  name: "close()"
  nameWithType: "EventHubConsumerClient.close()"
  syntax: "public void close()"
- uid: "com.azure.messaging.eventhubs.EventHubConsumerClient.getConsumerGroup()"
  fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient.getConsumerGroup()"
  name: "getConsumerGroup()"
  nameWithType: "EventHubConsumerClient.getConsumerGroup()"
  summary: "Gets the consumer group this consumer is reading events as a part of."
  syntax: "public String getConsumerGroup()"
  desc: "Gets the consumer group this consumer is reading events as a part of."
  returns:
    description: "The consumer group this consumer is reading events as a part of."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventHubConsumerClient.getEventHubName()"
  fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient.getEventHubName()"
  name: "getEventHubName()"
  nameWithType: "EventHubConsumerClient.getEventHubName()"
  summary: "Gets the Event Hub name this client interacts with."
  syntax: "public String getEventHubName()"
  desc: "Gets the Event Hub name this client interacts with."
  returns:
    description: "The Event Hub name this client interacts with."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventHubConsumerClient.getEventHubProperties()"
  fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient.getEventHubProperties()"
  name: "getEventHubProperties()"
  nameWithType: "EventHubConsumerClient.getEventHubProperties()"
  summary: "Retrieves information about an Event Hub, including the number of partitions present and their identifiers."
  syntax: "public EventHubProperties getEventHubProperties()"
  desc: "Retrieves information about an Event Hub, including the number of partitions present and their identifiers."
  returns:
    description: "The set of information for the Event Hub that this client is associated with."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventHubProperties?alt=com.azure.messaging.eventhubs.EventHubProperties&text=EventHubProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventHubConsumerClient.getFullyQualifiedNamespace()"
  fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient.getFullyQualifiedNamespace()"
  name: "getFullyQualifiedNamespace()"
  nameWithType: "EventHubConsumerClient.getFullyQualifiedNamespace()"
  summary: "Gets the fully qualified Event Hubs namespace that the connection is associated with."
  syntax: "public String getFullyQualifiedNamespace()"
  desc: "Gets the fully qualified Event Hubs namespace that the connection is associated with. This is likely similar to `{yournamespace}.servicebus.windows.net`."
  returns:
    description: "The fully qualified Event Hubs namespace that the connection is associated with."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventHubConsumerClient.getPartitionIds()"
  fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient.getPartitionIds()"
  name: "getPartitionIds()"
  nameWithType: "EventHubConsumerClient.getPartitionIds()"
  summary: "Retrieves the identifiers for the partitions of an Event Hub."
  syntax: "public IterableStream<String> getPartitionIds()"
  desc: "Retrieves the identifiers for the partitions of an Event Hub."
  returns:
    description: "The set of identifiers for the partitions of an Event Hub."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.eventhubs.EventHubConsumerClient.getPartitionProperties(java.lang.String)"
  fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient.getPartitionProperties(String partitionId)"
  name: "getPartitionProperties(String partitionId)"
  nameWithType: "EventHubConsumerClient.getPartitionProperties(String partitionId)"
  summary: "Retrieves information about a specific partition for an Event Hub, including elements that describe the available events in the partition event stream."
  parameters:
  - description: "The unique identifier of a partition associated with the Event Hub."
    name: "partitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PartitionProperties getPartitionProperties(String partitionId)"
  desc: "Retrieves information about a specific partition for an Event Hub, including elements that describe the available events in the partition event stream."
  returns:
    description: "The set of information for the requested partition under the Event Hub this client is associated with."
    type: "<xref href=\"com.azure.messaging.eventhubs.PartitionProperties?alt=com.azure.messaging.eventhubs.PartitionProperties&text=PartitionProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(java.lang.String,int,com.azure.messaging.eventhubs.models.EventPosition)"
  fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(String partitionId, int maximumMessageCount, EventPosition startingPosition)"
  name: "receiveFromPartition(String partitionId, int maximumMessageCount, EventPosition startingPosition)"
  nameWithType: "EventHubConsumerClient.receiveFromPartition(String partitionId, int maximumMessageCount, EventPosition startingPosition)"
  summary: "Receives a batch of <xref uid=\"com.azure.messaging.eventhubs.models.PartitionEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"events\"></xref> from the Event Hub partition."
  parameters:
  - description: "Identifier of the partition to read events from."
    name: "partitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The maximum number of messages to receive in this batch."
    name: "maximumMessageCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Position within the Event Hub partition to begin consuming events."
    name: "startingPosition"
    type: "<xref href=\"com.azure.messaging.eventhubs.models.EventPosition?alt=com.azure.messaging.eventhubs.models.EventPosition&text=EventPosition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IterableStream<PartitionEvent> receiveFromPartition(String partitionId, int maximumMessageCount, EventPosition startingPosition)"
  desc: "Receives a batch of <xref uid=\"com.azure.messaging.eventhubs.models.PartitionEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"events\"></xref> from the Event Hub partition."
  returns:
    description: "A set of <xref uid=\"com.azure.messaging.eventhubs.models.PartitionEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PartitionEvent\"></xref> that was received. The iterable contains up to\n     <code>maximumMessageCount</code> events. If a stream for the events was opened before, the same position within\n     that partition is returned. Otherwise, events are read starting from <code>startingPosition</code>."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.models.PartitionEvent?alt=com.azure.messaging.eventhubs.models.PartitionEvent&text=PartitionEvent\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(java.lang.String,int,com.azure.messaging.eventhubs.models.EventPosition,java.time.Duration)"
  fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(String partitionId, int maximumMessageCount, EventPosition startingPosition, Duration maximumWaitTime)"
  name: "receiveFromPartition(String partitionId, int maximumMessageCount, EventPosition startingPosition, Duration maximumWaitTime)"
  nameWithType: "EventHubConsumerClient.receiveFromPartition(String partitionId, int maximumMessageCount, EventPosition startingPosition, Duration maximumWaitTime)"
  summary: "Receives a batch of <xref uid=\"com.azure.messaging.eventhubs.models.PartitionEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"events\"></xref> from the Event Hub partition."
  parameters:
  - description: "Identifier of the partition to read events from."
    name: "partitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The maximum number of messages to receive in this batch."
    name: "maximumMessageCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Position within the Event Hub partition to begin consuming events."
    name: "startingPosition"
    type: "<xref href=\"com.azure.messaging.eventhubs.models.EventPosition?alt=com.azure.messaging.eventhubs.models.EventPosition&text=EventPosition\" data-throw-if-not-resolved=\"False\" />"
  - description: "The maximum amount of time to wait to build up the requested message count for the\n     batch; if not specified, the default wait time specified when the consumer was created will be used."
    name: "maximumWaitTime"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IterableStream<PartitionEvent> receiveFromPartition(String partitionId, int maximumMessageCount, EventPosition startingPosition, Duration maximumWaitTime)"
  desc: "Receives a batch of <xref uid=\"com.azure.messaging.eventhubs.models.PartitionEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"events\"></xref> from the Event Hub partition."
  returns:
    description: "A set of <xref uid=\"com.azure.messaging.eventhubs.models.PartitionEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PartitionEvent\"></xref> that was received. The iterable contains up to\n     <code>maximumMessageCount</code> events."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.models.PartitionEvent?alt=com.azure.messaging.eventhubs.models.PartitionEvent&text=PartitionEvent\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(java.lang.String,int,com.azure.messaging.eventhubs.models.EventPosition,java.time.Duration,com.azure.messaging.eventhubs.models.ReceiveOptions)"
  fullName: "com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(String partitionId, int maximumMessageCount, EventPosition startingPosition, Duration maximumWaitTime, ReceiveOptions receiveOptions)"
  name: "receiveFromPartition(String partitionId, int maximumMessageCount, EventPosition startingPosition, Duration maximumWaitTime, ReceiveOptions receiveOptions)"
  nameWithType: "EventHubConsumerClient.receiveFromPartition(String partitionId, int maximumMessageCount, EventPosition startingPosition, Duration maximumWaitTime, ReceiveOptions receiveOptions)"
  summary: "Receives a batch of <xref uid=\"com.azure.messaging.eventhubs.models.PartitionEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"events\"></xref> from the Event Hub partition."
  parameters:
  - description: "Identifier of the partition to read events from."
    name: "partitionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The maximum number of messages to receive in this batch."
    name: "maximumMessageCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Position within the Event Hub partition to begin consuming events."
    name: "startingPosition"
    type: "<xref href=\"com.azure.messaging.eventhubs.models.EventPosition?alt=com.azure.messaging.eventhubs.models.EventPosition&text=EventPosition\" data-throw-if-not-resolved=\"False\" />"
  - description: "The maximum amount of time to wait to build up the requested message count for the\n     batch; if not specified, the default wait time specified when the consumer was created will be used."
    name: "maximumWaitTime"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Options when receiving events from the partition."
    name: "receiveOptions"
    type: "<xref href=\"com.azure.messaging.eventhubs.models.ReceiveOptions?alt=com.azure.messaging.eventhubs.models.ReceiveOptions&text=ReceiveOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IterableStream<PartitionEvent> receiveFromPartition(String partitionId, int maximumMessageCount, EventPosition startingPosition, Duration maximumWaitTime, ReceiveOptions receiveOptions)"
  desc: "Receives a batch of <xref uid=\"com.azure.messaging.eventhubs.models.PartitionEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"events\"></xref> from the Event Hub partition."
  returns:
    description: "A set of <xref uid=\"com.azure.messaging.eventhubs.models.PartitionEvent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PartitionEvent\"></xref> that was received. The iterable contains up to\n     <code>maximumMessageCount</code> events."
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.models.PartitionEvent?alt=com.azure.messaging.eventhubs.models.PartitionEvent&text=PartitionEvent\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "A **synchronous** consumer responsible for reading <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventData\"></xref> from an Event Hub partition in the context of a specific consumer group.\n\n**Creating a synchronous consumer**\n\n```java\n// The required parameters are `consumerGroup`, and a way to authenticate with Event Hubs using credentials.\n EventHubConsumerClient consumer = new EventHubClientBuilder()\n     .connectionString(\"Endpoint={fully-qualified-namespace};SharedAccessKeyName={policy-name};\"\n         + \"SharedAccessKey={key};Entity-Path={hub-name}\")\n     .consumerGroup(\"$DEFAULT\")\n     .buildConsumerClient();\n```\n\n**Consuming events from a single partition**\n\nEvents from a single partition can be consumed using <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(java.lang.String,int,com.azure.messaging.eventhubs.models.EventPosition)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#receiveFromPartition(String, int, EventPosition)\"></xref> or <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumerClient.receiveFromPartition(java.lang.String,int,com.azure.messaging.eventhubs.models.EventPosition,java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#receiveFromPartition(String, int, EventPosition, Duration)\"></xref>. The call to `receiveFromPartition` completes and returns an <xref uid=\"com.azure.core.util.IterableStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IterableStream\"></xref> when either the maximum number of events is received, or the timeout has elapsed.\n\n```java\nInstant twelveHoursAgo = Instant.now().minus(Duration.ofHours(12));\n EventPosition startingPosition = EventPosition.fromEnqueuedTime(twelveHoursAgo);\n String partitionId = \"0\";\n\n // Reads events from partition '0' and returns the first 100 received or until the 30 seconds has elapsed.\n IterableStream<PartitionEvent> events = consumer.receiveFromPartition(partitionId, 100,\n     startingPosition, Duration.ofSeconds(30));\n\n Long lastSequenceNumber = -1L;\n for (PartitionEvent partitionEvent : events) {\n     // For each event, perform some sort of processing.\n     System.out.print(\"Event received: \" + partitionEvent.getData().getSequenceNumber());\n     lastSequenceNumber = partitionEvent.getData().getSequenceNumber();\n }\n\n // Figure out what the next EventPosition to receive from is based on last event we processed in the stream.\n // If lastSequenceNumber is -1L, then we didn't see any events the first time we fetched events from the\n // partition.\n if (lastSequenceNumber != -1L) {\n     EventPosition nextPosition = EventPosition.fromSequenceNumber(lastSequenceNumber, false);\n\n     // Gets the next set of events from partition '0' to consume and process.\n     IterableStream<PartitionEvent> nextEvents = consumer.receiveFromPartition(partitionId, 100,\n         nextPosition, Duration.ofSeconds(30));\n }\n```"
implements:
- "<xref href=\"java.io.Closeable?alt=java.io.Closeable&text=Closeable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.messaging.eventhubs"
artifact: com.azure:azure-messaging-eventhubs:5.13.0-beta.1
