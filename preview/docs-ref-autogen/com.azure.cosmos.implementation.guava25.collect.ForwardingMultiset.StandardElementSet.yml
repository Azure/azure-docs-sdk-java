### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet
  id: StandardElementSet
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet.StandardElementSet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet.iterator()
  langs:
  - java
  name: ForwardingMultiset<E>.StandardElementSet
  nameWithType: ForwardingMultiset<E>.StandardElementSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.StandardElementSet
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: 'A sensible implementation of <xref uid="com.azure.cosmos.implementation.guava25.collect.Multiset.elementSet" data-throw-if-not-resolved="false">Multiset#elementSet</xref> in terms of the following methods: <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.clear" data-throw-if-not-resolved="false">ForwardingMultiset#clear</xref>, <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.contains" data-throw-if-not-resolved="false">ForwardingMultiset#contains</xref>, <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.containsAll" data-throw-if-not-resolved="false">ForwardingMultiset#containsAll</xref>, <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.count" data-throw-if-not-resolved="false">ForwardingMultiset#count</xref>, <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.isEmpty" data-throw-if-not-resolved="false">ForwardingMultiset#isEmpty</xref>, the <xref uid="java.util.Set.size" data-throw-if-not-resolved="false">Set#size</xref> and <xref uid="java.util.Set.iterator" data-throw-if-not-resolved="false">Set#iterator</xref> methods of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.entrySet" data-throw-if-not-resolved="false">ForwardingMultiset#entrySet</xref>, and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.remove(java.lang.Object,int)" data-throw-if-not-resolved="false">ForwardingMultiset#remove(Object, int)</xref>. In many situations, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.elementSet" data-throw-if-not-resolved="false">ForwardingMultiset#elementSet</xref> to forward to this implementation or a subclass thereof.'
  syntax:
    content: protected class ForwardingMultiset<E>.StandardElementSet extends Multisets.ElementSet<E>
  inheritance:
  - java.lang.Object
  - java.util.AbstractCollection
  - java.util.AbstractSet
  - com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet
  - com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.clear()
  - com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.contains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.containsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.iterator()
  - com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.size()
  - com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.removeAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.retainAll(java.util.Collection<?>)
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - java.util.AbstractCollection.<T>toArray(T[])
  - java.util.AbstractCollection.add(E)
  - java.util.AbstractCollection.addAll(java.util.Collection<? extends E>)
  - java.util.AbstractCollection.toArray()
  - java.util.AbstractCollection.toString()
  - java.util.AbstractSet.equals(java.lang.Object)
  - java.util.AbstractSet.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet.StandardElementSet()
  id: StandardElementSet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet
  langs:
  - java
  name: StandardElementSet()
  nameWithType: ForwardingMultiset<E>.StandardElementSet.StandardElementSet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.StandardElementSet.StandardElementSet()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet.StandardElementSet*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Constructor for use by subclasses.
  syntax:
    content: public StandardElementSet()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet.iterator()
  id: iterator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet
  langs:
  - java
  name: iterator()
  nameWithType: ForwardingMultiset<E>.StandardElementSet.iterator()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.StandardElementSet.iterator()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet.iterator*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public Iterator<E> iterator()
    return:
      type: java.util.Iterator<E>
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet.StandardElementSet*
  name: StandardElementSet
  nameWithType: ForwardingMultiset<E>.StandardElementSet.StandardElementSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.StandardElementSet.StandardElementSet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Iterator<E>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset.StandardElementSet.iterator*
  name: iterator
  nameWithType: ForwardingMultiset<E>.StandardElementSet.iterator
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMultiset<E>.StandardElementSet.iterator
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet<E>
  name: Multisets.ElementSet<E>
  nameWithType: Multisets.ElementSet<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet<E>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.util.AbstractCollection.toArray()
  name: AbstractCollection.toArray()
  nameWithType: AbstractCollection.toArray()
  fullName: java.util.AbstractCollection.toArray()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.size()
  name: Multisets.ElementSet.size()
  nameWithType: Multisets.ElementSet.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.size()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.iterator()
  name: Multisets.ElementSet.iterator()
  nameWithType: Multisets.ElementSet.iterator()
  fullName: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.iterator()
- uid: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.remove(java.lang.Object)
  name: Multisets.ElementSet.remove(Object)
  nameWithType: Multisets.ElementSet.remove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.remove(java.lang.Object)
- uid: java.util.AbstractCollection.add(E)
  name: AbstractCollection.add(E)
  nameWithType: AbstractCollection.add(E)
  fullName: java.util.AbstractCollection.add(E)
- uid: java.util.AbstractSet.hashCode()
  name: AbstractSet.hashCode()
  nameWithType: AbstractSet.hashCode()
  fullName: java.util.AbstractSet.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.clear()
  name: Multisets.ElementSet.clear()
  nameWithType: Multisets.ElementSet.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.clear()
- uid: java.util.AbstractCollection.toString()
  name: AbstractCollection.toString()
  nameWithType: AbstractCollection.toString()
  fullName: java.util.AbstractCollection.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.removeAll(java.util.Collection<?>)
  name: Sets.ImprovedAbstractSet.removeAll(Collection<?>)
  nameWithType: Sets.ImprovedAbstractSet.removeAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.removeAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.isEmpty()
  name: Multisets.ElementSet.isEmpty()
  nameWithType: Multisets.ElementSet.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.isEmpty()
- uid: java.util.AbstractCollection.addAll(java.util.Collection<? extends E>)
  name: AbstractCollection.addAll(Collection<? extends E>)
  nameWithType: AbstractCollection.addAll(Collection<? extends E>)
  fullName: java.util.AbstractCollection.addAll(java.util.Collection<? extends E>)
- uid: com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.retainAll(java.util.Collection<?>)
  name: Sets.ImprovedAbstractSet.retainAll(Collection<?>)
  nameWithType: Sets.ImprovedAbstractSet.retainAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.retainAll(java.util.Collection<?>)
- uid: java.util.AbstractCollection.<T>toArray(T[])
  name: AbstractCollection.<T>toArray(T[])
  nameWithType: AbstractCollection.<T>toArray(T[])
  fullName: java.util.AbstractCollection.<T>toArray(T[])
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.util.AbstractSet.equals(java.lang.Object)
  name: AbstractSet.equals(Object)
  nameWithType: AbstractSet.equals(Object)
  fullName: java.util.AbstractSet.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.contains(java.lang.Object)
  name: Multisets.ElementSet.contains(Object)
  nameWithType: Multisets.ElementSet.contains(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.contains(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.containsAll(java.util.Collection<?>)
  name: Multisets.ElementSet.containsAll(Collection<?>)
  nameWithType: Multisets.ElementSet.containsAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.containsAll(java.util.Collection<?>)
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: E
  name: E
  nameWithType: E
  fullName: E
- uid: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet
  name: Multisets.ElementSet
  nameWithType: Multisets.ElementSet
  fullName: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.removeAll(java.util.Collection
  name: Sets.ImprovedAbstractSet.removeAll(Collection
  nameWithType: Sets.ImprovedAbstractSet.removeAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.removeAll(java.util.Collection
- uid: '? extends E>)'
  name: '? extends E>)'
  nameWithType: '? extends E>)'
  fullName: '? extends E>)'
- uid: java.util.AbstractCollection.addAll(java.util.Collection
  name: AbstractCollection.addAll(Collection
  nameWithType: AbstractCollection.addAll(Collection
  fullName: java.util.AbstractCollection.addAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.retainAll(java.util.Collection
  name: Sets.ImprovedAbstractSet.retainAll(Collection
  nameWithType: Sets.ImprovedAbstractSet.retainAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.retainAll(java.util.Collection
- uid: T>toArray(T[])
  name: T>toArray(T[])
  nameWithType: T>toArray(T[])
  fullName: T>toArray(T[])
- uid: java.util.AbstractCollection.
  name: AbstractCollection.
  nameWithType: AbstractCollection.
  fullName: java.util.AbstractCollection.
- uid: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.containsAll(java.util.Collection
  name: Multisets.ElementSet.containsAll(Collection
  nameWithType: Multisets.ElementSet.containsAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.containsAll(java.util.Collection
