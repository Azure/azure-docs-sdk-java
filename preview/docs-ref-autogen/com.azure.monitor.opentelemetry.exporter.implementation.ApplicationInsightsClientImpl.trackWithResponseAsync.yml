### YamlMime:JavaMember
uid: "com.azure.monitor.opentelemetry.exporter.implementation.ApplicationInsightsClientImpl.trackWithResponseAsync*"
fullName: "com.azure.monitor.opentelemetry.exporter.implementation.ApplicationInsightsClientImpl.trackWithResponseAsync"
name: "trackWithResponseAsync"
nameWithType: "ApplicationInsightsClientImpl.trackWithResponseAsync"
members:
- uid: "com.azure.monitor.opentelemetry.exporter.implementation.ApplicationInsightsClientImpl.trackWithResponseAsync(java.util.List<com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryItem>)"
  fullName: "com.azure.monitor.opentelemetry.exporter.implementation.ApplicationInsightsClientImpl.trackWithResponseAsync(List<TelemetryItem> body)"
  name: "trackWithResponseAsync(List<TelemetryItem> body)"
  nameWithType: "ApplicationInsightsClientImpl.trackWithResponseAsync(List<TelemetryItem> body)"
  summary: "This operation sends a sequence of telemetry events that will be monitored by Azure Monitor."
  parameters:
  - description: "Array of TelemetryItem."
    name: "body"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryItem?alt=com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryItem&text=TelemetryItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Response<ExportResult>> trackWithResponseAsync(List<TelemetryItem> body)"
  returns:
    description: "response containing the status of each telemetry item."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.opentelemetry.exporter.implementation.models.ExportResult?alt=com.azure.monitor.opentelemetry.exporter.implementation.models.ExportResult&text=ExportResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.monitor.opentelemetry.exporter.implementation.ApplicationInsightsClientImpl.trackWithResponseAsync(java.util.List<com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryItem>,com.azure.core.util.Context)"
  fullName: "com.azure.monitor.opentelemetry.exporter.implementation.ApplicationInsightsClientImpl.trackWithResponseAsync(List<TelemetryItem> body, Context context)"
  name: "trackWithResponseAsync(List<TelemetryItem> body, Context context)"
  nameWithType: "ApplicationInsightsClientImpl.trackWithResponseAsync(List<TelemetryItem> body, Context context)"
  summary: "This operation sends a sequence of telemetry events that will be monitored by Azure Monitor."
  parameters:
  - description: "Array of TelemetryItem."
    name: "body"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryItem?alt=com.azure.monitor.opentelemetry.exporter.implementation.models.TelemetryItem&text=TelemetryItem\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<ExportResult>> trackWithResponseAsync(List<TelemetryItem> body, Context context)"
  returns:
    description: "response containing the status of each telemetry item."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.opentelemetry.exporter.implementation.models.ExportResult?alt=com.azure.monitor.opentelemetry.exporter.implementation.models.ExportResult&text=ExportResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.monitor.opentelemetry.exporter.implementation"
artifact: com.azure:azure-monitor-opentelemetry-exporter:1.0.0-beta.4
