### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial*"
fullName: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial"
name: "encodeBase64Partial"
nameWithType: "Base64Variant.encodeBase64Partial"
members:
- uid: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int,int,byte[],int)"
  fullName: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int bits, int outputBytes, byte[] buffer, int outPtr)"
  name: "encodeBase64Partial(int bits, int outputBytes, byte[] buffer, int outPtr)"
  nameWithType: "Base64Variant.encodeBase64Partial(int bits, int outputBytes, byte[] buffer, int outPtr)"
  summary: "Method that outputs partial chunk (which only encodes one or two bytes of data). Data given is still aligned same as if it as full data; that is, missing data is at the \"right end\" (LSB) of int."
  parameters:
  - name: "bits"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of encoded bytes included (either 1 or 2)"
    name: "outputBytes"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "buffer"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "outPtr"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int encodeBase64Partial(int bits, int outputBytes, byte[] buffer, int outPtr)"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int,int,char[],int)"
  fullName: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int bits, int outputBytes, char[] buffer, int outPtr)"
  name: "encodeBase64Partial(int bits, int outputBytes, char[] buffer, int outPtr)"
  nameWithType: "Base64Variant.encodeBase64Partial(int bits, int outputBytes, char[] buffer, int outPtr)"
  summary: "Method that outputs partial chunk (which only encodes one or two bytes of data). Data given is still aligned same as if it as full data; that is, missing data is at the \"right end\" (LSB) of int."
  parameters:
  - name: "bits"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Number of encoded bytes included (either 1 or 2)"
    name: "outputBytes"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "buffer"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "outPtr"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int encodeBase64Partial(int bits, int outputBytes, char[] buffer, int outPtr)"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(java.lang.StringBuilder,int,int)"
  fullName: "com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(StringBuilder sb, int bits, int outputBytes)"
  name: "encodeBase64Partial(StringBuilder sb, int bits, int outputBytes)"
  nameWithType: "Base64Variant.encodeBase64Partial(StringBuilder sb, int bits, int outputBytes)"
  parameters:
  - name: "sb"
    type: "<xref href=\"java.lang.StringBuilder?alt=java.lang.StringBuilder&text=StringBuilder\" data-throw-if-not-resolved=\"False\" />"
  - name: "bits"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "outputBytes"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void encodeBase64Partial(StringBuilder sb, int bits, int outputBytes)"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
