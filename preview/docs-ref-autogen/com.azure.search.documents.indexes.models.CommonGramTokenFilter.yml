### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter"
fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter"
name: "CommonGramTokenFilter"
nameWithType: "CommonGramTokenFilter"
summary: "Construct bigrams for frequently occurring terms while indexing."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.search.documents.indexes.models.TokenFilter.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CommonGramTokenFilter extends TokenFilter"
constructors:
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.CommonGramTokenFilter(java.lang.String,java.util.List<java.lang.String>)"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.CommonGramTokenFilter(String name, List<String> commonWords)"
  name: "CommonGramTokenFilter(String name, List<String> commonWords)"
  nameWithType: "CommonGramTokenFilter.CommonGramTokenFilter(String name, List<String> commonWords)"
  summary: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.TokenFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenFilter\"></xref>."
  parameters:
  - description: "The name of the token filter. It must only contain letters, digits,\n spaces, dashes or underscores, can only start and end with alphanumeric\n characters, and is limited to 128 characters."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The set of common words."
    name: "commonWords"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CommonGramTokenFilter(String name, List<String> commonWords)"
  desc: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.TokenFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenFilter\"></xref>."
methods:
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.getCommonWords()"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.getCommonWords()"
  name: "getCommonWords()"
  nameWithType: "CommonGramTokenFilter.getCommonWords()"
  summary: "Get the common<wbr>Words property: The set of common words."
  syntax: "public List<String> getCommonWords()"
  desc: "Get the commonWords property: The set of common words."
  returns:
    description: "the commonWords value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.isCaseIgnored()"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.isCaseIgnored()"
  name: "isCaseIgnored()"
  nameWithType: "CommonGramTokenFilter.isCaseIgnored()"
  summary: "Get the ignore<wbr>Case property: A value indicating whether common words matching will be case insensitive."
  syntax: "public Boolean isCaseIgnored()"
  desc: "Get the ignoreCase property: A value indicating whether common words matching will be case insensitive. Default is false."
  returns:
    description: "the ignoreCase value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.isQueryModeUsed()"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.isQueryModeUsed()"
  name: "isQueryModeUsed()"
  nameWithType: "CommonGramTokenFilter.isQueryModeUsed()"
  summary: "Get the use<wbr>Query<wbr>Mode property: A value that indicates whether the token filter is in query mode."
  syntax: "public Boolean isQueryModeUsed()"
  desc: "Get the useQueryMode property: A value that indicates whether the token filter is in query mode. When in query mode, the token filter generates bigrams and then removes common words and single terms followed by a common word. Default is false."
  returns:
    description: "the useQueryMode value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.setCaseIgnored(java.lang.Boolean)"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.setCaseIgnored(Boolean caseIgnored)"
  name: "setCaseIgnored(Boolean caseIgnored)"
  nameWithType: "CommonGramTokenFilter.setCaseIgnored(Boolean caseIgnored)"
  summary: "Set the ignore<wbr>Case property: A value indicating whether common words matching will be case insensitive."
  parameters:
  - description: "the ignoreCase value to set."
    name: "caseIgnored"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommonGramTokenFilter setCaseIgnored(Boolean caseIgnored)"
  desc: "Set the ignoreCase property: A value indicating whether common words matching will be case insensitive. Default is false."
  returns:
    description: "the CommonGramTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.CommonGramTokenFilter?alt=com.azure.search.documents.indexes.models.CommonGramTokenFilter&text=CommonGramTokenFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.setQueryModeUsed(java.lang.Boolean)"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.setQueryModeUsed(Boolean queryModeUsed)"
  name: "setQueryModeUsed(Boolean queryModeUsed)"
  nameWithType: "CommonGramTokenFilter.setQueryModeUsed(Boolean queryModeUsed)"
  summary: "Set the use<wbr>Query<wbr>Mode property: A value that indicates whether the token filter is in query mode."
  parameters:
  - description: "the useQueryMode value to set."
    name: "queryModeUsed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommonGramTokenFilter setQueryModeUsed(Boolean queryModeUsed)"
  desc: "Set the useQueryMode property: A value that indicates whether the token filter is in query mode. When in query mode, the token filter generates bigrams and then removes common words and single terms followed by a common word. Default is false."
  returns:
    description: "the CommonGramTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.CommonGramTokenFilter?alt=com.azure.search.documents.indexes.models.CommonGramTokenFilter&text=CommonGramTokenFilter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Construct bigrams for frequently occurring terms while indexing. Single terms are still indexed too, with bigrams overlaid. This token filter is implemented using Apache Lucene."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.5.0-beta.12
