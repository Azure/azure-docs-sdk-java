### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter"
fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter"
name: "CommonGramTokenFilter"
nameWithType: "CommonGramTokenFilter"
summary: "Construct bigrams for frequently occurring terms while indexing."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter?alt=com.azure.search.documents.indexes.models.TokenFilter&text=TokenFilter\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter.fromJson(com.azure.json.JsonReader)?alt=com.azure.search.documents.indexes.models.TokenFilter.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter.getName()?alt=com.azure.search.documents.indexes.models.TokenFilter.getName&text=getName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter.getOdataType()?alt=com.azure.search.documents.indexes.models.TokenFilter.getOdataType&text=getOdataType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter.toJson(com.azure.json.JsonWriter)?alt=com.azure.search.documents.indexes.models.TokenFilter.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **CommonGramTokenFilter**</br> extends <xref href=\"com.azure.search.documents.indexes.models.TokenFilter?alt=com.azure.search.documents.indexes.models.TokenFilter&text=TokenFilter\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.CommonGramTokenFilter(java.lang.String,java.util.List<java.lang.String>)"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.CommonGramTokenFilter(String name, List<String> commonWords)"
  name: "CommonGramTokenFilter(String name, List<String> commonWords)"
  nameWithType: "CommonGramTokenFilter.CommonGramTokenFilter(String name, List<String> commonWords)"
  summary: "Creates an instance of Common<wbr>Gram<wbr>Token<wbr>Filter class."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the commonWords value to set."
    name: "commonWords"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public CommonGramTokenFilter(String name, List<String> commonWords)"
  desc: "Creates an instance of CommonGramTokenFilter class."
methods:
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "CommonGramTokenFilter.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Common<wbr>Gram<wbr>Token<wbr>Filter from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CommonGramTokenFilter fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of CommonGramTokenFilter from the JsonReader."
  returns:
    description: "An instance of CommonGramTokenFilter if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.search.documents.indexes.models.CommonGramTokenFilter?alt=com.azure.search.documents.indexes.models.CommonGramTokenFilter&text=CommonGramTokenFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.getCommonWords()"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.getCommonWords()"
  name: "getCommonWords()"
  nameWithType: "CommonGramTokenFilter.getCommonWords()"
  summary: "Get the common<wbr>Words property: The set of common words."
  syntax: "public List<String> getCommonWords()"
  desc: "Get the commonWords property: The set of common words."
  returns:
    description: "the commonWords value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.getOdataType()"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.getOdataType()"
  name: "getOdataType()"
  nameWithType: "CommonGramTokenFilter.getOdataType()"
  summary: "Get the odata<wbr>Type property: A URI fragment specifying the type of token filter."
  overridden: "com.azure.search.documents.indexes.models.TokenFilter.getOdataType()"
  syntax: "public String getOdataType()"
  desc: "Get the odataType property: A URI fragment specifying the type of token filter."
  returns:
    description: "the odataType value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.isCaseIgnored()"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.isCaseIgnored()"
  name: "isCaseIgnored()"
  nameWithType: "CommonGramTokenFilter.isCaseIgnored()"
  summary: "Get the case<wbr>Ignored property: A value indicating whether common words matching will be case insensitive."
  syntax: "public Boolean isCaseIgnored()"
  desc: "Get the caseIgnored property: A value indicating whether common words matching will be case insensitive. Default is false."
  returns:
    description: "the caseIgnored value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.isQueryModeUsed()"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.isQueryModeUsed()"
  name: "isQueryModeUsed()"
  nameWithType: "CommonGramTokenFilter.isQueryModeUsed()"
  summary: "Get the query<wbr>Mode<wbr>Used property: A value that indicates whether the token filter is in query mode."
  syntax: "public Boolean isQueryModeUsed()"
  desc: "Get the queryModeUsed property: A value that indicates whether the token filter is in query mode. When in query mode, the token filter generates bigrams and then removes common words and single terms followed by a common word. Default is false."
  returns:
    description: "the queryModeUsed value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.setCaseIgnored(java.lang.Boolean)"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.setCaseIgnored(Boolean caseIgnored)"
  name: "setCaseIgnored(Boolean caseIgnored)"
  nameWithType: "CommonGramTokenFilter.setCaseIgnored(Boolean caseIgnored)"
  summary: "Set the case<wbr>Ignored property: A value indicating whether common words matching will be case insensitive."
  parameters:
  - description: "the caseIgnored value to set."
    name: "caseIgnored"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public CommonGramTokenFilter setCaseIgnored(Boolean caseIgnored)"
  desc: "Set the caseIgnored property: A value indicating whether common words matching will be case insensitive. Default is false."
  returns:
    description: "the CommonGramTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.CommonGramTokenFilter?alt=com.azure.search.documents.indexes.models.CommonGramTokenFilter&text=CommonGramTokenFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.setQueryModeUsed(java.lang.Boolean)"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.setQueryModeUsed(Boolean queryModeUsed)"
  name: "setQueryModeUsed(Boolean queryModeUsed)"
  nameWithType: "CommonGramTokenFilter.setQueryModeUsed(Boolean queryModeUsed)"
  summary: "Set the query<wbr>Mode<wbr>Used property: A value that indicates whether the token filter is in query mode."
  parameters:
  - description: "the queryModeUsed value to set."
    name: "queryModeUsed"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public CommonGramTokenFilter setQueryModeUsed(Boolean queryModeUsed)"
  desc: "Set the queryModeUsed property: A value that indicates whether the token filter is in query mode. When in query mode, the token filter generates bigrams and then removes common words and single terms followed by a common word. Default is false."
  returns:
    description: "the CommonGramTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.CommonGramTokenFilter?alt=com.azure.search.documents.indexes.models.CommonGramTokenFilter&text=CommonGramTokenFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.search.documents.indexes.models.CommonGramTokenFilter.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "CommonGramTokenFilter.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.search.documents.indexes.models.TokenFilter.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Construct bigrams for frequently occurring terms while indexing. Single terms are still indexed too, with bigrams overlaid. This token filter is implemented using Apache Lucene."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.8.0-beta.1
