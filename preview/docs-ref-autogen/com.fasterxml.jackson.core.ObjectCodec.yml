### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.ObjectCodec
  id: ObjectCodec
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core
  children:
  - com.fasterxml.jackson.core.ObjectCodec.<T>readTree(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  - com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  - com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  - com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  - com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  - com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  - com.fasterxml.jackson.core.ObjectCodec.<T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class<T>)
  - com.fasterxml.jackson.core.ObjectCodec.ObjectCodec()
  - com.fasterxml.jackson.core.ObjectCodec.createArrayNode()
  - com.fasterxml.jackson.core.ObjectCodec.createObjectNode()
  - com.fasterxml.jackson.core.ObjectCodec.getFactory()
  - com.fasterxml.jackson.core.ObjectCodec.getJsonFactory()
  - com.fasterxml.jackson.core.ObjectCodec.treeAsTokens(com.fasterxml.jackson.core.TreeNode)
  - com.fasterxml.jackson.core.ObjectCodec.version()
  - com.fasterxml.jackson.core.ObjectCodec.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)
  - com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  langs:
  - java
  name: ObjectCodec
  nameWithType: ObjectCodec
  fullName: com.fasterxml.jackson.core.ObjectCodec
  type: Class
  package: com.fasterxml.jackson.core
  summary: >-
    Abstract class that defines the interface that <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> and <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> use to serialize and deserialize regular Java objects (POJOs aka Beans).


    The standard implementation of this class is `com.fasterxml.jackson.databind.ObjectMapper`, defined in the "jackson-databind".
  syntax:
    content: public abstract class ObjectCodec extends TreeCodec implements Versioned
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.TreeCodec
  implements:
  - com.fasterxml.jackson.core.Versioned
  inheritedMembers:
  - com.fasterxml.jackson.core.TreeCodec.<T>readTree(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.TreeCodec.createArrayNode()
  - com.fasterxml.jackson.core.TreeCodec.createObjectNode()
  - com.fasterxml.jackson.core.TreeCodec.missingNode()
  - com.fasterxml.jackson.core.TreeCodec.nullNode()
  - com.fasterxml.jackson.core.TreeCodec.treeAsTokens(com.fasterxml.jackson.core.TreeNode)
  - com.fasterxml.jackson.core.TreeCodec.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readTree(com.fasterxml.jackson.core.JsonParser)
  id: <T>readTree(com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: <T>readTree(JsonParser p)
  nameWithType: ObjectCodec.<T>readTree(JsonParser p)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readTree(JsonParser p)
  overload: com.fasterxml.jackson.core.ObjectCodec.readTree*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method to deserialize JSON content as tree expressed using set of <xref uid="com.fasterxml.jackson.core.TreeNode" data-throw-if-not-resolved="false">TreeNode</xref> instances. Returns root of the resulting tree (where root can consist of just a single node if the current event is a value event, not container). Empty or whitespace documents return null.
  syntax:
    content: public abstract T <T>readTree(JsonParser p)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: T
      description: next tree from p, or null if empty.
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  id: <T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: <T>readValue(JsonParser p, ResolvedType valueType)
  nameWithType: ObjectCodec.<T>readValue(JsonParser p, ResolvedType valueType)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValue(JsonParser p, ResolvedType valueType)
  overload: com.fasterxml.jackson.core.ObjectCodec.readValue*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method to deserialize JSON content into a POJO, type specified with fully resolved type object (so it can be a generic type, including containers like <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> and <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>).
  syntax:
    content: public abstract T <T>readValue(JsonParser p, ResolvedType valueType)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueType
      type: com.fasterxml.jackson.core.type.ResolvedType
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  id: <T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: <T>readValue(JsonParser p, TypeReference<T> valueTypeRef)
  nameWithType: ObjectCodec.<T>readValue(JsonParser p, TypeReference<T> valueTypeRef)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValue(JsonParser p, TypeReference<T> valueTypeRef)
  overload: com.fasterxml.jackson.core.ObjectCodec.readValue*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method to deserialize JSON content into a Java type, reference to which is passed as argument. Type is passed using so-called "super type token" and specifically needs to be used if the root type is a parameterized (generic) container type.
  syntax:
    content: public abstract T <T>readValue(JsonParser p, TypeReference<T> valueTypeRef)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueTypeRef
      type: com.fasterxml.jackson.core.type.TypeReference<T>
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  id: <T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: <T>readValue(JsonParser p, Class<T> valueType)
  nameWithType: ObjectCodec.<T>readValue(JsonParser p, Class<T> valueType)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValue(JsonParser p, Class<T> valueType)
  overload: com.fasterxml.jackson.core.ObjectCodec.readValue*
  type: Method
  package: com.fasterxml.jackson.core
  summary: >-
    Method to deserialize JSON content into a non-container type (it can be an array type, however): typically a bean, array or a wrapper type (like <xref uid="java.lang.Boolean" data-throw-if-not-resolved="false">java.lang.Boolean</xref>).


    Note: this method should NOT be used if the result type is a container (<xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> or <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>. The reason is that due to type erasure, key and value types can not be introspected when using this method.
  syntax:
    content: public abstract T <T>readValue(JsonParser p, Class<T> valueType)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueType
      type: java.lang.Class<T>
    return:
      type: T
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  id: <T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: <T>readValues(JsonParser p, ResolvedType valueType)
  nameWithType: ObjectCodec.<T>readValues(JsonParser p, ResolvedType valueType)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValues(JsonParser p, ResolvedType valueType)
  overload: com.fasterxml.jackson.core.ObjectCodec.readValues*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method for reading sequence of Objects from parser stream, all with same specified value type.
  syntax:
    content: public abstract Iterator<T> <T>readValues(JsonParser p, ResolvedType valueType)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueType
      type: com.fasterxml.jackson.core.type.ResolvedType
    return:
      type: java.util.Iterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  id: <T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: <T>readValues(JsonParser p, TypeReference<T> valueTypeRef)
  nameWithType: ObjectCodec.<T>readValues(JsonParser p, TypeReference<T> valueTypeRef)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValues(JsonParser p, TypeReference<T> valueTypeRef)
  overload: com.fasterxml.jackson.core.ObjectCodec.readValues*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method for reading sequence of Objects from parser stream, all with same specified value type.
  syntax:
    content: public abstract Iterator<T> <T>readValues(JsonParser p, TypeReference<T> valueTypeRef)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueTypeRef
      type: com.fasterxml.jackson.core.type.TypeReference<T>
    return:
      type: java.util.Iterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  id: <T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: <T>readValues(JsonParser p, Class<T> valueType)
  nameWithType: ObjectCodec.<T>readValues(JsonParser p, Class<T> valueType)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValues(JsonParser p, Class<T> valueType)
  overload: com.fasterxml.jackson.core.ObjectCodec.readValues*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method for reading sequence of Objects from parser stream, all with same specified value type.
  syntax:
    content: public abstract Iterator<T> <T>readValues(JsonParser p, Class<T> valueType)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: valueType
      type: java.lang.Class<T>
    return:
      type: java.util.Iterator<T>
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.ObjectCodec.<T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class<T>)
  id: <T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class<T>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: <T>treeToValue(TreeNode n, Class<T> valueType)
  nameWithType: ObjectCodec.<T>treeToValue(TreeNode n, Class<T> valueType)
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>treeToValue(TreeNode n, Class<T> valueType)
  overload: com.fasterxml.jackson.core.ObjectCodec.treeToValue*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Convenience method for converting given JSON tree into instance of specified value type. This is equivalent to first constructing a <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> to iterate over contents of the tree, and using that parser for data binding.
  syntax:
    content: public abstract T <T>treeToValue(TreeNode n, Class<T> valueType)
    parameters:
    - id: n
      type: com.fasterxml.jackson.core.TreeNode
    - id: valueType
      type: java.lang.Class<T>
    return:
      type: T
  exceptions:
  - type: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.core.ObjectCodec.ObjectCodec()
  id: ObjectCodec()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: ObjectCodec()
  nameWithType: ObjectCodec.ObjectCodec()
  fullName: com.fasterxml.jackson.core.ObjectCodec.ObjectCodec()
  overload: com.fasterxml.jackson.core.ObjectCodec.ObjectCodec*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: protected ObjectCodec()
- uid: com.fasterxml.jackson.core.ObjectCodec.createArrayNode()
  id: createArrayNode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: createArrayNode()
  nameWithType: ObjectCodec.createArrayNode()
  fullName: com.fasterxml.jackson.core.ObjectCodec.createArrayNode()
  overload: com.fasterxml.jackson.core.ObjectCodec.createArrayNode*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method for construct root level Array nodes for Tree Model instances.
  syntax:
    content: public abstract TreeNode createArrayNode()
    return:
      type: com.fasterxml.jackson.core.TreeNode
- uid: com.fasterxml.jackson.core.ObjectCodec.createObjectNode()
  id: createObjectNode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: createObjectNode()
  nameWithType: ObjectCodec.createObjectNode()
  fullName: com.fasterxml.jackson.core.ObjectCodec.createObjectNode()
  overload: com.fasterxml.jackson.core.ObjectCodec.createObjectNode*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method for construct root level Object nodes for Tree Model instances.
  syntax:
    content: public abstract TreeNode createObjectNode()
    return:
      type: com.fasterxml.jackson.core.TreeNode
- uid: com.fasterxml.jackson.core.ObjectCodec.getFactory()
  id: getFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: getFactory()
  nameWithType: ObjectCodec.getFactory()
  fullName: com.fasterxml.jackson.core.ObjectCodec.getFactory()
  overload: com.fasterxml.jackson.core.ObjectCodec.getFactory*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Accessor for finding underlying data format factory (<xref uid="com.fasterxml.jackson.core.JsonFactory" data-throw-if-not-resolved="false">JsonFactory</xref>) codec will use for data binding.
  syntax:
    content: public JsonFactory getFactory()
    return:
      type: com.fasterxml.jackson.core.JsonFactory
- uid: com.fasterxml.jackson.core.ObjectCodec.getJsonFactory()
  id: getJsonFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: getJsonFactory()
  nameWithType: ObjectCodec.getJsonFactory()
  fullName: com.fasterxml.jackson.core.ObjectCodec.getJsonFactory()
  overload: com.fasterxml.jackson.core.ObjectCodec.getJsonFactory*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public JsonFactory getJsonFactory()
    return:
      type: com.fasterxml.jackson.core.JsonFactory
- uid: com.fasterxml.jackson.core.ObjectCodec.treeAsTokens(com.fasterxml.jackson.core.TreeNode)
  id: treeAsTokens(com.fasterxml.jackson.core.TreeNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: treeAsTokens(TreeNode n)
  nameWithType: ObjectCodec.treeAsTokens(TreeNode n)
  fullName: com.fasterxml.jackson.core.ObjectCodec.treeAsTokens(TreeNode n)
  overload: com.fasterxml.jackson.core.ObjectCodec.treeAsTokens*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method for constructing a <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> for reading contents of a JSON tree, as if it was external serialized JSON content.
  syntax:
    content: public abstract JsonParser treeAsTokens(TreeNode n)
    parameters:
    - id: n
      type: com.fasterxml.jackson.core.TreeNode
    return:
      type: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.core.ObjectCodec.version()
  id: version()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: version()
  nameWithType: ObjectCodec.version()
  fullName: com.fasterxml.jackson.core.ObjectCodec.version()
  overload: com.fasterxml.jackson.core.ObjectCodec.version*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method called to detect version of the component that implements this interface; returned version should never be null, but may return specific "not available" instance (see <xref uid="com.fasterxml.jackson.core.Version" data-throw-if-not-resolved="false">Version</xref> for details).
  syntax:
    content: public abstract Version version()
    return:
      type: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.core.ObjectCodec.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)
  id: writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: writeTree(JsonGenerator gen, TreeNode tree)
  nameWithType: ObjectCodec.writeTree(JsonGenerator gen, TreeNode tree)
  fullName: com.fasterxml.jackson.core.ObjectCodec.writeTree(JsonGenerator gen, TreeNode tree)
  overload: com.fasterxml.jackson.core.ObjectCodec.writeTree*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public abstract void writeTree(JsonGenerator gen, TreeNode tree)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: tree
      type: com.fasterxml.jackson.core.TreeNode
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  id: writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.ObjectCodec
  langs:
  - java
  name: writeValue(JsonGenerator gen, Object value)
  nameWithType: ObjectCodec.writeValue(JsonGenerator gen, Object value)
  fullName: com.fasterxml.jackson.core.ObjectCodec.writeValue(JsonGenerator gen, Object value)
  overload: com.fasterxml.jackson.core.ObjectCodec.writeValue*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method to serialize given Java Object, using generator provided.
  syntax:
    content: public abstract void writeValue(JsonGenerator gen, Object value)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: value
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.core.ObjectCodec.ObjectCodec*
  name: ObjectCodec
  nameWithType: ObjectCodec.ObjectCodec
  fullName: com.fasterxml.jackson.core.ObjectCodec.ObjectCodec
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Version
  name: Version
  nameWithType: Version
  fullName: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.core.ObjectCodec.version*
  name: version
  nameWithType: ObjectCodec.version
  fullName: com.fasterxml.jackson.core.ObjectCodec.version
  package: com.fasterxml.jackson.core
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.core.ObjectCodec.readValue*
  name: <T>readValue
  nameWithType: ObjectCodec.<T>readValue
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValue
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.type.TypeReference<T>
  spec.java:
  - uid: com.fasterxml.jackson.core.type.TypeReference
    name: TypeReference
    fullName: com.fasterxml.jackson.core.type.TypeReference
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.type.ResolvedType
  name: ResolvedType
  nameWithType: ResolvedType
  fullName: com.fasterxml.jackson.core.type.ResolvedType
- uid: java.util.Iterator<T>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.ObjectCodec.readValues*
  name: <T>readValues
  nameWithType: ObjectCodec.<T>readValues
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readValues
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.core.ObjectCodec.writeValue*
  name: writeValue
  nameWithType: ObjectCodec.writeValue
  fullName: com.fasterxml.jackson.core.ObjectCodec.writeValue
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.ObjectCodec.readTree*
  name: <T>readTree
  nameWithType: ObjectCodec.<T>readTree
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>readTree
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.TreeNode
  name: TreeNode
  nameWithType: TreeNode
  fullName: com.fasterxml.jackson.core.TreeNode
- uid: com.fasterxml.jackson.core.ObjectCodec.writeTree*
  name: writeTree
  nameWithType: ObjectCodec.writeTree
  fullName: com.fasterxml.jackson.core.ObjectCodec.writeTree
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.ObjectCodec.createObjectNode*
  name: createObjectNode
  nameWithType: ObjectCodec.createObjectNode
  fullName: com.fasterxml.jackson.core.ObjectCodec.createObjectNode
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.ObjectCodec.createArrayNode*
  name: createArrayNode
  nameWithType: ObjectCodec.createArrayNode
  fullName: com.fasterxml.jackson.core.ObjectCodec.createArrayNode
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.ObjectCodec.treeAsTokens*
  name: treeAsTokens
  nameWithType: ObjectCodec.treeAsTokens
  fullName: com.fasterxml.jackson.core.ObjectCodec.treeAsTokens
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonProcessingException
  name: JsonProcessingException
  nameWithType: JsonProcessingException
  fullName: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.core.ObjectCodec.treeToValue*
  name: <T>treeToValue
  nameWithType: ObjectCodec.<T>treeToValue
  fullName: com.fasterxml.jackson.core.ObjectCodec.<T>treeToValue
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonFactory
  name: JsonFactory
  nameWithType: JsonFactory
  fullName: com.fasterxml.jackson.core.JsonFactory
- uid: com.fasterxml.jackson.core.ObjectCodec.getJsonFactory*
  name: getJsonFactory
  nameWithType: ObjectCodec.getJsonFactory
  fullName: com.fasterxml.jackson.core.ObjectCodec.getJsonFactory
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.ObjectCodec.getFactory*
  name: getFactory
  nameWithType: ObjectCodec.getFactory
  fullName: com.fasterxml.jackson.core.ObjectCodec.getFactory
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.TreeCodec
  name: TreeCodec
  nameWithType: TreeCodec
  fullName: com.fasterxml.jackson.core.TreeCodec
- uid: com.fasterxml.jackson.core.Versioned
  name: Versioned
  nameWithType: Versioned
  fullName: com.fasterxml.jackson.core.Versioned
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.core.TreeCodec.<T>readTree(com.fasterxml.jackson.core.JsonParser)
  name: TreeCodec.<T>readTree(JsonParser)
  nameWithType: TreeCodec.<T>readTree(JsonParser)
  fullName: com.fasterxml.jackson.core.TreeCodec.<T>readTree(com.fasterxml.jackson.core.JsonParser)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.core.TreeCodec.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)
  name: TreeCodec.writeTree(JsonGenerator,TreeNode)
  nameWithType: TreeCodec.writeTree(JsonGenerator,TreeNode)
  fullName: com.fasterxml.jackson.core.TreeCodec.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)
- uid: com.fasterxml.jackson.core.TreeCodec.treeAsTokens(com.fasterxml.jackson.core.TreeNode)
  name: TreeCodec.treeAsTokens(TreeNode)
  nameWithType: TreeCodec.treeAsTokens(TreeNode)
  fullName: com.fasterxml.jackson.core.TreeCodec.treeAsTokens(com.fasterxml.jackson.core.TreeNode)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.core.TreeCodec.nullNode()
  name: TreeCodec.nullNode()
  nameWithType: TreeCodec.nullNode()
  fullName: com.fasterxml.jackson.core.TreeCodec.nullNode()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.core.TreeCodec.createObjectNode()
  name: TreeCodec.createObjectNode()
  nameWithType: TreeCodec.createObjectNode()
  fullName: com.fasterxml.jackson.core.TreeCodec.createObjectNode()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.TreeCodec.createArrayNode()
  name: TreeCodec.createArrayNode()
  nameWithType: TreeCodec.createArrayNode()
  fullName: com.fasterxml.jackson.core.TreeCodec.createArrayNode()
- uid: com.fasterxml.jackson.core.TreeCodec.missingNode()
  name: TreeCodec.missingNode()
  nameWithType: TreeCodec.missingNode()
  fullName: com.fasterxml.jackson.core.TreeCodec.missingNode()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.fasterxml.jackson.core.type.TypeReference
  name: TypeReference
  nameWithType: TypeReference
  fullName: com.fasterxml.jackson.core.type.TypeReference
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: com.fasterxml.jackson.core.TreeCodec.
  name: TreeCodec.
  nameWithType: TreeCodec.
  fullName: com.fasterxml.jackson.core.TreeCodec.
- uid: T>readTree(com.fasterxml.jackson.core.JsonParser)
  name: T>readTree(JsonParser)
  nameWithType: T>readTree(JsonParser)
  fullName: T>readTree(com.fasterxml.jackson.core.JsonParser)
