### YamlMime:JavaMember
uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.buildAsyncClient*"
fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.buildAsyncClient"
name: "buildAsyncClient"
nameWithType: "SchemaRegistryClientBuilder.buildAsyncClient"
members:
- uid: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.buildAsyncClient()"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClientBuilder.buildAsyncClient()"
  name: "buildAsyncClient()"
  nameWithType: "SchemaRegistryClientBuilder.buildAsyncClient()"
  summary: "Creates a <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> based on options set in the builder. Every time `buildClient()` is called a new instance of <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> is created. If <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"pipeline\"></xref> is set, then all HTTP pipeline related settings are ignored."
  syntax: "public SchemaRegistryAsyncClient buildAsyncClient()"
  returns:
    description: "A <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> with the options set from the builder."
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient?alt=com.azure.data.schemaregistry.SchemaRegistryAsyncClient&text=SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.data.schemaregistry"
artifact: com.azure:azure-data-schemaregistry:1.0.0-beta.4
