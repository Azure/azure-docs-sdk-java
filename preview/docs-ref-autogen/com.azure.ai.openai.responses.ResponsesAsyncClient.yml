### YamlMime:JavaType
uid: "com.azure.ai.openai.responses.ResponsesAsyncClient"
fullName: "com.azure.ai.openai.responses.ResponsesAsyncClient"
name: "ResponsesAsyncClient"
nameWithType: "ResponsesAsyncClient"
summary: "Initializes a new instance of the asynchronous Responses<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ResponsesAsyncClient**"
methods:
- uid: "com.azure.ai.openai.responses.ResponsesAsyncClient.createResponse(com.azure.ai.openai.responses.models.CreateResponsesRequest)"
  fullName: "com.azure.ai.openai.responses.ResponsesAsyncClient.createResponse(CreateResponsesRequest requestBody)"
  name: "createResponse(CreateResponsesRequest requestBody)"
  nameWithType: "ResponsesAsyncClient.createResponse(CreateResponsesRequest requestBody)"
  summary: "Creates a model response."
  parameters:
  - description: "The requestBody parameter."
    name: "requestBody"
    type: "<xref href=\"com.azure.ai.openai.responses.models.CreateResponsesRequest?alt=com.azure.ai.openai.responses.models.CreateResponsesRequest&text=CreateResponsesRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ResponsesResponse> createResponse(CreateResponsesRequest requestBody)"
  desc: "Creates a model response."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.openai.responses.models.ResponsesResponse?alt=com.azure.ai.openai.responses.models.ResponsesResponse&text=ResponsesResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.responses.ResponsesAsyncClient.createResponse(com.azure.ai.openai.responses.models.CreateResponsesRequest,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.responses.ResponsesAsyncClient.createResponse(CreateResponsesRequest requestBody, RequestOptions requestOptions)"
  name: "createResponse(CreateResponsesRequest requestBody, RequestOptions requestOptions)"
  nameWithType: "ResponsesAsyncClient.createResponse(CreateResponsesRequest requestBody, RequestOptions requestOptions)"
  summary: "Creates a model response."
  parameters:
  - description: "The requestBody parameter."
    name: "requestBody"
    type: "<xref href=\"com.azure.ai.openai.responses.models.CreateResponsesRequest?alt=com.azure.ai.openai.responses.models.CreateResponsesRequest&text=CreateResponsesRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ResponsesResponse> createResponse(CreateResponsesRequest requestBody, RequestOptions requestOptions)"
  desc: "Creates a model response."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.openai.responses.models.ResponsesResponse?alt=com.azure.ai.openai.responses.models.ResponsesResponse&text=ResponsesResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.responses.ResponsesAsyncClient.createResponseStream(com.azure.ai.openai.responses.models.CreateResponsesRequest)"
  fullName: "com.azure.ai.openai.responses.ResponsesAsyncClient.createResponseStream(CreateResponsesRequest requestBody)"
  name: "createResponseStream(CreateResponsesRequest requestBody)"
  nameWithType: "ResponsesAsyncClient.createResponseStream(CreateResponsesRequest requestBody)"
  summary: "Creates a model response."
  parameters:
  - description: "The requestBody parameter."
    name: "requestBody"
    type: "<xref href=\"com.azure.ai.openai.responses.models.CreateResponsesRequest?alt=com.azure.ai.openai.responses.models.CreateResponsesRequest&text=CreateResponsesRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Flux<ResponsesStreamEvent> createResponseStream(CreateResponsesRequest requestBody)"
  desc: "Creates a model response."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"com.azure.ai.openai.responses.models.ResponsesStreamEvent?alt=com.azure.ai.openai.responses.models.ResponsesStreamEvent&text=ResponsesStreamEvent\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.responses.ResponsesAsyncClient.createResponseStream(com.azure.ai.openai.responses.models.CreateResponsesRequest,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.responses.ResponsesAsyncClient.createResponseStream(CreateResponsesRequest requestBody, RequestOptions requestOptions)"
  name: "createResponseStream(CreateResponsesRequest requestBody, RequestOptions requestOptions)"
  nameWithType: "ResponsesAsyncClient.createResponseStream(CreateResponsesRequest requestBody, RequestOptions requestOptions)"
  summary: "Creates a model response."
  parameters:
  - description: "The requestBody parameter."
    name: "requestBody"
    type: "<xref href=\"com.azure.ai.openai.responses.models.CreateResponsesRequest?alt=com.azure.ai.openai.responses.models.CreateResponsesRequest&text=CreateResponsesRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Flux<ResponsesStreamEvent> createResponseStream(CreateResponsesRequest requestBody, RequestOptions requestOptions)"
  desc: "Creates a model response."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"com.azure.ai.openai.responses.models.ResponsesStreamEvent?alt=com.azure.ai.openai.responses.models.ResponsesStreamEvent&text=ResponsesStreamEvent\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.responses.ResponsesAsyncClient.deleteResponse(java.lang.String)"
  fullName: "com.azure.ai.openai.responses.ResponsesAsyncClient.deleteResponse(String responseId)"
  name: "deleteResponse(String responseId)"
  nameWithType: "ResponsesAsyncClient.deleteResponse(String responseId)"
  summary: "Deletes a response by ID."
  parameters:
  - description: "The responseId parameter."
    name: "responseId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<DeleteResponseResponse> deleteResponse(String responseId)"
  desc: "Deletes a response by ID."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.openai.responses.models.DeleteResponseResponse?alt=com.azure.ai.openai.responses.models.DeleteResponseResponse&text=DeleteResponseResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.responses.ResponsesAsyncClient.deleteResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.openai.responses.ResponsesAsyncClient.deleteResponse(String responseId, RequestOptions requestOptions)"
  name: "deleteResponse(String responseId, RequestOptions requestOptions)"
  nameWithType: "ResponsesAsyncClient.deleteResponse(String responseId, RequestOptions requestOptions)"
  summary: "Deletes a response by ID."
  parameters:
  - description: "The responseId parameter."
    name: "responseId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<DeleteResponseResponse> deleteResponse(String responseId, RequestOptions requestOptions)"
  desc: "Deletes a response by ID."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.openai.responses.models.DeleteResponseResponse?alt=com.azure.ai.openai.responses.models.DeleteResponseResponse&text=DeleteResponseResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.responses.ResponsesAsyncClient.getResponse(java.lang.String)"
  fullName: "com.azure.ai.openai.responses.ResponsesAsyncClient.getResponse(String responseId)"
  name: "getResponse(String responseId)"
  nameWithType: "ResponsesAsyncClient.getResponse(String responseId)"
  summary: "Retrieves a model response with the given ID."
  parameters:
  - description: "The ID of the response to retrieve."
    name: "responseId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<ResponsesResponse> getResponse(String responseId)"
  desc: "Retrieves a model response with the given ID."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.openai.responses.models.ResponsesResponse?alt=com.azure.ai.openai.responses.models.ResponsesResponse&text=ResponsesResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.responses.ResponsesAsyncClient.getResponse(java.lang.String,java.util.List<com.azure.ai.openai.responses.models.CreateResponsesRequestIncludable>)"
  fullName: "com.azure.ai.openai.responses.ResponsesAsyncClient.getResponse(String responseId, List<CreateResponsesRequestIncludable> includables)"
  name: "getResponse(String responseId, List<CreateResponsesRequestIncludable> includables)"
  nameWithType: "ResponsesAsyncClient.getResponse(String responseId, List<CreateResponsesRequestIncludable> includables)"
  summary: "Retrieves a model response with the given ID."
  parameters:
  - description: "The ID of the response to retrieve."
    name: "responseId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The includables parameter."
    name: "includables"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.openai.responses.models.CreateResponsesRequestIncludable?alt=com.azure.ai.openai.responses.models.CreateResponsesRequestIncludable&text=CreateResponsesRequestIncludable\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<ResponsesResponse> getResponse(String responseId, List<CreateResponsesRequestIncludable> includables)"
  desc: "Retrieves a model response with the given ID."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.openai.responses.models.ResponsesResponse?alt=com.azure.ai.openai.responses.models.ResponsesResponse&text=ResponsesResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.responses.ResponsesAsyncClient.listInputItems(java.lang.String,java.lang.Integer,com.azure.ai.openai.responses.models.ListInputItemsRequestOrder)"
  fullName: "com.azure.ai.openai.responses.ResponsesAsyncClient.listInputItems(String responseId, Integer limit, ListInputItemsRequestOrder order)"
  name: "listInputItems(String responseId, Integer limit, ListInputItemsRequestOrder order)"
  nameWithType: "ResponsesAsyncClient.listInputItems(String responseId, Integer limit, ListInputItemsRequestOrder order)"
  summary: "Returns a list of input items for a given response."
  parameters:
  - description: "The ID of the response to retrieve."
    name: "responseId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the\n default is 20."
    name: "limit"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`\n for descending order."
    name: "order"
    type: "<xref href=\"com.azure.ai.openai.responses.models.ListInputItemsRequestOrder?alt=com.azure.ai.openai.responses.models.ListInputItemsRequestOrder&text=ListInputItemsRequestOrder\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<ResponsesItem> listInputItems(String responseId, Integer limit, ListInputItemsRequestOrder order)"
  desc: "Returns a list of input items for a given response."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.responses.models.ResponsesItem?alt=com.azure.ai.openai.responses.models.ResponsesItem&text=ResponsesItem\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ResponsesClient type."
metadata: {}
package: "com.azure.ai.openai.responses"
artifact: com.azure:azure-ai-openai:1.0.0-beta.15
