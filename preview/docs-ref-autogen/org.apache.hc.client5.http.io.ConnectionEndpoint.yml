### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.io.ConnectionEndpoint
  id: ConnectionEndpoint
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.io
  children:
  - org.apache.hc.client5.http.io.ConnectionEndpoint.ConnectionEndpoint()
  - org.apache.hc.client5.http.io.ConnectionEndpoint.execute(java.lang.String,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.impl.io.HttpRequestExecutor,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.io.ConnectionEndpoint.isConnected()
  - org.apache.hc.client5.http.io.ConnectionEndpoint.setSocketTimeout(org.apache.hc.core5.util.Timeout)
  langs:
  - java
  name: ConnectionEndpoint
  nameWithType: ConnectionEndpoint
  fullName: org.apache.hc.client5.http.io.ConnectionEndpoint
  type: Class
  package: org.apache.hc.client5.http.io
  summary: >-
    Client endpoint leased from a connection manager. Client points can be used to execute HTTP requests.


    Once the endpoint is no longer needed it MUST be released with <xref uid="org.apache.hc.client5.http.io.ConnectionEndpoint.close*" data-throw-if-not-resolved="false">#close(org.apache.hc.core5.io.CloseMode)</xref> )\}.
  syntax:
    content: public abstract class ConnectionEndpoint implements ModalCloseable
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.core5.io.ModalCloseable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.io.ConnectionEndpoint.ConnectionEndpoint()
  id: ConnectionEndpoint()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.io.ConnectionEndpoint
  langs:
  - java
  name: ConnectionEndpoint()
  nameWithType: ConnectionEndpoint.ConnectionEndpoint()
  fullName: org.apache.hc.client5.http.io.ConnectionEndpoint.ConnectionEndpoint()
  overload: org.apache.hc.client5.http.io.ConnectionEndpoint.ConnectionEndpoint*
  type: Constructor
  package: org.apache.hc.client5.http.io
  syntax:
    content: public ConnectionEndpoint()
- uid: org.apache.hc.client5.http.io.ConnectionEndpoint.execute(java.lang.String,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.impl.io.HttpRequestExecutor,org.apache.hc.core5.http.protocol.HttpContext)
  id: execute(java.lang.String,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.impl.io.HttpRequestExecutor,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.io.ConnectionEndpoint
  langs:
  - java
  name: execute(String id, ClassicHttpRequest request, HttpRequestExecutor executor, HttpContext context)
  nameWithType: ConnectionEndpoint.execute(String id, ClassicHttpRequest request, HttpRequestExecutor executor, HttpContext context)
  fullName: org.apache.hc.client5.http.io.ConnectionEndpoint.execute(String id, ClassicHttpRequest request, HttpRequestExecutor executor, HttpContext context)
  overload: org.apache.hc.client5.http.io.ConnectionEndpoint.execute*
  type: Method
  package: org.apache.hc.client5.http.io
  summary: >-
    Executes HTTP request using the provided request executor.


    Once the endpoint is no longer needed it MUST be released with <xref uid="org.apache.hc.client5.http.io.ConnectionEndpoint.close*" data-throw-if-not-resolved="false">#close(org.apache.hc.core5.io.CloseMode)</xref>.
  syntax:
    content: public abstract ClassicHttpResponse execute(String id, ClassicHttpRequest request, HttpRequestExecutor executor, HttpContext context)
    parameters:
    - id: id
      type: java.lang.String
      description: unique operation ID or <code>null</code>.
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
      description: the request message.
    - id: executor
      type: org.apache.hc.core5.http.impl.io.HttpRequestExecutor
      description: the request executor.
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the execution context.
    return:
      type: org.apache.hc.core5.http.ClassicHttpResponse
  exceptions:
  - type: java.io.IOException
  - type: org.apache.hc.core5.http.HttpException
- uid: org.apache.hc.client5.http.io.ConnectionEndpoint.isConnected()
  id: isConnected()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.io.ConnectionEndpoint
  langs:
  - java
  name: isConnected()
  nameWithType: ConnectionEndpoint.isConnected()
  fullName: org.apache.hc.client5.http.io.ConnectionEndpoint.isConnected()
  overload: org.apache.hc.client5.http.io.ConnectionEndpoint.isConnected*
  type: Method
  package: org.apache.hc.client5.http.io
  summary: Determines if the connection to the remote endpoint is still open and valid.
  syntax:
    content: public abstract boolean isConnected()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.io.ConnectionEndpoint.setSocketTimeout(org.apache.hc.core5.util.Timeout)
  id: setSocketTimeout(org.apache.hc.core5.util.Timeout)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.io.ConnectionEndpoint
  langs:
  - java
  name: setSocketTimeout(Timeout timeout)
  nameWithType: ConnectionEndpoint.setSocketTimeout(Timeout timeout)
  fullName: org.apache.hc.client5.http.io.ConnectionEndpoint.setSocketTimeout(Timeout timeout)
  overload: org.apache.hc.client5.http.io.ConnectionEndpoint.setSocketTimeout*
  type: Method
  package: org.apache.hc.client5.http.io
  summary: Sets the socket timeout value.
  syntax:
    content: public abstract void setSocketTimeout(Timeout timeout)
    parameters:
    - id: timeout
      type: org.apache.hc.core5.util.Timeout
      description: timeout value
references:
- uid: org.apache.hc.client5.http.io.ConnectionEndpoint.ConnectionEndpoint*
  name: ConnectionEndpoint
  nameWithType: ConnectionEndpoint.ConnectionEndpoint
  fullName: org.apache.hc.client5.http.io.ConnectionEndpoint.ConnectionEndpoint
  package: org.apache.hc.client5.http.io
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.HttpException
  name: HttpException
  nameWithType: HttpException
  fullName: org.apache.hc.core5.http.HttpException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.core5.http.ClassicHttpRequest
  name: ClassicHttpRequest
  nameWithType: ClassicHttpRequest
  fullName: org.apache.hc.core5.http.ClassicHttpRequest
- uid: org.apache.hc.core5.http.impl.io.HttpRequestExecutor
  name: HttpRequestExecutor
  nameWithType: HttpRequestExecutor
  fullName: org.apache.hc.core5.http.impl.io.HttpRequestExecutor
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.core5.http.ClassicHttpResponse
  name: ClassicHttpResponse
  nameWithType: ClassicHttpResponse
  fullName: org.apache.hc.core5.http.ClassicHttpResponse
- uid: org.apache.hc.client5.http.io.ConnectionEndpoint.execute*
  name: execute
  nameWithType: ConnectionEndpoint.execute
  fullName: org.apache.hc.client5.http.io.ConnectionEndpoint.execute
  package: org.apache.hc.client5.http.io
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.io.ConnectionEndpoint.isConnected*
  name: isConnected
  nameWithType: ConnectionEndpoint.isConnected
  fullName: org.apache.hc.client5.http.io.ConnectionEndpoint.isConnected
  package: org.apache.hc.client5.http.io
- uid: org.apache.hc.core5.util.Timeout
  name: Timeout
  nameWithType: Timeout
  fullName: org.apache.hc.core5.util.Timeout
- uid: org.apache.hc.client5.http.io.ConnectionEndpoint.setSocketTimeout*
  name: setSocketTimeout
  nameWithType: ConnectionEndpoint.setSocketTimeout
  fullName: org.apache.hc.client5.http.io.ConnectionEndpoint.setSocketTimeout
  package: org.apache.hc.client5.http.io
- uid: org.apache.hc.core5.io.ModalCloseable
  name: ModalCloseable
  nameWithType: ModalCloseable
  fullName: org.apache.hc.core5.io.ModalCloseable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
