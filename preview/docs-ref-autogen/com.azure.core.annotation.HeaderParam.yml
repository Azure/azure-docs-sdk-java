### YamlMime:ManagedReference
items:
- uid: com.azure.core.annotation.HeaderParam
  id: HeaderParam
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.annotation
  children:
  - com.azure.core.annotation.HeaderParam.value()
  langs:
  - java
  name: HeaderParam
  nameWithType: HeaderParam
  fullName: com.azure.core.annotation.HeaderParam
  type: Interface
  package: com.azure.core.annotation
  summary: >-
    Replaces the header with the value of its target. The value specified here replaces headers specified statically in the <xref uid="com.azure.core.annotation.Headers" data-throw-if-not-resolved="false">Headers</xref>. If the parameter this annotation is attached to is a Map type, then this will be treated as a header collection. In that case each of the entries in the argument's map will be individual header values that use the value of this annotation as a prefix to their key/header name.


    **Example 1:**


    ```java

    @PUT("{functionId}")
     Mono> createOrReplace(@PathParam("functionId", encoded = true) String
     functionId, @BodyParam FunctionInner function, @HeaderParam("If-Match") String ifMatch);
    ```


    "If-Match: user passed value" will show up as one of the headers.


    **Example 2:**


    ```java

    @GET("subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces")
     Mono> list(@Path("subscriptionId") String subscriptionId, @Header
     ("accept-language") String acceptLanguage, @Header("User-Agent") String userAgent);
    ```


    "accept-language" generated by the HTTP client will be overwritten by the user passed value.


    **Example 3:**


    ```java

    @GET("subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces")
     Mono> list(@Path("subscriptionId") String subscriptionId, @Header
     ("Authorization") String token);
    ```


    The token parameter will replace the effect of any credentials in the HTTP pipeline.


    **Example 4:**


    ```java

    @PUT("{containerName}/{blob}")
     @ExpectedResponses({200})
     Mono> setMetadata(@HostParam("url") String url, @QueryParam
     ("timeout") Integer timeout, @HeaderParam("x-ms-meta-") Map metadata, @HeaderParam
     ("x-ms-lease-id") String leaseId, @HeaderParam("If-Modified-Since") String ifModifiedSince, @HeaderParam
     ("If-Unmodified-Since") String ifUnmodifiedSince, @HeaderParam("If-Match") String ifMatches, @HeaderParam
     ("If-None-Match") String ifNoneMatch, @HeaderParam("x-ms-version") String version, @HeaderParam
     ("x-ms-client-request-id") String requestId, @QueryParam("comp") String comp);
    ```


    The metadata parameter will be expanded out so that each entry becomes "x-ms-meta-: ".
  syntax:
    content: public interface HeaderParam implements Annotation
  implements:
  - java.lang.annotation.Annotation
- uid: com.azure.core.annotation.HeaderParam.value()
  id: value()
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.annotation.HeaderParam
  langs:
  - java
  name: value()
  nameWithType: HeaderParam.value()
  fullName: com.azure.core.annotation.HeaderParam.value()
  overload: com.azure.core.annotation.HeaderParam.value*
  type: Method
  package: com.azure.core.annotation
  summary: The name of the variable in the endpoint uri template which will be replaced with the value of the parameter annotated with this annotation.
  syntax:
    content: public abstract String value()
    return:
      type: java.lang.String
      description: >-
        The name of the variable in the endpoint uri template which will be replaced with the
             value of the parameter annotated with this annotation.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.annotation.HeaderParam.value*
  name: value
  nameWithType: HeaderParam.value
  fullName: com.azure.core.annotation.HeaderParam.value
  package: com.azure.core.annotation
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
