### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.concurrent.ComplexCancellable
  id: ComplexCancellable
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent
  children:
  - org.apache.hc.core5.concurrent.ComplexCancellable.ComplexCancellable()
  - org.apache.hc.core5.concurrent.ComplexCancellable.cancel()
  - org.apache.hc.core5.concurrent.ComplexCancellable.isCancelled()
  - org.apache.hc.core5.concurrent.ComplexCancellable.setDependency(org.apache.hc.core5.concurrent.Cancellable)
  langs:
  - java
  name: ComplexCancellable
  nameWithType: ComplexCancellable
  fullName: org.apache.hc.core5.concurrent.ComplexCancellable
  type: Class
  package: org.apache.hc.core5.concurrent
  summary: <xref uid="org.apache.hc.core5.concurrent.Cancellable" data-throw-if-not-resolved="false">Cancellable</xref> that has a dependency on another <xref uid="org.apache.hc.core5.concurrent.Cancellable" data-throw-if-not-resolved="false">Cancellable</xref> process or operation. Dependent process or operation will get cancelled if this <xref uid="org.apache.hc.core5.concurrent.Cancellable" data-throw-if-not-resolved="false">Cancellable</xref> itself is cancelled.
  syntax:
    content: public final class ComplexCancellable implements CancellableDependency
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.core5.concurrent.CancellableDependency
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.concurrent.ComplexCancellable.ComplexCancellable()
  id: ComplexCancellable()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent.ComplexCancellable
  langs:
  - java
  name: ComplexCancellable()
  nameWithType: ComplexCancellable.ComplexCancellable()
  fullName: org.apache.hc.core5.concurrent.ComplexCancellable.ComplexCancellable()
  overload: org.apache.hc.core5.concurrent.ComplexCancellable.ComplexCancellable*
  type: Constructor
  package: org.apache.hc.core5.concurrent
  syntax:
    content: public ComplexCancellable()
- uid: org.apache.hc.core5.concurrent.ComplexCancellable.cancel()
  id: cancel()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent.ComplexCancellable
  langs:
  - java
  name: cancel()
  nameWithType: ComplexCancellable.cancel()
  fullName: org.apache.hc.core5.concurrent.ComplexCancellable.cancel()
  overload: org.apache.hc.core5.concurrent.ComplexCancellable.cancel*
  type: Method
  package: org.apache.hc.core5.concurrent
  summary: Cancels the ongoing operation or process.
  syntax:
    content: public boolean cancel()
    return:
      type: boolean
- uid: org.apache.hc.core5.concurrent.ComplexCancellable.isCancelled()
  id: isCancelled()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent.ComplexCancellable
  langs:
  - java
  name: isCancelled()
  nameWithType: ComplexCancellable.isCancelled()
  fullName: org.apache.hc.core5.concurrent.ComplexCancellable.isCancelled()
  overload: org.apache.hc.core5.concurrent.ComplexCancellable.isCancelled*
  type: Method
  package: org.apache.hc.core5.concurrent
  summary: Determines whether the process or operation has been cancelled.
  syntax:
    content: public boolean isCancelled()
    return:
      type: boolean
- uid: org.apache.hc.core5.concurrent.ComplexCancellable.setDependency(org.apache.hc.core5.concurrent.Cancellable)
  id: setDependency(org.apache.hc.core5.concurrent.Cancellable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.concurrent.ComplexCancellable
  langs:
  - java
  name: setDependency(Cancellable dependency)
  nameWithType: ComplexCancellable.setDependency(Cancellable dependency)
  fullName: org.apache.hc.core5.concurrent.ComplexCancellable.setDependency(Cancellable dependency)
  overload: org.apache.hc.core5.concurrent.ComplexCancellable.setDependency*
  type: Method
  package: org.apache.hc.core5.concurrent
  summary: Sets <xref uid="org.apache.hc.core5.concurrent.Cancellable" data-throw-if-not-resolved="false">Cancellable</xref> dependency on another ongoing process or operation represented by <xref uid="org.apache.hc.core5.concurrent.Cancellable" data-throw-if-not-resolved="false">Cancellable</xref>.
  syntax:
    content: public void setDependency(Cancellable dependency)
    parameters:
    - id: dependency
      type: org.apache.hc.core5.concurrent.Cancellable
references:
- uid: org.apache.hc.core5.concurrent.ComplexCancellable.ComplexCancellable*
  name: ComplexCancellable
  nameWithType: ComplexCancellable.ComplexCancellable
  fullName: org.apache.hc.core5.concurrent.ComplexCancellable.ComplexCancellable
  package: org.apache.hc.core5.concurrent
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.concurrent.ComplexCancellable.isCancelled*
  name: isCancelled
  nameWithType: ComplexCancellable.isCancelled
  fullName: org.apache.hc.core5.concurrent.ComplexCancellable.isCancelled
  package: org.apache.hc.core5.concurrent
- uid: org.apache.hc.core5.concurrent.Cancellable
  name: Cancellable
  nameWithType: Cancellable
  fullName: org.apache.hc.core5.concurrent.Cancellable
- uid: org.apache.hc.core5.concurrent.ComplexCancellable.setDependency*
  name: setDependency
  nameWithType: ComplexCancellable.setDependency
  fullName: org.apache.hc.core5.concurrent.ComplexCancellable.setDependency
  package: org.apache.hc.core5.concurrent
- uid: org.apache.hc.core5.concurrent.ComplexCancellable.cancel*
  name: cancel
  nameWithType: ComplexCancellable.cancel
  fullName: org.apache.hc.core5.concurrent.ComplexCancellable.cancel
  package: org.apache.hc.core5.concurrent
- uid: org.apache.hc.core5.concurrent.CancellableDependency
  name: CancellableDependency
  nameWithType: CancellableDependency
  fullName: org.apache.hc.core5.concurrent.CancellableDependency
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
