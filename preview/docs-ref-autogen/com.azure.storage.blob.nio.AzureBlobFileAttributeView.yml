### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView
  id: AzureBlobFileAttributeView
  artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
  parent: com.azure.storage.blob.nio
  children:
  - com.azure.storage.blob.nio.AzureBlobFileAttributeView.name()
  - com.azure.storage.blob.nio.AzureBlobFileAttributeView.readAttributes()
  - com.azure.storage.blob.nio.AzureBlobFileAttributeView.setBlobHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  - com.azure.storage.blob.nio.AzureBlobFileAttributeView.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTier(com.azure.storage.blob.models.AccessTier)
  - com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)
  langs:
  - java
  name: AzureBlobFileAttributeView
  nameWithType: AzureBlobFileAttributeView
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView
  type: Class
  package: com.azure.storage.blob.nio
  summary: >-
    A file attribute view that provides a view of attributes specific to files stored as blobs in Azure Storage.


    All attributes are retrieved from the file system as a bulk operation.


    <xref uid="com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)" data-throw-if-not-resolved="false">#setTimes(FileTime, FileTime, FileTime)</xref> is not supported.
  syntax:
    content: public final class AzureBlobFileAttributeView implements BasicFileAttributeView
  inheritance:
  - java.lang.Object
  implements:
  - java.nio.file.attribute.BasicFileAttributeView
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.AzureBlobFileAttributeView(java.nio.file.Path)
  id: AzureBlobFileAttributeView(java.nio.file.Path)
  artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
  parent: com.azure.storage.blob.nio.AzureBlobFileAttributeView
  langs:
  - java
  name: AzureBlobFileAttributeView(Path path)
  nameWithType: AzureBlobFileAttributeView.AzureBlobFileAttributeView(Path path)
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.AzureBlobFileAttributeView(Path path)
  overload: com.azure.storage.blob.nio.AzureBlobFileAttributeView.AzureBlobFileAttributeView*
  type: Constructor
  package: com.azure.storage.blob.nio
  syntax:
    content: " AzureBlobFileAttributeView(Path path)"
    parameters:
    - id: path
      type: java.nio.file.Path
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.name()
  id: name()
  artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
  parent: com.azure.storage.blob.nio.AzureBlobFileAttributeView
  langs:
  - java
  name: name()
  nameWithType: AzureBlobFileAttributeView.name()
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.name()
  overload: com.azure.storage.blob.nio.AzureBlobFileAttributeView.name*
  type: Method
  package: com.azure.storage.blob.nio
  summary: 'Returns the name of the attribute view: `"azureBlob"`'
  syntax:
    content: public String name()
    return:
      type: java.lang.String
      description: 'the name of the attribute view: <code>"azureBlob"</code>'
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.readAttributes()
  id: readAttributes()
  artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
  parent: com.azure.storage.blob.nio.AzureBlobFileAttributeView
  langs:
  - java
  name: readAttributes()
  nameWithType: AzureBlobFileAttributeView.readAttributes()
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.readAttributes()
  overload: com.azure.storage.blob.nio.AzureBlobFileAttributeView.readAttributes*
  type: Method
  package: com.azure.storage.blob.nio
  summary: >-
    Reads the file attributes as a bulk operation.


    All file attributes are read as an atomic operation with respect to other file system operations. A fresh copy is retrieved every time this method is called.
  syntax:
    content: public AzureBlobFileAttributes readAttributes()
    return:
      type: com.azure.storage.blob.nio.AzureBlobFileAttributes
      description: <xref uid="com.azure.storage.blob.nio.AzureBlobFileAttributes" data-throw-if-not-resolved="false">AzureBlobFileAttributes</xref>
  exceptions:
  - type: java.io.IOException
    description: if an IOException occurs.
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setBlobHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  id: setBlobHttpHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
  parent: com.azure.storage.blob.nio.AzureBlobFileAttributeView
  langs:
  - java
  name: setBlobHttpHeaders(BlobHttpHeaders headers)
  nameWithType: AzureBlobFileAttributeView.setBlobHttpHeaders(BlobHttpHeaders headers)
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setBlobHttpHeaders(BlobHttpHeaders headers)
  overload: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setBlobHttpHeaders*
  type: Method
  package: com.azure.storage.blob.nio
  summary: >-
    Sets the <xref uid="com.azure.storage.blob.models.BlobHttpHeaders" data-throw-if-not-resolved="false">BlobHttpHeaders</xref> as an atomic operation.


    See <xref uid="" data-throw-if-not-resolved="false">BlobClientBase#setHttpHeaders(BlobHttpHeaders)</xref> for more information.
  syntax:
    content: public void setBlobHttpHeaders(BlobHttpHeaders headers)
    parameters:
    - id: headers
      type: com.azure.storage.blob.models.BlobHttpHeaders
      description: <xref uid="com.azure.storage.blob.models.BlobHttpHeaders" data-throw-if-not-resolved="false">BlobHttpHeaders</xref>
  exceptions:
  - type: java.io.IOException
    description: if an IOException occurs.
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  id: setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
  parent: com.azure.storage.blob.nio.AzureBlobFileAttributeView
  langs:
  - java
  name: setMetadata(Map<String,String> metadata)
  nameWithType: AzureBlobFileAttributeView.setMetadata(Map<String,String> metadata)
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setMetadata(Map<String,String> metadata)
  overload: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setMetadata*
  type: Method
  package: com.azure.storage.blob.nio
  summary: >-
    Sets the metadata as an atomic operation.


    See <xref uid="" data-throw-if-not-resolved="false">BlobClientBase#setMetadata(Map)</xref> for more information.
  syntax:
    content: public void setMetadata(Map<String,String> metadata)
    parameters:
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: The metadata to associate with the blob
  exceptions:
  - type: java.io.IOException
    description: if an IOException occurs.
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTier(com.azure.storage.blob.models.AccessTier)
  id: setTier(com.azure.storage.blob.models.AccessTier)
  artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
  parent: com.azure.storage.blob.nio.AzureBlobFileAttributeView
  langs:
  - java
  name: setTier(AccessTier tier)
  nameWithType: AzureBlobFileAttributeView.setTier(AccessTier tier)
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTier(AccessTier tier)
  overload: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTier*
  type: Method
  package: com.azure.storage.blob.nio
  summary: >-
    Sets the <xref uid="com.azure.storage.blob.models.AccessTier" data-throw-if-not-resolved="false">AccessTier</xref> on the file.


    See <xref uid="" data-throw-if-not-resolved="false">BlobClientBase#setAccessTier(AccessTier)</xref> for more information.
  syntax:
    content: public void setTier(AccessTier tier)
    parameters:
    - id: tier
      type: com.azure.storage.blob.models.AccessTier
      description: <xref uid="com.azure.storage.blob.models.AccessTier" data-throw-if-not-resolved="false">AccessTier</xref>
  exceptions:
  - type: java.io.IOException
    description: if an IOException occurs.
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)
  id: setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)
  artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
  parent: com.azure.storage.blob.nio.AzureBlobFileAttributeView
  langs:
  - java
  name: setTimes(FileTime lastModifiedTime, FileTime lastAccessTime, FileTime createTime)
  nameWithType: AzureBlobFileAttributeView.setTimes(FileTime lastModifiedTime, FileTime lastAccessTime, FileTime createTime)
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTimes(FileTime lastModifiedTime, FileTime lastAccessTime, FileTime createTime)
  overload: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTimes*
  type: Method
  package: com.azure.storage.blob.nio
  summary: Unsupported.
  syntax:
    content: public void setTimes(FileTime lastModifiedTime, FileTime lastAccessTime, FileTime createTime)
    parameters:
    - id: lastModifiedTime
      type: java.nio.file.attribute.FileTime
      description: the new last modified time, or null to not change the value
    - id: lastAccessTime
      type: java.nio.file.attribute.FileTime
      description: the last access time, or null to not change the value
    - id: createTime
      type: java.nio.file.attribute.FileTime
      description: the file's create time, or null to not change the value
  exceptions:
  - type: java.io.IOException
    description: Operation not supported.
references:
- uid: java.nio.file.Path
  spec.java:
  - uid: java.nio.file.Path
    name: Path
    fullName: java.nio.file.Path
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.AzureBlobFileAttributeView*
  name: AzureBlobFileAttributeView
  nameWithType: AzureBlobFileAttributeView.AzureBlobFileAttributeView
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.AzureBlobFileAttributeView
  package: com.azure.storage.blob.nio
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.name*
  name: name
  nameWithType: AzureBlobFileAttributeView.name
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.name
  package: com.azure.storage.blob.nio
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributes
  name: AzureBlobFileAttributes
  nameWithType: AzureBlobFileAttributes
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributes
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.readAttributes*
  name: readAttributes
  nameWithType: AzureBlobFileAttributeView.readAttributes
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.readAttributes
  package: com.azure.storage.blob.nio
- uid: com.azure.storage.blob.models.BlobHttpHeaders
  spec.java:
  - uid: com.azure.storage.blob.models.BlobHttpHeaders
    name: BlobHttpHeaders
    fullName: com.azure.storage.blob.models.BlobHttpHeaders
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setBlobHttpHeaders*
  name: setBlobHttpHeaders
  nameWithType: AzureBlobFileAttributeView.setBlobHttpHeaders
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setBlobHttpHeaders
  package: com.azure.storage.blob.nio
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setMetadata*
  name: setMetadata
  nameWithType: AzureBlobFileAttributeView.setMetadata
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setMetadata
  package: com.azure.storage.blob.nio
- uid: com.azure.storage.blob.models.AccessTier
  spec.java:
  - uid: com.azure.storage.blob.models.AccessTier
    name: AccessTier
    fullName: com.azure.storage.blob.models.AccessTier
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTier*
  name: setTier
  nameWithType: AzureBlobFileAttributeView.setTier
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTier
  package: com.azure.storage.blob.nio
- uid: java.nio.file.attribute.FileTime
  spec.java:
  - uid: java.nio.file.attribute.FileTime
    name: FileTime
    fullName: java.nio.file.attribute.FileTime
- uid: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTimes*
  name: setTimes
  nameWithType: AzureBlobFileAttributeView.setTimes
  fullName: com.azure.storage.blob.nio.AzureBlobFileAttributeView.setTimes
  package: com.azure.storage.blob.nio
- uid: java.nio.file.attribute.BasicFileAttributeView
  name: BasicFileAttributeView
  nameWithType: BasicFileAttributeView
  fullName: java.nio.file.attribute.BasicFileAttributeView
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
