### YamlMime:JavaMember
uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withFilter*"
fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withFilter"
name: "withFilter"
nameWithType: "QueryDataset.withFilter"
members:
- uid: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withFilter(com.azure.resourcemanager.costmanagement.models.QueryFilter)"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryDataset.withFilter(QueryFilter filter)"
  name: "withFilter(QueryFilter filter)"
  nameWithType: "QueryDataset.withFilter(QueryFilter filter)"
  summary: "Set the filter property: The filter expression to use in the query."
  parameters:
  - description: "the filter value to set."
    name: "filter"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryDataset withFilter(QueryFilter filter)"
  desc: "Set the filter property: The filter expression to use in the query. Please reference our Query API REST documentation for how to properly format the filter."
  returns:
    description: "the QueryDataset object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryDataset?alt=com.azure.resourcemanager.costmanagement.models.QueryDataset&text=QueryDataset\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.costmanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-costmanagement:1.0.0-beta.3
