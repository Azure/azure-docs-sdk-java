### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Collections2.transform*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Collections2.<F,T>transform"
name: "<F,T>transform"
nameWithType: "Collections2.<F,T>transform"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Collections2.<F,T>transform(java.util.Collection<F>,com.azure.cosmos.implementation.guava25.base.Function<? super F,T>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Collections2.<F,T>transform(Collection<F> fromCollection, Function<? super F,T> function)"
  name: "<F,T>transform(Collection<F> fromCollection, Function<? super F,T> function)"
  nameWithType: "Collections2.<F,T>transform(Collection<F> fromCollection, Function<? super F,T> function)"
  summary: "Returns a collection that applies `function` to each element of `fromCollection`. The returned collection is a live view of `fromCollection`; changes to one affect the other.\n\nThe returned collection's `add()` and `addAll()` methods throw an <xref uid=\"java.lang.UnsupportedOperationException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UnsupportedOperationException\"></xref>. All other collection methods are supported, as long as `fromCollection` supports them.\n\nThe returned collection isn't threadsafe or serializable, even if `fromCollection` is.\n\nWhen a live view is *not* needed, it may be faster to copy the transformed collection and use the copy.\n\nIf the input `Collection` is known to be a `List`, consider <xref uid=\"com.azure.cosmos.implementation.Lists.transform\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Lists#transform\"></xref>. If only an `Iterable` is available, use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Iterables.transform\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterables#transform\"></xref>.\n\n**`Stream` equivalent:** <xref uid=\"java.util.stream.Stream.map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stream.map\"></xref>."
  parameters:
  - name: "fromCollection"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"F?alt=F&text=F\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "function"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Function?alt=com.azure.cosmos.implementation.guava25.base.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super F?alt=? super F&text=? super F\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Collection<T> <F,T>transform(Collection<F> fromCollection, Function<? super F,T> function)"
  returns:
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
