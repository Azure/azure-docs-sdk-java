### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Maps.EntryTransformer.transformEntry*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Maps.EntryTransformer<K,V1,V2>.transformEntry"
name: "transformEntry"
nameWithType: "Maps.EntryTransformer<K,V1,V2>.transformEntry"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Maps.EntryTransformer.transformEntry(K,V1)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Maps.EntryTransformer<K,V1,V2>.transformEntry(K key, V1 value)"
  name: "transformEntry(K key, V1 value)"
  nameWithType: "Maps.EntryTransformer<K,V1,V2>.transformEntry(K key, V1 value)"
  summary: "Determines an output value based on a key-value pair. This method is *generally expected*, but not absolutely required, to have the following properties:\n\n *  Its execution does not cause any observable side effects.\n *  The computation is *consistent with equals*; that is, <xref uid=\"com.azure.cosmos.implementation.guava25.base.Objects.equal*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Objects.equal\"></xref>`(k1, k2) &&` <xref uid=\"com.azure.cosmos.implementation.guava25.base.Objects.equal*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Objects#equal\"></xref>`(v1, v2)` implies that `Objects.equal(transformer.transform(k1, v1), transformer.transform(k2, v2))`."
  parameters:
  - name: "key"
    type: "<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"V1?alt=V1&text=V1\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract V2 transformEntry(K key, V1 value)"
  returns:
    type: "<xref href=\"V2?alt=V2&text=V2\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
