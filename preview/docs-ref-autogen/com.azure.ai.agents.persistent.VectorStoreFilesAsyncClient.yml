### YamlMime:JavaType
uid: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient"
fullName: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient"
name: "VectorStoreFilesAsyncClient"
nameWithType: "VectorStoreFilesAsyncClient"
summary: "Initializes a new instance of the asynchronous Persistent<wbr>Agents<wbr>Administration<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **VectorStoreFilesAsyncClient**"
methods:
- uid: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.createVectorStoreFile(java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.createVectorStoreFile(String vectorStoreId)"
  name: "createVectorStoreFile(String vectorStoreId)"
  nameWithType: "VectorStoreFilesAsyncClient.createVectorStoreFile(String vectorStoreId)"
  summary: "Create a vector store file by attaching a file to a vector store."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<VectorStoreFile> createVectorStoreFile(String vectorStoreId)"
  desc: "Create a vector store file by attaching a file to a vector store."
  returns:
    description: "description of a file attached to a vector store on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFile?alt=com.azure.ai.agents.persistent.models.VectorStoreFile&text=VectorStoreFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.createVectorStoreFile(java.lang.String,java.lang.String,com.azure.ai.agents.persistent.models.VectorStoreDataSource,com.azure.ai.agents.persistent.models.VectorStoreChunkingStrategyRequest)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.createVectorStoreFile(String vectorStoreId, String fileId, VectorStoreDataSource dataSource, VectorStoreChunkingStrategyRequest chunkingStrategy)"
  name: "createVectorStoreFile(String vectorStoreId, String fileId, VectorStoreDataSource dataSource, VectorStoreChunkingStrategyRequest chunkingStrategy)"
  nameWithType: "VectorStoreFilesAsyncClient.createVectorStoreFile(String vectorStoreId, String fileId, VectorStoreDataSource dataSource, VectorStoreChunkingStrategyRequest chunkingStrategy)"
  summary: "Create a vector store file by attaching a file to a vector store."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the file."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Azure asset ID."
    name: "dataSource"
    type: "<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreDataSource?alt=com.azure.ai.agents.persistent.models.VectorStoreDataSource&text=VectorStoreDataSource\" data-throw-if-not-resolved=\"False\" />"
  - description: "The chunking strategy used to chunk the file. If not set, uses the auto strategy."
    name: "chunkingStrategy"
    type: "<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreChunkingStrategyRequest?alt=com.azure.ai.agents.persistent.models.VectorStoreChunkingStrategyRequest&text=VectorStoreChunkingStrategyRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<VectorStoreFile> createVectorStoreFile(String vectorStoreId, String fileId, VectorStoreDataSource dataSource, VectorStoreChunkingStrategyRequest chunkingStrategy)"
  desc: "Create a vector store file by attaching a file to a vector store."
  returns:
    description: "description of a file attached to a vector store on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFile?alt=com.azure.ai.agents.persistent.models.VectorStoreFile&text=VectorStoreFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.createVectorStoreFileWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.createVectorStoreFileWithResponse(String vectorStoreId, BinaryData createVectorStoreFileRequest, RequestOptions requestOptions)"
  name: "createVectorStoreFileWithResponse(String vectorStoreId, BinaryData createVectorStoreFileRequest, RequestOptions requestOptions)"
  nameWithType: "VectorStoreFilesAsyncClient.createVectorStoreFileWithResponse(String vectorStoreId, BinaryData createVectorStoreFileRequest, RequestOptions requestOptions)"
  summary: "Create a vector store file by attaching a file to a vector store."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The createVectorStoreFileRequest parameter."
    name: "createVectorStoreFileRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> createVectorStoreFileWithResponse(String vectorStoreId, BinaryData createVectorStoreFileRequest, RequestOptions requestOptions)"
  desc: "Create a vector store file by attaching a file to a vector store.\n\n**Request Body Schema**\n\n```java\n{\n     file_id: String (Optional)\n     data_source (Optional): {\n         uri: String (Required)\n         type: String(uri_asset/id_asset) (Required)\n     }\n     chunking_strategy (Optional): {\n         type: String(auto/static) (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     usage_bytes: int (Required)\n     created_at: long (Required)\n     vector_store_id: String (Required)\n     status: String(in_progress/completed/failed/cancelled) (Required)\n     last_error (Required): {\n         code: String(server_error/invalid_file/unsupported_file) (Required)\n         message: String (Required)\n     }\n     chunking_strategy (Required): {\n         type: String(other/static) (Required)\n     }\n }\n```"
  returns:
    description: "description of a file attached to a vector store along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.deleteVectorStoreFile(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.deleteVectorStoreFile(String vectorStoreId, String fileId)"
  name: "deleteVectorStoreFile(String vectorStoreId, String fileId)"
  nameWithType: "VectorStoreFilesAsyncClient.deleteVectorStoreFile(String vectorStoreId, String fileId)"
  summary: "Deletes a vector store file."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the file."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<VectorStoreFileDeletionStatus> deleteVectorStoreFile(String vectorStoreId, String fileId)"
  desc: "Deletes a vector store file. This removes the file\\\\u2010to\\\\u2010store link (does not delete the file itself)."
  returns:
    description: "response object for deleting a vector store file relationship on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFileDeletionStatus?alt=com.azure.ai.agents.persistent.models.VectorStoreFileDeletionStatus&text=VectorStoreFileDeletionStatus\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.deleteVectorStoreFileWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.deleteVectorStoreFileWithResponse(String vectorStoreId, String fileId, RequestOptions requestOptions)"
  name: "deleteVectorStoreFileWithResponse(String vectorStoreId, String fileId, RequestOptions requestOptions)"
  nameWithType: "VectorStoreFilesAsyncClient.deleteVectorStoreFileWithResponse(String vectorStoreId, String fileId, RequestOptions requestOptions)"
  summary: "Deletes a vector store file."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the file."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> deleteVectorStoreFileWithResponse(String vectorStoreId, String fileId, RequestOptions requestOptions)"
  desc: "Deletes a vector store file. This removes the file\\\\u2010to\\\\u2010store link (does not delete the file itself).\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     deleted: boolean (Required)\n     object: String (Required)\n }\n```"
  returns:
    description: "response object for deleting a vector store file relationship along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.getVectorStoreFile(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.getVectorStoreFile(String vectorStoreId, String fileId)"
  name: "getVectorStoreFile(String vectorStoreId, String fileId)"
  nameWithType: "VectorStoreFilesAsyncClient.getVectorStoreFile(String vectorStoreId, String fileId)"
  summary: "Retrieves a vector store file."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the file."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<VectorStoreFile> getVectorStoreFile(String vectorStoreId, String fileId)"
  desc: "Retrieves a vector store file."
  returns:
    description: "description of a file attached to a vector store on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFile?alt=com.azure.ai.agents.persistent.models.VectorStoreFile&text=VectorStoreFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.getVectorStoreFileWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.getVectorStoreFileWithResponse(String vectorStoreId, String fileId, RequestOptions requestOptions)"
  name: "getVectorStoreFileWithResponse(String vectorStoreId, String fileId, RequestOptions requestOptions)"
  nameWithType: "VectorStoreFilesAsyncClient.getVectorStoreFileWithResponse(String vectorStoreId, String fileId, RequestOptions requestOptions)"
  summary: "Retrieves a vector store file."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the file."
    name: "fileId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getVectorStoreFileWithResponse(String vectorStoreId, String fileId, RequestOptions requestOptions)"
  desc: "Retrieves a vector store file.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     usage_bytes: int (Required)\n     created_at: long (Required)\n     vector_store_id: String (Required)\n     status: String(in_progress/completed/failed/cancelled) (Required)\n     last_error (Required): {\n         code: String(server_error/invalid_file/unsupported_file) (Required)\n         message: String (Required)\n     }\n     chunking_strategy (Required): {\n         type: String(other/static) (Required)\n     }\n }\n```"
  returns:
    description: "description of a file attached to a vector store along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.listVectorStoreFiles(java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.listVectorStoreFiles(String vectorStoreId)"
  name: "listVectorStoreFiles(String vectorStoreId)"
  nameWithType: "VectorStoreFilesAsyncClient.listVectorStoreFiles(String vectorStoreId)"
  summary: "Returns a list of vector store files."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<VectorStoreFile> listVectorStoreFiles(String vectorStoreId)"
  desc: "Returns a list of vector store files."
  returns:
    description: "the response data for a requested list of items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFile?alt=com.azure.ai.agents.persistent.models.VectorStoreFile&text=VectorStoreFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.listVectorStoreFiles(java.lang.String,com.azure.ai.agents.persistent.models.VectorStoreFileStatusFilter,java.lang.Integer,com.azure.ai.agents.persistent.models.ListSortOrder,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.listVectorStoreFiles(String vectorStoreId, VectorStoreFileStatusFilter filter, Integer limit, ListSortOrder order, String after, String before)"
  name: "listVectorStoreFiles(String vectorStoreId, VectorStoreFileStatusFilter filter, Integer limit, ListSortOrder order, String after, String before)"
  nameWithType: "VectorStoreFilesAsyncClient.listVectorStoreFiles(String vectorStoreId, VectorStoreFileStatusFilter filter, Integer limit, ListSortOrder order, String after, String before)"
  summary: "Returns a list of vector store files."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Filter by file status."
    name: "filter"
    type: "<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFileStatusFilter?alt=com.azure.ai.agents.persistent.models.VectorStoreFileStatusFilter&text=VectorStoreFileStatusFilter\" data-throw-if-not-resolved=\"False\" />"
  - description: "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default\n is 20."
    name: "limit"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Sort order by the created_at timestamp of the objects. asc for ascending order and desc for\n descending order."
    name: "order"
    type: "<xref href=\"com.azure.ai.agents.persistent.models.ListSortOrder?alt=com.azure.ai.agents.persistent.models.ListSortOrder&text=ListSortOrder\" data-throw-if-not-resolved=\"False\" />"
  - description: "A cursor for use in pagination. after is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include after=obj_foo in order to fetch the next page of the list."
    name: "after"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A cursor for use in pagination. before is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include before=obj_foo in order to fetch the previous page of the list."
    name: "before"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<VectorStoreFile> listVectorStoreFiles(String vectorStoreId, VectorStoreFileStatusFilter filter, Integer limit, ListSortOrder order, String after, String before)"
  desc: "Returns a list of vector store files."
  returns:
    description: "the response data for a requested list of items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFile?alt=com.azure.ai.agents.persistent.models.VectorStoreFile&text=VectorStoreFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.listVectorStoreFiles(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFilesAsyncClient.listVectorStoreFiles(String vectorStoreId, RequestOptions requestOptions)"
  name: "listVectorStoreFiles(String vectorStoreId, RequestOptions requestOptions)"
  nameWithType: "VectorStoreFilesAsyncClient.listVectorStoreFiles(String vectorStoreId, RequestOptions requestOptions)"
  summary: "Returns a list of vector store files."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listVectorStoreFiles(String vectorStoreId, RequestOptions requestOptions)"
  desc: "Returns a list of vector store files.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                                                                                                                                                                                                                           |\n    | filter | String  | No       | Filter by file status. Allowed values: \"in\\_progress\", \"completed\", \"failed\", \"cancelled\".                                                                                                                                                                                            |\n    | limit  | Integer | No       | A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.                                                                                                                                                                            |\n    | order  | String  | No       | Sort order by the created\\_at timestamp of the objects. asc for ascending order and desc for descending order. Allowed values: \"asc\", \"desc\".                                                                                                                                         |\n    | after  | String  | No       | A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include after=obj\\_foo in order to fetch the next page of the list.       |\n    | before | String  | No       | A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include before=obj\\_foo in order to fetch the previous page of the list. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     usage_bytes: int (Required)\n     created_at: long (Required)\n     vector_store_id: String (Required)\n     status: String(in_progress/completed/failed/cancelled) (Required)\n     last_error (Required): {\n         code: String(server_error/invalid_file/unsupported_file) (Required)\n         message: String (Required)\n     }\n     chunking_strategy (Required): {\n         type: String(other/static) (Required)\n     }\n }\n```"
  returns:
    description: "the response data for a requested list of items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous PersistentAgentsAdministrationClient type."
metadata: {}
package: "com.azure.ai.agents.persistent"
artifact: com.azure:azure-ai-agents-persistent:1.0.0-beta.1
