### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService"
name: "AmazonMwsLinkedService"
nameWithType: "AmazonMwsLinkedService"
summary: "Amazon Marketplace Web Service linked service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AmazonMwsLinkedService extends LinkedService"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.AmazonMwsLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.AmazonMwsLinkedService()"
  name: "AmazonMwsLinkedService()"
  nameWithType: "AmazonMwsLinkedService.AmazonMwsLinkedService()"
  syntax: "public AmazonMwsLinkedService()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.accessKeyId()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.accessKeyId()"
  name: "accessKeyId()"
  nameWithType: "AmazonMwsLinkedService.accessKeyId()"
  summary: "Get the accessKeyId property: The access key id used to access data."
  syntax: "public Object accessKeyId()"
  returns:
    description: "the accessKeyId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "AmazonMwsLinkedService.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.endpoint()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.endpoint()"
  name: "endpoint()"
  nameWithType: "AmazonMwsLinkedService.endpoint()"
  summary: "Get the endpoint property: The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)."
  syntax: "public Object endpoint()"
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.marketplaceId()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.marketplaceId()"
  name: "marketplaceId()"
  nameWithType: "AmazonMwsLinkedService.marketplaceId()"
  summary: "Get the marketplaceId property: The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)."
  syntax: "public Object marketplaceId()"
  returns:
    description: "the marketplaceId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.mwsAuthToken()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.mwsAuthToken()"
  name: "mwsAuthToken()"
  nameWithType: "AmazonMwsLinkedService.mwsAuthToken()"
  summary: "Get the mwsAuthToken property: The Amazon MWS authentication token."
  syntax: "public SecretBase mwsAuthToken()"
  returns:
    description: "the mwsAuthToken value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.secretKey()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.secretKey()"
  name: "secretKey()"
  nameWithType: "AmazonMwsLinkedService.secretKey()"
  summary: "Get the secretKey property: The secret key used to access data."
  syntax: "public SecretBase secretKey()"
  returns:
    description: "the secretKey value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.sellerId()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.sellerId()"
  name: "sellerId()"
  nameWithType: "AmazonMwsLinkedService.sellerId()"
  summary: "Get the sellerId property: The Amazon seller ID."
  syntax: "public Object sellerId()"
  returns:
    description: "the sellerId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.useEncryptedEndpoints()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.useEncryptedEndpoints()"
  name: "useEncryptedEndpoints()"
  nameWithType: "AmazonMwsLinkedService.useEncryptedEndpoints()"
  summary: "Get the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  syntax: "public Object useEncryptedEndpoints()"
  returns:
    description: "the useEncryptedEndpoints value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.useHostVerification()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.useHostVerification()"
  name: "useHostVerification()"
  nameWithType: "AmazonMwsLinkedService.useHostVerification()"
  summary: "Get the useHostVerification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
  syntax: "public Object useHostVerification()"
  returns:
    description: "the useHostVerification value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.usePeerVerification()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.usePeerVerification()"
  name: "usePeerVerification()"
  nameWithType: "AmazonMwsLinkedService.usePeerVerification()"
  summary: "Get the usePeerVerification property: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
  syntax: "public Object usePeerVerification()"
  returns:
    description: "the usePeerVerification value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.validate()"
  name: "validate()"
  nameWithType: "AmazonMwsLinkedService.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withAccessKeyId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withAccessKeyId(Object accessKeyId)"
  name: "withAccessKeyId(Object accessKeyId)"
  nameWithType: "AmazonMwsLinkedService.withAccessKeyId(Object accessKeyId)"
  summary: "Set the accessKeyId property: The access key id used to access data."
  parameters:
  - description: "the accessKeyId value to set."
    name: "accessKeyId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonMwsLinkedService withAccessKeyId(Object accessKeyId)"
  returns:
    description: "the AmazonMwsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "AmazonMwsLinkedService.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AmazonMwsLinkedService withAnnotations(List<Object> annotations)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  name: "withConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "AmazonMwsLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connectVia property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonMwsLinkedService withConnectVia(IntegrationRuntimeReference connectVia)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "AmazonMwsLinkedService.withDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonMwsLinkedService withDescription(String description)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "AmazonMwsLinkedService.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonMwsLinkedService withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the AmazonMwsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withEndpoint(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withEndpoint(Object endpoint)"
  name: "withEndpoint(Object endpoint)"
  nameWithType: "AmazonMwsLinkedService.withEndpoint(Object endpoint)"
  summary: "Set the endpoint property: The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)."
  parameters:
  - description: "the endpoint value to set."
    name: "endpoint"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonMwsLinkedService withEndpoint(Object endpoint)"
  returns:
    description: "the AmazonMwsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withMarketplaceId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withMarketplaceId(Object marketplaceId)"
  name: "withMarketplaceId(Object marketplaceId)"
  nameWithType: "AmazonMwsLinkedService.withMarketplaceId(Object marketplaceId)"
  summary: "Set the marketplaceId property: The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)."
  parameters:
  - description: "the marketplaceId value to set."
    name: "marketplaceId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonMwsLinkedService withMarketplaceId(Object marketplaceId)"
  returns:
    description: "the AmazonMwsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withMwsAuthToken(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withMwsAuthToken(SecretBase mwsAuthToken)"
  name: "withMwsAuthToken(SecretBase mwsAuthToken)"
  nameWithType: "AmazonMwsLinkedService.withMwsAuthToken(SecretBase mwsAuthToken)"
  summary: "Set the mwsAuthToken property: The Amazon MWS authentication token."
  parameters:
  - description: "the mwsAuthToken value to set."
    name: "mwsAuthToken"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonMwsLinkedService withMwsAuthToken(SecretBase mwsAuthToken)"
  returns:
    description: "the AmazonMwsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "AmazonMwsLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AmazonMwsLinkedService withParameters(Map<String,ParameterSpecification> parameters)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withSecretKey(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withSecretKey(SecretBase secretKey)"
  name: "withSecretKey(SecretBase secretKey)"
  nameWithType: "AmazonMwsLinkedService.withSecretKey(SecretBase secretKey)"
  summary: "Set the secretKey property: The secret key used to access data."
  parameters:
  - description: "the secretKey value to set."
    name: "secretKey"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonMwsLinkedService withSecretKey(SecretBase secretKey)"
  returns:
    description: "the AmazonMwsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withSellerId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withSellerId(Object sellerId)"
  name: "withSellerId(Object sellerId)"
  nameWithType: "AmazonMwsLinkedService.withSellerId(Object sellerId)"
  summary: "Set the sellerId property: The Amazon seller ID."
  parameters:
  - description: "the sellerId value to set."
    name: "sellerId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonMwsLinkedService withSellerId(Object sellerId)"
  returns:
    description: "the AmazonMwsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withUseEncryptedEndpoints(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  name: "withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  nameWithType: "AmazonMwsLinkedService.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  summary: "Set the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  parameters:
  - description: "the useEncryptedEndpoints value to set."
    name: "useEncryptedEndpoints"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonMwsLinkedService withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  returns:
    description: "the AmazonMwsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withUseHostVerification(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withUseHostVerification(Object useHostVerification)"
  name: "withUseHostVerification(Object useHostVerification)"
  nameWithType: "AmazonMwsLinkedService.withUseHostVerification(Object useHostVerification)"
  summary: "Set the useHostVerification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
  parameters:
  - description: "the useHostVerification value to set."
    name: "useHostVerification"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonMwsLinkedService withUseHostVerification(Object useHostVerification)"
  returns:
    description: "the AmazonMwsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withUsePeerVerification(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService.withUsePeerVerification(Object usePeerVerification)"
  name: "withUsePeerVerification(Object usePeerVerification)"
  nameWithType: "AmazonMwsLinkedService.withUsePeerVerification(Object usePeerVerification)"
  summary: "Set the usePeerVerification property: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
  parameters:
  - description: "the usePeerVerification value to set."
    name: "usePeerVerification"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmazonMwsLinkedService withUsePeerVerification(Object usePeerVerification)"
  returns:
    description: "the AmazonMwsLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService?alt=com.azure.resourcemanager.datafactory.models.AmazonMwsLinkedService&text=AmazonMwsLinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
