### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix"
fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix"
name: "PeeringServicePrefix"
nameWithType: "PeeringServicePrefix"
summary: "An immutable client-side representation of Peering<wbr>Service<wbr>Prefix."
syntax: "public interface PeeringServicePrefix"
methods:
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.errorMessage()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.errorMessage()"
  name: "errorMessage()"
  nameWithType: "PeeringServicePrefix.errorMessage()"
  summary: "Gets the error<wbr>Message property: The error message for validation state."
  modifiers:
  - "abstract"
  syntax: "public abstract String errorMessage()"
  desc: "Gets the errorMessage property: The error message for validation state."
  returns:
    description: "the errorMessage value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.events()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.events()"
  name: "events()"
  nameWithType: "PeeringServicePrefix.events()"
  summary: "Gets the events property: The list of events for peering service prefix."
  modifiers:
  - "abstract"
  syntax: "public abstract List<PeeringServicePrefixEvent> events()"
  desc: "Gets the events property: The list of events for peering service prefix."
  returns:
    description: "the events value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.peering.models.PeeringServicePrefixEvent?alt=com.azure.resourcemanager.peering.models.PeeringServicePrefixEvent&text=PeeringServicePrefixEvent\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.id()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.id()"
  name: "id()"
  nameWithType: "PeeringServicePrefix.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.innerModel()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.innerModel()"
  name: "innerModel()"
  nameWithType: "PeeringServicePrefix.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>peering.<wbr>fluent.<wbr>models.<wbr>Peering<wbr>Service<wbr>Prefix<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringServicePrefixInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServicePrefixInner&text=PeeringServicePrefixInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.learnedType()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.learnedType()"
  name: "learnedType()"
  nameWithType: "PeeringServicePrefix.learnedType()"
  summary: "Gets the learned<wbr>Type property: The prefix learned type."
  modifiers:
  - "abstract"
  syntax: "public abstract LearnedType learnedType()"
  desc: "Gets the learnedType property: The prefix learned type."
  returns:
    description: "the learnedType value."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.LearnedType?alt=com.azure.resourcemanager.peering.models.LearnedType&text=LearnedType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.name()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.name()"
  name: "name()"
  nameWithType: "PeeringServicePrefix.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.peeringServicePrefixKey()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.peeringServicePrefixKey()"
  name: "peeringServicePrefixKey()"
  nameWithType: "PeeringServicePrefix.peeringServicePrefixKey()"
  summary: "Gets the peering<wbr>Service<wbr>Prefix<wbr>Key property: The peering service prefix key."
  modifiers:
  - "abstract"
  syntax: "public abstract String peeringServicePrefixKey()"
  desc: "Gets the peeringServicePrefixKey property: The peering service prefix key."
  returns:
    description: "the peeringServicePrefixKey value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.prefix()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.prefix()"
  name: "prefix()"
  nameWithType: "PeeringServicePrefix.prefix()"
  summary: "Gets the prefix property: The prefix from which your traffic originates."
  modifiers:
  - "abstract"
  syntax: "public abstract String prefix()"
  desc: "Gets the prefix property: The prefix from which your traffic originates."
  returns:
    description: "the prefix value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.prefixValidationState()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.prefixValidationState()"
  name: "prefixValidationState()"
  nameWithType: "PeeringServicePrefix.prefixValidationState()"
  summary: "Gets the prefix<wbr>Validation<wbr>State property: The prefix validation state."
  modifiers:
  - "abstract"
  syntax: "public abstract PrefixValidationState prefixValidationState()"
  desc: "Gets the prefixValidationState property: The prefix validation state."
  returns:
    description: "the prefixValidationState value."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PrefixValidationState?alt=com.azure.resourcemanager.peering.models.PrefixValidationState&text=PrefixValidationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.provisioningState()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PeeringServicePrefix.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: The provisioning state of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: The provisioning state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.ProvisioningState?alt=com.azure.resourcemanager.peering.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.refresh()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.refresh()"
  name: "refresh()"
  nameWithType: "PeeringServicePrefix.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringServicePrefix refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServicePrefix?alt=com.azure.resourcemanager.peering.models.PeeringServicePrefix&text=PeeringServicePrefix\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "PeeringServicePrefix.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringServicePrefix refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServicePrefix?alt=com.azure.resourcemanager.peering.models.PeeringServicePrefix&text=PeeringServicePrefix\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.type()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.type()"
  name: "type()"
  nameWithType: "PeeringServicePrefix.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.update()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringServicePrefix.update()"
  name: "update()"
  nameWithType: "PeeringServicePrefix.update()"
  summary: "Begins update for the Peering<wbr>Service<wbr>Prefix resource."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringServicePrefix.Update update()"
  desc: "Begins update for the PeeringServicePrefix resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServicePrefix.Update?alt=com.azure.resourcemanager.peering.models.PeeringServicePrefix.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of PeeringServicePrefix."
metadata: {}
package: "com.azure.resourcemanager.peering.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
