### YamlMime:JavaType
uid: "com.azure.resourcemanager.storagecache.models.Cache"
fullName: "com.azure.resourcemanager.storagecache.models.Cache"
name: "Cache"
nameWithType: "Cache"
summary: "An immutable client-side representation of Cache."
syntax: "public interface Cache"
methods:
- uid: "com.azure.resourcemanager.storagecache.models.Cache.cacheSizeGB()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.cacheSizeGB()"
  name: "cacheSizeGB()"
  nameWithType: "Cache.cacheSizeGB()"
  summary: "Gets the cache<wbr>SizeGB property: The size of this Cache, in GB."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer cacheSizeGB()"
  desc: "Gets the cacheSizeGB property: The size of this Cache, in GB."
  returns:
    description: "the cacheSizeGB value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.debugInfo()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.debugInfo()"
  name: "debugInfo()"
  nameWithType: "Cache.debugInfo()"
  summary: "Tells a Cache to write generate debug info for support to process."
  modifiers:
  - "abstract"
  syntax: "public abstract void debugInfo()"
  desc: "Tells a Cache to write generate debug info for support to process."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.debugInfo(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.debugInfo(Context context)"
  name: "debugInfo(Context context)"
  nameWithType: "Cache.debugInfo(Context context)"
  summary: "Tells a Cache to write generate debug info for support to process."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void debugInfo(Context context)"
  desc: "Tells a Cache to write generate debug info for support to process."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.directoryServicesSettings()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.directoryServicesSettings()"
  name: "directoryServicesSettings()"
  nameWithType: "Cache.directoryServicesSettings()"
  summary: "Gets the directory<wbr>Services<wbr>Settings property: Specifies Directory Services settings of the cache."
  modifiers:
  - "abstract"
  syntax: "public abstract CacheDirectorySettings directoryServicesSettings()"
  desc: "Gets the directoryServicesSettings property: Specifies Directory Services settings of the cache."
  returns:
    description: "the directoryServicesSettings value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheDirectorySettings?alt=com.azure.resourcemanager.storagecache.models.CacheDirectorySettings&text=CacheDirectorySettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.encryptionSettings()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.encryptionSettings()"
  name: "encryptionSettings()"
  nameWithType: "Cache.encryptionSettings()"
  summary: "Gets the encryption<wbr>Settings property: Specifies encryption settings of the cache."
  modifiers:
  - "abstract"
  syntax: "public abstract CacheEncryptionSettings encryptionSettings()"
  desc: "Gets the encryptionSettings property: Specifies encryption settings of the cache."
  returns:
    description: "the encryptionSettings value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheEncryptionSettings?alt=com.azure.resourcemanager.storagecache.models.CacheEncryptionSettings&text=CacheEncryptionSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.flush()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.flush()"
  name: "flush()"
  nameWithType: "Cache.flush()"
  summary: "Tells a Cache to write all dirty data to the Storage Target(s)."
  modifiers:
  - "abstract"
  syntax: "public abstract void flush()"
  desc: "Tells a Cache to write all dirty data to the Storage Target(s). During the flush, clients will see errors returned until the flush is complete."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.flush(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.flush(Context context)"
  name: "flush(Context context)"
  nameWithType: "Cache.flush(Context context)"
  summary: "Tells a Cache to write all dirty data to the Storage Target(s)."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void flush(Context context)"
  desc: "Tells a Cache to write all dirty data to the Storage Target(s). During the flush, clients will see errors returned until the flush is complete."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.health()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.health()"
  name: "health()"
  nameWithType: "Cache.health()"
  summary: "Gets the health property: Health of the Cache."
  modifiers:
  - "abstract"
  syntax: "public abstract CacheHealth health()"
  desc: "Gets the health property: Health of the Cache."
  returns:
    description: "the health value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheHealth?alt=com.azure.resourcemanager.storagecache.models.CacheHealth&text=CacheHealth\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.id()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.id()"
  name: "id()"
  nameWithType: "Cache.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.identity()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.identity()"
  name: "identity()"
  nameWithType: "Cache.identity()"
  summary: "Gets the identity property: The identity of the cache, if configured."
  modifiers:
  - "abstract"
  syntax: "public abstract CacheIdentity identity()"
  desc: "Gets the identity property: The identity of the cache, if configured."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheIdentity?alt=com.azure.resourcemanager.storagecache.models.CacheIdentity&text=CacheIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.innerModel()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.innerModel()"
  name: "innerModel()"
  nameWithType: "Cache.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>storagecache.<wbr>fluent.<wbr>models.<wbr>Cache<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract CacheInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.storagecache.fluent.models.CacheInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.fluent.models.CacheInner?alt=com.azure.resourcemanager.storagecache.fluent.models.CacheInner&text=CacheInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.location()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.location()"
  name: "location()"
  nameWithType: "Cache.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.mountAddresses()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.mountAddresses()"
  name: "mountAddresses()"
  nameWithType: "Cache.mountAddresses()"
  summary: "Gets the mount<wbr>Addresses property: Array of IP addresses that can be used by clients mounting this Cache."
  modifiers:
  - "abstract"
  syntax: "public abstract List<String> mountAddresses()"
  desc: "Gets the mountAddresses property: Array of IP addresses that can be used by clients mounting this Cache."
  returns:
    description: "the mountAddresses value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.name()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.name()"
  name: "name()"
  nameWithType: "Cache.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.networkSettings()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.networkSettings()"
  name: "networkSettings()"
  nameWithType: "Cache.networkSettings()"
  summary: "Gets the network<wbr>Settings property: Specifies network settings of the cache."
  modifiers:
  - "abstract"
  syntax: "public abstract CacheNetworkSettings networkSettings()"
  desc: "Gets the networkSettings property: Specifies network settings of the cache."
  returns:
    description: "the networkSettings value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheNetworkSettings?alt=com.azure.resourcemanager.storagecache.models.CacheNetworkSettings&text=CacheNetworkSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.pausePrimingJob()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.pausePrimingJob()"
  name: "pausePrimingJob()"
  nameWithType: "Cache.pausePrimingJob()"
  summary: "Schedule a priming job to be paused."
  modifiers:
  - "abstract"
  syntax: "public abstract void pausePrimingJob()"
  desc: "Schedule a priming job to be paused."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.pausePrimingJob(com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.pausePrimingJob(PrimingJobIdParameter primingJobId)"
  name: "pausePrimingJob(PrimingJobIdParameter primingJobId)"
  nameWithType: "Cache.pausePrimingJob(PrimingJobIdParameter primingJobId)"
  summary: "Schedule a priming job to be paused."
  modifiers:
  - "abstract"
  parameters:
  - description: "Object containing the priming job ID."
    name: "primingJobId"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter?alt=com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter&text=PrimingJobIdParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void pausePrimingJob(PrimingJobIdParameter primingJobId)"
  desc: "Schedule a priming job to be paused."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.pausePrimingJob(com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.pausePrimingJob(PrimingJobIdParameter primingJobId, Context context)"
  name: "pausePrimingJob(PrimingJobIdParameter primingJobId, Context context)"
  nameWithType: "Cache.pausePrimingJob(PrimingJobIdParameter primingJobId, Context context)"
  summary: "Schedule a priming job to be paused."
  modifiers:
  - "abstract"
  parameters:
  - description: "Object containing the priming job ID."
    name: "primingJobId"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter?alt=com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter&text=PrimingJobIdParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void pausePrimingJob(PrimingJobIdParameter primingJobId, Context context)"
  desc: "Schedule a priming job to be paused."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.primingJobs()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.primingJobs()"
  name: "primingJobs()"
  nameWithType: "Cache.primingJobs()"
  summary: "Gets the priming<wbr>Jobs property: Specifies the priming jobs defined in the cache."
  modifiers:
  - "abstract"
  syntax: "public abstract List<PrimingJob> primingJobs()"
  desc: "Gets the primingJobs property: Specifies the priming jobs defined in the cache."
  returns:
    description: "the primingJobs value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.PrimingJob?alt=com.azure.resourcemanager.storagecache.models.PrimingJob&text=PrimingJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.provisioningState()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.provisioningState()"
  name: "provisioningState()"
  nameWithType: "Cache.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: ARM provisioning state, see https://github.<wbr>com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.<wbr>md\\#provisioningstate-property."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningStateType provisioningState()"
  desc: "Gets the provisioningState property: ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md\\#provisioningstate-property."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.ProvisioningStateType?alt=com.azure.resourcemanager.storagecache.models.ProvisioningStateType&text=ProvisioningStateType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.refresh()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.refresh()"
  name: "refresh()"
  nameWithType: "Cache.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract Cache refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.Cache?alt=com.azure.resourcemanager.storagecache.models.Cache&text=Cache\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "Cache.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Cache refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.Cache?alt=com.azure.resourcemanager.storagecache.models.Cache&text=Cache\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.region()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.region()"
  name: "region()"
  nameWithType: "Cache.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.regionName()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.regionName()"
  name: "regionName()"
  nameWithType: "Cache.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.resourceGroupName()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "Cache.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.resumePrimingJob()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.resumePrimingJob()"
  name: "resumePrimingJob()"
  nameWithType: "Cache.resumePrimingJob()"
  summary: "Resumes a paused priming job."
  modifiers:
  - "abstract"
  syntax: "public abstract void resumePrimingJob()"
  desc: "Resumes a paused priming job."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.resumePrimingJob(com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.resumePrimingJob(PrimingJobIdParameter primingJobId)"
  name: "resumePrimingJob(PrimingJobIdParameter primingJobId)"
  nameWithType: "Cache.resumePrimingJob(PrimingJobIdParameter primingJobId)"
  summary: "Resumes a paused priming job."
  modifiers:
  - "abstract"
  parameters:
  - description: "Object containing the priming job ID."
    name: "primingJobId"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter?alt=com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter&text=PrimingJobIdParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void resumePrimingJob(PrimingJobIdParameter primingJobId)"
  desc: "Resumes a paused priming job."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.resumePrimingJob(com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.resumePrimingJob(PrimingJobIdParameter primingJobId, Context context)"
  name: "resumePrimingJob(PrimingJobIdParameter primingJobId, Context context)"
  nameWithType: "Cache.resumePrimingJob(PrimingJobIdParameter primingJobId, Context context)"
  summary: "Resumes a paused priming job."
  modifiers:
  - "abstract"
  parameters:
  - description: "Object containing the priming job ID."
    name: "primingJobId"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter?alt=com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter&text=PrimingJobIdParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void resumePrimingJob(PrimingJobIdParameter primingJobId, Context context)"
  desc: "Resumes a paused priming job."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.securitySettings()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.securitySettings()"
  name: "securitySettings()"
  nameWithType: "Cache.securitySettings()"
  summary: "Gets the security<wbr>Settings property: Specifies security settings of the cache."
  modifiers:
  - "abstract"
  syntax: "public abstract CacheSecuritySettings securitySettings()"
  desc: "Gets the securitySettings property: Specifies security settings of the cache."
  returns:
    description: "the securitySettings value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheSecuritySettings?alt=com.azure.resourcemanager.storagecache.models.CacheSecuritySettings&text=CacheSecuritySettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.sku()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.sku()"
  name: "sku()"
  nameWithType: "Cache.sku()"
  summary: "Gets the sku property: SKU for the Cache."
  modifiers:
  - "abstract"
  syntax: "public abstract CacheSku sku()"
  desc: "Gets the sku property: SKU for the Cache."
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheSku?alt=com.azure.resourcemanager.storagecache.models.CacheSku&text=CacheSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.spaceAllocation()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.spaceAllocation()"
  name: "spaceAllocation()"
  nameWithType: "Cache.spaceAllocation()"
  summary: "Gets the space<wbr>Allocation property: Specifies the space allocation percentage for each storage target in the cache."
  modifiers:
  - "abstract"
  syntax: "public abstract List<StorageTargetSpaceAllocation> spaceAllocation()"
  desc: "Gets the spaceAllocation property: Specifies the space allocation percentage for each storage target in the cache."
  returns:
    description: "the spaceAllocation value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.storagecache.models.StorageTargetSpaceAllocation?alt=com.azure.resourcemanager.storagecache.models.StorageTargetSpaceAllocation&text=StorageTargetSpaceAllocation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.start()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.start()"
  name: "start()"
  nameWithType: "Cache.start()"
  summary: "Tells a Stopped state Cache to transition to Active state."
  modifiers:
  - "abstract"
  syntax: "public abstract void start()"
  desc: "Tells a Stopped state Cache to transition to Active state."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.start(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.start(Context context)"
  name: "start(Context context)"
  nameWithType: "Cache.start(Context context)"
  summary: "Tells a Stopped state Cache to transition to Active state."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void start(Context context)"
  desc: "Tells a Stopped state Cache to transition to Active state."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.startPrimingJob()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.startPrimingJob()"
  name: "startPrimingJob()"
  nameWithType: "Cache.startPrimingJob()"
  summary: "Create a priming job."
  modifiers:
  - "abstract"
  syntax: "public abstract void startPrimingJob()"
  desc: "Create a priming job. This operation is only allowed when the cache is healthy."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.startPrimingJob(com.azure.resourcemanager.storagecache.models.PrimingJob)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.startPrimingJob(PrimingJob primingjob)"
  name: "startPrimingJob(PrimingJob primingjob)"
  nameWithType: "Cache.startPrimingJob(PrimingJob primingjob)"
  summary: "Create a priming job."
  modifiers:
  - "abstract"
  parameters:
  - description: "Object containing the definition of a priming job."
    name: "primingjob"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.PrimingJob?alt=com.azure.resourcemanager.storagecache.models.PrimingJob&text=PrimingJob\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void startPrimingJob(PrimingJob primingjob)"
  desc: "Create a priming job. This operation is only allowed when the cache is healthy."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.startPrimingJob(com.azure.resourcemanager.storagecache.models.PrimingJob,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.startPrimingJob(PrimingJob primingjob, Context context)"
  name: "startPrimingJob(PrimingJob primingjob, Context context)"
  nameWithType: "Cache.startPrimingJob(PrimingJob primingjob, Context context)"
  summary: "Create a priming job."
  modifiers:
  - "abstract"
  parameters:
  - description: "Object containing the definition of a priming job."
    name: "primingjob"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.PrimingJob?alt=com.azure.resourcemanager.storagecache.models.PrimingJob&text=PrimingJob\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void startPrimingJob(PrimingJob primingjob, Context context)"
  desc: "Create a priming job. This operation is only allowed when the cache is healthy."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.stop()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.stop()"
  name: "stop()"
  nameWithType: "Cache.stop()"
  summary: "Tells an Active Cache to transition to Stopped state."
  modifiers:
  - "abstract"
  syntax: "public abstract void stop()"
  desc: "Tells an Active Cache to transition to Stopped state."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.stop(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.stop(Context context)"
  name: "stop(Context context)"
  nameWithType: "Cache.stop(Context context)"
  summary: "Tells an Active Cache to transition to Stopped state."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void stop(Context context)"
  desc: "Tells an Active Cache to transition to Stopped state."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.stopPrimingJob()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.stopPrimingJob()"
  name: "stopPrimingJob()"
  nameWithType: "Cache.stopPrimingJob()"
  summary: "Schedule a priming job for deletion."
  modifiers:
  - "abstract"
  syntax: "public abstract void stopPrimingJob()"
  desc: "Schedule a priming job for deletion."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.stopPrimingJob(com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.stopPrimingJob(PrimingJobIdParameter primingJobId)"
  name: "stopPrimingJob(PrimingJobIdParameter primingJobId)"
  nameWithType: "Cache.stopPrimingJob(PrimingJobIdParameter primingJobId)"
  summary: "Schedule a priming job for deletion."
  modifiers:
  - "abstract"
  parameters:
  - description: "Object containing the priming job ID."
    name: "primingJobId"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter?alt=com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter&text=PrimingJobIdParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void stopPrimingJob(PrimingJobIdParameter primingJobId)"
  desc: "Schedule a priming job for deletion."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.stopPrimingJob(com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.stopPrimingJob(PrimingJobIdParameter primingJobId, Context context)"
  name: "stopPrimingJob(PrimingJobIdParameter primingJobId, Context context)"
  nameWithType: "Cache.stopPrimingJob(PrimingJobIdParameter primingJobId, Context context)"
  summary: "Schedule a priming job for deletion."
  modifiers:
  - "abstract"
  parameters:
  - description: "Object containing the priming job ID."
    name: "primingJobId"
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter?alt=com.azure.resourcemanager.storagecache.models.PrimingJobIdParameter&text=PrimingJobIdParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void stopPrimingJob(PrimingJobIdParameter primingJobId, Context context)"
  desc: "Schedule a priming job for deletion."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.subnet()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.subnet()"
  name: "subnet()"
  nameWithType: "Cache.subnet()"
  summary: "Gets the subnet property: Subnet used for the Cache."
  modifiers:
  - "abstract"
  syntax: "public abstract String subnet()"
  desc: "Gets the subnet property: Subnet used for the Cache."
  returns:
    description: "the subnet value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.systemData()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.systemData()"
  name: "systemData()"
  nameWithType: "Cache.systemData()"
  summary: "Gets the system<wbr>Data property: The system meta data relating to this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: The system meta data relating to this resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.tags()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.tags()"
  name: "tags()"
  nameWithType: "Cache.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.type()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.type()"
  name: "type()"
  nameWithType: "Cache.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.update()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.update()"
  name: "update()"
  nameWithType: "Cache.update()"
  summary: "Begins update for the Cache resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Cache.Update update()"
  desc: "Begins update for the Cache resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.Cache.Update?alt=com.azure.resourcemanager.storagecache.models.Cache.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.upgradeFirmware()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.upgradeFirmware()"
  name: "upgradeFirmware()"
  nameWithType: "Cache.upgradeFirmware()"
  summary: "Upgrade a Cache's firmware if a new version is available."
  modifiers:
  - "abstract"
  syntax: "public abstract void upgradeFirmware()"
  desc: "Upgrade a Cache's firmware if a new version is available. Otherwise, this operation has no effect."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.upgradeFirmware(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.upgradeFirmware(Context context)"
  name: "upgradeFirmware(Context context)"
  nameWithType: "Cache.upgradeFirmware(Context context)"
  summary: "Upgrade a Cache's firmware if a new version is available."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void upgradeFirmware(Context context)"
  desc: "Upgrade a Cache's firmware if a new version is available. Otherwise, this operation has no effect."
- uid: "com.azure.resourcemanager.storagecache.models.Cache.upgradeSettings()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.upgradeSettings()"
  name: "upgradeSettings()"
  nameWithType: "Cache.upgradeSettings()"
  summary: "Gets the upgrade<wbr>Settings property: Upgrade settings of the Cache."
  modifiers:
  - "abstract"
  syntax: "public abstract CacheUpgradeSettings upgradeSettings()"
  desc: "Gets the upgradeSettings property: Upgrade settings of the Cache."
  returns:
    description: "the upgradeSettings value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUpgradeSettings?alt=com.azure.resourcemanager.storagecache.models.CacheUpgradeSettings&text=CacheUpgradeSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.upgradeStatus()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.upgradeStatus()"
  name: "upgradeStatus()"
  nameWithType: "Cache.upgradeStatus()"
  summary: "Gets the upgrade<wbr>Status property: Upgrade status of the Cache."
  modifiers:
  - "abstract"
  syntax: "public abstract CacheUpgradeStatus upgradeStatus()"
  desc: "Gets the upgradeStatus property: Upgrade status of the Cache."
  returns:
    description: "the upgradeStatus value."
    type: "<xref href=\"com.azure.resourcemanager.storagecache.models.CacheUpgradeStatus?alt=com.azure.resourcemanager.storagecache.models.CacheUpgradeStatus&text=CacheUpgradeStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storagecache.models.Cache.zones()"
  fullName: "com.azure.resourcemanager.storagecache.models.Cache.zones()"
  name: "zones()"
  nameWithType: "Cache.zones()"
  summary: "Gets the zones property: Availability zones for resources."
  modifiers:
  - "abstract"
  syntax: "public abstract List<String> zones()"
  desc: "Gets the zones property: Availability zones for resources. This field should only contain a single element in the array."
  returns:
    description: "the zones value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An immutable client-side representation of Cache."
metadata: {}
package: "com.azure.resourcemanager.storagecache.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storagecache:1.0.0-beta.6
