### YamlMime:ManagedReference
items:
- uid: com.azure.spring.cloud.context.core.api.ResourceManager
  id: ResourceManager
  artifact: com.azure.spring:azure-spring-cloud-context:2.0.0-beta.1
  parent: com.azure.spring.cloud.context.core.api
  children:
  - com.azure.spring.cloud.context.core.api.ResourceManager.create(K)
  - com.azure.spring.cloud.context.core.api.ResourceManager.exists(K)
  - com.azure.spring.cloud.context.core.api.ResourceManager.get(K)
  - com.azure.spring.cloud.context.core.api.ResourceManager.getOrCreate(K)
  langs:
  - java
  name: ResourceManager<T,K>
  nameWithType: ResourceManager<T,K>
  fullName: com.azure.spring.cloud.context.core.api.ResourceManager<T,K>
  type: Interface
  package: com.azure.spring.cloud.context.core.api
  summary: Interface to support CRUD of Azure Resource
  syntax:
    content: public interface ResourceManager<T,K>
    typeParameters:
    - id: T
    - id: K
- uid: com.azure.spring.cloud.context.core.api.ResourceManager.create(K)
  id: create(K)
  artifact: com.azure.spring:azure-spring-cloud-context:2.0.0-beta.1
  parent: com.azure.spring.cloud.context.core.api.ResourceManager
  langs:
  - java
  name: create(K key)
  nameWithType: ResourceManager<T,K>.create(K key)
  fullName: com.azure.spring.cloud.context.core.api.ResourceManager<T,K>.create(K key)
  overload: com.azure.spring.cloud.context.core.api.ResourceManager.create*
  type: Method
  package: com.azure.spring.cloud.context.core.api
  syntax:
    content: public abstract T create(K key)
    parameters:
    - id: key
      type: K
    return:
      type: T
- uid: com.azure.spring.cloud.context.core.api.ResourceManager.exists(K)
  id: exists(K)
  artifact: com.azure.spring:azure-spring-cloud-context:2.0.0-beta.1
  parent: com.azure.spring.cloud.context.core.api.ResourceManager
  langs:
  - java
  name: exists(K key)
  nameWithType: ResourceManager<T,K>.exists(K key)
  fullName: com.azure.spring.cloud.context.core.api.ResourceManager<T,K>.exists(K key)
  overload: com.azure.spring.cloud.context.core.api.ResourceManager.exists*
  type: Method
  package: com.azure.spring.cloud.context.core.api
  syntax:
    content: public abstract boolean exists(K key)
    parameters:
    - id: key
      type: K
    return:
      type: boolean
- uid: com.azure.spring.cloud.context.core.api.ResourceManager.get(K)
  id: get(K)
  artifact: com.azure.spring:azure-spring-cloud-context:2.0.0-beta.1
  parent: com.azure.spring.cloud.context.core.api.ResourceManager
  langs:
  - java
  name: get(K key)
  nameWithType: ResourceManager<T,K>.get(K key)
  fullName: com.azure.spring.cloud.context.core.api.ResourceManager<T,K>.get(K key)
  overload: com.azure.spring.cloud.context.core.api.ResourceManager.get*
  type: Method
  package: com.azure.spring.cloud.context.core.api
  syntax:
    content: public abstract T get(K key)
    parameters:
    - id: key
      type: K
    return:
      type: T
- uid: com.azure.spring.cloud.context.core.api.ResourceManager.getOrCreate(K)
  id: getOrCreate(K)
  artifact: com.azure.spring:azure-spring-cloud-context:2.0.0-beta.1
  parent: com.azure.spring.cloud.context.core.api.ResourceManager
  langs:
  - java
  name: getOrCreate(K key)
  nameWithType: ResourceManager<T,K>.getOrCreate(K key)
  fullName: com.azure.spring.cloud.context.core.api.ResourceManager<T,K>.getOrCreate(K key)
  overload: com.azure.spring.cloud.context.core.api.ResourceManager.getOrCreate*
  type: Method
  package: com.azure.spring.cloud.context.core.api
  syntax:
    content: public abstract T getOrCreate(K key)
    parameters:
    - id: key
      type: K
    return:
      type: T
references:
- uid: K
  spec.java:
  - uid: K
    name: K
    fullName: K
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.spring.cloud.context.core.api.ResourceManager.get*
  name: get
  nameWithType: ResourceManager<T,K>.get
  fullName: com.azure.spring.cloud.context.core.api.ResourceManager<T,K>.get
  package: com.azure.spring.cloud.context.core.api
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.spring.cloud.context.core.api.ResourceManager.exists*
  name: exists
  nameWithType: ResourceManager<T,K>.exists
  fullName: com.azure.spring.cloud.context.core.api.ResourceManager<T,K>.exists
  package: com.azure.spring.cloud.context.core.api
- uid: com.azure.spring.cloud.context.core.api.ResourceManager.create*
  name: create
  nameWithType: ResourceManager<T,K>.create
  fullName: com.azure.spring.cloud.context.core.api.ResourceManager<T,K>.create
  package: com.azure.spring.cloud.context.core.api
- uid: com.azure.spring.cloud.context.core.api.ResourceManager.getOrCreate*
  name: getOrCreate
  nameWithType: ResourceManager<T,K>.getOrCreate
  fullName: com.azure.spring.cloud.context.core.api.ResourceManager<T,K>.getOrCreate
  package: com.azure.spring.cloud.context.core.api
