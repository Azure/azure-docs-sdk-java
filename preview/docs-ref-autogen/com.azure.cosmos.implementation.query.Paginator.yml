### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.query.Paginator
  id: Paginator
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query
  children:
  - com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedChangeFeedQueryResultAsObservable(com.azure.cosmos.implementation.ChangeFeedOptions,java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.Class<T>,int)
  - com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedQueryResultAsObservable(com.azure.cosmos.models.CosmosQueryRequestOptions,java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.Class<T>,int)
  - com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedQueryResultAsObservable(java.lang.String,java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.Class<T>,int,int)
  - com.azure.cosmos.implementation.query.Paginator.Paginator()
  langs:
  - java
  name: Paginator
  nameWithType: Paginator
  fullName: com.azure.cosmos.implementation.query.Paginator
  type: Class
  package: com.azure.cosmos.implementation.query
  summary: While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk.
  syntax:
    content: public class Paginator
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedChangeFeedQueryResultAsObservable(com.azure.cosmos.implementation.ChangeFeedOptions,java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.Class<T>,int)
  id: <T>getPaginatedChangeFeedQueryResultAsObservable(com.azure.cosmos.implementation.ChangeFeedOptions,java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.Class<T>,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.Paginator
  langs:
  - java
  name: <T>getPaginatedChangeFeedQueryResultAsObservable(ChangeFeedOptions feedOptions, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int maxPageSize)
  nameWithType: Paginator.<T>getPaginatedChangeFeedQueryResultAsObservable(ChangeFeedOptions feedOptions, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int maxPageSize)
  fullName: com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedChangeFeedQueryResultAsObservable(ChangeFeedOptions feedOptions, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int maxPageSize)
  overload: com.azure.cosmos.implementation.query.Paginator.getPaginatedChangeFeedQueryResultAsObservable*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public static Flux<FeedResponse<T>> <T>getPaginatedChangeFeedQueryResultAsObservable(ChangeFeedOptions feedOptions, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int maxPageSize)
    parameters:
    - id: feedOptions
      type: com.azure.cosmos.implementation.ChangeFeedOptions
    - id: createRequestFunc
      type: java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>
    - id: executeFunc
      type: java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>
    - id: resourceType
      type: java.lang.Class<T>
    - id: maxPageSize
      type: int
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
- uid: com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedQueryResultAsObservable(com.azure.cosmos.models.CosmosQueryRequestOptions,java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.Class<T>,int)
  id: <T>getPaginatedQueryResultAsObservable(com.azure.cosmos.models.CosmosQueryRequestOptions,java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.Class<T>,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.Paginator
  langs:
  - java
  name: <T>getPaginatedQueryResultAsObservable(CosmosQueryRequestOptions cosmosQueryRequestOptions, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int maxPageSize)
  nameWithType: Paginator.<T>getPaginatedQueryResultAsObservable(CosmosQueryRequestOptions cosmosQueryRequestOptions, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int maxPageSize)
  fullName: com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedQueryResultAsObservable(CosmosQueryRequestOptions cosmosQueryRequestOptions, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int maxPageSize)
  overload: com.azure.cosmos.implementation.query.Paginator.getPaginatedQueryResultAsObservable*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public static Flux<FeedResponse<T>> <T>getPaginatedQueryResultAsObservable(CosmosQueryRequestOptions cosmosQueryRequestOptions, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int maxPageSize)
    parameters:
    - id: cosmosQueryRequestOptions
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
    - id: createRequestFunc
      type: java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>
    - id: executeFunc
      type: java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>
    - id: resourceType
      type: java.lang.Class<T>
    - id: maxPageSize
      type: int
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
- uid: com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedQueryResultAsObservable(java.lang.String,java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.Class<T>,int,int)
  id: <T>getPaginatedQueryResultAsObservable(java.lang.String,java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.Class<T>,int,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.Paginator
  langs:
  - java
  name: <T>getPaginatedQueryResultAsObservable(String continuationToken, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int top, int maxPageSize)
  nameWithType: Paginator.<T>getPaginatedQueryResultAsObservable(String continuationToken, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int top, int maxPageSize)
  fullName: com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedQueryResultAsObservable(String continuationToken, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int top, int maxPageSize)
  overload: com.azure.cosmos.implementation.query.Paginator.getPaginatedQueryResultAsObservable*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public static Flux<FeedResponse<T>> <T>getPaginatedQueryResultAsObservable(String continuationToken, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int top, int maxPageSize)
    parameters:
    - id: continuationToken
      type: java.lang.String
    - id: createRequestFunc
      type: java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>
    - id: executeFunc
      type: java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>
    - id: resourceType
      type: java.lang.Class<T>
    - id: top
      type: int
    - id: maxPageSize
      type: int
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
- uid: com.azure.cosmos.implementation.query.Paginator.Paginator()
  id: Paginator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.Paginator
  langs:
  - java
  name: Paginator()
  nameWithType: Paginator.Paginator()
  fullName: com.azure.cosmos.implementation.query.Paginator.Paginator()
  overload: com.azure.cosmos.implementation.query.Paginator.Paginator*
  type: Constructor
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public Paginator()
references:
- uid: com.azure.cosmos.implementation.query.Paginator.Paginator*
  name: Paginator
  nameWithType: Paginator.Paginator
  fullName: com.azure.cosmos.implementation.query.Paginator.Paginator
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.ChangeFeedOptions
  name: ChangeFeedOptions
  nameWithType: ChangeFeedOptions
  fullName: com.azure.cosmos.implementation.ChangeFeedOptions
- uid: java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>
  spec.java:
  - uid: java.util.function.BiFunction
    name: BiFunction
    fullName: java.util.function.BiFunction
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
  - name: ','
    fullName: ','
  - uid: com.azure.cosmos.implementation.RxDocumentServiceRequest
    name: RxDocumentServiceRequest
    fullName: com.azure.cosmos.implementation.RxDocumentServiceRequest
  - name: '>'
    fullName: '>'
- uid: java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>
  spec.java:
  - uid: java.util.function.Function
    name: Function
    fullName: java.util.function.Function
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.RxDocumentServiceRequest
    name: RxDocumentServiceRequest
    fullName: com.azure.cosmos.implementation.RxDocumentServiceRequest
  - name: ','
    fullName: ','
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.Paginator.getPaginatedChangeFeedQueryResultAsObservable*
  name: <T>getPaginatedChangeFeedQueryResultAsObservable
  nameWithType: Paginator.<T>getPaginatedChangeFeedQueryResultAsObservable
  fullName: com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedChangeFeedQueryResultAsObservable
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions
  name: CosmosQueryRequestOptions
  nameWithType: CosmosQueryRequestOptions
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions
- uid: com.azure.cosmos.implementation.query.Paginator.getPaginatedQueryResultAsObservable*
  name: <T>getPaginatedQueryResultAsObservable
  nameWithType: Paginator.<T>getPaginatedQueryResultAsObservable
  fullName: com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedQueryResultAsObservable
  package: com.azure.cosmos.implementation.query
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.function.BiFunction
  name: BiFunction
  nameWithType: BiFunction
  fullName: java.util.function.BiFunction
- uid: java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest
  name: String,Integer,RxDocumentServiceRequest
  nameWithType: String,Integer,RxDocumentServiceRequest
  fullName: java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest
- uid: com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono
  name: RxDocumentServiceRequest,Mono
  nameWithType: RxDocumentServiceRequest,Mono
  fullName: com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: com.azure.cosmos.models.FeedResponse
  name: FeedResponse
  nameWithType: FeedResponse
  fullName: com.azure.cosmos.models.FeedResponse
- uid: java.util.function.Function
  name: Function
  nameWithType: Function
  fullName: java.util.function.Function
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
