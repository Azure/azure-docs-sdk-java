### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions.setContinueOnFailure*"
fullName: "com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions.setContinueOnFailure"
name: "setContinueOnFailure"
nameWithType: "PathSetAccessControlRecursiveOptions.setContinueOnFailure"
members:
- uid: "com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions.setContinueOnFailure(boolean)"
  fullName: "com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions.setContinueOnFailure(boolean continueOnFailure)"
  name: "setContinueOnFailure(boolean continueOnFailure)"
  nameWithType: "PathSetAccessControlRecursiveOptions.setContinueOnFailure(boolean continueOnFailure)"
  summary: "Sets if the operation should continue on user failure.\n\nIf set to false, the operation will terminate quickly on encountering user failures. If true, the operation will ignore user failures and proceed with the operation on other sub-entities of the directory."
  parameters:
  - description: "Whether the operation should continue on user failure."
    name: "continueOnFailure"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathSetAccessControlRecursiveOptions setContinueOnFailure(boolean continueOnFailure)"
  returns:
    description: "The updated object."
    type: "<xref href=\"com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions?alt=com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions&text=PathSetAccessControlRecursiveOptions\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.options"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
