### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  id: AsArrayTypeDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl
  children:
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.AsArrayTypeDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.AsArrayTypeDeserializer(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._usesExternalId()
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.getTypeInclusion()
  langs:
  - java
  name: AsArrayTypeDeserializer
  nameWithType: AsArrayTypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  type: Class
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: 'Type deserializer used with <xref uid="" data-throw-if-not-resolved="false">As#WRAPPER_ARRAY</xref> inclusion mechanism. Simple since JSON structure used is always the same, regardless of structure used for actual value: wrapping is done using a 2-element JSON Array where type id is the first element, and actual object data as second element.'
  syntax:
    content: public class AsArrayTypeDeserializer extends TypeDeserializerBase implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeInclusion()
  - com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.AsArrayTypeDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)
  id: AsArrayTypeDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  langs:
  - java
  name: AsArrayTypeDeserializer(JavaType bt, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl)
  nameWithType: AsArrayTypeDeserializer.AsArrayTypeDeserializer(JavaType bt, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.AsArrayTypeDeserializer(JavaType bt, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.AsArrayTypeDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public AsArrayTypeDeserializer(JavaType bt, TypeIdResolver idRes, String typePropertyName, boolean typeIdVisible, JavaType defaultImpl)
    parameters:
    - id: bt
      type: com.fasterxml.jackson.databind.JavaType
    - id: idRes
      type: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
    - id: typePropertyName
      type: java.lang.String
    - id: typeIdVisible
      type: boolean
    - id: defaultImpl
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.AsArrayTypeDeserializer(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
  id: AsArrayTypeDeserializer(com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  langs:
  - java
  name: AsArrayTypeDeserializer(AsArrayTypeDeserializer src, BeanProperty property)
  nameWithType: AsArrayTypeDeserializer.AsArrayTypeDeserializer(AsArrayTypeDeserializer src, BeanProperty property)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.AsArrayTypeDeserializer(AsArrayTypeDeserializer src, BeanProperty property)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.AsArrayTypeDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: public AsArrayTypeDeserializer(AsArrayTypeDeserializer src, BeanProperty property)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
    - id: property
      type: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  langs:
  - java
  name: _deserialize(JsonParser p, DeserializationContext ctxt)
  nameWithType: AsArrayTypeDeserializer._deserialize(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method that handles type information wrapper, locates actual subtype deserializer to use, and calls it to do actual deserialization.
  syntax:
    content: protected Object _deserialize(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: _locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  langs:
  - java
  name: _locateTypeId(JsonParser p, DeserializationContext ctxt)
  nameWithType: AsArrayTypeDeserializer._locateTypeId(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected String _locateTypeId(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._usesExternalId()
  id: _usesExternalId()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  langs:
  - java
  name: _usesExternalId()
  nameWithType: AsArrayTypeDeserializer._usesExternalId()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._usesExternalId()
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._usesExternalId*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  syntax:
    content: protected boolean _usesExternalId()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  langs:
  - java
  name: deserializeTypedFromAny(JsonParser jp, DeserializationContext ctxt)
  nameWithType: AsArrayTypeDeserializer.deserializeTypedFromAny(JsonParser jp, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny(JsonParser jp, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method called to let this type deserializer handle deserialization of "typed" object, when value itself may have been serialized using any kind of JSON value (Array, Object, scalar). Should only be called if JSON serialization is polymorphic (not Java type); for example when using JSON node representation, or "untyped" Java object (which may be Map, Collection, wrapper/primitive etc).
  syntax:
    content: public Object deserializeTypedFromAny(JsonParser jp, DeserializationContext ctxt)
    parameters:
    - id: jp
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  langs:
  - java
  name: deserializeTypedFromArray(JsonParser jp, DeserializationContext ctxt)
  nameWithType: AsArrayTypeDeserializer.deserializeTypedFromArray(JsonParser jp, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(JsonParser jp, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method called when actual object is serialized as JSON Array.
  syntax:
    content: public Object deserializeTypedFromArray(JsonParser jp, DeserializationContext ctxt)
    parameters:
    - id: jp
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  langs:
  - java
  name: deserializeTypedFromObject(JsonParser jp, DeserializationContext ctxt)
  nameWithType: AsArrayTypeDeserializer.deserializeTypedFromObject(JsonParser jp, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromObject(JsonParser jp, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromObject*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method called when actual object is serialized as JSON Object
  syntax:
    content: public Object deserializeTypedFromObject(JsonParser jp, DeserializationContext ctxt)
    parameters:
    - id: jp
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  langs:
  - java
  name: deserializeTypedFromScalar(JsonParser jp, DeserializationContext ctxt)
  nameWithType: AsArrayTypeDeserializer.deserializeTypedFromScalar(JsonParser jp, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar(JsonParser jp, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method called to let this type deserializer handle deserialization of "typed" object, when value itself is serialized as a scalar JSON value (something other than Array or Object), regardless of Java type. Method needs to figure out intended polymorphic type, locate <xref uid="com.fasterxml.jackson.databind.JsonDeserializer" data-throw-if-not-resolved="false">JsonDeserializer</xref> to use, and call it with JSON data to deserializer (which does not contain type information).
  syntax:
    content: public Object deserializeTypedFromScalar(JsonParser jp, DeserializationContext ctxt)
    parameters:
    - id: jp
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  id: forProperty(com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  langs:
  - java
  name: forProperty(BeanProperty prop)
  nameWithType: AsArrayTypeDeserializer.forProperty(BeanProperty prop)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.forProperty(BeanProperty prop)
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.forProperty*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Method called to create contextual version, to be used for values of given property. This may be the type itself (as is the case for bean properties), or values contained (for <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> or <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> valued properties).
  syntax:
    content: public TypeDeserializer forProperty(BeanProperty prop)
    parameters:
    - id: prop
      type: com.fasterxml.jackson.databind.BeanProperty
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.getTypeInclusion()
  id: getTypeInclusion()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer
  langs:
  - java
  name: getTypeInclusion()
  nameWithType: AsArrayTypeDeserializer.getTypeInclusion()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.getTypeInclusion()
  overload: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.getTypeInclusion*
  type: Method
  package: com.fasterxml.jackson.databind.jsontype.impl
  summary: Accessor for type information inclusion method that deserializer uses; indicates how type information is (expected to be) embedded in JSON input.
  syntax:
    content: public JsonTypeInfo.As getTypeInclusion()
    return:
      type: com.fasterxml.jackson.annotation.JsonTypeInfo.As
references:
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
  name: TypeIdResolver
  nameWithType: TypeIdResolver
  fullName: com.fasterxml.jackson.databind.jsontype.TypeIdResolver
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.AsArrayTypeDeserializer*
  name: AsArrayTypeDeserializer
  nameWithType: AsArrayTypeDeserializer.AsArrayTypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.AsArrayTypeDeserializer
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  name: TypeDeserializer
  nameWithType: TypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.forProperty*
  name: forProperty
  nameWithType: AsArrayTypeDeserializer.forProperty
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.forProperty
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.annotation.JsonTypeInfo.As
  name: JsonTypeInfo.As
  nameWithType: JsonTypeInfo.As
  fullName: com.fasterxml.jackson.annotation.JsonTypeInfo.As
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.getTypeInclusion*
  name: getTypeInclusion
  nameWithType: AsArrayTypeDeserializer.getTypeInclusion
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.getTypeInclusion
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray*
  name: deserializeTypedFromArray
  nameWithType: AsArrayTypeDeserializer.deserializeTypedFromArray
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromObject*
  name: deserializeTypedFromObject
  nameWithType: AsArrayTypeDeserializer.deserializeTypedFromObject
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromObject
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar*
  name: deserializeTypedFromScalar
  nameWithType: AsArrayTypeDeserializer.deserializeTypedFromScalar
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromScalar
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny*
  name: deserializeTypedFromAny
  nameWithType: AsArrayTypeDeserializer.deserializeTypedFromAny
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize*
  name: _deserialize
  nameWithType: AsArrayTypeDeserializer._deserialize
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId*
  name: _locateTypeId
  nameWithType: AsArrayTypeDeserializer._locateTypeId
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._usesExternalId*
  name: _usesExternalId
  nameWithType: AsArrayTypeDeserializer._usesExternalId
  fullName: com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._usesExternalId
  package: com.fasterxml.jackson.databind.jsontype.impl
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
  name: TypeDeserializerBase
  nameWithType: TypeDeserializerBase
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: TypeDeserializerBase._handleMissingTypeId(DeserializationContext,String)
  nameWithType: TypeDeserializerBase._handleMissingTypeId(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleMissingTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeInclusion()
  name: TypeDeserializerBase.getTypeInclusion()
  nameWithType: TypeDeserializerBase.getTypeInclusion()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeInclusion()
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl()
  name: TypeDeserializerBase.getDefaultImpl()
  nameWithType: TypeDeserializerBase.getDefaultImpl()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getDefaultImpl()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser,DeserializationContext)
  nameWithType: TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName()
  name: TypeDeserializerBase.baseTypeName()
  nameWithType: TypeDeserializerBase.baseTypeName()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseTypeName()
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: TypeDeserializer.deserializeTypedFromAny(JsonParser,DeserializationContext)
  nameWithType: TypeDeserializer.deserializeTypedFromAny(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
  name: TypeDeserializerBase._findDefaultImplDeserializer(DeserializationContext)
  nameWithType: TypeDeserializerBase._findDefaultImplDeserializer(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: TypeDeserializerBase._handleUnknownTypeId(DeserializationContext,String)
  nameWithType: TypeDeserializerBase._handleUnknownTypeId(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  name: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,JavaType)
  nameWithType: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,JavaType)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName()
  name: TypeDeserializerBase.getPropertyName()
  nameWithType: TypeDeserializerBase.getPropertyName()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getPropertyName()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: TypeDeserializer.deserializeTypedFromScalar(JsonParser,DeserializationContext)
  nameWithType: TypeDeserializer.deserializeTypedFromScalar(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver()
  name: TypeDeserializerBase.getTypeIdResolver()
  nameWithType: TypeDeserializerBase.getTypeIdResolver()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.getTypeIdResolver()
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.forProperty(com.fasterxml.jackson.databind.BeanProperty)
  name: TypeDeserializerBase.forProperty(BeanProperty)
  nameWithType: TypeDeserializerBase.forProperty(BeanProperty)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.forProperty(com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString()
  name: TypeDeserializerBase.toString()
  nameWithType: TypeDeserializerBase.toString()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.toString()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: TypeDeserializer.deserializeTypedFromArray(JsonParser,DeserializationContext)
  nameWithType: TypeDeserializer.deserializeTypedFromArray(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: TypeDeserializerBase._findDeserializer(DeserializationContext,String)
  nameWithType: TypeDeserializerBase._findDeserializer(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  name: TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser,DeserializationContext,Object)
  nameWithType: TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser,DeserializationContext,Object)
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: TypeDeserializer.deserializeTypedFromObject(JsonParser,DeserializationContext)
  nameWithType: TypeDeserializer.deserializeTypedFromObject(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType()
  name: TypeDeserializerBase.baseType()
  nameWithType: TypeDeserializerBase.baseType()
  fullName: com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.baseType()
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>)
  name: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,Class<?>)
  nameWithType: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,Class<?>)
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class
  name: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,Class
  nameWithType: TypeDeserializer.deserializeIfNatural(JsonParser,DeserializationContext,Class
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
