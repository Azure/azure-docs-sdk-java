### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.MappingIterator.readAll*"
fullName: "com.fasterxml.jackson.databind.MappingIterator<T>.<C>readAll"
name: "<C>readAll"
nameWithType: "MappingIterator<T>.<C>readAll"
members:
- uid: "com.fasterxml.jackson.databind.MappingIterator.<C>readAll(C)"
  fullName: "com.fasterxml.jackson.databind.MappingIterator<T>.<C>readAll(C results)"
  name: "<C>readAll(C results)"
  nameWithType: "MappingIterator<T>.<C>readAll(C results)"
  summary: "Convenience method for reading all entries accessible via this iterator"
  parameters:
  - name: "results"
    type: "<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public C <C>readAll(C results)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.MappingIterator.<L>readAll(L)"
  fullName: "com.fasterxml.jackson.databind.MappingIterator<T>.<L>readAll(L resultList)"
  name: "<L>readAll(L resultList)"
  nameWithType: "MappingIterator<T>.<L>readAll(L resultList)"
  summary: "Convenience method for reading all entries accessible via this iterator"
  parameters:
  - name: "resultList"
    type: "<xref href=\"L?alt=L&text=L\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public L <L>readAll(L resultList)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "List of entries read (same as passed-in argument)"
    type: "<xref href=\"L?alt=L&text=L\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.MappingIterator.readAll()"
  fullName: "com.fasterxml.jackson.databind.MappingIterator<T>.readAll()"
  name: "readAll()"
  nameWithType: "MappingIterator<T>.readAll()"
  summary: "Convenience method for reading all entries accessible via this iterator; resulting container will be a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.ArrayList\"></xref>."
  syntax: "public List<T> readAll()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "List of entries read"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
