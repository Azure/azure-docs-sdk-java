### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.models.IndexingPolicy"
  id: "IndexingPolicy"
  parent: "com.azure.cosmos.models"
  children:
  - "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy()"
  - "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy(com.azure.cosmos.models.Index[])"
  - "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy(java.lang.String)"
  - "com.azure.cosmos.models.IndexingPolicy.getAutomatic()"
  - "com.azure.cosmos.models.IndexingPolicy.getCompositeIndexes()"
  - "com.azure.cosmos.models.IndexingPolicy.getExcludedPaths()"
  - "com.azure.cosmos.models.IndexingPolicy.getIncludedPaths()"
  - "com.azure.cosmos.models.IndexingPolicy.getIndexingMode()"
  - "com.azure.cosmos.models.IndexingPolicy.getSpatialIndexes()"
  - "com.azure.cosmos.models.IndexingPolicy.populatePropertyBag()"
  - "com.azure.cosmos.models.IndexingPolicy.setAutomatic(boolean)"
  - "com.azure.cosmos.models.IndexingPolicy.setCompositeIndexes(java.util.List<java.util.List<com.azure.cosmos.models.CompositePath>>)"
  - "com.azure.cosmos.models.IndexingPolicy.setExcludedPaths(java.util.List<com.azure.cosmos.models.ExcludedPath>)"
  - "com.azure.cosmos.models.IndexingPolicy.setIncludedPaths(java.util.List<com.azure.cosmos.models.IncludedPath>)"
  - "com.azure.cosmos.models.IndexingPolicy.setIndexingMode(com.azure.cosmos.models.IndexingMode)"
  - "com.azure.cosmos.models.IndexingPolicy.setSpatialIndexes(java.util.List<com.azure.cosmos.models.SpatialSpec>)"
  langs:
  - "java"
  name: "IndexingPolicy"
  nameWithType: "IndexingPolicy"
  fullName: "com.azure.cosmos.models.IndexingPolicy"
  type: "Class"
  package: "com.azure.cosmos.models"
  summary: "Represents the indexing policy configuration for a collection in the Azure Cosmos DB database service."
  syntax:
    content: "public final class IndexingPolicy extends JsonSerializable"
  inheritance:
  - "java.lang.Object"
  - "com.azure.cosmos.models.JsonSerializable"
  inheritedMembers:
  - "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
  - "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  - "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getLogger()"
  - "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getMap()"
  - "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  - "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
  - "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  - "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
  - "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
  - "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.models.JsonSerializable.toJson()"
  - "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
  - "com.azure.cosmos.models.JsonSerializable.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy()"
  id: "IndexingPolicy()"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "IndexingPolicy()"
  nameWithType: "IndexingPolicy.IndexingPolicy()"
  fullName: "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy()"
  overload: "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  summary: "Constructor."
  syntax:
    content: "public IndexingPolicy()"
- uid: "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy(com.azure.cosmos.models.Index[])"
  id: "IndexingPolicy(com.azure.cosmos.models.Index[])"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "IndexingPolicy(Index[] defaultIndexOverrides)"
  nameWithType: "IndexingPolicy.IndexingPolicy(Index[] defaultIndexOverrides)"
  fullName: "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy(Index[] defaultIndexOverrides)"
  overload: "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  summary: "Initializes a new instance of the IndexingPolicy class with the specified set of indexes as default index specifications for the root path.\n\nThe following example shows how to override the default indexingPolicy for root path:\n\n```java\nHashIndex hashIndexOverride = Index.HASH(DataType.STRING, 5);\n RangeIndex rangeIndexOverride = Index.RANGE(DataType.NUMBER, 2);\n SpatialIndex spatialIndexOverride = Index.SPATIAL(DataType.POINT);\n\n IndexingPolicy indexingPolicy = new IndexingPolicy(hashIndexOverride, rangeIndexOverride, spatialIndexOverride);\n```"
  syntax:
    content: "public IndexingPolicy(Index[] defaultIndexOverrides)"
    parameters:
    - id: "defaultIndexOverrides"
      type: "com.azure.cosmos.models.Index[]"
      description: "comma separated set of indexes that serve as default index specifications for the\n root path."
- uid: "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy(java.lang.String)"
  id: "IndexingPolicy(java.lang.String)"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "IndexingPolicy(String jsonString)"
  nameWithType: "IndexingPolicy.IndexingPolicy(String jsonString)"
  fullName: "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy(String jsonString)"
  overload: "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  summary: "Constructor."
  syntax:
    content: " IndexingPolicy(String jsonString)"
    parameters:
    - id: "jsonString"
      type: "java.lang.String"
      description: "the json string that represents the indexing policy."
- uid: "com.azure.cosmos.models.IndexingPolicy.getAutomatic()"
  id: "getAutomatic()"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "getAutomatic()"
  nameWithType: "IndexingPolicy.getAutomatic()"
  fullName: "com.azure.cosmos.models.IndexingPolicy.getAutomatic()"
  overload: "com.azure.cosmos.models.IndexingPolicy.getAutomatic*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets whether automatic indexing is enabled for a collection.\n\nIn automatic indexing, documents can be explicitly excluded from indexing using RequestOptions. In manual indexing, documents can be explicitly included."
  syntax:
    content: "public Boolean getAutomatic()"
    return:
      type: "java.lang.Boolean"
      description: "the automatic"
- uid: "com.azure.cosmos.models.IndexingPolicy.getCompositeIndexes()"
  id: "getCompositeIndexes()"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "getCompositeIndexes()"
  nameWithType: "IndexingPolicy.getCompositeIndexes()"
  fullName: "com.azure.cosmos.models.IndexingPolicy.getCompositeIndexes()"
  overload: "com.azure.cosmos.models.IndexingPolicy.getCompositeIndexes*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the composite indexes for additional indexes."
  syntax:
    content: "public List<List<CompositePath>> getCompositeIndexes()"
    return:
      type: "java.util.List<java.util.List<com.azure.cosmos.models.CompositePath>>"
      description: "the composite indexes."
- uid: "com.azure.cosmos.models.IndexingPolicy.getExcludedPaths()"
  id: "getExcludedPaths()"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "getExcludedPaths()"
  nameWithType: "IndexingPolicy.getExcludedPaths()"
  fullName: "com.azure.cosmos.models.IndexingPolicy.getExcludedPaths()"
  overload: "com.azure.cosmos.models.IndexingPolicy.getExcludedPaths*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the paths that are not indexed."
  syntax:
    content: "public List<ExcludedPath> getExcludedPaths()"
    return:
      type: "java.util.List<com.azure.cosmos.models.ExcludedPath>"
      description: "the excluded paths."
- uid: "com.azure.cosmos.models.IndexingPolicy.getIncludedPaths()"
  id: "getIncludedPaths()"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "getIncludedPaths()"
  nameWithType: "IndexingPolicy.getIncludedPaths()"
  fullName: "com.azure.cosmos.models.IndexingPolicy.getIncludedPaths()"
  overload: "com.azure.cosmos.models.IndexingPolicy.getIncludedPaths*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the paths that are chosen to be indexed by the user."
  syntax:
    content: "public List<IncludedPath> getIncludedPaths()"
    return:
      type: "java.util.List<com.azure.cosmos.models.IncludedPath>"
      description: "the included paths."
- uid: "com.azure.cosmos.models.IndexingPolicy.getIndexingMode()"
  id: "getIndexingMode()"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "getIndexingMode()"
  nameWithType: "IndexingPolicy.getIndexingMode()"
  fullName: "com.azure.cosmos.models.IndexingPolicy.getIndexingMode()"
  overload: "com.azure.cosmos.models.IndexingPolicy.getIndexingMode*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the indexing mode (consistent or lazy)."
  syntax:
    content: "public IndexingMode getIndexingMode()"
    return:
      type: "com.azure.cosmos.models.IndexingMode"
      description: "the indexing mode."
- uid: "com.azure.cosmos.models.IndexingPolicy.getSpatialIndexes()"
  id: "getSpatialIndexes()"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "getSpatialIndexes()"
  nameWithType: "IndexingPolicy.getSpatialIndexes()"
  fullName: "com.azure.cosmos.models.IndexingPolicy.getSpatialIndexes()"
  overload: "com.azure.cosmos.models.IndexingPolicy.getSpatialIndexes*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets the spatial indexes for additional indexes."
  syntax:
    content: "public List<SpatialSpec> getSpatialIndexes()"
    return:
      type: "java.util.List<com.azure.cosmos.models.SpatialSpec>"
      description: "the spatial indexes."
- uid: "com.azure.cosmos.models.IndexingPolicy.populatePropertyBag()"
  id: "populatePropertyBag()"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "populatePropertyBag()"
  nameWithType: "IndexingPolicy.populatePropertyBag()"
  fullName: "com.azure.cosmos.models.IndexingPolicy.populatePropertyBag()"
  overload: "com.azure.cosmos.models.IndexingPolicy.populatePropertyBag*"
  type: "Method"
  package: "com.azure.cosmos.models"
  syntax:
    content: "protected void populatePropertyBag()"
- uid: "com.azure.cosmos.models.IndexingPolicy.setAutomatic(boolean)"
  id: "setAutomatic(boolean)"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "setAutomatic(boolean automatic)"
  nameWithType: "IndexingPolicy.setAutomatic(boolean automatic)"
  fullName: "com.azure.cosmos.models.IndexingPolicy.setAutomatic(boolean automatic)"
  overload: "com.azure.cosmos.models.IndexingPolicy.setAutomatic*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets whether automatic indexing is enabled for a collection.\n\nIn automatic indexing, documents can be explicitly excluded from indexing using RequestOptions. In manual indexing, documents can be explicitly included."
  syntax:
    content: "public IndexingPolicy setAutomatic(boolean automatic)"
    parameters:
    - id: "automatic"
      type: "boolean"
      description: "the automatic"
    return:
      type: "com.azure.cosmos.models.IndexingPolicy"
      description: "the Indexing Policy."
- uid: "com.azure.cosmos.models.IndexingPolicy.setCompositeIndexes(java.util.List<java.util.List<com.azure.cosmos.models.CompositePath>>)"
  id: "setCompositeIndexes(java.util.List<java.util.List<com.azure.cosmos.models.CompositePath>>)"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "setCompositeIndexes(List<List<CompositePath>> compositeIndexes)"
  nameWithType: "IndexingPolicy.setCompositeIndexes(List<List<CompositePath>> compositeIndexes)"
  fullName: "com.azure.cosmos.models.IndexingPolicy.setCompositeIndexes(List<List<CompositePath>> compositeIndexes)"
  overload: "com.azure.cosmos.models.IndexingPolicy.setCompositeIndexes*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets the composite indexes for additional indexes."
  syntax:
    content: "public IndexingPolicy setCompositeIndexes(List<List<CompositePath>> compositeIndexes)"
    parameters:
    - id: "compositeIndexes"
      type: "java.util.List<java.util.List<com.azure.cosmos.models.CompositePath>>"
      description: "the composite indexes."
    return:
      type: "com.azure.cosmos.models.IndexingPolicy"
      description: "the Indexing Policy."
- uid: "com.azure.cosmos.models.IndexingPolicy.setExcludedPaths(java.util.List<com.azure.cosmos.models.ExcludedPath>)"
  id: "setExcludedPaths(java.util.List<com.azure.cosmos.models.ExcludedPath>)"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "setExcludedPaths(List<ExcludedPath> excludedPaths)"
  nameWithType: "IndexingPolicy.setExcludedPaths(List<ExcludedPath> excludedPaths)"
  fullName: "com.azure.cosmos.models.IndexingPolicy.setExcludedPaths(List<ExcludedPath> excludedPaths)"
  overload: "com.azure.cosmos.models.IndexingPolicy.setExcludedPaths*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets excluded paths."
  syntax:
    content: "public IndexingPolicy setExcludedPaths(List<ExcludedPath> excludedPaths)"
    parameters:
    - id: "excludedPaths"
      type: "java.util.List<com.azure.cosmos.models.ExcludedPath>"
      description: "the excluded paths"
    return:
      type: "com.azure.cosmos.models.IndexingPolicy"
      description: "the excluded paths"
- uid: "com.azure.cosmos.models.IndexingPolicy.setIncludedPaths(java.util.List<com.azure.cosmos.models.IncludedPath>)"
  id: "setIncludedPaths(java.util.List<com.azure.cosmos.models.IncludedPath>)"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "setIncludedPaths(List<IncludedPath> includedPaths)"
  nameWithType: "IndexingPolicy.setIncludedPaths(List<IncludedPath> includedPaths)"
  fullName: "com.azure.cosmos.models.IndexingPolicy.setIncludedPaths(List<IncludedPath> includedPaths)"
  overload: "com.azure.cosmos.models.IndexingPolicy.setIncludedPaths*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets included paths."
  syntax:
    content: "public IndexingPolicy setIncludedPaths(List<IncludedPath> includedPaths)"
    parameters:
    - id: "includedPaths"
      type: "java.util.List<com.azure.cosmos.models.IncludedPath>"
      description: "the included paths"
    return:
      type: "com.azure.cosmos.models.IndexingPolicy"
      description: "the included paths"
- uid: "com.azure.cosmos.models.IndexingPolicy.setIndexingMode(com.azure.cosmos.models.IndexingMode)"
  id: "setIndexingMode(com.azure.cosmos.models.IndexingMode)"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "setIndexingMode(IndexingMode indexingMode)"
  nameWithType: "IndexingPolicy.setIndexingMode(IndexingMode indexingMode)"
  fullName: "com.azure.cosmos.models.IndexingPolicy.setIndexingMode(IndexingMode indexingMode)"
  overload: "com.azure.cosmos.models.IndexingPolicy.setIndexingMode*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets the indexing mode (consistent or lazy)."
  syntax:
    content: "public IndexingPolicy setIndexingMode(IndexingMode indexingMode)"
    parameters:
    - id: "indexingMode"
      type: "com.azure.cosmos.models.IndexingMode"
      description: "the indexing mode."
    return:
      type: "com.azure.cosmos.models.IndexingPolicy"
      description: "the Indexing Policy."
- uid: "com.azure.cosmos.models.IndexingPolicy.setSpatialIndexes(java.util.List<com.azure.cosmos.models.SpatialSpec>)"
  id: "setSpatialIndexes(java.util.List<com.azure.cosmos.models.SpatialSpec>)"
  parent: "com.azure.cosmos.models.IndexingPolicy"
  langs:
  - "java"
  name: "setSpatialIndexes(List<SpatialSpec> spatialIndexes)"
  nameWithType: "IndexingPolicy.setSpatialIndexes(List<SpatialSpec> spatialIndexes)"
  fullName: "com.azure.cosmos.models.IndexingPolicy.setSpatialIndexes(List<SpatialSpec> spatialIndexes)"
  overload: "com.azure.cosmos.models.IndexingPolicy.setSpatialIndexes*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets the spatial indexes for additional indexes."
  syntax:
    content: "public IndexingPolicy setSpatialIndexes(List<SpatialSpec> spatialIndexes)"
    parameters:
    - id: "spatialIndexes"
      type: "java.util.List<com.azure.cosmos.models.SpatialSpec>"
      description: "the spatial indexes."
    return:
      type: "com.azure.cosmos.models.IndexingPolicy"
      description: "the Indexing Policy."
references:
- uid: "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy*"
  name: "IndexingPolicy"
  nameWithType: "IndexingPolicy.IndexingPolicy"
  fullName: "com.azure.cosmos.models.IndexingPolicy.IndexingPolicy"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.Index[]"
  spec.java:
  - uid: "com.azure.cosmos.models.Index"
    name: "Index"
    fullName: "com.azure.cosmos.models.Index"
  - name: "[]"
    fullName: "[]"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.azure.cosmos.models.IndexingPolicy.getAutomatic*"
  name: "getAutomatic"
  nameWithType: "IndexingPolicy.getAutomatic"
  fullName: "com.azure.cosmos.models.IndexingPolicy.getAutomatic"
  package: "com.azure.cosmos.models"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.models.IndexingPolicy.setAutomatic*"
  name: "setAutomatic"
  nameWithType: "IndexingPolicy.setAutomatic"
  fullName: "com.azure.cosmos.models.IndexingPolicy.setAutomatic"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.IndexingMode"
  name: "IndexingMode"
  nameWithType: "IndexingMode"
  fullName: "com.azure.cosmos.models.IndexingMode"
- uid: "com.azure.cosmos.models.IndexingPolicy.getIndexingMode*"
  name: "getIndexingMode"
  nameWithType: "IndexingPolicy.getIndexingMode"
  fullName: "com.azure.cosmos.models.IndexingPolicy.getIndexingMode"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.IndexingPolicy.setIndexingMode*"
  name: "setIndexingMode"
  nameWithType: "IndexingPolicy.setIndexingMode"
  fullName: "com.azure.cosmos.models.IndexingPolicy.setIndexingMode"
  package: "com.azure.cosmos.models"
- uid: "java.util.List<com.azure.cosmos.models.IncludedPath>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.IncludedPath"
    name: "IncludedPath"
    fullName: "com.azure.cosmos.models.IncludedPath"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.models.IndexingPolicy.getIncludedPaths*"
  name: "getIncludedPaths"
  nameWithType: "IndexingPolicy.getIncludedPaths"
  fullName: "com.azure.cosmos.models.IndexingPolicy.getIncludedPaths"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.IndexingPolicy.setIncludedPaths*"
  name: "setIncludedPaths"
  nameWithType: "IndexingPolicy.setIncludedPaths"
  fullName: "com.azure.cosmos.models.IndexingPolicy.setIncludedPaths"
  package: "com.azure.cosmos.models"
- uid: "java.util.List<com.azure.cosmos.models.ExcludedPath>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.ExcludedPath"
    name: "ExcludedPath"
    fullName: "com.azure.cosmos.models.ExcludedPath"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.models.IndexingPolicy.getExcludedPaths*"
  name: "getExcludedPaths"
  nameWithType: "IndexingPolicy.getExcludedPaths"
  fullName: "com.azure.cosmos.models.IndexingPolicy.getExcludedPaths"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.IndexingPolicy.setExcludedPaths*"
  name: "setExcludedPaths"
  nameWithType: "IndexingPolicy.setExcludedPaths"
  fullName: "com.azure.cosmos.models.IndexingPolicy.setExcludedPaths"
  package: "com.azure.cosmos.models"
- uid: "java.util.List<java.util.List<com.azure.cosmos.models.CompositePath>>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.CompositePath"
    name: "CompositePath"
    fullName: "com.azure.cosmos.models.CompositePath"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.models.IndexingPolicy.getCompositeIndexes*"
  name: "getCompositeIndexes"
  nameWithType: "IndexingPolicy.getCompositeIndexes"
  fullName: "com.azure.cosmos.models.IndexingPolicy.getCompositeIndexes"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.IndexingPolicy.setCompositeIndexes*"
  name: "setCompositeIndexes"
  nameWithType: "IndexingPolicy.setCompositeIndexes"
  fullName: "com.azure.cosmos.models.IndexingPolicy.setCompositeIndexes"
  package: "com.azure.cosmos.models"
- uid: "java.util.List<com.azure.cosmos.models.SpatialSpec>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.cosmos.models.SpatialSpec"
    name: "SpatialSpec"
    fullName: "com.azure.cosmos.models.SpatialSpec"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.models.IndexingPolicy.getSpatialIndexes*"
  name: "getSpatialIndexes"
  nameWithType: "IndexingPolicy.getSpatialIndexes"
  fullName: "com.azure.cosmos.models.IndexingPolicy.getSpatialIndexes"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.IndexingPolicy.setSpatialIndexes*"
  name: "setSpatialIndexes"
  nameWithType: "IndexingPolicy.setSpatialIndexes"
  fullName: "com.azure.cosmos.models.IndexingPolicy.setSpatialIndexes"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.IndexingPolicy.populatePropertyBag*"
  name: "populatePropertyBag"
  nameWithType: "IndexingPolicy.populatePropertyBag"
  fullName: "com.azure.cosmos.models.IndexingPolicy.populatePropertyBag"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.JsonSerializable"
  name: "JsonSerializable"
  nameWithType: "JsonSerializable"
  fullName: "com.azure.cosmos.models.JsonSerializable"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
  name: "JsonSerializable.<T>set(String,T)"
  nameWithType: "JsonSerializable.<T>set(String,T)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  name: "JsonSerializable.getObjectByPath(List<String>)"
  nameWithType: "JsonSerializable.getObjectByPath(List<String>)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getObject(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getObject(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getList(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getList(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  name: "JsonSerializable.getValue(JsonNode)"
  nameWithType: "JsonSerializable.getValue(JsonNode)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
- uid: "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
  name: "JsonSerializable.serializeJsonToByteBuffer()"
  nameWithType: "JsonSerializable.serializeJsonToByteBuffer()"
  fullName: "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
- uid: "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
  name: "JsonSerializable.get(String)"
  nameWithType: "JsonSerializable.get(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
  name: "JsonSerializable.getPropertyBag()"
  nameWithType: "JsonSerializable.getPropertyBag()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
  name: "JsonSerializable.getInt(String)"
  nameWithType: "JsonSerializable.getInt(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  name: "JsonSerializable.setMapper(ObjectMapper)"
  nameWithType: "JsonSerializable.setMapper(ObjectMapper)"
  fullName: "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  name: "JsonSerializable.<T>toObject(Class<T>)"
  nameWithType: "JsonSerializable.<T>toObject(Class<T>)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
- uid: "com.azure.cosmos.models.JsonSerializable.getMap()"
  name: "JsonSerializable.getMap()"
  nameWithType: "JsonSerializable.getMap()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getMap()"
- uid: "com.azure.cosmos.models.JsonSerializable.toJson()"
  name: "JsonSerializable.toJson()"
  nameWithType: "JsonSerializable.toJson()"
  fullName: "com.azure.cosmos.models.JsonSerializable.toJson()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
  name: "JsonSerializable.getBoolean(String)"
  nameWithType: "JsonSerializable.getBoolean(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
  name: "JsonSerializable.getDouble(String)"
  nameWithType: "JsonSerializable.getDouble(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
  name: "JsonSerializable.remove(String)"
  nameWithType: "JsonSerializable.remove(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
  name: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  nameWithType: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  fullName: "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
- uid: "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
  name: "JsonSerializable.getLong(String)"
  nameWithType: "JsonSerializable.getLong(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.cosmos.models.JsonSerializable.toString()"
  name: "JsonSerializable.toString()"
  nameWithType: "JsonSerializable.toString()"
  fullName: "com.azure.cosmos.models.JsonSerializable.toString()"
- uid: "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
  name: "JsonSerializable.populatePropertyBag()"
  nameWithType: "JsonSerializable.populatePropertyBag()"
  fullName: "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
- uid: "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
  name: "JsonSerializable.has(String)"
  nameWithType: "JsonSerializable.has(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
  name: "JsonSerializable.getString(String)"
  nameWithType: "JsonSerializable.getString(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
  name: "JsonSerializable.getCollection(String)"
  nameWithType: "JsonSerializable.getCollection(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
  name: "JsonSerializable.getObject(String)"
  nameWithType: "JsonSerializable.getObject(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getLogger()"
  name: "JsonSerializable.getLogger()"
  nameWithType: "JsonSerializable.getLogger()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getLogger()"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.azure.cosmos.models.IncludedPath"
  name: "IncludedPath"
  nameWithType: "IncludedPath"
  fullName: "com.azure.cosmos.models.IncludedPath"
- uid: "com.azure.cosmos.models.ExcludedPath"
  name: "ExcludedPath"
  nameWithType: "ExcludedPath"
  fullName: "com.azure.cosmos.models.ExcludedPath"
- uid: "com.azure.cosmos.models.CompositePath"
  name: "CompositePath"
  nameWithType: "CompositePath"
  fullName: "com.azure.cosmos.models.CompositePath"
- uid: "com.azure.cosmos.models.SpatialSpec"
  name: "SpatialSpec"
  nameWithType: "SpatialSpec"
  fullName: "com.azure.cosmos.models.SpatialSpec"
- uid: "com.azure.cosmos.models.JsonSerializable."
  name: "JsonSerializable."
  nameWithType: "JsonSerializable."
  fullName: "com.azure.cosmos.models.JsonSerializable."
- uid: "T>set(java.lang.String,T)"
  name: "T>set(String,T)"
  nameWithType: "T>set(String,T)"
  fullName: "T>set(java.lang.String,T)"
- uid: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List"
  name: "JsonSerializable.getObjectByPath(List"
  nameWithType: "JsonSerializable.getObjectByPath(List"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List"
- uid: "java.lang.String>)"
  name: "String>)"
  nameWithType: "String>)"
  fullName: "java.lang.String>)"
- uid: "T>,boolean...)"
  name: "T>,)"
  nameWithType: "T>,)"
  fullName: "T>,boolean...)"
- uid: "T>getObject(java.lang.String,java.lang.Class"
  name: "T>getObject(String,Class"
  nameWithType: "T>getObject(String,Class"
  fullName: "T>getObject(java.lang.String,java.lang.Class"
- uid: "T>getList(java.lang.String,java.lang.Class"
  name: "T>getList(String,Class"
  nameWithType: "T>getList(String,Class"
  fullName: "T>getList(java.lang.String,java.lang.Class"
- uid: "T>toObject(java.lang.Class"
  name: "T>toObject(Class"
  nameWithType: "T>toObject(Class"
  fullName: "T>toObject(java.lang.Class"
- uid: "T>)"
  name: "T>)"
  nameWithType: "T>)"
  fullName: "T>)"
- uid: "T>getCollection(java.lang.String,java.lang.Class"
  name: "T>getCollection(String,Class"
  nameWithType: "T>getCollection(String,Class"
  fullName: "T>getCollection(java.lang.String,java.lang.Class"
