### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken*"
fullName: "com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken"
name: "isExpectedStartArrayToken"
nameWithType: "ParserMinimalBase.isExpectedStartArrayToken"
members:
- uid: "com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()"
  fullName: "com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()"
  name: "isExpectedStartArrayToken()"
  nameWithType: "ParserMinimalBase.isExpectedStartArrayToken()"
  summary: "Specialized accessor that can be used to verify that the current token indicates start array (usually meaning that current token is <xref uid=\"com.fasterxml.jackson.core.JsonToken.START_ARRAY\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#START_ARRAY\"></xref>) when start array is expected. For some specialized parsers this can return true for other cases as well; this is usually done to emulate arrays in cases underlying format is ambiguous (XML, for example, has no format-level difference between Objects and Arrays; it just has elements).\n\nDefault implementation is equivalent to:\n\n```java\ncurrentToken() == JsonToken.START_ARRAY\n```\n\nbut may be overridden by custom parser implementations."
  overridden: "com.fasterxml.jackson.core.JsonParser.isExpectedStartArrayToken()"
  syntax: "public boolean isExpectedStartArrayToken()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.base"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
