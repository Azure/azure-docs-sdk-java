### YamlMime:JavaMember
uid: "com.azure.resourcemanager.mediaservices.implementation.LocationsImpl.checkNameAvailability*"
fullName: "com.azure.resourcemanager.mediaservices.implementation.LocationsImpl.checkNameAvailability"
name: "checkNameAvailability"
nameWithType: "LocationsImpl.checkNameAvailability"
members:
- uid: "com.azure.resourcemanager.mediaservices.implementation.LocationsImpl.checkNameAvailability(java.lang.String,com.azure.resourcemanager.mediaservices.models.CheckNameAvailabilityInput)"
  fullName: "com.azure.resourcemanager.mediaservices.implementation.LocationsImpl.checkNameAvailability(String locationName, CheckNameAvailabilityInput parameters)"
  name: "checkNameAvailability(String locationName, CheckNameAvailabilityInput parameters)"
  nameWithType: "LocationsImpl.checkNameAvailability(String locationName, CheckNameAvailabilityInput parameters)"
  summary: "Checks whether the Media Service resource name is available."
  parameters:
  - name: "locationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.mediaservices.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EntityNameAvailabilityCheckOutput checkNameAvailability(String locationName, CheckNameAvailabilityInput parameters)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EntityNameAvailabilityCheckOutput?alt=com.azure.resourcemanager.mediaservices.models.EntityNameAvailabilityCheckOutput&text=EntityNameAvailabilityCheckOutput\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:1.0.0-beta.1
