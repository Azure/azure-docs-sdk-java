### YamlMime:JavaType
uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter"
fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter"
name: "QueryFilter"
nameWithType: "QueryFilter"
summary: "The filter expression to be used in the export."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class QueryFilter"
constructors:
- uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter.QueryFilter()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter.QueryFilter()"
  name: "QueryFilter()"
  nameWithType: "QueryFilter.QueryFilter()"
  syntax: "public QueryFilter()"
methods:
- uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter.and()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter.and()"
  name: "and()"
  nameWithType: "QueryFilter.and()"
  summary: "Get the and property: The logical \"AND\" expression."
  syntax: "public List<QueryFilter> and()"
  desc: "Get the and property: The logical \"AND\" expression. Must have at least 2 items."
  returns:
    description: "the and value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter.dimensions()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter.dimensions()"
  name: "dimensions()"
  nameWithType: "QueryFilter.dimensions()"
  summary: "Get the dimensions property: Has comparison expression for a dimension."
  syntax: "public QueryComparisonExpression dimensions()"
  desc: "Get the dimensions property: Has comparison expression for a dimension."
  returns:
    description: "the dimensions value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryComparisonExpression?alt=com.azure.resourcemanager.costmanagement.models.QueryComparisonExpression&text=QueryComparisonExpression\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter.or()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter.or()"
  name: "or()"
  nameWithType: "QueryFilter.or()"
  summary: "Get the or property: The logical \"OR\" expression."
  syntax: "public List<QueryFilter> or()"
  desc: "Get the or property: The logical \"OR\" expression. Must have at least 2 items."
  returns:
    description: "the or value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter.tags()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter.tags()"
  name: "tags()"
  nameWithType: "QueryFilter.tags()"
  summary: "Get the tags property: Has comparison expression for a tag."
  syntax: "public QueryComparisonExpression tags()"
  desc: "Get the tags property: Has comparison expression for a tag."
  returns:
    description: "the tags value."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryComparisonExpression?alt=com.azure.resourcemanager.costmanagement.models.QueryComparisonExpression&text=QueryComparisonExpression\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter.validate()"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter.validate()"
  name: "validate()"
  nameWithType: "QueryFilter.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter.withAnd(java.util.List<com.azure.resourcemanager.costmanagement.models.QueryFilter>)"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter.withAnd(List<QueryFilter> and)"
  name: "withAnd(List<QueryFilter> and)"
  nameWithType: "QueryFilter.withAnd(List<QueryFilter> and)"
  summary: "Set the and property: The logical \"AND\" expression."
  parameters:
  - description: "the and value to set."
    name: "and"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public QueryFilter withAnd(List<QueryFilter> and)"
  desc: "Set the and property: The logical \"AND\" expression. Must have at least 2 items."
  returns:
    description: "the QueryFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter.withDimensions(com.azure.resourcemanager.costmanagement.models.QueryComparisonExpression)"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter.withDimensions(QueryComparisonExpression dimensions)"
  name: "withDimensions(QueryComparisonExpression dimensions)"
  nameWithType: "QueryFilter.withDimensions(QueryComparisonExpression dimensions)"
  summary: "Set the dimensions property: Has comparison expression for a dimension."
  parameters:
  - description: "the dimensions value to set."
    name: "dimensions"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryComparisonExpression?alt=com.azure.resourcemanager.costmanagement.models.QueryComparisonExpression&text=QueryComparisonExpression\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryFilter withDimensions(QueryComparisonExpression dimensions)"
  desc: "Set the dimensions property: Has comparison expression for a dimension."
  returns:
    description: "the QueryFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter.withOr(java.util.List<com.azure.resourcemanager.costmanagement.models.QueryFilter>)"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter.withOr(List<QueryFilter> or)"
  name: "withOr(List<QueryFilter> or)"
  nameWithType: "QueryFilter.withOr(List<QueryFilter> or)"
  summary: "Set the or property: The logical \"OR\" expression."
  parameters:
  - description: "the or value to set."
    name: "or"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public QueryFilter withOr(List<QueryFilter> or)"
  desc: "Set the or property: The logical \"OR\" expression. Must have at least 2 items."
  returns:
    description: "the QueryFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.costmanagement.models.QueryFilter.withTags(com.azure.resourcemanager.costmanagement.models.QueryComparisonExpression)"
  fullName: "com.azure.resourcemanager.costmanagement.models.QueryFilter.withTags(QueryComparisonExpression tags)"
  name: "withTags(QueryComparisonExpression tags)"
  nameWithType: "QueryFilter.withTags(QueryComparisonExpression tags)"
  summary: "Set the tags property: Has comparison expression for a tag."
  parameters:
  - description: "the tags value to set."
    name: "tags"
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryComparisonExpression?alt=com.azure.resourcemanager.costmanagement.models.QueryComparisonExpression&text=QueryComparisonExpression\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryFilter withTags(QueryComparisonExpression tags)"
  desc: "Set the tags property: Has comparison expression for a tag."
  returns:
    description: "the QueryFilter object itself."
    type: "<xref href=\"com.azure.resourcemanager.costmanagement.models.QueryFilter?alt=com.azure.resourcemanager.costmanagement.models.QueryFilter&text=QueryFilter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The filter expression to be used in the export."
metadata: {}
package: "com.azure.resourcemanager.costmanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-costmanagement:1.0.0-beta.3
