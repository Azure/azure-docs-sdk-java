### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders
  id: DataFormatReaders
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser
  children:
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.AccessorForReader
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.DEFAULT_MAX_INPUT_LOOKAHEAD
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders(com.fasterxml.jackson.databind.ObjectReader...)
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders(java.util.Collection<com.fasterxml.jackson.databind.ObjectReader>)
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.Match
  - com.fasterxml.jackson.databind.deser.DataFormatReaders._maxInputLookahead
  - com.fasterxml.jackson.databind.deser.DataFormatReaders._minimalMatch
  - com.fasterxml.jackson.databind.deser.DataFormatReaders._optimalMatch
  - com.fasterxml.jackson.databind.deser.DataFormatReaders._readers
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat(byte[])
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat(byte[],int,int)
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat(java.io.InputStream)
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.toString()
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.with(com.fasterxml.jackson.databind.DeserializationConfig)
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.with(com.fasterxml.jackson.databind.ObjectReader[])
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.withMaxInputLookahead(int)
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)
  - com.fasterxml.jackson.databind.deser.DataFormatReaders.withType(com.fasterxml.jackson.databind.JavaType)
  langs:
  - java
  name: DataFormatReaders
  nameWithType: DataFormatReaders
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders
  type: Class
  package: com.fasterxml.jackson.databind.deser
  summary: Alternative to <xref uid="com.fasterxml.jackson.core.format.DataFormatDetector" data-throw-if-not-resolved="false">DataFormatDetector</xref> that needs to be used when using data-binding.
  syntax:
    content: public class DataFormatReaders
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.DEFAULT_MAX_INPUT_LOOKAHEAD
  id: DEFAULT_MAX_INPUT_LOOKAHEAD
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: DEFAULT_MAX_INPUT_LOOKAHEAD
  nameWithType: DataFormatReaders.DEFAULT_MAX_INPUT_LOOKAHEAD
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.DEFAULT_MAX_INPUT_LOOKAHEAD
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: By default we will look ahead at most 64 bytes; in most cases, much less (4 bytes or so) is needed, but we will allow bit more leniency to support data formats that need more complex heuristics.
  syntax:
    content: public static final int DEFAULT_MAX_INPUT_LOOKAHEAD
    return:
      type: int
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders(com.fasterxml.jackson.databind.ObjectReader...)
  id: DataFormatReaders(com.fasterxml.jackson.databind.ObjectReader...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: DataFormatReaders(ObjectReader[] detectors)
  nameWithType: DataFormatReaders.DataFormatReaders(ObjectReader[] detectors)
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders(ObjectReader[] detectors)
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public DataFormatReaders(ObjectReader[] detectors)
    parameters:
    - id: detectors
      type: com.fasterxml.jackson.databind.ObjectReader[]
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders(com.fasterxml.jackson.databind.ObjectReader[],com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.core.format.MatchStrength,int)
  id: DataFormatReaders(com.fasterxml.jackson.databind.ObjectReader[],com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.core.format.MatchStrength,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: DataFormatReaders(ObjectReader[] detectors, MatchStrength optMatch, MatchStrength minMatch, int maxInputLookahead)
  nameWithType: DataFormatReaders.DataFormatReaders(ObjectReader[] detectors, MatchStrength optMatch, MatchStrength minMatch, int maxInputLookahead)
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders(ObjectReader[] detectors, MatchStrength optMatch, MatchStrength minMatch, int maxInputLookahead)
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: private DataFormatReaders(ObjectReader[] detectors, MatchStrength optMatch, MatchStrength minMatch, int maxInputLookahead)
    parameters:
    - id: detectors
      type: com.fasterxml.jackson.databind.ObjectReader[]
    - id: optMatch
      type: com.fasterxml.jackson.core.format.MatchStrength
    - id: minMatch
      type: com.fasterxml.jackson.core.format.MatchStrength
    - id: maxInputLookahead
      type: int
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders(java.util.Collection<com.fasterxml.jackson.databind.ObjectReader>)
  id: DataFormatReaders(java.util.Collection<com.fasterxml.jackson.databind.ObjectReader>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: DataFormatReaders(Collection<ObjectReader> detectors)
  nameWithType: DataFormatReaders.DataFormatReaders(Collection<ObjectReader> detectors)
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders(Collection<ObjectReader> detectors)
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public DataFormatReaders(Collection<ObjectReader> detectors)
    parameters:
    - id: detectors
      type: java.util.Collection<com.fasterxml.jackson.databind.ObjectReader>
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders._maxInputLookahead
  id: _maxInputLookahead
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: _maxInputLookahead
  nameWithType: DataFormatReaders._maxInputLookahead
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders._maxInputLookahead
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Maximum number of leading bytes of the input that we can read to determine data format.


    Default value is <xref uid="com.fasterxml.jackson.databind.deser.DataFormatReaders.DEFAULT_MAX_INPUT_LOOKAHEAD" data-throw-if-not-resolved="false">#DEFAULT_MAX_INPUT_LOOKAHEAD</xref>.
  syntax:
    content: protected final int _maxInputLookahead
    return:
      type: int
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders._minimalMatch
  id: _minimalMatch
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: _minimalMatch
  nameWithType: DataFormatReaders._minimalMatch
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders._minimalMatch
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Strength of minimal match we accept as the answer, unless better matches are found. Default value is <xref uid="com.fasterxml.jackson.core.format.MatchStrength.WEAK_MATCH" data-throw-if-not-resolved="false">MatchStrength#WEAK_MATCH</xref>,
  syntax:
    content: protected final MatchStrength _minimalMatch
    return:
      type: com.fasterxml.jackson.core.format.MatchStrength
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders._optimalMatch
  id: _optimalMatch
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: _optimalMatch
  nameWithType: DataFormatReaders._optimalMatch
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders._optimalMatch
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Strength of match we consider to be good enough to be used without checking any other formats. Default value is <xref uid="com.fasterxml.jackson.core.format.MatchStrength.SOLID_MATCH" data-throw-if-not-resolved="false">MatchStrength#SOLID_MATCH</xref>,
  syntax:
    content: protected final MatchStrength _optimalMatch
    return:
      type: com.fasterxml.jackson.core.format.MatchStrength
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders._readers
  id: _readers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: _readers
  nameWithType: DataFormatReaders._readers
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders._readers
  type: Field
  package: com.fasterxml.jackson.databind.deser
  summary: Ordered list of readers which both represent data formats to detect (in precedence order, starting with highest) and contain factories used for actual detection.
  syntax:
    content: protected final ObjectReader[] _readers
    return:
      type: com.fasterxml.jackson.databind.ObjectReader[]
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat(byte[])
  id: findFormat(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: findFormat(byte[] fullInputData)
  nameWithType: DataFormatReaders.findFormat(byte[] fullInputData)
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat(byte[] fullInputData)
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method to call to find format that given content (full document) has, as per configuration of this detector instance.
  syntax:
    content: public DataFormatReaders.Match findFormat(byte[] fullInputData)
    parameters:
    - id: fullInputData
      type: byte[]
    return:
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders.Match
      description: >-
        Matcher object which contains result; never null, even in cases
            where no match (with specified minimal match strength) is found.
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat(byte[],int,int)
  id: findFormat(byte[],int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: findFormat(byte[] fullInputData, int offset, int len)
  nameWithType: DataFormatReaders.findFormat(byte[] fullInputData, int offset, int len)
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat(byte[] fullInputData, int offset, int len)
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method to call to find format that given content (full document) has, as per configuration of this detector instance.
  syntax:
    content: public DataFormatReaders.Match findFormat(byte[] fullInputData, int offset, int len)
    parameters:
    - id: fullInputData
      type: byte[]
    - id: offset
      type: int
    - id: len
      type: int
    return:
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders.Match
      description: >-
        Matcher object which contains result; never null, even in cases
            where no match (with specified minimal match strength) is found.
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat(java.io.InputStream)
  id: findFormat(java.io.InputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: findFormat(InputStream in)
  nameWithType: DataFormatReaders.findFormat(InputStream in)
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat(InputStream in)
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method to call to find format that content (accessible via given <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">InputStream</xref>) given has, as per configuration of this detector instance.
  syntax:
    content: public DataFormatReaders.Match findFormat(InputStream in)
    parameters:
    - id: in
      type: java.io.InputStream
    return:
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders.Match
      description: >-
        Matcher object which contains result; never null, even in cases
            where no match (with specified minimal match strength) is found.
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: toString()
  nameWithType: DataFormatReaders.toString()
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.toString()
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.toString*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.with(com.fasterxml.jackson.databind.DeserializationConfig)
  id: with(com.fasterxml.jackson.databind.DeserializationConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: with(DeserializationConfig config)
  nameWithType: DataFormatReaders.with(DeserializationConfig config)
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.with(DeserializationConfig config)
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.with*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public DataFormatReaders with(DeserializationConfig config)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    return:
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.with(com.fasterxml.jackson.databind.ObjectReader[])
  id: with(com.fasterxml.jackson.databind.ObjectReader[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: with(ObjectReader[] readers)
  nameWithType: DataFormatReaders.with(ObjectReader[] readers)
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.with(ObjectReader[] readers)
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.with*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public DataFormatReaders with(ObjectReader[] readers)
    parameters:
    - id: readers
      type: com.fasterxml.jackson.databind.ObjectReader[]
    return:
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.withMaxInputLookahead(int)
  id: withMaxInputLookahead(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: withMaxInputLookahead(int lookaheadBytes)
  nameWithType: DataFormatReaders.withMaxInputLookahead(int lookaheadBytes)
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.withMaxInputLookahead(int lookaheadBytes)
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.withMaxInputLookahead*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public DataFormatReaders withMaxInputLookahead(int lookaheadBytes)
    parameters:
    - id: lookaheadBytes
      type: int
    return:
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)
  id: withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: withMinimalMatch(MatchStrength minMatch)
  nameWithType: DataFormatReaders.withMinimalMatch(MatchStrength minMatch)
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.withMinimalMatch(MatchStrength minMatch)
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.withMinimalMatch*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public DataFormatReaders withMinimalMatch(MatchStrength minMatch)
    parameters:
    - id: minMatch
      type: com.fasterxml.jackson.core.format.MatchStrength
    return:
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)
  id: withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: withOptimalMatch(MatchStrength optMatch)
  nameWithType: DataFormatReaders.withOptimalMatch(MatchStrength optMatch)
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.withOptimalMatch(MatchStrength optMatch)
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.withOptimalMatch*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public DataFormatReaders withOptimalMatch(MatchStrength optMatch)
    parameters:
    - id: optMatch
      type: com.fasterxml.jackson.core.format.MatchStrength
    return:
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.withType(com.fasterxml.jackson.databind.JavaType)
  id: withType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.DataFormatReaders
  langs:
  - java
  name: withType(JavaType type)
  nameWithType: DataFormatReaders.withType(JavaType type)
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.withType(JavaType type)
  overload: com.fasterxml.jackson.databind.deser.DataFormatReaders.withType*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public DataFormatReaders withType(JavaType type)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.deser.DataFormatReaders
references:
- uid: com.fasterxml.jackson.databind.ObjectReader[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.ObjectReader
    name: ObjectReader
    fullName: com.fasterxml.jackson.databind.ObjectReader
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders*
  name: DataFormatReaders
  nameWithType: DataFormatReaders.DataFormatReaders
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.DataFormatReaders
  package: com.fasterxml.jackson.databind.deser
- uid: java.util.Collection<com.fasterxml.jackson.databind.ObjectReader>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.ObjectReader
    name: ObjectReader
    fullName: com.fasterxml.jackson.databind.ObjectReader
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.format.MatchStrength
  name: MatchStrength
  nameWithType: MatchStrength
  fullName: com.fasterxml.jackson.core.format.MatchStrength
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.withOptimalMatch*
  name: withOptimalMatch
  nameWithType: DataFormatReaders.withOptimalMatch
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.withOptimalMatch
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.withMinimalMatch*
  name: withMinimalMatch
  nameWithType: DataFormatReaders.withMinimalMatch
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.withMinimalMatch
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.with*
  name: with
  nameWithType: DataFormatReaders.with
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.with
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.withMaxInputLookahead*
  name: withMaxInputLookahead
  nameWithType: DataFormatReaders.withMaxInputLookahead
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.withMaxInputLookahead
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.withType*
  name: withType
  nameWithType: DataFormatReaders.withType
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.withType
  package: com.fasterxml.jackson.databind.deser
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.Match
  name: DataFormatReaders.Match
  nameWithType: DataFormatReaders.Match
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.Match
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat*
  name: findFormat
  nameWithType: DataFormatReaders.findFormat
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.findFormat
  package: com.fasterxml.jackson.databind.deser
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.toString*
  name: toString
  nameWithType: DataFormatReaders.toString
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.toString
  package: com.fasterxml.jackson.databind.deser
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.deser.DataFormatReaders.AccessorForReader
  name: DataFormatReaders.AccessorForReader
  nameWithType: DataFormatReaders.AccessorForReader
  fullName: com.fasterxml.jackson.databind.deser.DataFormatReaders.AccessorForReader
- uid: com.fasterxml.jackson.databind.ObjectReader
  name: ObjectReader
  nameWithType: ObjectReader
  fullName: com.fasterxml.jackson.databind.ObjectReader
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
