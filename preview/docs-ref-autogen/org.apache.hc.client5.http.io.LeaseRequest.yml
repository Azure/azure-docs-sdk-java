### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.io.LeaseRequest
  id: LeaseRequest
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.io
  children:
  - org.apache.hc.client5.http.io.LeaseRequest.get(org.apache.hc.core5.util.Timeout)
  langs:
  - java
  name: LeaseRequest
  nameWithType: LeaseRequest
  fullName: org.apache.hc.client5.http.io.LeaseRequest
  type: Interface
  package: org.apache.hc.client5.http.io
  summary: Represents a request for a <xref uid="org.apache.hc.client5.http.io.ConnectionEndpoint" data-throw-if-not-resolved="false">ConnectionEndpoint</xref> whose life cycle is managed by a connection manager.
  syntax:
    content: public interface LeaseRequest extends Cancellable
  implements:
  - org.apache.hc.core5.concurrent.Cancellable
- uid: org.apache.hc.client5.http.io.LeaseRequest.get(org.apache.hc.core5.util.Timeout)
  id: get(org.apache.hc.core5.util.Timeout)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.io.LeaseRequest
  langs:
  - java
  name: get(Timeout timeout)
  nameWithType: LeaseRequest.get(Timeout timeout)
  fullName: org.apache.hc.client5.http.io.LeaseRequest.get(Timeout timeout)
  overload: org.apache.hc.client5.http.io.LeaseRequest.get*
  type: Method
  package: org.apache.hc.client5.http.io
  summary: Returns <xref uid="org.apache.hc.client5.http.io.ConnectionEndpoint" data-throw-if-not-resolved="false">ConnectionEndpoint</xref> within a given time. This method will block until a connection becomes available, the timeout expires, or the connection manager is shut down. Timeouts are handled with millisecond precision. If <xref uid="org.apache.hc.client5.http.io.LeaseRequest.cancel*" data-throw-if-not-resolved="false">#cancel()</xref> is called while this is blocking or before this began, an <xref uid="java.lang.InterruptedException" data-throw-if-not-resolved="false">InterruptedException</xref> will be thrown.
  syntax:
    content: public abstract ConnectionEndpoint get(Timeout timeout)
    parameters:
    - id: timeout
      type: org.apache.hc.core5.util.Timeout
      description: the operation timeout.
    return:
      type: org.apache.hc.client5.http.io.ConnectionEndpoint
      description: >-
        a connection that can be used to communicate
                  along the given route
  exceptions:
  - type: java.lang.InterruptedException
    description: in case of a timeout
  - type: java.util.concurrent.ExecutionException
    description: in case of a timeout
  - type: java.util.concurrent.TimeoutException
    description: in case of a timeout
references:
- uid: java.lang.InterruptedException
  spec.java:
  - uid: java.lang.InterruptedException
    name: InterruptedException
    fullName: java.lang.InterruptedException
- uid: java.util.concurrent.ExecutionException
  spec.java:
  - uid: java.util.concurrent.ExecutionException
    name: ExecutionException
    fullName: java.util.concurrent.ExecutionException
- uid: java.util.concurrent.TimeoutException
  spec.java:
  - uid: java.util.concurrent.TimeoutException
    name: TimeoutException
    fullName: java.util.concurrent.TimeoutException
- uid: org.apache.hc.core5.util.Timeout
  name: Timeout
  nameWithType: Timeout
  fullName: org.apache.hc.core5.util.Timeout
- uid: org.apache.hc.client5.http.io.ConnectionEndpoint
  name: ConnectionEndpoint
  nameWithType: ConnectionEndpoint
  fullName: org.apache.hc.client5.http.io.ConnectionEndpoint
- uid: org.apache.hc.client5.http.io.LeaseRequest.get*
  name: get
  nameWithType: LeaseRequest.get
  fullName: org.apache.hc.client5.http.io.LeaseRequest.get
  package: org.apache.hc.client5.http.io
- uid: org.apache.hc.core5.concurrent.Cancellable
  name: Cancellable
  nameWithType: Cancellable
  fullName: org.apache.hc.core5.concurrent.Cancellable
