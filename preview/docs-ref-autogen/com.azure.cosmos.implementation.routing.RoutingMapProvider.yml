### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.routing.RoutingMapProvider
  id: RoutingMapProvider
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.routing
  children:
  - com.azure.cosmos.implementation.routing.RoutingMapProvider.getOverlappingRanges(java.lang.String,com.azure.cosmos.implementation.routing.Range<java.lang.String>,boolean)
  - com.azure.cosmos.implementation.routing.RoutingMapProvider.getPartitionKeyRangeById(java.lang.String,java.lang.String,boolean)
  - com.azure.cosmos.implementation.routing.RoutingMapProvider.tryGetRangeByEffectivePartitionKey(java.lang.String,java.lang.String)
  langs:
  - java
  name: RoutingMapProvider
  nameWithType: RoutingMapProvider
  fullName: com.azure.cosmos.implementation.routing.RoutingMapProvider
  type: Interface
  package: com.azure.cosmos.implementation.routing
  summary: Used internally in request routing in the Azure Cosmos DB database service.
  syntax:
    content: public interface RoutingMapProvider
- uid: com.azure.cosmos.implementation.routing.RoutingMapProvider.getOverlappingRanges(java.lang.String,com.azure.cosmos.implementation.routing.Range<java.lang.String>,boolean)
  id: getOverlappingRanges(java.lang.String,com.azure.cosmos.implementation.routing.Range<java.lang.String>,boolean)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.routing.RoutingMapProvider
  langs:
  - java
  name: getOverlappingRanges(String collectionSelfLink, Range<String> range, boolean forceRefresh)
  nameWithType: RoutingMapProvider.getOverlappingRanges(String collectionSelfLink, Range<String> range, boolean forceRefresh)
  fullName: com.azure.cosmos.implementation.routing.RoutingMapProvider.getOverlappingRanges(String collectionSelfLink, Range<String> range, boolean forceRefresh)
  overload: com.azure.cosmos.implementation.routing.RoutingMapProvider.getOverlappingRanges*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public abstract Collection<PartitionKeyRange> getOverlappingRanges(String collectionSelfLink, Range<String> range, boolean forceRefresh)
    parameters:
    - id: collectionSelfLink
      type: java.lang.String
    - id: range
      type: com.azure.cosmos.implementation.routing.Range<java.lang.String>
    - id: forceRefresh
      type: boolean
    return:
      type: java.util.Collection<com.azure.cosmos.implementation.PartitionKeyRange>
- uid: com.azure.cosmos.implementation.routing.RoutingMapProvider.getPartitionKeyRangeById(java.lang.String,java.lang.String,boolean)
  id: getPartitionKeyRangeById(java.lang.String,java.lang.String,boolean)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.routing.RoutingMapProvider
  langs:
  - java
  name: getPartitionKeyRangeById(String collectionSelfLink, String partitionKeyRangeId, boolean forceRefresh)
  nameWithType: RoutingMapProvider.getPartitionKeyRangeById(String collectionSelfLink, String partitionKeyRangeId, boolean forceRefresh)
  fullName: com.azure.cosmos.implementation.routing.RoutingMapProvider.getPartitionKeyRangeById(String collectionSelfLink, String partitionKeyRangeId, boolean forceRefresh)
  overload: com.azure.cosmos.implementation.routing.RoutingMapProvider.getPartitionKeyRangeById*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public abstract PartitionKeyRange getPartitionKeyRangeById(String collectionSelfLink, String partitionKeyRangeId, boolean forceRefresh)
    parameters:
    - id: collectionSelfLink
      type: java.lang.String
    - id: partitionKeyRangeId
      type: java.lang.String
    - id: forceRefresh
      type: boolean
    return:
      type: com.azure.cosmos.implementation.PartitionKeyRange
- uid: com.azure.cosmos.implementation.routing.RoutingMapProvider.tryGetRangeByEffectivePartitionKey(java.lang.String,java.lang.String)
  id: tryGetRangeByEffectivePartitionKey(java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.routing.RoutingMapProvider
  langs:
  - java
  name: tryGetRangeByEffectivePartitionKey(String collectionSelfLink, String effectivePartitionKey)
  nameWithType: RoutingMapProvider.tryGetRangeByEffectivePartitionKey(String collectionSelfLink, String effectivePartitionKey)
  fullName: com.azure.cosmos.implementation.routing.RoutingMapProvider.tryGetRangeByEffectivePartitionKey(String collectionSelfLink, String effectivePartitionKey)
  overload: com.azure.cosmos.implementation.routing.RoutingMapProvider.tryGetRangeByEffectivePartitionKey*
  type: Method
  package: com.azure.cosmos.implementation.routing
  syntax:
    content: public abstract PartitionKeyRange tryGetRangeByEffectivePartitionKey(String collectionSelfLink, String effectivePartitionKey)
    parameters:
    - id: collectionSelfLink
      type: java.lang.String
    - id: effectivePartitionKey
      type: java.lang.String
    return:
      type: com.azure.cosmos.implementation.PartitionKeyRange
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.routing.Range<java.lang.String>
  spec.java:
  - uid: com.azure.cosmos.implementation.routing.Range
    name: Range
    fullName: com.azure.cosmos.implementation.routing.Range
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.util.Collection<com.azure.cosmos.implementation.PartitionKeyRange>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.PartitionKeyRange
    name: PartitionKeyRange
    fullName: com.azure.cosmos.implementation.PartitionKeyRange
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.routing.RoutingMapProvider.getOverlappingRanges*
  name: getOverlappingRanges
  nameWithType: RoutingMapProvider.getOverlappingRanges
  fullName: com.azure.cosmos.implementation.routing.RoutingMapProvider.getOverlappingRanges
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.PartitionKeyRange
  name: PartitionKeyRange
  nameWithType: PartitionKeyRange
  fullName: com.azure.cosmos.implementation.PartitionKeyRange
- uid: com.azure.cosmos.implementation.routing.RoutingMapProvider.tryGetRangeByEffectivePartitionKey*
  name: tryGetRangeByEffectivePartitionKey
  nameWithType: RoutingMapProvider.tryGetRangeByEffectivePartitionKey
  fullName: com.azure.cosmos.implementation.routing.RoutingMapProvider.tryGetRangeByEffectivePartitionKey
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.RoutingMapProvider.getPartitionKeyRangeById*
  name: getPartitionKeyRangeById
  nameWithType: RoutingMapProvider.getPartitionKeyRangeById
  fullName: com.azure.cosmos.implementation.routing.RoutingMapProvider.getPartitionKeyRangeById
  package: com.azure.cosmos.implementation.routing
- uid: com.azure.cosmos.implementation.routing.Range
  name: Range
  nameWithType: Range
  fullName: com.azure.cosmos.implementation.routing.Range
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
