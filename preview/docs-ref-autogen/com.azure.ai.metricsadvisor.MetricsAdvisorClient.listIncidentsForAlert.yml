### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listIncidentsForAlert*"
fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listIncidentsForAlert"
name: "listIncidentsForAlert"
nameWithType: "MetricsAdvisorClient.listIncidentsForAlert"
members:
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listIncidentsForAlert(java.lang.String,java.lang.String,com.azure.ai.metricsadvisor.models.ListIncidentsAlertedOptions)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listIncidentsForAlert(String alertConfigurationId, String alertId, ListIncidentsAlertedOptions options)"
  name: "listIncidentsForAlert(String alertConfigurationId, String alertId, ListIncidentsAlertedOptions options)"
  nameWithType: "MetricsAdvisorClient.listIncidentsForAlert(String alertConfigurationId, String alertId, ListIncidentsAlertedOptions options)"
  summary: "Fetch the incidents in an alert.\n\n**Code sample**\n\n```java\nfinal String alertConfigurationId = \"ff3014a0-bbbb-41ec-a637-677e77b81299\";\n final String alertId = \"1746b031c00\";\n final ListIncidentsAlertedOptions options = new ListIncidentsAlertedOptions()\n     .setTop(10);\n \n PagedIterable<Incident> incidentsIterable = metricAdvisorClient.listIncidentsForAlert(\n     alertConfigurationId,\n     alertId,\n     options);\n \n for (Incident incident : incidentsIterable) {\n     System.out.printf(\"Metric Id: %s%n\", incident.getMetricId());\n     System.out.printf(\"Detection Configuration Id: %s%n\", incident.getDetectionConfigurationId());\n     System.out.printf(\"Incident Id: %s%n\", incident.getId());\n     System.out.printf(\"Incident Start Time: %s%n\", incident.getStartTime());\n     System.out.printf(\"Incident Severity: %s%n\", incident.getSeverity());\n     System.out.printf(\"Incident Status: %s%n\", incident.getStatus());\n     System.out.printf(\"Root Dimension Key:\");\n     DimensionKey rootDimension = incident.getRootDimensionKey();\n     for (Map.Entry<String, String> dimension : rootDimension.asMap().entrySet()) {\n         System.out.printf(\"DimensionName: %s DimensionValue:%s%n\",\n             dimension.getKey(), dimension.getValue());\n     }\n }\n```"
  parameters:
  - description: "The anomaly alert configuration id."
    name: "alertConfigurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The alert id."
    name: "alertId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional parameters."
    name: "options"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.ListIncidentsAlertedOptions?alt=com.azure.ai.metricsadvisor.models.ListIncidentsAlertedOptions&text=ListIncidentsAlertedOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<Incident> listIncidentsForAlert(String alertConfigurationId, String alertId, ListIncidentsAlertedOptions options)"
  returns:
    description: "The incidents."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.Incident?alt=com.azure.ai.metricsadvisor.models.Incident&text=Incident\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listIncidentsForAlert(java.lang.String,java.lang.String,com.azure.ai.metricsadvisor.models.ListIncidentsAlertedOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.MetricsAdvisorClient.listIncidentsForAlert(String alertConfigurationId, String alertId, ListIncidentsAlertedOptions options, Context context)"
  name: "listIncidentsForAlert(String alertConfigurationId, String alertId, ListIncidentsAlertedOptions options, Context context)"
  nameWithType: "MetricsAdvisorClient.listIncidentsForAlert(String alertConfigurationId, String alertId, ListIncidentsAlertedOptions options, Context context)"
  summary: "Fetch the incidents in an alert.\n\n**Code sample**\n\n```java\nfinal String alertConfigurationId = \"ff3014a0-bbbb-41ec-a637-677e77b81299\";\n final String alertId = \"1746b031c00\";\n final ListIncidentsAlertedOptions options = new ListIncidentsAlertedOptions()\n     .setTop(10);\n \n PagedIterable<Incident> incidentsIterable = metricAdvisorClient.listIncidentsForAlert(\n     alertConfigurationId,\n     alertId,\n     options,\n     Context.NONE);\n \n Stream<PagedResponse<Incident>> incidentsPageStream = incidentsIterable.streamByPage();\n int[] pageCount = new int[1];\n incidentsPageStream.forEach(incidentsPage -> {\n     System.out.printf(\"Page: %d%n\", pageCount[0]++);\n     IterableStream<Incident> incidentsPageItems = incidentsPage.getElements();\n     for (Incident incident : incidentsPageItems) {\n         System.out.printf(\"Metric Id: %s%n\", incident.getMetricId());\n         System.out.printf(\"Detection Configuration Id: %s%n\", incident.getDetectionConfigurationId());\n         System.out.printf(\"Incident Id: %s%n\", incident.getId());\n         System.out.printf(\"Incident Start Time: %s%n\", incident.getStartTime());\n         System.out.printf(\"Incident Severity: %s%n\", incident.getSeverity());\n         System.out.printf(\"Incident Status: %s%n\", incident.getStatus());\n         System.out.printf(\"Root Dimension Key:\");\n         DimensionKey rootDimension = incident.getRootDimensionKey();\n         for (Map.Entry<String, String> dimension : rootDimension.asMap().entrySet()) {\n             System.out.printf(\"DimensionKey: %s DimensionValue:%s%n\",\n                 dimension.getKey(), dimension.getValue());\n         }\n     }\n });\n```"
  parameters:
  - description: "The anomaly alert configuration id."
    name: "alertConfigurationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The alert id."
    name: "alertId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional parameters."
    name: "options"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.ListIncidentsAlertedOptions?alt=com.azure.ai.metricsadvisor.models.ListIncidentsAlertedOptions&text=ListIncidentsAlertedOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<Incident> listIncidentsForAlert(String alertConfigurationId, String alertId, ListIncidentsAlertedOptions options, Context context)"
  returns:
    description: "The incidents."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.Incident?alt=com.azure.ai.metricsadvisor.models.Incident&text=Incident\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.1
