### YamlMime:JavaType
uid: "com.azure.resourcemanager.appcontainers.models.Ingress"
fullName: "com.azure.resourcemanager.appcontainers.models.Ingress"
name: "Ingress"
nameWithType: "Ingress"
summary: "Container App Ingress configuration."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **Ingress**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.Ingress()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.Ingress()"
  name: "Ingress()"
  nameWithType: "Ingress.Ingress()"
  summary: "Creates an instance of Ingress class."
  syntax: "public Ingress()"
  desc: "Creates an instance of Ingress class."
methods:
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.additionalPortMappings()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.additionalPortMappings()"
  name: "additionalPortMappings()"
  nameWithType: "Ingress.additionalPortMappings()"
  summary: "Get the additional<wbr>Port<wbr>Mappings property: Settings to expose additional ports on container app."
  syntax: "public List<IngressPortMapping> additionalPortMappings()"
  desc: "Get the additionalPortMappings property: Settings to expose additional ports on container app."
  returns:
    description: "the additionalPortMappings value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.IngressPortMapping?alt=com.azure.resourcemanager.appcontainers.models.IngressPortMapping&text=IngressPortMapping\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.allowInsecure()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.allowInsecure()"
  name: "allowInsecure()"
  nameWithType: "Ingress.allowInsecure()"
  summary: "Get the allow<wbr>Insecure property: Bool indicating if HTTP connections to is allowed."
  syntax: "public Boolean allowInsecure()"
  desc: "Get the allowInsecure property: Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections."
  returns:
    description: "the allowInsecure value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.clientCertificateMode()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.clientCertificateMode()"
  name: "clientCertificateMode()"
  nameWithType: "Ingress.clientCertificateMode()"
  summary: "Get the client<wbr>Certificate<wbr>Mode property: Client certificate mode for mTLS authentication."
  syntax: "public IngressClientCertificateMode clientCertificateMode()"
  desc: "Get the clientCertificateMode property: Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate."
  returns:
    description: "the clientCertificateMode value."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.IngressClientCertificateMode?alt=com.azure.resourcemanager.appcontainers.models.IngressClientCertificateMode&text=IngressClientCertificateMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.corsPolicy()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.corsPolicy()"
  name: "corsPolicy()"
  nameWithType: "Ingress.corsPolicy()"
  summary: "Get the cors<wbr>Policy property: CORS policy for container app."
  syntax: "public CorsPolicy corsPolicy()"
  desc: "Get the corsPolicy property: CORS policy for container app."
  returns:
    description: "the corsPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.CorsPolicy?alt=com.azure.resourcemanager.appcontainers.models.CorsPolicy&text=CorsPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.customDomains()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.customDomains()"
  name: "customDomains()"
  nameWithType: "Ingress.customDomains()"
  summary: "Get the custom<wbr>Domains property: custom domain bindings for Container Apps' hostnames."
  syntax: "public List<CustomDomain> customDomains()"
  desc: "Get the customDomains property: custom domain bindings for Container Apps' hostnames."
  returns:
    description: "the customDomains value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.CustomDomain?alt=com.azure.resourcemanager.appcontainers.models.CustomDomain&text=CustomDomain\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.exposedPort()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.exposedPort()"
  name: "exposedPort()"
  nameWithType: "Ingress.exposedPort()"
  summary: "Get the exposed<wbr>Port property: Exposed Port in containers for TCP traffic from ingress."
  syntax: "public Integer exposedPort()"
  desc: "Get the exposedPort property: Exposed Port in containers for TCP traffic from ingress."
  returns:
    description: "the exposedPort value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.external()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.external()"
  name: "external()"
  nameWithType: "Ingress.external()"
  summary: "Get the external property: Bool indicating if app exposes an external http endpoint."
  syntax: "public Boolean external()"
  desc: "Get the external property: Bool indicating if app exposes an external http endpoint."
  returns:
    description: "the external value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.fqdn()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.fqdn()"
  name: "fqdn()"
  nameWithType: "Ingress.fqdn()"
  summary: "Get the fqdn property: Hostname."
  syntax: "public String fqdn()"
  desc: "Get the fqdn property: Hostname."
  returns:
    description: "the fqdn value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "Ingress.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Ingress from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Ingress fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the Ingress."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of Ingress from the JsonReader."
  returns:
    description: "An instance of Ingress if the JsonReader was pointing to an instance of it, or null if it was pointing to\n JSON null."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.ipSecurityRestrictions()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.ipSecurityRestrictions()"
  name: "ipSecurityRestrictions()"
  nameWithType: "Ingress.ipSecurityRestrictions()"
  summary: "Get the ip<wbr>Security<wbr>Restrictions property: Rules to restrict incoming IP address."
  syntax: "public List<IpSecurityRestrictionRule> ipSecurityRestrictions()"
  desc: "Get the ipSecurityRestrictions property: Rules to restrict incoming IP address."
  returns:
    description: "the ipSecurityRestrictions value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.IpSecurityRestrictionRule?alt=com.azure.resourcemanager.appcontainers.models.IpSecurityRestrictionRule&text=IpSecurityRestrictionRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.stickySessions()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.stickySessions()"
  name: "stickySessions()"
  nameWithType: "Ingress.stickySessions()"
  summary: "Get the sticky<wbr>Sessions property: Sticky Sessions for Single Revision Mode."
  syntax: "public IngressStickySessions stickySessions()"
  desc: "Get the stickySessions property: Sticky Sessions for Single Revision Mode."
  returns:
    description: "the stickySessions value."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.IngressStickySessions?alt=com.azure.resourcemanager.appcontainers.models.IngressStickySessions&text=IngressStickySessions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.targetPort()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.targetPort()"
  name: "targetPort()"
  nameWithType: "Ingress.targetPort()"
  summary: "Get the target<wbr>Port property: Target Port in containers for traffic from ingress."
  syntax: "public Integer targetPort()"
  desc: "Get the targetPort property: Target Port in containers for traffic from ingress."
  returns:
    description: "the targetPort value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.targetPortHttpScheme()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.targetPortHttpScheme()"
  name: "targetPortHttpScheme()"
  nameWithType: "Ingress.targetPortHttpScheme()"
  summary: "Get the target<wbr>Port<wbr>Http<wbr>Scheme property: Whether an http app listens on http or https."
  syntax: "public IngressTargetPortHttpScheme targetPortHttpScheme()"
  desc: "Get the targetPortHttpScheme property: Whether an http app listens on http or https."
  returns:
    description: "the targetPortHttpScheme value."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.IngressTargetPortHttpScheme?alt=com.azure.resourcemanager.appcontainers.models.IngressTargetPortHttpScheme&text=IngressTargetPortHttpScheme\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "Ingress.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.traffic()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.traffic()"
  name: "traffic()"
  nameWithType: "Ingress.traffic()"
  summary: "Get the traffic property: Traffic weights for app's revisions."
  syntax: "public List<TrafficWeight> traffic()"
  desc: "Get the traffic property: Traffic weights for app's revisions."
  returns:
    description: "the traffic value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.TrafficWeight?alt=com.azure.resourcemanager.appcontainers.models.TrafficWeight&text=TrafficWeight\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.transport()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.transport()"
  name: "transport()"
  nameWithType: "Ingress.transport()"
  summary: "Get the transport property: Ingress transport protocol."
  syntax: "public IngressTransportMethod transport()"
  desc: "Get the transport property: Ingress transport protocol."
  returns:
    description: "the transport value."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.IngressTransportMethod?alt=com.azure.resourcemanager.appcontainers.models.IngressTransportMethod&text=IngressTransportMethod\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.validate()"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.validate()"
  name: "validate()"
  nameWithType: "Ingress.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withAdditionalPortMappings(java.util.List<com.azure.resourcemanager.appcontainers.models.IngressPortMapping>)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withAdditionalPortMappings(List<IngressPortMapping> additionalPortMappings)"
  name: "withAdditionalPortMappings(List<IngressPortMapping> additionalPortMappings)"
  nameWithType: "Ingress.withAdditionalPortMappings(List<IngressPortMapping> additionalPortMappings)"
  summary: "Set the additional<wbr>Port<wbr>Mappings property: Settings to expose additional ports on container app."
  parameters:
  - description: "the additionalPortMappings value to set."
    name: "additionalPortMappings"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.IngressPortMapping?alt=com.azure.resourcemanager.appcontainers.models.IngressPortMapping&text=IngressPortMapping\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Ingress withAdditionalPortMappings(List<IngressPortMapping> additionalPortMappings)"
  desc: "Set the additionalPortMappings property: Settings to expose additional ports on container app."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withAllowInsecure(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withAllowInsecure(Boolean allowInsecure)"
  name: "withAllowInsecure(Boolean allowInsecure)"
  nameWithType: "Ingress.withAllowInsecure(Boolean allowInsecure)"
  summary: "Set the allow<wbr>Insecure property: Bool indicating if HTTP connections to is allowed."
  parameters:
  - description: "the allowInsecure value to set."
    name: "allowInsecure"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public Ingress withAllowInsecure(Boolean allowInsecure)"
  desc: "Set the allowInsecure property: Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withClientCertificateMode(com.azure.resourcemanager.appcontainers.models.IngressClientCertificateMode)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withClientCertificateMode(IngressClientCertificateMode clientCertificateMode)"
  name: "withClientCertificateMode(IngressClientCertificateMode clientCertificateMode)"
  nameWithType: "Ingress.withClientCertificateMode(IngressClientCertificateMode clientCertificateMode)"
  summary: "Set the client<wbr>Certificate<wbr>Mode property: Client certificate mode for mTLS authentication."
  parameters:
  - description: "the clientCertificateMode value to set."
    name: "clientCertificateMode"
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.IngressClientCertificateMode?alt=com.azure.resourcemanager.appcontainers.models.IngressClientCertificateMode&text=IngressClientCertificateMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Ingress withClientCertificateMode(IngressClientCertificateMode clientCertificateMode)"
  desc: "Set the clientCertificateMode property: Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withCorsPolicy(com.azure.resourcemanager.appcontainers.models.CorsPolicy)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withCorsPolicy(CorsPolicy corsPolicy)"
  name: "withCorsPolicy(CorsPolicy corsPolicy)"
  nameWithType: "Ingress.withCorsPolicy(CorsPolicy corsPolicy)"
  summary: "Set the cors<wbr>Policy property: CORS policy for container app."
  parameters:
  - description: "the corsPolicy value to set."
    name: "corsPolicy"
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.CorsPolicy?alt=com.azure.resourcemanager.appcontainers.models.CorsPolicy&text=CorsPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Ingress withCorsPolicy(CorsPolicy corsPolicy)"
  desc: "Set the corsPolicy property: CORS policy for container app."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withCustomDomains(java.util.List<com.azure.resourcemanager.appcontainers.models.CustomDomain>)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withCustomDomains(List<CustomDomain> customDomains)"
  name: "withCustomDomains(List<CustomDomain> customDomains)"
  nameWithType: "Ingress.withCustomDomains(List<CustomDomain> customDomains)"
  summary: "Set the custom<wbr>Domains property: custom domain bindings for Container Apps' hostnames."
  parameters:
  - description: "the customDomains value to set."
    name: "customDomains"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.CustomDomain?alt=com.azure.resourcemanager.appcontainers.models.CustomDomain&text=CustomDomain\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Ingress withCustomDomains(List<CustomDomain> customDomains)"
  desc: "Set the customDomains property: custom domain bindings for Container Apps' hostnames."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withExposedPort(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withExposedPort(Integer exposedPort)"
  name: "withExposedPort(Integer exposedPort)"
  nameWithType: "Ingress.withExposedPort(Integer exposedPort)"
  summary: "Set the exposed<wbr>Port property: Exposed Port in containers for TCP traffic from ingress."
  parameters:
  - description: "the exposedPort value to set."
    name: "exposedPort"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public Ingress withExposedPort(Integer exposedPort)"
  desc: "Set the exposedPort property: Exposed Port in containers for TCP traffic from ingress."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withExternal(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withExternal(Boolean external)"
  name: "withExternal(Boolean external)"
  nameWithType: "Ingress.withExternal(Boolean external)"
  summary: "Set the external property: Bool indicating if app exposes an external http endpoint."
  parameters:
  - description: "the external value to set."
    name: "external"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public Ingress withExternal(Boolean external)"
  desc: "Set the external property: Bool indicating if app exposes an external http endpoint."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withIpSecurityRestrictions(java.util.List<com.azure.resourcemanager.appcontainers.models.IpSecurityRestrictionRule>)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withIpSecurityRestrictions(List<IpSecurityRestrictionRule> ipSecurityRestrictions)"
  name: "withIpSecurityRestrictions(List<IpSecurityRestrictionRule> ipSecurityRestrictions)"
  nameWithType: "Ingress.withIpSecurityRestrictions(List<IpSecurityRestrictionRule> ipSecurityRestrictions)"
  summary: "Set the ip<wbr>Security<wbr>Restrictions property: Rules to restrict incoming IP address."
  parameters:
  - description: "the ipSecurityRestrictions value to set."
    name: "ipSecurityRestrictions"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.IpSecurityRestrictionRule?alt=com.azure.resourcemanager.appcontainers.models.IpSecurityRestrictionRule&text=IpSecurityRestrictionRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Ingress withIpSecurityRestrictions(List<IpSecurityRestrictionRule> ipSecurityRestrictions)"
  desc: "Set the ipSecurityRestrictions property: Rules to restrict incoming IP address."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withStickySessions(com.azure.resourcemanager.appcontainers.models.IngressStickySessions)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withStickySessions(IngressStickySessions stickySessions)"
  name: "withStickySessions(IngressStickySessions stickySessions)"
  nameWithType: "Ingress.withStickySessions(IngressStickySessions stickySessions)"
  summary: "Set the sticky<wbr>Sessions property: Sticky Sessions for Single Revision Mode."
  parameters:
  - description: "the stickySessions value to set."
    name: "stickySessions"
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.IngressStickySessions?alt=com.azure.resourcemanager.appcontainers.models.IngressStickySessions&text=IngressStickySessions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Ingress withStickySessions(IngressStickySessions stickySessions)"
  desc: "Set the stickySessions property: Sticky Sessions for Single Revision Mode."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withTargetPort(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withTargetPort(Integer targetPort)"
  name: "withTargetPort(Integer targetPort)"
  nameWithType: "Ingress.withTargetPort(Integer targetPort)"
  summary: "Set the target<wbr>Port property: Target Port in containers for traffic from ingress."
  parameters:
  - description: "the targetPort value to set."
    name: "targetPort"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public Ingress withTargetPort(Integer targetPort)"
  desc: "Set the targetPort property: Target Port in containers for traffic from ingress."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withTargetPortHttpScheme(com.azure.resourcemanager.appcontainers.models.IngressTargetPortHttpScheme)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withTargetPortHttpScheme(IngressTargetPortHttpScheme targetPortHttpScheme)"
  name: "withTargetPortHttpScheme(IngressTargetPortHttpScheme targetPortHttpScheme)"
  nameWithType: "Ingress.withTargetPortHttpScheme(IngressTargetPortHttpScheme targetPortHttpScheme)"
  summary: "Set the target<wbr>Port<wbr>Http<wbr>Scheme property: Whether an http app listens on http or https."
  parameters:
  - description: "the targetPortHttpScheme value to set."
    name: "targetPortHttpScheme"
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.IngressTargetPortHttpScheme?alt=com.azure.resourcemanager.appcontainers.models.IngressTargetPortHttpScheme&text=IngressTargetPortHttpScheme\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Ingress withTargetPortHttpScheme(IngressTargetPortHttpScheme targetPortHttpScheme)"
  desc: "Set the targetPortHttpScheme property: Whether an http app listens on http or https."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withTraffic(java.util.List<com.azure.resourcemanager.appcontainers.models.TrafficWeight>)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withTraffic(List<TrafficWeight> traffic)"
  name: "withTraffic(List<TrafficWeight> traffic)"
  nameWithType: "Ingress.withTraffic(List<TrafficWeight> traffic)"
  summary: "Set the traffic property: Traffic weights for app's revisions."
  parameters:
  - description: "the traffic value to set."
    name: "traffic"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.TrafficWeight?alt=com.azure.resourcemanager.appcontainers.models.TrafficWeight&text=TrafficWeight\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Ingress withTraffic(List<TrafficWeight> traffic)"
  desc: "Set the traffic property: Traffic weights for app's revisions."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appcontainers.models.Ingress.withTransport(com.azure.resourcemanager.appcontainers.models.IngressTransportMethod)"
  fullName: "com.azure.resourcemanager.appcontainers.models.Ingress.withTransport(IngressTransportMethod transport)"
  name: "withTransport(IngressTransportMethod transport)"
  nameWithType: "Ingress.withTransport(IngressTransportMethod transport)"
  summary: "Set the transport property: Ingress transport protocol."
  parameters:
  - description: "the transport value to set."
    name: "transport"
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.IngressTransportMethod?alt=com.azure.resourcemanager.appcontainers.models.IngressTransportMethod&text=IngressTransportMethod\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Ingress withTransport(IngressTransportMethod transport)"
  desc: "Set the transport property: Ingress transport protocol."
  returns:
    description: "the Ingress object itself."
    type: "<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Container App Ingress configuration."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.Ingress?alt=com.azure.resourcemanager.appcontainers.models.Ingress&text=Ingress\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.appcontainers.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appcontainers:1.0.0-beta.8
