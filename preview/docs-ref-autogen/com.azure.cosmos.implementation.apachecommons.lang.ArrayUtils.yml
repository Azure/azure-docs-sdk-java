### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils
  id: ArrayUtils
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang
  children:
  - com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.<T>add(T[],T)
  - com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.EMPTY_STRING_ARRAY
  - com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND
  - com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.contains(java.lang.Object[],java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.getLength(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)
  - com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.isEmpty(char[])
  - com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.isEmpty(java.lang.Object[])
  langs:
  - java
  name: ArrayUtils
  nameWithType: ArrayUtils
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils
  type: Class
  package: com.azure.cosmos.implementation.apachecommons.lang
  syntax:
    content: public class ArrayUtils
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.<T>add(T[],T)
  id: <T>add(T[],T)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils
  langs:
  - java
  name: <T>add(T[] array, T element)
  nameWithType: ArrayUtils.<T>add(T[] array, T element)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.<T>add(T[] array, T element)
  overload: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.add*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang
  summary: Copies the given array and adds the given element at the end of the new array.
  syntax:
    content: public static T[] <T>add(T[] array, T element)
    parameters:
    - id: array
      type: T[]
      description: the array to "add" the element to, may be <code>null</code>
    - id: element
      type: T
      description: the object to add, may be <code>null</code>
    return:
      type: T[]
      description: A new array containing the existing elements plus the new element
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.ArrayUtils()
  id: ArrayUtils()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils
  langs:
  - java
  name: ArrayUtils()
  nameWithType: ArrayUtils.ArrayUtils()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.ArrayUtils()
  overload: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.ArrayUtils*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.lang
  syntax:
    content: private ArrayUtils()
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.EMPTY_STRING_ARRAY
  id: EMPTY_STRING_ARRAY
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils
  langs:
  - java
  name: EMPTY_STRING_ARRAY
  nameWithType: ArrayUtils.EMPTY_STRING_ARRAY
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.EMPTY_STRING_ARRAY
  type: Field
  package: com.azure.cosmos.implementation.apachecommons.lang
  summary: An empty immutable `String` array.
  syntax:
    content: public static final String[] EMPTY_STRING_ARRAY
    return:
      type: java.lang.String[]
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND
  id: INDEX_NOT_FOUND
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils
  langs:
  - java
  name: INDEX_NOT_FOUND
  nameWithType: ArrayUtils.INDEX_NOT_FOUND
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND
  type: Field
  package: com.azure.cosmos.implementation.apachecommons.lang
  summary: 'The index value when an element is not found in a list or array: `-1`. This value is returned by methods in this class and can also be used in comparisons with values returned by various method from <xref uid="java.util.List" data-throw-if-not-resolved="false">java.util.List</xref>.'
  syntax:
    content: public static final int INDEX_NOT_FOUND
    return:
      type: int
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.contains(java.lang.Object[],java.lang.Object)
  id: contains(java.lang.Object[],java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils
  langs:
  - java
  name: contains(Object[] array, Object objectToFind)
  nameWithType: ArrayUtils.contains(Object[] array, Object objectToFind)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.contains(Object[] array, Object objectToFind)
  overload: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.contains*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang
  summary: >-
    Checks if the object is in the given array.


    The method returns `false` if a `null` array is passed in.
  syntax:
    content: public static boolean contains(Object[] array, Object objectToFind)
    parameters:
    - id: array
      type: java.lang.Object[]
      description: the array to search through
    - id: objectToFind
      type: java.lang.Object
      description: the object to find
    return:
      type: boolean
      description: <code>true</code> if the array contains the object
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.getLength(java.lang.Object)
  id: getLength(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils
  langs:
  - java
  name: getLength(Object array)
  nameWithType: ArrayUtils.getLength(Object array)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.getLength(Object array)
  overload: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.getLength*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang
  summary: >-
    Returns the length of the specified array. This method can deal with `Object` arrays and with primitive arrays.


    If the input array is `null`, `0` is returned.
  syntax:
    content: public static int getLength(Object array)
    parameters:
    - id: array
      type: java.lang.Object
      description: the array to retrieve the length from, may be null
    return:
      type: int
      description: The length of the array, or <code>0</code> if the array is <code>null</code>
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object)
  id: indexOf(java.lang.Object[],java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils
  langs:
  - java
  name: indexOf(Object[] array, Object objectToFind)
  nameWithType: ArrayUtils.indexOf(Object[] array, Object objectToFind)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf(Object[] array, Object objectToFind)
  overload: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang
  summary: >-
    Finds the index of the given object in the array.


    This method returns <xref uid="com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND" data-throw-if-not-resolved="false">#INDEX_NOT_FOUND</xref> (`-1`) for a `null` input array.
  syntax:
    content: public static int indexOf(Object[] array, Object objectToFind)
    parameters:
    - id: array
      type: java.lang.Object[]
      description: the array to search through for the object, may be <code>null</code>
    - id: objectToFind
      type: java.lang.Object
      description: the object to find, may be <code>null</code>
    return:
      type: int
      description: >-
        the index of the object within the array,
          <xref uid="com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND" data-throw-if-not-resolved="false">#INDEX_NOT_FOUND</xref> (<code>-1</code>) if not found or <code>null</code> array input
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)
  id: indexOf(java.lang.Object[],java.lang.Object,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils
  langs:
  - java
  name: indexOf(Object[] array, Object objectToFind, int startIndex)
  nameWithType: ArrayUtils.indexOf(Object[] array, Object objectToFind, int startIndex)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf(Object[] array, Object objectToFind, int startIndex)
  overload: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang
  summary: >-
    Finds the index of the given object in the array starting at the given index.


    This method returns <xref uid="com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND" data-throw-if-not-resolved="false">#INDEX_NOT_FOUND</xref> (`-1`) for a `null` input array.


    A negative startIndex is treated as zero. A startIndex larger than the array length will return <xref uid="com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND" data-throw-if-not-resolved="false">#INDEX_NOT_FOUND</xref> (`-1`).
  syntax:
    content: public static int indexOf(Object[] array, Object objectToFind, int startIndex)
    parameters:
    - id: array
      type: java.lang.Object[]
      description: the array to search through for the object, may be <code>null</code>
    - id: objectToFind
      type: java.lang.Object
      description: the object to find, may be <code>null</code>
    - id: startIndex
      type: int
      description: the index to start searching at
    return:
      type: int
      description: >-
        the index of the object within the array starting at the index,
          <xref uid="com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.INDEX_NOT_FOUND" data-throw-if-not-resolved="false">#INDEX_NOT_FOUND</xref> (<code>-1</code>) if not found or <code>null</code> array input
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.isEmpty(char[])
  id: isEmpty(char[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils
  langs:
  - java
  name: isEmpty(char[] array)
  nameWithType: ArrayUtils.isEmpty(char[] array)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.isEmpty(char[] array)
  overload: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.isEmpty*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang
  summary: Checks if an array of primitive chars is empty or `null`.
  syntax:
    content: public static boolean isEmpty(char[] array)
    parameters:
    - id: array
      type: char[]
      description: the array to test
    return:
      type: boolean
      description: <code>true</code> if the array is empty or <code>null</code>
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.isEmpty(java.lang.Object[])
  id: isEmpty(java.lang.Object[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils
  langs:
  - java
  name: isEmpty(Object[] array)
  nameWithType: ArrayUtils.isEmpty(Object[] array)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.isEmpty(Object[] array)
  overload: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.isEmpty*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang
  summary: Checks if an array of Objects is empty or `null`.
  syntax:
    content: public static boolean isEmpty(Object[] array)
    parameters:
    - id: array
      type: java.lang.Object[]
      description: the array to test
    return:
      type: boolean
      description: <code>true</code> if the array is empty or <code>null</code>
references:
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.ArrayUtils*
  name: ArrayUtils
  nameWithType: ArrayUtils.ArrayUtils
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.ArrayUtils
  package: com.azure.cosmos.implementation.apachecommons.lang
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.getLength*
  name: getLength
  nameWithType: ArrayUtils.getLength
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.getLength
  package: com.azure.cosmos.implementation.apachecommons.lang
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf*
  name: indexOf
  nameWithType: ArrayUtils.indexOf
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.indexOf
  package: com.azure.cosmos.implementation.apachecommons.lang
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.contains*
  name: contains
  nameWithType: ArrayUtils.contains
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.contains
  package: com.azure.cosmos.implementation.apachecommons.lang
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.isEmpty*
  name: isEmpty
  nameWithType: ArrayUtils.isEmpty
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.isEmpty
  package: com.azure.cosmos.implementation.apachecommons.lang
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: T[]
  spec.java:
  - uid: T
    name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.add*
  name: <T>add
  nameWithType: ArrayUtils.<T>add
  fullName: com.azure.cosmos.implementation.apachecommons.lang.ArrayUtils.<T>add
  package: com.azure.cosmos.implementation.apachecommons.lang
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
