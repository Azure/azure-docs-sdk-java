### YamlMime:JavaType
uid: "com.azure.analytics.purview.scanning.DataSourcesClient"
fullName: "com.azure.analytics.purview.scanning.DataSourcesClient"
name: "DataSourcesClient"
nameWithType: "DataSourcesClient"
summary: "Initializes a new instance of the synchronous Purview<wbr>Scanning<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DataSourcesClient"
methods:
- uid: "com.azure.analytics.purview.scanning.DataSourcesClient.deleteWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.purview.scanning.DataSourcesClient.deleteWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  name: "deleteWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  nameWithType: "DataSourcesClient.deleteWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  summary: "Deletes a data source."
  parameters:
  - description: "The dataSourceName parameter."
    name: "dataSourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> deleteWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  desc: "Deletes a data source.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | ----------- |\n    | Name       | Type   | Required | Description |\n    | apiVersion | String | Yes      | Api Version |\n\n**Response Body Schema**\n\n```java\n{\n     id: String\n     name: String\n     scans: [\n         {\n             id: String\n             name: String\n             scanResults: [\n                 {\n                     parentId: String\n                     id: String\n                     resourceId: String\n                     status: String\n                     assetsDiscovered: Long\n                     assetsClassified: Long\n                     diagnostics: {\n                         notifications: [\n                             {\n                                 message: String\n                                 code: Integer\n                             }\n                         ]\n                         exceptionCountMap: {\n                             String: int\n                         }\n                     }\n                     startTime: String\n                     queuedTime: String\n                     pipelineStartTime: String\n                     endTime: String\n                     scanRulesetVersion: Integer\n                     scanRulesetType: String(Custom/System)\n                     scanLevelType: String(Full/Incremental)\n                     errorMessage: String\n                     error: {\n                         code: String\n                         message: String\n                         target: String\n                         details: [\n                             {\n                                 code: String\n                                 message: String\n                                 target: String\n                                 details: [\n                                     (recursive schema, see above)\n                                 ]\n                             }\n                         ]\n                     }\n                     runType: String\n                     dataSourceType: String(None/AzureSubscription/AzureResourceGroup/AzureSynapseWorkspace/AzureSynapse/AdlsGen1/AdlsGen2/AmazonAccount/AmazonS3/AmazonSql/AzureCosmosDb/AzureDataExplorer/AzureFileService/AzureSqlDatabase/AmazonPostgreSql/AzurePostgreSql/SqlServerDatabase/AzureSqlDatabaseManagedInstance/AzureSqlDataWarehouse/AzureMySql/AzureStorage/Teradata/Oracle/SapS4Hana/SapEcc/PowerBI)\n                 }\n             ]\n         }\n     ]\n }\n```"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.scanning.DataSourcesClient.getWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.purview.scanning.DataSourcesClient.getWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  name: "getWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  nameWithType: "DataSourcesClient.getWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  summary: "Get a data source."
  parameters:
  - description: "The dataSourceName parameter."
    name: "dataSourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  desc: "Get a data source.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | ----------- |\n    | Name       | Type   | Required | Description |\n    | apiVersion | String | Yes      | Api Version |\n\n**Response Body Schema**\n\n```java\n{\n     id: String\n     name: String\n     scans: [\n         {\n             id: String\n             name: String\n             scanResults: [\n                 {\n                     parentId: String\n                     id: String\n                     resourceId: String\n                     status: String\n                     assetsDiscovered: Long\n                     assetsClassified: Long\n                     diagnostics: {\n                         notifications: [\n                             {\n                                 message: String\n                                 code: Integer\n                             }\n                         ]\n                         exceptionCountMap: {\n                             String: int\n                         }\n                     }\n                     startTime: String\n                     queuedTime: String\n                     pipelineStartTime: String\n                     endTime: String\n                     scanRulesetVersion: Integer\n                     scanRulesetType: String(Custom/System)\n                     scanLevelType: String(Full/Incremental)\n                     errorMessage: String\n                     error: {\n                         code: String\n                         message: String\n                         target: String\n                         details: [\n                             {\n                                 code: String\n                                 message: String\n                                 target: String\n                                 details: [\n                                     (recursive schema, see above)\n                                 ]\n                             }\n                         ]\n                     }\n                     runType: String\n                     dataSourceType: String(None/AzureSubscription/AzureResourceGroup/AzureSynapseWorkspace/AzureSynapse/AdlsGen1/AdlsGen2/AmazonAccount/AmazonS3/AmazonSql/AzureCosmosDb/AzureDataExplorer/AzureFileService/AzureSqlDatabase/AmazonPostgreSql/AzurePostgreSql/SqlServerDatabase/AzureSqlDatabaseManagedInstance/AzureSqlDataWarehouse/AzureMySql/AzureStorage/Teradata/Oracle/SapS4Hana/SapEcc/PowerBI)\n                 }\n             ]\n         }\n     ]\n }\n```"
  returns:
    description: "a data source."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.scanning.DataSourcesClient.listAll(com.azure.core.http.rest.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.purview.scanning.DataSourcesClient.listAll(RequestOptions requestOptions, Context context)"
  name: "listAll(RequestOptions requestOptions, Context context)"
  nameWithType: "DataSourcesClient.listAll(RequestOptions requestOptions, Context context)"
  summary: "List data sources in Data catalog."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listAll(RequestOptions requestOptions, Context context)"
  desc: "List data sources in Data catalog.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | ----------- |\n    | Name       | Type   | Required | Description |\n    | apiVersion | String | Yes      | Api Version |\n\n**Response Body Schema**\n\n```java\n{\n     value: [\n         {\n             id: String\n             name: String\n             scans: [\n                 {\n                     id: String\n                     name: String\n                     scanResults: [\n                         {\n                             parentId: String\n                             id: String\n                             resourceId: String\n                             status: String\n                             assetsDiscovered: Long\n                             assetsClassified: Long\n                             diagnostics: {\n                                 notifications: [\n                                     {\n                                         message: String\n                                         code: Integer\n                                     }\n                                 ]\n                                 exceptionCountMap: {\n                                     String: int\n                                 }\n                             }\n                             startTime: String\n                             queuedTime: String\n                             pipelineStartTime: String\n                             endTime: String\n                             scanRulesetVersion: Integer\n                             scanRulesetType: String(Custom/System)\n                             scanLevelType: String(Full/Incremental)\n                             errorMessage: String\n                             error: {\n                                 code: String\n                                 message: String\n                                 target: String\n                                 details: [\n                                     {\n                                         code: String\n                                         message: String\n                                         target: String\n                                         details: [\n                                             (recursive schema, see above)\n                                         ]\n                                     }\n                                 ]\n                             }\n                             runType: String\n                             dataSourceType: String(None/AzureSubscription/AzureResourceGroup/AzureSynapseWorkspace/AzureSynapse/AdlsGen1/AdlsGen2/AmazonAccount/AmazonS3/AmazonSql/AzureCosmosDb/AzureDataExplorer/AzureFileService/AzureSqlDatabase/AmazonPostgreSql/AzurePostgreSql/SqlServerDatabase/AzureSqlDatabaseManagedInstance/AzureSqlDataWarehouse/AzureMySql/AzureStorage/Teradata/Oracle/SapS4Hana/SapEcc/PowerBI)\n                         }\n                     ]\n                 }\n             ]\n         }\n     ]\n     nextLink: String\n     count: Long\n }\n```"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.scanning.DataSourcesClient.upsertWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.analytics.purview.scanning.DataSourcesClient.upsertWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  name: "upsertWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  nameWithType: "DataSourcesClient.upsertWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  summary: "Creates or Updates a data source."
  parameters:
  - description: "The dataSourceName parameter."
    name: "dataSourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> upsertWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  desc: "Creates or Updates a data source.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | ----------- |\n    | Name       | Type   | Required | Description |\n    | apiVersion | String | Yes      | Api Version |\n\n**Request Body Schema**\n\n```java\n{\n     id: String\n     name: String\n     scans: [\n         {\n             id: String\n             name: String\n             scanResults: [\n                 {\n                     parentId: String\n                     id: String\n                     resourceId: String\n                     status: String\n                     assetsDiscovered: Long\n                     assetsClassified: Long\n                     diagnostics: {\n                         notifications: [\n                             {\n                                 message: String\n                                 code: Integer\n                             }\n                         ]\n                         exceptionCountMap: {\n                             String: int\n                         }\n                     }\n                     startTime: String\n                     queuedTime: String\n                     pipelineStartTime: String\n                     endTime: String\n                     scanRulesetVersion: Integer\n                     scanRulesetType: String(Custom/System)\n                     scanLevelType: String(Full/Incremental)\n                     errorMessage: String\n                     error: {\n                         code: String\n                         message: String\n                         target: String\n                         details: [\n                             {\n                                 code: String\n                                 message: String\n                                 target: String\n                                 details: [\n                                     (recursive schema, see above)\n                                 ]\n                             }\n                         ]\n                     }\n                     runType: String\n                     dataSourceType: String(None/AzureSubscription/AzureResourceGroup/AzureSynapseWorkspace/AzureSynapse/AdlsGen1/AdlsGen2/AmazonAccount/AmazonS3/AmazonSql/AzureCosmosDb/AzureDataExplorer/AzureFileService/AzureSqlDatabase/AmazonPostgreSql/AzurePostgreSql/SqlServerDatabase/AzureSqlDatabaseManagedInstance/AzureSqlDataWarehouse/AzureMySql/AzureStorage/Teradata/Oracle/SapS4Hana/SapEcc/PowerBI)\n                 }\n             ]\n         }\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String\n     name: String\n     scans: [\n         {\n             id: String\n             name: String\n             scanResults: [\n                 {\n                     parentId: String\n                     id: String\n                     resourceId: String\n                     status: String\n                     assetsDiscovered: Long\n                     assetsClassified: Long\n                     diagnostics: {\n                         notifications: [\n                             {\n                                 message: String\n                                 code: Integer\n                             }\n                         ]\n                         exceptionCountMap: {\n                             String: int\n                         }\n                     }\n                     startTime: String\n                     queuedTime: String\n                     pipelineStartTime: String\n                     endTime: String\n                     scanRulesetVersion: Integer\n                     scanRulesetType: String(Custom/System)\n                     scanLevelType: String(Full/Incremental)\n                     errorMessage: String\n                     error: {\n                         code: String\n                         message: String\n                         target: String\n                         details: [\n                             {\n                                 code: String\n                                 message: String\n                                 target: String\n                                 details: [\n                                     (recursive schema, see above)\n                                 ]\n                             }\n                         ]\n                     }\n                     runType: String\n                     dataSourceType: String(None/AzureSubscription/AzureResourceGroup/AzureSynapseWorkspace/AzureSynapse/AdlsGen1/AdlsGen2/AmazonAccount/AmazonS3/AmazonSql/AzureCosmosDb/AzureDataExplorer/AzureFileService/AzureSqlDatabase/AmazonPostgreSql/AzurePostgreSql/SqlServerDatabase/AzureSqlDatabaseManagedInstance/AzureSqlDataWarehouse/AzureMySql/AzureStorage/Teradata/Oracle/SapS4Hana/SapEcc/PowerBI)\n                 }\n             ]\n         }\n     ]\n }\n```"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous PurviewScanningClient type."
metadata: {}
package: "com.azure.analytics.purview.scanning"
artifact: com.azure:azure-analytics-purview-scanning:1.0.0-beta.2
