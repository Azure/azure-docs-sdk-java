### YamlMime:JavaMember
uid: "com.azure.data.appconfiguration.ConfigurationClient.deleteConfigurationSetting*"
fullName: "com.azure.data.appconfiguration.ConfigurationClient.deleteConfigurationSetting"
name: "deleteConfigurationSetting"
nameWithType: "ConfigurationClient.deleteConfigurationSetting"
members:
- uid: "com.azure.data.appconfiguration.ConfigurationClient.deleteConfigurationSetting(com.azure.data.appconfiguration.models.ConfigurationSetting)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClient.deleteConfigurationSetting(ConfigurationSetting setting)"
  name: "deleteConfigurationSetting(ConfigurationSetting setting)"
  nameWithType: "ConfigurationClient.deleteConfigurationSetting(ConfigurationSetting setting)"
  summary: "Deletes the <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref> with a matching <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting.getKey()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>, and optional <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting.getLabel()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"label\"></xref> and optional ETag combination.\n\n**Code Samples**\n\nDelete the setting with the key \"prodDBConnection\".\n\n```java\nConfigurationSetting setting = configurationClient.deleteConfigurationSetting(\n     new ConfigurationSetting().setKey(\"prodDBConnection\"));\n System.out.printf(\"Key: %s, Value: %s\", setting.getKey(), setting.getValue());\n```"
  parameters:
  - description: "The setting to delete based on its key, optional label and optional ETag combination."
    name: "setting"
    type: "<xref href=\"com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfigurationSetting deleteConfigurationSetting(ConfigurationSetting setting)"
  returns:
    description: "The deleted ConfigurationSetting or <code>null</code> if it didn't exist. <code>null</code> is also returned if the\n <code>key</code> is an invalid value (which will also throw ServiceRequestException described below)."
    type: "<xref href=\"com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.appconfiguration.ConfigurationClient.deleteConfigurationSetting(java.lang.String,java.lang.String)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClient.deleteConfigurationSetting(String key, String label)"
  name: "deleteConfigurationSetting(String key, String label)"
  nameWithType: "ConfigurationClient.deleteConfigurationSetting(String key, String label)"
  summary: "Deletes the <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref> with a matching `key` and optional `label` combination.\n\n**Code Samples**\n\nDelete the setting with the key \"prodDBConnection\".\n\n```java\nConfigurationSetting result = configurationClient.deleteConfigurationSetting(\"prodDBConnection\", null);\n System.out.printf(\"Key: %s, Value: %s\", result.getKey(), result.getValue());\n```"
  parameters:
  - description: "The key of configuration setting to delete."
    name: "key"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The label of configuration setting to delete. If <code>null</code> no label will be used."
    name: "label"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfigurationSetting deleteConfigurationSetting(String key, String label)"
  returns:
    description: "The deleted ConfigurationSetting or <code>null</code> if it didn't exist. <code>null</code> is also returned if the\n <code>key</code> is an invalid value (which will also throw ServiceRequestException described below)."
    type: "<xref href=\"com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.data.appconfiguration"
artifact: com.azure:azure-data-appconfiguration:1.2.0-beta.1
