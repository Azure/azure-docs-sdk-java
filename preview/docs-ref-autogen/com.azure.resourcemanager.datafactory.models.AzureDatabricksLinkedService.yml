### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService"
name: "AzureDatabricksLinkedService"
nameWithType: "AzureDatabricksLinkedService"
summary: "Azure Databricks linked service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureDatabricksLinkedService extends LinkedService"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.AzureDatabricksLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.AzureDatabricksLinkedService()"
  name: "AzureDatabricksLinkedService()"
  nameWithType: "AzureDatabricksLinkedService.AzureDatabricksLinkedService()"
  syntax: "public AzureDatabricksLinkedService()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.accessToken()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.accessToken()"
  name: "accessToken()"
  nameWithType: "AzureDatabricksLinkedService.accessToken()"
  summary: "Get the access<wbr>Token property: Access token for databricks REST API."
  syntax: "public SecretBase accessToken()"
  desc: "Get the accessToken property: Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string (or Expression with resultType string)."
  returns:
    description: "the accessToken value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.authentication()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.authentication()"
  name: "authentication()"
  nameWithType: "AzureDatabricksLinkedService.authentication()"
  summary: "Get the authentication property: Required to specify MSI, if using Workspace resource id for databricks REST API."
  syntax: "public Object authentication()"
  desc: "Get the authentication property: Required to specify MSI, if using Workspace resource id for databricks REST API. Type: string (or Expression with resultType string)."
  returns:
    description: "the authentication value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.credential()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.credential()"
  name: "credential()"
  nameWithType: "AzureDatabricksLinkedService.credential()"
  summary: "Get the credential property: The credential reference containing authentication information."
  syntax: "public CredentialReference credential()"
  desc: "Get the credential property: The credential reference containing authentication information."
  returns:
    description: "the credential value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.domain()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.domain()"
  name: "domain()"
  nameWithType: "AzureDatabricksLinkedService.domain()"
  summary: "Get the domain property: <REGION>.azuredatabricks.<wbr>net, domain name of your Databricks deployment."
  syntax: "public Object domain()"
  desc: "Get the domain property: <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string)."
  returns:
    description: "the domain value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "AzureDatabricksLinkedService.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.existingClusterId()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.existingClusterId()"
  name: "existingClusterId()"
  nameWithType: "AzureDatabricksLinkedService.existingClusterId()"
  summary: "Get the existing<wbr>Cluster<wbr>Id property: The id of an existing interactive cluster that will be used for all runs of this activity."
  syntax: "public Object existingClusterId()"
  desc: "Get the existingClusterId property: The id of an existing interactive cluster that will be used for all runs of this activity. Type: string (or Expression with resultType string)."
  returns:
    description: "the existingClusterId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.instancePoolId()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.instancePoolId()"
  name: "instancePoolId()"
  nameWithType: "AzureDatabricksLinkedService.instancePoolId()"
  summary: "Get the instance<wbr>Pool<wbr>Id property: The id of an existing instance pool that will be used for all runs of this activity."
  syntax: "public Object instancePoolId()"
  desc: "Get the instancePoolId property: The id of an existing instance pool that will be used for all runs of this activity. Type: string (or Expression with resultType string)."
  returns:
    description: "the instancePoolId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterCustomTags()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterCustomTags()"
  name: "newClusterCustomTags()"
  nameWithType: "AzureDatabricksLinkedService.newClusterCustomTags()"
  summary: "Get the new<wbr>Cluster<wbr>Custom<wbr>Tags property: Additional tags for cluster resources."
  syntax: "public Map<String,Object> newClusterCustomTags()"
  desc: "Get the newClusterCustomTags property: Additional tags for cluster resources. This property is ignored in instance pool configurations."
  returns:
    description: "the newClusterCustomTags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterDriverNodeType()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterDriverNodeType()"
  name: "newClusterDriverNodeType()"
  nameWithType: "AzureDatabricksLinkedService.newClusterDriverNodeType()"
  summary: "Get the new<wbr>Cluster<wbr>Driver<wbr>Node<wbr>Type property: The driver node type for the new job cluster."
  syntax: "public Object newClusterDriverNodeType()"
  desc: "Get the newClusterDriverNodeType property: The driver node type for the new job cluster. This property is ignored in instance pool configurations. Type: string (or Expression with resultType string)."
  returns:
    description: "the newClusterDriverNodeType value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterEnableElasticDisk()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterEnableElasticDisk()"
  name: "newClusterEnableElasticDisk()"
  nameWithType: "AzureDatabricksLinkedService.newClusterEnableElasticDisk()"
  summary: "Get the new<wbr>Cluster<wbr>Enable<wbr>Elastic<wbr>Disk property: Enable the elastic disk on the new cluster."
  syntax: "public Object newClusterEnableElasticDisk()"
  desc: "Get the newClusterEnableElasticDisk property: Enable the elastic disk on the new cluster. This property is now ignored, and takes the default elastic disk behavior in Databricks (elastic disks are always enabled). Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the newClusterEnableElasticDisk value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterInitScripts()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterInitScripts()"
  name: "newClusterInitScripts()"
  nameWithType: "AzureDatabricksLinkedService.newClusterInitScripts()"
  summary: "Get the new<wbr>Cluster<wbr>Init<wbr>Scripts property: User-defined initialization scripts for the new cluster."
  syntax: "public Object newClusterInitScripts()"
  desc: "Get the newClusterInitScripts property: User-defined initialization scripts for the new cluster. Type: array of strings (or Expression with resultType array of strings)."
  returns:
    description: "the newClusterInitScripts value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterLogDestination()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterLogDestination()"
  name: "newClusterLogDestination()"
  nameWithType: "AzureDatabricksLinkedService.newClusterLogDestination()"
  summary: "Get the new<wbr>Cluster<wbr>Log<wbr>Destination property: Specify a location to deliver Spark driver, worker, and event logs."
  syntax: "public Object newClusterLogDestination()"
  desc: "Get the newClusterLogDestination property: Specify a location to deliver Spark driver, worker, and event logs. Type: string (or Expression with resultType string)."
  returns:
    description: "the newClusterLogDestination value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterNodeType()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterNodeType()"
  name: "newClusterNodeType()"
  nameWithType: "AzureDatabricksLinkedService.newClusterNodeType()"
  summary: "Get the new<wbr>Cluster<wbr>Node<wbr>Type property: The node type of the new job cluster."
  syntax: "public Object newClusterNodeType()"
  desc: "Get the newClusterNodeType property: The node type of the new job cluster. This property is required if newClusterVersion is specified and instancePoolId is not specified. If instancePoolId is specified, this property is ignored. Type: string (or Expression with resultType string)."
  returns:
    description: "the newClusterNodeType value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterNumOfWorker()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterNumOfWorker()"
  name: "newClusterNumOfWorker()"
  nameWithType: "AzureDatabricksLinkedService.newClusterNumOfWorker()"
  summary: "Get the new<wbr>Cluster<wbr>Num<wbr>OfWorker property: If not using an existing interactive cluster, this specifies the number of worker nodes to use for the new job cluster or instance pool."
  syntax: "public Object newClusterNumOfWorker()"
  desc: "Get the newClusterNumOfWorker property: If not using an existing interactive cluster, this specifies the number of worker nodes to use for the new job cluster or instance pool. For new job clusters, this a string-formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 (min) to 10 (max). For instance pools, this is a string-formatted Int32, and can only specify a fixed number of worker nodes, such as '2'. Required if newClusterVersion is specified. Type: string (or Expression with resultType string)."
  returns:
    description: "the newClusterNumOfWorker value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterSparkConf()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterSparkConf()"
  name: "newClusterSparkConf()"
  nameWithType: "AzureDatabricksLinkedService.newClusterSparkConf()"
  summary: "Get the new<wbr>Cluster<wbr>Spark<wbr>Conf property: A set of optional, user-specified Spark configuration key-value pairs."
  syntax: "public Map<String,Object> newClusterSparkConf()"
  desc: "Get the newClusterSparkConf property: A set of optional, user-specified Spark configuration key-value pairs."
  returns:
    description: "the newClusterSparkConf value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterSparkEnvVars()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterSparkEnvVars()"
  name: "newClusterSparkEnvVars()"
  nameWithType: "AzureDatabricksLinkedService.newClusterSparkEnvVars()"
  summary: "Get the new<wbr>Cluster<wbr>Spark<wbr>Env<wbr>Vars property: A set of optional, user-specified Spark environment variables key-value pairs."
  syntax: "public Map<String,Object> newClusterSparkEnvVars()"
  desc: "Get the newClusterSparkEnvVars property: A set of optional, user-specified Spark environment variables key-value pairs."
  returns:
    description: "the newClusterSparkEnvVars value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterVersion()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.newClusterVersion()"
  name: "newClusterVersion()"
  nameWithType: "AzureDatabricksLinkedService.newClusterVersion()"
  summary: "Get the new<wbr>Cluster<wbr>Version property: If not using an existing interactive cluster, this specifies the Spark version of a new job cluster or instance pool nodes created for each run of this activity."
  syntax: "public Object newClusterVersion()"
  desc: "Get the newClusterVersion property: If not using an existing interactive cluster, this specifies the Spark version of a new job cluster or instance pool nodes created for each run of this activity. Required if instancePoolId is specified. Type: string (or Expression with resultType string)."
  returns:
    description: "the newClusterVersion value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.policyId()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.policyId()"
  name: "policyId()"
  nameWithType: "AzureDatabricksLinkedService.policyId()"
  summary: "Get the policy<wbr>Id property: The policy id for limiting the ability to configure clusters based on a user defined set of rules."
  syntax: "public Object policyId()"
  desc: "Get the policyId property: The policy id for limiting the ability to configure clusters based on a user defined set of rules. Type: string (or Expression with resultType string)."
  returns:
    description: "the policyId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.validate()"
  name: "validate()"
  nameWithType: "AzureDatabricksLinkedService.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withAccessToken(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withAccessToken(SecretBase accessToken)"
  name: "withAccessToken(SecretBase accessToken)"
  nameWithType: "AzureDatabricksLinkedService.withAccessToken(SecretBase accessToken)"
  summary: "Set the access<wbr>Token property: Access token for databricks REST API."
  parameters:
  - description: "the accessToken value to set."
    name: "accessToken"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withAccessToken(SecretBase accessToken)"
  desc: "Set the accessToken property: Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "AzureDatabricksLinkedService.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureDatabricksLinkedService withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withAuthentication(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withAuthentication(Object authentication)"
  name: "withAuthentication(Object authentication)"
  nameWithType: "AzureDatabricksLinkedService.withAuthentication(Object authentication)"
  summary: "Set the authentication property: Required to specify MSI, if using Workspace resource id for databricks REST API."
  parameters:
  - description: "the authentication value to set."
    name: "authentication"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withAuthentication(Object authentication)"
  desc: "Set the authentication property: Required to specify MSI, if using Workspace resource id for databricks REST API. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  name: "withConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "AzureDatabricksLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connect<wbr>Via property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withConnectVia(IntegrationRuntimeReference connectVia)"
  desc: "Set the connectVia property: The integration runtime reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withCredential(com.azure.resourcemanager.datafactory.models.CredentialReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withCredential(CredentialReference credential)"
  name: "withCredential(CredentialReference credential)"
  nameWithType: "AzureDatabricksLinkedService.withCredential(CredentialReference credential)"
  summary: "Set the credential property: The credential reference containing authentication information."
  parameters:
  - description: "the credential value to set."
    name: "credential"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CredentialReference?alt=com.azure.resourcemanager.datafactory.models.CredentialReference&text=CredentialReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withCredential(CredentialReference credential)"
  desc: "Set the credential property: The credential reference containing authentication information."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "AzureDatabricksLinkedService.withDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withDescription(String description)"
  desc: "Set the description property: Linked service description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withDomain(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withDomain(Object domain)"
  name: "withDomain(Object domain)"
  nameWithType: "AzureDatabricksLinkedService.withDomain(Object domain)"
  summary: "Set the domain property: <REGION>.azuredatabricks.<wbr>net, domain name of your Databricks deployment."
  parameters:
  - description: "the domain value to set."
    name: "domain"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withDomain(Object domain)"
  desc: "Set the domain property: <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "AzureDatabricksLinkedService.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withExistingClusterId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withExistingClusterId(Object existingClusterId)"
  name: "withExistingClusterId(Object existingClusterId)"
  nameWithType: "AzureDatabricksLinkedService.withExistingClusterId(Object existingClusterId)"
  summary: "Set the existing<wbr>Cluster<wbr>Id property: The id of an existing interactive cluster that will be used for all runs of this activity."
  parameters:
  - description: "the existingClusterId value to set."
    name: "existingClusterId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withExistingClusterId(Object existingClusterId)"
  desc: "Set the existingClusterId property: The id of an existing interactive cluster that will be used for all runs of this activity. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withInstancePoolId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withInstancePoolId(Object instancePoolId)"
  name: "withInstancePoolId(Object instancePoolId)"
  nameWithType: "AzureDatabricksLinkedService.withInstancePoolId(Object instancePoolId)"
  summary: "Set the instance<wbr>Pool<wbr>Id property: The id of an existing instance pool that will be used for all runs of this activity."
  parameters:
  - description: "the instancePoolId value to set."
    name: "instancePoolId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withInstancePoolId(Object instancePoolId)"
  desc: "Set the instancePoolId property: The id of an existing instance pool that will be used for all runs of this activity. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterCustomTags(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterCustomTags(Map<String,Object> newClusterCustomTags)"
  name: "withNewClusterCustomTags(Map<String,Object> newClusterCustomTags)"
  nameWithType: "AzureDatabricksLinkedService.withNewClusterCustomTags(Map<String,Object> newClusterCustomTags)"
  summary: "Set the new<wbr>Cluster<wbr>Custom<wbr>Tags property: Additional tags for cluster resources."
  parameters:
  - description: "the newClusterCustomTags value to set."
    name: "newClusterCustomTags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureDatabricksLinkedService withNewClusterCustomTags(Map<String,Object> newClusterCustomTags)"
  desc: "Set the newClusterCustomTags property: Additional tags for cluster resources. This property is ignored in instance pool configurations."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterDriverNodeType(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterDriverNodeType(Object newClusterDriverNodeType)"
  name: "withNewClusterDriverNodeType(Object newClusterDriverNodeType)"
  nameWithType: "AzureDatabricksLinkedService.withNewClusterDriverNodeType(Object newClusterDriverNodeType)"
  summary: "Set the new<wbr>Cluster<wbr>Driver<wbr>Node<wbr>Type property: The driver node type for the new job cluster."
  parameters:
  - description: "the newClusterDriverNodeType value to set."
    name: "newClusterDriverNodeType"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withNewClusterDriverNodeType(Object newClusterDriverNodeType)"
  desc: "Set the newClusterDriverNodeType property: The driver node type for the new job cluster. This property is ignored in instance pool configurations. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterEnableElasticDisk(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterEnableElasticDisk(Object newClusterEnableElasticDisk)"
  name: "withNewClusterEnableElasticDisk(Object newClusterEnableElasticDisk)"
  nameWithType: "AzureDatabricksLinkedService.withNewClusterEnableElasticDisk(Object newClusterEnableElasticDisk)"
  summary: "Set the new<wbr>Cluster<wbr>Enable<wbr>Elastic<wbr>Disk property: Enable the elastic disk on the new cluster."
  parameters:
  - description: "the newClusterEnableElasticDisk value to set."
    name: "newClusterEnableElasticDisk"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withNewClusterEnableElasticDisk(Object newClusterEnableElasticDisk)"
  desc: "Set the newClusterEnableElasticDisk property: Enable the elastic disk on the new cluster. This property is now ignored, and takes the default elastic disk behavior in Databricks (elastic disks are always enabled). Type: boolean (or Expression with resultType boolean)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterInitScripts(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterInitScripts(Object newClusterInitScripts)"
  name: "withNewClusterInitScripts(Object newClusterInitScripts)"
  nameWithType: "AzureDatabricksLinkedService.withNewClusterInitScripts(Object newClusterInitScripts)"
  summary: "Set the new<wbr>Cluster<wbr>Init<wbr>Scripts property: User-defined initialization scripts for the new cluster."
  parameters:
  - description: "the newClusterInitScripts value to set."
    name: "newClusterInitScripts"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withNewClusterInitScripts(Object newClusterInitScripts)"
  desc: "Set the newClusterInitScripts property: User-defined initialization scripts for the new cluster. Type: array of strings (or Expression with resultType array of strings)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterLogDestination(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterLogDestination(Object newClusterLogDestination)"
  name: "withNewClusterLogDestination(Object newClusterLogDestination)"
  nameWithType: "AzureDatabricksLinkedService.withNewClusterLogDestination(Object newClusterLogDestination)"
  summary: "Set the new<wbr>Cluster<wbr>Log<wbr>Destination property: Specify a location to deliver Spark driver, worker, and event logs."
  parameters:
  - description: "the newClusterLogDestination value to set."
    name: "newClusterLogDestination"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withNewClusterLogDestination(Object newClusterLogDestination)"
  desc: "Set the newClusterLogDestination property: Specify a location to deliver Spark driver, worker, and event logs. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterNodeType(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterNodeType(Object newClusterNodeType)"
  name: "withNewClusterNodeType(Object newClusterNodeType)"
  nameWithType: "AzureDatabricksLinkedService.withNewClusterNodeType(Object newClusterNodeType)"
  summary: "Set the new<wbr>Cluster<wbr>Node<wbr>Type property: The node type of the new job cluster."
  parameters:
  - description: "the newClusterNodeType value to set."
    name: "newClusterNodeType"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withNewClusterNodeType(Object newClusterNodeType)"
  desc: "Set the newClusterNodeType property: The node type of the new job cluster. This property is required if newClusterVersion is specified and instancePoolId is not specified. If instancePoolId is specified, this property is ignored. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterNumOfWorker(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterNumOfWorker(Object newClusterNumOfWorker)"
  name: "withNewClusterNumOfWorker(Object newClusterNumOfWorker)"
  nameWithType: "AzureDatabricksLinkedService.withNewClusterNumOfWorker(Object newClusterNumOfWorker)"
  summary: "Set the new<wbr>Cluster<wbr>Num<wbr>OfWorker property: If not using an existing interactive cluster, this specifies the number of worker nodes to use for the new job cluster or instance pool."
  parameters:
  - description: "the newClusterNumOfWorker value to set."
    name: "newClusterNumOfWorker"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withNewClusterNumOfWorker(Object newClusterNumOfWorker)"
  desc: "Set the newClusterNumOfWorker property: If not using an existing interactive cluster, this specifies the number of worker nodes to use for the new job cluster or instance pool. For new job clusters, this a string-formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 (min) to 10 (max). For instance pools, this is a string-formatted Int32, and can only specify a fixed number of worker nodes, such as '2'. Required if newClusterVersion is specified. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterSparkConf(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterSparkConf(Map<String,Object> newClusterSparkConf)"
  name: "withNewClusterSparkConf(Map<String,Object> newClusterSparkConf)"
  nameWithType: "AzureDatabricksLinkedService.withNewClusterSparkConf(Map<String,Object> newClusterSparkConf)"
  summary: "Set the new<wbr>Cluster<wbr>Spark<wbr>Conf property: A set of optional, user-specified Spark configuration key-value pairs."
  parameters:
  - description: "the newClusterSparkConf value to set."
    name: "newClusterSparkConf"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureDatabricksLinkedService withNewClusterSparkConf(Map<String,Object> newClusterSparkConf)"
  desc: "Set the newClusterSparkConf property: A set of optional, user-specified Spark configuration key-value pairs."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterSparkEnvVars(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterSparkEnvVars(Map<String,Object> newClusterSparkEnvVars)"
  name: "withNewClusterSparkEnvVars(Map<String,Object> newClusterSparkEnvVars)"
  nameWithType: "AzureDatabricksLinkedService.withNewClusterSparkEnvVars(Map<String,Object> newClusterSparkEnvVars)"
  summary: "Set the new<wbr>Cluster<wbr>Spark<wbr>Env<wbr>Vars property: A set of optional, user-specified Spark environment variables key-value pairs."
  parameters:
  - description: "the newClusterSparkEnvVars value to set."
    name: "newClusterSparkEnvVars"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureDatabricksLinkedService withNewClusterSparkEnvVars(Map<String,Object> newClusterSparkEnvVars)"
  desc: "Set the newClusterSparkEnvVars property: A set of optional, user-specified Spark environment variables key-value pairs."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterVersion(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withNewClusterVersion(Object newClusterVersion)"
  name: "withNewClusterVersion(Object newClusterVersion)"
  nameWithType: "AzureDatabricksLinkedService.withNewClusterVersion(Object newClusterVersion)"
  summary: "Set the new<wbr>Cluster<wbr>Version property: If not using an existing interactive cluster, this specifies the Spark version of a new job cluster or instance pool nodes created for each run of this activity."
  parameters:
  - description: "the newClusterVersion value to set."
    name: "newClusterVersion"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withNewClusterVersion(Object newClusterVersion)"
  desc: "Set the newClusterVersion property: If not using an existing interactive cluster, this specifies the Spark version of a new job cluster or instance pool nodes created for each run of this activity. Required if instancePoolId is specified. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "AzureDatabricksLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public AzureDatabricksLinkedService withParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: Parameters for linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withPolicyId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withPolicyId(Object policyId)"
  name: "withPolicyId(Object policyId)"
  nameWithType: "AzureDatabricksLinkedService.withPolicyId(Object policyId)"
  summary: "Set the policy<wbr>Id property: The policy id for limiting the ability to configure clusters based on a user defined set of rules."
  parameters:
  - description: "the policyId value to set."
    name: "policyId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withPolicyId(Object policyId)"
  desc: "Set the policyId property: The policy id for limiting the ability to configure clusters based on a user defined set of rules. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withWorkspaceResourceId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.withWorkspaceResourceId(Object workspaceResourceId)"
  name: "withWorkspaceResourceId(Object workspaceResourceId)"
  nameWithType: "AzureDatabricksLinkedService.withWorkspaceResourceId(Object workspaceResourceId)"
  summary: "Set the workspace<wbr>Resource<wbr>Id property: Workspace resource id for databricks REST API."
  parameters:
  - description: "the workspaceResourceId value to set."
    name: "workspaceResourceId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureDatabricksLinkedService withWorkspaceResourceId(Object workspaceResourceId)"
  desc: "Set the workspaceResourceId property: Workspace resource id for databricks REST API. Type: string (or Expression with resultType string)."
  returns:
    description: "the AzureDatabricksLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService?alt=com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService&text=AzureDatabricksLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.workspaceResourceId()"
  fullName: "com.azure.resourcemanager.datafactory.models.AzureDatabricksLinkedService.workspaceResourceId()"
  name: "workspaceResourceId()"
  nameWithType: "AzureDatabricksLinkedService.workspaceResourceId()"
  summary: "Get the workspace<wbr>Resource<wbr>Id property: Workspace resource id for databricks REST API."
  syntax: "public Object workspaceResourceId()"
  desc: "Get the workspaceResourceId property: Workspace resource id for databricks REST API. Type: string (or Expression with resultType string)."
  returns:
    description: "the workspaceResourceId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Azure Databricks linked service."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
