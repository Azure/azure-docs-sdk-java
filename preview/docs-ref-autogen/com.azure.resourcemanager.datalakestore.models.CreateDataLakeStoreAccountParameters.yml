### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters"
fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters"
name: "CreateDataLakeStoreAccountParameters"
nameWithType: "CreateDataLakeStoreAccountParameters"
summary: "The Create<wbr>Data<wbr>Lake<wbr>Store<wbr>Account<wbr>Parameters model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CreateDataLakeStoreAccountParameters"
constructors:
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.CreateDataLakeStoreAccountParameters()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.CreateDataLakeStoreAccountParameters()"
  name: "CreateDataLakeStoreAccountParameters()"
  nameWithType: "CreateDataLakeStoreAccountParameters.CreateDataLakeStoreAccountParameters()"
  syntax: "public CreateDataLakeStoreAccountParameters()"
methods:
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.defaultGroup()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.defaultGroup()"
  name: "defaultGroup()"
  nameWithType: "CreateDataLakeStoreAccountParameters.defaultGroup()"
  summary: "Get the default<wbr>Group property: The default owner group for all new folders and files created in the Data Lake Store account."
  syntax: "public String defaultGroup()"
  desc: "Get the defaultGroup property: The default owner group for all new folders and files created in the Data Lake Store account."
  returns:
    description: "the defaultGroup value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.encryptionConfig()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.encryptionConfig()"
  name: "encryptionConfig()"
  nameWithType: "CreateDataLakeStoreAccountParameters.encryptionConfig()"
  summary: "Get the encryption<wbr>Config property: The Key Vault encryption configuration."
  syntax: "public EncryptionConfig encryptionConfig()"
  desc: "Get the encryptionConfig property: The Key Vault encryption configuration."
  returns:
    description: "the encryptionConfig value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfig&text=EncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.encryptionState()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.encryptionState()"
  name: "encryptionState()"
  nameWithType: "CreateDataLakeStoreAccountParameters.encryptionState()"
  summary: "Get the encryption<wbr>State property: The current state of encryption for this Data Lake Store account."
  syntax: "public EncryptionState encryptionState()"
  desc: "Get the encryptionState property: The current state of encryption for this Data Lake Store account."
  returns:
    description: "the encryptionState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionState?alt=com.azure.resourcemanager.datalakestore.models.EncryptionState&text=EncryptionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.firewallAllowAzureIps()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.firewallAllowAzureIps()"
  name: "firewallAllowAzureIps()"
  nameWithType: "CreateDataLakeStoreAccountParameters.firewallAllowAzureIps()"
  summary: "Get the firewall<wbr>Allow<wbr>Azure<wbr>Ips property: The current state of allowing or disallowing IPs originating within Azure through the firewall."
  syntax: "public FirewallAllowAzureIpsState firewallAllowAzureIps()"
  desc: "Get the firewallAllowAzureIps property: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
  returns:
    description: "the firewallAllowAzureIps value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState?alt=com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState&text=FirewallAllowAzureIpsState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.firewallRules()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.firewallRules()"
  name: "firewallRules()"
  nameWithType: "CreateDataLakeStoreAccountParameters.firewallRules()"
  summary: "Get the firewall<wbr>Rules property: The list of firewall rules associated with this Data Lake Store account."
  syntax: "public List<CreateFirewallRuleWithAccountParameters> firewallRules()"
  desc: "Get the firewallRules property: The list of firewall rules associated with this Data Lake Store account."
  returns:
    description: "the firewallRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateFirewallRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateFirewallRuleWithAccountParameters&text=CreateFirewallRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.firewallState()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.firewallState()"
  name: "firewallState()"
  nameWithType: "CreateDataLakeStoreAccountParameters.firewallState()"
  summary: "Get the firewall<wbr>State property: The current state of the IP address firewall for this Data Lake Store account."
  syntax: "public FirewallState firewallState()"
  desc: "Get the firewallState property: The current state of the IP address firewall for this Data Lake Store account."
  returns:
    description: "the firewallState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallState?alt=com.azure.resourcemanager.datalakestore.models.FirewallState&text=FirewallState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.identity()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.identity()"
  name: "identity()"
  nameWithType: "CreateDataLakeStoreAccountParameters.identity()"
  summary: "Get the identity property: The Key Vault encryption identity, if any."
  syntax: "public EncryptionIdentity identity()"
  desc: "Get the identity property: The Key Vault encryption identity, if any."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionIdentity?alt=com.azure.resourcemanager.datalakestore.models.EncryptionIdentity&text=EncryptionIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.location()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.location()"
  name: "location()"
  nameWithType: "CreateDataLakeStoreAccountParameters.location()"
  summary: "Get the location property: The resource location."
  syntax: "public String location()"
  desc: "Get the location property: The resource location."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.newTier()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.newTier()"
  name: "newTier()"
  nameWithType: "CreateDataLakeStoreAccountParameters.newTier()"
  summary: "Get the new<wbr>Tier property: The commitment tier to use for next month."
  syntax: "public TierType newTier()"
  desc: "Get the newTier property: The commitment tier to use for next month."
  returns:
    description: "the newTier value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.tags()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.tags()"
  name: "tags()"
  nameWithType: "CreateDataLakeStoreAccountParameters.tags()"
  summary: "Get the tags property: The resource tags."
  syntax: "public Map<String,String> tags()"
  desc: "Get the tags property: The resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.trustedIdProviderState()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.trustedIdProviderState()"
  name: "trustedIdProviderState()"
  nameWithType: "CreateDataLakeStoreAccountParameters.trustedIdProviderState()"
  summary: "Get the trusted<wbr>IdProvider<wbr>State property: The current state of the trusted identity provider feature for this Data Lake Store account."
  syntax: "public TrustedIdProviderState trustedIdProviderState()"
  desc: "Get the trustedIdProviderState property: The current state of the trusted identity provider feature for this Data Lake Store account."
  returns:
    description: "the trustedIdProviderState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState?alt=com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState&text=TrustedIdProviderState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.trustedIdProviders()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.trustedIdProviders()"
  name: "trustedIdProviders()"
  nameWithType: "CreateDataLakeStoreAccountParameters.trustedIdProviders()"
  summary: "Get the trusted<wbr>IdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  syntax: "public List<CreateTrustedIdProviderWithAccountParameters> trustedIdProviders()"
  desc: "Get the trustedIdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  returns:
    description: "the trustedIdProviders value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateTrustedIdProviderWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateTrustedIdProviderWithAccountParameters&text=CreateTrustedIdProviderWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.validate()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.validate()"
  name: "validate()"
  nameWithType: "CreateDataLakeStoreAccountParameters.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.virtualNetworkRules()"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.virtualNetworkRules()"
  name: "virtualNetworkRules()"
  nameWithType: "CreateDataLakeStoreAccountParameters.virtualNetworkRules()"
  summary: "Get the virtual<wbr>Network<wbr>Rules property: The list of virtual network rules associated with this Data Lake Store account."
  syntax: "public List<CreateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules()"
  desc: "Get the virtualNetworkRules property: The list of virtual network rules associated with this Data Lake Store account."
  returns:
    description: "the virtualNetworkRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateVirtualNetworkRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateVirtualNetworkRuleWithAccountParameters&text=CreateVirtualNetworkRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withDefaultGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withDefaultGroup(String defaultGroup)"
  name: "withDefaultGroup(String defaultGroup)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withDefaultGroup(String defaultGroup)"
  summary: "Set the default<wbr>Group property: The default owner group for all new folders and files created in the Data Lake Store account."
  parameters:
  - description: "the defaultGroup value to set."
    name: "defaultGroup"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountParameters withDefaultGroup(String defaultGroup)"
  desc: "Set the defaultGroup property: The default owner group for all new folders and files created in the Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withEncryptionConfig(com.azure.resourcemanager.datalakestore.models.EncryptionConfig)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withEncryptionConfig(EncryptionConfig encryptionConfig)"
  name: "withEncryptionConfig(EncryptionConfig encryptionConfig)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withEncryptionConfig(EncryptionConfig encryptionConfig)"
  summary: "Set the encryption<wbr>Config property: The Key Vault encryption configuration."
  parameters:
  - description: "the encryptionConfig value to set."
    name: "encryptionConfig"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfig&text=EncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountParameters withEncryptionConfig(EncryptionConfig encryptionConfig)"
  desc: "Set the encryptionConfig property: The Key Vault encryption configuration."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withEncryptionState(com.azure.resourcemanager.datalakestore.models.EncryptionState)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withEncryptionState(EncryptionState encryptionState)"
  name: "withEncryptionState(EncryptionState encryptionState)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withEncryptionState(EncryptionState encryptionState)"
  summary: "Set the encryption<wbr>State property: The current state of encryption for this Data Lake Store account."
  parameters:
  - description: "the encryptionState value to set."
    name: "encryptionState"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionState?alt=com.azure.resourcemanager.datalakestore.models.EncryptionState&text=EncryptionState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountParameters withEncryptionState(EncryptionState encryptionState)"
  desc: "Set the encryptionState property: The current state of encryption for this Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withFirewallAllowAzureIps(com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  name: "withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  summary: "Set the firewall<wbr>Allow<wbr>Azure<wbr>Ips property: The current state of allowing or disallowing IPs originating within Azure through the firewall."
  parameters:
  - description: "the firewallAllowAzureIps value to set."
    name: "firewallAllowAzureIps"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState?alt=com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState&text=FirewallAllowAzureIpsState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountParameters withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  desc: "Set the firewallAllowAzureIps property: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withFirewallRules(java.util.List<com.azure.resourcemanager.datalakestore.models.CreateFirewallRuleWithAccountParameters>)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withFirewallRules(List<CreateFirewallRuleWithAccountParameters> firewallRules)"
  name: "withFirewallRules(List<CreateFirewallRuleWithAccountParameters> firewallRules)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withFirewallRules(List<CreateFirewallRuleWithAccountParameters> firewallRules)"
  summary: "Set the firewall<wbr>Rules property: The list of firewall rules associated with this Data Lake Store account."
  parameters:
  - description: "the firewallRules value to set."
    name: "firewallRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateFirewallRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateFirewallRuleWithAccountParameters&text=CreateFirewallRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CreateDataLakeStoreAccountParameters withFirewallRules(List<CreateFirewallRuleWithAccountParameters> firewallRules)"
  desc: "Set the firewallRules property: The list of firewall rules associated with this Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withFirewallState(com.azure.resourcemanager.datalakestore.models.FirewallState)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withFirewallState(FirewallState firewallState)"
  name: "withFirewallState(FirewallState firewallState)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withFirewallState(FirewallState firewallState)"
  summary: "Set the firewall<wbr>State property: The current state of the IP address firewall for this Data Lake Store account."
  parameters:
  - description: "the firewallState value to set."
    name: "firewallState"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallState?alt=com.azure.resourcemanager.datalakestore.models.FirewallState&text=FirewallState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountParameters withFirewallState(FirewallState firewallState)"
  desc: "Set the firewallState property: The current state of the IP address firewall for this Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withIdentity(com.azure.resourcemanager.datalakestore.models.EncryptionIdentity)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withIdentity(EncryptionIdentity identity)"
  name: "withIdentity(EncryptionIdentity identity)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withIdentity(EncryptionIdentity identity)"
  summary: "Set the identity property: The Key Vault encryption identity, if any."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionIdentity?alt=com.azure.resourcemanager.datalakestore.models.EncryptionIdentity&text=EncryptionIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountParameters withIdentity(EncryptionIdentity identity)"
  desc: "Set the identity property: The Key Vault encryption identity, if any."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withLocation(String location)"
  summary: "Set the location property: The resource location."
  parameters:
  - description: "the location value to set."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountParameters withLocation(String location)"
  desc: "Set the location property: The resource location."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withNewTier(com.azure.resourcemanager.datalakestore.models.TierType)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withNewTier(TierType newTier)"
  name: "withNewTier(TierType newTier)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withNewTier(TierType newTier)"
  summary: "Set the new<wbr>Tier property: The commitment tier to use for next month."
  parameters:
  - description: "the newTier value to set."
    name: "newTier"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountParameters withNewTier(TierType newTier)"
  desc: "Set the newTier property: The commitment tier to use for next month."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withTags(Map<String,String> tags)"
  summary: "Set the tags property: The resource tags."
  parameters:
  - description: "the tags value to set."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CreateDataLakeStoreAccountParameters withTags(Map<String,String> tags)"
  desc: "Set the tags property: The resource tags."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withTrustedIdProviderState(com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  name: "withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  summary: "Set the trusted<wbr>IdProvider<wbr>State property: The current state of the trusted identity provider feature for this Data Lake Store account."
  parameters:
  - description: "the trustedIdProviderState value to set."
    name: "trustedIdProviderState"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState?alt=com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState&text=TrustedIdProviderState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateDataLakeStoreAccountParameters withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  desc: "Set the trustedIdProviderState property: The current state of the trusted identity provider feature for this Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withTrustedIdProviders(java.util.List<com.azure.resourcemanager.datalakestore.models.CreateTrustedIdProviderWithAccountParameters>)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withTrustedIdProviders(List<CreateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  name: "withTrustedIdProviders(List<CreateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withTrustedIdProviders(List<CreateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  summary: "Set the trusted<wbr>IdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  parameters:
  - description: "the trustedIdProviders value to set."
    name: "trustedIdProviders"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateTrustedIdProviderWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateTrustedIdProviderWithAccountParameters&text=CreateTrustedIdProviderWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CreateDataLakeStoreAccountParameters withTrustedIdProviders(List<CreateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  desc: "Set the trustedIdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withVirtualNetworkRules(java.util.List<com.azure.resourcemanager.datalakestore.models.CreateVirtualNetworkRuleWithAccountParameters>)"
  fullName: "com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters.withVirtualNetworkRules(List<CreateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  name: "withVirtualNetworkRules(List<CreateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  nameWithType: "CreateDataLakeStoreAccountParameters.withVirtualNetworkRules(List<CreateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  summary: "Set the virtual<wbr>Network<wbr>Rules property: The list of virtual network rules associated with this Data Lake Store account."
  parameters:
  - description: "the virtualNetworkRules value to set."
    name: "virtualNetworkRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateVirtualNetworkRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateVirtualNetworkRuleWithAccountParameters&text=CreateVirtualNetworkRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CreateDataLakeStoreAccountParameters withVirtualNetworkRules(List<CreateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  desc: "Set the virtualNetworkRules property: The list of virtual network rules associated with this Data Lake Store account."
  returns:
    description: "the CreateDataLakeStoreAccountParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.CreateDataLakeStoreAccountParameters&text=CreateDataLakeStoreAccountParameters\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The CreateDataLakeStoreAccountParameters model."
metadata: {}
package: "com.azure.resourcemanager.datalakestore.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.1
