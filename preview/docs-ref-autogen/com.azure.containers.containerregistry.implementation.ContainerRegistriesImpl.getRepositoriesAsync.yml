### YamlMime:JavaMember
uid: "com.azure.containers.containerregistry.implementation.ContainerRegistriesImpl.getRepositoriesAsync*"
fullName: "com.azure.containers.containerregistry.implementation.ContainerRegistriesImpl.getRepositoriesAsync"
name: "getRepositoriesAsync"
nameWithType: "ContainerRegistriesImpl.getRepositoriesAsync"
members:
- uid: "com.azure.containers.containerregistry.implementation.ContainerRegistriesImpl.getRepositoriesAsync(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.containers.containerregistry.implementation.ContainerRegistriesImpl.getRepositoriesAsync(String last, Integer n)"
  name: "getRepositoriesAsync(String last, Integer n)"
  nameWithType: "ContainerRegistriesImpl.getRepositoriesAsync(String last, Integer n)"
  summary: "List repositories."
  parameters:
  - description: "Query parameter for the last item in previous query. Result set will include values lexically after\n     last."
    name: "last"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "query parameter for max number of items."
    name: "n"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<String> getRepositoriesAsync(String last, Integer n)"
  returns:
    description: "list of repositories."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.implementation.ContainerRegistriesImpl.getRepositoriesAsync(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.containers.containerregistry.implementation.ContainerRegistriesImpl.getRepositoriesAsync(String last, Integer n, Context context)"
  name: "getRepositoriesAsync(String last, Integer n, Context context)"
  nameWithType: "ContainerRegistriesImpl.getRepositoriesAsync(String last, Integer n, Context context)"
  summary: "List repositories."
  parameters:
  - description: "Query parameter for the last item in previous query. Result set will include values lexically after\n     last."
    name: "last"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "query parameter for max number of items."
    name: "n"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<String> getRepositoriesAsync(String last, Integer n, Context context)"
  returns:
    description: "list of repositories."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.containers.containerregistry.implementation"
artifact: com.azure:azure-containers-containerregistry:1.0.0-beta.5
