### YamlMime:JavaMember
uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignment*"
fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignment"
name: "getRoleAssignment"
nameWithType: "KeyVaultAccessControlAsyncClient.getRoleAssignment"
members:
- uid: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignment(com.azure.security.keyvault.administration.models.KeyVaultRoleScope,java.lang.String)"
  fullName: "com.azure.security.keyvault.administration.KeyVaultAccessControlAsyncClient.getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  name: "getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  nameWithType: "KeyVaultAccessControlAsyncClient.getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  summary: "Gets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n**Code Samples**\n\nGets a <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>. Prints out details of the retrieved <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>.\n\n```java\nString roleAssignmentName = \"c5a305c0-e17a-40f5-af79-73801bdd8867\";\n\n keyVaultAccessControlAsyncClient.getRoleAssignment(KeyVaultRoleScope.GLOBAL, roleAssignmentName)\n     .subscribe(roleAssignment ->\n         System.out.printf(\"Retrieved role assignment with name '%s'.%n\", roleAssignment.getName()));\n```"
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role scope\"></xref> of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    name: "roleScope"
    type: "<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleScope?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleScope&text=KeyVaultRoleScope\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name used of the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    name: "roleAssignmentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<KeyVaultRoleAssignment> getRoleAssignment(KeyVaultRoleScope roleScope, String roleAssignmentName)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the <xref uid=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"false\" data-raw-source=\"role assignment\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment?alt=com.azure.security.keyvault.administration.models.KeyVaultRoleAssignment&text=KeyVaultRoleAssignment\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.administration"
artifact: com.azure:azure-security-keyvault-administration:4.1.0-beta.3
