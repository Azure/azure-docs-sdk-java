### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateKey*"
fullName: "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateKey"
name: "defaultSerializeDateKey"
nameWithType: "SerializerProvider.defaultSerializeDateKey"
members:
- uid: "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateKey(java.util.Date,com.fasterxml.jackson.core.JsonGenerator)"
  fullName: "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateKey(Date date, JsonGenerator gen)"
  name: "defaultSerializeDateKey(Date date, JsonGenerator gen)"
  nameWithType: "SerializerProvider.defaultSerializeDateKey(Date date, JsonGenerator gen)"
  summary: "Method that will handle serialization of Dates used as <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref> keys, based on <xref uid=\"com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATE_KEYS_AS_TIMESTAMPS\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SerializationFeature#WRITE_DATE_KEYS_AS_TIMESTAMPS\"></xref> value (and if using textual representation, configured date format)"
  parameters:
  - name: "date"
    type: "<xref href=\"java.util.Date?alt=java.util.Date&text=Date\" data-throw-if-not-resolved=\"False\" />"
  - name: "gen"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void defaultSerializeDateKey(Date date, JsonGenerator gen)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateKey(long,com.fasterxml.jackson.core.JsonGenerator)"
  fullName: "com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateKey(long timestamp, JsonGenerator gen)"
  name: "defaultSerializeDateKey(long timestamp, JsonGenerator gen)"
  nameWithType: "SerializerProvider.defaultSerializeDateKey(long timestamp, JsonGenerator gen)"
  summary: "Method that will handle serialization of Dates used as <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref> keys, based on <xref uid=\"com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATE_KEYS_AS_TIMESTAMPS\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SerializationFeature#WRITE_DATE_KEYS_AS_TIMESTAMPS\"></xref> value (and if using textual representation, configured date format)"
  parameters:
  - name: "timestamp"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - name: "gen"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void defaultSerializeDateKey(long timestamp, JsonGenerator gen)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
