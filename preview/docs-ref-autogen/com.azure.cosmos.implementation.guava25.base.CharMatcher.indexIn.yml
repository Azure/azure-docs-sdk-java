### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.CharMatcher.indexIn*"
fullName: "com.azure.cosmos.implementation.guava25.base.CharMatcher.indexIn"
name: "indexIn"
nameWithType: "CharMatcher.indexIn"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.CharMatcher.indexIn(java.lang.CharSequence)"
  fullName: "com.azure.cosmos.implementation.guava25.base.CharMatcher.indexIn(CharSequence sequence)"
  name: "indexIn(CharSequence sequence)"
  nameWithType: "CharMatcher.indexIn(CharSequence sequence)"
  summary: "Returns the index of the first matching BMP character in a character sequence, or `-1` if no matching character is present.\n\nThe default implementation iterates over the sequence in forward order calling <xref uid=\"com.azure.cosmos.implementation.guava25.base.CharMatcher.matches*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#matches\"></xref> for each character."
  parameters:
  - description: "the character sequence to examine from the beginning"
    name: "sequence"
    type: "<xref href=\"java.lang.CharSequence?alt=java.lang.CharSequence&text=CharSequence\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int indexIn(CharSequence sequence)"
  returns:
    description: "an index, or <code>-1</code> if no character matches"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.guava25.base.CharMatcher.indexIn(java.lang.CharSequence,int)"
  fullName: "com.azure.cosmos.implementation.guava25.base.CharMatcher.indexIn(CharSequence sequence, int start)"
  name: "indexIn(CharSequence sequence, int start)"
  nameWithType: "CharMatcher.indexIn(CharSequence sequence, int start)"
  summary: "Returns the index of the first matching BMP character in a character sequence, starting from a given position, or `-1` if no character matches after that position.\n\nThe default implementation iterates over the sequence in forward order, beginning at `start`, calling <xref uid=\"com.azure.cosmos.implementation.guava25.base.CharMatcher.matches*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#matches\"></xref> for each character."
  parameters:
  - description: "the character sequence to examine"
    name: "sequence"
    type: "<xref href=\"java.lang.CharSequence?alt=java.lang.CharSequence&text=CharSequence\" data-throw-if-not-resolved=\"False\" />"
  - description: "the first index to examine; must be nonnegative and no greater than <code>\n     sequence.length()</code>"
    name: "start"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int indexIn(CharSequence sequence, int start)"
  returns:
    description: "the index of the first matching character, guaranteed to be no less than <code>start</code>,\n     or <code>-1</code> if no character matches"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
