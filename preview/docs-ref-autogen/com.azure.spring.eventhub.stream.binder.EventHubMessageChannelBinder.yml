### YamlMime:ManagedReference
items:
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder
  id: EventHubMessageChannelBinder
  artifact: com.azure.spring:azure-spring-cloud-stream-binder-eventhubs:2.0.0-beta.1
  parent: com.azure.spring.eventhub.stream.binder
  children:
  - com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.EventHubMessageChannelBinder(java.lang.String[],com.azure.spring.eventhub.stream.binder.provisioning.EventHubChannelProvisioner,com.azure.spring.integration.eventhub.api.EventHubOperation)
  - com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createConsumerEndpoint(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,org.springframework.cloud.stream.binder.ExtendedConsumerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties>)
  - com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createProducerMessageHandler(org.springframework.cloud.stream.provisioning.ProducerDestination,org.springframework.cloud.stream.binder.ExtendedProducerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>,org.springframework.messaging.MessageChannel)
  - com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getDefaultsPrefix()
  - com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedConsumerProperties(java.lang.String)
  - com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedProducerProperties(java.lang.String)
  - com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedPropertiesEntryClass()
  - com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.setBindingProperties(com.azure.spring.eventhub.stream.binder.properties.EventHubExtendedBindingProperties)
  langs:
  - java
  name: EventHubMessageChannelBinder
  nameWithType: EventHubMessageChannelBinder
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder
  type: Class
  package: com.azure.spring.eventhub.stream.binder
  syntax:
    content: public class EventHubMessageChannelBinder extends AbstractMessageChannelBinder<ExtendedConsumerProperties<EventHubConsumerProperties>,ExtendedProducerProperties<EventHubProducerProperties>,EventHubChannelProvisioner> implements ExtendedPropertiesBinder<MessageChannel,EventHubConsumerProperties,EventHubProducerProperties>
  inheritance:
  - java.lang.Object
  - org.springframework.cloud.stream.binder.AbstractBinder
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder
  implements:
  - org.springframework.cloud.stream.binder.ExtendedPropertiesBinder<org.springframework.messaging.MessageChannel,com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties,com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.cloud.stream.binder.AbstractBinder.afterPropertiesSet()
  - org.springframework.cloud.stream.binder.AbstractBinder.applyPrefix(java.lang.String,java.lang.String)
  - org.springframework.cloud.stream.binder.AbstractBinder.bindConsumer(java.lang.String,java.lang.String,T,C)
  - org.springframework.cloud.stream.binder.AbstractBinder.bindProducer(java.lang.String,T,P)
  - org.springframework.cloud.stream.binder.AbstractBinder.buildRetryTemplate(org.springframework.cloud.stream.binder.ConsumerProperties)
  - org.springframework.cloud.stream.binder.AbstractBinder.constructDLQName(java.lang.String)
  - org.springframework.cloud.stream.binder.AbstractBinder.doBindConsumer(java.lang.String,java.lang.String,T,C)
  - org.springframework.cloud.stream.binder.AbstractBinder.doBindProducer(java.lang.String,T,P)
  - org.springframework.cloud.stream.binder.AbstractBinder.getApplicationContext()
  - org.springframework.cloud.stream.binder.AbstractBinder.getBeanFactory()
  - org.springframework.cloud.stream.binder.AbstractBinder.getEvaluationContext()
  - org.springframework.cloud.stream.binder.AbstractBinder.groupedName(java.lang.String,java.lang.String)
  - org.springframework.cloud.stream.binder.AbstractBinder.onInit()
  - org.springframework.cloud.stream.binder.AbstractBinder.setApplicationContext(org.springframework.context.ApplicationContext)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.<L>getContainerCustomizer()
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.<S>getMessageSourceCustomizer()
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.afterUnbindConsumer(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.afterUnbindProducer(org.springframework.cloud.stream.provisioning.ProducerDestination,P)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.bindPollableConsumer(java.lang.String,java.lang.String,org.springframework.cloud.stream.binder.PollableSource<org.springframework.messaging.MessageHandler>,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createConsumerEndpoint(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createPolledConsumerResources(java.lang.String,java.lang.String,org.springframework.cloud.stream.provisioning.ConsumerDestination,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createProducerMessageHandler(org.springframework.cloud.stream.provisioning.ProducerDestination,P,org.springframework.messaging.MessageChannel)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createProducerMessageHandler(org.springframework.cloud.stream.provisioning.ProducerDestination,P,org.springframework.messaging.MessageChannel,org.springframework.messaging.MessageChannel)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.doBindConsumer(java.lang.String,java.lang.String,org.springframework.messaging.MessageChannel,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.doBindProducer(java.lang.String,org.springframework.messaging.MessageChannel,P)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.errorsBaseName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.errorsBaseName(org.springframework.cloud.stream.provisioning.ProducerDestination)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getApplicationEventPublisher()
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getDefaultErrorMessageHandler(org.springframework.cloud.stream.binder.LastSubscriberAwareChannel,boolean)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorBridgeName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorBridgeName(org.springframework.cloud.stream.provisioning.ProducerDestination)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorMessageHandler(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorMessageHandlerName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorMessageStrategy()
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorRecovererName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getPolledConsumerErrorMessageHandler(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getPolledConsumerRecoveryCallback(org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.ErrorInfrastructure,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.postProcessOutputChannel(org.springframework.messaging.MessageChannel,P)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.postProcessPollableSource(org.springframework.cloud.stream.binder.DefaultPollableMessageSource)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.registerErrorInfrastructure(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.registerErrorInfrastructure(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C,boolean)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setConsumerEndpointCustomizer(org.springframework.cloud.stream.config.ConsumerEndpointCustomizer<? extends org.springframework.integration.core.MessageProducer>)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setProducerMessageHandlerCustomizer(org.springframework.cloud.stream.config.ProducerMessageHandlerCustomizer<? extends org.springframework.messaging.MessageHandler>)
  - org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.useNativeEncoding(P)
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.EventHubMessageChannelBinder(java.lang.String[],com.azure.spring.eventhub.stream.binder.provisioning.EventHubChannelProvisioner,com.azure.spring.integration.eventhub.api.EventHubOperation)
  id: EventHubMessageChannelBinder(java.lang.String[],com.azure.spring.eventhub.stream.binder.provisioning.EventHubChannelProvisioner,com.azure.spring.integration.eventhub.api.EventHubOperation)
  artifact: com.azure.spring:azure-spring-cloud-stream-binder-eventhubs:2.0.0-beta.1
  parent: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder
  langs:
  - java
  name: EventHubMessageChannelBinder(String[] headersToEmbed, EventHubChannelProvisioner provisioningProvider, EventHubOperation eventHubOperation)
  nameWithType: EventHubMessageChannelBinder.EventHubMessageChannelBinder(String[] headersToEmbed, EventHubChannelProvisioner provisioningProvider, EventHubOperation eventHubOperation)
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.EventHubMessageChannelBinder(String[] headersToEmbed, EventHubChannelProvisioner provisioningProvider, EventHubOperation eventHubOperation)
  overload: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.EventHubMessageChannelBinder*
  type: Constructor
  package: com.azure.spring.eventhub.stream.binder
  syntax:
    content: public EventHubMessageChannelBinder(String[] headersToEmbed, EventHubChannelProvisioner provisioningProvider, EventHubOperation eventHubOperation)
    parameters:
    - id: headersToEmbed
      type: java.lang.String[]
    - id: provisioningProvider
      type: com.azure.spring.eventhub.stream.binder.provisioning.EventHubChannelProvisioner
    - id: eventHubOperation
      type: com.azure.spring.integration.eventhub.api.EventHubOperation
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createConsumerEndpoint(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,org.springframework.cloud.stream.binder.ExtendedConsumerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties>)
  id: createConsumerEndpoint(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,org.springframework.cloud.stream.binder.ExtendedConsumerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties>)
  artifact: com.azure.spring:azure-spring-cloud-stream-binder-eventhubs:2.0.0-beta.1
  parent: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder
  langs:
  - java
  name: createConsumerEndpoint(ConsumerDestination destination, String group, ExtendedConsumerProperties<EventHubConsumerProperties> properties)
  nameWithType: EventHubMessageChannelBinder.createConsumerEndpoint(ConsumerDestination destination, String group, ExtendedConsumerProperties<EventHubConsumerProperties> properties)
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createConsumerEndpoint(ConsumerDestination destination, String group, ExtendedConsumerProperties<EventHubConsumerProperties> properties)
  overload: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createConsumerEndpoint*
  type: Method
  package: com.azure.spring.eventhub.stream.binder
  syntax:
    content: protected MessageProducer createConsumerEndpoint(ConsumerDestination destination, String group, ExtendedConsumerProperties<EventHubConsumerProperties> properties)
    parameters:
    - id: destination
      type: org.springframework.cloud.stream.provisioning.ConsumerDestination
    - id: group
      type: java.lang.String
    - id: properties
      type: org.springframework.cloud.stream.binder.ExtendedConsumerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties>
    return:
      type: org.springframework.integration.core.MessageProducer
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createProducerMessageHandler(org.springframework.cloud.stream.provisioning.ProducerDestination,org.springframework.cloud.stream.binder.ExtendedProducerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>,org.springframework.messaging.MessageChannel)
  id: createProducerMessageHandler(org.springframework.cloud.stream.provisioning.ProducerDestination,org.springframework.cloud.stream.binder.ExtendedProducerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>,org.springframework.messaging.MessageChannel)
  artifact: com.azure.spring:azure-spring-cloud-stream-binder-eventhubs:2.0.0-beta.1
  parent: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder
  langs:
  - java
  name: createProducerMessageHandler(ProducerDestination destination, ExtendedProducerProperties<EventHubProducerProperties> producerProperties, MessageChannel errorChannel)
  nameWithType: EventHubMessageChannelBinder.createProducerMessageHandler(ProducerDestination destination, ExtendedProducerProperties<EventHubProducerProperties> producerProperties, MessageChannel errorChannel)
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createProducerMessageHandler(ProducerDestination destination, ExtendedProducerProperties<EventHubProducerProperties> producerProperties, MessageChannel errorChannel)
  overload: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createProducerMessageHandler*
  type: Method
  package: com.azure.spring.eventhub.stream.binder
  syntax:
    content: protected MessageHandler createProducerMessageHandler(ProducerDestination destination, ExtendedProducerProperties<EventHubProducerProperties> producerProperties, MessageChannel errorChannel)
    parameters:
    - id: destination
      type: org.springframework.cloud.stream.provisioning.ProducerDestination
    - id: producerProperties
      type: org.springframework.cloud.stream.binder.ExtendedProducerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>
    - id: errorChannel
      type: org.springframework.messaging.MessageChannel
    return:
      type: org.springframework.messaging.MessageHandler
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getDefaultsPrefix()
  id: getDefaultsPrefix()
  artifact: com.azure.spring:azure-spring-cloud-stream-binder-eventhubs:2.0.0-beta.1
  parent: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder
  langs:
  - java
  name: getDefaultsPrefix()
  nameWithType: EventHubMessageChannelBinder.getDefaultsPrefix()
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getDefaultsPrefix()
  overload: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getDefaultsPrefix*
  type: Method
  package: com.azure.spring.eventhub.stream.binder
  syntax:
    content: public String getDefaultsPrefix()
    return:
      type: java.lang.String
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedConsumerProperties(java.lang.String)
  id: getExtendedConsumerProperties(java.lang.String)
  artifact: com.azure.spring:azure-spring-cloud-stream-binder-eventhubs:2.0.0-beta.1
  parent: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder
  langs:
  - java
  name: getExtendedConsumerProperties(String destination)
  nameWithType: EventHubMessageChannelBinder.getExtendedConsumerProperties(String destination)
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedConsumerProperties(String destination)
  overload: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedConsumerProperties*
  type: Method
  package: com.azure.spring.eventhub.stream.binder
  syntax:
    content: public EventHubConsumerProperties getExtendedConsumerProperties(String destination)
    parameters:
    - id: destination
      type: java.lang.String
    return:
      type: com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedProducerProperties(java.lang.String)
  id: getExtendedProducerProperties(java.lang.String)
  artifact: com.azure.spring:azure-spring-cloud-stream-binder-eventhubs:2.0.0-beta.1
  parent: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder
  langs:
  - java
  name: getExtendedProducerProperties(String destination)
  nameWithType: EventHubMessageChannelBinder.getExtendedProducerProperties(String destination)
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedProducerProperties(String destination)
  overload: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedProducerProperties*
  type: Method
  package: com.azure.spring.eventhub.stream.binder
  syntax:
    content: public EventHubProducerProperties getExtendedProducerProperties(String destination)
    parameters:
    - id: destination
      type: java.lang.String
    return:
      type: com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedPropertiesEntryClass()
  id: getExtendedPropertiesEntryClass()
  artifact: com.azure.spring:azure-spring-cloud-stream-binder-eventhubs:2.0.0-beta.1
  parent: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder
  langs:
  - java
  name: getExtendedPropertiesEntryClass()
  nameWithType: EventHubMessageChannelBinder.getExtendedPropertiesEntryClass()
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedPropertiesEntryClass()
  overload: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedPropertiesEntryClass*
  type: Method
  package: com.azure.spring.eventhub.stream.binder
  syntax:
    content: public Class<? extends BinderSpecificPropertiesProvider> getExtendedPropertiesEntryClass()
    return:
      type: java.lang.Class<? extends org.springframework.cloud.stream.binder.BinderSpecificPropertiesProvider>
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.setBindingProperties(com.azure.spring.eventhub.stream.binder.properties.EventHubExtendedBindingProperties)
  id: setBindingProperties(com.azure.spring.eventhub.stream.binder.properties.EventHubExtendedBindingProperties)
  artifact: com.azure.spring:azure-spring-cloud-stream-binder-eventhubs:2.0.0-beta.1
  parent: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder
  langs:
  - java
  name: setBindingProperties(EventHubExtendedBindingProperties bindingProperties)
  nameWithType: EventHubMessageChannelBinder.setBindingProperties(EventHubExtendedBindingProperties bindingProperties)
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.setBindingProperties(EventHubExtendedBindingProperties bindingProperties)
  overload: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.setBindingProperties*
  type: Method
  package: com.azure.spring.eventhub.stream.binder
  syntax:
    content: public void setBindingProperties(EventHubExtendedBindingProperties bindingProperties)
    parameters:
    - id: bindingProperties
      type: com.azure.spring.eventhub.stream.binder.properties.EventHubExtendedBindingProperties
references:
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: com.azure.spring.eventhub.stream.binder.provisioning.EventHubChannelProvisioner
  name: EventHubChannelProvisioner
  nameWithType: EventHubChannelProvisioner
  fullName: com.azure.spring.eventhub.stream.binder.provisioning.EventHubChannelProvisioner
- uid: com.azure.spring.integration.eventhub.api.EventHubOperation
  spec.java:
  - uid: com.azure.spring.integration.eventhub.api.EventHubOperation
    name: EventHubOperation
    fullName: com.azure.spring.integration.eventhub.api.EventHubOperation
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.EventHubMessageChannelBinder*
  name: EventHubMessageChannelBinder
  nameWithType: EventHubMessageChannelBinder.EventHubMessageChannelBinder
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.EventHubMessageChannelBinder
  package: com.azure.spring.eventhub.stream.binder
- uid: org.springframework.cloud.stream.provisioning.ProducerDestination
  spec.java:
  - uid: org.springframework.cloud.stream.provisioning.ProducerDestination
    name: ProducerDestination
    fullName: org.springframework.cloud.stream.provisioning.ProducerDestination
- uid: org.springframework.cloud.stream.binder.ExtendedProducerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>
  spec.java:
  - uid: org.springframework.cloud.stream.binder.ExtendedProducerProperties
    name: ExtendedProducerProperties
    fullName: org.springframework.cloud.stream.binder.ExtendedProducerProperties
  - name: <
    fullName: <
  - uid: com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties
    name: EventHubProducerProperties
    fullName: com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties
  - name: '>'
    fullName: '>'
- uid: org.springframework.messaging.MessageChannel
  spec.java:
  - uid: org.springframework.messaging.MessageChannel
    name: MessageChannel
    fullName: org.springframework.messaging.MessageChannel
- uid: org.springframework.messaging.MessageHandler
  spec.java:
  - uid: org.springframework.messaging.MessageHandler
    name: MessageHandler
    fullName: org.springframework.messaging.MessageHandler
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createProducerMessageHandler*
  name: createProducerMessageHandler
  nameWithType: EventHubMessageChannelBinder.createProducerMessageHandler
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createProducerMessageHandler
  package: com.azure.spring.eventhub.stream.binder
- uid: org.springframework.cloud.stream.provisioning.ConsumerDestination
  spec.java:
  - uid: org.springframework.cloud.stream.provisioning.ConsumerDestination
    name: ConsumerDestination
    fullName: org.springframework.cloud.stream.provisioning.ConsumerDestination
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.springframework.cloud.stream.binder.ExtendedConsumerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties>
  spec.java:
  - uid: org.springframework.cloud.stream.binder.ExtendedConsumerProperties
    name: ExtendedConsumerProperties
    fullName: org.springframework.cloud.stream.binder.ExtendedConsumerProperties
  - name: <
    fullName: <
  - uid: com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties
    name: EventHubConsumerProperties
    fullName: com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties
  - name: '>'
    fullName: '>'
- uid: org.springframework.integration.core.MessageProducer
  spec.java:
  - uid: org.springframework.integration.core.MessageProducer
    name: MessageProducer
    fullName: org.springframework.integration.core.MessageProducer
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createConsumerEndpoint*
  name: createConsumerEndpoint
  nameWithType: EventHubMessageChannelBinder.createConsumerEndpoint
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.createConsumerEndpoint
  package: com.azure.spring.eventhub.stream.binder
- uid: com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties
  name: EventHubConsumerProperties
  nameWithType: EventHubConsumerProperties
  fullName: com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedConsumerProperties*
  name: getExtendedConsumerProperties
  nameWithType: EventHubMessageChannelBinder.getExtendedConsumerProperties
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedConsumerProperties
  package: com.azure.spring.eventhub.stream.binder
- uid: com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties
  name: EventHubProducerProperties
  nameWithType: EventHubProducerProperties
  fullName: com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedProducerProperties*
  name: getExtendedProducerProperties
  nameWithType: EventHubMessageChannelBinder.getExtendedProducerProperties
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedProducerProperties
  package: com.azure.spring.eventhub.stream.binder
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getDefaultsPrefix*
  name: getDefaultsPrefix
  nameWithType: EventHubMessageChannelBinder.getDefaultsPrefix
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getDefaultsPrefix
  package: com.azure.spring.eventhub.stream.binder
- uid: java.lang.Class<? extends org.springframework.cloud.stream.binder.BinderSpecificPropertiesProvider>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends org.springframework.cloud.stream.binder.BinderSpecificPropertiesProvider'
    name: BinderSpecificPropertiesProvider
    fullName: '? extends org.springframework.cloud.stream.binder.BinderSpecificPropertiesProvider'
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedPropertiesEntryClass*
  name: getExtendedPropertiesEntryClass
  nameWithType: EventHubMessageChannelBinder.getExtendedPropertiesEntryClass
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.getExtendedPropertiesEntryClass
  package: com.azure.spring.eventhub.stream.binder
- uid: com.azure.spring.eventhub.stream.binder.properties.EventHubExtendedBindingProperties
  name: EventHubExtendedBindingProperties
  nameWithType: EventHubExtendedBindingProperties
  fullName: com.azure.spring.eventhub.stream.binder.properties.EventHubExtendedBindingProperties
- uid: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.setBindingProperties*
  name: setBindingProperties
  nameWithType: EventHubMessageChannelBinder.setBindingProperties
  fullName: com.azure.spring.eventhub.stream.binder.EventHubMessageChannelBinder.setBindingProperties
  package: com.azure.spring.eventhub.stream.binder
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder<org.springframework.cloud.stream.binder.ExtendedConsumerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties>,org.springframework.cloud.stream.binder.ExtendedProducerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>,com.azure.spring.eventhub.stream.binder.provisioning.EventHubChannelProvisioner>
  name: AbstractMessageChannelBinder<ExtendedConsumerProperties<EventHubConsumerProperties>,ExtendedProducerProperties<EventHubProducerProperties>,EventHubChannelProvisioner>
  nameWithType: AbstractMessageChannelBinder<ExtendedConsumerProperties<EventHubConsumerProperties>,ExtendedProducerProperties<EventHubProducerProperties>,EventHubChannelProvisioner>
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder<org.springframework.cloud.stream.binder.ExtendedConsumerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties>,org.springframework.cloud.stream.binder.ExtendedProducerProperties<com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>,com.azure.spring.eventhub.stream.binder.provisioning.EventHubChannelProvisioner>
- uid: org.springframework.cloud.stream.binder.ExtendedPropertiesBinder<org.springframework.messaging.MessageChannel,com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties,com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>
  name: ExtendedPropertiesBinder<MessageChannel,EventHubConsumerProperties,EventHubProducerProperties>
  nameWithType: ExtendedPropertiesBinder<MessageChannel,EventHubConsumerProperties,EventHubProducerProperties>
  fullName: org.springframework.cloud.stream.binder.ExtendedPropertiesBinder<org.springframework.messaging.MessageChannel,com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties,com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getPolledConsumerRecoveryCallback(org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.ErrorInfrastructure,C)
  name: AbstractMessageChannelBinder.getPolledConsumerRecoveryCallback(AbstractMessageChannelBinder.ErrorInfrastructure,C)
  nameWithType: AbstractMessageChannelBinder.getPolledConsumerRecoveryCallback(AbstractMessageChannelBinder.ErrorInfrastructure,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getPolledConsumerRecoveryCallback(org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.ErrorInfrastructure,C)
- uid: org.springframework.cloud.stream.binder.AbstractBinder.groupedName(java.lang.String,java.lang.String)
  name: AbstractBinder.groupedName(String,String)
  nameWithType: AbstractBinder.groupedName(String,String)
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.groupedName(java.lang.String,java.lang.String)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getPolledConsumerErrorMessageHandler(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  name: AbstractMessageChannelBinder.getPolledConsumerErrorMessageHandler(ConsumerDestination,String,C)
  nameWithType: AbstractMessageChannelBinder.getPolledConsumerErrorMessageHandler(ConsumerDestination,String,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getPolledConsumerErrorMessageHandler(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setProducerMessageHandlerCustomizer(org.springframework.cloud.stream.config.ProducerMessageHandlerCustomizer<? extends org.springframework.messaging.MessageHandler>)
  name: AbstractMessageChannelBinder.setProducerMessageHandlerCustomizer(ProducerMessageHandlerCustomizer<? extends MessageHandler>)
  nameWithType: AbstractMessageChannelBinder.setProducerMessageHandlerCustomizer(ProducerMessageHandlerCustomizer<? extends MessageHandler>)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setProducerMessageHandlerCustomizer(org.springframework.cloud.stream.config.ProducerMessageHandlerCustomizer<? extends org.springframework.messaging.MessageHandler>)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getDefaultErrorMessageHandler(org.springframework.cloud.stream.binder.LastSubscriberAwareChannel,boolean)
  name: AbstractMessageChannelBinder.getDefaultErrorMessageHandler(LastSubscriberAwareChannel,boolean)
  nameWithType: AbstractMessageChannelBinder.getDefaultErrorMessageHandler(LastSubscriberAwareChannel,boolean)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getDefaultErrorMessageHandler(org.springframework.cloud.stream.binder.LastSubscriberAwareChannel,boolean)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.postProcessOutputChannel(org.springframework.messaging.MessageChannel,P)
  name: AbstractMessageChannelBinder.postProcessOutputChannel(MessageChannel,P)
  nameWithType: AbstractMessageChannelBinder.postProcessOutputChannel(MessageChannel,P)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.postProcessOutputChannel(org.springframework.messaging.MessageChannel,P)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
  name: AbstractMessageChannelBinder.setApplicationEventPublisher(ApplicationEventPublisher)
  nameWithType: AbstractMessageChannelBinder.setApplicationEventPublisher(ApplicationEventPublisher)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.postProcessPollableSource(org.springframework.cloud.stream.binder.DefaultPollableMessageSource)
  name: AbstractMessageChannelBinder.postProcessPollableSource(DefaultPollableMessageSource)
  nameWithType: AbstractMessageChannelBinder.postProcessPollableSource(DefaultPollableMessageSource)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.postProcessPollableSource(org.springframework.cloud.stream.binder.DefaultPollableMessageSource)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorMessageHandler(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  name: AbstractMessageChannelBinder.getErrorMessageHandler(ConsumerDestination,String,C)
  nameWithType: AbstractMessageChannelBinder.getErrorMessageHandler(ConsumerDestination,String,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorMessageHandler(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createPolledConsumerResources(java.lang.String,java.lang.String,org.springframework.cloud.stream.provisioning.ConsumerDestination,C)
  name: AbstractMessageChannelBinder.createPolledConsumerResources(String,String,ConsumerDestination,C)
  nameWithType: AbstractMessageChannelBinder.createPolledConsumerResources(String,String,ConsumerDestination,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createPolledConsumerResources(java.lang.String,java.lang.String,org.springframework.cloud.stream.provisioning.ConsumerDestination,C)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: org.springframework.cloud.stream.binder.AbstractBinder.afterPropertiesSet()
  name: AbstractBinder.afterPropertiesSet()
  nameWithType: AbstractBinder.afterPropertiesSet()
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.afterPropertiesSet()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setConsumerEndpointCustomizer(org.springframework.cloud.stream.config.ConsumerEndpointCustomizer<? extends org.springframework.integration.core.MessageProducer>)
  name: AbstractMessageChannelBinder.setConsumerEndpointCustomizer(ConsumerEndpointCustomizer<? extends MessageProducer>)
  nameWithType: AbstractMessageChannelBinder.setConsumerEndpointCustomizer(ConsumerEndpointCustomizer<? extends MessageProducer>)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setConsumerEndpointCustomizer(org.springframework.cloud.stream.config.ConsumerEndpointCustomizer<? extends org.springframework.integration.core.MessageProducer>)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.<L>getContainerCustomizer()
  name: AbstractMessageChannelBinder.<L>getContainerCustomizer()
  nameWithType: AbstractMessageChannelBinder.<L>getContainerCustomizer()
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.<L>getContainerCustomizer()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getApplicationEventPublisher()
  name: AbstractMessageChannelBinder.getApplicationEventPublisher()
  nameWithType: AbstractMessageChannelBinder.getApplicationEventPublisher()
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getApplicationEventPublisher()
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.<S>getMessageSourceCustomizer()
  name: AbstractMessageChannelBinder.<S>getMessageSourceCustomizer()
  nameWithType: AbstractMessageChannelBinder.<S>getMessageSourceCustomizer()
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.<S>getMessageSourceCustomizer()
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.doBindProducer(java.lang.String,org.springframework.messaging.MessageChannel,P)
  name: AbstractMessageChannelBinder.doBindProducer(String,MessageChannel,P)
  nameWithType: AbstractMessageChannelBinder.doBindProducer(String,MessageChannel,P)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.doBindProducer(java.lang.String,org.springframework.messaging.MessageChannel,P)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.bindPollableConsumer(java.lang.String,java.lang.String,org.springframework.cloud.stream.binder.PollableSource<org.springframework.messaging.MessageHandler>,C)
  name: AbstractMessageChannelBinder.bindPollableConsumer(String,String,PollableSource<MessageHandler>,C)
  nameWithType: AbstractMessageChannelBinder.bindPollableConsumer(String,String,PollableSource<MessageHandler>,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.bindPollableConsumer(java.lang.String,java.lang.String,org.springframework.cloud.stream.binder.PollableSource<org.springframework.messaging.MessageHandler>,C)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorBridgeName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  name: AbstractMessageChannelBinder.getErrorBridgeName(ConsumerDestination,String,C)
  nameWithType: AbstractMessageChannelBinder.getErrorBridgeName(ConsumerDestination,String,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorBridgeName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
- uid: org.springframework.cloud.stream.binder.AbstractBinder.getEvaluationContext()
  name: AbstractBinder.getEvaluationContext()
  nameWithType: AbstractBinder.getEvaluationContext()
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.getEvaluationContext()
- uid: org.springframework.cloud.stream.binder.AbstractBinder.bindConsumer(java.lang.String,java.lang.String,T,C)
  name: AbstractBinder.bindConsumer(String,String,T,C)
  nameWithType: AbstractBinder.bindConsumer(String,String,T,C)
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.bindConsumer(java.lang.String,java.lang.String,T,C)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.errorsBaseName(org.springframework.cloud.stream.provisioning.ProducerDestination)
  name: AbstractMessageChannelBinder.errorsBaseName(ProducerDestination)
  nameWithType: AbstractMessageChannelBinder.errorsBaseName(ProducerDestination)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.errorsBaseName(org.springframework.cloud.stream.provisioning.ProducerDestination)
- uid: org.springframework.cloud.stream.binder.AbstractBinder.constructDLQName(java.lang.String)
  name: AbstractBinder.constructDLQName(String)
  nameWithType: AbstractBinder.constructDLQName(String)
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.constructDLQName(java.lang.String)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.registerErrorInfrastructure(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  name: AbstractMessageChannelBinder.registerErrorInfrastructure(ConsumerDestination,String,C)
  nameWithType: AbstractMessageChannelBinder.registerErrorInfrastructure(ConsumerDestination,String,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.registerErrorInfrastructure(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorMessageHandlerName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  name: AbstractMessageChannelBinder.getErrorMessageHandlerName(ConsumerDestination,String,C)
  nameWithType: AbstractMessageChannelBinder.getErrorMessageHandlerName(ConsumerDestination,String,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorMessageHandlerName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
- uid: org.springframework.cloud.stream.binder.AbstractBinder.bindProducer(java.lang.String,T,P)
  name: AbstractBinder.bindProducer(String,T,P)
  nameWithType: AbstractBinder.bindProducer(String,T,P)
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.bindProducer(java.lang.String,T,P)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: org.springframework.cloud.stream.binder.AbstractBinder.onInit()
  name: AbstractBinder.onInit()
  nameWithType: AbstractBinder.onInit()
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.onInit()
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.afterUnbindProducer(org.springframework.cloud.stream.provisioning.ProducerDestination,P)
  name: AbstractMessageChannelBinder.afterUnbindProducer(ProducerDestination,P)
  nameWithType: AbstractMessageChannelBinder.afterUnbindProducer(ProducerDestination,P)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.afterUnbindProducer(org.springframework.cloud.stream.provisioning.ProducerDestination,P)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createProducerMessageHandler(org.springframework.cloud.stream.provisioning.ProducerDestination,P,org.springframework.messaging.MessageChannel)
  name: AbstractMessageChannelBinder.createProducerMessageHandler(ProducerDestination,P,MessageChannel)
  nameWithType: AbstractMessageChannelBinder.createProducerMessageHandler(ProducerDestination,P,MessageChannel)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createProducerMessageHandler(org.springframework.cloud.stream.provisioning.ProducerDestination,P,org.springframework.messaging.MessageChannel)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.afterUnbindConsumer(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  name: AbstractMessageChannelBinder.afterUnbindConsumer(ConsumerDestination,String,C)
  nameWithType: AbstractMessageChannelBinder.afterUnbindConsumer(ConsumerDestination,String,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.afterUnbindConsumer(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
- uid: org.springframework.cloud.stream.binder.AbstractBinder.getBeanFactory()
  name: AbstractBinder.getBeanFactory()
  nameWithType: AbstractBinder.getBeanFactory()
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.getBeanFactory()
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.registerErrorInfrastructure(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C,boolean)
  name: AbstractMessageChannelBinder.registerErrorInfrastructure(ConsumerDestination,String,C,boolean)
  nameWithType: AbstractMessageChannelBinder.registerErrorInfrastructure(ConsumerDestination,String,C,boolean)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.registerErrorInfrastructure(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C,boolean)
- uid: org.springframework.cloud.stream.binder.AbstractBinder.doBindProducer(java.lang.String,T,P)
  name: AbstractBinder.doBindProducer(String,T,P)
  nameWithType: AbstractBinder.doBindProducer(String,T,P)
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.doBindProducer(java.lang.String,T,P)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createConsumerEndpoint(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  name: AbstractMessageChannelBinder.createConsumerEndpoint(ConsumerDestination,String,C)
  nameWithType: AbstractMessageChannelBinder.createConsumerEndpoint(ConsumerDestination,String,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createConsumerEndpoint(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
- uid: org.springframework.cloud.stream.binder.AbstractBinder.buildRetryTemplate(org.springframework.cloud.stream.binder.ConsumerProperties)
  name: AbstractBinder.buildRetryTemplate(ConsumerProperties)
  nameWithType: AbstractBinder.buildRetryTemplate(ConsumerProperties)
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.buildRetryTemplate(org.springframework.cloud.stream.binder.ConsumerProperties)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorRecovererName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  name: AbstractMessageChannelBinder.getErrorRecovererName(ConsumerDestination,String,C)
  nameWithType: AbstractMessageChannelBinder.getErrorRecovererName(ConsumerDestination,String,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorRecovererName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
- uid: org.springframework.cloud.stream.binder.AbstractBinder.doBindConsumer(java.lang.String,java.lang.String,T,C)
  name: AbstractBinder.doBindConsumer(String,String,T,C)
  nameWithType: AbstractBinder.doBindConsumer(String,String,T,C)
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.doBindConsumer(java.lang.String,java.lang.String,T,C)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorBridgeName(org.springframework.cloud.stream.provisioning.ProducerDestination)
  name: AbstractMessageChannelBinder.getErrorBridgeName(ProducerDestination)
  nameWithType: AbstractMessageChannelBinder.getErrorBridgeName(ProducerDestination)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorBridgeName(org.springframework.cloud.stream.provisioning.ProducerDestination)
- uid: org.springframework.cloud.stream.binder.AbstractBinder.getApplicationContext()
  name: AbstractBinder.getApplicationContext()
  nameWithType: AbstractBinder.getApplicationContext()
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.getApplicationContext()
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorMessageStrategy()
  name: AbstractMessageChannelBinder.getErrorMessageStrategy()
  nameWithType: AbstractMessageChannelBinder.getErrorMessageStrategy()
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.getErrorMessageStrategy()
- uid: org.springframework.cloud.stream.binder.AbstractBinder.applyPrefix(java.lang.String,java.lang.String)
  name: AbstractBinder.applyPrefix(String,String)
  nameWithType: AbstractBinder.applyPrefix(String,String)
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.applyPrefix(java.lang.String,java.lang.String)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.doBindConsumer(java.lang.String,java.lang.String,org.springframework.messaging.MessageChannel,C)
  name: AbstractMessageChannelBinder.doBindConsumer(String,String,MessageChannel,C)
  nameWithType: AbstractMessageChannelBinder.doBindConsumer(String,String,MessageChannel,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.doBindConsumer(java.lang.String,java.lang.String,org.springframework.messaging.MessageChannel,C)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.errorsBaseName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
  name: AbstractMessageChannelBinder.errorsBaseName(ConsumerDestination,String,C)
  nameWithType: AbstractMessageChannelBinder.errorsBaseName(ConsumerDestination,String,C)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.errorsBaseName(org.springframework.cloud.stream.provisioning.ConsumerDestination,java.lang.String,C)
- uid: org.springframework.cloud.stream.binder.AbstractBinder.setApplicationContext(org.springframework.context.ApplicationContext)
  name: AbstractBinder.setApplicationContext(ApplicationContext)
  nameWithType: AbstractBinder.setApplicationContext(ApplicationContext)
  fullName: org.springframework.cloud.stream.binder.AbstractBinder.setApplicationContext(org.springframework.context.ApplicationContext)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createProducerMessageHandler(org.springframework.cloud.stream.provisioning.ProducerDestination,P,org.springframework.messaging.MessageChannel,org.springframework.messaging.MessageChannel)
  name: AbstractMessageChannelBinder.createProducerMessageHandler(ProducerDestination,P,MessageChannel,MessageChannel)
  nameWithType: AbstractMessageChannelBinder.createProducerMessageHandler(ProducerDestination,P,MessageChannel,MessageChannel)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.createProducerMessageHandler(org.springframework.cloud.stream.provisioning.ProducerDestination,P,org.springframework.messaging.MessageChannel,org.springframework.messaging.MessageChannel)
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.useNativeEncoding(P)
  name: AbstractMessageChannelBinder.useNativeEncoding(P)
  nameWithType: AbstractMessageChannelBinder.useNativeEncoding(P)
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.useNativeEncoding(P)
- uid: org.springframework.cloud.stream.binder.ExtendedProducerProperties
  name: ExtendedProducerProperties
  nameWithType: ExtendedProducerProperties
  fullName: org.springframework.cloud.stream.binder.ExtendedProducerProperties
- uid: org.springframework.cloud.stream.binder.ExtendedConsumerProperties
  name: ExtendedConsumerProperties
  nameWithType: ExtendedConsumerProperties
  fullName: org.springframework.cloud.stream.binder.ExtendedConsumerProperties
- uid: '? extends org.springframework.cloud.stream.binder.BinderSpecificPropertiesProvider'
  name: '? extends BinderSpecificPropertiesProvider'
  nameWithType: '? extends BinderSpecificPropertiesProvider'
  fullName: '? extends org.springframework.cloud.stream.binder.BinderSpecificPropertiesProvider'
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties>,org.springframework.cloud.stream.binder.ExtendedProducerProperties
  name: EventHubConsumerProperties>,ExtendedProducerProperties
  nameWithType: EventHubConsumerProperties>,ExtendedProducerProperties
  fullName: com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties>,org.springframework.cloud.stream.binder.ExtendedProducerProperties
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder
  name: AbstractMessageChannelBinder
  nameWithType: AbstractMessageChannelBinder
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder
- uid: com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>,com.azure.spring.eventhub.stream.binder.provisioning.EventHubChannelProvisioner
  name: EventHubProducerProperties>,EventHubChannelProvisioner
  nameWithType: EventHubProducerProperties>,EventHubChannelProvisioner
  fullName: com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties>,com.azure.spring.eventhub.stream.binder.provisioning.EventHubChannelProvisioner
- uid: org.springframework.messaging.MessageChannel,com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties,com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties
  name: MessageChannel,EventHubConsumerProperties,EventHubProducerProperties
  nameWithType: MessageChannel,EventHubConsumerProperties,EventHubProducerProperties
  fullName: org.springframework.messaging.MessageChannel,com.azure.spring.eventhub.stream.binder.properties.EventHubConsumerProperties,com.azure.spring.eventhub.stream.binder.properties.EventHubProducerProperties
- uid: org.springframework.cloud.stream.binder.ExtendedPropertiesBinder
  name: ExtendedPropertiesBinder
  nameWithType: ExtendedPropertiesBinder
  fullName: org.springframework.cloud.stream.binder.ExtendedPropertiesBinder
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setProducerMessageHandlerCustomizer(org.springframework.cloud.stream.config.ProducerMessageHandlerCustomizer
  name: AbstractMessageChannelBinder.setProducerMessageHandlerCustomizer(ProducerMessageHandlerCustomizer
  nameWithType: AbstractMessageChannelBinder.setProducerMessageHandlerCustomizer(ProducerMessageHandlerCustomizer
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setProducerMessageHandlerCustomizer(org.springframework.cloud.stream.config.ProducerMessageHandlerCustomizer
- uid: '? extends org.springframework.messaging.MessageHandler>)'
  name: '? extends MessageHandler>)'
  nameWithType: '? extends MessageHandler>)'
  fullName: '? extends org.springframework.messaging.MessageHandler>)'
- uid: '? extends org.springframework.integration.core.MessageProducer>)'
  name: '? extends MessageProducer>)'
  nameWithType: '? extends MessageProducer>)'
  fullName: '? extends org.springframework.integration.core.MessageProducer>)'
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setConsumerEndpointCustomizer(org.springframework.cloud.stream.config.ConsumerEndpointCustomizer
  name: AbstractMessageChannelBinder.setConsumerEndpointCustomizer(ConsumerEndpointCustomizer
  nameWithType: AbstractMessageChannelBinder.setConsumerEndpointCustomizer(ConsumerEndpointCustomizer
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.setConsumerEndpointCustomizer(org.springframework.cloud.stream.config.ConsumerEndpointCustomizer
- uid: L>getContainerCustomizer()
  name: L>getContainerCustomizer()
  nameWithType: L>getContainerCustomizer()
  fullName: L>getContainerCustomizer()
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.
  name: AbstractMessageChannelBinder.
  nameWithType: AbstractMessageChannelBinder.
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.
- uid: S>getMessageSourceCustomizer()
  name: S>getMessageSourceCustomizer()
  nameWithType: S>getMessageSourceCustomizer()
  fullName: S>getMessageSourceCustomizer()
- uid: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.bindPollableConsumer(java.lang.String,java.lang.String,org.springframework.cloud.stream.binder.PollableSource
  name: AbstractMessageChannelBinder.bindPollableConsumer(String,String,PollableSource
  nameWithType: AbstractMessageChannelBinder.bindPollableConsumer(String,String,PollableSource
  fullName: org.springframework.cloud.stream.binder.AbstractMessageChannelBinder.bindPollableConsumer(java.lang.String,java.lang.String,org.springframework.cloud.stream.binder.PollableSource
- uid: org.springframework.messaging.MessageHandler>,C)
  name: MessageHandler>,C)
  nameWithType: MessageHandler>,C)
  fullName: org.springframework.messaging.MessageHandler>,C)
