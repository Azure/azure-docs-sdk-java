### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.withName*"
fullName: "com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.withName"
name: "withName"
nameWithType: "SimpleBeanPropertyDefinition.withName"
members:
- uid: "com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.withName(com.fasterxml.jackson.databind.PropertyName)"
  fullName: "com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.withName(PropertyName newName)"
  name: "withName(PropertyName newName)"
  nameWithType: "SimpleBeanPropertyDefinition.withName(PropertyName newName)"
  summary: "Method that can be used to create a definition with same settings as this one, but with different (external) name; that is, one for which <xref uid=\"com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.getName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getName()\"></xref> would return `newName`."
  overridden: "com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.withName(com.fasterxml.jackson.databind.PropertyName)"
  parameters:
  - name: "newName"
    type: "<xref href=\"com.fasterxml.jackson.databind.PropertyName?alt=com.fasterxml.jackson.databind.PropertyName&text=PropertyName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BeanPropertyDefinition withName(PropertyName newName)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition?alt=com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition&text=BeanPropertyDefinition\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
