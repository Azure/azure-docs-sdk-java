### YamlMime:JavaMember
uid: "com.azure.search.documents.indexes.SearchIndexerClient.createSkillsetWithResponse*"
fullName: "com.azure.search.documents.indexes.SearchIndexerClient.createSkillsetWithResponse"
name: "createSkillsetWithResponse"
nameWithType: "SearchIndexerClient.createSkillsetWithResponse"
members:
- uid: "com.azure.search.documents.indexes.SearchIndexerClient.createSkillsetWithResponse(com.azure.search.documents.indexes.models.SearchIndexerSkillset,com.azure.core.util.Context)"
  fullName: "com.azure.search.documents.indexes.SearchIndexerClient.createSkillsetWithResponse(SearchIndexerSkillset skillset, Context context)"
  name: "createSkillsetWithResponse(SearchIndexerSkillset skillset, Context context)"
  nameWithType: "SearchIndexerClient.createSkillsetWithResponse(SearchIndexerSkillset skillset, Context context)"
  summary: "Creates a new skillset in an Azure Cognitive Search service.\n\n**Code Sample**\n\nCreate search indexer skillset \"searchIndexerSkillset\".\n\n```java\nList<InputFieldMappingEntry> inputs = Collections.singletonList(\n     new InputFieldMappingEntry(\"image\")\n         .setSource(\"/document/normalized_images/*\")\n );\n \n List<OutputFieldMappingEntry> outputs = Arrays.asList(\n     new OutputFieldMappingEntry(\"text\")\n         .setTargetName(\"mytext\"),\n     new OutputFieldMappingEntry(\"layoutText\")\n         .setTargetName(\"myLayoutText\")\n );\n SearchIndexerSkillset searchIndexerSkillset = new SearchIndexerSkillset(\"searchIndexerSkillset\",\n     Collections.singletonList(new OcrSkill(inputs, outputs)\n         .setShouldDetectOrientation(true)\n         .setDefaultLanguageCode(null)\n         .setName(\"myocr\")\n         .setDescription(\"Extracts text (plain and structured) from image.\")\n         .setContext(\"/document/normalized_images/*\")));\n Response<SearchIndexerSkillset> skillsetWithResponse =\n     searchIndexerClient.createSkillsetWithResponse(searchIndexerSkillset, new Context(key1, value1));\n System.out.printf(\"The status code of the response is %s. The indexer skillset name is %s.%n\",\n     skillsetWithResponse.getStatusCode(), skillsetWithResponse.getValue().getName());\n```"
  parameters:
  - description: "definition of the skillset containing one or more cognitive skills"
    name: "skillset"
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndexerSkillset?alt=com.azure.search.documents.indexes.models.SearchIndexerSkillset&text=SearchIndexerSkillset\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SearchIndexerSkillset> createSkillsetWithResponse(SearchIndexerSkillset skillset, Context context)"
  returns:
    description: "a response containing the created SearchIndexerSkillset."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchIndexerSkillset?alt=com.azure.search.documents.indexes.models.SearchIndexerSkillset&text=SearchIndexerSkillset\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.search.documents.indexes"
artifact: com.azure:azure-search-documents:11.2.0-beta.3
