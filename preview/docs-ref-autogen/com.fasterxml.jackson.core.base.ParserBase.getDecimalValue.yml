### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.base.ParserBase.getDecimalValue*"
fullName: "com.fasterxml.jackson.core.base.ParserBase.getDecimalValue"
name: "getDecimalValue"
nameWithType: "ParserBase.getDecimalValue"
members:
- uid: "com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()"
  fullName: "com.fasterxml.jackson.core.base.ParserBase.getDecimalValue()"
  name: "getDecimalValue()"
  nameWithType: "ParserBase.getDecimalValue()"
  summary: "Numeric accessor that can be called when the current token is of type <xref uid=\"com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#VALUE_NUMBER_FLOAT\"></xref> or <xref uid=\"com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_INT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#VALUE_NUMBER_INT\"></xref>. No under/overflow exceptions are ever thrown."
  overridden: "com.fasterxml.jackson.core.JsonParser.getDecimalValue()"
  syntax: "public BigDecimal getDecimalValue()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.math.BigDecimal?alt=java.math.BigDecimal&text=BigDecimal\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.base"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
