### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider"
fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider"
name: "IotHubSasTokenAuthenticationProvider"
nameWithType: "IotHubSasTokenAuthenticationProvider"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getDeviceId()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getGatewayHostname()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getHostname()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getIotHubTrustedCert()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getModuleId()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getPathToIotHubTrustedCert()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getSSLContext()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.setIotHubTrustedCert(java.lang.String)"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.setPathToIotHubTrustedCert(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class IotHubSasTokenAuthenticationProvider extends IotHubAuthenticationProvider"
constructors:
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId)"
  name: "IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId)"
  nameWithType: "IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId)"
  parameters:
  - name: "hostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "gatewayHostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId)"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.net.ssl.SSLContext)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SSLContext sslContext)"
  name: "IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SSLContext sslContext)"
  nameWithType: "IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SSLContext sslContext)"
  parameters:
  - name: "hostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "gatewayHostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "sslContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SSLContext sslContext)"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, long tokenValidSecs, int timeBufferPercentage)"
  name: "IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, long tokenValidSecs, int timeBufferPercentage)"
  nameWithType: "IotHubSasTokenAuthenticationProvider.IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, long tokenValidSecs, int timeBufferPercentage)"
  parameters:
  - name: "hostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "gatewayHostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "tokenValidSecs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - name: "timeBufferPercentage"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubSasTokenAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, long tokenValidSecs, int timeBufferPercentage)"
fields:
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.ENCODING_FORMAT_NAME"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.ENCODING_FORMAT_NAME"
  name: "ENCODING_FORMAT_NAME"
  nameWithType: "IotHubSasTokenAuthenticationProvider.ENCODING_FORMAT_NAME"
  modifiers:
  - "protected"
  - "static"
  - "final"
  field:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected static final String ENCODING_FORMAT_NAME"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.MILLISECONDS_PER_SECOND"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.MILLISECONDS_PER_SECOND"
  name: "MILLISECONDS_PER_SECOND"
  nameWithType: "IotHubSasTokenAuthenticationProvider.MILLISECONDS_PER_SECOND"
  modifiers:
  - "protected"
  - "static"
  - "final"
  field:
    value: "1000"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected static final long MILLISECONDS_PER_SECOND"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.MINIMUM_EXPIRATION_TIME_OFFSET"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.MINIMUM_EXPIRATION_TIME_OFFSET"
  name: "MINIMUM_EXPIRATION_TIME_OFFSET"
  nameWithType: "IotHubSasTokenAuthenticationProvider.MINIMUM_EXPIRATION_TIME_OFFSET"
  modifiers:
  - "protected"
  - "static"
  - "final"
  field:
    value: "1"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected static final long MINIMUM_EXPIRATION_TIME_OFFSET"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.sasToken"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.sasToken"
  name: "sasToken"
  nameWithType: "IotHubSasTokenAuthenticationProvider.sasToken"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.auth.IotHubSasToken?alt=com.microsoft.azure.sdk.iot.device.auth.IotHubSasToken&text=IotHubSasToken\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected IotHubSasToken sasToken"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.timeBufferPercentage"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.timeBufferPercentage"
  name: "timeBufferPercentage"
  nameWithType: "IotHubSasTokenAuthenticationProvider.timeBufferPercentage"
  summary: "The percentage of a sas token's life that will happen before it should be renewed."
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected int timeBufferPercentage"
  desc: "The percentage of a sas token's life that will happen before it should be renewed. Between 1 and 100"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.tokenValidSecs"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.tokenValidSecs"
  name: "tokenValidSecs"
  nameWithType: "IotHubSasTokenAuthenticationProvider.tokenValidSecs"
  summary: "The number of seconds after which the generated SAS token for a message will become invalid."
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected long tokenValidSecs"
  desc: "The number of seconds after which the generated SAS token for a message will become invalid. We also use the expiry time, which is computed as `currentTime() + DEVICE_KEY_VALID_LENGTH`, as a salt when generating our SAS token."
methods:
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.canRefreshToken()"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.canRefreshToken()"
  name: "canRefreshToken()"
  nameWithType: "IotHubSasTokenAuthenticationProvider.canRefreshToken()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean canRefreshToken()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getMillisecondsBeforeProactiveRenewal()"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getMillisecondsBeforeProactiveRenewal()"
  name: "getMillisecondsBeforeProactiveRenewal()"
  nameWithType: "IotHubSasTokenAuthenticationProvider.getMillisecondsBeforeProactiveRenewal()"
  syntax: "public int getMillisecondsBeforeProactiveRenewal()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getRenewedSasToken(boolean,boolean)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getRenewedSasToken(boolean proactivelyRenew, boolean forceRenewal)"
  name: "getRenewedSasToken(boolean proactivelyRenew, boolean forceRenewal)"
  nameWithType: "IotHubSasTokenAuthenticationProvider.getRenewedSasToken(boolean proactivelyRenew, boolean forceRenewal)"
  modifiers:
  - "abstract"
  parameters:
  - name: "proactivelyRenew"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "forceRenewal"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract String getRenewedSasToken(boolean proactivelyRenew, boolean forceRenewal)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getTokenValidSecs()"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getTokenValidSecs()"
  name: "getTokenValidSecs()"
  nameWithType: "IotHubSasTokenAuthenticationProvider.getTokenValidSecs()"
  syntax: "public long getTokenValidSecs()"
  returns:
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.isRenewalNecessary()"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.isRenewalNecessary()"
  name: "isRenewalNecessary()"
  nameWithType: "IotHubSasTokenAuthenticationProvider.isRenewalNecessary()"
  summary: "Returns true if the saved sas token needs to be manually renewed by the user"
  syntax: "public boolean isRenewalNecessary()"
  desc: "Returns true if the saved sas token needs to be manually renewed by the user"
  returns:
    description: "true if the saved sas token needs to be manually renewed by the user"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.setTokenValidSecs(long)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.setTokenValidSecs(long tokenValidSecs)"
  name: "setTokenValidSecs(long tokenValidSecs)"
  nameWithType: "IotHubSasTokenAuthenticationProvider.setTokenValidSecs(long tokenValidSecs)"
  parameters:
  - name: "tokenValidSecs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setTokenValidSecs(long tokenValidSecs)"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.shouldRefreshToken(boolean)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.shouldRefreshToken(boolean proactivelyRenew)"
  name: "shouldRefreshToken(boolean proactivelyRenew)"
  nameWithType: "IotHubSasTokenAuthenticationProvider.shouldRefreshToken(boolean proactivelyRenew)"
  summary: "Returns true if the saved token should be refreshed"
  parameters:
  - description: "if true, this function will return true even if the saved token has not expired, but only\n                         if the token has lived beyond its time buffer percentage"
    name: "proactivelyRenew"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean shouldRefreshToken(boolean proactivelyRenew)"
  desc: "Returns true if the saved token should be refreshed"
  returns:
    description: "true if the caller should refresh the saved sas token"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.auth"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
