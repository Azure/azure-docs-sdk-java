### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.TracerProvider
  id: TracerProvider
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation
  children:
  - com.azure.cosmos.implementation.TracerProvider.<T>endSpan(com.azure.core.util.Context,reactor.core.publisher.Signal<T>,int)
  - com.azure.cosmos.implementation.TracerProvider.<T>traceEnabledCosmosItemResponsePublisher(reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>,com.azure.core.util.Context,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.cosmos.implementation.TracerProvider.<T>traceEnabledCosmosResponsePublisher(reactor.core.publisher.Mono<T>,com.azure.core.util.Context,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.cosmos.implementation.TracerProvider.<T>traceEnabledPublisher(reactor.core.publisher.Mono<T>,com.azure.core.util.Context,java.lang.String,java.lang.String,java.lang.String,java.util.function.Function<T,java.lang.Integer>)
  - com.azure.cosmos.implementation.TracerProvider.COSMOS_CALL_DEPTH
  - com.azure.cosmos.implementation.TracerProvider.COSMOS_CALL_DEPTH_VAL
  - com.azure.cosmos.implementation.TracerProvider.DB_INSTANCE
  - com.azure.cosmos.implementation.TracerProvider.DB_STATEMENT
  - com.azure.cosmos.implementation.TracerProvider.DB_TYPE
  - com.azure.cosmos.implementation.TracerProvider.DB_TYPE_VALUE
  - com.azure.cosmos.implementation.TracerProvider.DB_URL
  - com.azure.cosmos.implementation.TracerProvider.ERROR_CODE
  - com.azure.cosmos.implementation.TracerProvider.ERROR_MSG
  - com.azure.cosmos.implementation.TracerProvider.ERROR_TYPE
  - com.azure.cosmos.implementation.TracerProvider.RESOURCE_PROVIDER_NAME
  - com.azure.cosmos.implementation.TracerProvider.TracerProvider(com.azure.core.util.tracing.Tracer)
  - com.azure.cosmos.implementation.TracerProvider.isEnabled()
  - com.azure.cosmos.implementation.TracerProvider.startSpan(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  langs:
  - java
  name: TracerProvider
  nameWithType: TracerProvider
  fullName: com.azure.cosmos.implementation.TracerProvider
  type: Class
  package: com.azure.cosmos.implementation
  syntax:
    content: public class TracerProvider
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.TracerProvider.<T>endSpan(com.azure.core.util.Context,reactor.core.publisher.Signal<T>,int)
  id: <T>endSpan(com.azure.core.util.Context,reactor.core.publisher.Signal<T>,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: <T>endSpan(Context context, Signal<T> signal, int statusCode)
  nameWithType: TracerProvider.<T>endSpan(Context context, Signal<T> signal, int statusCode)
  fullName: com.azure.cosmos.implementation.TracerProvider.<T>endSpan(Context context, Signal<T> signal, int statusCode)
  overload: com.azure.cosmos.implementation.TracerProvider.endSpan*
  type: Method
  package: com.azure.cosmos.implementation
  summary: Given a context containing the current tracing span the span is marked completed with status info from <xref uid="reactor.core.publisher.Signal" data-throw-if-not-resolved="false">Signal</xref>. For each tracer plugged into the SDK the current tracing span is marked as completed.
  syntax:
    content: public void <T>endSpan(Context context, Signal<T> signal, int statusCode)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: Additional metadata that is passed through the call stack.
    - id: signal
      type: reactor.core.publisher.Signal<T>
      description: The signal indicates the status and contains the metadata we need to end the tracing span.
    - id: statusCode
      type: int
- uid: com.azure.cosmos.implementation.TracerProvider.<T>traceEnabledCosmosItemResponsePublisher(reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>,com.azure.core.util.Context,java.lang.String,java.lang.String,java.lang.String)
  id: <T>traceEnabledCosmosItemResponsePublisher(reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>,com.azure.core.util.Context,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: <T>traceEnabledCosmosItemResponsePublisher(Mono<CosmosItemResponse<T>> resultPublisher, Context context, String spanName, String databaseId, String endpoint)
  nameWithType: TracerProvider.<T>traceEnabledCosmosItemResponsePublisher(Mono<CosmosItemResponse<T>> resultPublisher, Context context, String spanName, String databaseId, String endpoint)
  fullName: com.azure.cosmos.implementation.TracerProvider.<T>traceEnabledCosmosItemResponsePublisher(Mono<CosmosItemResponse<T>> resultPublisher, Context context, String spanName, String databaseId, String endpoint)
  overload: com.azure.cosmos.implementation.TracerProvider.traceEnabledCosmosItemResponsePublisher*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public Mono<CosmosItemResponse<T>> <T>traceEnabledCosmosItemResponsePublisher(Mono<CosmosItemResponse<T>> resultPublisher, Context context, String spanName, String databaseId, String endpoint)
    parameters:
    - id: resultPublisher
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>
    - id: context
      type: com.azure.core.util.Context
    - id: spanName
      type: java.lang.String
    - id: databaseId
      type: java.lang.String
    - id: endpoint
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>
- uid: com.azure.cosmos.implementation.TracerProvider.<T>traceEnabledCosmosResponsePublisher(reactor.core.publisher.Mono<T>,com.azure.core.util.Context,java.lang.String,java.lang.String,java.lang.String)
  id: <T>traceEnabledCosmosResponsePublisher(reactor.core.publisher.Mono<T>,com.azure.core.util.Context,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: <T>traceEnabledCosmosResponsePublisher(Mono<T> resultPublisher, Context context, String spanName, String databaseId, String endpoint)
  nameWithType: TracerProvider.<T>traceEnabledCosmosResponsePublisher(Mono<T> resultPublisher, Context context, String spanName, String databaseId, String endpoint)
  fullName: com.azure.cosmos.implementation.TracerProvider.<T>traceEnabledCosmosResponsePublisher(Mono<T> resultPublisher, Context context, String spanName, String databaseId, String endpoint)
  overload: com.azure.cosmos.implementation.TracerProvider.traceEnabledCosmosResponsePublisher*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public Mono<T> <T>traceEnabledCosmosResponsePublisher(Mono<T> resultPublisher, Context context, String spanName, String databaseId, String endpoint)
    parameters:
    - id: resultPublisher
      type: reactor.core.publisher.Mono<T>
    - id: context
      type: com.azure.core.util.Context
    - id: spanName
      type: java.lang.String
    - id: databaseId
      type: java.lang.String
    - id: endpoint
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<T>
- uid: com.azure.cosmos.implementation.TracerProvider.<T>traceEnabledPublisher(reactor.core.publisher.Mono<T>,com.azure.core.util.Context,java.lang.String,java.lang.String,java.lang.String,java.util.function.Function<T,java.lang.Integer>)
  id: <T>traceEnabledPublisher(reactor.core.publisher.Mono<T>,com.azure.core.util.Context,java.lang.String,java.lang.String,java.lang.String,java.util.function.Function<T,java.lang.Integer>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: <T>traceEnabledPublisher(Mono<T> resultPublisher, Context context, String spanName, String databaseId, String endpoint, Function<T,Integer> statusCodeFunc)
  nameWithType: TracerProvider.<T>traceEnabledPublisher(Mono<T> resultPublisher, Context context, String spanName, String databaseId, String endpoint, Function<T,Integer> statusCodeFunc)
  fullName: com.azure.cosmos.implementation.TracerProvider.<T>traceEnabledPublisher(Mono<T> resultPublisher, Context context, String spanName, String databaseId, String endpoint, Function<T,Integer> statusCodeFunc)
  overload: com.azure.cosmos.implementation.TracerProvider.traceEnabledPublisher*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public Mono<T> <T>traceEnabledPublisher(Mono<T> resultPublisher, Context context, String spanName, String databaseId, String endpoint, Function<T,Integer> statusCodeFunc)
    parameters:
    - id: resultPublisher
      type: reactor.core.publisher.Mono<T>
    - id: context
      type: com.azure.core.util.Context
    - id: spanName
      type: java.lang.String
    - id: databaseId
      type: java.lang.String
    - id: endpoint
      type: java.lang.String
    - id: statusCodeFunc
      type: java.util.function.Function<T,java.lang.Integer>
    return:
      type: reactor.core.publisher.Mono<T>
- uid: com.azure.cosmos.implementation.TracerProvider.COSMOS_CALL_DEPTH
  id: COSMOS_CALL_DEPTH
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: COSMOS_CALL_DEPTH
  nameWithType: TracerProvider.COSMOS_CALL_DEPTH
  fullName: com.azure.cosmos.implementation.TracerProvider.COSMOS_CALL_DEPTH
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final String COSMOS_CALL_DEPTH
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.TracerProvider.COSMOS_CALL_DEPTH_VAL
  id: COSMOS_CALL_DEPTH_VAL
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: COSMOS_CALL_DEPTH_VAL
  nameWithType: TracerProvider.COSMOS_CALL_DEPTH_VAL
  fullName: com.azure.cosmos.implementation.TracerProvider.COSMOS_CALL_DEPTH_VAL
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final String COSMOS_CALL_DEPTH_VAL
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.TracerProvider.DB_INSTANCE
  id: DB_INSTANCE
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: DB_INSTANCE
  nameWithType: TracerProvider.DB_INSTANCE
  fullName: com.azure.cosmos.implementation.TracerProvider.DB_INSTANCE
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final String DB_INSTANCE
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.TracerProvider.DB_STATEMENT
  id: DB_STATEMENT
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: DB_STATEMENT
  nameWithType: TracerProvider.DB_STATEMENT
  fullName: com.azure.cosmos.implementation.TracerProvider.DB_STATEMENT
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final String DB_STATEMENT
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.TracerProvider.DB_TYPE
  id: DB_TYPE
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: DB_TYPE
  nameWithType: TracerProvider.DB_TYPE
  fullName: com.azure.cosmos.implementation.TracerProvider.DB_TYPE
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final String DB_TYPE
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.TracerProvider.DB_TYPE_VALUE
  id: DB_TYPE_VALUE
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: DB_TYPE_VALUE
  nameWithType: TracerProvider.DB_TYPE_VALUE
  fullName: com.azure.cosmos.implementation.TracerProvider.DB_TYPE_VALUE
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final String DB_TYPE_VALUE
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.TracerProvider.DB_URL
  id: DB_URL
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: DB_URL
  nameWithType: TracerProvider.DB_URL
  fullName: com.azure.cosmos.implementation.TracerProvider.DB_URL
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final String DB_URL
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.TracerProvider.ERROR_CODE
  id: ERROR_CODE
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: ERROR_CODE
  nameWithType: TracerProvider.ERROR_CODE
  fullName: com.azure.cosmos.implementation.TracerProvider.ERROR_CODE
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final int ERROR_CODE
    return:
      type: int
- uid: com.azure.cosmos.implementation.TracerProvider.ERROR_MSG
  id: ERROR_MSG
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: ERROR_MSG
  nameWithType: TracerProvider.ERROR_MSG
  fullName: com.azure.cosmos.implementation.TracerProvider.ERROR_MSG
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final String ERROR_MSG
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.TracerProvider.ERROR_TYPE
  id: ERROR_TYPE
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: ERROR_TYPE
  nameWithType: TracerProvider.ERROR_TYPE
  fullName: com.azure.cosmos.implementation.TracerProvider.ERROR_TYPE
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final String ERROR_TYPE
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.TracerProvider.RESOURCE_PROVIDER_NAME
  id: RESOURCE_PROVIDER_NAME
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: RESOURCE_PROVIDER_NAME
  nameWithType: TracerProvider.RESOURCE_PROVIDER_NAME
  fullName: com.azure.cosmos.implementation.TracerProvider.RESOURCE_PROVIDER_NAME
  type: Field
  package: com.azure.cosmos.implementation
  syntax:
    content: public static final String RESOURCE_PROVIDER_NAME
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.TracerProvider.TracerProvider(com.azure.core.util.tracing.Tracer)
  id: TracerProvider(com.azure.core.util.tracing.Tracer)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: TracerProvider(Tracer tracer)
  nameWithType: TracerProvider.TracerProvider(Tracer tracer)
  fullName: com.azure.cosmos.implementation.TracerProvider.TracerProvider(Tracer tracer)
  overload: com.azure.cosmos.implementation.TracerProvider.TracerProvider*
  type: Constructor
  package: com.azure.cosmos.implementation
  syntax:
    content: public TracerProvider(Tracer tracer)
    parameters:
    - id: tracer
      type: com.azure.core.util.tracing.Tracer
- uid: com.azure.cosmos.implementation.TracerProvider.isEnabled()
  id: isEnabled()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: isEnabled()
  nameWithType: TracerProvider.isEnabled()
  fullName: com.azure.cosmos.implementation.TracerProvider.isEnabled()
  overload: com.azure.cosmos.implementation.TracerProvider.isEnabled*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public boolean isEnabled()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.TracerProvider.startSpan(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: startSpan(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.TracerProvider
  langs:
  - java
  name: startSpan(String methodName, String databaseId, String endpoint, Context context)
  nameWithType: TracerProvider.startSpan(String methodName, String databaseId, String endpoint, Context context)
  fullName: com.azure.cosmos.implementation.TracerProvider.startSpan(String methodName, String databaseId, String endpoint, Context context)
  overload: com.azure.cosmos.implementation.TracerProvider.startSpan*
  type: Method
  package: com.azure.cosmos.implementation
  summary: >-
    For each tracer plugged into the SDK a new tracing span is created.


    The `context` will be checked for containing information about a parent span. If a parent span is found the new span will be added as a child, otherwise the span will be created and added to the context and any downstream start calls will use the created span as the parent.
  syntax:
    content: public Context startSpan(String methodName, String databaseId, String endpoint, Context context)
    parameters:
    - id: methodName
      type: java.lang.String
    - id: databaseId
      type: java.lang.String
    - id: endpoint
      type: java.lang.String
    - id: context
      type: com.azure.core.util.Context
      description: Additional metadata that is passed through the call stack.
    return:
      type: com.azure.core.util.Context
      description: An updated context object.
references:
- uid: com.azure.core.util.tracing.Tracer
  spec.java:
  - uid: com.azure.core.util.tracing.Tracer
    name: Tracer
    fullName: com.azure.core.util.tracing.Tracer
- uid: com.azure.cosmos.implementation.TracerProvider.TracerProvider*
  name: TracerProvider
  nameWithType: TracerProvider.TracerProvider
  fullName: com.azure.cosmos.implementation.TracerProvider.TracerProvider
  package: com.azure.cosmos.implementation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.TracerProvider.isEnabled*
  name: isEnabled
  nameWithType: TracerProvider.isEnabled
  fullName: com.azure.cosmos.implementation.TracerProvider.isEnabled
  package: com.azure.cosmos.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.cosmos.implementation.TracerProvider.startSpan*
  name: startSpan
  nameWithType: TracerProvider.startSpan
  fullName: com.azure.cosmos.implementation.TracerProvider.startSpan
  package: com.azure.cosmos.implementation
- uid: reactor.core.publisher.Signal<T>
  spec.java:
  - uid: reactor.core.publisher.Signal
    name: Signal
    fullName: reactor.core.publisher.Signal
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.TracerProvider.endSpan*
  name: <T>endSpan
  nameWithType: TracerProvider.<T>endSpan
  fullName: com.azure.cosmos.implementation.TracerProvider.<T>endSpan
  package: com.azure.cosmos.implementation
- uid: reactor.core.publisher.Mono<T>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.TracerProvider.traceEnabledCosmosResponsePublisher*
  name: <T>traceEnabledCosmosResponsePublisher
  nameWithType: TracerProvider.<T>traceEnabledCosmosResponsePublisher
  fullName: com.azure.cosmos.implementation.TracerProvider.<T>traceEnabledCosmosResponsePublisher
  package: com.azure.cosmos.implementation
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosItemResponse<T>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosItemResponse
    name: CosmosItemResponse
    fullName: com.azure.cosmos.models.CosmosItemResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.TracerProvider.traceEnabledCosmosItemResponsePublisher*
  name: <T>traceEnabledCosmosItemResponsePublisher
  nameWithType: TracerProvider.<T>traceEnabledCosmosItemResponsePublisher
  fullName: com.azure.cosmos.implementation.TracerProvider.<T>traceEnabledCosmosItemResponsePublisher
  package: com.azure.cosmos.implementation
- uid: java.util.function.Function<T,java.lang.Integer>
  spec.java:
  - uid: java.util.function.Function
    name: Function
    fullName: java.util.function.Function
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: ','
    fullName: ','
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.TracerProvider.traceEnabledPublisher*
  name: <T>traceEnabledPublisher
  nameWithType: TracerProvider.<T>traceEnabledPublisher
  fullName: com.azure.cosmos.implementation.TracerProvider.<T>traceEnabledPublisher
  package: com.azure.cosmos.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: reactor.core.publisher.Signal
  name: Signal
  nameWithType: Signal
  fullName: reactor.core.publisher.Signal
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.cosmos.models.CosmosItemResponse
  name: CosmosItemResponse
  nameWithType: CosmosItemResponse
  fullName: com.azure.cosmos.models.CosmosItemResponse
- uid: T,java.lang.Integer
  name: T,Integer
  nameWithType: T,Integer
  fullName: T,java.lang.Integer
- uid: java.util.function.Function
  name: Function
  nameWithType: Function
  fullName: java.util.function.Function
