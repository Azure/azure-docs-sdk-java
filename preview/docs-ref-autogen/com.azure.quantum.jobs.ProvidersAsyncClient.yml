### YamlMime:JavaType
uid: "com.azure.quantum.jobs.ProvidersAsyncClient"
fullName: "com.azure.quantum.jobs.ProvidersAsyncClient"
name: "ProvidersAsyncClient"
nameWithType: "ProvidersAsyncClient"
summary: "Initializes a new instance of the asynchronous Quantum<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ProvidersAsyncClient"
methods:
- uid: "com.azure.quantum.jobs.ProvidersAsyncClient.getStatus()"
  fullName: "com.azure.quantum.jobs.ProvidersAsyncClient.getStatus()"
  name: "getStatus()"
  nameWithType: "ProvidersAsyncClient.getStatus()"
  summary: "Get provider status."
  syntax: "public PagedFlux<ProviderStatus> getStatus()"
  desc: "Get provider status."
  returns:
    description: "provider status."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.quantum.jobs.models.ProviderStatus?alt=com.azure.quantum.jobs.models.ProviderStatus&text=ProviderStatus\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.quantum.jobs.ProvidersAsyncClient.getStatusNextSinglePage(java.lang.String)"
  fullName: "com.azure.quantum.jobs.ProvidersAsyncClient.getStatusNextSinglePage(String nextLink)"
  name: "getStatusNextSinglePage(String nextLink)"
  nameWithType: "ProvidersAsyncClient.getStatusNextSinglePage(String nextLink)"
  summary: "Get the next page of items."
  parameters:
  - description: "The nextLink parameter."
    name: "nextLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PagedResponse<ProviderStatus>> getStatusNextSinglePage(String nextLink)"
  desc: "Get the next page of items."
  returns:
    description: "providers status."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.quantum.jobs.models.ProviderStatus?alt=com.azure.quantum.jobs.models.ProviderStatus&text=ProviderStatus\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.quantum.jobs.ProvidersAsyncClient.getStatusSinglePage()"
  fullName: "com.azure.quantum.jobs.ProvidersAsyncClient.getStatusSinglePage()"
  name: "getStatusSinglePage()"
  nameWithType: "ProvidersAsyncClient.getStatusSinglePage()"
  summary: "Get provider status."
  syntax: "public Mono<PagedResponse<ProviderStatus>> getStatusSinglePage()"
  desc: "Get provider status."
  returns:
    description: "provider status."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.quantum.jobs.models.ProviderStatus?alt=com.azure.quantum.jobs.models.ProviderStatus&text=ProviderStatus\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous QuantumClient type."
metadata: {}
package: "com.azure.quantum.jobs"
artifact: com.azure:azure-quantum-jobs:1.0.0-beta.1
