### YamlMime:JavaMember
uid: "com.azure.resourcemanager.videoanalyzer.models.JwtAuthentication.withClaims*"
fullName: "com.azure.resourcemanager.videoanalyzer.models.JwtAuthentication.withClaims"
name: "withClaims"
nameWithType: "JwtAuthentication.withClaims"
members:
- uid: "com.azure.resourcemanager.videoanalyzer.models.JwtAuthentication.withClaims(java.util.List<com.azure.resourcemanager.videoanalyzer.models.TokenClaim>)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.JwtAuthentication.withClaims(List<TokenClaim> claims)"
  name: "withClaims(List<TokenClaim> claims)"
  nameWithType: "JwtAuthentication.withClaims(List<TokenClaim> claims)"
  summary: "Set the claims property: List of additional token claims to be validated. Token must contains all claims and respective values for it to be valid."
  parameters:
  - description: "the claims value to set."
    name: "claims"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.TokenClaim?alt=com.azure.resourcemanager.videoanalyzer.models.TokenClaim&text=TokenClaim\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public JwtAuthentication withClaims(List<TokenClaim> claims)"
  returns:
    description: "the JwtAuthentication object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.JwtAuthentication?alt=com.azure.resourcemanager.videoanalyzer.models.JwtAuthentication&text=JwtAuthentication\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.3
