### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter
  id: HttpServerExpectationFilter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.support
  children:
  - org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.HttpServerExpectationFilter()
  - org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.generateResponseContent(org.apache.hc.core5.http.HttpResponse)
  - org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.handle(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.io.HttpFilterChain.ResponseTrigger,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpFilterChain)
  - org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.verify(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  langs:
  - java
  name: HttpServerExpectationFilter
  nameWithType: HttpServerExpectationFilter
  fullName: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter
  type: Class
  package: org.apache.hc.core5.http.io.support
  summary: HttpServerExpectationFilter add support for the Expect-Continue handshake to the request processing pipeline.
  syntax:
    content: public class HttpServerExpectationFilter implements HttpFilterHandler
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.core5.http.io.HttpFilterHandler
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.HttpServerExpectationFilter()
  id: HttpServerExpectationFilter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter
  langs:
  - java
  name: HttpServerExpectationFilter()
  nameWithType: HttpServerExpectationFilter.HttpServerExpectationFilter()
  fullName: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.HttpServerExpectationFilter()
  overload: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.HttpServerExpectationFilter*
  type: Constructor
  package: org.apache.hc.core5.http.io.support
  syntax:
    content: public HttpServerExpectationFilter()
- uid: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.generateResponseContent(org.apache.hc.core5.http.HttpResponse)
  id: generateResponseContent(org.apache.hc.core5.http.HttpResponse)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter
  langs:
  - java
  name: generateResponseContent(HttpResponse expectationFailed)
  nameWithType: HttpServerExpectationFilter.generateResponseContent(HttpResponse expectationFailed)
  fullName: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.generateResponseContent(HttpResponse expectationFailed)
  overload: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.generateResponseContent*
  type: Method
  package: org.apache.hc.core5.http.io.support
  summary: Generates response content entity for the final HTTP response with an error status representing the cause of expectation failure.
  syntax:
    content: protected HttpEntity generateResponseContent(HttpResponse expectationFailed)
    parameters:
    - id: expectationFailed
      type: org.apache.hc.core5.http.HttpResponse
      description: the final HTTP response.
    return:
      type: org.apache.hc.core5.http.HttpEntity
      description: >-
        the content entity for the final HTTP response with an error status
          representing the cause of expectation failure.
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
- uid: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.handle(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.io.HttpFilterChain.ResponseTrigger,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpFilterChain)
  id: handle(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.io.HttpFilterChain.ResponseTrigger,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.io.HttpFilterChain)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter
  langs:
  - java
  name: handle(ClassicHttpRequest request, HttpFilterChain.ResponseTrigger responseTrigger, HttpContext context, HttpFilterChain chain)
  nameWithType: HttpServerExpectationFilter.handle(ClassicHttpRequest request, HttpFilterChain.ResponseTrigger responseTrigger, HttpContext context, HttpFilterChain chain)
  fullName: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.handle(ClassicHttpRequest request, HttpFilterChain.ResponseTrigger responseTrigger, HttpContext context, HttpFilterChain chain)
  overload: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.handle*
  type: Method
  package: org.apache.hc.core5.http.io.support
  summary: Processes the incoming HTTP request and if processing has been completed submits a final response to the client. The handler must not use the response trigger after passing control to the next filter with the <xref uid="org.apache.hc.core5.http.io.HttpFilterChain.proceed(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.io.HttpFilterChain.ResponseTrigger,org.apache.hc.core5.http.protocol.HttpContext)" data-throw-if-not-resolved="false">HttpFilterChain#proceed(ClassicHttpRequest, HttpFilterChain.ResponseTrigger, HttpContext)</xref> method.
  syntax:
    content: public final void handle(ClassicHttpRequest request, HttpFilterChain.ResponseTrigger responseTrigger, HttpContext context, HttpFilterChain chain)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
    - id: responseTrigger
      type: org.apache.hc.core5.http.io.HttpFilterChain.ResponseTrigger
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    - id: chain
      type: org.apache.hc.core5.http.io.HttpFilterChain
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
  - type: java.io.IOException
- uid: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.verify(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  id: verify(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter
  langs:
  - java
  name: verify(ClassicHttpRequest request, HttpContext context)
  nameWithType: HttpServerExpectationFilter.verify(ClassicHttpRequest request, HttpContext context)
  fullName: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.verify(ClassicHttpRequest request, HttpContext context)
  overload: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.verify*
  type: Method
  package: org.apache.hc.core5.http.io.support
  summary: Verifies the HTTP request and decides whether it meets server expectations and the request processing can continue.
  syntax:
    content: protected boolean verify(ClassicHttpRequest request, HttpContext context)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.ClassicHttpRequest
      description: the incoming HTTP request.
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the actual execution context.
    return:
      type: boolean
      description: <code>true</code> if the request meets expectations or <code>false</code> otherwise.
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
references:
- uid: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.HttpServerExpectationFilter*
  name: HttpServerExpectationFilter
  nameWithType: HttpServerExpectationFilter.HttpServerExpectationFilter
  fullName: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.HttpServerExpectationFilter
  package: org.apache.hc.core5.http.io.support
- uid: org.apache.hc.core5.http.HttpException
  name: HttpException
  nameWithType: HttpException
  fullName: org.apache.hc.core5.http.HttpException
- uid: org.apache.hc.core5.http.ClassicHttpRequest
  name: ClassicHttpRequest
  nameWithType: ClassicHttpRequest
  fullName: org.apache.hc.core5.http.ClassicHttpRequest
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.verify*
  name: verify
  nameWithType: HttpServerExpectationFilter.verify
  fullName: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.verify
  package: org.apache.hc.core5.http.io.support
- uid: org.apache.hc.core5.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: org.apache.hc.core5.http.HttpResponse
- uid: org.apache.hc.core5.http.HttpEntity
  name: HttpEntity
  nameWithType: HttpEntity
  fullName: org.apache.hc.core5.http.HttpEntity
- uid: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.generateResponseContent*
  name: generateResponseContent
  nameWithType: HttpServerExpectationFilter.generateResponseContent
  fullName: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.generateResponseContent
  package: org.apache.hc.core5.http.io.support
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.io.HttpFilterChain.ResponseTrigger
  name: HttpFilterChain.ResponseTrigger
  nameWithType: HttpFilterChain.ResponseTrigger
  fullName: org.apache.hc.core5.http.io.HttpFilterChain.ResponseTrigger
- uid: org.apache.hc.core5.http.io.HttpFilterChain
  name: HttpFilterChain
  nameWithType: HttpFilterChain
  fullName: org.apache.hc.core5.http.io.HttpFilterChain
- uid: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.handle*
  name: handle
  nameWithType: HttpServerExpectationFilter.handle
  fullName: org.apache.hc.core5.http.io.support.HttpServerExpectationFilter.handle
  package: org.apache.hc.core5.http.io.support
- uid: org.apache.hc.core5.http.io.HttpFilterHandler
  name: HttpFilterHandler
  nameWithType: HttpFilterHandler
  fullName: org.apache.hc.core5.http.io.HttpFilterHandler
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
