### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.protocol.ResponseContent
  id: ResponseContent
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.protocol
  children:
  - org.apache.hc.core5.http.protocol.ResponseContent.ResponseContent()
  - org.apache.hc.core5.http.protocol.ResponseContent.ResponseContent(boolean)
  - org.apache.hc.core5.http.protocol.ResponseContent.process(org.apache.hc.core5.http.HttpResponse,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.protocol.HttpContext)
  langs:
  - java
  name: ResponseContent
  nameWithType: ResponseContent
  fullName: org.apache.hc.core5.http.protocol.ResponseContent
  type: Class
  package: org.apache.hc.core5.http.protocol
  summary: ResponseContent is the most important interceptor for outgoing responses. It is responsible for delimiting content length by adding `Content-Length` or `Transfer-Content` headers based on the properties of the enclosed entity and the protocol version. This interceptor is required for correct functioning of server side protocol processors.
  syntax:
    content: public class ResponseContent implements HttpResponseInterceptor
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.core5.http.HttpResponseInterceptor
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.http.protocol.ResponseContent.ResponseContent()
  id: ResponseContent()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.protocol.ResponseContent
  langs:
  - java
  name: ResponseContent()
  nameWithType: ResponseContent.ResponseContent()
  fullName: org.apache.hc.core5.http.protocol.ResponseContent.ResponseContent()
  overload: org.apache.hc.core5.http.protocol.ResponseContent.ResponseContent*
  type: Constructor
  package: org.apache.hc.core5.http.protocol
  summary: Default constructor. The `Content-Length` or `Transfer-Encoding` will cause the interceptor to throw <xref uid="org.apache.hc.core5.http.ProtocolException" data-throw-if-not-resolved="false">ProtocolException</xref> if already present in the response message.
  syntax:
    content: public ResponseContent()
- uid: org.apache.hc.core5.http.protocol.ResponseContent.ResponseContent(boolean)
  id: ResponseContent(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.protocol.ResponseContent
  langs:
  - java
  name: ResponseContent(boolean overwrite)
  nameWithType: ResponseContent.ResponseContent(boolean overwrite)
  fullName: org.apache.hc.core5.http.protocol.ResponseContent.ResponseContent(boolean overwrite)
  overload: org.apache.hc.core5.http.protocol.ResponseContent.ResponseContent*
  type: Constructor
  package: org.apache.hc.core5.http.protocol
  summary: Constructor that can be used to fine-tune behavior of this interceptor.
  syntax:
    content: public ResponseContent(boolean overwrite)
    parameters:
    - id: overwrite
      type: boolean
      description: >-
        If set to <code>true</code> the <code>Content-Length</code> and
         <code>Transfer-Encoding</code> headers will be created or updated if already present.
         If set to <code>false</code> the <code>Content-Length</code> and
         <code>Transfer-Encoding</code> headers will cause the interceptor to throw
         <xref uid="org.apache.hc.core5.http.ProtocolException" data-throw-if-not-resolved="false">ProtocolException</xref> if already present in the response message.
- uid: org.apache.hc.core5.http.protocol.ResponseContent.process(org.apache.hc.core5.http.HttpResponse,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.protocol.HttpContext)
  id: process(org.apache.hc.core5.http.HttpResponse,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.protocol.ResponseContent
  langs:
  - java
  name: process(HttpResponse response, EntityDetails entity, HttpContext context)
  nameWithType: ResponseContent.process(HttpResponse response, EntityDetails entity, HttpContext context)
  fullName: org.apache.hc.core5.http.protocol.ResponseContent.process(HttpResponse response, EntityDetails entity, HttpContext context)
  overload: org.apache.hc.core5.http.protocol.ResponseContent.process*
  type: Method
  package: org.apache.hc.core5.http.protocol
  summary: Processes the response (possibly updating or inserting) Content-Length and Transfer-Encoding headers.
  syntax:
    content: public void process(HttpResponse response, EntityDetails entity, HttpContext context)
    parameters:
    - id: response
      type: org.apache.hc.core5.http.HttpResponse
      description: The HttpResponse to modify.
    - id: entity
      type: org.apache.hc.core5.http.EntityDetails
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: Unused.
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
    description: If either the Content-Length or Transfer-Encoding headers are found.
  - type: java.io.IOException
    description: If either the Content-Length or Transfer-Encoding headers are found.
references:
- uid: org.apache.hc.core5.http.protocol.ResponseContent.ResponseContent*
  name: ResponseContent
  nameWithType: ResponseContent.ResponseContent
  fullName: org.apache.hc.core5.http.protocol.ResponseContent.ResponseContent
  package: org.apache.hc.core5.http.protocol
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.http.HttpException
  name: HttpException
  nameWithType: HttpException
  fullName: org.apache.hc.core5.http.HttpException
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: org.apache.hc.core5.http.HttpResponse
- uid: org.apache.hc.core5.http.EntityDetails
  name: EntityDetails
  nameWithType: EntityDetails
  fullName: org.apache.hc.core5.http.EntityDetails
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.core5.http.protocol.ResponseContent.process*
  name: process
  nameWithType: ResponseContent.process
  fullName: org.apache.hc.core5.http.protocol.ResponseContent.process
  package: org.apache.hc.core5.http.protocol
- uid: org.apache.hc.core5.http.HttpResponseInterceptor
  name: HttpResponseInterceptor
  nameWithType: HttpResponseInterceptor
  fullName: org.apache.hc.core5.http.HttpResponseInterceptor
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
