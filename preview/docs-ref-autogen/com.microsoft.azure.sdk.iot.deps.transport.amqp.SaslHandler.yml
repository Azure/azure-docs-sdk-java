### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler
  id: SaslHandler
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.amqp
  children:
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.SaslOutcome
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.chooseSaslMechanism(java.lang.String[])
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getInitPayload(java.lang.String)
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getPlainPassword()
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getPlainUsername()
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleChallenge(byte[])
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleOutcome(com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.SaslOutcome)
  - com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.setSasToken(java.lang.String)
  langs:
  - java
  name: SaslHandler
  nameWithType: SaslHandler
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler
  type: Interface
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
  summary: Interface definition for what client events are expected to be handled during Sasl negotiation
  syntax:
    content: public interface SaslHandler
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.chooseSaslMechanism(java.lang.String[])
  id: chooseSaslMechanism(java.lang.String[])
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler
  langs:
  - java
  name: chooseSaslMechanism(String[] mechanisms)
  nameWithType: SaslHandler.chooseSaslMechanism(String[] mechanisms)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.chooseSaslMechanism(String[] mechanisms)
  overload: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.chooseSaslMechanism*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
  summary: Handle the provided mechanisms and return the mechanism to be used from a provided list
  syntax:
    content: public abstract String chooseSaslMechanism(String[] mechanisms)
    parameters:
    - id: mechanisms
      type: java.lang.String[]
      description: A list of available Sasl Mechanisms offered by the service
    return:
      type: java.lang.String
      description: the mechanism to use
  exceptions:
  - type: java.lang.Exception
    description: if sasl negotiation fails
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getInitPayload(java.lang.String)
  id: getInitPayload(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler
  langs:
  - java
  name: getInitPayload(String chosenMechanism)
  nameWithType: SaslHandler.getInitPayload(String chosenMechanism)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getInitPayload(String chosenMechanism)
  overload: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getInitPayload*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
  summary: Based on the chosen mechanism, builds and returns the bytes to be sent in the payload for the Sasl init message
  syntax:
    content: public abstract byte[] getInitPayload(String chosenMechanism)
    parameters:
    - id: chosenMechanism
      type: java.lang.String
      description: the sasl mechanism that was chosen
    return:
      type: byte[]
      description: the bytes to be used as the paylaod for the Sasl init message
  exceptions:
  - type: java.lang.Exception
    description: if sasl negotiation fails
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getPlainPassword()
  id: getPlainPassword()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler
  langs:
  - java
  name: getPlainPassword()
  nameWithType: SaslHandler.getPlainPassword()
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getPlainPassword()
  overload: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getPlainPassword*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
  syntax:
    content: public abstract String getPlainPassword()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getPlainUsername()
  id: getPlainUsername()
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler
  langs:
  - java
  name: getPlainUsername()
  nameWithType: SaslHandler.getPlainUsername()
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getPlainUsername()
  overload: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getPlainUsername*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
  syntax:
    content: public abstract String getPlainUsername()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleChallenge(byte[])
  id: handleChallenge(byte[])
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler
  langs:
  - java
  name: handleChallenge(byte[] saslChallenge)
  nameWithType: SaslHandler.handleChallenge(byte[] saslChallenge)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleChallenge(byte[] saslChallenge)
  overload: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleChallenge*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
  summary: Handles a given challenge and returns the bytes to be sent in the payload of the Sasl response message
  syntax:
    content: public abstract byte[] handleChallenge(byte[] saslChallenge)
    parameters:
    - id: saslChallenge
      type: byte[]
      description: The bytes from the Sasl challenge received from the service
    return:
      type: byte[]
      description: the bytes to be sent in the payload of the Sasl response to the provided challenge
  exceptions:
  - type: java.lang.Exception
    description: if sasl negotiation fails
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleOutcome(com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.SaslOutcome)
  id: handleOutcome(com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.SaslOutcome)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler
  langs:
  - java
  name: handleOutcome(SaslHandler.SaslOutcome outcome)
  nameWithType: SaslHandler.handleOutcome(SaslHandler.SaslOutcome outcome)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleOutcome(SaslHandler.SaslOutcome outcome)
  overload: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleOutcome*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
  summary: Handles what to do upon the Sasl negotiation finishing.
  syntax:
    content: public abstract void handleOutcome(SaslHandler.SaslOutcome outcome)
    parameters:
    - id: outcome
      type: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.SaslOutcome
      description: The outcome of the sasl negotiation
  exceptions:
  - type: java.lang.Exception
    description: if sasl negotiation fails
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.setSasToken(java.lang.String)
  id: setSasToken(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler
  langs:
  - java
  name: setSasToken(String sasToken)
  nameWithType: SaslHandler.setSasToken(String sasToken)
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.setSasToken(String sasToken)
  overload: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.setSasToken*
  type: Method
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
  syntax:
    content: public abstract void setSasToken(String sasToken)
    parameters:
    - id: sasToken
      type: java.lang.String
references:
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.chooseSaslMechanism*
  name: chooseSaslMechanism
  nameWithType: SaslHandler.chooseSaslMechanism
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.chooseSaslMechanism
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getInitPayload*
  name: getInitPayload
  nameWithType: SaslHandler.getInitPayload
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getInitPayload
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleChallenge*
  name: handleChallenge
  nameWithType: SaslHandler.handleChallenge
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleChallenge
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.SaslOutcome
  name: SaslHandler.SaslOutcome
  nameWithType: SaslHandler.SaslOutcome
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.SaslOutcome
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleOutcome*
  name: handleOutcome
  nameWithType: SaslHandler.handleOutcome
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleOutcome
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getPlainUsername*
  name: getPlainUsername
  nameWithType: SaslHandler.getPlainUsername
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getPlainUsername
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getPlainPassword*
  name: getPlainPassword
  nameWithType: SaslHandler.getPlainPassword
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.getPlainPassword
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
- uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.setSasToken*
  name: setSasToken
  nameWithType: SaslHandler.setSasToken
  fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.setSasToken
  package: com.microsoft.azure.sdk.iot.deps.transport.amqp
