### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.add*"
fullName: "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet<C>.add"
name: "add"
nameWithType: "TreeRangeSet<C>.add"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet.add(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.TreeRangeSet<C>.add(Range<C> rangeToAdd)"
  name: "add(Range<C> rangeToAdd)"
  nameWithType: "TreeRangeSet<C>.add(Range<C> rangeToAdd)"
  summary: "Adds the specified range to this `RangeSet` (optional operation). That is, for equal range sets a and b, the result of `a.add(range)` is that `a` will be the minimal range set for which both `a.enclosesAll(b)` and `a.encloses(range)`.\n\nNote that `range` will be <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Range.span(com.azure.cosmos.implementation.guava25.collect.Range&lt;C&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"coalesced\"></xref> with any ranges in the range set that are <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Range.isConnected(com.azure.cosmos.implementation.guava25.collect.Range&lt;C&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"connected\"></xref> with it. Moreover, if `range` is empty, this is a no-op."
  overridden: "com.azure.cosmos.implementation.guava25.collect.AbstractRangeSet.add(com.azure.cosmos.implementation.guava25.collect.Range<C>)"
  parameters:
  - name: "rangeToAdd"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Range?alt=com.azure.cosmos.implementation.guava25.collect.Range&text=Range\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"C?alt=C&text=C\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void add(Range<C> rangeToAdd)"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
