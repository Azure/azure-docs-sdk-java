### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig"
fullName: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig"
name: "UpdateEncryptionConfig"
nameWithType: "UpdateEncryptionConfig"
summary: "The encryption configuration used to update a user managed Key Vault key."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **UpdateEncryptionConfig**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig&text=UpdateEncryptionConfig\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig.UpdateEncryptionConfig()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig.UpdateEncryptionConfig()"
  name: "UpdateEncryptionConfig()"
  nameWithType: "UpdateEncryptionConfig.UpdateEncryptionConfig()"
  summary: "Creates an instance of Update<wbr>Encryption<wbr>Config class."
  syntax: "public UpdateEncryptionConfig()"
  desc: "Creates an instance of UpdateEncryptionConfig class."
methods:
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "UpdateEncryptionConfig.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Update<wbr>Encryption<wbr>Config from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static UpdateEncryptionConfig fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the UpdateEncryptionConfig."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of UpdateEncryptionConfig from the JsonReader."
  returns:
    description: "An instance of UpdateEncryptionConfig if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig&text=UpdateEncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig.keyVaultMetaInfo()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig.keyVaultMetaInfo()"
  name: "keyVaultMetaInfo()"
  nameWithType: "UpdateEncryptionConfig.keyVaultMetaInfo()"
  summary: "Get the key<wbr>Vault<wbr>Meta<wbr>Info property: The updated Key Vault key to use in user managed key rotation."
  syntax: "public UpdateKeyVaultMetaInfo keyVaultMetaInfo()"
  desc: "Get the keyVaultMetaInfo property: The updated Key Vault key to use in user managed key rotation."
  returns:
    description: "the keyVaultMetaInfo value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateKeyVaultMetaInfo?alt=com.azure.resourcemanager.datalakestore.models.UpdateKeyVaultMetaInfo&text=UpdateKeyVaultMetaInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "UpdateEncryptionConfig.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig.validate()"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig.validate()"
  name: "validate()"
  nameWithType: "UpdateEncryptionConfig.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig.withKeyVaultMetaInfo(com.azure.resourcemanager.datalakestore.models.UpdateKeyVaultMetaInfo)"
  fullName: "com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig.withKeyVaultMetaInfo(UpdateKeyVaultMetaInfo keyVaultMetaInfo)"
  name: "withKeyVaultMetaInfo(UpdateKeyVaultMetaInfo keyVaultMetaInfo)"
  nameWithType: "UpdateEncryptionConfig.withKeyVaultMetaInfo(UpdateKeyVaultMetaInfo keyVaultMetaInfo)"
  summary: "Set the key<wbr>Vault<wbr>Meta<wbr>Info property: The updated Key Vault key to use in user managed key rotation."
  parameters:
  - description: "the keyVaultMetaInfo value to set."
    name: "keyVaultMetaInfo"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateKeyVaultMetaInfo?alt=com.azure.resourcemanager.datalakestore.models.UpdateKeyVaultMetaInfo&text=UpdateKeyVaultMetaInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpdateEncryptionConfig withKeyVaultMetaInfo(UpdateKeyVaultMetaInfo keyVaultMetaInfo)"
  desc: "Set the keyVaultMetaInfo property: The updated Key Vault key to use in user managed key rotation."
  returns:
    description: "the UpdateEncryptionConfig object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig&text=UpdateEncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The encryption configuration used to update a user managed Key Vault key."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig&text=UpdateEncryptionConfig\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.datalakestore.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.3
