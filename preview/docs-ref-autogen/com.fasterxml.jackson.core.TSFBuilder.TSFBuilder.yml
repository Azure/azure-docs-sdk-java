### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.TSFBuilder.TSFBuilder*"
fullName: "com.fasterxml.jackson.core.TSFBuilder<F,B>.TSFBuilder"
name: "TSFBuilder"
nameWithType: "TSFBuilder<F,B>.TSFBuilder"
members:
- uid: "com.fasterxml.jackson.core.TSFBuilder.TSFBuilder()"
  fullName: "com.fasterxml.jackson.core.TSFBuilder<F,B>.TSFBuilder()"
  name: "TSFBuilder()"
  nameWithType: "TSFBuilder<F,B>.TSFBuilder()"
  syntax: "protected TSFBuilder()"
- uid: "com.fasterxml.jackson.core.TSFBuilder.TSFBuilder(com.fasterxml.jackson.core.JsonFactory)"
  fullName: "com.fasterxml.jackson.core.TSFBuilder<F,B>.TSFBuilder(JsonFactory base)"
  name: "TSFBuilder(JsonFactory base)"
  nameWithType: "TSFBuilder<F,B>.TSFBuilder(JsonFactory base)"
  parameters:
  - name: "base"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonFactory?alt=com.fasterxml.jackson.core.JsonFactory&text=JsonFactory\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected TSFBuilder(JsonFactory base)"
- uid: "com.fasterxml.jackson.core.TSFBuilder.TSFBuilder(int,int,int)"
  fullName: "com.fasterxml.jackson.core.TSFBuilder<F,B>.TSFBuilder(int factoryFeatures, int parserFeatures, int generatorFeatures)"
  name: "TSFBuilder(int factoryFeatures, int parserFeatures, int generatorFeatures)"
  nameWithType: "TSFBuilder<F,B>.TSFBuilder(int factoryFeatures, int parserFeatures, int generatorFeatures)"
  parameters:
  - name: "factoryFeatures"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "parserFeatures"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "generatorFeatures"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected TSFBuilder(int factoryFeatures, int parserFeatures, int generatorFeatures)"
type: "constructor"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
