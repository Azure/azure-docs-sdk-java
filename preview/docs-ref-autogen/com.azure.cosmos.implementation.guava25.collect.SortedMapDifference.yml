### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference
  id: SortedMapDifference
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesDiffering()
  - com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesInCommon()
  - com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesOnlyOnLeft()
  - com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesOnlyOnRight()
  langs:
  - java
  name: SortedMapDifference<K,V>
  nameWithType: SortedMapDifference<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference<K,V>
  type: Interface
  package: com.azure.cosmos.implementation.guava25.collect
  summary: An object representing the differences between two sorted maps.
  syntax:
    content: public interface SortedMapDifference<K,V> extends MapDifference<K,V>
    typeParameters:
    - id: K
    - id: V
  implements:
  - com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesDiffering()
  id: entriesDiffering()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference
  langs:
  - java
  name: entriesDiffering()
  nameWithType: SortedMapDifference<K,V>.entriesDiffering()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference<K,V>.entriesDiffering()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesDiffering*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns an unmodifiable map describing keys that appear in both maps, but with different values.
  syntax:
    content: public abstract SortedMap<K,MapDifference.ValueDifference<V>> entriesDiffering()
    return:
      type: java.util.SortedMap<K,com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference<V>>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesInCommon()
  id: entriesInCommon()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference
  langs:
  - java
  name: entriesInCommon()
  nameWithType: SortedMapDifference<K,V>.entriesInCommon()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference<K,V>.entriesInCommon()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesInCommon*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns an unmodifiable map containing the entries that appear in both maps; that is, the intersection of the two maps.
  syntax:
    content: public abstract SortedMap<K,V> entriesInCommon()
    return:
      type: java.util.SortedMap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesOnlyOnLeft()
  id: entriesOnlyOnLeft()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference
  langs:
  - java
  name: entriesOnlyOnLeft()
  nameWithType: SortedMapDifference<K,V>.entriesOnlyOnLeft()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference<K,V>.entriesOnlyOnLeft()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesOnlyOnLeft*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns an unmodifiable map containing the entries from the left map whose keys are not present in the right map.
  syntax:
    content: public abstract SortedMap<K,V> entriesOnlyOnLeft()
    return:
      type: java.util.SortedMap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesOnlyOnRight()
  id: entriesOnlyOnRight()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference
  langs:
  - java
  name: entriesOnlyOnRight()
  nameWithType: SortedMapDifference<K,V>.entriesOnlyOnRight()
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference<K,V>.entriesOnlyOnRight()
  overload: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesOnlyOnRight*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns an unmodifiable map containing the entries from the right map whose keys are not present in the left map.
  syntax:
    content: public abstract SortedMap<K,V> entriesOnlyOnRight()
    return:
      type: java.util.SortedMap<K,V>
references:
- uid: java.util.SortedMap<K,V>
  spec.java:
  - uid: java.util.SortedMap
    name: SortedMap
    fullName: java.util.SortedMap
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesOnlyOnLeft*
  name: entriesOnlyOnLeft
  nameWithType: SortedMapDifference<K,V>.entriesOnlyOnLeft
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference<K,V>.entriesOnlyOnLeft
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesOnlyOnRight*
  name: entriesOnlyOnRight
  nameWithType: SortedMapDifference<K,V>.entriesOnlyOnRight
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference<K,V>.entriesOnlyOnRight
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesInCommon*
  name: entriesInCommon
  nameWithType: SortedMapDifference<K,V>.entriesInCommon
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference<K,V>.entriesInCommon
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.SortedMap<K,com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference<V>>
  spec.java:
  - uid: java.util.SortedMap
    name: SortedMap
    fullName: java.util.SortedMap
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference
    name: ValueDifference
    fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference
  - name: <
    fullName: <
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference.entriesDiffering*
  name: entriesDiffering
  nameWithType: SortedMapDifference<K,V>.entriesDiffering
  fullName: com.azure.cosmos.implementation.guava25.collect.SortedMapDifference<K,V>.entriesDiffering
  package: com.azure.cosmos.implementation.guava25.collect
- uid: K
  name: K
  nameWithType: K
  fullName: K
- uid: V
  name: V
  nameWithType: V
  fullName: V
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>
  name: MapDifference<K,V>
  nameWithType: MapDifference<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference<K,V>
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: java.util.SortedMap
  name: SortedMap
  nameWithType: SortedMap
  fullName: java.util.SortedMap
- uid: K,com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference
  name: K,MapDifference.ValueDifference
  nameWithType: K,MapDifference.ValueDifference
  fullName: K,com.azure.cosmos.implementation.guava25.collect.MapDifference.ValueDifference
- uid: com.azure.cosmos.implementation.guava25.collect.MapDifference
  name: MapDifference
  nameWithType: MapDifference
  fullName: com.azure.cosmos.implementation.guava25.collect.MapDifference
