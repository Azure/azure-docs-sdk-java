### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.node.POJONode
  id: POJONode
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node
  children:
  - com.fasterxml.jackson.databind.node.POJONode.POJONode(java.lang.Object)
  - com.fasterxml.jackson.databind.node.POJONode._pojoEquals(com.fasterxml.jackson.databind.node.POJONode)
  - com.fasterxml.jackson.databind.node.POJONode._value
  - com.fasterxml.jackson.databind.node.POJONode.asBoolean(boolean)
  - com.fasterxml.jackson.databind.node.POJONode.asDouble(double)
  - com.fasterxml.jackson.databind.node.POJONode.asInt(int)
  - com.fasterxml.jackson.databind.node.POJONode.asLong(long)
  - com.fasterxml.jackson.databind.node.POJONode.asText()
  - com.fasterxml.jackson.databind.node.POJONode.asText(java.lang.String)
  - com.fasterxml.jackson.databind.node.POJONode.asToken()
  - com.fasterxml.jackson.databind.node.POJONode.binaryValue()
  - com.fasterxml.jackson.databind.node.POJONode.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.node.POJONode.getNodeType()
  - com.fasterxml.jackson.databind.node.POJONode.getPojo()
  - com.fasterxml.jackson.databind.node.POJONode.hashCode()
  - com.fasterxml.jackson.databind.node.POJONode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  langs:
  - java
  name: POJONode
  nameWithType: POJONode
  fullName: com.fasterxml.jackson.databind.node.POJONode
  type: Class
  package: com.fasterxml.jackson.databind.node
  summary: Value node that contains a wrapped POJO, to be serialized as a JSON constructed through data mapping (usually done by calling <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.ObjectMapper</xref>).
  syntax:
    content: public class POJONode extends ValueNode
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializable.Base
  - com.fasterxml.jackson.databind.JsonNode
  - com.fasterxml.jackson.databind.node.BaseJsonNode
  - com.fasterxml.jackson.databind.node.ValueNode
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
  - com.fasterxml.jackson.databind.JsonNode.<T>_this()
  - com.fasterxml.jackson.databind.JsonNode.<T>require()
  - com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()
  - com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.asBoolean()
  - com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)
  - com.fasterxml.jackson.databind.JsonNode.asDouble()
  - com.fasterxml.jackson.databind.JsonNode.asDouble(double)
  - com.fasterxml.jackson.databind.JsonNode.asInt()
  - com.fasterxml.jackson.databind.JsonNode.asInt(int)
  - com.fasterxml.jackson.databind.JsonNode.asLong()
  - com.fasterxml.jackson.databind.JsonNode.asLong(long)
  - com.fasterxml.jackson.databind.JsonNode.asText()
  - com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()
  - com.fasterxml.jackson.databind.JsonNode.binaryValue()
  - com.fasterxml.jackson.databind.JsonNode.booleanValue()
  - com.fasterxml.jackson.databind.JsonNode.canConvertToInt()
  - com.fasterxml.jackson.databind.JsonNode.canConvertToLong()
  - com.fasterxml.jackson.databind.JsonNode.decimalValue()
  - com.fasterxml.jackson.databind.JsonNode.doubleValue()
  - com.fasterxml.jackson.databind.JsonNode.elements()
  - com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  - com.fasterxml.jackson.databind.JsonNode.fieldNames()
  - com.fasterxml.jackson.databind.JsonNode.fields()
  - com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.floatValue()
  - com.fasterxml.jackson.databind.JsonNode.getNodeType()
  - com.fasterxml.jackson.databind.JsonNode.intValue()
  - com.fasterxml.jackson.databind.JsonNode.isArray()
  - com.fasterxml.jackson.databind.JsonNode.isBigDecimal()
  - com.fasterxml.jackson.databind.JsonNode.isBigInteger()
  - com.fasterxml.jackson.databind.JsonNode.isBinary()
  - com.fasterxml.jackson.databind.JsonNode.isBoolean()
  - com.fasterxml.jackson.databind.JsonNode.isContainerNode()
  - com.fasterxml.jackson.databind.JsonNode.isDouble()
  - com.fasterxml.jackson.databind.JsonNode.isFloat()
  - com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()
  - com.fasterxml.jackson.databind.JsonNode.isInt()
  - com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()
  - com.fasterxml.jackson.databind.JsonNode.isLong()
  - com.fasterxml.jackson.databind.JsonNode.isMissingNode()
  - com.fasterxml.jackson.databind.JsonNode.isNull()
  - com.fasterxml.jackson.databind.JsonNode.isNumber()
  - com.fasterxml.jackson.databind.JsonNode.isObject()
  - com.fasterxml.jackson.databind.JsonNode.isPojo()
  - com.fasterxml.jackson.databind.JsonNode.isShort()
  - com.fasterxml.jackson.databind.JsonNode.isTextual()
  - com.fasterxml.jackson.databind.JsonNode.isValueNode()
  - com.fasterxml.jackson.databind.JsonNode.iterator()
  - com.fasterxml.jackson.databind.JsonNode.longValue()
  - com.fasterxml.jackson.databind.JsonNode.numberValue()
  - com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)
  - com.fasterxml.jackson.databind.JsonNode.shortValue()
  - com.fasterxml.jackson.databind.JsonNode.size()
  - com.fasterxml.jackson.databind.JsonNode.textValue()
  - com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.required(int)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.required(java.lang.String)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.toString()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()
  - com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.databind.node.ValueNode.<T>deepCopy()
  - com.fasterxml.jackson.databind.node.ValueNode._at(com.fasterxml.jackson.core.JsonPointer)
  - com.fasterxml.jackson.databind.node.ValueNode.asToken()
  - com.fasterxml.jackson.databind.node.ValueNode.findParent(java.lang.String)
  - com.fasterxml.jackson.databind.node.ValueNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.node.ValueNode.findValue(java.lang.String)
  - com.fasterxml.jackson.databind.node.ValueNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  - com.fasterxml.jackson.databind.node.ValueNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
  - com.fasterxml.jackson.databind.node.ValueNode.get(int)
  - com.fasterxml.jackson.databind.node.ValueNode.get(java.lang.String)
  - com.fasterxml.jackson.databind.node.ValueNode.has(int)
  - com.fasterxml.jackson.databind.node.ValueNode.has(java.lang.String)
  - com.fasterxml.jackson.databind.node.ValueNode.hasNonNull(int)
  - com.fasterxml.jackson.databind.node.ValueNode.hasNonNull(java.lang.String)
  - com.fasterxml.jackson.databind.node.ValueNode.isEmpty()
  - com.fasterxml.jackson.databind.node.ValueNode.path(int)
  - com.fasterxml.jackson.databind.node.ValueNode.path(java.lang.String)
  - com.fasterxml.jackson.databind.node.ValueNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.node.POJONode.POJONode(java.lang.Object)
  id: POJONode(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: POJONode(Object v)
  nameWithType: POJONode.POJONode(Object v)
  fullName: com.fasterxml.jackson.databind.node.POJONode.POJONode(Object v)
  overload: com.fasterxml.jackson.databind.node.POJONode.POJONode*
  type: Constructor
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public POJONode(Object v)
    parameters:
    - id: v
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.node.POJONode._pojoEquals(com.fasterxml.jackson.databind.node.POJONode)
  id: _pojoEquals(com.fasterxml.jackson.databind.node.POJONode)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: _pojoEquals(POJONode other)
  nameWithType: POJONode._pojoEquals(POJONode other)
  fullName: com.fasterxml.jackson.databind.node.POJONode._pojoEquals(POJONode other)
  overload: com.fasterxml.jackson.databind.node.POJONode._pojoEquals*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: protected boolean _pojoEquals(POJONode other)
    parameters:
    - id: other
      type: com.fasterxml.jackson.databind.node.POJONode
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.node.POJONode._value
  id: _value
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: _value
  nameWithType: POJONode._value
  fullName: com.fasterxml.jackson.databind.node.POJONode._value
  type: Field
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: protected final Object _value
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.node.POJONode.asBoolean(boolean)
  id: asBoolean(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: asBoolean(boolean defaultValue)
  nameWithType: POJONode.asBoolean(boolean defaultValue)
  fullName: com.fasterxml.jackson.databind.node.POJONode.asBoolean(boolean defaultValue)
  overload: com.fasterxml.jackson.databind.node.POJONode.asBoolean*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method that will try to convert value of this node to a Java **boolean**. JSON booleans map naturally; integer numbers other than 0 map to true, and 0 maps to false and Strings 'true' and 'false' map to corresponding values.


    If representation cannot be converted to a boolean value (including structured types like Objects and Arrays), specified **defaultValue** will be returned; no exceptions are thrown.
  syntax:
    content: public boolean asBoolean(boolean defaultValue)
    parameters:
    - id: defaultValue
      type: boolean
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.node.POJONode.asDouble(double)
  id: asDouble(double)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: asDouble(double defaultValue)
  nameWithType: POJONode.asDouble(double defaultValue)
  fullName: com.fasterxml.jackson.databind.node.POJONode.asDouble(double defaultValue)
  overload: com.fasterxml.jackson.databind.node.POJONode.asDouble*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method that will try to convert value of this node to a Java **double**. Numbers are coerced using default Java rules; booleans convert to 0.0 (false) and 1.0 (true), and Strings are parsed using default Java language integer parsing rules.


    If representation cannot be converted to an int (including structured types like Objects and Arrays), specified **defaultValue** will be returned; no exceptions are thrown.
  syntax:
    content: public double asDouble(double defaultValue)
    parameters:
    - id: defaultValue
      type: double
    return:
      type: double
- uid: com.fasterxml.jackson.databind.node.POJONode.asInt(int)
  id: asInt(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: asInt(int defaultValue)
  nameWithType: POJONode.asInt(int defaultValue)
  fullName: com.fasterxml.jackson.databind.node.POJONode.asInt(int defaultValue)
  overload: com.fasterxml.jackson.databind.node.POJONode.asInt*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method that will try to convert value of this node to a Java **int**. Numbers are coerced using default Java rules; booleans convert to 0 (false) and 1 (true), and Strings are parsed using default Java language integer parsing rules.


    If representation cannot be converted to an int (including structured types like Objects and Arrays), specified **defaultValue** will be returned; no exceptions are thrown.
  syntax:
    content: public int asInt(int defaultValue)
    parameters:
    - id: defaultValue
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.databind.node.POJONode.asLong(long)
  id: asLong(long)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: asLong(long defaultValue)
  nameWithType: POJONode.asLong(long defaultValue)
  fullName: com.fasterxml.jackson.databind.node.POJONode.asLong(long defaultValue)
  overload: com.fasterxml.jackson.databind.node.POJONode.asLong*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Method that will try to convert value of this node to a Java **long**. Numbers are coerced using default Java rules; booleans convert to 0 (false) and 1 (true), and Strings are parsed using default Java language integer parsing rules.


    If representation cannot be converted to an long (including structured types like Objects and Arrays), specified **defaultValue** will be returned; no exceptions are thrown.
  syntax:
    content: public long asLong(long defaultValue)
    parameters:
    - id: defaultValue
      type: long
    return:
      type: long
- uid: com.fasterxml.jackson.databind.node.POJONode.asText()
  id: asText()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: asText()
  nameWithType: POJONode.asText()
  fullName: com.fasterxml.jackson.databind.node.POJONode.asText()
  overload: com.fasterxml.jackson.databind.node.POJONode.asText*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method that will return a valid String representation of the container value, if the node is a value node (method <xref uid="com.fasterxml.jackson.databind.node.POJONode.isValueNode" data-throw-if-not-resolved="false">#isValueNode</xref> returns true), otherwise empty String.
  syntax:
    content: public String asText()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.node.POJONode.asText(java.lang.String)
  id: asText(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: asText(String defaultValue)
  nameWithType: POJONode.asText(String defaultValue)
  fullName: com.fasterxml.jackson.databind.node.POJONode.asText(String defaultValue)
  overload: com.fasterxml.jackson.databind.node.POJONode.asText*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method similar to <xref uid="com.fasterxml.jackson.databind.node.POJONode.asText()" data-throw-if-not-resolved="false">#asText()</xref>, except that it will return `defaultValue` in cases where null value would be returned; either for missing nodes (trying to access missing property, or element at invalid item for array) or explicit nulls.
  syntax:
    content: public String asText(String defaultValue)
    parameters:
    - id: defaultValue
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.node.POJONode.asToken()
  id: asToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: asToken()
  nameWithType: POJONode.asToken()
  fullName: com.fasterxml.jackson.databind.node.POJONode.asToken()
  overload: com.fasterxml.jackson.databind.node.POJONode.asToken*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method that can be used for efficient type detection when using stream abstraction for traversing nodes. Will return the first <xref uid="com.fasterxml.jackson.core.JsonToken" data-throw-if-not-resolved="false">JsonToken</xref> that equivalent stream event would produce (for most nodes there is just one token but for structured/container types multiple)
  syntax:
    content: public JsonToken asToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.databind.node.POJONode.binaryValue()
  id: binaryValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: binaryValue()
  nameWithType: POJONode.binaryValue()
  fullName: com.fasterxml.jackson.databind.node.POJONode.binaryValue()
  overload: com.fasterxml.jackson.databind.node.POJONode.binaryValue*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: As it is possible that some implementations embed byte\[\] as POJONode (despite optimal being <xref uid="com.fasterxml.jackson.databind.node.BinaryNode" data-throw-if-not-resolved="false">BinaryNode</xref>), let's add support for exposing binary data here too.
  syntax:
    content: public byte[] binaryValue()
    return:
      type: byte[]
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.node.POJONode.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: equals(Object o)
  nameWithType: POJONode.equals(Object o)
  fullName: com.fasterxml.jackson.databind.node.POJONode.equals(Object o)
  overload: com.fasterxml.jackson.databind.node.POJONode.equals*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: >-
    Equality for node objects is defined as full (deep) value equality. This means that it is possible to compare complete JSON trees for equality by comparing equality of root nodes.


    Note: marked as abstract to ensure all implementation classes define it properly and not rely on definition from <xref uid="java.lang.Object" data-throw-if-not-resolved="false">java.lang.Object</xref>.
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.node.POJONode.getNodeType()
  id: getNodeType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: getNodeType()
  nameWithType: POJONode.getNodeType()
  fullName: com.fasterxml.jackson.databind.node.POJONode.getNodeType()
  overload: com.fasterxml.jackson.databind.node.POJONode.getNodeType*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Return the type of this node
  syntax:
    content: public JsonNodeType getNodeType()
    return:
      type: com.fasterxml.jackson.databind.node.JsonNodeType
- uid: com.fasterxml.jackson.databind.node.POJONode.getPojo()
  id: getPojo()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: getPojo()
  nameWithType: POJONode.getPojo()
  fullName: com.fasterxml.jackson.databind.node.POJONode.getPojo()
  overload: com.fasterxml.jackson.databind.node.POJONode.getPojo*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method that can be used to access the POJO this node wraps.
  syntax:
    content: public Object getPojo()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.node.POJONode.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: hashCode()
  nameWithType: POJONode.hashCode()
  fullName: com.fasterxml.jackson.databind.node.POJONode.hashCode()
  overload: com.fasterxml.jackson.databind.node.POJONode.hashCode*
  type: Method
  package: com.fasterxml.jackson.databind.node
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.node.POJONode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.node.POJONode
  langs:
  - java
  name: serialize(JsonGenerator gen, SerializerProvider ctxt)
  nameWithType: POJONode.serialize(JsonGenerator gen, SerializerProvider ctxt)
  fullName: com.fasterxml.jackson.databind.node.POJONode.serialize(JsonGenerator gen, SerializerProvider ctxt)
  overload: com.fasterxml.jackson.databind.node.POJONode.serialize*
  type: Method
  package: com.fasterxml.jackson.databind.node
  summary: Method called to serialize node instances using given generator.
  syntax:
    content: public final void serialize(JsonGenerator gen, SerializerProvider ctxt)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: ctxt
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
references:
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.node.POJONode.POJONode*
  name: POJONode
  nameWithType: POJONode.POJONode
  fullName: com.fasterxml.jackson.databind.node.POJONode.POJONode
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.JsonNodeType
  name: JsonNodeType
  nameWithType: JsonNodeType
  fullName: com.fasterxml.jackson.databind.node.JsonNodeType
- uid: com.fasterxml.jackson.databind.node.POJONode.getNodeType*
  name: getNodeType
  nameWithType: POJONode.getNodeType
  fullName: com.fasterxml.jackson.databind.node.POJONode.getNodeType
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.core.JsonToken
  name: JsonToken
  nameWithType: JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.databind.node.POJONode.asToken*
  name: asToken
  nameWithType: POJONode.asToken
  fullName: com.fasterxml.jackson.databind.node.POJONode.asToken
  package: com.fasterxml.jackson.databind.node
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.node.POJONode.binaryValue*
  name: binaryValue
  nameWithType: POJONode.binaryValue
  fullName: com.fasterxml.jackson.databind.node.POJONode.binaryValue
  package: com.fasterxml.jackson.databind.node
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.node.POJONode.asText*
  name: asText
  nameWithType: POJONode.asText
  fullName: com.fasterxml.jackson.databind.node.POJONode.asText
  package: com.fasterxml.jackson.databind.node
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.node.POJONode.asBoolean*
  name: asBoolean
  nameWithType: POJONode.asBoolean
  fullName: com.fasterxml.jackson.databind.node.POJONode.asBoolean
  package: com.fasterxml.jackson.databind.node
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.node.POJONode.asInt*
  name: asInt
  nameWithType: POJONode.asInt
  fullName: com.fasterxml.jackson.databind.node.POJONode.asInt
  package: com.fasterxml.jackson.databind.node
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.fasterxml.jackson.databind.node.POJONode.asLong*
  name: asLong
  nameWithType: POJONode.asLong
  fullName: com.fasterxml.jackson.databind.node.POJONode.asLong
  package: com.fasterxml.jackson.databind.node
- uid: double
  spec.java:
  - uid: double
    name: double
    fullName: double
- uid: com.fasterxml.jackson.databind.node.POJONode.asDouble*
  name: asDouble
  nameWithType: POJONode.asDouble
  fullName: com.fasterxml.jackson.databind.node.POJONode.asDouble
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.node.POJONode.serialize*
  name: serialize
  nameWithType: POJONode.serialize
  fullName: com.fasterxml.jackson.databind.node.POJONode.serialize
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.POJONode.getPojo*
  name: getPojo
  nameWithType: POJONode.getPojo
  fullName: com.fasterxml.jackson.databind.node.POJONode.getPojo
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.POJONode.equals*
  name: equals
  nameWithType: POJONode.equals
  fullName: com.fasterxml.jackson.databind.node.POJONode.equals
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.POJONode._pojoEquals*
  name: _pojoEquals
  nameWithType: POJONode._pojoEquals
  fullName: com.fasterxml.jackson.databind.node.POJONode._pojoEquals
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.POJONode.hashCode*
  name: hashCode
  nameWithType: POJONode.hashCode
  fullName: com.fasterxml.jackson.databind.node.POJONode.hashCode
  package: com.fasterxml.jackson.databind.node
- uid: com.fasterxml.jackson.databind.node.ValueNode
  name: ValueNode
  nameWithType: ValueNode
  fullName: com.fasterxml.jackson.databind.node.ValueNode
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.JsonNode.doubleValue()
  name: JsonNode.doubleValue()
  nameWithType: JsonNode.doubleValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.doubleValue()
- uid: com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)
  name: JsonNode.requiredAt(JsonPointer)
  nameWithType: JsonNode.requiredAt(JsonPointer)
  fullName: com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BaseJsonNode.serialize(JsonGenerator,SerializerProvider)
  nameWithType: BaseJsonNode.serialize(JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonNode.iterator()
  name: JsonNode.iterator()
  nameWithType: JsonNode.iterator()
  fullName: com.fasterxml.jackson.databind.JsonNode.iterator()
- uid: com.fasterxml.jackson.databind.JsonNode.asText()
  name: JsonNode.asText()
  nameWithType: JsonNode.asText()
  fullName: com.fasterxml.jackson.databind.JsonNode.asText()
- uid: com.fasterxml.jackson.databind.JsonNode.decimalValue()
  name: JsonNode.decimalValue()
  nameWithType: JsonNode.decimalValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.decimalValue()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.required(int)
  name: BaseJsonNode.required(int)
  nameWithType: BaseJsonNode.required(int)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.required(int)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.node.ValueNode.asToken()
  name: ValueNode.asToken()
  nameWithType: ValueNode.asToken()
  fullName: com.fasterxml.jackson.databind.node.ValueNode.asToken()
- uid: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)
  name: JsonNode.findValuesAsText(String)
  nameWithType: JsonNode.findValuesAsText(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValuesAsText(java.lang.String)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.JsonNode.isMissingNode()
  name: JsonNode.isMissingNode()
  nameWithType: JsonNode.isMissingNode()
  fullName: com.fasterxml.jackson.databind.JsonNode.isMissingNode()
- uid: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)
  name: JsonNode.findValues(String)
  nameWithType: JsonNode.findValues(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findValues(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)
  name: BaseJsonNode.findPath(String)
  nameWithType: BaseJsonNode.findPath(String)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.node.ValueNode.get(int)
  name: ValueNode.get(int)
  nameWithType: ValueNode.get(int)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.get(int)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>require()
  name: JsonNode.<T>require()
  nameWithType: JsonNode.<T>require()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>require()
- uid: com.fasterxml.jackson.databind.JsonNode.numberValue()
  name: JsonNode.numberValue()
  nameWithType: JsonNode.numberValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.numberValue()
- uid: com.fasterxml.jackson.databind.JsonNode.textValue()
  name: JsonNode.textValue()
  nameWithType: JsonNode.textValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.textValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isContainerNode()
  name: JsonNode.isContainerNode()
  nameWithType: JsonNode.isContainerNode()
  fullName: com.fasterxml.jackson.databind.JsonNode.isContainerNode()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>_this()
  name: JsonNode.<T>_this()
  nameWithType: JsonNode.<T>_this()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>_this()
- uid: com.fasterxml.jackson.databind.JsonNode.isValueNode()
  name: JsonNode.isValueNode()
  nameWithType: JsonNode.isValueNode()
  fullName: com.fasterxml.jackson.databind.JsonNode.isValueNode()
- uid: com.fasterxml.jackson.databind.JsonNode.asDouble()
  name: JsonNode.asDouble()
  nameWithType: JsonNode.asDouble()
  fullName: com.fasterxml.jackson.databind.JsonNode.asDouble()
- uid: com.fasterxml.jackson.databind.node.ValueNode.has(int)
  name: ValueNode.has(int)
  nameWithType: ValueNode.has(int)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.has(int)
- uid: com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()
  name: JsonNode.bigIntegerValue()
  nameWithType: JsonNode.bigIntegerValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.bigIntegerValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isTextual()
  name: JsonNode.isTextual()
  nameWithType: JsonNode.isTextual()
  fullName: com.fasterxml.jackson.databind.JsonNode.isTextual()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()
  name: JsonNode.<T>requireNonNull()
  nameWithType: JsonNode.<T>requireNonNull()
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>requireNonNull()
- uid: com.fasterxml.jackson.databind.JsonNode.isObject()
  name: JsonNode.isObject()
  nameWithType: JsonNode.isObject()
  fullName: com.fasterxml.jackson.databind.JsonNode.isObject()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()
  name: BaseJsonNode.toPrettyString()
  nameWithType: BaseJsonNode.toPrettyString()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.toPrettyString()
- uid: com.fasterxml.jackson.databind.JsonNode.asBoolean()
  name: JsonNode.asBoolean()
  nameWithType: JsonNode.asBoolean()
  fullName: com.fasterxml.jackson.databind.JsonNode.asBoolean()
- uid: com.fasterxml.jackson.databind.JsonNode.isPojo()
  name: JsonNode.isPojo()
  nameWithType: JsonNode.isPojo()
  fullName: com.fasterxml.jackson.databind.JsonNode.isPojo()
- uid: com.fasterxml.jackson.databind.JsonNode.size()
  name: JsonNode.size()
  nameWithType: JsonNode.size()
  fullName: com.fasterxml.jackson.databind.JsonNode.size()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()
  name: BaseJsonNode.traverse()
  nameWithType: BaseJsonNode.traverse()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.required(java.lang.String)
  name: BaseJsonNode.required(String)
  nameWithType: BaseJsonNode.required(String)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.required(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.ValueNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  name: ValueNode.findValues(String,List<JsonNode>)
  nameWithType: ValueNode.findValues(String,List<JsonNode>)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.findValues(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
- uid: com.fasterxml.jackson.databind.JsonNode.asDouble(double)
  name: JsonNode.asDouble(double)
  nameWithType: JsonNode.asDouble(double)
  fullName: com.fasterxml.jackson.databind.JsonNode.asDouble(double)
- uid: com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)
  name: JsonNode.asText(String)
  nameWithType: JsonNode.asText(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.asText(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(com.fasterxml.jackson.core.ObjectCodec)
  name: BaseJsonNode.traverse(ObjectCodec)
  nameWithType: BaseJsonNode.traverse(ObjectCodec)
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.traverse(com.fasterxml.jackson.core.ObjectCodec)
- uid: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
  name: JsonSerializable.Base.isEmpty(SerializerProvider)
  nameWithType: JsonSerializable.Base.isEmpty(SerializerProvider)
  fullName: com.fasterxml.jackson.databind.JsonSerializable.Base.isEmpty(com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonNode.isNull()
  name: JsonNode.isNull()
  nameWithType: JsonNode.isNull()
  fullName: com.fasterxml.jackson.databind.JsonNode.isNull()
- uid: com.fasterxml.jackson.databind.JsonNode.booleanValue()
  name: JsonNode.booleanValue()
  nameWithType: JsonNode.booleanValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.booleanValue()
- uid: com.fasterxml.jackson.databind.JsonNode.asLong(long)
  name: JsonNode.asLong(long)
  nameWithType: JsonNode.asLong(long)
  fullName: com.fasterxml.jackson.databind.JsonNode.asLong(long)
- uid: com.fasterxml.jackson.databind.node.ValueNode.path(java.lang.String)
  name: ValueNode.path(String)
  nameWithType: ValueNode.path(String)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.path(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.fields()
  name: JsonNode.fields()
  nameWithType: JsonNode.fields()
  fullName: com.fasterxml.jackson.databind.JsonNode.fields()
- uid: com.fasterxml.jackson.databind.JsonNode.asLong()
  name: JsonNode.asLong()
  nameWithType: JsonNode.asLong()
  fullName: com.fasterxml.jackson.databind.JsonNode.asLong()
- uid: com.fasterxml.jackson.databind.JsonNode.isShort()
  name: JsonNode.isShort()
  nameWithType: JsonNode.isShort()
  fullName: com.fasterxml.jackson.databind.JsonNode.isShort()
- uid: com.fasterxml.jackson.databind.JsonNode.isLong()
  name: JsonNode.isLong()
  nameWithType: JsonNode.isLong()
  fullName: com.fasterxml.jackson.databind.JsonNode.isLong()
- uid: com.fasterxml.jackson.databind.JsonNode.asInt(int)
  name: JsonNode.asInt(int)
  nameWithType: JsonNode.asInt(int)
  fullName: com.fasterxml.jackson.databind.JsonNode.asInt(int)
- uid: com.fasterxml.jackson.databind.JsonNode.isFloat()
  name: JsonNode.isFloat()
  nameWithType: JsonNode.isFloat()
  fullName: com.fasterxml.jackson.databind.JsonNode.isFloat()
- uid: com.fasterxml.jackson.databind.node.ValueNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
  name: ValueNode.findParents(String,List<JsonNode>)
  nameWithType: ValueNode.findParents(String,List<JsonNode>)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.findParents(java.lang.String,java.util.List<com.fasterxml.jackson.databind.JsonNode>)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.toString()
  name: BaseJsonNode.toString()
  nameWithType: BaseJsonNode.toString()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.toString()
- uid: com.fasterxml.jackson.databind.node.ValueNode.has(java.lang.String)
  name: ValueNode.has(String)
  nameWithType: ValueNode.has(String)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.has(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.elements()
  name: JsonNode.elements()
  nameWithType: JsonNode.elements()
  fullName: com.fasterxml.jackson.databind.JsonNode.elements()
- uid: com.fasterxml.jackson.databind.JsonNode.canConvertToInt()
  name: JsonNode.canConvertToInt()
  nameWithType: JsonNode.canConvertToInt()
  fullName: com.fasterxml.jackson.databind.JsonNode.canConvertToInt()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)
  name: JsonNode.equals(Object)
  nameWithType: JsonNode.equals(Object)
  fullName: com.fasterxml.jackson.databind.JsonNode.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonNode.isBigInteger()
  name: JsonNode.isBigInteger()
  nameWithType: JsonNode.isBigInteger()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBigInteger()
- uid: com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)
  name: JsonNode.at(JsonPointer)
  nameWithType: JsonNode.at(JsonPointer)
  fullName: com.fasterxml.jackson.databind.JsonNode.at(com.fasterxml.jackson.core.JsonPointer)
- uid: com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)
  name: JsonNode.requiredAt(String)
  nameWithType: JsonNode.requiredAt(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.isInt()
  name: JsonNode.isInt()
  nameWithType: JsonNode.isInt()
  fullName: com.fasterxml.jackson.databind.JsonNode.isInt()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.JsonNode.asInt()
  name: JsonNode.asInt()
  nameWithType: JsonNode.asInt()
  fullName: com.fasterxml.jackson.databind.JsonNode.asInt()
- uid: com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)
  name: JsonNode.at(String)
  nameWithType: JsonNode.at(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.at(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.ValueNode.path(int)
  name: ValueNode.path(int)
  nameWithType: ValueNode.path(int)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.path(int)
- uid: com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()
  name: JsonNode.isFloatingPointNumber()
  nameWithType: JsonNode.isFloatingPointNumber()
  fullName: com.fasterxml.jackson.databind.JsonNode.isFloatingPointNumber()
- uid: com.fasterxml.jackson.databind.JsonNode.intValue()
  name: JsonNode.intValue()
  nameWithType: JsonNode.intValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.intValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isBoolean()
  name: JsonNode.isBoolean()
  nameWithType: JsonNode.isBoolean()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBoolean()
- uid: com.fasterxml.jackson.databind.node.ValueNode.<T>deepCopy()
  name: ValueNode.<T>deepCopy()
  nameWithType: ValueNode.<T>deepCopy()
  fullName: com.fasterxml.jackson.databind.node.ValueNode.<T>deepCopy()
- uid: com.fasterxml.jackson.databind.node.ValueNode.hasNonNull(java.lang.String)
  name: ValueNode.hasNonNull(String)
  nameWithType: ValueNode.hasNonNull(String)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.hasNonNull(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.ValueNode.isEmpty()
  name: ValueNode.isEmpty()
  nameWithType: ValueNode.isEmpty()
  fullName: com.fasterxml.jackson.databind.node.ValueNode.isEmpty()
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()
  name: BaseJsonNode.numberType()
  nameWithType: BaseJsonNode.numberType()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.numberType()
- uid: com.fasterxml.jackson.databind.JsonNode.binaryValue()
  name: JsonNode.binaryValue()
  nameWithType: JsonNode.binaryValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.binaryValue()
- uid: com.fasterxml.jackson.databind.JsonNode.isBigDecimal()
  name: JsonNode.isBigDecimal()
  nameWithType: JsonNode.isBigDecimal()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBigDecimal()
- uid: com.fasterxml.jackson.databind.node.ValueNode.findParent(java.lang.String)
  name: ValueNode.findParent(String)
  nameWithType: ValueNode.findParent(String)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.findParent(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.isDouble()
  name: JsonNode.isDouble()
  nameWithType: JsonNode.isDouble()
  fullName: com.fasterxml.jackson.databind.JsonNode.isDouble()
- uid: com.fasterxml.jackson.databind.JsonNode.longValue()
  name: JsonNode.longValue()
  nameWithType: JsonNode.longValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.longValue()
- uid: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  name: JsonNode.equals(Comparator<JsonNode>,JsonNode)
  nameWithType: JsonNode.equals(Comparator<JsonNode>,JsonNode)
  fullName: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator<com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
- uid: com.fasterxml.jackson.databind.JsonNode.floatValue()
  name: JsonNode.floatValue()
  nameWithType: JsonNode.floatValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.floatValue()
- uid: com.fasterxml.jackson.databind.node.ValueNode.hasNonNull(int)
  name: ValueNode.hasNonNull(int)
  nameWithType: ValueNode.hasNonNull(int)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.hasNonNull(int)
- uid: com.fasterxml.jackson.databind.JsonNode.isArray()
  name: JsonNode.isArray()
  nameWithType: JsonNode.isArray()
  fullName: com.fasterxml.jackson.databind.JsonNode.isArray()
- uid: com.fasterxml.jackson.databind.JsonNode.fieldNames()
  name: JsonNode.fieldNames()
  nameWithType: JsonNode.fieldNames()
  fullName: com.fasterxml.jackson.databind.JsonNode.fieldNames()
- uid: com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()
  name: JsonNode.isIntegralNumber()
  nameWithType: JsonNode.isIntegralNumber()
  fullName: com.fasterxml.jackson.databind.JsonNode.isIntegralNumber()
- uid: com.fasterxml.jackson.databind.node.ValueNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: ValueNode.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: ValueNode.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)
  name: JsonNode.<T>with(String)
  nameWithType: JsonNode.<T>with(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>with(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()
  name: BaseJsonNode.hashCode()
  nameWithType: BaseJsonNode.hashCode()
  fullName: com.fasterxml.jackson.databind.node.BaseJsonNode.hashCode()
- uid: com.fasterxml.jackson.databind.JsonNode.shortValue()
  name: JsonNode.shortValue()
  nameWithType: JsonNode.shortValue()
  fullName: com.fasterxml.jackson.databind.JsonNode.shortValue()
- uid: com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
  name: JsonNode.<T>_reportRequiredViolation(String,Object)
  nameWithType: JsonNode.<T>_reportRequiredViolation(String,Object)
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
- uid: com.fasterxml.jackson.databind.node.ValueNode.findValue(java.lang.String)
  name: ValueNode.findValue(String)
  nameWithType: ValueNode.findValue(String)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.findValue(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)
  name: JsonNode.<T>withArray(String)
  nameWithType: JsonNode.<T>withArray(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.<T>withArray(java.lang.String)
- uid: com.fasterxml.jackson.databind.node.ValueNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
  name: ValueNode.findValuesAsText(String,List<String>)
  nameWithType: ValueNode.findValuesAsText(String,List<String>)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.findValuesAsText(java.lang.String,java.util.List<java.lang.String>)
- uid: com.fasterxml.jackson.databind.node.ValueNode.get(java.lang.String)
  name: ValueNode.get(String)
  nameWithType: ValueNode.get(String)
  fullName: com.fasterxml.jackson.databind.node.ValueNode.get(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.isBinary()
  name: JsonNode.isBinary()
  nameWithType: JsonNode.isBinary()
  fullName: com.fasterxml.jackson.databind.JsonNode.isBinary()
- uid: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)
  name: JsonNode.findParents(String)
  nameWithType: JsonNode.findParents(String)
  fullName: com.fasterxml.jackson.databind.JsonNode.findParents(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonNode.getNodeType()
  name: JsonNode.getNodeType()
  nameWithType: JsonNode.getNodeType()
  fullName: com.fasterxml.jackson.databind.JsonNode.getNodeType()
- uid: com.fasterxml.jackson.databind.JsonNode.isNumber()
  name: JsonNode.isNumber()
  nameWithType: JsonNode.isNumber()
  fullName: com.fasterxml.jackson.databind.JsonNode.isNumber()
- uid: com.fasterxml.jackson.databind.node.ValueNode._at(com.fasterxml.jackson.core.JsonPointer)
  name: ValueNode._at(JsonPointer)
  nameWithType: ValueNode._at(JsonPointer)
  fullName: com.fasterxml.jackson.databind.node.ValueNode._at(com.fasterxml.jackson.core.JsonPointer)
- uid: com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)
  name: JsonNode.asBoolean(boolean)
  nameWithType: JsonNode.asBoolean(boolean)
  fullName: com.fasterxml.jackson.databind.JsonNode.asBoolean(boolean)
- uid: com.fasterxml.jackson.databind.JsonNode.canConvertToLong()
  name: JsonNode.canConvertToLong()
  nameWithType: JsonNode.canConvertToLong()
  fullName: com.fasterxml.jackson.databind.JsonNode.canConvertToLong()
- uid: T>require()
  name: T>require()
  nameWithType: T>require()
  fullName: T>require()
- uid: com.fasterxml.jackson.databind.JsonNode.
  name: JsonNode.
  nameWithType: JsonNode.
  fullName: com.fasterxml.jackson.databind.JsonNode.
- uid: T>_this()
  name: T>_this()
  nameWithType: T>_this()
  fullName: T>_this()
- uid: T>requireNonNull()
  name: T>requireNonNull()
  nameWithType: T>requireNonNull()
  fullName: T>requireNonNull()
- uid: com.fasterxml.jackson.databind.node.ValueNode.findValues(java.lang.String,java.util.List
  name: ValueNode.findValues(String,List
  nameWithType: ValueNode.findValues(String,List
  fullName: com.fasterxml.jackson.databind.node.ValueNode.findValues(java.lang.String,java.util.List
- uid: com.fasterxml.jackson.databind.JsonNode>)
  name: JsonNode>)
  nameWithType: JsonNode>)
  fullName: com.fasterxml.jackson.databind.JsonNode>)
- uid: com.fasterxml.jackson.databind.node.ValueNode.findParents(java.lang.String,java.util.List
  name: ValueNode.findParents(String,List
  nameWithType: ValueNode.findParents(String,List
  fullName: com.fasterxml.jackson.databind.node.ValueNode.findParents(java.lang.String,java.util.List
- uid: com.fasterxml.jackson.databind.node.ValueNode.
  name: ValueNode.
  nameWithType: ValueNode.
  fullName: com.fasterxml.jackson.databind.node.ValueNode.
- uid: T>deepCopy()
  name: T>deepCopy()
  nameWithType: T>deepCopy()
  fullName: T>deepCopy()
- uid: com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
  name: JsonNode>,JsonNode)
  nameWithType: JsonNode>,JsonNode)
  fullName: com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.JsonNode)
- uid: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator
  name: JsonNode.equals(Comparator
  nameWithType: JsonNode.equals(Comparator
  fullName: com.fasterxml.jackson.databind.JsonNode.equals(java.util.Comparator
- uid: T>with(java.lang.String)
  name: T>with(String)
  nameWithType: T>with(String)
  fullName: T>with(java.lang.String)
- uid: T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
  name: T>_reportRequiredViolation(String,Object)
  nameWithType: T>_reportRequiredViolation(String,Object)
  fullName: T>_reportRequiredViolation(java.lang.String,java.lang.Object...)
- uid: T>withArray(java.lang.String)
  name: T>withArray(String)
  nameWithType: T>withArray(String)
  fullName: T>withArray(java.lang.String)
- uid: java.lang.String>)
  name: String>)
  nameWithType: String>)
  fullName: java.lang.String>)
- uid: com.fasterxml.jackson.databind.node.ValueNode.findValuesAsText(java.lang.String,java.util.List
  name: ValueNode.findValuesAsText(String,List
  nameWithType: ValueNode.findValuesAsText(String,List
  fullName: com.fasterxml.jackson.databind.node.ValueNode.findValuesAsText(java.lang.String,java.util.List
