### YamlMime:JavaType
uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity"
fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity"
name: "VideoEntity"
nameWithType: "VideoEntity"
summary: "An immutable client-side representation of Video<wbr>Entity."
syntax: "public interface VideoEntity"
methods:
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.archival()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.archival()"
  name: "archival()"
  nameWithType: "VideoEntity.archival()"
  summary: "Gets the archival property: Video archival properties."
  modifiers:
  - "abstract"
  syntax: "public abstract VideoArchival archival()"
  desc: "Gets the archival property: Video archival properties."
  returns:
    description: "the archival value."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoArchival?alt=com.azure.resourcemanager.videoanalyzer.models.VideoArchival&text=VideoArchival\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.contentUrls()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.contentUrls()"
  name: "contentUrls()"
  nameWithType: "VideoEntity.contentUrls()"
  summary: "Gets the content<wbr>Urls property: Set of URLs to the video content."
  modifiers:
  - "abstract"
  syntax: "public abstract VideoContentUrls contentUrls()"
  desc: "Gets the contentUrls property: Set of URLs to the video content."
  returns:
    description: "the contentUrls value."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls?alt=com.azure.resourcemanager.videoanalyzer.models.VideoContentUrls&text=VideoContentUrls\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.description()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.description()"
  name: "description()"
  nameWithType: "VideoEntity.description()"
  summary: "Gets the description property: Optional video description provided by the user."
  modifiers:
  - "abstract"
  syntax: "public abstract String description()"
  desc: "Gets the description property: Optional video description provided by the user. Value can be up to 2048 characters long."
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.flags()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.flags()"
  name: "flags()"
  nameWithType: "VideoEntity.flags()"
  summary: "Gets the flags property: Video flags contain information about the available video actions and its dynamic properties based on the current video state."
  modifiers:
  - "abstract"
  syntax: "public abstract VideoFlags flags()"
  desc: "Gets the flags property: Video flags contain information about the available video actions and its dynamic properties based on the current video state."
  returns:
    description: "the flags value."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoFlags?alt=com.azure.resourcemanager.videoanalyzer.models.VideoFlags&text=VideoFlags\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.id()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.id()"
  name: "id()"
  nameWithType: "VideoEntity.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.innerModel()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.innerModel()"
  name: "innerModel()"
  nameWithType: "VideoEntity.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>videoanalyzer.<wbr>fluent.<wbr>models.<wbr>Video<wbr>Entity<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract VideoEntityInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.videoanalyzer.fluent.models.VideoEntityInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.fluent.models.VideoEntityInner?alt=com.azure.resourcemanager.videoanalyzer.fluent.models.VideoEntityInner&text=VideoEntityInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.listContentToken()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.listContentToken()"
  name: "listContentToken()"
  nameWithType: "VideoEntity.listContentToken()"
  summary: "Generates a streaming token which can be used for accessing content from video content URLs, for a video resource with the given name."
  modifiers:
  - "abstract"
  syntax: "public abstract VideoContentToken listContentToken()"
  desc: "Generates a streaming token which can be used for accessing content from video content URLs, for a video resource with the given name."
  returns:
    description: "\"Video content token grants access to the video content URLs.\"."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoContentToken?alt=com.azure.resourcemanager.videoanalyzer.models.VideoContentToken&text=VideoContentToken\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.listContentTokenWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.listContentTokenWithResponse(Context context)"
  name: "listContentTokenWithResponse(Context context)"
  nameWithType: "VideoEntity.listContentTokenWithResponse(Context context)"
  summary: "Generates a streaming token which can be used for accessing content from video content URLs, for a video resource with the given name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<VideoContentToken> listContentTokenWithResponse(Context context)"
  desc: "Generates a streaming token which can be used for accessing content from video content URLs, for a video resource with the given name."
  returns:
    description: "\"Video content token grants access to the video content URLs.\" along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoContentToken?alt=com.azure.resourcemanager.videoanalyzer.models.VideoContentToken&text=VideoContentToken\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.mediaInfo()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.mediaInfo()"
  name: "mediaInfo()"
  nameWithType: "VideoEntity.mediaInfo()"
  summary: "Gets the media<wbr>Info property: Contains information about the video and audio content."
  modifiers:
  - "abstract"
  syntax: "public abstract VideoMediaInfo mediaInfo()"
  desc: "Gets the mediaInfo property: Contains information about the video and audio content."
  returns:
    description: "the mediaInfo value."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoMediaInfo?alt=com.azure.resourcemanager.videoanalyzer.models.VideoMediaInfo&text=VideoMediaInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.name()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.name()"
  name: "name()"
  nameWithType: "VideoEntity.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.refresh()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.refresh()"
  name: "refresh()"
  nameWithType: "VideoEntity.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract VideoEntity refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoEntity?alt=com.azure.resourcemanager.videoanalyzer.models.VideoEntity&text=VideoEntity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "VideoEntity.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract VideoEntity refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoEntity?alt=com.azure.resourcemanager.videoanalyzer.models.VideoEntity&text=VideoEntity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.resourceGroupName()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "VideoEntity.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.systemData()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.systemData()"
  name: "systemData()"
  nameWithType: "VideoEntity.systemData()"
  summary: "Gets the system<wbr>Data property: Azure Resource Manager metadata containing created<wbr>By and modified<wbr>By information."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.title()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.title()"
  name: "title()"
  nameWithType: "VideoEntity.title()"
  summary: "Gets the title property: Optional video title provided by the user."
  modifiers:
  - "abstract"
  syntax: "public abstract String title()"
  desc: "Gets the title property: Optional video title provided by the user. Value can be up to 256 characters long."
  returns:
    description: "the title value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.type()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.type()"
  name: "type()"
  nameWithType: "VideoEntity.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.typePropertiesType()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.typePropertiesType()"
  name: "typePropertiesType()"
  nameWithType: "VideoEntity.typePropertiesType()"
  summary: "Gets the type<wbr>Properties<wbr>Type property: Video content type."
  modifiers:
  - "abstract"
  syntax: "public abstract VideoType typePropertiesType()"
  desc: "Gets the typePropertiesType property: Video content type. Different content types are suitable for different applications and scenarios."
  returns:
    description: "the typePropertiesType value."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoType?alt=com.azure.resourcemanager.videoanalyzer.models.VideoType&text=VideoType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.update()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.VideoEntity.update()"
  name: "update()"
  nameWithType: "VideoEntity.update()"
  summary: "Begins update for the Video<wbr>Entity resource."
  modifiers:
  - "abstract"
  syntax: "public abstract VideoEntity.Update update()"
  desc: "Begins update for the VideoEntity resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.VideoEntity.Update?alt=com.azure.resourcemanager.videoanalyzer.models.VideoEntity.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of VideoEntity."
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.5
