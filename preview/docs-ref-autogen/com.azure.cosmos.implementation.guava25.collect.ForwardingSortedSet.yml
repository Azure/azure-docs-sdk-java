### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet"
fullName: "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>"
name: "ForwardingSortedSet<E>"
nameWithType: "ForwardingSortedSet<E>"
summary: "A sorted set which forwards all its method calls to another sorted set. Subclasses should override one or more methods to modify the behavior of the backing sorted set as desired per the [decorator pattern][].\n\n**Warning:** The methods of `ForwardingSortedSet` forward *indiscriminately* to the methods of the delegate. For example, overriding <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.add\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#add\"></xref> alone *will not* change the behavior of <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.addAll\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#addAll\"></xref>, which can lead to unexpected behavior. In this case, you should override `addAll` as well, either providing your own implementation, or delegating to the provided `standardAddAll` method.\n\n**`default` method warning:** This class does *not* forward calls to `default` methods. Instead, it inherits their default implementations. When those implementations invoke methods, they invoke methods on the `ForwardingSortedSet`.\n\nEach of the `standard` methods, where appropriate, uses the set's comparator (or the natural ordering of the elements, if there is no comparator) to test element equality. As a result, if the comparator is not consistent with equals, some of the standard implementations may violate the `Set` contract.\n\nThe `standard` methods and the collection views they return are not guaranteed to be thread-safe, even when all of the methods that they depend on are thread-safe.\n\n\n[decorator pattern]: http://en.wikipedia.org/wiki/Decorator_pattern"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ForwardingObject\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ForwardingCollection\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ForwardingSet\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSet.equals(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSet.hashCode()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardEquals(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardHashCode()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardRemoveAll(java.util.Collection<?>)"
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class ForwardingSortedSet<E> extends ForwardingSet<E> implements SortedSet<E>"
constructors:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.ForwardingSortedSet()"
methods:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.comparator()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.delegate()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.first()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.headSet(E)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.last()"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardContains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardRemove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardSubSet(E,E)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.subSet(E,E)"
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.tailSet(E)"
type: "class"
typeParameters:
- name: "E"
implements:
- "<xref href=\"java.util.SortedSet?alt=java.util.SortedSet&text=SortedSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
