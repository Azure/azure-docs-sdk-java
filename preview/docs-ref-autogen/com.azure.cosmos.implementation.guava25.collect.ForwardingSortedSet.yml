### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet
  id: ForwardingSortedSet
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.ForwardingSortedSet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.comparator()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.first()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.headSet(E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.last()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardContains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardSubSet(E,E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.subSet(E,E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.tailSet(E)
  langs:
  - java
  name: ForwardingSortedSet<E>
  nameWithType: ForwardingSortedSet<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A sorted set which forwards all its method calls to another sorted set. Subclasses should override one or more methods to modify the behavior of the backing sorted set as desired per the [decorator pattern][].


    **Warning:** The methods of `ForwardingSortedSet` forward *indiscriminately* to the methods of the delegate. For example, overriding <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.add" data-throw-if-not-resolved="false">#add</xref> alone *will not* change the behavior of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.addAll" data-throw-if-not-resolved="false">#addAll</xref>, which can lead to unexpected behavior. In this case, you should override `addAll` as well, either providing your own implementation, or delegating to the provided `standardAddAll` method.


    **`default` method warning:** This class does *not* forward calls to `default` methods. Instead, it inherits their default implementations. When those implementations invoke methods, they invoke methods on the `ForwardingSortedSet`.


    Each of the `standard` methods, where appropriate, uses the set's comparator (or the natural ordering of the elements, if there is no comparator) to test element equality. As a result, if the comparator is not consistent with equals, some of the standard implementations may violate the `Set` contract.


    The `standard` methods and the collection views they return are not guaranteed to be thread-safe, even when all of the methods that they depend on are thread-safe.



    [decorator pattern]: http://en.wikipedia.org/wiki/Decorator_pattern
  syntax:
    content: public abstract class ForwardingSortedSet<E> extends ForwardingSet<E> implements SortedSet<E>
    typeParameters:
    - id: E
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet
  implements:
  - java.util.SortedSet<E>
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardEquals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardHashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardRemoveAll(java.util.Collection<?>)
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.ForwardingSortedSet()
  id: ForwardingSortedSet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet
  langs:
  - java
  name: ForwardingSortedSet()
  nameWithType: ForwardingSortedSet<E>.ForwardingSortedSet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.ForwardingSortedSet()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.ForwardingSortedSet*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Constructor for use by subclasses.
  syntax:
    content: protected ForwardingSortedSet()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.comparator()
  id: comparator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet
  langs:
  - java
  name: comparator()
  nameWithType: ForwardingSortedSet<E>.comparator()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.comparator()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.comparator*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public Comparator<? super E> comparator()
    return:
      type: java.util.Comparator<? super E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.delegate()
  id: delegate()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet
  langs:
  - java
  name: delegate()
  nameWithType: ForwardingSortedSet<E>.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.delegate()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.delegate*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the backing delegate instance that methods are forwarded to. Abstract subclasses generally override this method with an abstract method that has a more specific return type, such as <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate" data-throw-if-not-resolved="false">ForwardingSet#delegate</xref>. Concrete subclasses override this method to supply the instance being decorated.
  syntax:
    content: protected abstract SortedSet<E> delegate()
    return:
      type: java.util.SortedSet<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.first()
  id: first()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet
  langs:
  - java
  name: first()
  nameWithType: ForwardingSortedSet<E>.first()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.first()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.first*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public E first()
    return:
      type: E
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.headSet(E)
  id: headSet(E)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet
  langs:
  - java
  name: headSet(E toElement)
  nameWithType: ForwardingSortedSet<E>.headSet(E toElement)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.headSet(E toElement)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.headSet*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public SortedSet<E> headSet(E toElement)
    parameters:
    - id: toElement
      type: E
    return:
      type: java.util.SortedSet<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.last()
  id: last()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet
  langs:
  - java
  name: last()
  nameWithType: ForwardingSortedSet<E>.last()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.last()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.last*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public E last()
    return:
      type: E
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardContains(java.lang.Object)
  id: standardContains(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet
  langs:
  - java
  name: standardContains(Object object)
  nameWithType: ForwardingSortedSet<E>.standardContains(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.standardContains(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardContains*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.contains" data-throw-if-not-resolved="false">#contains</xref> in terms of the `first()` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.tailSet" data-throw-if-not-resolved="false">#tailSet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.tailSet" data-throw-if-not-resolved="false">#tailSet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.contains" data-throw-if-not-resolved="false">#contains</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardContains(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardRemove(java.lang.Object)
  id: standardRemove(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet
  langs:
  - java
  name: standardRemove(Object object)
  nameWithType: ForwardingSortedSet<E>.standardRemove(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.standardRemove(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardRemove*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.remove" data-throw-if-not-resolved="false">#remove</xref> in terms of the `iterator()` method of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.tailSet" data-throw-if-not-resolved="false">#tailSet</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.tailSet" data-throw-if-not-resolved="false">#tailSet</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.remove" data-throw-if-not-resolved="false">#remove</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardRemove(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardSubSet(E,E)
  id: standardSubSet(E,E)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet
  langs:
  - java
  name: standardSubSet(E fromElement, E toElement)
  nameWithType: ForwardingSortedSet<E>.standardSubSet(E fromElement, E toElement)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.standardSubSet(E fromElement, E toElement)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardSubSet*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible default implementation of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.subSet*" data-throw-if-not-resolved="false">#subSet(Object, Object)</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.headSet*" data-throw-if-not-resolved="false">#headSet(Object)</xref> and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.tailSet*" data-throw-if-not-resolved="false">#tailSet(Object)</xref>. In some situations, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.subSet*" data-throw-if-not-resolved="false">#subSet(Object, Object)</xref> to forward to this implementation.
  syntax:
    content: protected SortedSet<E> standardSubSet(E fromElement, E toElement)
    parameters:
    - id: fromElement
      type: E
    - id: toElement
      type: E
    return:
      type: java.util.SortedSet<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.subSet(E,E)
  id: subSet(E,E)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet
  langs:
  - java
  name: subSet(E fromElement, E toElement)
  nameWithType: ForwardingSortedSet<E>.subSet(E fromElement, E toElement)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.subSet(E fromElement, E toElement)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.subSet*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public SortedSet<E> subSet(E fromElement, E toElement)
    parameters:
    - id: fromElement
      type: E
    - id: toElement
      type: E
    return:
      type: java.util.SortedSet<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.tailSet(E)
  id: tailSet(E)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet
  langs:
  - java
  name: tailSet(E fromElement)
  nameWithType: ForwardingSortedSet<E>.tailSet(E fromElement)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.tailSet(E fromElement)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.tailSet*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public SortedSet<E> tailSet(E fromElement)
    parameters:
    - id: fromElement
      type: E
    return:
      type: java.util.SortedSet<E>
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.ForwardingSortedSet*
  name: ForwardingSortedSet
  nameWithType: ForwardingSortedSet<E>.ForwardingSortedSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.ForwardingSortedSet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.SortedSet<E>
  spec.java:
  - uid: java.util.SortedSet
    name: SortedSet
    fullName: java.util.SortedSet
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.delegate*
  name: delegate
  nameWithType: ForwardingSortedSet<E>.delegate
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.delegate
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Comparator<? super E>
  spec.java:
  - uid: java.util.Comparator
    name: Comparator
    fullName: java.util.Comparator
  - name: <
    fullName: <
  - uid: '? super E'
    name: '? super E'
    fullName: '? super E'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.comparator*
  name: comparator
  nameWithType: ForwardingSortedSet<E>.comparator
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.comparator
  package: com.azure.cosmos.implementation.guava25.collect
- uid: E
  spec.java:
  - uid: E
    name: E
    fullName: E
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.first*
  name: first
  nameWithType: ForwardingSortedSet<E>.first
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.first
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.headSet*
  name: headSet
  nameWithType: ForwardingSortedSet<E>.headSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.headSet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.last*
  name: last
  nameWithType: ForwardingSortedSet<E>.last
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.last
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.subSet*
  name: subSet
  nameWithType: ForwardingSortedSet<E>.subSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.subSet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.tailSet*
  name: tailSet
  nameWithType: ForwardingSortedSet<E>.tailSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.tailSet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardContains*
  name: standardContains
  nameWithType: ForwardingSortedSet<E>.standardContains
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.standardContains
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardRemove*
  name: standardRemove
  nameWithType: ForwardingSortedSet<E>.standardRemove
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.standardRemove
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet.standardSubSet*
  name: standardSubSet
  nameWithType: ForwardingSortedSet<E>.standardSubSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSortedSet<E>.standardSubSet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>
  name: ForwardingSet<E>
  nameWithType: ForwardingSet<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate()
  name: ForwardingSet.delegate()
  nameWithType: ForwardingSet.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
  name: ForwardingCollection.addAll(Collection<? extends E>)
  nameWithType: ForwardingCollection.addAll(Collection<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardEquals(java.lang.Object)
  name: ForwardingSet.standardEquals(Object)
  nameWithType: ForwardingSet.standardEquals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardEquals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
  name: ForwardingCollection.remove(Object)
  nameWithType: ForwardingCollection.remove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
  name: ForwardingCollection.standardToString()
  nameWithType: ForwardingCollection.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
  name: ForwardingCollection.standardContainsAll(Collection<?>)
  nameWithType: ForwardingCollection.standardContainsAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
  name: ForwardingCollection.add(E)
  nameWithType: ForwardingCollection.add(E)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
  name: ForwardingCollection.standardClear()
  nameWithType: ForwardingCollection.standardClear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
  name: ForwardingCollection.contains(Object)
  nameWithType: ForwardingCollection.contains(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
  name: ForwardingCollection.retainAll(Collection<?>)
  nameWithType: ForwardingCollection.retainAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
  name: ForwardingCollection.standardToArray()
  nameWithType: ForwardingCollection.standardToArray()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
  name: ForwardingCollection.containsAll(Collection<?>)
  nameWithType: ForwardingCollection.containsAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.hashCode()
  name: ForwardingSet.hashCode()
  nameWithType: ForwardingSet.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
  name: ForwardingCollection.standardRetainAll(Collection<?>)
  nameWithType: ForwardingCollection.standardRetainAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
  name: ForwardingCollection.isEmpty()
  nameWithType: ForwardingCollection.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
  name: ForwardingCollection.clear()
  nameWithType: ForwardingCollection.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
  name: ForwardingCollection.<T>toArray(T[])
  nameWithType: ForwardingCollection.<T>toArray(T[])
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardRemoveAll(java.util.Collection<?>)
  name: ForwardingSet.standardRemoveAll(Collection<?>)
  nameWithType: ForwardingSet.standardRemoveAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardRemoveAll(java.util.Collection<?>)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
  name: ForwardingCollection.standardAddAll(Collection<? extends E>)
  nameWithType: ForwardingCollection.standardAddAll(Collection<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.equals(java.lang.Object)
  name: ForwardingSet.equals(Object)
  nameWithType: ForwardingSet.equals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
  name: ForwardingCollection.size()
  nameWithType: ForwardingCollection.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
  name: ForwardingCollection.toArray()
  nameWithType: ForwardingCollection.toArray()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
  name: ForwardingCollection.standardRemove(Object)
  nameWithType: ForwardingCollection.standardRemove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
  name: ForwardingCollection.removeAll(Collection<?>)
  nameWithType: ForwardingCollection.removeAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardHashCode()
  name: ForwardingSet.standardHashCode()
  nameWithType: ForwardingSet.standardHashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardHashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
  name: ForwardingCollection.standardIsEmpty()
  nameWithType: ForwardingCollection.standardIsEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
  name: ForwardingCollection.iterator()
  nameWithType: ForwardingCollection.iterator()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  name: ForwardingObject.toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
  name: ForwardingCollection.standardContains(Object)
  nameWithType: ForwardingCollection.standardContains(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
  name: ForwardingCollection.<T>standardToArray(T[])
  nameWithType: ForwardingCollection.<T>standardToArray(T[])
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
- uid: java.util.SortedSet
  name: SortedSet
  nameWithType: SortedSet
  fullName: java.util.SortedSet
- uid: '? super E'
  name: '? super E'
  nameWithType: '? super E'
  fullName: '? super E'
- uid: java.util.Comparator
  name: Comparator
  nameWithType: Comparator
  fullName: java.util.Comparator
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet
  name: ForwardingSet
  nameWithType: ForwardingSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet
- uid: '? extends E>)'
  name: '? extends E>)'
  nameWithType: '? extends E>)'
  fullName: '? extends E>)'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection
  name: ForwardingCollection.addAll(Collection
  nameWithType: ForwardingCollection.addAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection
  name: ForwardingCollection.standardContainsAll(Collection
  nameWithType: ForwardingCollection.standardContainsAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection
  name: ForwardingCollection.retainAll(Collection
  nameWithType: ForwardingCollection.retainAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection
  name: ForwardingCollection.containsAll(Collection
  nameWithType: ForwardingCollection.containsAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection
  name: ForwardingCollection.standardRetainAll(Collection
  nameWithType: ForwardingCollection.standardRetainAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection
- uid: T>toArray(T[])
  name: T>toArray(T[])
  nameWithType: T>toArray(T[])
  fullName: T>toArray(T[])
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.
  name: ForwardingCollection.
  nameWithType: ForwardingCollection.
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardRemoveAll(java.util.Collection
  name: ForwardingSet.standardRemoveAll(Collection
  nameWithType: ForwardingSet.standardRemoveAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardRemoveAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection
  name: ForwardingCollection.standardAddAll(Collection
  nameWithType: ForwardingCollection.standardAddAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection
  name: ForwardingCollection.removeAll(Collection
  nameWithType: ForwardingCollection.removeAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection
- uid: T>standardToArray(T[])
  name: T>standardToArray(T[])
  nameWithType: T>standardToArray(T[])
  fullName: T>standardToArray(T[])
