### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties"
fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties"
name: "StreamingPolicyProperties"
nameWithType: "StreamingPolicyProperties"
summary: "Class to specify properties of Streaming Policy."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class StreamingPolicyProperties"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.StreamingPolicyProperties()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.StreamingPolicyProperties()"
  name: "StreamingPolicyProperties()"
  nameWithType: "StreamingPolicyProperties.StreamingPolicyProperties()"
  syntax: "public StreamingPolicyProperties()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.commonEncryptionCbcs()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.commonEncryptionCbcs()"
  name: "commonEncryptionCbcs()"
  nameWithType: "StreamingPolicyProperties.commonEncryptionCbcs()"
  summary: "Get the common<wbr>Encryption<wbr>Cbcs property: Configuration of Common<wbr>Encryption<wbr>Cbcs."
  syntax: "public CommonEncryptionCbcs commonEncryptionCbcs()"
  desc: "Get the commonEncryptionCbcs property: Configuration of CommonEncryptionCbcs."
  returns:
    description: "the commonEncryptionCbcs value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.commonEncryptionCenc()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.commonEncryptionCenc()"
  name: "commonEncryptionCenc()"
  nameWithType: "StreamingPolicyProperties.commonEncryptionCenc()"
  summary: "Get the common<wbr>Encryption<wbr>Cenc property: Configuration of Common<wbr>Encryption<wbr>Cenc."
  syntax: "public CommonEncryptionCenc commonEncryptionCenc()"
  desc: "Get the commonEncryptionCenc property: Configuration of CommonEncryptionCenc."
  returns:
    description: "the commonEncryptionCenc value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc&text=CommonEncryptionCenc\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.created()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.created()"
  name: "created()"
  nameWithType: "StreamingPolicyProperties.created()"
  summary: "Get the created property: Creation time of Streaming Policy."
  syntax: "public OffsetDateTime created()"
  desc: "Get the created property: Creation time of Streaming Policy."
  returns:
    description: "the created value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.defaultContentKeyPolicyName()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.defaultContentKeyPolicyName()"
  name: "defaultContentKeyPolicyName()"
  nameWithType: "StreamingPolicyProperties.defaultContentKeyPolicyName()"
  summary: "Get the default<wbr>Content<wbr>Key<wbr>Policy<wbr>Name property: Default Content<wbr>Key used by current Streaming Policy."
  syntax: "public String defaultContentKeyPolicyName()"
  desc: "Get the defaultContentKeyPolicyName property: Default ContentKey used by current Streaming Policy."
  returns:
    description: "the defaultContentKeyPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.envelopeEncryption()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.envelopeEncryption()"
  name: "envelopeEncryption()"
  nameWithType: "StreamingPolicyProperties.envelopeEncryption()"
  summary: "Get the envelope<wbr>Encryption property: Configuration of Envelope<wbr>Encryption."
  syntax: "public EnvelopeEncryption envelopeEncryption()"
  desc: "Get the envelopeEncryption property: Configuration of EnvelopeEncryption."
  returns:
    description: "the envelopeEncryption value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption?alt=com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption&text=EnvelopeEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.noEncryption()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.noEncryption()"
  name: "noEncryption()"
  nameWithType: "StreamingPolicyProperties.noEncryption()"
  summary: "Get the no<wbr>Encryption property: Configurations of No<wbr>Encryption."
  syntax: "public NoEncryption noEncryption()"
  desc: "Get the noEncryption property: Configurations of NoEncryption."
  returns:
    description: "the noEncryption value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.NoEncryption?alt=com.azure.resourcemanager.mediaservices.models.NoEncryption&text=NoEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.validate()"
  name: "validate()"
  nameWithType: "StreamingPolicyProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.withCommonEncryptionCbcs(com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.withCommonEncryptionCbcs(CommonEncryptionCbcs commonEncryptionCbcs)"
  name: "withCommonEncryptionCbcs(CommonEncryptionCbcs commonEncryptionCbcs)"
  nameWithType: "StreamingPolicyProperties.withCommonEncryptionCbcs(CommonEncryptionCbcs commonEncryptionCbcs)"
  summary: "Set the common<wbr>Encryption<wbr>Cbcs property: Configuration of Common<wbr>Encryption<wbr>Cbcs."
  parameters:
  - description: "the commonEncryptionCbcs value to set."
    name: "commonEncryptionCbcs"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyProperties withCommonEncryptionCbcs(CommonEncryptionCbcs commonEncryptionCbcs)"
  desc: "Set the commonEncryptionCbcs property: Configuration of CommonEncryptionCbcs."
  returns:
    description: "the StreamingPolicyProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties&text=StreamingPolicyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.withCommonEncryptionCenc(com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.withCommonEncryptionCenc(CommonEncryptionCenc commonEncryptionCenc)"
  name: "withCommonEncryptionCenc(CommonEncryptionCenc commonEncryptionCenc)"
  nameWithType: "StreamingPolicyProperties.withCommonEncryptionCenc(CommonEncryptionCenc commonEncryptionCenc)"
  summary: "Set the common<wbr>Encryption<wbr>Cenc property: Configuration of Common<wbr>Encryption<wbr>Cenc."
  parameters:
  - description: "the commonEncryptionCenc value to set."
    name: "commonEncryptionCenc"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCenc&text=CommonEncryptionCenc\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyProperties withCommonEncryptionCenc(CommonEncryptionCenc commonEncryptionCenc)"
  desc: "Set the commonEncryptionCenc property: Configuration of CommonEncryptionCenc."
  returns:
    description: "the StreamingPolicyProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties&text=StreamingPolicyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.withDefaultContentKeyPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName)"
  name: "withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName)"
  nameWithType: "StreamingPolicyProperties.withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName)"
  summary: "Set the default<wbr>Content<wbr>Key<wbr>Policy<wbr>Name property: Default Content<wbr>Key used by current Streaming Policy."
  parameters:
  - description: "the defaultContentKeyPolicyName value to set."
    name: "defaultContentKeyPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyProperties withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName)"
  desc: "Set the defaultContentKeyPolicyName property: Default ContentKey used by current Streaming Policy."
  returns:
    description: "the StreamingPolicyProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties&text=StreamingPolicyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.withEnvelopeEncryption(com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.withEnvelopeEncryption(EnvelopeEncryption envelopeEncryption)"
  name: "withEnvelopeEncryption(EnvelopeEncryption envelopeEncryption)"
  nameWithType: "StreamingPolicyProperties.withEnvelopeEncryption(EnvelopeEncryption envelopeEncryption)"
  summary: "Set the envelope<wbr>Encryption property: Configuration of Envelope<wbr>Encryption."
  parameters:
  - description: "the envelopeEncryption value to set."
    name: "envelopeEncryption"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption?alt=com.azure.resourcemanager.mediaservices.models.EnvelopeEncryption&text=EnvelopeEncryption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyProperties withEnvelopeEncryption(EnvelopeEncryption envelopeEncryption)"
  desc: "Set the envelopeEncryption property: Configuration of EnvelopeEncryption."
  returns:
    description: "the StreamingPolicyProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties&text=StreamingPolicyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.withNoEncryption(com.azure.resourcemanager.mediaservices.models.NoEncryption)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties.withNoEncryption(NoEncryption noEncryption)"
  name: "withNoEncryption(NoEncryption noEncryption)"
  nameWithType: "StreamingPolicyProperties.withNoEncryption(NoEncryption noEncryption)"
  summary: "Set the no<wbr>Encryption property: Configurations of No<wbr>Encryption."
  parameters:
  - description: "the noEncryption value to set."
    name: "noEncryption"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.NoEncryption?alt=com.azure.resourcemanager.mediaservices.models.NoEncryption&text=NoEncryption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamingPolicyProperties withNoEncryption(NoEncryption noEncryption)"
  desc: "Set the noEncryption property: Configurations of NoEncryption."
  returns:
    description: "the StreamingPolicyProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.StreamingPolicyProperties&text=StreamingPolicyProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Class to specify properties of Streaming Policy."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
