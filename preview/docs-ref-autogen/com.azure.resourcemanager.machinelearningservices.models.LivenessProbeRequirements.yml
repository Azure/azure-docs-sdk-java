### YamlMime:JavaType
uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements"
fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements"
name: "LivenessProbeRequirements"
nameWithType: "LivenessProbeRequirements"
summary: "The liveness probe requirements."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class LivenessProbeRequirements"
constructors:
- uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.LivenessProbeRequirements()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.LivenessProbeRequirements()"
  name: "LivenessProbeRequirements()"
  nameWithType: "LivenessProbeRequirements.LivenessProbeRequirements()"
  syntax: "public LivenessProbeRequirements()"
methods:
- uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.failureThreshold()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.failureThreshold()"
  name: "failureThreshold()"
  nameWithType: "LivenessProbeRequirements.failureThreshold()"
  summary: "Get the failure<wbr>Threshold property: The number of failures to allow before returning an unhealthy status."
  syntax: "public Integer failureThreshold()"
  desc: "Get the failureThreshold property: The number of failures to allow before returning an unhealthy status."
  returns:
    description: "the failureThreshold value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.initialDelaySeconds()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.initialDelaySeconds()"
  name: "initialDelaySeconds()"
  nameWithType: "LivenessProbeRequirements.initialDelaySeconds()"
  summary: "Get the initial<wbr>Delay<wbr>Seconds property: The delay before the first probe in seconds."
  syntax: "public Integer initialDelaySeconds()"
  desc: "Get the initialDelaySeconds property: The delay before the first probe in seconds."
  returns:
    description: "the initialDelaySeconds value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.periodSeconds()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.periodSeconds()"
  name: "periodSeconds()"
  nameWithType: "LivenessProbeRequirements.periodSeconds()"
  summary: "Get the period<wbr>Seconds property: The length of time between probes in seconds."
  syntax: "public Integer periodSeconds()"
  desc: "Get the periodSeconds property: The length of time between probes in seconds."
  returns:
    description: "the periodSeconds value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.successThreshold()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.successThreshold()"
  name: "successThreshold()"
  nameWithType: "LivenessProbeRequirements.successThreshold()"
  summary: "Get the success<wbr>Threshold property: The number of successful probes before returning a healthy status."
  syntax: "public Integer successThreshold()"
  desc: "Get the successThreshold property: The number of successful probes before returning a healthy status."
  returns:
    description: "the successThreshold value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.timeoutSeconds()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.timeoutSeconds()"
  name: "timeoutSeconds()"
  nameWithType: "LivenessProbeRequirements.timeoutSeconds()"
  summary: "Get the timeout<wbr>Seconds property: The probe timeout in seconds."
  syntax: "public Integer timeoutSeconds()"
  desc: "Get the timeoutSeconds property: The probe timeout in seconds."
  returns:
    description: "the timeoutSeconds value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.validate()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.validate()"
  name: "validate()"
  nameWithType: "LivenessProbeRequirements.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.withFailureThreshold(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.withFailureThreshold(Integer failureThreshold)"
  name: "withFailureThreshold(Integer failureThreshold)"
  nameWithType: "LivenessProbeRequirements.withFailureThreshold(Integer failureThreshold)"
  summary: "Set the failure<wbr>Threshold property: The number of failures to allow before returning an unhealthy status."
  parameters:
  - description: "the failureThreshold value to set."
    name: "failureThreshold"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LivenessProbeRequirements withFailureThreshold(Integer failureThreshold)"
  desc: "Set the failureThreshold property: The number of failures to allow before returning an unhealthy status."
  returns:
    description: "the LivenessProbeRequirements object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements?alt=com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements&text=LivenessProbeRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.withInitialDelaySeconds(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.withInitialDelaySeconds(Integer initialDelaySeconds)"
  name: "withInitialDelaySeconds(Integer initialDelaySeconds)"
  nameWithType: "LivenessProbeRequirements.withInitialDelaySeconds(Integer initialDelaySeconds)"
  summary: "Set the initial<wbr>Delay<wbr>Seconds property: The delay before the first probe in seconds."
  parameters:
  - description: "the initialDelaySeconds value to set."
    name: "initialDelaySeconds"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LivenessProbeRequirements withInitialDelaySeconds(Integer initialDelaySeconds)"
  desc: "Set the initialDelaySeconds property: The delay before the first probe in seconds."
  returns:
    description: "the LivenessProbeRequirements object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements?alt=com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements&text=LivenessProbeRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.withPeriodSeconds(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.withPeriodSeconds(Integer periodSeconds)"
  name: "withPeriodSeconds(Integer periodSeconds)"
  nameWithType: "LivenessProbeRequirements.withPeriodSeconds(Integer periodSeconds)"
  summary: "Set the period<wbr>Seconds property: The length of time between probes in seconds."
  parameters:
  - description: "the periodSeconds value to set."
    name: "periodSeconds"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LivenessProbeRequirements withPeriodSeconds(Integer periodSeconds)"
  desc: "Set the periodSeconds property: The length of time between probes in seconds."
  returns:
    description: "the LivenessProbeRequirements object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements?alt=com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements&text=LivenessProbeRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.withSuccessThreshold(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.withSuccessThreshold(Integer successThreshold)"
  name: "withSuccessThreshold(Integer successThreshold)"
  nameWithType: "LivenessProbeRequirements.withSuccessThreshold(Integer successThreshold)"
  summary: "Set the success<wbr>Threshold property: The number of successful probes before returning a healthy status."
  parameters:
  - description: "the successThreshold value to set."
    name: "successThreshold"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LivenessProbeRequirements withSuccessThreshold(Integer successThreshold)"
  desc: "Set the successThreshold property: The number of successful probes before returning a healthy status."
  returns:
    description: "the LivenessProbeRequirements object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements?alt=com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements&text=LivenessProbeRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.withTimeoutSeconds(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements.withTimeoutSeconds(Integer timeoutSeconds)"
  name: "withTimeoutSeconds(Integer timeoutSeconds)"
  nameWithType: "LivenessProbeRequirements.withTimeoutSeconds(Integer timeoutSeconds)"
  summary: "Set the timeout<wbr>Seconds property: The probe timeout in seconds."
  parameters:
  - description: "the timeoutSeconds value to set."
    name: "timeoutSeconds"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LivenessProbeRequirements withTimeoutSeconds(Integer timeoutSeconds)"
  desc: "Set the timeoutSeconds property: The probe timeout in seconds."
  returns:
    description: "the LivenessProbeRequirements object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements?alt=com.azure.resourcemanager.machinelearningservices.models.LivenessProbeRequirements&text=LivenessProbeRequirements\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The liveness probe requirements."
metadata: {}
package: "com.azure.resourcemanager.machinelearningservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-machinelearningservices:1.0.0-beta.1
