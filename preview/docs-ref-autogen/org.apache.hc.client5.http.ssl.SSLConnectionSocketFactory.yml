### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  id: SSLConnectionSocketFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl
  children:
  - org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(javax.net.ssl.SSLContext)
  - org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],javax.net.ssl.HostnameVerifier)
  - org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(javax.net.ssl.SSLContext,javax.net.ssl.HostnameVerifier)
  - org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],javax.net.ssl.HostnameVerifier)
  - org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier)
  - org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.connectSocket(org.apache.hc.core5.util.TimeValue,java.net.Socket,org.apache.hc.core5.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.createSocket(org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.getSocketFactory()
  - org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.getSystemSocketFactory()
  - org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.prepareSocket(javax.net.ssl.SSLSocket)
  - org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.verifySession(java.lang.String,javax.net.ssl.SSLSession)
  langs:
  - java
  name: SSLConnectionSocketFactory
  nameWithType: SSLConnectionSocketFactory
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  type: Class
  package: org.apache.hc.client5.http.ssl
  summary: >-
    Layered socket factory for TLS/SSL connections.


    SSLSocketFactory can be used to validate the identity of the HTTPS server against a list of trusted certificates and to authenticate to the HTTPS server using a private key.
  syntax:
    content: public class SSLConnectionSocketFactory implements LayeredConnectionSocketFactory
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.client5.http.socket.LayeredConnectionSocketFactory
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(javax.net.ssl.SSLContext)
  id: SSLConnectionSocketFactory(javax.net.ssl.SSLContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  langs:
  - java
  name: SSLConnectionSocketFactory(SSLContext sslContext)
  nameWithType: SSLConnectionSocketFactory.SSLConnectionSocketFactory(SSLContext sslContext)
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(SSLContext sslContext)
  overload: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory*
  type: Constructor
  package: org.apache.hc.client5.http.ssl
  syntax:
    content: public SSLConnectionSocketFactory(SSLContext sslContext)
    parameters:
    - id: sslContext
      type: javax.net.ssl.SSLContext
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],javax.net.ssl.HostnameVerifier)
  id: SSLConnectionSocketFactory(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],javax.net.ssl.HostnameVerifier)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  langs:
  - java
  name: SSLConnectionSocketFactory(SSLContext sslContext, String[] supportedProtocols, String[] supportedCipherSuites, HostnameVerifier hostnameVerifier)
  nameWithType: SSLConnectionSocketFactory.SSLConnectionSocketFactory(SSLContext sslContext, String[] supportedProtocols, String[] supportedCipherSuites, HostnameVerifier hostnameVerifier)
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(SSLContext sslContext, String[] supportedProtocols, String[] supportedCipherSuites, HostnameVerifier hostnameVerifier)
  overload: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory*
  type: Constructor
  package: org.apache.hc.client5.http.ssl
  syntax:
    content: public SSLConnectionSocketFactory(SSLContext sslContext, String[] supportedProtocols, String[] supportedCipherSuites, HostnameVerifier hostnameVerifier)
    parameters:
    - id: sslContext
      type: javax.net.ssl.SSLContext
    - id: supportedProtocols
      type: java.lang.String[]
    - id: supportedCipherSuites
      type: java.lang.String[]
    - id: hostnameVerifier
      type: javax.net.ssl.HostnameVerifier
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(javax.net.ssl.SSLContext,javax.net.ssl.HostnameVerifier)
  id: SSLConnectionSocketFactory(javax.net.ssl.SSLContext,javax.net.ssl.HostnameVerifier)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  langs:
  - java
  name: SSLConnectionSocketFactory(SSLContext sslContext, HostnameVerifier hostnameVerifier)
  nameWithType: SSLConnectionSocketFactory.SSLConnectionSocketFactory(SSLContext sslContext, HostnameVerifier hostnameVerifier)
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(SSLContext sslContext, HostnameVerifier hostnameVerifier)
  overload: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory*
  type: Constructor
  package: org.apache.hc.client5.http.ssl
  syntax:
    content: public SSLConnectionSocketFactory(SSLContext sslContext, HostnameVerifier hostnameVerifier)
    parameters:
    - id: sslContext
      type: javax.net.ssl.SSLContext
    - id: hostnameVerifier
      type: javax.net.ssl.HostnameVerifier
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],javax.net.ssl.HostnameVerifier)
  id: SSLConnectionSocketFactory(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],javax.net.ssl.HostnameVerifier)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  langs:
  - java
  name: SSLConnectionSocketFactory(SSLSocketFactory socketFactory, String[] supportedProtocols, String[] supportedCipherSuites, HostnameVerifier hostnameVerifier)
  nameWithType: SSLConnectionSocketFactory.SSLConnectionSocketFactory(SSLSocketFactory socketFactory, String[] supportedProtocols, String[] supportedCipherSuites, HostnameVerifier hostnameVerifier)
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(SSLSocketFactory socketFactory, String[] supportedProtocols, String[] supportedCipherSuites, HostnameVerifier hostnameVerifier)
  overload: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory*
  type: Constructor
  package: org.apache.hc.client5.http.ssl
  syntax:
    content: public SSLConnectionSocketFactory(SSLSocketFactory socketFactory, String[] supportedProtocols, String[] supportedCipherSuites, HostnameVerifier hostnameVerifier)
    parameters:
    - id: socketFactory
      type: javax.net.ssl.SSLSocketFactory
    - id: supportedProtocols
      type: java.lang.String[]
    - id: supportedCipherSuites
      type: java.lang.String[]
    - id: hostnameVerifier
      type: javax.net.ssl.HostnameVerifier
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier)
  id: SSLConnectionSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  langs:
  - java
  name: SSLConnectionSocketFactory(SSLSocketFactory socketFactory, HostnameVerifier hostnameVerifier)
  nameWithType: SSLConnectionSocketFactory.SSLConnectionSocketFactory(SSLSocketFactory socketFactory, HostnameVerifier hostnameVerifier)
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory(SSLSocketFactory socketFactory, HostnameVerifier hostnameVerifier)
  overload: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory*
  type: Constructor
  package: org.apache.hc.client5.http.ssl
  syntax:
    content: public SSLConnectionSocketFactory(SSLSocketFactory socketFactory, HostnameVerifier hostnameVerifier)
    parameters:
    - id: socketFactory
      type: javax.net.ssl.SSLSocketFactory
    - id: hostnameVerifier
      type: javax.net.ssl.HostnameVerifier
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.connectSocket(org.apache.hc.core5.util.TimeValue,java.net.Socket,org.apache.hc.core5.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.hc.core5.http.protocol.HttpContext)
  id: connectSocket(org.apache.hc.core5.util.TimeValue,java.net.Socket,org.apache.hc.core5.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  langs:
  - java
  name: connectSocket(TimeValue connectTimeout, Socket socket, HttpHost host, InetSocketAddress remoteAddress, InetSocketAddress localAddress, HttpContext context)
  nameWithType: SSLConnectionSocketFactory.connectSocket(TimeValue connectTimeout, Socket socket, HttpHost host, InetSocketAddress remoteAddress, InetSocketAddress localAddress, HttpContext context)
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.connectSocket(TimeValue connectTimeout, Socket socket, HttpHost host, InetSocketAddress remoteAddress, InetSocketAddress localAddress, HttpContext context)
  overload: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.connectSocket*
  type: Method
  package: org.apache.hc.client5.http.ssl
  summary: Connects the socket to the target host with the given resolved remote address.
  syntax:
    content: public Socket connectSocket(TimeValue connectTimeout, Socket socket, HttpHost host, InetSocketAddress remoteAddress, InetSocketAddress localAddress, HttpContext context)
    parameters:
    - id: connectTimeout
      type: org.apache.hc.core5.util.TimeValue
    - id: socket
      type: java.net.Socket
    - id: host
      type: org.apache.hc.core5.http.HttpHost
    - id: remoteAddress
      type: java.net.InetSocketAddress
    - id: localAddress
      type: java.net.InetSocketAddress
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: java.net.Socket
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.hc.core5.http.protocol.HttpContext)
  id: createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  langs:
  - java
  name: createLayeredSocket(Socket socket, String target, int port, HttpContext context)
  nameWithType: SSLConnectionSocketFactory.createLayeredSocket(Socket socket, String target, int port, HttpContext context)
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.createLayeredSocket(Socket socket, String target, int port, HttpContext context)
  overload: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.createLayeredSocket*
  type: Method
  package: org.apache.hc.client5.http.ssl
  summary: Returns a socket connected to the given host that is layered over an existing socket. Used primarily for creating secure sockets through proxies.
  syntax:
    content: public Socket createLayeredSocket(Socket socket, String target, int port, HttpContext context)
    parameters:
    - id: socket
      type: java.net.Socket
    - id: target
      type: java.lang.String
    - id: port
      type: int
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: java.net.Socket
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.createSocket(org.apache.hc.core5.http.protocol.HttpContext)
  id: createSocket(org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  langs:
  - java
  name: createSocket(HttpContext context)
  nameWithType: SSLConnectionSocketFactory.createSocket(HttpContext context)
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.createSocket(HttpContext context)
  overload: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.createSocket*
  type: Method
  package: org.apache.hc.client5.http.ssl
  summary: >-
    Creates new, unconnected socket. The socket should subsequently be passed to <xref uid="#connectSocket(TimeValue, Socket, HttpHost, InetSocketAddress, InetSocketAddress,
        HttpContext)" data-throw-if-not-resolved="false">connectSocket</xref> method.
  syntax:
    content: public Socket createSocket(HttpContext context)
    parameters:
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    return:
      type: java.net.Socket
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.getSocketFactory()
  id: getSocketFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  langs:
  - java
  name: getSocketFactory()
  nameWithType: SSLConnectionSocketFactory.getSocketFactory()
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.getSocketFactory()
  overload: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.getSocketFactory*
  type: Method
  package: org.apache.hc.client5.http.ssl
  summary: Obtains default SSL socket factory with an SSL context based on the standard JSSE trust material (`cacerts` file in the security properties directory). System properties are not taken into consideration.
  syntax:
    content: public static SSLConnectionSocketFactory getSocketFactory()
    return:
      type: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
      description: default SSL socket factory
  exceptions:
  - type: org.apache.hc.core5.ssl.SSLInitializationException
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.getSystemSocketFactory()
  id: getSystemSocketFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  langs:
  - java
  name: getSystemSocketFactory()
  nameWithType: SSLConnectionSocketFactory.getSystemSocketFactory()
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.getSystemSocketFactory()
  overload: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.getSystemSocketFactory*
  type: Method
  package: org.apache.hc.client5.http.ssl
  summary: >-
    Obtains default SSL socket factory with an SSL context based on system properties as described in [ Java� Secure Socket Extension (JSSE) Reference Guide][Java_ Secure Socket Extension _JSSE_ Reference Guide].



    [Java_ Secure Socket Extension _JSSE_ Reference Guide]: http://docs.oracle.com/javase/6/docs/technotes/guides/security/jsse/JSSERefGuide.html
  syntax:
    content: public static SSLConnectionSocketFactory getSystemSocketFactory()
    return:
      type: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
      description: default system SSL socket factory
  exceptions:
  - type: org.apache.hc.core5.ssl.SSLInitializationException
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.prepareSocket(javax.net.ssl.SSLSocket)
  id: prepareSocket(javax.net.ssl.SSLSocket)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  langs:
  - java
  name: prepareSocket(SSLSocket socket)
  nameWithType: SSLConnectionSocketFactory.prepareSocket(SSLSocket socket)
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.prepareSocket(SSLSocket socket)
  overload: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.prepareSocket*
  type: Method
  package: org.apache.hc.client5.http.ssl
  summary: Performs any custom initialization for a newly created SSLSocket (before the SSL handshake happens). The default implementation is a no-op, but could be overridden to, e.g., call <xref uid="javax.net.ssl.SSLSocket.setEnabledCipherSuites*" data-throw-if-not-resolved="false">javax.net.ssl.SSLSocket#setEnabledCipherSuites(String[])</xref>.
  syntax:
    content: protected void prepareSocket(SSLSocket socket)
    parameters:
    - id: socket
      type: javax.net.ssl.SSLSocket
  exceptions:
  - type: java.io.IOException
    description: may be thrown if overridden
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.verifySession(java.lang.String,javax.net.ssl.SSLSession)
  id: verifySession(java.lang.String,javax.net.ssl.SSLSession)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory
  langs:
  - java
  name: verifySession(String hostname, SSLSession sslSession)
  nameWithType: SSLConnectionSocketFactory.verifySession(String hostname, SSLSession sslSession)
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.verifySession(String hostname, SSLSession sslSession)
  overload: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.verifySession*
  type: Method
  package: org.apache.hc.client5.http.ssl
  syntax:
    content: protected void verifySession(String hostname, SSLSession sslSession)
    parameters:
    - id: hostname
      type: java.lang.String
    - id: sslSession
      type: javax.net.ssl.SSLSession
  exceptions:
  - type: javax.net.ssl.SSLException
references:
- uid: javax.net.ssl.SSLContext
  spec.java:
  - uid: javax.net.ssl.SSLContext
    name: SSLContext
    fullName: javax.net.ssl.SSLContext
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory*
  name: SSLConnectionSocketFactory
  nameWithType: SSLConnectionSocketFactory.SSLConnectionSocketFactory
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.SSLConnectionSocketFactory
  package: org.apache.hc.client5.http.ssl
- uid: javax.net.ssl.HostnameVerifier
  spec.java:
  - uid: javax.net.ssl.HostnameVerifier
    name: HostnameVerifier
    fullName: javax.net.ssl.HostnameVerifier
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: javax.net.ssl.SSLSocketFactory
  spec.java:
  - uid: javax.net.ssl.SSLSocketFactory
    name: SSLSocketFactory
    fullName: javax.net.ssl.SSLSocketFactory
- uid: org.apache.hc.core5.ssl.SSLInitializationException
  name: SSLInitializationException
  nameWithType: SSLInitializationException
  fullName: org.apache.hc.core5.ssl.SSLInitializationException
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.getSocketFactory*
  name: getSocketFactory
  nameWithType: SSLConnectionSocketFactory.getSocketFactory
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.getSocketFactory
  package: org.apache.hc.client5.http.ssl
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.getSystemSocketFactory*
  name: getSystemSocketFactory
  nameWithType: SSLConnectionSocketFactory.getSystemSocketFactory
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.getSystemSocketFactory
  package: org.apache.hc.client5.http.ssl
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: javax.net.ssl.SSLSocket
  spec.java:
  - uid: javax.net.ssl.SSLSocket
    name: SSLSocket
    fullName: javax.net.ssl.SSLSocket
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.prepareSocket*
  name: prepareSocket
  nameWithType: SSLConnectionSocketFactory.prepareSocket
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.prepareSocket
  package: org.apache.hc.client5.http.ssl
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: java.net.Socket
  spec.java:
  - uid: java.net.Socket
    name: Socket
    fullName: java.net.Socket
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.createSocket*
  name: createSocket
  nameWithType: SSLConnectionSocketFactory.createSocket
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.createSocket
  package: org.apache.hc.client5.http.ssl
- uid: org.apache.hc.core5.util.TimeValue
  name: TimeValue
  nameWithType: TimeValue
  fullName: org.apache.hc.core5.util.TimeValue
- uid: org.apache.hc.core5.http.HttpHost
  name: HttpHost
  nameWithType: HttpHost
  fullName: org.apache.hc.core5.http.HttpHost
- uid: java.net.InetSocketAddress
  spec.java:
  - uid: java.net.InetSocketAddress
    name: InetSocketAddress
    fullName: java.net.InetSocketAddress
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.connectSocket*
  name: connectSocket
  nameWithType: SSLConnectionSocketFactory.connectSocket
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.connectSocket
  package: org.apache.hc.client5.http.ssl
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.createLayeredSocket*
  name: createLayeredSocket
  nameWithType: SSLConnectionSocketFactory.createLayeredSocket
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.createLayeredSocket
  package: org.apache.hc.client5.http.ssl
- uid: javax.net.ssl.SSLException
  spec.java:
  - uid: javax.net.ssl.SSLException
    name: SSLException
    fullName: javax.net.ssl.SSLException
- uid: javax.net.ssl.SSLSession
  spec.java:
  - uid: javax.net.ssl.SSLSession
    name: SSLSession
    fullName: javax.net.ssl.SSLSession
- uid: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.verifySession*
  name: verifySession
  nameWithType: SSLConnectionSocketFactory.verifySession
  fullName: org.apache.hc.client5.http.ssl.SSLConnectionSocketFactory.verifySession
  package: org.apache.hc.client5.http.ssl
- uid: org.apache.hc.client5.http.socket.LayeredConnectionSocketFactory
  name: LayeredConnectionSocketFactory
  nameWithType: LayeredConnectionSocketFactory
  fullName: org.apache.hc.client5.http.socket.LayeredConnectionSocketFactory
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
