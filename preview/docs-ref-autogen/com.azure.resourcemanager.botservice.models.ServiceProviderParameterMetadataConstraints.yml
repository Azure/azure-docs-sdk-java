### YamlMime:JavaType
uid: "com.azure.resourcemanager.botservice.models.ServiceProviderParameterMetadataConstraints"
fullName: "com.azure.resourcemanager.botservice.models.ServiceProviderParameterMetadataConstraints"
name: "ServiceProviderParameterMetadataConstraints"
nameWithType: "ServiceProviderParameterMetadataConstraints"
summary: "the constraints of the bot meta data."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServiceProviderParameterMetadataConstraints"
constructors:
- uid: "com.azure.resourcemanager.botservice.models.ServiceProviderParameterMetadataConstraints.ServiceProviderParameterMetadataConstraints()"
  fullName: "com.azure.resourcemanager.botservice.models.ServiceProviderParameterMetadataConstraints.ServiceProviderParameterMetadataConstraints()"
  name: "ServiceProviderParameterMetadataConstraints()"
  nameWithType: "ServiceProviderParameterMetadataConstraints.ServiceProviderParameterMetadataConstraints()"
  syntax: "public ServiceProviderParameterMetadataConstraints()"
methods:
- uid: "com.azure.resourcemanager.botservice.models.ServiceProviderParameterMetadataConstraints.required()"
  fullName: "com.azure.resourcemanager.botservice.models.ServiceProviderParameterMetadataConstraints.required()"
  name: "required()"
  nameWithType: "ServiceProviderParameterMetadataConstraints.required()"
  summary: "Get the required property: Whether required the constraints of the bot meta data."
  syntax: "public Boolean required()"
  desc: "Get the required property: Whether required the constraints of the bot meta data."
  returns:
    description: "the required value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.botservice.models.ServiceProviderParameterMetadataConstraints.validate()"
  fullName: "com.azure.resourcemanager.botservice.models.ServiceProviderParameterMetadataConstraints.validate()"
  name: "validate()"
  nameWithType: "ServiceProviderParameterMetadataConstraints.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.botservice.models.ServiceProviderParameterMetadataConstraints.withRequired(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.botservice.models.ServiceProviderParameterMetadataConstraints.withRequired(Boolean required)"
  name: "withRequired(Boolean required)"
  nameWithType: "ServiceProviderParameterMetadataConstraints.withRequired(Boolean required)"
  summary: "Set the required property: Whether required the constraints of the bot meta data."
  parameters:
  - description: "the required value to set."
    name: "required"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceProviderParameterMetadataConstraints withRequired(Boolean required)"
  desc: "Set the required property: Whether required the constraints of the bot meta data."
  returns:
    description: "the ServiceProviderParameterMetadataConstraints object itself."
    type: "<xref href=\"com.azure.resourcemanager.botservice.models.ServiceProviderParameterMetadataConstraints?alt=com.azure.resourcemanager.botservice.models.ServiceProviderParameterMetadataConstraints&text=ServiceProviderParameterMetadataConstraints\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "the constraints of the bot meta data."
metadata: {}
package: "com.azure.resourcemanager.botservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-botservice:1.0.0-beta.5
