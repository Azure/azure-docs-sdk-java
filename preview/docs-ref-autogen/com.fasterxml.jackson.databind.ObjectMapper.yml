### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.ObjectMapper"
fullName: "com.fasterxml.jackson.databind.ObjectMapper"
name: "ObjectMapper"
nameWithType: "ObjectMapper"
summary: "ObjectMapper provides functionality for reading and writing JSON, either to and from basic POJOs (Plain Old Java Objects), or to and from a general-purpose JSON Tree Model (<xref uid=\"com.fasterxml.jackson.databind.JsonNode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonNode\"></xref>), as well as related functionality for performing conversions. It is also highly customizable to work both with different styles of JSON content, and to support more advanced Object concepts such as polymorphism and Object identity. `ObjectMapper` also acts as a factory for more advanced <xref uid=\"com.fasterxml.jackson.databind.ObjectReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectReader\"></xref> and <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref> classes. Mapper (and <xref uid=\"com.fasterxml.jackson.databind.ObjectReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectReader\"></xref>s, <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>s it constructs) will use instances of <xref uid=\"com.fasterxml.jackson.core.JsonParser\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParser\"></xref> and <xref uid=\"com.fasterxml.jackson.core.JsonGenerator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonGenerator\"></xref> for implementing actual reading/writing of JSON. Note that although most read and write methods are exposed through this class, some of the functionality is only exposed via <xref uid=\"com.fasterxml.jackson.databind.ObjectReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectReader\"></xref> and <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>: specifically, reading/writing of longer sequences of values is only available through <xref uid=\"com.fasterxml.jackson.databind.ObjectReader.&lt;T&gt;readValues(java.io.InputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectReader#readValues(InputStream)\"></xref> and <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.OutputStream)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter#writeValues(OutputStream)\"></xref>.\n\nSimplest usage is of form:\n\n```java\nfinal ObjectMapper mapper = new ObjectMapper(); // can use static singleton, inject: just make sure to reuse!\n  MyValue value = new MyValue();\n  // ... and configure\n  File newState = new File(\"my-stuff.json\");\n  mapper.writeValue(newState, value); // writes JSON serialization of MyValue instance\n  // or, read\n  MyValue older = mapper.readValue(new File(\"my-older-stuff.json\"), MyValue.class);\n\n  // Or if you prefer JSON Tree representation:\n  JsonNode root = mapper.readTree(newState);\n  // and find values by, for example, using a  expression:\n  int age = root.at(\"/personal/age\").getValueAsInt();\n```\n\nThe main conversion API is defined in <xref uid=\"com.fasterxml.jackson.core.ObjectCodec\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectCodec\"></xref>, so that implementation details of this class need not be exposed to streaming parser and generator classes. Usage via <xref uid=\"com.fasterxml.jackson.core.ObjectCodec\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectCodec\"></xref> is, however, usually only for cases where dependency to <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref> is either not possible (from Streaming API), or undesireable (when only relying on Streaming API).\n\nMapper instances are fully thread-safe provided that ALL configuration of the instance occurs before ANY read or write calls. If configuration of a mapper instance is modified after first usage, changes may or may not take effect, and configuration calls themselves may fail. If you need to use different configuration, you have two main possibilities:\n\n *  Construct and use <xref uid=\"com.fasterxml.jackson.databind.ObjectReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectReader\"></xref> for reading, <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref> for writing. Both types are fully immutable and you can freely create new instances with different configuration using either factory methods of <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref>, or readers/writers themselves. Construction of new <xref uid=\"com.fasterxml.jackson.databind.ObjectReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectReader\"></xref>s and <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>s is a very light-weight operation so it is usually appropriate to create these on per-call basis, as needed, for configuring things like optional indentation of JSON.\n *  If the specific kind of configurability is not available via <xref uid=\"com.fasterxml.jackson.databind.ObjectReader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectReader\"></xref> and <xref uid=\"com.fasterxml.jackson.databind.ObjectWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectWriter\"></xref>, you may need to use multiple <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref> instead (for example: you cannot change mix-in annotations on-the-fly; or, set of custom (de)serializers). To help with this usage, you may want to use method <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper.copy()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#copy()\"></xref> which creates a clone of the mapper with specific configuration, and allows configuration of the copied instance before it gets used. Note that <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper.copy*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#copy\"></xref> operation is as expensive as constructing a new <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref> instance: if possible, you should still pool and reuse mappers if you intend to use them for multiple operations.\n\nNote on caching: root-level deserializers are always cached, and accessed using full (generics-aware) type information. This is different from caching of referenced types, which is more limited and is done only for a subset of all deserializer types. The main reason for difference is that at root-level there is no incoming reference (and hence no referencing property, no referral information or annotations to produce differing deserializers), and that the performance impact greatest at root level (since it'll essentially cache the full graph of deserializers involved).\n\nNotes on security: use \"default typing\" feature (see <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper.enableDefaultTyping()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#enableDefaultTyping()\"></xref>) is a potential security risk, if used with untrusted content (content generated by untrusted external parties). If so, you may want to construct a custom <xref uid=\"com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeResolverBuilder\"></xref> implementation to limit possible types to instantiate, (using <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper.setDefaultTyping*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setDefaultTyping\"></xref>)."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.core.TreeCodec\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.core.ObjectCodec\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.core.ObjectCodec.<T>readTree(com.fasterxml.jackson.core.JsonParser)"
- "com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)"
- "com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.core.ObjectCodec.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)"
- "com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)"
- "com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.core.ObjectCodec.<T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)"
- "com.fasterxml.jackson.core.ObjectCodec.<T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class<T>)"
- "com.fasterxml.jackson.core.ObjectCodec.createArrayNode()"
- "com.fasterxml.jackson.core.ObjectCodec.createObjectNode()"
- "com.fasterxml.jackson.core.ObjectCodec.getFactory()"
- "com.fasterxml.jackson.core.ObjectCodec.getJsonFactory()"
- "com.fasterxml.jackson.core.ObjectCodec.treeAsTokens(com.fasterxml.jackson.core.TreeNode)"
- "com.fasterxml.jackson.core.ObjectCodec.version()"
- "com.fasterxml.jackson.core.ObjectCodec.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)"
- "com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)"
- "com.fasterxml.jackson.core.TreeCodec.missingNode()"
- "com.fasterxml.jackson.core.TreeCodec.nullNode()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ObjectMapper extends ObjectCodec implements Versioned, Serializable"
constructors:
- "com.fasterxml.jackson.databind.ObjectMapper.ObjectMapper()"
- "com.fasterxml.jackson.databind.ObjectMapper.ObjectMapper(com.fasterxml.jackson.core.JsonFactory)"
- "com.fasterxml.jackson.databind.ObjectMapper.ObjectMapper(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)"
- "com.fasterxml.jackson.databind.ObjectMapper.ObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)"
fields:
- "com.fasterxml.jackson.databind.ObjectMapper.DEFAULT_ANNOTATION_INTROSPECTOR"
- "com.fasterxml.jackson.databind.ObjectMapper.DEFAULT_BASE"
- "com.fasterxml.jackson.databind.ObjectMapper._configOverrides"
- "com.fasterxml.jackson.databind.ObjectMapper._deserializationConfig"
- "com.fasterxml.jackson.databind.ObjectMapper._deserializationContext"
- "com.fasterxml.jackson.databind.ObjectMapper._injectableValues"
- "com.fasterxml.jackson.databind.ObjectMapper._jsonFactory"
- "com.fasterxml.jackson.databind.ObjectMapper._mixIns"
- "com.fasterxml.jackson.databind.ObjectMapper._registeredModuleTypes"
- "com.fasterxml.jackson.databind.ObjectMapper._rootDeserializers"
- "com.fasterxml.jackson.databind.ObjectMapper._serializationConfig"
- "com.fasterxml.jackson.databind.ObjectMapper._serializerFactory"
- "com.fasterxml.jackson.databind.ObjectMapper._serializerProvider"
- "com.fasterxml.jackson.databind.ObjectMapper._subtypeResolver"
- "com.fasterxml.jackson.databind.ObjectMapper._typeFactory"
methods:
- "com.fasterxml.jackson.databind.ObjectMapper.<T>convertValue(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>convertValue(java.lang.Object,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>convertValue(java.lang.Object,java.lang.Class<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readTree(com.fasterxml.jackson.core.JsonParser)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(byte[],com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(byte[],com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(byte[],int,int,com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(byte[],int,int,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(byte[],int,int,java.lang.Class<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(byte[],java.lang.Class<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.io.DataInput,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.io.DataInput,java.lang.Class<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.io.File,com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.io.File,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.io.File,java.lang.Class<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.io.InputStream,com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.io.InputStream,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.io.InputStream,java.lang.Class<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.io.Reader,com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.io.Reader,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.io.Reader,java.lang.Class<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.lang.String,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.lang.String,java.lang.Class<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.net.URL,com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.net.URL,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValue(java.net.URL,java.lang.Class<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class<T>)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>updateValue(T,java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper.<T>valueToTree(java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper._assertNotNull(java.lang.String,java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper._checkInvalidCopy(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper._constructDefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)"
- "com.fasterxml.jackson.databind.ObjectMapper._convert(java.lang.Object,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper._findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper._initForReading(com.fasterxml.jackson.core.JsonParser)"
- "com.fasterxml.jackson.databind.ObjectMapper._initForReading(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper._newReader(com.fasterxml.jackson.databind.DeserializationConfig)"
- "com.fasterxml.jackson.databind.ObjectMapper._newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)"
- "com.fasterxml.jackson.databind.ObjectMapper._newWriter(com.fasterxml.jackson.databind.SerializationConfig)"
- "com.fasterxml.jackson.databind.ObjectMapper._newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.databind.ObjectMapper._newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)"
- "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper._readTreeAndClose(com.fasterxml.jackson.core.JsonParser)"
- "com.fasterxml.jackson.databind.ObjectMapper._readValue(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper._serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)"
- "com.fasterxml.jackson.databind.ObjectMapper._unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)"
- "com.fasterxml.jackson.databind.ObjectMapper._verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper._verifySchemaType(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)"
- "com.fasterxml.jackson.databind.ObjectMapper.acceptJsonFormatVisitor(java.lang.Class<?>,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)"
- "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)"
- "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping)"
- "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo.As)"
- "com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTypingAsProperty(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,java.lang.String)"
- "com.fasterxml.jackson.databind.ObjectMapper.addHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)"
- "com.fasterxml.jackson.databind.ObjectMapper.addMixIn(java.lang.Class<?>,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.addMixInAnnotations(java.lang.Class<?>,java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.canDeserialize(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.canDeserialize(com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>)"
- "com.fasterxml.jackson.databind.ObjectMapper.canSerialize(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.canSerialize(java.lang.Class<?>,java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>)"
- "com.fasterxml.jackson.databind.ObjectMapper.clearProblemHandlers()"
- "com.fasterxml.jackson.databind.ObjectMapper.configOverride(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.configure(com.fasterxml.jackson.core.JsonGenerator.Feature,boolean)"
- "com.fasterxml.jackson.databind.ObjectMapper.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)"
- "com.fasterxml.jackson.databind.ObjectMapper.configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)"
- "com.fasterxml.jackson.databind.ObjectMapper.configure(com.fasterxml.jackson.databind.MapperFeature,boolean)"
- "com.fasterxml.jackson.databind.ObjectMapper.configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)"
- "com.fasterxml.jackson.databind.ObjectMapper.constructType(java.lang.reflect.Type)"
- "com.fasterxml.jackson.databind.ObjectMapper.copy()"
- "com.fasterxml.jackson.databind.ObjectMapper.createArrayNode()"
- "com.fasterxml.jackson.databind.ObjectMapper.createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig)"
- "com.fasterxml.jackson.databind.ObjectMapper.createGenerator(java.io.DataOutput)"
- "com.fasterxml.jackson.databind.ObjectMapper.createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.databind.ObjectMapper.createGenerator(java.io.OutputStream)"
- "com.fasterxml.jackson.databind.ObjectMapper.createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.databind.ObjectMapper.createGenerator(java.io.Writer)"
- "com.fasterxml.jackson.databind.ObjectMapper.createNonBlockingByteArrayParser()"
- "com.fasterxml.jackson.databind.ObjectMapper.createObjectNode()"
- "com.fasterxml.jackson.databind.ObjectMapper.createParser(byte[])"
- "com.fasterxml.jackson.databind.ObjectMapper.createParser(byte[],int,int)"
- "com.fasterxml.jackson.databind.ObjectMapper.createParser(char[])"
- "com.fasterxml.jackson.databind.ObjectMapper.createParser(char[],int,int)"
- "com.fasterxml.jackson.databind.ObjectMapper.createParser(java.io.DataInput)"
- "com.fasterxml.jackson.databind.ObjectMapper.createParser(java.io.File)"
- "com.fasterxml.jackson.databind.ObjectMapper.createParser(java.io.InputStream)"
- "com.fasterxml.jackson.databind.ObjectMapper.createParser(java.io.Reader)"
- "com.fasterxml.jackson.databind.ObjectMapper.createParser(java.lang.String)"
- "com.fasterxml.jackson.databind.ObjectMapper.createParser(java.net.URL)"
- "com.fasterxml.jackson.databind.ObjectMapper.deactivateDefaultTyping()"
- "com.fasterxml.jackson.databind.ObjectMapper.defaultClassIntrospector()"
- "com.fasterxml.jackson.databind.ObjectMapper.disable(com.fasterxml.jackson.core.JsonGenerator.Feature...)"
- "com.fasterxml.jackson.databind.ObjectMapper.disable(com.fasterxml.jackson.core.JsonParser.Feature...)"
- "com.fasterxml.jackson.databind.ObjectMapper.disable(com.fasterxml.jackson.databind.DeserializationFeature)"
- "com.fasterxml.jackson.databind.ObjectMapper.disable(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature...)"
- "com.fasterxml.jackson.databind.ObjectMapper.disable(com.fasterxml.jackson.databind.MapperFeature...)"
- "com.fasterxml.jackson.databind.ObjectMapper.disable(com.fasterxml.jackson.databind.SerializationFeature)"
- "com.fasterxml.jackson.databind.ObjectMapper.disable(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature...)"
- "com.fasterxml.jackson.databind.ObjectMapper.disableDefaultTyping()"
- "com.fasterxml.jackson.databind.ObjectMapper.enable(com.fasterxml.jackson.core.JsonGenerator.Feature...)"
- "com.fasterxml.jackson.databind.ObjectMapper.enable(com.fasterxml.jackson.core.JsonParser.Feature...)"
- "com.fasterxml.jackson.databind.ObjectMapper.enable(com.fasterxml.jackson.databind.DeserializationFeature)"
- "com.fasterxml.jackson.databind.ObjectMapper.enable(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature...)"
- "com.fasterxml.jackson.databind.ObjectMapper.enable(com.fasterxml.jackson.databind.MapperFeature...)"
- "com.fasterxml.jackson.databind.ObjectMapper.enable(com.fasterxml.jackson.databind.SerializationFeature)"
- "com.fasterxml.jackson.databind.ObjectMapper.enable(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature...)"
- "com.fasterxml.jackson.databind.ObjectMapper.enableDefaultTyping()"
- "com.fasterxml.jackson.databind.ObjectMapper.enableDefaultTyping(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping)"
- "com.fasterxml.jackson.databind.ObjectMapper.enableDefaultTyping(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo.As)"
- "com.fasterxml.jackson.databind.ObjectMapper.enableDefaultTypingAsProperty(com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping,java.lang.String)"
- "com.fasterxml.jackson.databind.ObjectMapper.findAndRegisterModules()"
- "com.fasterxml.jackson.databind.ObjectMapper.findMixInClassFor(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.findModules()"
- "com.fasterxml.jackson.databind.ObjectMapper.findModules(java.lang.ClassLoader)"
- "com.fasterxml.jackson.databind.ObjectMapper.generateJsonSchema(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.getDateFormat()"
- "com.fasterxml.jackson.databind.ObjectMapper.getDeserializationConfig()"
- "com.fasterxml.jackson.databind.ObjectMapper.getDeserializationContext()"
- "com.fasterxml.jackson.databind.ObjectMapper.getFactory()"
- "com.fasterxml.jackson.databind.ObjectMapper.getInjectableValues()"
- "com.fasterxml.jackson.databind.ObjectMapper.getJsonFactory()"
- "com.fasterxml.jackson.databind.ObjectMapper.getNodeFactory()"
- "com.fasterxml.jackson.databind.ObjectMapper.getPolymorphicTypeValidator()"
- "com.fasterxml.jackson.databind.ObjectMapper.getPropertyNamingStrategy()"
- "com.fasterxml.jackson.databind.ObjectMapper.getRegisteredModuleIds()"
- "com.fasterxml.jackson.databind.ObjectMapper.getSerializationConfig()"
- "com.fasterxml.jackson.databind.ObjectMapper.getSerializerFactory()"
- "com.fasterxml.jackson.databind.ObjectMapper.getSerializerProvider()"
- "com.fasterxml.jackson.databind.ObjectMapper.getSerializerProviderInstance()"
- "com.fasterxml.jackson.databind.ObjectMapper.getSubtypeResolver()"
- "com.fasterxml.jackson.databind.ObjectMapper.getTypeFactory()"
- "com.fasterxml.jackson.databind.ObjectMapper.getVisibilityChecker()"
- "com.fasterxml.jackson.databind.ObjectMapper.isEnabled(com.fasterxml.jackson.core.JsonFactory.Feature)"
- "com.fasterxml.jackson.databind.ObjectMapper.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)"
- "com.fasterxml.jackson.databind.ObjectMapper.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.databind.ObjectMapper.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)"
- "com.fasterxml.jackson.databind.ObjectMapper.isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)"
- "com.fasterxml.jackson.databind.ObjectMapper.isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)"
- "com.fasterxml.jackson.databind.ObjectMapper.isEnabled(com.fasterxml.jackson.databind.MapperFeature)"
- "com.fasterxml.jackson.databind.ObjectMapper.isEnabled(com.fasterxml.jackson.databind.SerializationFeature)"
- "com.fasterxml.jackson.databind.ObjectMapper.missingNode()"
- "com.fasterxml.jackson.databind.ObjectMapper.mixInCount()"
- "com.fasterxml.jackson.databind.ObjectMapper.nullNode()"
- "com.fasterxml.jackson.databind.ObjectMapper.readTree(byte[])"
- "com.fasterxml.jackson.databind.ObjectMapper.readTree(byte[],int,int)"
- "com.fasterxml.jackson.databind.ObjectMapper.readTree(java.io.File)"
- "com.fasterxml.jackson.databind.ObjectMapper.readTree(java.io.InputStream)"
- "com.fasterxml.jackson.databind.ObjectMapper.readTree(java.io.Reader)"
- "com.fasterxml.jackson.databind.ObjectMapper.readTree(java.lang.String)"
- "com.fasterxml.jackson.databind.ObjectMapper.readTree(java.net.URL)"
- "com.fasterxml.jackson.databind.ObjectMapper.reader()"
- "com.fasterxml.jackson.databind.ObjectMapper.reader(com.fasterxml.jackson.core.Base64Variant)"
- "com.fasterxml.jackson.databind.ObjectMapper.reader(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.databind.ObjectMapper.reader(com.fasterxml.jackson.core.type.TypeReference<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.reader(com.fasterxml.jackson.databind.DeserializationFeature)"
- "com.fasterxml.jackson.databind.ObjectMapper.reader(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature...)"
- "com.fasterxml.jackson.databind.ObjectMapper.reader(com.fasterxml.jackson.databind.InjectableValues)"
- "com.fasterxml.jackson.databind.ObjectMapper.reader(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.reader(com.fasterxml.jackson.databind.cfg.ContextAttributes)"
- "com.fasterxml.jackson.databind.ObjectMapper.reader(com.fasterxml.jackson.databind.node.JsonNodeFactory)"
- "com.fasterxml.jackson.databind.ObjectMapper.reader(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.readerFor(com.fasterxml.jackson.core.type.TypeReference<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.readerFor(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.readerFor(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.readerForArrayOf(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.readerForListOf(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.readerForMapOf(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.readerForUpdating(java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper.readerWithView(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.registerModule(com.fasterxml.jackson.databind.Module)"
- "com.fasterxml.jackson.databind.ObjectMapper.registerModules(com.fasterxml.jackson.databind.Module...)"
- "com.fasterxml.jackson.databind.ObjectMapper.registerModules(java.lang.Iterable<? extends com.fasterxml.jackson.databind.Module>)"
- "com.fasterxml.jackson.databind.ObjectMapper.registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)"
- "com.fasterxml.jackson.databind.ObjectMapper.registerSubtypes(java.lang.Class<?>...)"
- "com.fasterxml.jackson.databind.ObjectMapper.registerSubtypes(java.util.Collection<java.lang.Class<?>>)"
- "com.fasterxml.jackson.databind.ObjectMapper.setAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)"
- "com.fasterxml.jackson.databind.ObjectMapper.setAnnotationIntrospectors(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector)"
- "com.fasterxml.jackson.databind.ObjectMapper.setBase64Variant(com.fasterxml.jackson.core.Base64Variant)"
- "com.fasterxml.jackson.databind.ObjectMapper.setConfig(com.fasterxml.jackson.databind.DeserializationConfig)"
- "com.fasterxml.jackson.databind.ObjectMapper.setConfig(com.fasterxml.jackson.databind.SerializationConfig)"
- "com.fasterxml.jackson.databind.ObjectMapper.setDateFormat(java.text.DateFormat)"
- "com.fasterxml.jackson.databind.ObjectMapper.setDefaultLeniency(java.lang.Boolean)"
- "com.fasterxml.jackson.databind.ObjectMapper.setDefaultMergeable(java.lang.Boolean)"
- "com.fasterxml.jackson.databind.ObjectMapper.setDefaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)"
- "com.fasterxml.jackson.databind.ObjectMapper.setDefaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include)"
- "com.fasterxml.jackson.databind.ObjectMapper.setDefaultPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude.Value)"
- "com.fasterxml.jackson.databind.ObjectMapper.setDefaultSetterInfo(com.fasterxml.jackson.annotation.JsonSetter.Value)"
- "com.fasterxml.jackson.databind.ObjectMapper.setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.setDefaultVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect.Value)"
- "com.fasterxml.jackson.databind.ObjectMapper.setFilterProvider(com.fasterxml.jackson.databind.ser.FilterProvider)"
- "com.fasterxml.jackson.databind.ObjectMapper.setFilters(com.fasterxml.jackson.databind.ser.FilterProvider)"
- "com.fasterxml.jackson.databind.ObjectMapper.setHandlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator)"
- "com.fasterxml.jackson.databind.ObjectMapper.setInjectableValues(com.fasterxml.jackson.databind.InjectableValues)"
- "com.fasterxml.jackson.databind.ObjectMapper.setLocale(java.util.Locale)"
- "com.fasterxml.jackson.databind.ObjectMapper.setMixInAnnotations(java.util.Map<java.lang.Class<?>,java.lang.Class<?>>)"
- "com.fasterxml.jackson.databind.ObjectMapper.setMixInResolver(com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver)"
- "com.fasterxml.jackson.databind.ObjectMapper.setMixIns(java.util.Map<java.lang.Class<?>,java.lang.Class<?>>)"
- "com.fasterxml.jackson.databind.ObjectMapper.setNodeFactory(com.fasterxml.jackson.databind.node.JsonNodeFactory)"
- "com.fasterxml.jackson.databind.ObjectMapper.setPolymorphicTypeValidator(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)"
- "com.fasterxml.jackson.databind.ObjectMapper.setPropertyInclusion(com.fasterxml.jackson.annotation.JsonInclude.Value)"
- "com.fasterxml.jackson.databind.ObjectMapper.setPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy)"
- "com.fasterxml.jackson.databind.ObjectMapper.setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include)"
- "com.fasterxml.jackson.databind.ObjectMapper.setSerializerFactory(com.fasterxml.jackson.databind.ser.SerializerFactory)"
- "com.fasterxml.jackson.databind.ObjectMapper.setSerializerProvider(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider)"
- "com.fasterxml.jackson.databind.ObjectMapper.setSubtypeResolver(com.fasterxml.jackson.databind.jsontype.SubtypeResolver)"
- "com.fasterxml.jackson.databind.ObjectMapper.setTimeZone(java.util.TimeZone)"
- "com.fasterxml.jackson.databind.ObjectMapper.setTypeFactory(com.fasterxml.jackson.databind.type.TypeFactory)"
- "com.fasterxml.jackson.databind.ObjectMapper.setVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility)"
- "com.fasterxml.jackson.databind.ObjectMapper.setVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.setVisibilityChecker(com.fasterxml.jackson.databind.introspect.VisibilityChecker<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.tokenStreamFactory()"
- "com.fasterxml.jackson.databind.ObjectMapper.treeAsTokens(com.fasterxml.jackson.core.TreeNode)"
- "com.fasterxml.jackson.databind.ObjectMapper.version()"
- "com.fasterxml.jackson.databind.ObjectMapper.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.TreeNode)"
- "com.fasterxml.jackson.databind.ObjectMapper.writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.JsonNode)"
- "com.fasterxml.jackson.databind.ObjectMapper.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper.writeValue(java.io.DataOutput,java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper.writeValue(java.io.File,java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper.writeValue(java.io.OutputStream,java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper.writeValue(java.io.Writer,java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes(java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(java.lang.Object)"
- "com.fasterxml.jackson.databind.ObjectMapper.writer()"
- "com.fasterxml.jackson.databind.ObjectMapper.writer(com.fasterxml.jackson.core.Base64Variant)"
- "com.fasterxml.jackson.databind.ObjectMapper.writer(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.databind.ObjectMapper.writer(com.fasterxml.jackson.core.PrettyPrinter)"
- "com.fasterxml.jackson.databind.ObjectMapper.writer(com.fasterxml.jackson.core.io.CharacterEscapes)"
- "com.fasterxml.jackson.databind.ObjectMapper.writer(com.fasterxml.jackson.databind.SerializationFeature)"
- "com.fasterxml.jackson.databind.ObjectMapper.writer(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature...)"
- "com.fasterxml.jackson.databind.ObjectMapper.writer(com.fasterxml.jackson.databind.cfg.ContextAttributes)"
- "com.fasterxml.jackson.databind.ObjectMapper.writer(com.fasterxml.jackson.databind.ser.FilterProvider)"
- "com.fasterxml.jackson.databind.ObjectMapper.writer(java.text.DateFormat)"
- "com.fasterxml.jackson.databind.ObjectMapper.writerFor(com.fasterxml.jackson.core.type.TypeReference<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.writerFor(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.writerFor(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.writerWithDefaultPrettyPrinter()"
- "com.fasterxml.jackson.databind.ObjectMapper.writerWithType(com.fasterxml.jackson.core.type.TypeReference<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.writerWithType(com.fasterxml.jackson.databind.JavaType)"
- "com.fasterxml.jackson.databind.ObjectMapper.writerWithType(java.lang.Class<?>)"
- "com.fasterxml.jackson.databind.ObjectMapper.writerWithView(java.lang.Class<?>)"
type: "class"
implements:
- "<xref href=\"com.fasterxml.jackson.core.Versioned?alt=com.fasterxml.jackson.core.Versioned&text=Versioned\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
