### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ObjectMapper.writeValue*"
fullName: "com.fasterxml.jackson.databind.ObjectMapper.writeValue"
name: "writeValue"
nameWithType: "ObjectMapper.writeValue"
members:
- uid: "com.fasterxml.jackson.databind.ObjectMapper.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.writeValue(JsonGenerator g, Object value)"
  name: "writeValue(JsonGenerator g, Object value)"
  nameWithType: "ObjectMapper.writeValue(JsonGenerator g, Object value)"
  summary: "Method that can be used to serialize any Java value as JSON output, using provided <xref uid=\"com.fasterxml.jackson.core.JsonGenerator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonGenerator\"></xref>."
  overridden: "com.fasterxml.jackson.core.ObjectCodec.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)"
  parameters:
  - name: "g"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeValue(JsonGenerator g, Object value)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerationException?alt=com.fasterxml.jackson.core.JsonGenerationException&text=JsonGenerationException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.writeValue(java.io.DataOutput,java.lang.Object)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.writeValue(DataOutput out, Object value)"
  name: "writeValue(DataOutput out, Object value)"
  nameWithType: "ObjectMapper.writeValue(DataOutput out, Object value)"
  parameters:
  - name: "out"
    type: "<xref href=\"java.io.DataOutput?alt=java.io.DataOutput&text=DataOutput\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeValue(DataOutput out, Object value)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.writeValue(java.io.File,java.lang.Object)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.writeValue(File resultFile, Object value)"
  name: "writeValue(File resultFile, Object value)"
  nameWithType: "ObjectMapper.writeValue(File resultFile, Object value)"
  summary: "Method that can be used to serialize any Java value as JSON output, written to File provided."
  parameters:
  - name: "resultFile"
    type: "<xref href=\"java.io.File?alt=java.io.File&text=File\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeValue(File resultFile, Object value)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerationException?alt=com.fasterxml.jackson.core.JsonGenerationException&text=JsonGenerationException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.writeValue(java.io.OutputStream,java.lang.Object)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.writeValue(OutputStream out, Object value)"
  name: "writeValue(OutputStream out, Object value)"
  nameWithType: "ObjectMapper.writeValue(OutputStream out, Object value)"
  summary: "Method that can be used to serialize any Java value as JSON output, using output stream provided (using encoding <xref uid=\"com.fasterxml.jackson.core.JsonEncoding.UTF8\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonEncoding#UTF8\"></xref>).\n\nNote: method does not close the underlying stream explicitly here; however, <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonFactory\"></xref> this mapper uses may choose to close the stream depending on its settings (by default, it will try to close it when <xref uid=\"com.fasterxml.jackson.core.JsonGenerator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonGenerator\"></xref> we construct is closed)."
  parameters:
  - name: "out"
    type: "<xref href=\"java.io.OutputStream?alt=java.io.OutputStream&text=OutputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeValue(OutputStream out, Object value)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerationException?alt=com.fasterxml.jackson.core.JsonGenerationException&text=JsonGenerationException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ObjectMapper.writeValue(java.io.Writer,java.lang.Object)"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper.writeValue(Writer w, Object value)"
  name: "writeValue(Writer w, Object value)"
  nameWithType: "ObjectMapper.writeValue(Writer w, Object value)"
  summary: "Method that can be used to serialize any Java value as JSON output, using Writer provided.\n\nNote: method does not close the underlying stream explicitly here; however, <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonFactory\"></xref> this mapper uses may choose to close the stream depending on its settings (by default, it will try to close it when <xref uid=\"com.fasterxml.jackson.core.JsonGenerator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonGenerator\"></xref> we construct is closed)."
  parameters:
  - name: "w"
    type: "<xref href=\"java.io.Writer?alt=java.io.Writer&text=Writer\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void writeValue(Writer w, Object value)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerationException?alt=com.fasterxml.jackson.core.JsonGenerationException&text=JsonGenerationException\" data-throw-if-not-resolved=\"False\" />"
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
