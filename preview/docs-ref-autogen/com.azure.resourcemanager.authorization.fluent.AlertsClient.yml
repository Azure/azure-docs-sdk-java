### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient"
fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient"
name: "AlertsClient"
nameWithType: "AlertsClient"
summary: "An instance of this class provides access to all the operations defined in Alerts<wbr>Client."
syntax: "public interface **AlertsClient**"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.beginRefresh(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.beginRefresh(String scope, String alertId)"
  name: "beginRefresh(String scope, String alertId)"
  nameWithType: "AlertsClient.beginRefresh(String scope, String alertId)"
  summary: "Refresh an alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to refresh."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SyncPoller<PollResult<AlertOperationResultInner>,AlertOperationResultInner> beginRefresh(String scope, String alertId)"
  desc: "Refresh an alert."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of alert operation result."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.beginRefresh(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.beginRefresh(String scope, String alertId, Context context)"
  name: "beginRefresh(String scope, String alertId, Context context)"
  nameWithType: "AlertsClient.beginRefresh(String scope, String alertId, Context context)"
  summary: "Refresh an alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to refresh."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<AlertOperationResultInner>,AlertOperationResultInner> beginRefresh(String scope, String alertId, Context context)"
  desc: "Refresh an alert."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of alert operation result."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.beginRefreshAll(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.beginRefreshAll(String scope)"
  name: "beginRefreshAll(String scope)"
  nameWithType: "AlertsClient.beginRefreshAll(String scope)"
  summary: "Refresh all alerts for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SyncPoller<PollResult<AlertOperationResultInner>,AlertOperationResultInner> beginRefreshAll(String scope)"
  desc: "Refresh all alerts for a resource scope."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of alert operation result."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.beginRefreshAll(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.beginRefreshAll(String scope, Context context)"
  name: "beginRefreshAll(String scope, Context context)"
  nameWithType: "AlertsClient.beginRefreshAll(String scope, Context context)"
  summary: "Refresh all alerts for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<AlertOperationResultInner>,AlertOperationResultInner> beginRefreshAll(String scope, Context context)"
  desc: "Refresh all alerts for a resource scope."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of alert operation result."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.beginRefreshAllAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.beginRefreshAllAsync(String scope)"
  name: "beginRefreshAllAsync(String scope)"
  nameWithType: "AlertsClient.beginRefreshAllAsync(String scope)"
  summary: "Refresh all alerts for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PollerFlux<PollResult<AlertOperationResultInner>,AlertOperationResultInner> beginRefreshAllAsync(String scope)"
  desc: "Refresh all alerts for a resource scope."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of alert operation result."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.beginRefreshAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.beginRefreshAsync(String scope, String alertId)"
  name: "beginRefreshAsync(String scope, String alertId)"
  nameWithType: "AlertsClient.beginRefreshAsync(String scope, String alertId)"
  summary: "Refresh an alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to refresh."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PollerFlux<PollResult<AlertOperationResultInner>,AlertOperationResultInner> beginRefreshAsync(String scope, String alertId)"
  desc: "Refresh an alert."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of alert operation result."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.get(String scope, String alertId)"
  name: "get(String scope, String alertId)"
  nameWithType: "AlertsClient.get(String scope, String alertId)"
  summary: "Get the specified alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert. The scope can be any REST resource instance. For example, use\n     '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription,\n     '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for\n     a resource group, and\n     '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'\n     for a resource."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to get."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract AlertInner get(String scope, String alertId)"
  desc: "Get the specified alert."
  returns:
    description: "the specified alert."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertInner&text=AlertInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.getAsync(String scope, String alertId)"
  name: "getAsync(String scope, String alertId)"
  nameWithType: "AlertsClient.getAsync(String scope, String alertId)"
  summary: "Get the specified alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert. The scope can be any REST resource instance. For example, use\n     '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription,\n     '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for\n     a resource group, and\n     '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'\n     for a resource."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to get."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<AlertInner> getAsync(String scope, String alertId)"
  desc: "Get the specified alert."
  returns:
    description: "the specified alert on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertInner&text=AlertInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.getWithResponse(String scope, String alertId, Context context)"
  name: "getWithResponse(String scope, String alertId, Context context)"
  nameWithType: "AlertsClient.getWithResponse(String scope, String alertId, Context context)"
  summary: "Get the specified alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert. The scope can be any REST resource instance. For example, use\n     '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription,\n     '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for\n     a resource group, and\n     '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'\n     for a resource."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to get."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AlertInner> getWithResponse(String scope, String alertId, Context context)"
  desc: "Get the specified alert."
  returns:
    description: "the specified alert along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertInner&text=AlertInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.getWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.getWithResponseAsync(String scope, String alertId)"
  name: "getWithResponseAsync(String scope, String alertId)"
  nameWithType: "AlertsClient.getWithResponseAsync(String scope, String alertId)"
  summary: "Get the specified alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert. The scope can be any REST resource instance. For example, use\n     '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription,\n     '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for\n     a resource group, and\n     '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'\n     for a resource."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to get."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<AlertInner>> getWithResponseAsync(String scope, String alertId)"
  desc: "Get the specified alert."
  returns:
    description: "the specified alert along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertInner&text=AlertInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.listForScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.listForScope(String scope)"
  name: "listForScope(String scope)"
  nameWithType: "AlertsClient.listForScope(String scope)"
  summary: "Gets alerts for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<AlertInner> listForScope(String scope)"
  desc: "Gets alerts for a resource scope."
  returns:
    description: "alerts for a resource scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertInner&text=AlertInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.listForScope(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.listForScope(String scope, Context context)"
  name: "listForScope(String scope, Context context)"
  nameWithType: "AlertsClient.listForScope(String scope, Context context)"
  summary: "Gets alerts for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AlertInner> listForScope(String scope, Context context)"
  desc: "Gets alerts for a resource scope."
  returns:
    description: "alerts for a resource scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertInner&text=AlertInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.listForScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.listForScopeAsync(String scope)"
  name: "listForScopeAsync(String scope)"
  nameWithType: "AlertsClient.listForScopeAsync(String scope)"
  summary: "Gets alerts for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<AlertInner> listForScopeAsync(String scope)"
  desc: "Gets alerts for a resource scope."
  returns:
    description: "alerts for a resource scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertInner&text=AlertInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refresh(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refresh(String scope, String alertId)"
  name: "refresh(String scope, String alertId)"
  nameWithType: "AlertsClient.refresh(String scope, String alertId)"
  summary: "Refresh an alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to refresh."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract AlertOperationResultInner refresh(String scope, String alertId)"
  desc: "Refresh an alert."
  returns:
    description: "alert operation result."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refresh(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refresh(String scope, String alertId, Context context)"
  name: "refresh(String scope, String alertId, Context context)"
  nameWithType: "AlertsClient.refresh(String scope, String alertId, Context context)"
  summary: "Refresh an alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to refresh."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AlertOperationResultInner refresh(String scope, String alertId, Context context)"
  desc: "Refresh an alert."
  returns:
    description: "alert operation result."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refreshAll(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refreshAll(String scope)"
  name: "refreshAll(String scope)"
  nameWithType: "AlertsClient.refreshAll(String scope)"
  summary: "Refresh all alerts for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract AlertOperationResultInner refreshAll(String scope)"
  desc: "Refresh all alerts for a resource scope."
  returns:
    description: "alert operation result."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refreshAll(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refreshAll(String scope, Context context)"
  name: "refreshAll(String scope, Context context)"
  nameWithType: "AlertsClient.refreshAll(String scope, Context context)"
  summary: "Refresh all alerts for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AlertOperationResultInner refreshAll(String scope, Context context)"
  desc: "Refresh all alerts for a resource scope."
  returns:
    description: "alert operation result."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refreshAllAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refreshAllAsync(String scope)"
  name: "refreshAllAsync(String scope)"
  nameWithType: "AlertsClient.refreshAllAsync(String scope)"
  summary: "Refresh all alerts for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<AlertOperationResultInner> refreshAllAsync(String scope)"
  desc: "Refresh all alerts for a resource scope."
  returns:
    description: "alert operation result on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refreshAllWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refreshAllWithResponseAsync(String scope)"
  name: "refreshAllWithResponseAsync(String scope)"
  nameWithType: "AlertsClient.refreshAllWithResponseAsync(String scope)"
  summary: "Refresh all alerts for a resource scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> refreshAllWithResponseAsync(String scope)"
  desc: "Refresh all alerts for a resource scope."
  returns:
    description: "alert operation result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refreshAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refreshAsync(String scope, String alertId)"
  name: "refreshAsync(String scope, String alertId)"
  nameWithType: "AlertsClient.refreshAsync(String scope, String alertId)"
  summary: "Refresh an alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to refresh."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<AlertOperationResultInner> refreshAsync(String scope, String alertId)"
  desc: "Refresh an alert."
  returns:
    description: "alert operation result on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertOperationResultInner&text=AlertOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refreshWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.refreshWithResponseAsync(String scope, String alertId)"
  name: "refreshWithResponseAsync(String scope, String alertId)"
  nameWithType: "AlertsClient.refreshWithResponseAsync(String scope, String alertId)"
  summary: "Refresh an alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to refresh."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> refreshWithResponseAsync(String scope, String alertId)"
  desc: "Refresh an alert."
  returns:
    description: "alert operation result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.AlertInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.update(String scope, String alertId, AlertInner parameters)"
  name: "update(String scope, String alertId, AlertInner parameters)"
  nameWithType: "AlertsClient.update(String scope, String alertId, AlertInner parameters)"
  summary: "Update an alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to dismiss."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the alert."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertInner&text=AlertInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void update(String scope, String alertId, AlertInner parameters)"
  desc: "Update an alert."
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.AlertInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.updateAsync(String scope, String alertId, AlertInner parameters)"
  name: "updateAsync(String scope, String alertId, AlertInner parameters)"
  nameWithType: "AlertsClient.updateAsync(String scope, String alertId, AlertInner parameters)"
  summary: "Update an alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to dismiss."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the alert."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertInner&text=AlertInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> updateAsync(String scope, String alertId, AlertInner parameters)"
  desc: "Update an alert."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.AlertInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.updateWithResponse(String scope, String alertId, AlertInner parameters, Context context)"
  name: "updateWithResponse(String scope, String alertId, AlertInner parameters, Context context)"
  nameWithType: "AlertsClient.updateWithResponse(String scope, String alertId, AlertInner parameters, Context context)"
  summary: "Update an alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to dismiss."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the alert."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertInner&text=AlertInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> updateWithResponse(String scope, String alertId, AlertInner parameters, Context context)"
  desc: "Update an alert."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.AlertsClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.authorization.fluent.models.AlertInner)"
  fullName: "com.azure.resourcemanager.authorization.fluent.AlertsClient.updateWithResponseAsync(String scope, String alertId, AlertInner parameters)"
  name: "updateWithResponseAsync(String scope, String alertId, AlertInner parameters)"
  nameWithType: "AlertsClient.updateWithResponseAsync(String scope, String alertId, AlertInner parameters)"
  summary: "Update an alert."
  modifiers:
  - "abstract"
  parameters:
  - description: "The scope of the alert."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the alert to dismiss."
    name: "alertId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters for the alert."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.AlertInner?alt=com.azure.resourcemanager.authorization.fluent.models.AlertInner&text=AlertInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Void>> updateWithResponseAsync(String scope, String alertId, AlertInner parameters)"
  desc: "Update an alert."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in AlertsClient."
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.29.0-beta.1
