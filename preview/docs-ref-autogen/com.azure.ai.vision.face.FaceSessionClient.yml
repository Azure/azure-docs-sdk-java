### YamlMime:JavaType
uid: "com.azure.ai.vision.face.FaceSessionClient"
fullName: "com.azure.ai.vision.face.FaceSessionClient"
name: "FaceSessionClient"
nameWithType: "FaceSessionClient"
summary: "Initializes a new instance of the synchronous Face<wbr>Session<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **FaceSessionClient**"
methods:
- uid: "com.azure.ai.vision.face.FaceSessionClient.createLivenessSession(com.azure.ai.vision.face.models.CreateLivenessSessionContent)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.createLivenessSession(CreateLivenessSessionContent body)"
  name: "createLivenessSession(CreateLivenessSessionContent body)"
  nameWithType: "FaceSessionClient.createLivenessSession(CreateLivenessSessionContent body)"
  summary: "Create a new detect liveness session."
  parameters:
  - description: "Body parameter."
    name: "body"
    type: "<xref href=\"com.azure.ai.vision.face.models.CreateLivenessSessionContent?alt=com.azure.ai.vision.face.models.CreateLivenessSessionContent&text=CreateLivenessSessionContent\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateLivenessSessionResult createLivenessSession(CreateLivenessSessionContent body)"
  desc: "Create a new detect liveness session. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/create-liveness-session for more details."
  returns:
    description: "response of liveness session creation."
    type: "<xref href=\"com.azure.ai.vision.face.models.CreateLivenessSessionResult?alt=com.azure.ai.vision.face.models.CreateLivenessSessionResult&text=CreateLivenessSessionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.FaceSessionClient.createLivenessSessionWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.createLivenessSessionWithResponse(BinaryData body, RequestOptions requestOptions)"
  name: "createLivenessSessionWithResponse(BinaryData body, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.createLivenessSessionWithResponse(BinaryData body, RequestOptions requestOptions)"
  summary: "Create a new detect liveness session."
  parameters:
  - description: "Body parameter."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createLivenessSessionWithResponse(BinaryData body, RequestOptions requestOptions)"
  desc: "Create a new detect liveness session. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/create-liveness-session for more details.\n\n**Request Body Schema**\n\n```java\n{\n     livenessOperationMode: String(Passive/PassiveActive) (Required)\n     sendResultsToClient: Boolean (Optional)\n     deviceCorrelationIdSetInClient: Boolean (Optional)\n     enableSessionImage: Boolean (Optional)\n     livenessSingleModalModel: String(2022-10-15-preview.04/2023-12-20-preview.06) (Optional)\n     deviceCorrelationId: String (Optional)\n     authTokenTimeToLiveInSeconds: Integer (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     sessionId: String (Required)\n     authToken: String (Required)\n }\n```"
  returns:
    description: "response of liveness session creation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.createLivenessWithVerifySession(com.azure.ai.vision.face.models.CreateLivenessWithVerifySessionContent,com.azure.core.util.BinaryData)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.createLivenessWithVerifySession(CreateLivenessWithVerifySessionContent parameters, BinaryData verifyImage)"
  name: "createLivenessWithVerifySession(CreateLivenessWithVerifySessionContent parameters, BinaryData verifyImage)"
  nameWithType: "FaceSessionClient.createLivenessWithVerifySession(CreateLivenessWithVerifySessionContent parameters, BinaryData verifyImage)"
  summary: "Create a new liveness session with verify."
  parameters:
  - description: "Liveness with verify session parameter."
    name: "parameters"
    type: "<xref href=\"com.azure.ai.vision.face.models.CreateLivenessWithVerifySessionContent?alt=com.azure.ai.vision.face.models.CreateLivenessWithVerifySessionContent&text=CreateLivenessWithVerifySessionContent\" data-throw-if-not-resolved=\"False\" />"
  - description: "Verify image to be submitted during the session creation."
    name: "verifyImage"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateLivenessWithVerifySessionResult createLivenessWithVerifySession(CreateLivenessWithVerifySessionContent parameters, BinaryData verifyImage)"
  desc: "Create a new liveness session with verify. Client device submits VerifyImage during the /detectLivenessWithVerify/singleModal call. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/create-liveness-with-verify-session for more details."
  returns:
    description: "response of liveness session with verify creation with verify image provided."
    type: "<xref href=\"com.azure.ai.vision.face.models.CreateLivenessWithVerifySessionResult?alt=com.azure.ai.vision.face.models.CreateLivenessWithVerifySessionResult&text=CreateLivenessWithVerifySessionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessSession(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessSession(String sessionId)"
  name: "deleteLivenessSession(String sessionId)"
  nameWithType: "FaceSessionClient.deleteLivenessSession(String sessionId)"
  summary: "Delete all session related information for matching the specified session id."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteLivenessSession(String sessionId)"
  desc: "Delete all session related information for matching the specified session id. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/delete-liveness-session for more details."
- uid: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessSessionWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessSessionWithResponse(String sessionId, RequestOptions requestOptions)"
  name: "deleteLivenessSessionWithResponse(String sessionId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.deleteLivenessSessionWithResponse(String sessionId, RequestOptions requestOptions)"
  summary: "Delete all session related information for matching the specified session id."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteLivenessSessionWithResponse(String sessionId, RequestOptions requestOptions)"
  desc: "Delete all session related information for matching the specified session id. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/delete-liveness-session for more details."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessWithVerifySession(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessWithVerifySession(String sessionId)"
  name: "deleteLivenessWithVerifySession(String sessionId)"
  nameWithType: "FaceSessionClient.deleteLivenessWithVerifySession(String sessionId)"
  summary: "Delete all session related information for matching the specified session id."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteLivenessWithVerifySession(String sessionId)"
  desc: "Delete all session related information for matching the specified session id. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/delete-liveness-with-verify-session for more details."
- uid: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessWithVerifySessionWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessWithVerifySessionWithResponse(String sessionId, RequestOptions requestOptions)"
  name: "deleteLivenessWithVerifySessionWithResponse(String sessionId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.deleteLivenessWithVerifySessionWithResponse(String sessionId, RequestOptions requestOptions)"
  summary: "Delete all session related information for matching the specified session id."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteLivenessWithVerifySessionWithResponse(String sessionId, RequestOptions requestOptions)"
  desc: "Delete all session related information for matching the specified session id. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/delete-liveness-with-verify-session for more details."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.detectFromSessionImage(com.azure.ai.vision.face.models.DetectFromSessionImageOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.detectFromSessionImage(DetectFromSessionImageOptions options)"
  name: "detectFromSessionImage(DetectFromSessionImageOptions options)"
  nameWithType: "FaceSessionClient.detectFromSessionImage(DetectFromSessionImageOptions options)"
  summary: "Detect human faces in an image, return face rectangles, and optionally with face<wbr>Ids, landmarks, and attributes."
  parameters:
  - description: "Options for detectFromSessionImage API."
    name: "options"
    type: "<xref href=\"com.azure.ai.vision.face.models.DetectFromSessionImageOptions?alt=com.azure.ai.vision.face.models.DetectFromSessionImageOptions&text=DetectFromSessionImageOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<FaceDetectionResult> detectFromSessionImage(DetectFromSessionImageOptions options)"
  desc: "Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes. Please refer to https://learn.microsoft.com/rest/api/face/face-detection-operations/detect-from-session-image-id for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.FaceDetectionResult?alt=com.azure.ai.vision.face.models.FaceDetectionResult&text=FaceDetectionResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.detectFromSessionImageWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.detectFromSessionImageWithResponse(BinaryData detectFromSessionImageRequest, RequestOptions requestOptions)"
  name: "detectFromSessionImageWithResponse(BinaryData detectFromSessionImageRequest, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.detectFromSessionImageWithResponse(BinaryData detectFromSessionImageRequest, RequestOptions requestOptions)"
  summary: "Detect human faces in an image, return face rectangles, and optionally with face<wbr>Ids, landmarks, and attributes."
  parameters:
  - description: "The detectFromSessionImageRequest parameter."
    name: "detectFromSessionImageRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> detectFromSessionImageWithResponse(BinaryData detectFromSessionImageRequest, RequestOptions requestOptions)"
  desc: "Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes. Please refer to https://learn.microsoft.com/rest/api/face/face-detection-operations/detect-from-session-image-id for more details.\n\n**Query Parameters**\n\n    | ---------------------- | ------------ | -------- ||\n    | Name                   | Type         | Required | Description|\n    | detectionModel         | String       | No       | The 'detectionModel' associated with the detected faceIds. Supported 'detectionModel' values include 'detection\\_01', 'detection\\_02' and 'detection\\_03'. The default value is 'detection\\_01'. 'detection\\_03' is recommended since its accuracy is improved on smaller faces (64x64 pixels) and rotated face orientations. Allowed values: \"detection\\_01\", \"detection\\_02\", \"detection\\_03\".                                                                                                                                               |\n    | recognitionModel       | String       | No       | The 'recognitionModel' associated with the detected faceIds. Supported 'recognitionModel' values include 'recognition\\_01', 'recognition\\_02', 'recognition\\_03' or 'recognition\\_04'. The default value is 'recognition\\_01'. 'recognition\\_04' is recommended since its accuracy is improved on faces wearing masks compared with 'recognition\\_03', and its overall accuracy is improved compared with 'recognition\\_01' and 'recognition\\_02'. Allowed values: \"recognition\\_01\", \"recognition\\_02\", \"recognition\\_03\", \"recognition\\_04\". |\n    | returnFaceId           | Boolean      | No       | Return faceIds of the detected faces or not. The default value is true.                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n    | returnFaceAttributes   | List<String> | No       | Analyze and return the one or more specified face attributes in the comma-separated string like 'returnFaceAttributes=headPose,glasses'. Face attribute analysis has additional computational and time cost. In the form of \",\" separated string.                                                                                                                                                                                                                                                                                              |\n    | returnFaceLandmarks    | Boolean      | No       | Return face landmarks of the detected faces or not. The default value is false.                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n    | returnRecognitionModel | Boolean      | No       | Return 'recognitionModel' or not. The default value is false. This is only applicable when returnFaceId = true.                                                                                                                                                                                                                                                                                                                                                                                                                                |\n    | faceIdTimeToLive       | Integer      | No       | The number of seconds for the face ID being cached. Supported range from 60 seconds up to 86400 seconds. The default value is 86400 (24 hours).                                                                                                                                                                                                                                                                                                                                                                                                |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     sessionImageId: String (Required)\n }\n```\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         faceId: String (Optional)\n         recognitionModel: String(recognition_01/recognition_02/recognition_03/recognition_04) (Optional)\n         faceRectangle (Required): {\n             top: int (Required)\n             left: int (Required)\n             width: int (Required)\n             height: int (Required)\n         }\n         faceLandmarks (Optional): {\n             pupilLeft (Required): {\n                 x: double (Required)\n                 y: double (Required)\n             }\n             pupilRight (Required): (recursive schema, see pupilRight above)\n             noseTip (Required): (recursive schema, see noseTip above)\n             mouthLeft (Required): (recursive schema, see mouthLeft above)\n             mouthRight (Required): (recursive schema, see mouthRight above)\n             eyebrowLeftOuter (Required): (recursive schema, see eyebrowLeftOuter above)\n             eyebrowLeftInner (Required): (recursive schema, see eyebrowLeftInner above)\n             eyeLeftOuter (Required): (recursive schema, see eyeLeftOuter above)\n             eyeLeftTop (Required): (recursive schema, see eyeLeftTop above)\n             eyeLeftBottom (Required): (recursive schema, see eyeLeftBottom above)\n             eyeLeftInner (Required): (recursive schema, see eyeLeftInner above)\n             eyebrowRightInner (Required): (recursive schema, see eyebrowRightInner above)\n             eyebrowRightOuter (Required): (recursive schema, see eyebrowRightOuter above)\n             eyeRightInner (Required): (recursive schema, see eyeRightInner above)\n             eyeRightTop (Required): (recursive schema, see eyeRightTop above)\n             eyeRightBottom (Required): (recursive schema, see eyeRightBottom above)\n             eyeRightOuter (Required): (recursive schema, see eyeRightOuter above)\n             noseRootLeft (Required): (recursive schema, see noseRootLeft above)\n             noseRootRight (Required): (recursive schema, see noseRootRight above)\n             noseLeftAlarTop (Required): (recursive schema, see noseLeftAlarTop above)\n             noseRightAlarTop (Required): (recursive schema, see noseRightAlarTop above)\n             noseLeftAlarOutTip (Required): (recursive schema, see noseLeftAlarOutTip above)\n             noseRightAlarOutTip (Required): (recursive schema, see noseRightAlarOutTip above)\n             upperLipTop (Required): (recursive schema, see upperLipTop above)\n             upperLipBottom (Required): (recursive schema, see upperLipBottom above)\n             underLipTop (Required): (recursive schema, see underLipTop above)\n             underLipBottom (Required): (recursive schema, see underLipBottom above)\n         }\n         faceAttributes (Optional): {\n             age: Double (Optional)\n             smile: Double (Optional)\n             facialHair (Optional): {\n                 moustache: double (Required)\n                 beard: double (Required)\n                 sideburns: double (Required)\n             }\n             glasses: String(noGlasses/readingGlasses/sunglasses/swimmingGoggles) (Optional)\n             headPose (Optional): {\n                 pitch: double (Required)\n                 roll: double (Required)\n                 yaw: double (Required)\n             }\n             hair (Optional): {\n                 bald: double (Required)\n                 invisible: boolean (Required)\n                 hairColor (Required): [\n                      (Required){\n                         color: String(unknown/white/gray/blond/brown/red/black/other) (Required)\n                         confidence: double (Required)\n                     }\n                 ]\n             }\n             occlusion (Optional): {\n                 foreheadOccluded: boolean (Required)\n                 eyeOccluded: boolean (Required)\n                 mouthOccluded: boolean (Required)\n             }\n             accessories (Optional): [\n                  (Optional){\n                     type: String(headwear/glasses/mask) (Required)\n                     confidence: double (Required)\n                 }\n             ]\n             blur (Optional): {\n                 blurLevel: String(low/medium/high) (Required)\n                 value: double (Required)\n             }\n             exposure (Optional): {\n                 exposureLevel: String(underExposure/goodExposure/overExposure) (Required)\n                 value: double (Required)\n             }\n             noise (Optional): {\n                 noiseLevel: String(low/medium/high) (Required)\n                 value: double (Required)\n             }\n             mask (Optional): {\n                 noseAndMouthCovered: boolean (Required)\n                 type: String(faceMask/noMask/otherMaskOrOcclusion/uncertain) (Required)\n             }\n             qualityForRecognition: String(low/medium/high) (Optional)\n         }\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionAuditEntries(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionAuditEntries(String sessionId)"
  name: "getLivenessSessionAuditEntries(String sessionId)"
  nameWithType: "FaceSessionClient.getLivenessSessionAuditEntries(String sessionId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/liveness-session-operations/get-liveness-session-audit-entries for more details."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public List<LivenessSessionAuditEntry> getLivenessSessionAuditEntries(String sessionId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-session-audit-entries for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionAuditEntry?alt=com.azure.ai.vision.face.models.LivenessSessionAuditEntry&text=LivenessSessionAuditEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionAuditEntries(java.lang.String,java.lang.String,java.lang.Integer)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionAuditEntries(String sessionId, String start, Integer top)"
  name: "getLivenessSessionAuditEntries(String sessionId, String start, Integer top)"
  nameWithType: "FaceSessionClient.getLivenessSessionAuditEntries(String sessionId, String start, Integer top)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/liveness-session-operations/get-liveness-session-audit-entries for more details."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty."
    name: "start"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of items to list, ranging in [1, 1000]. Default is 1000."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public List<LivenessSessionAuditEntry> getLivenessSessionAuditEntries(String sessionId, String start, Integer top)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-session-audit-entries for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionAuditEntry?alt=com.azure.ai.vision.face.models.LivenessSessionAuditEntry&text=LivenessSessionAuditEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionAuditEntriesWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  name: "getLivenessSessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getLivenessSessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/liveness-session-operations/get-liveness-session-audit-entries for more details."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLivenessSessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-session-audit-entries for more details.\n\n**Query Parameters**\n\n    | ----- | ------- | -------- | -------------------------------------------------------------------------------------------------- |\n    | Name  | Type    | Required | Description                                                                                        |\n    | start | String  | No       | List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. |\n    | top   | Integer | No       | The number of items to list, ranging in \\[1, 1000\\]. Default is 1000.                              |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         id: long (Required)\n         sessionId: String (Required)\n         requestId: String (Required)\n         clientRequestId: String (Required)\n         receivedDateTime: OffsetDateTime (Required)\n         request (Required): {\n             url: String (Required)\n             method: String (Required)\n             contentLength: Long (Optional)\n             contentType: String (Required)\n             userAgent: String (Optional)\n         }\n         response (Required): {\n             body (Required): {\n                 livenessDecision: String(uncertain/realface/spoofface) (Optional)\n                 target (Optional): {\n                     faceRectangle (Required): {\n                         top: int (Required)\n                         left: int (Required)\n                         width: int (Required)\n                         height: int (Required)\n                     }\n                     fileName: String (Required)\n                     timeOffsetWithinFile: int (Required)\n                     imageType: String(Color/Infrared/Depth) (Required)\n                 }\n                 modelVersionUsed: String(2022-10-15-preview.04/2023-12-20-preview.06) (Optional)\n                 verifyResult (Optional): {\n                     verifyImage (Required): {\n                         faceRectangle (Required): (recursive schema, see faceRectangle above)\n                         qualityForRecognition: String(low/medium/high) (Required)\n                     }\n                     matchConfidence: double (Required)\n                     isIdentical: boolean (Required)\n                 }\n                  (Optional): {\n                     String: Object (Required)\n                 }\n             }\n             statusCode: int (Required)\n             latencyInMilliseconds: long (Required)\n         }\n         digest: String (Required)\n         sessionImageId: String (Optional)\n         verifyImageHash: String (Optional)\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionResult(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionResult(String sessionId)"
  name: "getLivenessSessionResult(String sessionId)"
  nameWithType: "FaceSessionClient.getLivenessSessionResult(String sessionId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/liveness-session-operations/get-liveness-session-result for more details."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LivenessSession getLivenessSessionResult(String sessionId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-session-result for more details."
  returns:
    description: "session result of detect liveness."
    type: "<xref href=\"com.azure.ai.vision.face.models.LivenessSession?alt=com.azure.ai.vision.face.models.LivenessSession&text=LivenessSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionResultWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  name: "getLivenessSessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getLivenessSessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/liveness-session-operations/get-liveness-session-result for more details."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLivenessSessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-session-result for more details.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     createdDateTime: OffsetDateTime (Required)\n     sessionStartDateTime: OffsetDateTime (Optional)\n     sessionExpired: boolean (Required)\n     deviceCorrelationId: String (Optional)\n     authTokenTimeToLiveInSeconds: Integer (Optional)\n     status: String(NotStarted/Started/ResultAvailable) (Required)\n     result (Optional): {\n         id: long (Required)\n         sessionId: String (Required)\n         requestId: String (Required)\n         clientRequestId: String (Required)\n         receivedDateTime: OffsetDateTime (Required)\n         request (Required): {\n             url: String (Required)\n             method: String (Required)\n             contentLength: Long (Optional)\n             contentType: String (Required)\n             userAgent: String (Optional)\n         }\n         response (Required): {\n             body (Required): {\n                 livenessDecision: String(uncertain/realface/spoofface) (Optional)\n                 target (Optional): {\n                     faceRectangle (Required): {\n                         top: int (Required)\n                         left: int (Required)\n                         width: int (Required)\n                         height: int (Required)\n                     }\n                     fileName: String (Required)\n                     timeOffsetWithinFile: int (Required)\n                     imageType: String(Color/Infrared/Depth) (Required)\n                 }\n                 modelVersionUsed: String(2022-10-15-preview.04/2023-12-20-preview.06) (Optional)\n                 verifyResult (Optional): {\n                     verifyImage (Required): {\n                         faceRectangle (Required): (recursive schema, see faceRectangle above)\n                         qualityForRecognition: String(low/medium/high) (Required)\n                     }\n                     matchConfidence: double (Required)\n                     isIdentical: boolean (Required)\n                 }\n                  (Optional): {\n                     String: Object (Required)\n                 }\n             }\n             statusCode: int (Required)\n             latencyInMilliseconds: long (Required)\n         }\n         digest: String (Required)\n         sessionImageId: String (Optional)\n         verifyImageHash: String (Optional)\n     }\n }\n```"
  returns:
    description: "session result of detect liveness along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessions()"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessions()"
  name: "getLivenessSessions()"
  nameWithType: "FaceSessionClient.getLivenessSessions()"
  summary: "Lists sessions for /detect<wbr>Liveness/Single<wbr>Modal."
  syntax: "public List<LivenessSessionItem> getLivenessSessions()"
  desc: "Lists sessions for /detectLiveness/SingleModal. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-sessions for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionItem?alt=com.azure.ai.vision.face.models.LivenessSessionItem&text=LivenessSessionItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessions(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessions(String start, Integer top)"
  name: "getLivenessSessions(String start, Integer top)"
  nameWithType: "FaceSessionClient.getLivenessSessions(String start, Integer top)"
  summary: "Lists sessions for /detect<wbr>Liveness/Single<wbr>Modal."
  parameters:
  - description: "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty."
    name: "start"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of items to list, ranging in [1, 1000]. Default is 1000."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public List<LivenessSessionItem> getLivenessSessions(String start, Integer top)"
  desc: "Lists sessions for /detectLiveness/SingleModal. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-sessions for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionItem?alt=com.azure.ai.vision.face.models.LivenessSessionItem&text=LivenessSessionItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionsWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionsWithResponse(RequestOptions requestOptions)"
  name: "getLivenessSessionsWithResponse(RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getLivenessSessionsWithResponse(RequestOptions requestOptions)"
  summary: "Lists sessions for /detect<wbr>Liveness/Single<wbr>Modal."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLivenessSessionsWithResponse(RequestOptions requestOptions)"
  desc: "Lists sessions for /detectLiveness/SingleModal. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-sessions for more details.\n\n**Query Parameters**\n\n    | ----- | ------- | -------- | -------------------------------------------------------------------------------------------------- |\n    | Name  | Type    | Required | Description                                                                                        |\n    | start | String  | No       | List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. |\n    | top   | Integer | No       | The number of items to list, ranging in \\[1, 1000\\]. Default is 1000.                              |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         id: String (Required)\n         createdDateTime: OffsetDateTime (Required)\n         sessionStartDateTime: OffsetDateTime (Optional)\n         sessionExpired: boolean (Required)\n         deviceCorrelationId: String (Optional)\n         authTokenTimeToLiveInSeconds: Integer (Optional)\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionAuditEntries(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionAuditEntries(String sessionId)"
  name: "getLivenessWithVerifySessionAuditEntries(String sessionId)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessionAuditEntries(String sessionId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/liveness-session-operations/get-liveness-with-verify-session-audit-entries for more details."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public List<LivenessSessionAuditEntry> getLivenessWithVerifySessionAuditEntries(String sessionId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-with-verify-session-audit-entries for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionAuditEntry?alt=com.azure.ai.vision.face.models.LivenessSessionAuditEntry&text=LivenessSessionAuditEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionAuditEntries(java.lang.String,java.lang.String,java.lang.Integer)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionAuditEntries(String sessionId, String start, Integer top)"
  name: "getLivenessWithVerifySessionAuditEntries(String sessionId, String start, Integer top)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessionAuditEntries(String sessionId, String start, Integer top)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/liveness-session-operations/get-liveness-with-verify-session-audit-entries for more details."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty."
    name: "start"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of items to list, ranging in [1, 1000]. Default is 1000."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public List<LivenessSessionAuditEntry> getLivenessWithVerifySessionAuditEntries(String sessionId, String start, Integer top)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-with-verify-session-audit-entries for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionAuditEntry?alt=com.azure.ai.vision.face.models.LivenessSessionAuditEntry&text=LivenessSessionAuditEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionAuditEntriesWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  name: "getLivenessWithVerifySessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/liveness-session-operations/get-liveness-with-verify-session-audit-entries for more details."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLivenessWithVerifySessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-with-verify-session-audit-entries for more details.\n\n**Query Parameters**\n\n    | ----- | ------- | -------- | -------------------------------------------------------------------------------------------------- |\n    | Name  | Type    | Required | Description                                                                                        |\n    | start | String  | No       | List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. |\n    | top   | Integer | No       | The number of items to list, ranging in \\[1, 1000\\]. Default is 1000.                              |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         id: long (Required)\n         sessionId: String (Required)\n         requestId: String (Required)\n         clientRequestId: String (Required)\n         receivedDateTime: OffsetDateTime (Required)\n         request (Required): {\n             url: String (Required)\n             method: String (Required)\n             contentLength: Long (Optional)\n             contentType: String (Required)\n             userAgent: String (Optional)\n         }\n         response (Required): {\n             body (Required): {\n                 livenessDecision: String(uncertain/realface/spoofface) (Optional)\n                 target (Optional): {\n                     faceRectangle (Required): {\n                         top: int (Required)\n                         left: int (Required)\n                         width: int (Required)\n                         height: int (Required)\n                     }\n                     fileName: String (Required)\n                     timeOffsetWithinFile: int (Required)\n                     imageType: String(Color/Infrared/Depth) (Required)\n                 }\n                 modelVersionUsed: String(2022-10-15-preview.04/2023-12-20-preview.06) (Optional)\n                 verifyResult (Optional): {\n                     verifyImage (Required): {\n                         faceRectangle (Required): (recursive schema, see faceRectangle above)\n                         qualityForRecognition: String(low/medium/high) (Required)\n                     }\n                     matchConfidence: double (Required)\n                     isIdentical: boolean (Required)\n                 }\n                  (Optional): {\n                     String: Object (Required)\n                 }\n             }\n             statusCode: int (Required)\n             latencyInMilliseconds: long (Required)\n         }\n         digest: String (Required)\n         sessionImageId: String (Optional)\n         verifyImageHash: String (Optional)\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionResult(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionResult(String sessionId)"
  name: "getLivenessWithVerifySessionResult(String sessionId)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessionResult(String sessionId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/liveness-session-operations/get-liveness-with-verify-session-result for more details."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LivenessWithVerifySession getLivenessWithVerifySessionResult(String sessionId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-with-verify-session-result for more details."
  returns:
    description: "session result of detect liveness with verify."
    type: "<xref href=\"com.azure.ai.vision.face.models.LivenessWithVerifySession?alt=com.azure.ai.vision.face.models.LivenessWithVerifySession&text=LivenessWithVerifySession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionResultWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  name: "getLivenessWithVerifySessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/liveness-session-operations/get-liveness-with-verify-session-result for more details."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLivenessWithVerifySessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-with-verify-session-result for more details.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     createdDateTime: OffsetDateTime (Required)\n     sessionStartDateTime: OffsetDateTime (Optional)\n     sessionExpired: boolean (Required)\n     deviceCorrelationId: String (Optional)\n     authTokenTimeToLiveInSeconds: Integer (Optional)\n     status: String(NotStarted/Started/ResultAvailable) (Required)\n     result (Optional): {\n         id: long (Required)\n         sessionId: String (Required)\n         requestId: String (Required)\n         clientRequestId: String (Required)\n         receivedDateTime: OffsetDateTime (Required)\n         request (Required): {\n             url: String (Required)\n             method: String (Required)\n             contentLength: Long (Optional)\n             contentType: String (Required)\n             userAgent: String (Optional)\n         }\n         response (Required): {\n             body (Required): {\n                 livenessDecision: String(uncertain/realface/spoofface) (Optional)\n                 target (Optional): {\n                     faceRectangle (Required): {\n                         top: int (Required)\n                         left: int (Required)\n                         width: int (Required)\n                         height: int (Required)\n                     }\n                     fileName: String (Required)\n                     timeOffsetWithinFile: int (Required)\n                     imageType: String(Color/Infrared/Depth) (Required)\n                 }\n                 modelVersionUsed: String(2022-10-15-preview.04/2023-12-20-preview.06) (Optional)\n                 verifyResult (Optional): {\n                     verifyImage (Required): {\n                         faceRectangle (Required): (recursive schema, see faceRectangle above)\n                         qualityForRecognition: String(low/medium/high) (Required)\n                     }\n                     matchConfidence: double (Required)\n                     isIdentical: boolean (Required)\n                 }\n                  (Optional): {\n                     String: Object (Required)\n                 }\n             }\n             statusCode: int (Required)\n             latencyInMilliseconds: long (Required)\n         }\n         digest: String (Required)\n         sessionImageId: String (Optional)\n         verifyImageHash: String (Optional)\n     }\n }\n```"
  returns:
    description: "session result of detect liveness with verify along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessions()"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessions()"
  name: "getLivenessWithVerifySessions()"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessions()"
  summary: "Lists sessions for /detect<wbr>Liveness<wbr>With<wbr>Verify/Single<wbr>Modal."
  syntax: "public List<LivenessSessionItem> getLivenessWithVerifySessions()"
  desc: "Lists sessions for /detectLivenessWithVerify/SingleModal. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-with-verify-sessions for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionItem?alt=com.azure.ai.vision.face.models.LivenessSessionItem&text=LivenessSessionItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessions(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessions(String start, Integer top)"
  name: "getLivenessWithVerifySessions(String start, Integer top)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessions(String start, Integer top)"
  summary: "Lists sessions for /detect<wbr>Liveness<wbr>With<wbr>Verify/Single<wbr>Modal."
  parameters:
  - description: "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty."
    name: "start"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of items to list, ranging in [1, 1000]. Default is 1000."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public List<LivenessSessionItem> getLivenessWithVerifySessions(String start, Integer top)"
  desc: "Lists sessions for /detectLivenessWithVerify/SingleModal. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-with-verify-sessions for more details."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionItem?alt=com.azure.ai.vision.face.models.LivenessSessionItem&text=LivenessSessionItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionsWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionsWithResponse(RequestOptions requestOptions)"
  name: "getLivenessWithVerifySessionsWithResponse(RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessionsWithResponse(RequestOptions requestOptions)"
  summary: "Lists sessions for /detect<wbr>Liveness<wbr>With<wbr>Verify/Single<wbr>Modal."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLivenessWithVerifySessionsWithResponse(RequestOptions requestOptions)"
  desc: "Lists sessions for /detectLivenessWithVerify/SingleModal. Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-liveness-with-verify-sessions for more details.\n\n**Query Parameters**\n\n    | ----- | ------- | -------- | -------------------------------------------------------------------------------------------------- |\n    | Name  | Type    | Required | Description                                                                                        |\n    | start | String  | No       | List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. |\n    | top   | Integer | No       | The number of items to list, ranging in \\[1, 1000\\]. Default is 1000.                              |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         id: String (Required)\n         createdDateTime: OffsetDateTime (Required)\n         sessionStartDateTime: OffsetDateTime (Optional)\n         sessionExpired: boolean (Required)\n         deviceCorrelationId: String (Optional)\n         authTokenTimeToLiveInSeconds: Integer (Optional)\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getSessionImage(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getSessionImage(String sessionImageId)"
  name: "getSessionImage(String sessionImageId)"
  nameWithType: "FaceSessionClient.getSessionImage(String sessionImageId)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/liveness-session-operations/get-session-image for more details."
  parameters:
  - description: "The request ID of the image to be retrieved."
    name: "sessionImageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public BinaryData getSessionImage(String sessionImageId)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-session-image for more details."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getSessionImageWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getSessionImageWithResponse(String sessionImageId, RequestOptions requestOptions)"
  name: "getSessionImageWithResponse(String sessionImageId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getSessionImageWithResponse(String sessionImageId, RequestOptions requestOptions)"
  summary: "Please refer to https://learn.<wbr>microsoft.<wbr>com/rest/api/face/liveness-session-operations/get-session-image for more details."
  parameters:
  - description: "The request ID of the image to be retrieved."
    name: "sessionImageId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getSessionImageWithResponse(String sessionImageId, RequestOptions requestOptions)"
  desc: "Please refer to https://learn.microsoft.com/rest/api/face/liveness-session-operations/get-session-image for more details.\n\n**Response Body Schema**\n\n```java\nBinaryData\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous FaceSessionClient type."
metadata: {}
package: "com.azure.ai.vision.face"
artifact: com.azure:azure-ai-vision-face:1.0.0-beta.2
