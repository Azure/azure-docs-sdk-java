### YamlMime:JavaType
uid: "com.azure.ai.vision.face.FaceSessionClient"
fullName: "com.azure.ai.vision.face.FaceSessionClient"
name: "FaceSessionClient"
nameWithType: "FaceSessionClient"
summary: "Initializes a new instance of the synchronous Face<wbr>Session<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **FaceSessionClient**"
methods:
- uid: "com.azure.ai.vision.face.FaceSessionClient.createLivenessSession(com.azure.ai.vision.face.models.CreateLivenessSessionContent)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.createLivenessSession(CreateLivenessSessionContent createLivenessSessionContent)"
  name: "createLivenessSession(CreateLivenessSessionContent createLivenessSessionContent)"
  nameWithType: "FaceSessionClient.createLivenessSession(CreateLivenessSessionContent createLivenessSessionContent)"
  summary: "Create a new detect liveness session."
  parameters:
  - description: "Request for creating liveness session."
    name: "createLivenessSessionContent"
    type: "<xref href=\"com.azure.ai.vision.face.models.CreateLivenessSessionContent?alt=com.azure.ai.vision.face.models.CreateLivenessSessionContent&text=CreateLivenessSessionContent\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateLivenessSessionResult createLivenessSession(CreateLivenessSessionContent createLivenessSessionContent)"
  desc: "Create a new detect liveness session. A session is best for client device scenarios where developers want to authorize a client device to perform only a liveness detection without granting full access to their resource. Created sessions have a limited life span and only authorize clients to perform the desired action before access is expired. Permissions includes... > \\* \\* Ability to call /detectLiveness/singleModal for up to 3 retries. \\* A token lifetime of 10 minutes. > \\[!NOTE\\] > Client access can be revoked by deleting the session using the Delete Liveness Session operation. To retrieve a result, use the Get Liveness Session. To audit the individual requests that a client has made to your resource, use the List Liveness Session Audit Entries."
  returns:
    description: "response of liveness session creation."
    type: "<xref href=\"com.azure.ai.vision.face.models.CreateLivenessSessionResult?alt=com.azure.ai.vision.face.models.CreateLivenessSessionResult&text=CreateLivenessSessionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.FaceSessionClient.createLivenessSessionWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.createLivenessSessionWithResponse(BinaryData createLivenessSessionContent, RequestOptions requestOptions)"
  name: "createLivenessSessionWithResponse(BinaryData createLivenessSessionContent, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.createLivenessSessionWithResponse(BinaryData createLivenessSessionContent, RequestOptions requestOptions)"
  summary: "Create a new detect liveness session."
  parameters:
  - description: "Request for creating liveness session."
    name: "createLivenessSessionContent"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createLivenessSessionWithResponse(BinaryData createLivenessSessionContent, RequestOptions requestOptions)"
  desc: "Create a new detect liveness session. A session is best for client device scenarios where developers want to authorize a client device to perform only a liveness detection without granting full access to their resource. Created sessions have a limited life span and only authorize clients to perform the desired action before access is expired. Permissions includes... > \\* \\* Ability to call /detectLiveness/singleModal for up to 3 retries. \\* A token lifetime of 10 minutes. > \\[!NOTE\\] > Client access can be revoked by deleting the session using the Delete Liveness Session operation. To retrieve a result, use the Get Liveness Session. To audit the individual requests that a client has made to your resource, use the List Liveness Session Audit Entries.\n\n**Request Body Schema**\n\n```java\n{\n     livenessOperationMode: String(Passive/PassiveActive) (Required)\n     sendResultsToClient: Boolean (Optional)\n     deviceCorrelationIdSetInClient: Boolean (Optional)\n     deviceCorrelationId: String (Optional)\n     authTokenTimeToLiveInSeconds: Integer (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     sessionId: String (Required)\n     authToken: String (Required)\n }\n```"
  returns:
    description: "response of liveness session creation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.createLivenessWithVerifySession(com.azure.ai.vision.face.models.CreateLivenessSessionContent,com.azure.core.util.BinaryData)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.createLivenessWithVerifySession(CreateLivenessSessionContent createLivenessSessionParameters, BinaryData verifyImage)"
  name: "createLivenessWithVerifySession(CreateLivenessSessionContent createLivenessSessionParameters, BinaryData verifyImage)"
  nameWithType: "FaceSessionClient.createLivenessWithVerifySession(CreateLivenessSessionContent createLivenessSessionParameters, BinaryData verifyImage)"
  summary: "Creates a new liveness session with an optional verification reference image."
  parameters:
  - description: "Request for creating liveness session."
    name: "createLivenessSessionParameters"
    type: "<xref href=\"com.azure.ai.vision.face.models.CreateLivenessSessionContent?alt=com.azure.ai.vision.face.models.CreateLivenessSessionContent&text=CreateLivenessSessionContent\" data-throw-if-not-resolved=\"False\" />"
  - description: "the content value of the verify image."
    name: "verifyImage"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CreateLivenessWithVerifySessionResult createLivenessWithVerifySession(CreateLivenessSessionContent createLivenessSessionParameters, BinaryData verifyImage)"
  desc: "Creates a new liveness session with an optional verification reference image. This method is used to initiate a liveness session with the option to provide a verification image. If the verification image is provided, it will be used during verification process. Otherwise, the client device is expected to submit the verification image during the verification process. A session is best for client device scenarios where developers want to authorize a client device to perform only a liveness detection without granting full access to their resource. Created sessions have a limited life span and only authorize clients to perform the desired action before access is expired. Permissions includes... > \\* \\* Ability to call /detectLivenessWithVerify/singleModal for up to 3 retries. \\* A token lifetime of 10 minutes. > \\[!NOTE\\] > > \\* > \\* Client access can be revoked by deleting the session using the Delete Liveness With Verify Session operation. > \\* To retrieve a result, use the Get Liveness With Verify Session. > \\* To audit the individual requests that a client has made to your resource, use the List Liveness With Verify Session Audit Entries. Alternative Option: Client device submits VerifyImage during the /detectLivenessWithVerify/singleModal call. > \\[!NOTE\\] > Extra measures should be taken to validate that the client is sending the expected VerifyImage."
  returns:
    description: "response of liveness session with verify creation with verify image provided."
    type: "<xref href=\"com.azure.ai.vision.face.models.CreateLivenessWithVerifySessionResult?alt=com.azure.ai.vision.face.models.CreateLivenessWithVerifySessionResult&text=CreateLivenessWithVerifySessionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessSession(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessSession(String sessionId)"
  name: "deleteLivenessSession(String sessionId)"
  nameWithType: "FaceSessionClient.deleteLivenessSession(String sessionId)"
  summary: "Delete all session related information for matching the specified session id."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteLivenessSession(String sessionId)"
  desc: "Delete all session related information for matching the specified session id. > \\[!NOTE\\] > Deleting a session deactivates the Session Auth Token by blocking future API calls made with that Auth Token. While this can be used to remove any access for that token, those requests will still count towards overall resource rate limits. It's best to leverage TokenTTL to limit length of tokens in the case that it is misused."
- uid: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessSessionWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessSessionWithResponse(String sessionId, RequestOptions requestOptions)"
  name: "deleteLivenessSessionWithResponse(String sessionId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.deleteLivenessSessionWithResponse(String sessionId, RequestOptions requestOptions)"
  summary: "Delete all session related information for matching the specified session id."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteLivenessSessionWithResponse(String sessionId, RequestOptions requestOptions)"
  desc: "Delete all session related information for matching the specified session id. > \\[!NOTE\\] > Deleting a session deactivates the Session Auth Token by blocking future API calls made with that Auth Token. While this can be used to remove any access for that token, those requests will still count towards overall resource rate limits. It's best to leverage TokenTTL to limit length of tokens in the case that it is misused."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessWithVerifySession(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessWithVerifySession(String sessionId)"
  name: "deleteLivenessWithVerifySession(String sessionId)"
  nameWithType: "FaceSessionClient.deleteLivenessWithVerifySession(String sessionId)"
  summary: "Delete all session related information for matching the specified session id."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteLivenessWithVerifySession(String sessionId)"
  desc: "Delete all session related information for matching the specified session id. > \\[!NOTE\\] > Deleting a session deactivates the Session Auth Token by blocking future API calls made with that Auth Token. While this can be used to remove any access for that token, those requests will still count towards overall resource rate limits. It's best to leverage TokenTTL to limit length of tokens in the case that it is misused."
- uid: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessWithVerifySessionWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.deleteLivenessWithVerifySessionWithResponse(String sessionId, RequestOptions requestOptions)"
  name: "deleteLivenessWithVerifySessionWithResponse(String sessionId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.deleteLivenessWithVerifySessionWithResponse(String sessionId, RequestOptions requestOptions)"
  summary: "Delete all session related information for matching the specified session id."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteLivenessWithVerifySessionWithResponse(String sessionId, RequestOptions requestOptions)"
  desc: "Delete all session related information for matching the specified session id. > \\[!NOTE\\] > Deleting a session deactivates the Session Auth Token by blocking future API calls made with that Auth Token. While this can be used to remove any access for that token, those requests will still count towards overall resource rate limits. It's best to leverage TokenTTL to limit length of tokens in the case that it is misused."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionAuditEntries(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionAuditEntries(String sessionId)"
  name: "getLivenessSessionAuditEntries(String sessionId)"
  nameWithType: "FaceSessionClient.getLivenessSessionAuditEntries(String sessionId)"
  summary: "Gets session requests and response body for the session."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public List<LivenessSessionAuditEntry> getLivenessSessionAuditEntries(String sessionId)"
  desc: "Gets session requests and response body for the session."
  returns:
    description: "session requests and response body for the session."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionAuditEntry?alt=com.azure.ai.vision.face.models.LivenessSessionAuditEntry&text=LivenessSessionAuditEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionAuditEntries(java.lang.String,java.lang.String,java.lang.Integer)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionAuditEntries(String sessionId, String start, Integer top)"
  name: "getLivenessSessionAuditEntries(String sessionId, String start, Integer top)"
  nameWithType: "FaceSessionClient.getLivenessSessionAuditEntries(String sessionId, String start, Integer top)"
  summary: "Gets session requests and response body for the session."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty."
    name: "start"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of items to list, ranging in [1, 1000]. Default is 1000."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public List<LivenessSessionAuditEntry> getLivenessSessionAuditEntries(String sessionId, String start, Integer top)"
  desc: "Gets session requests and response body for the session."
  returns:
    description: "session requests and response body for the session."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionAuditEntry?alt=com.azure.ai.vision.face.models.LivenessSessionAuditEntry&text=LivenessSessionAuditEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionAuditEntriesWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  name: "getLivenessSessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getLivenessSessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  summary: "Gets session requests and response body for the session."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLivenessSessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  desc: "Gets session requests and response body for the session.\n\n**Query Parameters**\n\n    | ----- | ------- | -------- | -------------------------------------------------------------------------------------------------- |\n    | Name  | Type    | Required | Description                                                                                        |\n    | start | String  | No       | List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. |\n    | top   | Integer | No       | The number of items to list, ranging in \\[1, 1000\\]. Default is 1000.                              |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         id: long (Required)\n         sessionId: String (Required)\n         requestId: String (Required)\n         clientRequestId: String (Required)\n         receivedDateTime: OffsetDateTime (Required)\n         request (Required): {\n             url: String (Required)\n             method: String (Required)\n             contentLength: Long (Optional)\n             contentType: String (Required)\n             userAgent: String (Optional)\n         }\n         response (Required): {\n             body (Required): {\n                 livenessDecision: String(uncertain/realface/spoofface) (Optional)\n                 target (Optional): {\n                     faceRectangle (Required): {\n                         top: int (Required)\n                         left: int (Required)\n                         width: int (Required)\n                         height: int (Required)\n                     }\n                     fileName: String (Required)\n                     timeOffsetWithinFile: int (Required)\n                     imageType: String(Color/Infrared/Depth) (Required)\n                 }\n                 modelVersionUsed: String(2020-02-15-preview.01/2021-11-12-preview.03/2022-10-15-preview.04/2023-03-02-preview.05) (Optional)\n                 verifyResult (Optional): {\n                     verifyImage (Required): {\n                         faceRectangle (Required): (recursive schema, see faceRectangle above)\n                         qualityForRecognition: String(low/medium/high) (Required)\n                     }\n                     matchConfidence: double (Required)\n                     isIdentical: boolean (Required)\n                 }\n                  (Optional): {\n                     String: Object (Required)\n                 }\n             }\n             statusCode: int (Required)\n             latencyInMilliseconds: long (Required)\n         }\n         digest: String (Required)\n     }\n ]\n```"
  returns:
    description: "session requests and response body for the session along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionResult(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionResult(String sessionId)"
  name: "getLivenessSessionResult(String sessionId)"
  nameWithType: "FaceSessionClient.getLivenessSessionResult(String sessionId)"
  summary: "Get session result of detect<wbr>Liveness/single<wbr>Modal call."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LivenessSession getLivenessSessionResult(String sessionId)"
  desc: "Get session result of detectLiveness/singleModal call."
  returns:
    description: "session result of detectLiveness/singleModal call."
    type: "<xref href=\"com.azure.ai.vision.face.models.LivenessSession?alt=com.azure.ai.vision.face.models.LivenessSession&text=LivenessSession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionResultWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  name: "getLivenessSessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getLivenessSessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  summary: "Get session result of detect<wbr>Liveness/single<wbr>Modal call."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLivenessSessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  desc: "Get session result of detectLiveness/singleModal call.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     createdDateTime: OffsetDateTime (Required)\n     sessionStartDateTime: OffsetDateTime (Optional)\n     sessionExpired: boolean (Required)\n     deviceCorrelationId: String (Optional)\n     authTokenTimeToLiveInSeconds: Integer (Optional)\n     status: String(NotStarted/Started/ResultAvailable) (Required)\n     result (Optional): {\n         id: long (Required)\n         sessionId: String (Required)\n         requestId: String (Required)\n         clientRequestId: String (Required)\n         receivedDateTime: OffsetDateTime (Required)\n         request (Required): {\n             url: String (Required)\n             method: String (Required)\n             contentLength: Long (Optional)\n             contentType: String (Required)\n             userAgent: String (Optional)\n         }\n         response (Required): {\n             body (Required): {\n                 livenessDecision: String(uncertain/realface/spoofface) (Optional)\n                 target (Optional): {\n                     faceRectangle (Required): {\n                         top: int (Required)\n                         left: int (Required)\n                         width: int (Required)\n                         height: int (Required)\n                     }\n                     fileName: String (Required)\n                     timeOffsetWithinFile: int (Required)\n                     imageType: String(Color/Infrared/Depth) (Required)\n                 }\n                 modelVersionUsed: String(2020-02-15-preview.01/2021-11-12-preview.03/2022-10-15-preview.04/2023-03-02-preview.05) (Optional)\n                 verifyResult (Optional): {\n                     verifyImage (Required): {\n                         faceRectangle (Required): (recursive schema, see faceRectangle above)\n                         qualityForRecognition: String(low/medium/high) (Required)\n                     }\n                     matchConfidence: double (Required)\n                     isIdentical: boolean (Required)\n                 }\n                  (Optional): {\n                     String: Object (Required)\n                 }\n             }\n             statusCode: int (Required)\n             latencyInMilliseconds: long (Required)\n         }\n         digest: String (Required)\n     }\n }\n```"
  returns:
    description: "session result of detectLiveness/singleModal call along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessions()"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessions()"
  name: "getLivenessSessions()"
  nameWithType: "FaceSessionClient.getLivenessSessions()"
  summary: "Lists sessions for /detect<wbr>Liveness/Single<wbr>Modal."
  syntax: "public List<LivenessSessionItem> getLivenessSessions()"
  desc: "Lists sessions for /detectLiveness/SingleModal. List sessions from the last sessionId greater than the 'start'. The result should be ordered by sessionId in ascending order."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionItem?alt=com.azure.ai.vision.face.models.LivenessSessionItem&text=LivenessSessionItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessions(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessions(String start, Integer top)"
  name: "getLivenessSessions(String start, Integer top)"
  nameWithType: "FaceSessionClient.getLivenessSessions(String start, Integer top)"
  summary: "Lists sessions for /detect<wbr>Liveness/Single<wbr>Modal."
  parameters:
  - description: "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty."
    name: "start"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of items to list, ranging in [1, 1000]. Default is 1000."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public List<LivenessSessionItem> getLivenessSessions(String start, Integer top)"
  desc: "Lists sessions for /detectLiveness/SingleModal. List sessions from the last sessionId greater than the 'start'. The result should be ordered by sessionId in ascending order."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionItem?alt=com.azure.ai.vision.face.models.LivenessSessionItem&text=LivenessSessionItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionsWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessSessionsWithResponse(RequestOptions requestOptions)"
  name: "getLivenessSessionsWithResponse(RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getLivenessSessionsWithResponse(RequestOptions requestOptions)"
  summary: "Lists sessions for /detect<wbr>Liveness/Single<wbr>Modal."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLivenessSessionsWithResponse(RequestOptions requestOptions)"
  desc: "Lists sessions for /detectLiveness/SingleModal. List sessions from the last sessionId greater than the 'start'. The result should be ordered by sessionId in ascending order.\n\n**Query Parameters**\n\n    | ----- | ------- | -------- | -------------------------------------------------------------------------------------------------- |\n    | Name  | Type    | Required | Description                                                                                        |\n    | start | String  | No       | List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. |\n    | top   | Integer | No       | The number of items to list, ranging in \\[1, 1000\\]. Default is 1000.                              |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         id: String (Required)\n         createdDateTime: OffsetDateTime (Required)\n         sessionStartDateTime: OffsetDateTime (Optional)\n         sessionExpired: boolean (Required)\n         deviceCorrelationId: String (Optional)\n         authTokenTimeToLiveInSeconds: Integer (Optional)\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionAuditEntries(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionAuditEntries(String sessionId)"
  name: "getLivenessWithVerifySessionAuditEntries(String sessionId)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessionAuditEntries(String sessionId)"
  summary: "Gets session requests and response body for the session."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public List<LivenessSessionAuditEntry> getLivenessWithVerifySessionAuditEntries(String sessionId)"
  desc: "Gets session requests and response body for the session."
  returns:
    description: "session requests and response body for the session."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionAuditEntry?alt=com.azure.ai.vision.face.models.LivenessSessionAuditEntry&text=LivenessSessionAuditEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionAuditEntries(java.lang.String,java.lang.String,java.lang.Integer)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionAuditEntries(String sessionId, String start, Integer top)"
  name: "getLivenessWithVerifySessionAuditEntries(String sessionId, String start, Integer top)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessionAuditEntries(String sessionId, String start, Integer top)"
  summary: "Gets session requests and response body for the session."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty."
    name: "start"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of items to list, ranging in [1, 1000]. Default is 1000."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public List<LivenessSessionAuditEntry> getLivenessWithVerifySessionAuditEntries(String sessionId, String start, Integer top)"
  desc: "Gets session requests and response body for the session."
  returns:
    description: "session requests and response body for the session."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionAuditEntry?alt=com.azure.ai.vision.face.models.LivenessSessionAuditEntry&text=LivenessSessionAuditEntry\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionAuditEntriesWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  name: "getLivenessWithVerifySessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  summary: "Gets session requests and response body for the session."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLivenessWithVerifySessionAuditEntriesWithResponse(String sessionId, RequestOptions requestOptions)"
  desc: "Gets session requests and response body for the session.\n\n**Query Parameters**\n\n    | ----- | ------- | -------- | -------------------------------------------------------------------------------------------------- |\n    | Name  | Type    | Required | Description                                                                                        |\n    | start | String  | No       | List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. |\n    | top   | Integer | No       | The number of items to list, ranging in \\[1, 1000\\]. Default is 1000.                              |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         id: long (Required)\n         sessionId: String (Required)\n         requestId: String (Required)\n         clientRequestId: String (Required)\n         receivedDateTime: OffsetDateTime (Required)\n         request (Required): {\n             url: String (Required)\n             method: String (Required)\n             contentLength: Long (Optional)\n             contentType: String (Required)\n             userAgent: String (Optional)\n         }\n         response (Required): {\n             body (Required): {\n                 livenessDecision: String(uncertain/realface/spoofface) (Optional)\n                 target (Optional): {\n                     faceRectangle (Required): {\n                         top: int (Required)\n                         left: int (Required)\n                         width: int (Required)\n                         height: int (Required)\n                     }\n                     fileName: String (Required)\n                     timeOffsetWithinFile: int (Required)\n                     imageType: String(Color/Infrared/Depth) (Required)\n                 }\n                 modelVersionUsed: String(2020-02-15-preview.01/2021-11-12-preview.03/2022-10-15-preview.04/2023-03-02-preview.05) (Optional)\n                 verifyResult (Optional): {\n                     verifyImage (Required): {\n                         faceRectangle (Required): (recursive schema, see faceRectangle above)\n                         qualityForRecognition: String(low/medium/high) (Required)\n                     }\n                     matchConfidence: double (Required)\n                     isIdentical: boolean (Required)\n                 }\n                  (Optional): {\n                     String: Object (Required)\n                 }\n             }\n             statusCode: int (Required)\n             latencyInMilliseconds: long (Required)\n         }\n         digest: String (Required)\n     }\n ]\n```"
  returns:
    description: "session requests and response body for the session along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionResult(java.lang.String)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionResult(String sessionId)"
  name: "getLivenessWithVerifySessionResult(String sessionId)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessionResult(String sessionId)"
  summary: "Get session result of detect<wbr>Liveness<wbr>With<wbr>Verify/single<wbr>Modal call."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LivenessWithVerifySession getLivenessWithVerifySessionResult(String sessionId)"
  desc: "Get session result of detectLivenessWithVerify/singleModal call."
  returns:
    description: "session result of detectLivenessWithVerify/singleModal call."
    type: "<xref href=\"com.azure.ai.vision.face.models.LivenessWithVerifySession?alt=com.azure.ai.vision.face.models.LivenessWithVerifySession&text=LivenessWithVerifySession\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionResultWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  name: "getLivenessWithVerifySessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  summary: "Get session result of detect<wbr>Liveness<wbr>With<wbr>Verify/single<wbr>Modal call."
  parameters:
  - description: "The unique ID to reference this session."
    name: "sessionId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLivenessWithVerifySessionResultWithResponse(String sessionId, RequestOptions requestOptions)"
  desc: "Get session result of detectLivenessWithVerify/singleModal call.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     createdDateTime: OffsetDateTime (Required)\n     sessionStartDateTime: OffsetDateTime (Optional)\n     sessionExpired: boolean (Required)\n     deviceCorrelationId: String (Optional)\n     authTokenTimeToLiveInSeconds: Integer (Optional)\n     status: String(NotStarted/Started/ResultAvailable) (Required)\n     result (Optional): {\n         id: long (Required)\n         sessionId: String (Required)\n         requestId: String (Required)\n         clientRequestId: String (Required)\n         receivedDateTime: OffsetDateTime (Required)\n         request (Required): {\n             url: String (Required)\n             method: String (Required)\n             contentLength: Long (Optional)\n             contentType: String (Required)\n             userAgent: String (Optional)\n         }\n         response (Required): {\n             body (Required): {\n                 livenessDecision: String(uncertain/realface/spoofface) (Optional)\n                 target (Optional): {\n                     faceRectangle (Required): {\n                         top: int (Required)\n                         left: int (Required)\n                         width: int (Required)\n                         height: int (Required)\n                     }\n                     fileName: String (Required)\n                     timeOffsetWithinFile: int (Required)\n                     imageType: String(Color/Infrared/Depth) (Required)\n                 }\n                 modelVersionUsed: String(2020-02-15-preview.01/2021-11-12-preview.03/2022-10-15-preview.04/2023-03-02-preview.05) (Optional)\n                 verifyResult (Optional): {\n                     verifyImage (Required): {\n                         faceRectangle (Required): (recursive schema, see faceRectangle above)\n                         qualityForRecognition: String(low/medium/high) (Required)\n                     }\n                     matchConfidence: double (Required)\n                     isIdentical: boolean (Required)\n                 }\n                  (Optional): {\n                     String: Object (Required)\n                 }\n             }\n             statusCode: int (Required)\n             latencyInMilliseconds: long (Required)\n         }\n         digest: String (Required)\n     }\n }\n```"
  returns:
    description: "session result of detectLivenessWithVerify/singleModal call along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessions()"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessions()"
  name: "getLivenessWithVerifySessions()"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessions()"
  summary: "Lists sessions for /detect<wbr>Liveness<wbr>With<wbr>Verify/Single<wbr>Modal."
  syntax: "public List<LivenessSessionItem> getLivenessWithVerifySessions()"
  desc: "Lists sessions for /detectLivenessWithVerify/SingleModal. List sessions from the last sessionId greater than the \"start\". The result should be ordered by sessionId in ascending order."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionItem?alt=com.azure.ai.vision.face.models.LivenessSessionItem&text=LivenessSessionItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessions(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessions(String start, Integer top)"
  name: "getLivenessWithVerifySessions(String start, Integer top)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessions(String start, Integer top)"
  summary: "Lists sessions for /detect<wbr>Liveness<wbr>With<wbr>Verify/Single<wbr>Modal."
  parameters:
  - description: "List resources greater than the \"start\". It contains no more than 64 characters. Default is empty."
    name: "start"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of items to list, ranging in [1, 1000]. Default is 1000."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public List<LivenessSessionItem> getLivenessWithVerifySessions(String start, Integer top)"
  desc: "Lists sessions for /detectLivenessWithVerify/SingleModal. List sessions from the last sessionId greater than the \"start\". The result should be ordered by sessionId in ascending order."
  returns:
    description: "the response."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.vision.face.models.LivenessSessionItem?alt=com.azure.ai.vision.face.models.LivenessSessionItem&text=LivenessSessionItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionsWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.vision.face.FaceSessionClient.getLivenessWithVerifySessionsWithResponse(RequestOptions requestOptions)"
  name: "getLivenessWithVerifySessionsWithResponse(RequestOptions requestOptions)"
  nameWithType: "FaceSessionClient.getLivenessWithVerifySessionsWithResponse(RequestOptions requestOptions)"
  summary: "Lists sessions for /detect<wbr>Liveness<wbr>With<wbr>Verify/Single<wbr>Modal."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getLivenessWithVerifySessionsWithResponse(RequestOptions requestOptions)"
  desc: "Lists sessions for /detectLivenessWithVerify/SingleModal. List sessions from the last sessionId greater than the \"start\". The result should be ordered by sessionId in ascending order.\n\n**Query Parameters**\n\n    | ----- | ------- | -------- | -------------------------------------------------------------------------------------------------- |\n    | Name  | Type    | Required | Description                                                                                        |\n    | start | String  | No       | List resources greater than the \"start\". It contains no more than 64 characters. Default is empty. |\n    | top   | Integer | No       | The number of items to list, ranging in \\[1, 1000\\]. Default is 1000.                              |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n[\n      (Required){\n         id: String (Required)\n         createdDateTime: OffsetDateTime (Required)\n         sessionStartDateTime: OffsetDateTime (Optional)\n         sessionExpired: boolean (Required)\n         deviceCorrelationId: String (Optional)\n         authTokenTimeToLiveInSeconds: Integer (Optional)\n     }\n ]\n```"
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous FaceSessionClient type."
metadata: {}
package: "com.azure.ai.vision.face"
artifact: com.azure:azure-ai-vision-face:1.0.0-beta.1
