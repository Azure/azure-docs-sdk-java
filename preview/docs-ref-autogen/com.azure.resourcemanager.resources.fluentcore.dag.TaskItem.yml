### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem
  id: TaskItem
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag
  children:
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.beforeGroupInvoke()
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAfterPostRunAsync(boolean)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.isHot()
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.result()
  langs:
  - java
  name: TaskItem
  nameWithType: TaskItem
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem
  type: Interface
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: >-
    Type representing a unit of work, upon invocation produces result of <xref uid="com.azure.resourcemanager.resources.fluentcore.model.Indexable" data-throw-if-not-resolved="false">Indexable</xref> type.


    The <xref uid="com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup" data-throw-if-not-resolved="false">TaskGroup</xref> holds a group of these TaskItems those depends on each other.
  syntax:
    content: public interface TaskItem
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.beforeGroupInvoke()
  id: beforeGroupInvoke()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem
  langs:
  - java
  name: beforeGroupInvoke()
  nameWithType: TaskItem.beforeGroupInvoke()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.beforeGroupInvoke()
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.beforeGroupInvoke*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: The method that gets called before invoking all the tasks in the <xref uid="com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup" data-throw-if-not-resolved="false">TaskGroup</xref> this task belongs to.
  syntax:
    content: public abstract void beforeGroupInvoke()
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAfterPostRunAsync(boolean)
  id: invokeAfterPostRunAsync(boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem
  langs:
  - java
  name: invokeAfterPostRunAsync(boolean isGroupFaulted)
  nameWithType: TaskItem.invokeAfterPostRunAsync(boolean isGroupFaulted)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAfterPostRunAsync(boolean isGroupFaulted)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAfterPostRunAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: >-
    The method that gets called after invocation of "post run" task items depends on this TaskItem.


    This method will be invoked only if this TaskItem had "post run" dependents.
  syntax:
    content: public abstract Mono<Void> invokeAfterPostRunAsync(boolean isGroupFaulted)
    parameters:
    - id: isGroupFaulted
      type: boolean
      description: >-
        true if one or more tasks in the group this TaskItem belongs
                               to are in faulted state.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: a <xref uid="reactor.core.publisher.Flux" data-throw-if-not-resolved="false">Flux</xref> representing any asynchronous work initiated
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)
  id: invokeAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem
  langs:
  - java
  name: invokeAsync(TaskGroup.InvocationContext context)
  nameWithType: TaskItem.invokeAsync(TaskGroup.InvocationContext context)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAsync(TaskGroup.InvocationContext context)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: The method that gets called to perform the unit of work asynchronously.
  syntax:
    content: public abstract Mono<Indexable> invokeAsync(TaskGroup.InvocationContext context)
    parameters:
    - id: context
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext
      description: >-
        the context shared across the the all task items in the group
                        this task item belongs to.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluentcore.model.Indexable>
      description: >-
        a <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> upon subscription does the unit of work and produces
         result of type <xref uid="com.azure.resourcemanager.resources.fluentcore.model.Indexable" data-throw-if-not-resolved="false">Indexable</xref>
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.isHot()
  id: isHot()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem
  langs:
  - java
  name: isHot()
  nameWithType: TaskItem.isHot()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.isHot()
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.isHot*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  syntax:
    content: public abstract boolean isHot()
    return:
      type: boolean
      description: >-
        true if the publisher returned by invokeAsync(cxt) is a hot observable,
         false if its a cold publisher.
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.result()
  id: result()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem
  langs:
  - java
  name: result()
  nameWithType: TaskItem.result()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.result()
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.result*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  syntax:
    content: public abstract Indexable result()
    return:
      type: com.azure.resourcemanager.resources.fluentcore.model.Indexable
      description: the result of the task invocation
references:
- uid: com.azure.resourcemanager.resources.fluentcore.model.Indexable
  name: Indexable
  nameWithType: Indexable
  fullName: com.azure.resourcemanager.resources.fluentcore.model.Indexable
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.result*
  name: result
  nameWithType: TaskItem.result
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.result
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.beforeGroupInvoke*
  name: beforeGroupInvoke
  nameWithType: TaskItem.beforeGroupInvoke
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.beforeGroupInvoke
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.isHot*
  name: isHot
  nameWithType: TaskItem.isHot
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.isHot
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext
  name: TaskGroup.InvocationContext
  nameWithType: TaskGroup.InvocationContext
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.resources.fluentcore.model.Indexable>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluentcore.model.Indexable
    name: Indexable
    fullName: com.azure.resourcemanager.resources.fluentcore.model.Indexable
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAsync*
  name: invokeAsync
  nameWithType: TaskItem.invokeAsync
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAsync
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAfterPostRunAsync*
  name: invokeAfterPostRunAsync
  nameWithType: TaskItem.invokeAfterPostRunAsync
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAfterPostRunAsync
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
