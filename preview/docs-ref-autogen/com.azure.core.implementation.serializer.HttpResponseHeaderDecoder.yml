### YamlMime:ManagedReference
items:
- uid: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder"
  id: "HttpResponseHeaderDecoder"
  parent: "com.azure.core.implementation.serializer"
  children:
  - "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder.HttpResponseHeaderDecoder()"
  - "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder.decode(com.azure.core.http.HttpResponse,com.azure.core.util.serializer.SerializerAdapter,com.azure.core.implementation.serializer.HttpResponseDecodeData)"
  langs:
  - "java"
  name: "HttpResponseHeaderDecoder"
  nameWithType: "HttpResponseHeaderDecoder"
  fullName: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder"
  type: "Class"
  package: "com.azure.core.implementation.serializer"
  summary: "Decoder to decode header of HTTP response."
  syntax:
    content: "final class HttpResponseHeaderDecoder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder.HttpResponseHeaderDecoder()"
  id: "HttpResponseHeaderDecoder()"
  parent: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder"
  langs:
  - "java"
  name: "HttpResponseHeaderDecoder()"
  nameWithType: "HttpResponseHeaderDecoder.HttpResponseHeaderDecoder()"
  fullName: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder.HttpResponseHeaderDecoder()"
  overload: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder.HttpResponseHeaderDecoder*"
  type: "Constructor"
  package: "com.azure.core.implementation.serializer"
  syntax:
    content: " HttpResponseHeaderDecoder()"
- uid: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder.decode(com.azure.core.http.HttpResponse,com.azure.core.util.serializer.SerializerAdapter,com.azure.core.implementation.serializer.HttpResponseDecodeData)"
  id: "decode(com.azure.core.http.HttpResponse,com.azure.core.util.serializer.SerializerAdapter,com.azure.core.implementation.serializer.HttpResponseDecodeData)"
  parent: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder"
  langs:
  - "java"
  name: "decode(HttpResponse httpResponse, SerializerAdapter serializer, HttpResponseDecodeData decodeData)"
  nameWithType: "HttpResponseHeaderDecoder.decode(HttpResponse httpResponse, SerializerAdapter serializer, HttpResponseDecodeData decodeData)"
  fullName: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder.decode(HttpResponse httpResponse, SerializerAdapter serializer, HttpResponseDecodeData decodeData)"
  overload: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder.decode*"
  type: "Method"
  package: "com.azure.core.implementation.serializer"
  summary: "Decode headers of the http response. The decoding happens when caller subscribed to the returned `Mono, if the response header is not decodable then Mono.empty() will be returned.`"
  syntax:
    content: "static Mono<Object> decode(HttpResponse httpResponse, SerializerAdapter serializer, HttpResponseDecodeData decodeData)"
    parameters:
    - id: "httpResponse"
      type: "com.azure.core.http.HttpResponse"
      description: "the response containing the headers to be decoded"
    - id: "serializer"
      type: "com.azure.core.util.serializer.SerializerAdapter"
      description: "the adapter to use for decoding"
    - id: "decodeData"
      type: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
      description: "the necessary data required to decode a Http response"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Object>"
      description: "publisher that emits decoded response header upon subscription if header is decodable,\n     no emission if the header is not-decodable"
references:
- uid: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder.HttpResponseHeaderDecoder*"
  name: "HttpResponseHeaderDecoder"
  nameWithType: "HttpResponseHeaderDecoder.HttpResponseHeaderDecoder"
  fullName: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder.HttpResponseHeaderDecoder"
  package: "com.azure.core.implementation.serializer"
- uid: "com.azure.core.http.HttpResponse"
  name: "HttpResponse"
  nameWithType: "HttpResponse"
  fullName: "com.azure.core.http.HttpResponse"
- uid: "com.azure.core.util.serializer.SerializerAdapter"
  name: "SerializerAdapter"
  nameWithType: "SerializerAdapter"
  fullName: "com.azure.core.util.serializer.SerializerAdapter"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
  name: "HttpResponseDecodeData"
  nameWithType: "HttpResponseDecodeData"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecodeData"
- uid: "reactor.core.publisher.Mono<java.lang.Object>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder.decode*"
  name: "decode"
  nameWithType: "HttpResponseHeaderDecoder.decode"
  fullName: "com.azure.core.implementation.serializer.HttpResponseHeaderDecoder.decode"
  package: "com.azure.core.implementation.serializer"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "java.lang.Object"
  name: "Object"
  nameWithType: "Object"
  fullName: "java.lang.Object"
