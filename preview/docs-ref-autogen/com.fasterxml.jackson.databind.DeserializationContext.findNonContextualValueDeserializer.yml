### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.DeserializationContext.findNonContextualValueDeserializer*"
fullName: "com.fasterxml.jackson.databind.DeserializationContext.findNonContextualValueDeserializer"
name: "findNonContextualValueDeserializer"
nameWithType: "DeserializationContext.findNonContextualValueDeserializer"
members:
- uid: "com.fasterxml.jackson.databind.DeserializationContext.findNonContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType)"
  fullName: "com.fasterxml.jackson.databind.DeserializationContext.findNonContextualValueDeserializer(JavaType type)"
  name: "findNonContextualValueDeserializer(JavaType type)"
  nameWithType: "DeserializationContext.findNonContextualValueDeserializer(JavaType type)"
  summary: "Variant that will try to locate deserializer for current type, but without performing any contextualization (unlike <xref uid=\"com.fasterxml.jackson.databind.DeserializationContext.findContextualValueDeserializer*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#findContextualValueDeserializer\"></xref>) or checking for need to create a <xref uid=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeDeserializer\"></xref> (unlike <xref uid=\"com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#findRootValueDeserializer(JavaType)\"></xref>. This method is usually called from within <xref uid=\"com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ResolvableDeserializer#resolve\"></xref>, and expectation is that caller then calls either <xref uid=\"com.fasterxml.jackson.databind.DeserializationContext.handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer&lt;?&gt;,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#handlePrimaryContextualization(JsonDeserializer, BeanProperty, JavaType)\"></xref> or <xref uid=\"com.fasterxml.jackson.databind.DeserializationContext.handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer&lt;?&gt;,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#handleSecondaryContextualization(JsonDeserializer, BeanProperty, JavaType)\"></xref> at a later point, as necessary."
  parameters:
  - name: "type"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final JsonDeserializer<Object> findNonContextualValueDeserializer(JavaType type)"
  exceptions:
  - type: "<xref href=\"com.fasterxml.jackson.databind.JsonMappingException?alt=com.fasterxml.jackson.databind.JsonMappingException&text=JsonMappingException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonDeserializer?alt=com.fasterxml.jackson.databind.JsonDeserializer&text=JsonDeserializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
