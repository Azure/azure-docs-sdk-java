### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setSafeRange*"
fullName: "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setSafeRange"
name: "setSafeRange"
nameWithType: "Escapers.Builder.setSafeRange"
members:
- uid: "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setSafeRange(char,char)"
  fullName: "com.azure.cosmos.implementation.guava25.escape.Escapers.Builder.setSafeRange(char safeMin, char safeMax)"
  name: "setSafeRange(char safeMin, char safeMax)"
  nameWithType: "Escapers.Builder.setSafeRange(char safeMin, char safeMax)"
  summary: "Sets the safe range of characters for the escaper. Characters in this range that have no explicit replacement are considered 'safe' and remain unescaped in the output. If `safeMax < safeMin` then the safe range is empty."
  parameters:
  - description: "the lowest 'safe' character"
    name: "safeMin"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  - description: "the highest 'safe' character"
    name: "safeMax"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Escapers.Builder setSafeRange(char safeMin, char safeMax)"
  returns:
    description: "the builder instance"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.escape.Escapers.Builder?alt=com.azure.cosmos.implementation.guava25.escape.Escapers.Builder&text=Builder\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.escape"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
