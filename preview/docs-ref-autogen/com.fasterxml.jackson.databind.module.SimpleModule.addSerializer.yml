### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.module.SimpleModule.addSerializer*"
fullName: "com.fasterxml.jackson.databind.module.SimpleModule.<T>addSerializer"
name: "<T>addSerializer"
nameWithType: "SimpleModule.<T>addSerializer"
members:
- uid: "com.fasterxml.jackson.databind.module.SimpleModule.<T>addSerializer(java.lang.Class<? extends T>,com.fasterxml.jackson.databind.JsonSerializer<T>)"
  fullName: "com.fasterxml.jackson.databind.module.SimpleModule.<T>addSerializer(Class<? extends T> type, JsonSerializer<T> ser)"
  name: "<T>addSerializer(Class<? extends T> type, JsonSerializer<T> ser)"
  nameWithType: "SimpleModule.<T>addSerializer(Class<? extends T> type, JsonSerializer<T> ser)"
  summary: "Method for adding serializer to handle values of specific type.\n\nWARNING! Type matching only uses type-erased `Class` and should NOT be used when registering serializers for generic types like <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Collection\"></xref> and <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref>."
  parameters:
  - name: "type"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends T?alt=? extends T&text=? extends T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "ser"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SimpleModule <T>addSerializer(Class<? extends T> type, JsonSerializer<T> ser)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.module.SimpleModule?alt=com.fasterxml.jackson.databind.module.SimpleModule&text=SimpleModule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.module.SimpleModule.addSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>)"
  fullName: "com.fasterxml.jackson.databind.module.SimpleModule.addSerializer(JsonSerializer<?> ser)"
  name: "addSerializer(JsonSerializer<?> ser)"
  nameWithType: "SimpleModule.addSerializer(JsonSerializer<?> ser)"
  summary: "Method for adding serializer to handle type that the serializer claims to handle (see <xref uid=\"com.fasterxml.jackson.databind.JsonSerializer.handledType()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonSerializer#handledType()\"></xref>).\n\nWARNING! Type matching only uses type-erased `Class` and should NOT be used when registering serializers for generic types like <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Collection\"></xref> and <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref>."
  parameters:
  - name: "ser"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public SimpleModule addSerializer(JsonSerializer<?> ser)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.module.SimpleModule?alt=com.fasterxml.jackson.databind.module.SimpleModule&text=SimpleModule\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.module"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
