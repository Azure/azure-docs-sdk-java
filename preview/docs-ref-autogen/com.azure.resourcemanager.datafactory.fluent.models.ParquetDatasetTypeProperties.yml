### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties"
name: "ParquetDatasetTypeProperties"
nameWithType: "ParquetDatasetTypeProperties"
summary: "Parquet dataset properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ParquetDatasetTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties.ParquetDatasetTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties.ParquetDatasetTypeProperties()"
  name: "ParquetDatasetTypeProperties()"
  nameWithType: "ParquetDatasetTypeProperties.ParquetDatasetTypeProperties()"
  syntax: "public ParquetDatasetTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties.compressionCodec()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties.compressionCodec()"
  name: "compressionCodec()"
  nameWithType: "ParquetDatasetTypeProperties.compressionCodec()"
  summary: "Get the compression<wbr>Codec property: The data compression<wbr>Codec."
  syntax: "public Object compressionCodec()"
  desc: "Get the compressionCodec property: The data compressionCodec. Type: string (or Expression with resultType string)."
  returns:
    description: "the compressionCodec value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties.location()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties.location()"
  name: "location()"
  nameWithType: "ParquetDatasetTypeProperties.location()"
  summary: "Get the location property: The location of the parquet storage."
  syntax: "public DatasetLocation location()"
  desc: "Get the location property: The location of the parquet storage."
  returns:
    description: "the location value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetLocation?alt=com.azure.resourcemanager.datafactory.models.DatasetLocation&text=DatasetLocation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties.validate()"
  name: "validate()"
  nameWithType: "ParquetDatasetTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties.withCompressionCodec(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties.withCompressionCodec(Object compressionCodec)"
  name: "withCompressionCodec(Object compressionCodec)"
  nameWithType: "ParquetDatasetTypeProperties.withCompressionCodec(Object compressionCodec)"
  summary: "Set the compression<wbr>Codec property: The data compression<wbr>Codec."
  parameters:
  - description: "the compressionCodec value to set."
    name: "compressionCodec"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ParquetDatasetTypeProperties withCompressionCodec(Object compressionCodec)"
  desc: "Set the compressionCodec property: The data compressionCodec. Type: string (or Expression with resultType string)."
  returns:
    description: "the ParquetDatasetTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties&text=ParquetDatasetTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties.withLocation(com.azure.resourcemanager.datafactory.models.DatasetLocation)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties.withLocation(DatasetLocation location)"
  name: "withLocation(DatasetLocation location)"
  nameWithType: "ParquetDatasetTypeProperties.withLocation(DatasetLocation location)"
  summary: "Set the location property: The location of the parquet storage."
  parameters:
  - description: "the location value to set."
    name: "location"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetLocation?alt=com.azure.resourcemanager.datafactory.models.DatasetLocation&text=DatasetLocation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ParquetDatasetTypeProperties withLocation(DatasetLocation location)"
  desc: "Set the location property: The location of the parquet storage."
  returns:
    description: "the ParquetDatasetTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ParquetDatasetTypeProperties&text=ParquetDatasetTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Parquet dataset properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
