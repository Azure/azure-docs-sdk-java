### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl"
fullName: "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl"
name: "PeeringServiceImpl"
nameWithType: "PeeringServiceImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PeeringServiceImpl implements PeeringService, PeeringService.Definition, PeeringService.Update"
methods:
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.apply()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.apply(com.azure.core.util.Context)"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.create()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.create(com.azure.core.util.Context)"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.id()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.innerModel()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.location()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.name()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.peeringServiceLocation()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.peeringServiceProvider()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.providerBackupPeeringLocation()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.providerPrimaryPeeringLocation()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.provisioningState()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.refresh()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.refresh(com.azure.core.util.Context)"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.region()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.regionName()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.sku()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.tags()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.type()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.update()"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.withExistingResourceGroup(java.lang.String)"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.withPeeringServiceLocation(java.lang.String)"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.withPeeringServiceProvider(java.lang.String)"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.withProviderBackupPeeringLocation(java.lang.String)"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.withProviderPrimaryPeeringLocation(java.lang.String)"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.withRegion(com.azure.core.management.Region)"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.withRegion(java.lang.String)"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.withSku(com.azure.resourcemanager.peering.models.PeeringServiceSku)"
- "com.azure.resourcemanager.peering.implementation.PeeringServiceImpl.withTags(java.util.Map<java.lang.String,java.lang.String>)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.peering.models.PeeringService.Definition?alt=com.azure.resourcemanager.peering.models.PeeringService.Definition&text=Definition\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.peering.models.PeeringService.Update?alt=com.azure.resourcemanager.peering.models.PeeringService.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.peering.models.PeeringService?alt=com.azure.resourcemanager.peering.models.PeeringService&text=PeeringService\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.peering.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
