### YamlMime:JavaMember
uid: "org.apache.commons.codec.digest.Md5Crypt.apr1Crypt*"
fullName: "org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
name: "apr1Crypt"
nameWithType: "Md5Crypt.apr1Crypt"
members:
- uid: "org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[])"
  fullName: "org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[] keyBytes)"
  name: "apr1Crypt(byte[] keyBytes)"
  nameWithType: "Md5Crypt.apr1Crypt(byte[] keyBytes)"
  summary: "See <xref uid=\"org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#apr1Crypt(byte[], String)\"></xref> for details.\n\nA salt is generated for you using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref>; your own <xref uid=\"java.util.Random\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Random\"></xref> in <xref uid=\"org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.util.Random)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#apr1Crypt(byte[], Random)\"></xref>."
  parameters:
  - description: "plaintext string to hash."
    name: "keyBytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static String apr1Crypt(byte[] keyBytes)"
  returns:
    description: "the hash value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)"
  fullName: "org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[] keyBytes, String salt)"
  name: "apr1Crypt(byte[] keyBytes, String salt)"
  nameWithType: "Md5Crypt.apr1Crypt(byte[] keyBytes, String salt)"
  summary: "See <xref uid=\"org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#apr1Crypt(String, String)\"></xref> for details.\n\nA salt is generated for you using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref>"
  parameters:
  - description: "plaintext string to hash."
    name: "keyBytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "An APR1 salt. The salt may be null, in which case a salt is generated for you using\n            <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ThreadLocalRandom\"></xref>; for more secure salts consider using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref> to generate your\n            own salts."
    name: "salt"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String apr1Crypt(byte[] keyBytes, String salt)"
  returns:
    description: "the hash value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.util.Random)"
  fullName: "org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[] keyBytes, Random random)"
  name: "apr1Crypt(byte[] keyBytes, Random random)"
  nameWithType: "Md5Crypt.apr1Crypt(byte[] keyBytes, Random random)"
  summary: "See <xref uid=\"org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#apr1Crypt(byte[], String)\"></xref> for details.\n\nA salt is generated for you using the user provided <xref uid=\"java.util.Random\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Random\"></xref>."
  parameters:
  - description: "plaintext string to hash."
    name: "keyBytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the instance of <xref uid=\"java.util.Random\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Random\"></xref> to use for generating the salt. Consider using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref>\n            or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ThreadLocalRandom\"></xref>."
    name: "random"
    type: "<xref href=\"java.util.Random?alt=java.util.Random&text=Random\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String apr1Crypt(byte[] keyBytes, Random random)"
  returns:
    description: "the hash value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(java.lang.String)"
  fullName: "org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(String keyBytes)"
  name: "apr1Crypt(String keyBytes)"
  nameWithType: "Md5Crypt.apr1Crypt(String keyBytes)"
  summary: "See <xref uid=\"org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#apr1Crypt(String, String)\"></xref> for details.\n\nA salt is generated for you using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ThreadLocalRandom\"></xref>; for more secure salts consider using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref> to generate your own salts and calling <xref uid=\"org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#apr1Crypt(byte[], String)\"></xref>."
  parameters:
  - description: "plaintext string to hash."
    name: "keyBytes"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String apr1Crypt(String keyBytes)"
  returns:
    description: "the hash value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(java.lang.String,java.lang.String)"
  fullName: "org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(String keyBytes, String salt)"
  name: "apr1Crypt(String keyBytes, String salt)"
  nameWithType: "Md5Crypt.apr1Crypt(String keyBytes, String salt)"
  summary: "Generates an Apache htpasswd compatible \"$apr1$\" MD5 based hash value.\n\nThe algorithm is identical to the crypt(3) \"$1$\" one but produces different outputs due to the different salt prefix."
  parameters:
  - description: "plaintext string to hash."
    name: "keyBytes"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "salt string including the prefix and optionally garbage at the end. The salt may be null, in which\n            case a salt is generated for you using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ThreadLocalRandom\"></xref>; for more secure salts consider using\n            <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref> to generate your own salts."
    name: "salt"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String apr1Crypt(String keyBytes, String salt)"
  returns:
    description: "the hash value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.apache.commons.codec.digest"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
