### YamlMime:JavaEnum
uid: "org.apache.commons.codec.language.bm.NameType"
fullName: "org.apache.commons.codec.language.bm.NameType"
name: "NameType"
nameWithType: "NameType"
summary: "Supported types of names. Unless you are matching particular family names, use <xref uid=\"org.apache.commons.codec.language.bm.NameType.GENERIC\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#GENERIC\"></xref>. The `GENERIC` NameType should work reasonably well for non-name words. The other encodings are specifically tuned to family names, and may not work well at all for general text."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum NameType extends Enum<NameType>"
fields:
- uid: "org.apache.commons.codec.language.bm.NameType.ASHKENAZI"
  fullName: "org.apache.commons.codec.language.bm.NameType.ASHKENAZI"
  name: "ASHKENAZI"
  nameWithType: "NameType.ASHKENAZI"
  summary: "Ashkenazi family names"
- uid: "org.apache.commons.codec.language.bm.NameType.GENERIC"
  fullName: "org.apache.commons.codec.language.bm.NameType.GENERIC"
  name: "GENERIC"
  nameWithType: "NameType.GENERIC"
  summary: "Generic names and words"
- uid: "org.apache.commons.codec.language.bm.NameType.SEPHARDIC"
  fullName: "org.apache.commons.codec.language.bm.NameType.SEPHARDIC"
  name: "SEPHARDIC"
  nameWithType: "NameType.SEPHARDIC"
  summary: "Sephardic family names"
methods:
- uid: "org.apache.commons.codec.language.bm.NameType.getName()"
  fullName: "org.apache.commons.codec.language.bm.NameType.getName()"
  name: "getName()"
  nameWithType: "NameType.getName()"
  summary: "Gets the short version of the name type."
  syntax: "public String getName()"
  returns:
    description: "the NameType short string"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.commons.codec.language.bm.NameType.valueOf(java.lang.String)"
  fullName: "org.apache.commons.codec.language.bm.NameType.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "NameType.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static NameType valueOf(String name)"
  returns:
    type: "<xref href=\"org.apache.commons.codec.language.bm.NameType?alt=org.apache.commons.codec.language.bm.NameType&text=NameType\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.commons.codec.language.bm.NameType.values()"
  fullName: "org.apache.commons.codec.language.bm.NameType.values()"
  name: "values()"
  nameWithType: "NameType.values()"
  syntax: "public static NameType[] values()"
  returns:
    type: "<xref href=\"org.apache.commons.codec.language.bm.NameType?alt=org.apache.commons.codec.language.bm.NameType&text=NameType\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "org.apache.commons.codec.language.bm"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
