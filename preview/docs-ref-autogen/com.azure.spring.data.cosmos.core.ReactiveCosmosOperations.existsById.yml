### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.existsById*"
fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.existsById"
name: "existsById"
nameWithType: "ReactiveCosmosOperations.existsById"
members:
- uid: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.existsById(java.lang.Object,java.lang.Class<?>,java.lang.String)"
  fullName: "com.azure.spring.data.cosmos.core.ReactiveCosmosOperations.existsById(Object id, Class<?> domainType, String containerName)"
  name: "existsById(Object id, Class<?> domainType, String containerName)"
  nameWithType: "ReactiveCosmosOperations.existsById(Object id, Class<?> domainType, String containerName)"
  summary: "Exists"
  parameters:
  - description: "the id"
    name: "id"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - description: "type class"
    name: "domainType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - description: "the container name"
    name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Boolean> existsById(Object id, Class<?> domainType, String containerName)"
  returns:
    description: "Mono of result"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.core"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
