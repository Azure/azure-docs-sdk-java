### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.compute.models.DataDisk
  id: DataDisk
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models
  children:
  - com.azure.resourcemanager.compute.models.DataDisk.DataDisk()
  - com.azure.resourcemanager.compute.models.DataDisk.caching()
  - com.azure.resourcemanager.compute.models.DataDisk.createOption()
  - com.azure.resourcemanager.compute.models.DataDisk.diskSizeGB()
  - com.azure.resourcemanager.compute.models.DataDisk.image()
  - com.azure.resourcemanager.compute.models.DataDisk.lun()
  - com.azure.resourcemanager.compute.models.DataDisk.managedDisk()
  - com.azure.resourcemanager.compute.models.DataDisk.name()
  - com.azure.resourcemanager.compute.models.DataDisk.toBeDetached()
  - com.azure.resourcemanager.compute.models.DataDisk.validate()
  - com.azure.resourcemanager.compute.models.DataDisk.vhd()
  - com.azure.resourcemanager.compute.models.DataDisk.withCaching(com.azure.resourcemanager.compute.models.CachingTypes)
  - com.azure.resourcemanager.compute.models.DataDisk.withCreateOption(com.azure.resourcemanager.compute.models.DiskCreateOptionTypes)
  - com.azure.resourcemanager.compute.models.DataDisk.withDiskSizeGB(java.lang.Integer)
  - com.azure.resourcemanager.compute.models.DataDisk.withImage(com.azure.resourcemanager.compute.models.VirtualHardDisk)
  - com.azure.resourcemanager.compute.models.DataDisk.withLun(int)
  - com.azure.resourcemanager.compute.models.DataDisk.withManagedDisk(com.azure.resourcemanager.compute.models.ManagedDiskParameters)
  - com.azure.resourcemanager.compute.models.DataDisk.withName(java.lang.String)
  - com.azure.resourcemanager.compute.models.DataDisk.withToBeDetached(java.lang.Boolean)
  - com.azure.resourcemanager.compute.models.DataDisk.withVhd(com.azure.resourcemanager.compute.models.VirtualHardDisk)
  - com.azure.resourcemanager.compute.models.DataDisk.withWriteAcceleratorEnabled(java.lang.Boolean)
  - com.azure.resourcemanager.compute.models.DataDisk.writeAcceleratorEnabled()
  langs:
  - java
  name: DataDisk
  nameWithType: DataDisk
  fullName: com.azure.resourcemanager.compute.models.DataDisk
  type: Class
  package: com.azure.resourcemanager.compute.models
  summary: The DataDisk model.
  syntax:
    content: public final class DataDisk
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.compute.models.DataDisk.DataDisk()
  id: DataDisk()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: DataDisk()
  nameWithType: DataDisk.DataDisk()
  fullName: com.azure.resourcemanager.compute.models.DataDisk.DataDisk()
  overload: com.azure.resourcemanager.compute.models.DataDisk.DataDisk*
  type: Constructor
  package: com.azure.resourcemanager.compute.models
  syntax:
    content: public DataDisk()
- uid: com.azure.resourcemanager.compute.models.DataDisk.caching()
  id: caching()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: caching()
  nameWithType: DataDisk.caching()
  fullName: com.azure.resourcemanager.compute.models.DataDisk.caching()
  overload: com.azure.resourcemanager.compute.models.DataDisk.caching*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the caching property: Specifies the caching requirements. <br><br> Possible values are: <br><br> \*\*None\*\* <br><br> \*\*ReadOnly\*\* <br><br> \*\*ReadWrite\*\* <br><br> Default: \*\*None for Standard storage. ReadOnly for Premium storage\*\*.'
  syntax:
    content: public CachingTypes caching()
    return:
      type: com.azure.resourcemanager.compute.models.CachingTypes
      description: the caching value.
- uid: com.azure.resourcemanager.compute.models.DataDisk.createOption()
  id: createOption()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: createOption()
  nameWithType: DataDisk.createOption()
  fullName: com.azure.resourcemanager.compute.models.DataDisk.createOption()
  overload: com.azure.resourcemanager.compute.models.DataDisk.createOption*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the createOption property: Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> \*\*Attach\*\* \\u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> \*\*FromImage\*\* \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.'
  syntax:
    content: public DiskCreateOptionTypes createOption()
    return:
      type: com.azure.resourcemanager.compute.models.DiskCreateOptionTypes
      description: the createOption value.
- uid: com.azure.resourcemanager.compute.models.DataDisk.diskSizeGB()
  id: diskSizeGB()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: diskSizeGB()
  nameWithType: DataDisk.diskSizeGB()
  fullName: com.azure.resourcemanager.compute.models.DataDisk.diskSizeGB()
  overload: com.azure.resourcemanager.compute.models.DataDisk.diskSizeGB*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the diskSizeGB property: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB.'
  syntax:
    content: public Integer diskSizeGB()
    return:
      type: java.lang.Integer
      description: the diskSizeGB value.
- uid: com.azure.resourcemanager.compute.models.DataDisk.image()
  id: image()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: image()
  nameWithType: DataDisk.image()
  fullName: com.azure.resourcemanager.compute.models.DataDisk.image()
  overload: com.azure.resourcemanager.compute.models.DataDisk.image*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the image property: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.'
  syntax:
    content: public VirtualHardDisk image()
    return:
      type: com.azure.resourcemanager.compute.models.VirtualHardDisk
      description: the image value.
- uid: com.azure.resourcemanager.compute.models.DataDisk.lun()
  id: lun()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: lun()
  nameWithType: DataDisk.lun()
  fullName: com.azure.resourcemanager.compute.models.DataDisk.lun()
  overload: com.azure.resourcemanager.compute.models.DataDisk.lun*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the lun property: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.'
  syntax:
    content: public int lun()
    return:
      type: int
      description: the lun value.
- uid: com.azure.resourcemanager.compute.models.DataDisk.managedDisk()
  id: managedDisk()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: managedDisk()
  nameWithType: DataDisk.managedDisk()
  fullName: com.azure.resourcemanager.compute.models.DataDisk.managedDisk()
  overload: com.azure.resourcemanager.compute.models.DataDisk.managedDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the managedDisk property: The managed disk parameters.'
  syntax:
    content: public ManagedDiskParameters managedDisk()
    return:
      type: com.azure.resourcemanager.compute.models.ManagedDiskParameters
      description: the managedDisk value.
- uid: com.azure.resourcemanager.compute.models.DataDisk.name()
  id: name()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: name()
  nameWithType: DataDisk.name()
  fullName: com.azure.resourcemanager.compute.models.DataDisk.name()
  overload: com.azure.resourcemanager.compute.models.DataDisk.name*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the name property: The disk name.'
  syntax:
    content: public String name()
    return:
      type: java.lang.String
      description: the name value.
- uid: com.azure.resourcemanager.compute.models.DataDisk.toBeDetached()
  id: toBeDetached()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: toBeDetached()
  nameWithType: DataDisk.toBeDetached()
  fullName: com.azure.resourcemanager.compute.models.DataDisk.toBeDetached()
  overload: com.azure.resourcemanager.compute.models.DataDisk.toBeDetached*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the toBeDetached property: Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset.'
  syntax:
    content: public Boolean toBeDetached()
    return:
      type: java.lang.Boolean
      description: the toBeDetached value.
- uid: com.azure.resourcemanager.compute.models.DataDisk.validate()
  id: validate()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: validate()
  nameWithType: DataDisk.validate()
  fullName: com.azure.resourcemanager.compute.models.DataDisk.validate()
  overload: com.azure.resourcemanager.compute.models.DataDisk.validate*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
- uid: com.azure.resourcemanager.compute.models.DataDisk.vhd()
  id: vhd()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: vhd()
  nameWithType: DataDisk.vhd()
  fullName: com.azure.resourcemanager.compute.models.DataDisk.vhd()
  overload: com.azure.resourcemanager.compute.models.DataDisk.vhd*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the vhd property: The virtual hard disk.'
  syntax:
    content: public VirtualHardDisk vhd()
    return:
      type: com.azure.resourcemanager.compute.models.VirtualHardDisk
      description: the vhd value.
- uid: com.azure.resourcemanager.compute.models.DataDisk.withCaching(com.azure.resourcemanager.compute.models.CachingTypes)
  id: withCaching(com.azure.resourcemanager.compute.models.CachingTypes)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: withCaching(CachingTypes caching)
  nameWithType: DataDisk.withCaching(CachingTypes caching)
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withCaching(CachingTypes caching)
  overload: com.azure.resourcemanager.compute.models.DataDisk.withCaching*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the caching property: Specifies the caching requirements. <br><br> Possible values are: <br><br> \*\*None\*\* <br><br> \*\*ReadOnly\*\* <br><br> \*\*ReadWrite\*\* <br><br> Default: \*\*None for Standard storage. ReadOnly for Premium storage\*\*.'
  syntax:
    content: public DataDisk withCaching(CachingTypes caching)
    parameters:
    - id: caching
      type: com.azure.resourcemanager.compute.models.CachingTypes
      description: the caching value to set.
    return:
      type: com.azure.resourcemanager.compute.models.DataDisk
      description: the DataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.DataDisk.withCreateOption(com.azure.resourcemanager.compute.models.DiskCreateOptionTypes)
  id: withCreateOption(com.azure.resourcemanager.compute.models.DiskCreateOptionTypes)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: withCreateOption(DiskCreateOptionTypes createOption)
  nameWithType: DataDisk.withCreateOption(DiskCreateOptionTypes createOption)
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withCreateOption(DiskCreateOptionTypes createOption)
  overload: com.azure.resourcemanager.compute.models.DataDisk.withCreateOption*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the createOption property: Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> \*\*Attach\*\* \\u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> \*\*FromImage\*\* \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you also use the plan element previously described.'
  syntax:
    content: public DataDisk withCreateOption(DiskCreateOptionTypes createOption)
    parameters:
    - id: createOption
      type: com.azure.resourcemanager.compute.models.DiskCreateOptionTypes
      description: the createOption value to set.
    return:
      type: com.azure.resourcemanager.compute.models.DataDisk
      description: the DataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.DataDisk.withDiskSizeGB(java.lang.Integer)
  id: withDiskSizeGB(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: withDiskSizeGB(Integer diskSizeGB)
  nameWithType: DataDisk.withDiskSizeGB(Integer diskSizeGB)
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withDiskSizeGB(Integer diskSizeGB)
  overload: com.azure.resourcemanager.compute.models.DataDisk.withDiskSizeGB*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the diskSizeGB property: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB.'
  syntax:
    content: public DataDisk withDiskSizeGB(Integer diskSizeGB)
    parameters:
    - id: diskSizeGB
      type: java.lang.Integer
      description: the diskSizeGB value to set.
    return:
      type: com.azure.resourcemanager.compute.models.DataDisk
      description: the DataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.DataDisk.withImage(com.azure.resourcemanager.compute.models.VirtualHardDisk)
  id: withImage(com.azure.resourcemanager.compute.models.VirtualHardDisk)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: withImage(VirtualHardDisk image)
  nameWithType: DataDisk.withImage(VirtualHardDisk image)
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withImage(VirtualHardDisk image)
  overload: com.azure.resourcemanager.compute.models.DataDisk.withImage*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the image property: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.'
  syntax:
    content: public DataDisk withImage(VirtualHardDisk image)
    parameters:
    - id: image
      type: com.azure.resourcemanager.compute.models.VirtualHardDisk
      description: the image value to set.
    return:
      type: com.azure.resourcemanager.compute.models.DataDisk
      description: the DataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.DataDisk.withLun(int)
  id: withLun(int)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: withLun(int lun)
  nameWithType: DataDisk.withLun(int lun)
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withLun(int lun)
  overload: com.azure.resourcemanager.compute.models.DataDisk.withLun*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the lun property: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.'
  syntax:
    content: public DataDisk withLun(int lun)
    parameters:
    - id: lun
      type: int
      description: the lun value to set.
    return:
      type: com.azure.resourcemanager.compute.models.DataDisk
      description: the DataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.DataDisk.withManagedDisk(com.azure.resourcemanager.compute.models.ManagedDiskParameters)
  id: withManagedDisk(com.azure.resourcemanager.compute.models.ManagedDiskParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: withManagedDisk(ManagedDiskParameters managedDisk)
  nameWithType: DataDisk.withManagedDisk(ManagedDiskParameters managedDisk)
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withManagedDisk(ManagedDiskParameters managedDisk)
  overload: com.azure.resourcemanager.compute.models.DataDisk.withManagedDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the managedDisk property: The managed disk parameters.'
  syntax:
    content: public DataDisk withManagedDisk(ManagedDiskParameters managedDisk)
    parameters:
    - id: managedDisk
      type: com.azure.resourcemanager.compute.models.ManagedDiskParameters
      description: the managedDisk value to set.
    return:
      type: com.azure.resourcemanager.compute.models.DataDisk
      description: the DataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.DataDisk.withName(java.lang.String)
  id: withName(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: withName(String name)
  nameWithType: DataDisk.withName(String name)
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withName(String name)
  overload: com.azure.resourcemanager.compute.models.DataDisk.withName*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the name property: The disk name.'
  syntax:
    content: public DataDisk withName(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: the name value to set.
    return:
      type: com.azure.resourcemanager.compute.models.DataDisk
      description: the DataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.DataDisk.withToBeDetached(java.lang.Boolean)
  id: withToBeDetached(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: withToBeDetached(Boolean toBeDetached)
  nameWithType: DataDisk.withToBeDetached(Boolean toBeDetached)
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withToBeDetached(Boolean toBeDetached)
  overload: com.azure.resourcemanager.compute.models.DataDisk.withToBeDetached*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the toBeDetached property: Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset.'
  syntax:
    content: public DataDisk withToBeDetached(Boolean toBeDetached)
    parameters:
    - id: toBeDetached
      type: java.lang.Boolean
      description: the toBeDetached value to set.
    return:
      type: com.azure.resourcemanager.compute.models.DataDisk
      description: the DataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.DataDisk.withVhd(com.azure.resourcemanager.compute.models.VirtualHardDisk)
  id: withVhd(com.azure.resourcemanager.compute.models.VirtualHardDisk)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: withVhd(VirtualHardDisk vhd)
  nameWithType: DataDisk.withVhd(VirtualHardDisk vhd)
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withVhd(VirtualHardDisk vhd)
  overload: com.azure.resourcemanager.compute.models.DataDisk.withVhd*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the vhd property: The virtual hard disk.'
  syntax:
    content: public DataDisk withVhd(VirtualHardDisk vhd)
    parameters:
    - id: vhd
      type: com.azure.resourcemanager.compute.models.VirtualHardDisk
      description: the vhd value to set.
    return:
      type: com.azure.resourcemanager.compute.models.DataDisk
      description: the DataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.DataDisk.withWriteAcceleratorEnabled(java.lang.Boolean)
  id: withWriteAcceleratorEnabled(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: withWriteAcceleratorEnabled(Boolean writeAcceleratorEnabled)
  nameWithType: DataDisk.withWriteAcceleratorEnabled(Boolean writeAcceleratorEnabled)
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withWriteAcceleratorEnabled(Boolean writeAcceleratorEnabled)
  overload: com.azure.resourcemanager.compute.models.DataDisk.withWriteAcceleratorEnabled*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the writeAcceleratorEnabled property: Specifies whether writeAccelerator should be enabled or disabled on the disk.'
  syntax:
    content: public DataDisk withWriteAcceleratorEnabled(Boolean writeAcceleratorEnabled)
    parameters:
    - id: writeAcceleratorEnabled
      type: java.lang.Boolean
      description: the writeAcceleratorEnabled value to set.
    return:
      type: com.azure.resourcemanager.compute.models.DataDisk
      description: the DataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.DataDisk.writeAcceleratorEnabled()
  id: writeAcceleratorEnabled()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.DataDisk
  langs:
  - java
  name: writeAcceleratorEnabled()
  nameWithType: DataDisk.writeAcceleratorEnabled()
  fullName: com.azure.resourcemanager.compute.models.DataDisk.writeAcceleratorEnabled()
  overload: com.azure.resourcemanager.compute.models.DataDisk.writeAcceleratorEnabled*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the writeAcceleratorEnabled property: Specifies whether writeAccelerator should be enabled or disabled on the disk.'
  syntax:
    content: public Boolean writeAcceleratorEnabled()
    return:
      type: java.lang.Boolean
      description: the writeAcceleratorEnabled value.
references:
- uid: com.azure.resourcemanager.compute.models.DataDisk.DataDisk*
  name: DataDisk
  nameWithType: DataDisk.DataDisk
  fullName: com.azure.resourcemanager.compute.models.DataDisk.DataDisk
  package: com.azure.resourcemanager.compute.models
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.resourcemanager.compute.models.DataDisk.lun*
  name: lun
  nameWithType: DataDisk.lun
  fullName: com.azure.resourcemanager.compute.models.DataDisk.lun
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.withLun*
  name: withLun
  nameWithType: DataDisk.withLun
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withLun
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.compute.models.DataDisk.name*
  name: name
  nameWithType: DataDisk.name
  fullName: com.azure.resourcemanager.compute.models.DataDisk.name
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.withName*
  name: withName
  nameWithType: DataDisk.withName
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withName
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.VirtualHardDisk
  name: VirtualHardDisk
  nameWithType: VirtualHardDisk
  fullName: com.azure.resourcemanager.compute.models.VirtualHardDisk
- uid: com.azure.resourcemanager.compute.models.DataDisk.vhd*
  name: vhd
  nameWithType: DataDisk.vhd
  fullName: com.azure.resourcemanager.compute.models.DataDisk.vhd
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.withVhd*
  name: withVhd
  nameWithType: DataDisk.withVhd
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withVhd
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.image*
  name: image
  nameWithType: DataDisk.image
  fullName: com.azure.resourcemanager.compute.models.DataDisk.image
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.withImage*
  name: withImage
  nameWithType: DataDisk.withImage
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withImage
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.CachingTypes
  name: CachingTypes
  nameWithType: CachingTypes
  fullName: com.azure.resourcemanager.compute.models.CachingTypes
- uid: com.azure.resourcemanager.compute.models.DataDisk.caching*
  name: caching
  nameWithType: DataDisk.caching
  fullName: com.azure.resourcemanager.compute.models.DataDisk.caching
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.withCaching*
  name: withCaching
  nameWithType: DataDisk.withCaching
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withCaching
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.compute.models.DataDisk.writeAcceleratorEnabled*
  name: writeAcceleratorEnabled
  nameWithType: DataDisk.writeAcceleratorEnabled
  fullName: com.azure.resourcemanager.compute.models.DataDisk.writeAcceleratorEnabled
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.withWriteAcceleratorEnabled*
  name: withWriteAcceleratorEnabled
  nameWithType: DataDisk.withWriteAcceleratorEnabled
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withWriteAcceleratorEnabled
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DiskCreateOptionTypes
  name: DiskCreateOptionTypes
  nameWithType: DiskCreateOptionTypes
  fullName: com.azure.resourcemanager.compute.models.DiskCreateOptionTypes
- uid: com.azure.resourcemanager.compute.models.DataDisk.createOption*
  name: createOption
  nameWithType: DataDisk.createOption
  fullName: com.azure.resourcemanager.compute.models.DataDisk.createOption
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.withCreateOption*
  name: withCreateOption
  nameWithType: DataDisk.withCreateOption
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withCreateOption
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.resourcemanager.compute.models.DataDisk.diskSizeGB*
  name: diskSizeGB
  nameWithType: DataDisk.diskSizeGB
  fullName: com.azure.resourcemanager.compute.models.DataDisk.diskSizeGB
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.withDiskSizeGB*
  name: withDiskSizeGB
  nameWithType: DataDisk.withDiskSizeGB
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withDiskSizeGB
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ManagedDiskParameters
  name: ManagedDiskParameters
  nameWithType: ManagedDiskParameters
  fullName: com.azure.resourcemanager.compute.models.ManagedDiskParameters
- uid: com.azure.resourcemanager.compute.models.DataDisk.managedDisk*
  name: managedDisk
  nameWithType: DataDisk.managedDisk
  fullName: com.azure.resourcemanager.compute.models.DataDisk.managedDisk
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.withManagedDisk*
  name: withManagedDisk
  nameWithType: DataDisk.withManagedDisk
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withManagedDisk
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.toBeDetached*
  name: toBeDetached
  nameWithType: DataDisk.toBeDetached
  fullName: com.azure.resourcemanager.compute.models.DataDisk.toBeDetached
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.withToBeDetached*
  name: withToBeDetached
  nameWithType: DataDisk.withToBeDetached
  fullName: com.azure.resourcemanager.compute.models.DataDisk.withToBeDetached
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.DataDisk.validate*
  name: validate
  nameWithType: DataDisk.validate
  fullName: com.azure.resourcemanager.compute.models.DataDisk.validate
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
