### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync*"
fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync"
name: "analyzeImageByDomainInStreamAsync"
nameWithType: "ComputerVisionImpl.analyzeImageByDomainInStreamAsync"
members:
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)"
  name: "analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)"
  nameWithType: "ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)"
  summary: "This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  parameters:
  - description: "The domain-specific content to recognize."
    name: "model"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "analyzeImageByDomainInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter&text=AnalyzeImageByDomainInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Observable<DomainModelResults> analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter)"
  returns:
    description: "the observable to the DomainModelResults object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults&text=DomainModelResults\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter,com.microsoft.rest.ServiceCallback<com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults>)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter, ServiceCallback<DomainModelResults> serviceCallback)"
  name: "analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter, ServiceCallback<DomainModelResults> serviceCallback)"
  nameWithType: "ComputerVisionImpl.analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter, ServiceCallback<DomainModelResults> serviceCallback)"
  summary: "This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  parameters:
  - description: "The domain-specific content to recognize."
    name: "model"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "analyzeImageByDomainInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.AnalyzeImageByDomainInStreamOptionalParameter&text=AnalyzeImageByDomainInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults&text=DomainModelResults\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ServiceFuture<DomainModelResults> analyzeImageByDomainInStreamAsync(String model, byte[] image, AnalyzeImageByDomainInStreamOptionalParameter analyzeImageByDomainInStreamOptionalParameter, ServiceCallback<DomainModelResults> serviceCallback)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DomainModelResults&text=DomainModelResults\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.6-beta
