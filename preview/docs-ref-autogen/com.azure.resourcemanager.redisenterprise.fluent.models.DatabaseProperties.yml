### YamlMime:JavaType
uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties"
fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties"
name: "DatabaseProperties"
nameWithType: "DatabaseProperties"
summary: "Redis<wbr>Enterprise database properties Properties of Redis<wbr>Enterprise databases, as opposed to general resource properties like location, tags."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DatabaseProperties"
constructors:
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.DatabaseProperties()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.DatabaseProperties()"
  name: "DatabaseProperties()"
  nameWithType: "DatabaseProperties.DatabaseProperties()"
  syntax: "public DatabaseProperties()"
methods:
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.clientProtocol()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.clientProtocol()"
  name: "clientProtocol()"
  nameWithType: "DatabaseProperties.clientProtocol()"
  summary: "Get the client<wbr>Protocol property: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols."
  syntax: "public Protocol clientProtocol()"
  desc: "Get the clientProtocol property: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted."
  returns:
    description: "the clientProtocol value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.Protocol?alt=com.azure.resourcemanager.redisenterprise.models.Protocol&text=Protocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.clusteringPolicy()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.clusteringPolicy()"
  name: "clusteringPolicy()"
  nameWithType: "DatabaseProperties.clusteringPolicy()"
  summary: "Get the clustering<wbr>Policy property: Clustering policy - default is OSSCluster."
  syntax: "public ClusteringPolicy clusteringPolicy()"
  desc: "Get the clusteringPolicy property: Clustering policy - default is OSSCluster. Specified at create time."
  returns:
    description: "the clusteringPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ClusteringPolicy?alt=com.azure.resourcemanager.redisenterprise.models.ClusteringPolicy&text=ClusteringPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.evictionPolicy()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.evictionPolicy()"
  name: "evictionPolicy()"
  nameWithType: "DatabaseProperties.evictionPolicy()"
  summary: "Get the eviction<wbr>Policy property: Redis eviction policy - default is VolatileLRU."
  syntax: "public EvictionPolicy evictionPolicy()"
  desc: "Get the evictionPolicy property: Redis eviction policy - default is VolatileLRU."
  returns:
    description: "the evictionPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.EvictionPolicy?alt=com.azure.resourcemanager.redisenterprise.models.EvictionPolicy&text=EvictionPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.geoReplication()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.geoReplication()"
  name: "geoReplication()"
  nameWithType: "DatabaseProperties.geoReplication()"
  summary: "Get the geo<wbr>Replication property: Optional set of properties to configure geo replication for this database."
  syntax: "public DatabasePropertiesGeoReplication geoReplication()"
  desc: "Get the geoReplication property: Optional set of properties to configure geo replication for this database."
  returns:
    description: "the geoReplication value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabasePropertiesGeoReplication?alt=com.azure.resourcemanager.redisenterprise.models.DatabasePropertiesGeoReplication&text=DatabasePropertiesGeoReplication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.modules()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.modules()"
  name: "modules()"
  nameWithType: "DatabaseProperties.modules()"
  summary: "Get the modules property: Optional set of redis modules to enable in this database - modules can only be added at creation time."
  syntax: "public List<Module> modules()"
  desc: "Get the modules property: Optional set of redis modules to enable in this database - modules can only be added at creation time."
  returns:
    description: "the modules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redisenterprise.models.Module?alt=com.azure.resourcemanager.redisenterprise.models.Module&text=Module\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.persistence()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.persistence()"
  name: "persistence()"
  nameWithType: "DatabaseProperties.persistence()"
  summary: "Get the persistence property: Persistence settings."
  syntax: "public Persistence persistence()"
  desc: "Get the persistence property: Persistence settings."
  returns:
    description: "the persistence value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.Persistence?alt=com.azure.resourcemanager.redisenterprise.models.Persistence&text=Persistence\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.port()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.port()"
  name: "port()"
  nameWithType: "DatabaseProperties.port()"
  summary: "Get the port property: TCP port of the database endpoint."
  syntax: "public Integer port()"
  desc: "Get the port property: TCP port of the database endpoint. Specified at create time. Defaults to an available port."
  returns:
    description: "the port value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "DatabaseProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Current provisioning status of the database."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Current provisioning status of the database."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ProvisioningState?alt=com.azure.resourcemanager.redisenterprise.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.resourceState()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.resourceState()"
  name: "resourceState()"
  nameWithType: "DatabaseProperties.resourceState()"
  summary: "Get the resource<wbr>State property: Current resource status of the database."
  syntax: "public ResourceState resourceState()"
  desc: "Get the resourceState property: Current resource status of the database."
  returns:
    description: "the resourceState value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ResourceState?alt=com.azure.resourcemanager.redisenterprise.models.ResourceState&text=ResourceState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.validate()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.validate()"
  name: "validate()"
  nameWithType: "DatabaseProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withClientProtocol(com.azure.resourcemanager.redisenterprise.models.Protocol)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withClientProtocol(Protocol clientProtocol)"
  name: "withClientProtocol(Protocol clientProtocol)"
  nameWithType: "DatabaseProperties.withClientProtocol(Protocol clientProtocol)"
  summary: "Set the client<wbr>Protocol property: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols."
  parameters:
  - description: "the clientProtocol value to set."
    name: "clientProtocol"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.Protocol?alt=com.azure.resourcemanager.redisenterprise.models.Protocol&text=Protocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseProperties withClientProtocol(Protocol clientProtocol)"
  desc: "Set the clientProtocol property: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted."
  returns:
    description: "the DatabaseProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties&text=DatabaseProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withClusteringPolicy(com.azure.resourcemanager.redisenterprise.models.ClusteringPolicy)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withClusteringPolicy(ClusteringPolicy clusteringPolicy)"
  name: "withClusteringPolicy(ClusteringPolicy clusteringPolicy)"
  nameWithType: "DatabaseProperties.withClusteringPolicy(ClusteringPolicy clusteringPolicy)"
  summary: "Set the clustering<wbr>Policy property: Clustering policy - default is OSSCluster."
  parameters:
  - description: "the clusteringPolicy value to set."
    name: "clusteringPolicy"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ClusteringPolicy?alt=com.azure.resourcemanager.redisenterprise.models.ClusteringPolicy&text=ClusteringPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseProperties withClusteringPolicy(ClusteringPolicy clusteringPolicy)"
  desc: "Set the clusteringPolicy property: Clustering policy - default is OSSCluster. Specified at create time."
  returns:
    description: "the DatabaseProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties&text=DatabaseProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withEvictionPolicy(com.azure.resourcemanager.redisenterprise.models.EvictionPolicy)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withEvictionPolicy(EvictionPolicy evictionPolicy)"
  name: "withEvictionPolicy(EvictionPolicy evictionPolicy)"
  nameWithType: "DatabaseProperties.withEvictionPolicy(EvictionPolicy evictionPolicy)"
  summary: "Set the eviction<wbr>Policy property: Redis eviction policy - default is VolatileLRU."
  parameters:
  - description: "the evictionPolicy value to set."
    name: "evictionPolicy"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.EvictionPolicy?alt=com.azure.resourcemanager.redisenterprise.models.EvictionPolicy&text=EvictionPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseProperties withEvictionPolicy(EvictionPolicy evictionPolicy)"
  desc: "Set the evictionPolicy property: Redis eviction policy - default is VolatileLRU."
  returns:
    description: "the DatabaseProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties&text=DatabaseProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withGeoReplication(com.azure.resourcemanager.redisenterprise.models.DatabasePropertiesGeoReplication)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withGeoReplication(DatabasePropertiesGeoReplication geoReplication)"
  name: "withGeoReplication(DatabasePropertiesGeoReplication geoReplication)"
  nameWithType: "DatabaseProperties.withGeoReplication(DatabasePropertiesGeoReplication geoReplication)"
  summary: "Set the geo<wbr>Replication property: Optional set of properties to configure geo replication for this database."
  parameters:
  - description: "the geoReplication value to set."
    name: "geoReplication"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabasePropertiesGeoReplication?alt=com.azure.resourcemanager.redisenterprise.models.DatabasePropertiesGeoReplication&text=DatabasePropertiesGeoReplication\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseProperties withGeoReplication(DatabasePropertiesGeoReplication geoReplication)"
  desc: "Set the geoReplication property: Optional set of properties to configure geo replication for this database."
  returns:
    description: "the DatabaseProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties&text=DatabaseProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withModules(java.util.List<com.azure.resourcemanager.redisenterprise.models.Module>)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withModules(List<Module> modules)"
  name: "withModules(List<Module> modules)"
  nameWithType: "DatabaseProperties.withModules(List<Module> modules)"
  summary: "Set the modules property: Optional set of redis modules to enable in this database - modules can only be added at creation time."
  parameters:
  - description: "the modules value to set."
    name: "modules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redisenterprise.models.Module?alt=com.azure.resourcemanager.redisenterprise.models.Module&text=Module\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DatabaseProperties withModules(List<Module> modules)"
  desc: "Set the modules property: Optional set of redis modules to enable in this database - modules can only be added at creation time."
  returns:
    description: "the DatabaseProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties&text=DatabaseProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withPersistence(com.azure.resourcemanager.redisenterprise.models.Persistence)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withPersistence(Persistence persistence)"
  name: "withPersistence(Persistence persistence)"
  nameWithType: "DatabaseProperties.withPersistence(Persistence persistence)"
  summary: "Set the persistence property: Persistence settings."
  parameters:
  - description: "the persistence value to set."
    name: "persistence"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.Persistence?alt=com.azure.resourcemanager.redisenterprise.models.Persistence&text=Persistence\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseProperties withPersistence(Persistence persistence)"
  desc: "Set the persistence property: Persistence settings."
  returns:
    description: "the DatabaseProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties&text=DatabaseProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withPort(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties.withPort(Integer port)"
  name: "withPort(Integer port)"
  nameWithType: "DatabaseProperties.withPort(Integer port)"
  summary: "Set the port property: TCP port of the database endpoint."
  parameters:
  - description: "the port value to set."
    name: "port"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseProperties withPort(Integer port)"
  desc: "Set the port property: TCP port of the database endpoint. Specified at create time. Defaults to an available port."
  returns:
    description: "the DatabaseProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseProperties&text=DatabaseProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "RedisEnterprise database properties Properties of RedisEnterprise databases, as opposed to general resource properties like location, tags."
metadata: {}
package: "com.azure.resourcemanager.redisenterprise.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-redisenterprise:1.1.0-beta.1
