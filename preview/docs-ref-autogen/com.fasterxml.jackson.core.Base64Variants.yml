### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.Base64Variants
  id: Base64Variants
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core
  children:
  - com.fasterxml.jackson.core.Base64Variants.Base64Variants()
  - com.fasterxml.jackson.core.Base64Variants.MIME
  - com.fasterxml.jackson.core.Base64Variants.MIME_NO_LINEFEEDS
  - com.fasterxml.jackson.core.Base64Variants.MODIFIED_FOR_URL
  - com.fasterxml.jackson.core.Base64Variants.PEM
  - com.fasterxml.jackson.core.Base64Variants.getDefaultVariant()
  - com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)
  langs:
  - java
  name: Base64Variants
  nameWithType: Base64Variants
  fullName: com.fasterxml.jackson.core.Base64Variants
  type: Class
  package: com.fasterxml.jackson.core
  summary: >-
    Container for commonly used Base64 variants:

     *  <xref uid="com.fasterxml.jackson.core.Base64Variants.MIME" data-throw-if-not-resolved="false">#MIME</xref>
     *  <xref uid="com.fasterxml.jackson.core.Base64Variants.MIME_NO_LINEFEEDS" data-throw-if-not-resolved="false">#MIME_NO_LINEFEEDS</xref>
     *  <xref uid="com.fasterxml.jackson.core.Base64Variants.PEM" data-throw-if-not-resolved="false">#PEM</xref>
     *  <xref uid="com.fasterxml.jackson.core.Base64Variants.MODIFIED_FOR_URL" data-throw-if-not-resolved="false">#MODIFIED_FOR_URL</xref>
  syntax:
    content: public final class Base64Variants
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.Base64Variants.Base64Variants()
  id: Base64Variants()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variants
  langs:
  - java
  name: Base64Variants()
  nameWithType: Base64Variants.Base64Variants()
  fullName: com.fasterxml.jackson.core.Base64Variants.Base64Variants()
  overload: com.fasterxml.jackson.core.Base64Variants.Base64Variants*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: public Base64Variants()
- uid: com.fasterxml.jackson.core.Base64Variants.MIME
  id: MIME
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variants
  langs:
  - java
  name: MIME
  nameWithType: Base64Variants.MIME
  fullName: com.fasterxml.jackson.core.Base64Variants.MIME
  type: Field
  package: com.fasterxml.jackson.core
  summary: >-
    This variant is what most people would think of "the standard" Base64 encoding.


    See [wikipedia Base64 entry][] for details.


    Note that although this can be thought of as the standard variant, it is **not** the default for Jackson: no-linefeeds alternative is because of JSON requirement of escaping all linefeeds.



    [wikipedia Base64 entry]: http://en.wikipedia.org/wiki/Base64
  syntax:
    content: public static final Base64Variant MIME
    return:
      type: com.fasterxml.jackson.core.Base64Variant
- uid: com.fasterxml.jackson.core.Base64Variants.MIME_NO_LINEFEEDS
  id: MIME_NO_LINEFEEDS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variants
  langs:
  - java
  name: MIME_NO_LINEFEEDS
  nameWithType: Base64Variants.MIME_NO_LINEFEEDS
  fullName: com.fasterxml.jackson.core.Base64Variants.MIME_NO_LINEFEEDS
  type: Field
  package: com.fasterxml.jackson.core
  summary: Slightly non-standard modification of <xref uid="com.fasterxml.jackson.core.Base64Variants.MIME" data-throw-if-not-resolved="false">#MIME</xref> which does not use linefeeds (max line length set to infinite). Useful when linefeeds wouldn't work well (possibly in attributes), or for minor space savings (save 1 linefeed per 76 data chars, ie. ~1.4% savings).
  syntax:
    content: public static final Base64Variant MIME_NO_LINEFEEDS
    return:
      type: com.fasterxml.jackson.core.Base64Variant
- uid: com.fasterxml.jackson.core.Base64Variants.MODIFIED_FOR_URL
  id: MODIFIED_FOR_URL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variants
  langs:
  - java
  name: MODIFIED_FOR_URL
  nameWithType: Base64Variants.MODIFIED_FOR_URL
  fullName: com.fasterxml.jackson.core.Base64Variants.MODIFIED_FOR_URL
  type: Field
  package: com.fasterxml.jackson.core
  summary: 'This non-standard variant is usually used when encoded data needs to be passed via URLs (such as part of GET request). It differs from the base <xref uid="com.fasterxml.jackson.core.Base64Variants.MIME" data-throw-if-not-resolved="false">#MIME</xref> variant in multiple ways. First, no padding is used: this also means that it generally can not be written in multiple separate but adjacent chunks (which would not be the usual use case in any case). Also, no linefeeds are used (max line length set to infinite). And finally, two characters (plus and slash) that would need quoting in URLs are replaced with more optimal alternatives (hyphen and underscore, respectively).'
  syntax:
    content: public static final Base64Variant MODIFIED_FOR_URL
    return:
      type: com.fasterxml.jackson.core.Base64Variant
- uid: com.fasterxml.jackson.core.Base64Variants.PEM
  id: PEM
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variants
  langs:
  - java
  name: PEM
  nameWithType: Base64Variants.PEM
  fullName: com.fasterxml.jackson.core.Base64Variants.PEM
  type: Field
  package: com.fasterxml.jackson.core
  summary: 'This variant is the one that predates <xref uid="com.fasterxml.jackson.core.Base64Variants.MIME" data-throw-if-not-resolved="false">#MIME</xref>: it is otherwise identical, except that it mandates shorter line length.'
  syntax:
    content: public static final Base64Variant PEM
    return:
      type: com.fasterxml.jackson.core.Base64Variant
- uid: com.fasterxml.jackson.core.Base64Variants.getDefaultVariant()
  id: getDefaultVariant()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variants
  langs:
  - java
  name: getDefaultVariant()
  nameWithType: Base64Variants.getDefaultVariant()
  fullName: com.fasterxml.jackson.core.Base64Variants.getDefaultVariant()
  overload: com.fasterxml.jackson.core.Base64Variants.getDefaultVariant*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method used to get the default variant ("MIME\_NO\_LINEFEEDS") for cases where caller does not explicitly specify the variant. We will prefer no-linefeed version because linefeeds in JSON values must be escaped, making linefeed-containing variants sub-optimal.
  syntax:
    content: public static Base64Variant getDefaultVariant()
    return:
      type: com.fasterxml.jackson.core.Base64Variant
- uid: com.fasterxml.jackson.core.Base64Variants.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variants
  langs:
  - java
  name: valueOf(String name)
  nameWithType: Base64Variants.valueOf(String name)
  fullName: com.fasterxml.jackson.core.Base64Variants.valueOf(String name)
  overload: com.fasterxml.jackson.core.Base64Variants.valueOf*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public static Base64Variant valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.core.Base64Variant
  exceptions:
  - type: java.lang.IllegalArgumentException
references:
- uid: com.fasterxml.jackson.core.Base64Variants.Base64Variants*
  name: Base64Variants
  nameWithType: Base64Variants.Base64Variants
  fullName: com.fasterxml.jackson.core.Base64Variants.Base64Variants
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant
  name: Base64Variant
  nameWithType: Base64Variant
  fullName: com.fasterxml.jackson.core.Base64Variant
- uid: com.fasterxml.jackson.core.Base64Variants.getDefaultVariant*
  name: getDefaultVariant
  nameWithType: Base64Variants.getDefaultVariant
  fullName: com.fasterxml.jackson.core.Base64Variants.getDefaultVariant
  package: com.fasterxml.jackson.core
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.Base64Variants.valueOf*
  name: valueOf
  nameWithType: Base64Variants.valueOf
  fullName: com.fasterxml.jackson.core.Base64Variants.valueOf
  package: com.fasterxml.jackson.core
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
