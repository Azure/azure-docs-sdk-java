### YamlMime:JavaType
uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription"
fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription"
name: "NodeTypeDescription"
nameWithType: "NodeTypeDescription"
summary: "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class NodeTypeDescription"
constructors:
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.NodeTypeDescription()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.NodeTypeDescription()"
  name: "NodeTypeDescription()"
  nameWithType: "NodeTypeDescription.NodeTypeDescription()"
  syntax: "public NodeTypeDescription()"
methods:
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.applicationPorts()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.applicationPorts()"
  name: "applicationPorts()"
  nameWithType: "NodeTypeDescription.applicationPorts()"
  summary: "Get the application<wbr>Ports property: The range of ports from which cluster assigned port to Service Fabric applications."
  syntax: "public EndpointRangeDescription applicationPorts()"
  desc: "Get the applicationPorts property: The range of ports from which cluster assigned port to Service Fabric applications."
  returns:
    description: "the applicationPorts value."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.EndpointRangeDescription?alt=com.azure.resourcemanager.servicefabric.models.EndpointRangeDescription&text=EndpointRangeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.capacities()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.capacities()"
  name: "capacities()"
  nameWithType: "NodeTypeDescription.capacities()"
  summary: "Get the capacities property: The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has."
  syntax: "public Map<String,String> capacities()"
  desc: "Get the capacities property: The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has."
  returns:
    description: "the capacities value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.clientConnectionEndpointPort()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.clientConnectionEndpointPort()"
  name: "clientConnectionEndpointPort()"
  nameWithType: "NodeTypeDescription.clientConnectionEndpointPort()"
  summary: "Get the client<wbr>Connection<wbr>Endpoint<wbr>Port property: The TCP cluster management endpoint port."
  syntax: "public int clientConnectionEndpointPort()"
  desc: "Get the clientConnectionEndpointPort property: The TCP cluster management endpoint port."
  returns:
    description: "the clientConnectionEndpointPort value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.durabilityLevel()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.durabilityLevel()"
  name: "durabilityLevel()"
  nameWithType: "NodeTypeDescription.durabilityLevel()"
  summary: "Get the durability<wbr>Level property: The durability level of the node type."
  syntax: "public DurabilityLevel durabilityLevel()"
  desc: "Get the durabilityLevel property: The durability level of the node type. Learn about \\[DurabilityLevel\\](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n\\- Bronze - No privileges. This is the default. - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD. - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15\\_V2, G5 etc."
  returns:
    description: "the durabilityLevel value."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.DurabilityLevel?alt=com.azure.resourcemanager.servicefabric.models.DurabilityLevel&text=DurabilityLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.ephemeralPorts()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.ephemeralPorts()"
  name: "ephemeralPorts()"
  nameWithType: "NodeTypeDescription.ephemeralPorts()"
  summary: "Get the ephemeral<wbr>Ports property: The range of ephemeral ports that nodes in this node type should be configured with."
  syntax: "public EndpointRangeDescription ephemeralPorts()"
  desc: "Get the ephemeralPorts property: The range of ephemeral ports that nodes in this node type should be configured with."
  returns:
    description: "the ephemeralPorts value."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.EndpointRangeDescription?alt=com.azure.resourcemanager.servicefabric.models.EndpointRangeDescription&text=EndpointRangeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.httpGatewayEndpointPort()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.httpGatewayEndpointPort()"
  name: "httpGatewayEndpointPort()"
  nameWithType: "NodeTypeDescription.httpGatewayEndpointPort()"
  summary: "Get the http<wbr>Gateway<wbr>Endpoint<wbr>Port property: The HTTP cluster management endpoint port."
  syntax: "public int httpGatewayEndpointPort()"
  desc: "Get the httpGatewayEndpointPort property: The HTTP cluster management endpoint port."
  returns:
    description: "the httpGatewayEndpointPort value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.isPrimary()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.isPrimary()"
  name: "isPrimary()"
  nameWithType: "NodeTypeDescription.isPrimary()"
  summary: "Get the is<wbr>Primary property: The node type on which system services will run."
  syntax: "public boolean isPrimary()"
  desc: "Get the isPrimary property: The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
  returns:
    description: "the isPrimary value."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.isStateless()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.isStateless()"
  name: "isStateless()"
  nameWithType: "NodeTypeDescription.isStateless()"
  summary: "Get the is<wbr>Stateless property: Indicates if the node type can only host Stateless workloads."
  syntax: "public Boolean isStateless()"
  desc: "Get the isStateless property: Indicates if the node type can only host Stateless workloads."
  returns:
    description: "the isStateless value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.multipleAvailabilityZones()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.multipleAvailabilityZones()"
  name: "multipleAvailabilityZones()"
  nameWithType: "NodeTypeDescription.multipleAvailabilityZones()"
  summary: "Get the multiple<wbr>Availability<wbr>Zones property: Indicates if the node type is enabled to support multiple zones."
  syntax: "public Boolean multipleAvailabilityZones()"
  desc: "Get the multipleAvailabilityZones property: Indicates if the node type is enabled to support multiple zones."
  returns:
    description: "the multipleAvailabilityZones value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.name()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.name()"
  name: "name()"
  nameWithType: "NodeTypeDescription.name()"
  summary: "Get the name property: The name of the node type."
  syntax: "public String name()"
  desc: "Get the name property: The name of the node type."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.placementProperties()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.placementProperties()"
  name: "placementProperties()"
  nameWithType: "NodeTypeDescription.placementProperties()"
  summary: "Get the placement<wbr>Properties property: The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run."
  syntax: "public Map<String,String> placementProperties()"
  desc: "Get the placementProperties property: The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run."
  returns:
    description: "the placementProperties value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.reverseProxyEndpointPort()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.reverseProxyEndpointPort()"
  name: "reverseProxyEndpointPort()"
  nameWithType: "NodeTypeDescription.reverseProxyEndpointPort()"
  summary: "Get the reverse<wbr>Proxy<wbr>Endpoint<wbr>Port property: The endpoint used by reverse proxy."
  syntax: "public Integer reverseProxyEndpointPort()"
  desc: "Get the reverseProxyEndpointPort property: The endpoint used by reverse proxy."
  returns:
    description: "the reverseProxyEndpointPort value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.validate()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.validate()"
  name: "validate()"
  nameWithType: "NodeTypeDescription.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.vmInstanceCount()"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.vmInstanceCount()"
  name: "vmInstanceCount()"
  nameWithType: "NodeTypeDescription.vmInstanceCount()"
  summary: "Get the vm<wbr>Instance<wbr>Count property: VMInstance<wbr>Count should be 1 to n, where n indicates the number of VM instances corresponding to this node<wbr>Type."
  syntax: "public int vmInstanceCount()"
  desc: "Get the vmInstanceCount property: VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation."
  returns:
    description: "the vmInstanceCount value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withApplicationPorts(com.azure.resourcemanager.servicefabric.models.EndpointRangeDescription)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withApplicationPorts(EndpointRangeDescription applicationPorts)"
  name: "withApplicationPorts(EndpointRangeDescription applicationPorts)"
  nameWithType: "NodeTypeDescription.withApplicationPorts(EndpointRangeDescription applicationPorts)"
  summary: "Set the application<wbr>Ports property: The range of ports from which cluster assigned port to Service Fabric applications."
  parameters:
  - description: "the applicationPorts value to set."
    name: "applicationPorts"
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.EndpointRangeDescription?alt=com.azure.resourcemanager.servicefabric.models.EndpointRangeDescription&text=EndpointRangeDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeTypeDescription withApplicationPorts(EndpointRangeDescription applicationPorts)"
  desc: "Set the applicationPorts property: The range of ports from which cluster assigned port to Service Fabric applications."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withCapacities(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withCapacities(Map<String,String> capacities)"
  name: "withCapacities(Map<String,String> capacities)"
  nameWithType: "NodeTypeDescription.withCapacities(Map<String,String> capacities)"
  summary: "Set the capacities property: The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has."
  parameters:
  - description: "the capacities value to set."
    name: "capacities"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NodeTypeDescription withCapacities(Map<String,String> capacities)"
  desc: "Set the capacities property: The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withClientConnectionEndpointPort(int)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withClientConnectionEndpointPort(int clientConnectionEndpointPort)"
  name: "withClientConnectionEndpointPort(int clientConnectionEndpointPort)"
  nameWithType: "NodeTypeDescription.withClientConnectionEndpointPort(int clientConnectionEndpointPort)"
  summary: "Set the client<wbr>Connection<wbr>Endpoint<wbr>Port property: The TCP cluster management endpoint port."
  parameters:
  - description: "the clientConnectionEndpointPort value to set."
    name: "clientConnectionEndpointPort"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeTypeDescription withClientConnectionEndpointPort(int clientConnectionEndpointPort)"
  desc: "Set the clientConnectionEndpointPort property: The TCP cluster management endpoint port."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withDurabilityLevel(com.azure.resourcemanager.servicefabric.models.DurabilityLevel)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withDurabilityLevel(DurabilityLevel durabilityLevel)"
  name: "withDurabilityLevel(DurabilityLevel durabilityLevel)"
  nameWithType: "NodeTypeDescription.withDurabilityLevel(DurabilityLevel durabilityLevel)"
  summary: "Set the durability<wbr>Level property: The durability level of the node type."
  parameters:
  - description: "the durabilityLevel value to set."
    name: "durabilityLevel"
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.DurabilityLevel?alt=com.azure.resourcemanager.servicefabric.models.DurabilityLevel&text=DurabilityLevel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeTypeDescription withDurabilityLevel(DurabilityLevel durabilityLevel)"
  desc: "Set the durabilityLevel property: The durability level of the node type. Learn about \\[DurabilityLevel\\](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n\\- Bronze - No privileges. This is the default. - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD. - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15\\_V2, G5 etc."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withEphemeralPorts(com.azure.resourcemanager.servicefabric.models.EndpointRangeDescription)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withEphemeralPorts(EndpointRangeDescription ephemeralPorts)"
  name: "withEphemeralPorts(EndpointRangeDescription ephemeralPorts)"
  nameWithType: "NodeTypeDescription.withEphemeralPorts(EndpointRangeDescription ephemeralPorts)"
  summary: "Set the ephemeral<wbr>Ports property: The range of ephemeral ports that nodes in this node type should be configured with."
  parameters:
  - description: "the ephemeralPorts value to set."
    name: "ephemeralPorts"
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.EndpointRangeDescription?alt=com.azure.resourcemanager.servicefabric.models.EndpointRangeDescription&text=EndpointRangeDescription\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeTypeDescription withEphemeralPorts(EndpointRangeDescription ephemeralPorts)"
  desc: "Set the ephemeralPorts property: The range of ephemeral ports that nodes in this node type should be configured with."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withHttpGatewayEndpointPort(int)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withHttpGatewayEndpointPort(int httpGatewayEndpointPort)"
  name: "withHttpGatewayEndpointPort(int httpGatewayEndpointPort)"
  nameWithType: "NodeTypeDescription.withHttpGatewayEndpointPort(int httpGatewayEndpointPort)"
  summary: "Set the http<wbr>Gateway<wbr>Endpoint<wbr>Port property: The HTTP cluster management endpoint port."
  parameters:
  - description: "the httpGatewayEndpointPort value to set."
    name: "httpGatewayEndpointPort"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeTypeDescription withHttpGatewayEndpointPort(int httpGatewayEndpointPort)"
  desc: "Set the httpGatewayEndpointPort property: The HTTP cluster management endpoint port."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withIsPrimary(boolean)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withIsPrimary(boolean isPrimary)"
  name: "withIsPrimary(boolean isPrimary)"
  nameWithType: "NodeTypeDescription.withIsPrimary(boolean isPrimary)"
  summary: "Set the is<wbr>Primary property: The node type on which system services will run."
  parameters:
  - description: "the isPrimary value to set."
    name: "isPrimary"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeTypeDescription withIsPrimary(boolean isPrimary)"
  desc: "Set the isPrimary property: The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withIsStateless(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withIsStateless(Boolean isStateless)"
  name: "withIsStateless(Boolean isStateless)"
  nameWithType: "NodeTypeDescription.withIsStateless(Boolean isStateless)"
  summary: "Set the is<wbr>Stateless property: Indicates if the node type can only host Stateless workloads."
  parameters:
  - description: "the isStateless value to set."
    name: "isStateless"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeTypeDescription withIsStateless(Boolean isStateless)"
  desc: "Set the isStateless property: Indicates if the node type can only host Stateless workloads."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withMultipleAvailabilityZones(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withMultipleAvailabilityZones(Boolean multipleAvailabilityZones)"
  name: "withMultipleAvailabilityZones(Boolean multipleAvailabilityZones)"
  nameWithType: "NodeTypeDescription.withMultipleAvailabilityZones(Boolean multipleAvailabilityZones)"
  summary: "Set the multiple<wbr>Availability<wbr>Zones property: Indicates if the node type is enabled to support multiple zones."
  parameters:
  - description: "the multipleAvailabilityZones value to set."
    name: "multipleAvailabilityZones"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeTypeDescription withMultipleAvailabilityZones(Boolean multipleAvailabilityZones)"
  desc: "Set the multipleAvailabilityZones property: Indicates if the node type is enabled to support multiple zones."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withName(String name)"
  name: "withName(String name)"
  nameWithType: "NodeTypeDescription.withName(String name)"
  summary: "Set the name property: The name of the node type."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeTypeDescription withName(String name)"
  desc: "Set the name property: The name of the node type."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withPlacementProperties(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withPlacementProperties(Map<String,String> placementProperties)"
  name: "withPlacementProperties(Map<String,String> placementProperties)"
  nameWithType: "NodeTypeDescription.withPlacementProperties(Map<String,String> placementProperties)"
  summary: "Set the placement<wbr>Properties property: The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run."
  parameters:
  - description: "the placementProperties value to set."
    name: "placementProperties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NodeTypeDescription withPlacementProperties(Map<String,String> placementProperties)"
  desc: "Set the placementProperties property: The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withReverseProxyEndpointPort(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withReverseProxyEndpointPort(Integer reverseProxyEndpointPort)"
  name: "withReverseProxyEndpointPort(Integer reverseProxyEndpointPort)"
  nameWithType: "NodeTypeDescription.withReverseProxyEndpointPort(Integer reverseProxyEndpointPort)"
  summary: "Set the reverse<wbr>Proxy<wbr>Endpoint<wbr>Port property: The endpoint used by reverse proxy."
  parameters:
  - description: "the reverseProxyEndpointPort value to set."
    name: "reverseProxyEndpointPort"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeTypeDescription withReverseProxyEndpointPort(Integer reverseProxyEndpointPort)"
  desc: "Set the reverseProxyEndpointPort property: The endpoint used by reverse proxy."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withVmInstanceCount(int)"
  fullName: "com.azure.resourcemanager.servicefabric.models.NodeTypeDescription.withVmInstanceCount(int vmInstanceCount)"
  name: "withVmInstanceCount(int vmInstanceCount)"
  nameWithType: "NodeTypeDescription.withVmInstanceCount(int vmInstanceCount)"
  summary: "Set the vm<wbr>Instance<wbr>Count property: VMInstance<wbr>Count should be 1 to n, where n indicates the number of VM instances corresponding to this node<wbr>Type."
  parameters:
  - description: "the vmInstanceCount value to set."
    name: "vmInstanceCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NodeTypeDescription withVmInstanceCount(int vmInstanceCount)"
  desc: "Set the vmInstanceCount property: VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation."
  returns:
    description: "the NodeTypeDescription object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.NodeTypeDescription?alt=com.azure.resourcemanager.servicefabric.models.NodeTypeDescription&text=NodeTypeDescription\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
metadata: {}
package: "com.azure.resourcemanager.servicefabric.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabric:1.0.0-beta.2
