### YamlMime:ManagedReference
items:
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin
  id: BasicDigitalTwin
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.models
  children:
  - com.azure.digitaltwins.core.models.BasicDigitalTwin.BasicDigitalTwin()
  - com.azure.digitaltwins.core.models.BasicDigitalTwin.addCustomProperty(java.lang.String,java.lang.Object)
  - com.azure.digitaltwins.core.models.BasicDigitalTwin.getCustomProperties()
  - com.azure.digitaltwins.core.models.BasicDigitalTwin.getId()
  - com.azure.digitaltwins.core.models.BasicDigitalTwin.getMetadata()
  - com.azure.digitaltwins.core.models.BasicDigitalTwin.getTwinETag()
  - com.azure.digitaltwins.core.models.BasicDigitalTwin.setId(java.lang.String)
  - com.azure.digitaltwins.core.models.BasicDigitalTwin.setMetadata(com.azure.digitaltwins.core.models.DigitalTwinMetadata)
  - com.azure.digitaltwins.core.models.BasicDigitalTwin.setTwinETag(java.lang.String)
  langs:
  - java
  name: BasicDigitalTwin
  nameWithType: BasicDigitalTwin
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin
  type: Class
  package: com.azure.digitaltwins.core.models
  summary: An optional, helper class for deserializing a digital twin. Only properties with non-null values are included.
  syntax:
    content: public final class BasicDigitalTwin
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.BasicDigitalTwin()
  id: BasicDigitalTwin()
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.models.BasicDigitalTwin
  langs:
  - java
  name: BasicDigitalTwin()
  nameWithType: BasicDigitalTwin.BasicDigitalTwin()
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.BasicDigitalTwin()
  overload: com.azure.digitaltwins.core.models.BasicDigitalTwin.BasicDigitalTwin*
  type: Constructor
  package: com.azure.digitaltwins.core.models
  syntax:
    content: public BasicDigitalTwin()
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.addCustomProperty(java.lang.String,java.lang.Object)
  id: addCustomProperty(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.models.BasicDigitalTwin
  langs:
  - java
  name: addCustomProperty(String key, Object value)
  nameWithType: BasicDigitalTwin.addCustomProperty(String key, Object value)
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.addCustomProperty(String key, Object value)
  overload: com.azure.digitaltwins.core.models.BasicDigitalTwin.addCustomProperty*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: Adds an additional property to the digital twin. This field will contain any properties of the digital twin that are not already defined by the other strong types of this class.
  syntax:
    content: public BasicDigitalTwin addCustomProperty(String key, Object value)
    parameters:
    - id: key
      type: java.lang.String
      description: The key of the additional property to be added to the digital twin.
    - id: value
      type: java.lang.Object
      description: The value of the additional property to be added to the digital twin.
    return:
      type: com.azure.digitaltwins.core.models.BasicDigitalTwin
      description: The BasicDigitalTwin object itself.
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.getCustomProperties()
  id: getCustomProperties()
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.models.BasicDigitalTwin
  langs:
  - java
  name: getCustomProperties()
  nameWithType: BasicDigitalTwin.getCustomProperties()
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.getCustomProperties()
  overload: com.azure.digitaltwins.core.models.BasicDigitalTwin.getCustomProperties*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: Gets the additional properties of the digital twin. This field will contain any properties of the digital twin that are not already defined by the other strong types of this class.
  syntax:
    content: public Map<String,Object> getCustomProperties()
    return:
      type: java.util.Map<java.lang.String,java.lang.Object>
      description: The additional properties of the digital twin. This field will contain any properties of the digital twin that are not already defined by the other strong types of this class.
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.getId()
  id: getId()
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.models.BasicDigitalTwin
  langs:
  - java
  name: getId()
  nameWithType: BasicDigitalTwin.getId()
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.getId()
  overload: com.azure.digitaltwins.core.models.BasicDigitalTwin.getId*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: Gets the unique Id of the digital twin in a digital twins instance. This field is present on every digital twin.
  syntax:
    content: public String getId()
    return:
      type: java.lang.String
      description: The unique Id of the digital twin in a digital twins instance. This field is present on every digital twin.
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.getMetadata()
  id: getMetadata()
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.models.BasicDigitalTwin
  langs:
  - java
  name: getMetadata()
  nameWithType: BasicDigitalTwin.getMetadata()
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.getMetadata()
  overload: com.azure.digitaltwins.core.models.BasicDigitalTwin.getMetadata*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: Gets the information about the model a digital twin conforms to. This field is present on every digital twin.
  syntax:
    content: public DigitalTwinMetadata getMetadata()
    return:
      type: com.azure.digitaltwins.core.models.DigitalTwinMetadata
      description: The information about the model a digital twin conforms to. This field is present on every digital twin.
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.getTwinETag()
  id: getTwinETag()
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.models.BasicDigitalTwin
  langs:
  - java
  name: getTwinETag()
  nameWithType: BasicDigitalTwin.getTwinETag()
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.getTwinETag()
  overload: com.azure.digitaltwins.core.models.BasicDigitalTwin.getTwinETag*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: Gets a string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232.
  syntax:
    content: public String getTwinETag()
    return:
      type: java.lang.String
      description: A string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232.
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.setId(java.lang.String)
  id: setId(java.lang.String)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.models.BasicDigitalTwin
  langs:
  - java
  name: setId(String id)
  nameWithType: BasicDigitalTwin.setId(String id)
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.setId(String id)
  overload: com.azure.digitaltwins.core.models.BasicDigitalTwin.setId*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: Sets the unique Id of the digital twin in a digital twins instance. This field is present on every digital twin.
  syntax:
    content: public BasicDigitalTwin setId(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: The unique Id of the digital twin in a digital twins instance. This field is present on every digital twin.
    return:
      type: com.azure.digitaltwins.core.models.BasicDigitalTwin
      description: The BasicDigitalTwin object itself.
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.setMetadata(com.azure.digitaltwins.core.models.DigitalTwinMetadata)
  id: setMetadata(com.azure.digitaltwins.core.models.DigitalTwinMetadata)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.models.BasicDigitalTwin
  langs:
  - java
  name: setMetadata(DigitalTwinMetadata metadata)
  nameWithType: BasicDigitalTwin.setMetadata(DigitalTwinMetadata metadata)
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.setMetadata(DigitalTwinMetadata metadata)
  overload: com.azure.digitaltwins.core.models.BasicDigitalTwin.setMetadata*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: Sets the information about the model a digital twin conforms to. This field is present on every digital twin.
  syntax:
    content: public BasicDigitalTwin setMetadata(DigitalTwinMetadata metadata)
    parameters:
    - id: metadata
      type: com.azure.digitaltwins.core.models.DigitalTwinMetadata
      description: The information about the model a digital twin conforms to. This field is present on every digital twin.
    return:
      type: com.azure.digitaltwins.core.models.BasicDigitalTwin
      description: The BasicDigitalTwin object itself.
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.setTwinETag(java.lang.String)
  id: setTwinETag(java.lang.String)
  artifact: com.azure:azure-digitaltwins-core:1.0.0-beta.1
  parent: com.azure.digitaltwins.core.models.BasicDigitalTwin
  langs:
  - java
  name: setTwinETag(String twinETag)
  nameWithType: BasicDigitalTwin.setTwinETag(String twinETag)
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.setTwinETag(String twinETag)
  overload: com.azure.digitaltwins.core.models.BasicDigitalTwin.setTwinETag*
  type: Method
  package: com.azure.digitaltwins.core.models
  summary: Sets a string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232.
  syntax:
    content: public BasicDigitalTwin setTwinETag(String twinETag)
    parameters:
    - id: twinETag
      type: java.lang.String
      description: A string representing a weak ETag for the entity that this request performs an operation against, as per RFC7232.
    return:
      type: com.azure.digitaltwins.core.models.BasicDigitalTwin
      description: The BasicDigitalTwin object itself.
references:
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.BasicDigitalTwin*
  name: BasicDigitalTwin
  nameWithType: BasicDigitalTwin.BasicDigitalTwin
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.BasicDigitalTwin
  package: com.azure.digitaltwins.core.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.getId*
  name: getId
  nameWithType: BasicDigitalTwin.getId
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.getId
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.setId*
  name: setId
  nameWithType: BasicDigitalTwin.setId
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.setId
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.getTwinETag*
  name: getTwinETag
  nameWithType: BasicDigitalTwin.getTwinETag
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.getTwinETag
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.setTwinETag*
  name: setTwinETag
  nameWithType: BasicDigitalTwin.setTwinETag
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.setTwinETag
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.DigitalTwinMetadata
  name: DigitalTwinMetadata
  nameWithType: DigitalTwinMetadata
  fullName: com.azure.digitaltwins.core.models.DigitalTwinMetadata
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.getMetadata*
  name: getMetadata
  nameWithType: BasicDigitalTwin.getMetadata
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.getMetadata
  package: com.azure.digitaltwins.core.models
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.setMetadata*
  name: setMetadata
  nameWithType: BasicDigitalTwin.setMetadata
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.setMetadata
  package: com.azure.digitaltwins.core.models
- uid: java.util.Map<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.getCustomProperties*
  name: getCustomProperties
  nameWithType: BasicDigitalTwin.getCustomProperties
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.getCustomProperties
  package: com.azure.digitaltwins.core.models
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.digitaltwins.core.models.BasicDigitalTwin.addCustomProperty*
  name: addCustomProperty
  nameWithType: BasicDigitalTwin.addCustomProperty
  fullName: com.azure.digitaltwins.core.models.BasicDigitalTwin.addCustomProperty
  package: com.azure.digitaltwins.core.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
