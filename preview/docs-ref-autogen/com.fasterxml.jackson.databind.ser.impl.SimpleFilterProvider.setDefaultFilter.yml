### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.setDefaultFilter*"
fullName: "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.setDefaultFilter"
name: "setDefaultFilter"
nameWithType: "SimpleFilterProvider.setDefaultFilter"
members:
- uid: "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.setDefaultFilter(com.fasterxml.jackson.databind.ser.BeanPropertyFilter)"
  fullName: "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.setDefaultFilter(BeanPropertyFilter f)"
  name: "setDefaultFilter(BeanPropertyFilter f)"
  nameWithType: "SimpleFilterProvider.setDefaultFilter(BeanPropertyFilter f)"
  summary: "Method for defining filter to return for \"unknown\" filters; cases where there is no mapping from given id to an explicit filter."
  parameters:
  - description: "Filter to return when no filter is found for given id"
    name: "f"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.BeanPropertyFilter?alt=com.fasterxml.jackson.databind.ser.BeanPropertyFilter&text=BeanPropertyFilter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SimpleFilterProvider setDefaultFilter(BeanPropertyFilter f)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider?alt=com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider&text=SimpleFilterProvider\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.setDefaultFilter(com.fasterxml.jackson.databind.ser.PropertyFilter)"
  fullName: "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.setDefaultFilter(PropertyFilter f)"
  name: "setDefaultFilter(PropertyFilter f)"
  nameWithType: "SimpleFilterProvider.setDefaultFilter(PropertyFilter f)"
  parameters:
  - name: "f"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.PropertyFilter?alt=com.fasterxml.jackson.databind.ser.PropertyFilter&text=PropertyFilter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SimpleFilterProvider setDefaultFilter(PropertyFilter f)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider?alt=com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider&text=SimpleFilterProvider\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.setDefaultFilter(com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter)"
  fullName: "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.setDefaultFilter(SimpleBeanPropertyFilter f)"
  name: "setDefaultFilter(SimpleBeanPropertyFilter f)"
  nameWithType: "SimpleFilterProvider.setDefaultFilter(SimpleBeanPropertyFilter f)"
  summary: "Overloaded variant just to resolve \"ties\" when using <xref uid=\"com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SimpleBeanPropertyFilter\"></xref>."
  parameters:
  - name: "f"
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter?alt=com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter&text=SimpleBeanPropertyFilter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SimpleFilterProvider setDefaultFilter(SimpleBeanPropertyFilter f)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider?alt=com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider&text=SimpleFilterProvider\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.impl"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
