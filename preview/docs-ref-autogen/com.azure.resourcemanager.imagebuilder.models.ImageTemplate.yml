### YamlMime:JavaType
uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate"
fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate"
name: "ImageTemplate"
nameWithType: "ImageTemplate"
summary: "An immutable client-side representation of Image<wbr>Template."
syntax: "public interface ImageTemplate"
methods:
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.buildTimeoutInMinutes()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.buildTimeoutInMinutes()"
  name: "buildTimeoutInMinutes()"
  nameWithType: "ImageTemplate.buildTimeoutInMinutes()"
  summary: "Gets the build<wbr>Timeout<wbr>InMinutes property: Maximum duration to wait while building the image template (includes all customizations, validations, and distributions)."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer buildTimeoutInMinutes()"
  desc: "Gets the buildTimeoutInMinutes property: Maximum duration to wait while building the image template (includes all customizations, validations, and distributions). Omit or specify 0 to use the default (4 hours)."
  returns:
    description: "the buildTimeoutInMinutes value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.cancel()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.cancel()"
  name: "cancel()"
  nameWithType: "ImageTemplate.cancel()"
  summary: "Cancel the long running image build based on the image template."
  modifiers:
  - "abstract"
  syntax: "public abstract void cancel()"
  desc: "Cancel the long running image build based on the image template."
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.cancel(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.cancel(Context context)"
  name: "cancel(Context context)"
  nameWithType: "ImageTemplate.cancel(Context context)"
  summary: "Cancel the long running image build based on the image template."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void cancel(Context context)"
  desc: "Cancel the long running image build based on the image template."
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.customize()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.customize()"
  name: "customize()"
  nameWithType: "ImageTemplate.customize()"
  summary: "Gets the customize property: Specifies the properties used to describe the customization steps of the image, like Image source etc."
  modifiers:
  - "abstract"
  syntax: "public abstract List<ImageTemplateCustomizer> customize()"
  desc: "Gets the customize property: Specifies the properties used to describe the customization steps of the image, like Image source etc."
  returns:
    description: "the customize value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.imagebuilder.models.ImageTemplateCustomizer?alt=com.azure.resourcemanager.imagebuilder.models.ImageTemplateCustomizer&text=ImageTemplateCustomizer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.distribute()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.distribute()"
  name: "distribute()"
  nameWithType: "ImageTemplate.distribute()"
  summary: "Gets the distribute property: The distribution targets where the image output needs to go to."
  modifiers:
  - "abstract"
  syntax: "public abstract List<ImageTemplateDistributor> distribute()"
  desc: "Gets the distribute property: The distribution targets where the image output needs to go to."
  returns:
    description: "the distribute value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.imagebuilder.models.ImageTemplateDistributor?alt=com.azure.resourcemanager.imagebuilder.models.ImageTemplateDistributor&text=ImageTemplateDistributor\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.exactStagingResourceGroup()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.exactStagingResourceGroup()"
  name: "exactStagingResourceGroup()"
  nameWithType: "ImageTemplate.exactStagingResourceGroup()"
  summary: "Gets the exact<wbr>Staging<wbr>Resource<wbr>Group property: The staging resource group id in the same subscription as the image template that will be used to build the image."
  modifiers:
  - "abstract"
  syntax: "public abstract String exactStagingResourceGroup()"
  desc: "Gets the exactStagingResourceGroup property: The staging resource group id in the same subscription as the image template that will be used to build the image. This read-only field differs from 'stagingResourceGroup' only if the value specified in the 'stagingResourceGroup' field is empty."
  returns:
    description: "the exactStagingResourceGroup value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.id()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.id()"
  name: "id()"
  nameWithType: "ImageTemplate.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.identity()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.identity()"
  name: "identity()"
  nameWithType: "ImageTemplate.identity()"
  summary: "Gets the identity property: The identity of the image template, if configured."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageTemplateIdentity identity()"
  desc: "Gets the identity property: The identity of the image template, if configured."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.imagebuilder.models.ImageTemplateIdentity?alt=com.azure.resourcemanager.imagebuilder.models.ImageTemplateIdentity&text=ImageTemplateIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.innerModel()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.innerModel()"
  name: "innerModel()"
  nameWithType: "ImageTemplate.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>imagebuilder.<wbr>fluent.<wbr>models.<wbr>Image<wbr>Template<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageTemplateInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.imagebuilder.fluent.models.ImageTemplateInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.imagebuilder.fluent.models.ImageTemplateInner?alt=com.azure.resourcemanager.imagebuilder.fluent.models.ImageTemplateInner&text=ImageTemplateInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.lastRunStatus()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.lastRunStatus()"
  name: "lastRunStatus()"
  nameWithType: "ImageTemplate.lastRunStatus()"
  summary: "Gets the last<wbr>Run<wbr>Status property: State of 'run' that is currently executing or was last executed."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageTemplateLastRunStatus lastRunStatus()"
  desc: "Gets the lastRunStatus property: State of 'run' that is currently executing or was last executed."
  returns:
    description: "the lastRunStatus value."
    type: "<xref href=\"com.azure.resourcemanager.imagebuilder.models.ImageTemplateLastRunStatus?alt=com.azure.resourcemanager.imagebuilder.models.ImageTemplateLastRunStatus&text=ImageTemplateLastRunStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.location()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.location()"
  name: "location()"
  nameWithType: "ImageTemplate.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.name()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.name()"
  name: "name()"
  nameWithType: "ImageTemplate.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.provisioningError()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.provisioningError()"
  name: "provisioningError()"
  nameWithType: "ImageTemplate.provisioningError()"
  summary: "Gets the provisioning<wbr>Error property: Provisioning error, if any."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningError provisioningError()"
  desc: "Gets the provisioningError property: Provisioning error, if any."
  returns:
    description: "the provisioningError value."
    type: "<xref href=\"com.azure.resourcemanager.imagebuilder.models.ProvisioningError?alt=com.azure.resourcemanager.imagebuilder.models.ProvisioningError&text=ProvisioningError\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.provisioningState()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ImageTemplate.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: Provisioning state of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: Provisioning state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.imagebuilder.models.ProvisioningState?alt=com.azure.resourcemanager.imagebuilder.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.refresh()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.refresh()"
  name: "refresh()"
  nameWithType: "ImageTemplate.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageTemplate refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.imagebuilder.models.ImageTemplate?alt=com.azure.resourcemanager.imagebuilder.models.ImageTemplate&text=ImageTemplate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "ImageTemplate.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImageTemplate refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.imagebuilder.models.ImageTemplate?alt=com.azure.resourcemanager.imagebuilder.models.ImageTemplate&text=ImageTemplate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.region()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.region()"
  name: "region()"
  nameWithType: "ImageTemplate.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.regionName()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.regionName()"
  name: "regionName()"
  nameWithType: "ImageTemplate.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.resourceGroupName()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "ImageTemplate.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.run()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.run()"
  name: "run()"
  nameWithType: "ImageTemplate.run()"
  summary: "Create artifacts from a existing image template."
  modifiers:
  - "abstract"
  syntax: "public abstract void run()"
  desc: "Create artifacts from a existing image template."
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.run(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.run(Context context)"
  name: "run(Context context)"
  nameWithType: "ImageTemplate.run(Context context)"
  summary: "Create artifacts from a existing image template."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void run(Context context)"
  desc: "Create artifacts from a existing image template."
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.source()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.source()"
  name: "source()"
  nameWithType: "ImageTemplate.source()"
  summary: "Gets the source property: Specifies the properties used to describe the source image."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageTemplateSource source()"
  desc: "Gets the source property: Specifies the properties used to describe the source image."
  returns:
    description: "the source value."
    type: "<xref href=\"com.azure.resourcemanager.imagebuilder.models.ImageTemplateSource?alt=com.azure.resourcemanager.imagebuilder.models.ImageTemplateSource&text=ImageTemplateSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.stagingResourceGroup()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.stagingResourceGroup()"
  name: "stagingResourceGroup()"
  nameWithType: "ImageTemplate.stagingResourceGroup()"
  summary: "Gets the staging<wbr>Resource<wbr>Group property: The staging resource group id in the same subscription as the image template that will be used to build the image."
  modifiers:
  - "abstract"
  syntax: "public abstract String stagingResourceGroup()"
  desc: "Gets the stagingResourceGroup property: The staging resource group id in the same subscription as the image template that will be used to build the image. If this field is empty, a resource group with a random name will be created. If the resource group specified in this field doesn't exist, it will be created with the same name. If the resource group specified exists, it must be empty and in the same region as the image template. The resource group created will be deleted during template deletion if this field is empty or the resource group specified doesn't exist, but if the resource group specified exists the resources created in the resource group will be deleted during template deletion and the resource group itself will remain."
  returns:
    description: "the stagingResourceGroup value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.tags()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.tags()"
  name: "tags()"
  nameWithType: "ImageTemplate.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.type()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.type()"
  name: "type()"
  nameWithType: "ImageTemplate.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.update()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.update()"
  name: "update()"
  nameWithType: "ImageTemplate.update()"
  summary: "Begins update for the Image<wbr>Template resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageTemplate.Update update()"
  desc: "Begins update for the ImageTemplate resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.imagebuilder.models.ImageTemplate.Update?alt=com.azure.resourcemanager.imagebuilder.models.ImageTemplate.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.validation()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.validation()"
  name: "validation()"
  nameWithType: "ImageTemplate.validation()"
  summary: "Gets the validation property: Configuration options and list of validations to be performed on the resulting image."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageTemplatePropertiesValidate validation()"
  desc: "Gets the validation property: Configuration options and list of validations to be performed on the resulting image."
  returns:
    description: "the validation value."
    type: "<xref href=\"com.azure.resourcemanager.imagebuilder.models.ImageTemplatePropertiesValidate?alt=com.azure.resourcemanager.imagebuilder.models.ImageTemplatePropertiesValidate&text=ImageTemplatePropertiesValidate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.vmProfile()"
  fullName: "com.azure.resourcemanager.imagebuilder.models.ImageTemplate.vmProfile()"
  name: "vmProfile()"
  nameWithType: "ImageTemplate.vmProfile()"
  summary: "Gets the vm<wbr>Profile property: Describes how virtual machine is set up to build images."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageTemplateVmProfile vmProfile()"
  desc: "Gets the vmProfile property: Describes how virtual machine is set up to build images."
  returns:
    description: "the vmProfile value."
    type: "<xref href=\"com.azure.resourcemanager.imagebuilder.models.ImageTemplateVmProfile?alt=com.azure.resourcemanager.imagebuilder.models.ImageTemplateVmProfile&text=ImageTemplateVmProfile\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of ImageTemplate."
metadata: {}
package: "com.azure.resourcemanager.imagebuilder.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-imagebuilder:1.0.0-beta.3
