### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Sets.newLinkedHashSet*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>newLinkedHashSet"
name: "<E>newLinkedHashSet"
nameWithType: "Sets.<E>newLinkedHashSet"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>newLinkedHashSet()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>newLinkedHashSet()"
  name: "<E>newLinkedHashSet()"
  nameWithType: "Sets.<E>newLinkedHashSet()"
  summary: "Creates a *mutable*, empty `LinkedHashSet` instance.\n\n**Note:** if mutability is not required, use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSet.&lt;E&gt;of()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ImmutableSet#of()\"></xref> instead.\n\n**Note for Java 7 and later:** this method is now unnecessary and should be treated as deprecated. Instead, use the `LinkedHashSet` constructor directly, taking advantage of the new [\"diamond\" syntax][diamond_ syntax].\n\n\n[diamond_ syntax]: http://goo.gl/iz2Wi"
  syntax: "public static LinkedHashSet<E> <E>newLinkedHashSet()"
  returns:
    description: "a new, empty <code>LinkedHashSet</code>"
    type: "<xref href=\"java.util.LinkedHashSet?alt=java.util.LinkedHashSet&text=LinkedHashSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>newLinkedHashSet(java.lang.Iterable<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Sets.<E>newLinkedHashSet(Iterable<? extends E> elements)"
  name: "<E>newLinkedHashSet(Iterable<? extends E> elements)"
  nameWithType: "Sets.<E>newLinkedHashSet(Iterable<? extends E> elements)"
  summary: "Creates a *mutable* `LinkedHashSet` instance containing the given elements in order.\n\n**Note:** if mutability is not required and the elements are non-null, use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSet.&lt;E&gt;copyOf(java.lang.Iterable&lt;? extends E&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ImmutableSet#copyOf(Iterable)\"></xref> instead.\n\n**Note for Java 7 and later:** if `elements` is a <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Collection\"></xref>, you don't need this method. Instead, use the `LinkedHashSet` constructor directly, taking advantage of the new [\"diamond\" syntax][diamond_ syntax].\n\nOverall, this method is not very useful and will likely be deprecated in the future.\n\n\n[diamond_ syntax]: http://goo.gl/iz2Wi"
  parameters:
  - description: "the elements that the set should contain, in order"
    name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static LinkedHashSet<E> <E>newLinkedHashSet(Iterable<? extends E> elements)"
  returns:
    description: "a new <code>LinkedHashSet</code> containing those elements (minus duplicates)"
    type: "<xref href=\"java.util.LinkedHashSet?alt=java.util.LinkedHashSet&text=LinkedHashSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
