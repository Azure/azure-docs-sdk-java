### YamlMime:JavaType
uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient"
fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient"
name: "ContainerRegistryBlobAsyncClient"
nameWithType: "ContainerRegistryBlobAsyncClient"
summary: "This class provides a client that exposes operations to push and pull images into container registry."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ContainerRegistryBlobAsyncClient**"
methods:
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.deleteBlob(java.lang.String)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.deleteBlob(String digest)"
  name: "deleteBlob(String digest)"
  nameWithType: "ContainerRegistryBlobAsyncClient.deleteBlob(String digest)"
  summary: "Delete the image associated with the given digest"
  parameters:
  - description: "The digest for the given image layer."
    name: "digest"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteBlob(String digest)"
  desc: "Delete the image associated with the given digest"
  returns:
    description: "The completion signal."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.deleteBlobWithResponse(java.lang.String)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.deleteBlobWithResponse(String digest)"
  name: "deleteBlobWithResponse(String digest)"
  nameWithType: "ContainerRegistryBlobAsyncClient.deleteBlobWithResponse(String digest)"
  summary: "Delete the image associated with the given digest"
  parameters:
  - description: "The digest for the given image layer."
    name: "digest"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> deleteBlobWithResponse(String digest)"
  desc: "Delete the image associated with the given digest"
  returns:
    description: "The REST response for the completion."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.deleteManifest(java.lang.String)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.deleteManifest(String digest)"
  name: "deleteManifest(String digest)"
  nameWithType: "ContainerRegistryBlobAsyncClient.deleteManifest(String digest)"
  summary: "Delete the manifest associated with the given digest."
  parameters:
  - description: "The digest of the manifest."
    name: "digest"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteManifest(String digest)"
  desc: "Delete the manifest associated with the given digest. We currently only support downloading OCI manifests."
  returns:
    description: "The completion."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.deleteManifestWithResponse(java.lang.String)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.deleteManifestWithResponse(String digest)"
  name: "deleteManifestWithResponse(String digest)"
  nameWithType: "ContainerRegistryBlobAsyncClient.deleteManifestWithResponse(String digest)"
  summary: "Delete the manifest associated with the given digest."
  parameters:
  - description: "The digest of the manifest."
    name: "digest"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> deleteManifestWithResponse(String digest)"
  desc: "Delete the manifest associated with the given digest. We currently only support downloading OCI manifests."
  returns:
    description: "The REST response for completion."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.downloadManifest(java.lang.String)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.downloadManifest(String tagOrDigest)"
  name: "downloadManifest(String tagOrDigest)"
  nameWithType: "ContainerRegistryBlobAsyncClient.downloadManifest(String tagOrDigest)"
  summary: "Download the manifest associated with the given tag or digest."
  parameters:
  - description: "Manifest reference which can be tag or digest."
    name: "tagOrDigest"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<DownloadManifestResult> downloadManifest(String tagOrDigest)"
  desc: "Download the manifest associated with the given tag or digest. We currently only support downloading OCI manifests."
  returns:
    description: "The manifest associated with the given tag or digest."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.containers.containerregistry.models.DownloadManifestResult?alt=com.azure.containers.containerregistry.models.DownloadManifestResult&text=DownloadManifestResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.downloadManifestWithResponse(java.lang.String,java.util.Collection<com.azure.containers.containerregistry.models.ManifestMediaType>)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.downloadManifestWithResponse(String tagOrDigest, Collection<ManifestMediaType> mediaTypes)"
  name: "downloadManifestWithResponse(String tagOrDigest, Collection<ManifestMediaType> mediaTypes)"
  nameWithType: "ContainerRegistryBlobAsyncClient.downloadManifestWithResponse(String tagOrDigest, Collection<ManifestMediaType> mediaTypes)"
  summary: "Download the manifest associated with the given tag or digest."
  parameters:
  - description: "Manifest reference which can be tag or digest."
    name: "tagOrDigest"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "List of <xref uid=\"com.azure.containers.containerregistry.models.ManifestMediaType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ManifestMediaType\"></xref> to request."
    name: "mediaTypes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html\">Collection</a>&lt;<xref href=\"com.azure.containers.containerregistry.models.ManifestMediaType?alt=com.azure.containers.containerregistry.models.ManifestMediaType&text=ManifestMediaType\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Response<DownloadManifestResult>> downloadManifestWithResponse(String tagOrDigest, Collection<ManifestMediaType> mediaTypes)"
  desc: "Download the manifest associated with the given tag or digest. We currently only support downloading OCI manifests."
  returns:
    description: "The response for the manifest associated with the given tag or digest."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.containers.containerregistry.models.DownloadManifestResult?alt=com.azure.containers.containerregistry.models.DownloadManifestResult&text=DownloadManifestResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.downloadStream(java.lang.String)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.downloadStream(String digest)"
  name: "downloadStream(String digest)"
  nameWithType: "ContainerRegistryBlobAsyncClient.downloadStream(String digest)"
  summary: "Download the blob\\\\layer associated with the given digest."
  parameters:
  - description: "The digest for the given image layer."
    name: "digest"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<DownloadBlobAsyncResult> downloadStream(String digest)"
  desc: "Download the blob\\\\layer associated with the given digest."
  returns:
    description: "The image associated with the given digest."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.containers.containerregistry.models.DownloadBlobAsyncResult?alt=com.azure.containers.containerregistry.models.DownloadBlobAsyncResult&text=DownloadBlobAsyncResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.getEndpoint()"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.getEndpoint()"
  name: "getEndpoint()"
  nameWithType: "ContainerRegistryBlobAsyncClient.getEndpoint()"
  summary: "This method returns the complete registry endpoint."
  syntax: "public String getEndpoint()"
  desc: "This method returns the complete registry endpoint."
  returns:
    description: "The registry endpoint including the authority."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.getRepositoryName()"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.getRepositoryName()"
  name: "getRepositoryName()"
  nameWithType: "ContainerRegistryBlobAsyncClient.getRepositoryName()"
  summary: "This method returns the registry's repository on which operations are being performed."
  syntax: "public String getRepositoryName()"
  desc: "This method returns the registry's repository on which operations are being performed."
  returns:
    description: "The name of the repository"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadBlob(com.azure.core.util.BinaryData)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadBlob(BinaryData data)"
  name: "uploadBlob(BinaryData data)"
  nameWithType: "ContainerRegistryBlobAsyncClient.uploadBlob(BinaryData data)"
  summary: "Uploads a blob to the repository."
  parameters:
  - description: "The blob\\image content that needs to be uploaded."
    name: "data"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<UploadBlobResult> uploadBlob(BinaryData data)"
  desc: "Uploads a blob to the repository. The client currently uploads the entire blob\\\\layer as a single unit.\n\nThe blob is read into memory and then an upload operation is performed as a single operation. We currently do not support breaking the layer into multiple chunks and uploading them one at a time"
  returns:
    description: "The operation result."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.containers.containerregistry.models.UploadBlobResult?alt=com.azure.containers.containerregistry.models.UploadBlobResult&text=UploadBlobResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadBlob(reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadBlob(Flux<ByteBuffer> data)"
  name: "uploadBlob(Flux<ByteBuffer> data)"
  nameWithType: "ContainerRegistryBlobAsyncClient.uploadBlob(Flux<ByteBuffer> data)"
  summary: "Uploads a blob to the repository."
  parameters:
  - description: "The blob\\image content that needs to be uploaded."
    name: "data"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;"
  syntax: "public Mono<UploadBlobResult> uploadBlob(Flux<ByteBuffer> data)"
  desc: "Uploads a blob to the repository. The client currently uploads the entire blob\\\\layer as a single unit.\n\nThe blob is read into memory and then an upload operation is performed as a single operation. We currently do not support breaking the layer into multiple chunks and uploading them one at a time"
  returns:
    description: "The rest response containing the operation result."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.containers.containerregistry.models.UploadBlobResult?alt=com.azure.containers.containerregistry.models.UploadBlobResult&text=UploadBlobResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadManifest(com.azure.containers.containerregistry.models.OciImageManifest)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadManifest(OciImageManifest manifest)"
  name: "uploadManifest(OciImageManifest manifest)"
  nameWithType: "ContainerRegistryBlobAsyncClient.uploadManifest(OciImageManifest manifest)"
  summary: "Upload the Oci manifest to the repository."
  parameters:
  - description: "The OciManifest that needs to be uploaded."
    name: "manifest"
    type: "<xref href=\"com.azure.containers.containerregistry.models.OciImageManifest?alt=com.azure.containers.containerregistry.models.OciImageManifest&text=OciImageManifest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<UploadManifestResult> uploadManifest(OciImageManifest manifest)"
  desc: "Upload the Oci manifest to the repository. The upload is done as a single operation."
  returns:
    description: "operation result."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.containers.containerregistry.models.UploadManifestResult?alt=com.azure.containers.containerregistry.models.UploadManifestResult&text=UploadManifestResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadManifest(com.azure.containers.containerregistry.models.UploadManifestOptions)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadManifest(UploadManifestOptions options)"
  name: "uploadManifest(UploadManifestOptions options)"
  nameWithType: "ContainerRegistryBlobAsyncClient.uploadManifest(UploadManifestOptions options)"
  summary: "Uploads a manifest to the repository."
  parameters:
  - description: "The options for the upload manifest operation."
    name: "options"
    type: "<xref href=\"com.azure.containers.containerregistry.models.UploadManifestOptions?alt=com.azure.containers.containerregistry.models.UploadManifestOptions&text=UploadManifestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<UploadManifestResult> uploadManifest(UploadManifestOptions options)"
  desc: "Uploads a manifest to the repository. The client currently only supports uploading OciManifests to the repository. And this operation makes the assumption that the data provided is a valid OCI manifest.\n\nAlso, the data is read into memory and then an upload operation is performed as a single operation."
  returns:
    description: "operation result."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.containers.containerregistry.models.UploadManifestResult?alt=com.azure.containers.containerregistry.models.UploadManifestResult&text=UploadManifestResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadManifestWithResponse(com.azure.containers.containerregistry.models.UploadManifestOptions)"
  fullName: "com.azure.containers.containerregistry.specialized.ContainerRegistryBlobAsyncClient.uploadManifestWithResponse(UploadManifestOptions options)"
  name: "uploadManifestWithResponse(UploadManifestOptions options)"
  nameWithType: "ContainerRegistryBlobAsyncClient.uploadManifestWithResponse(UploadManifestOptions options)"
  summary: "Uploads a manifest to the repository."
  parameters:
  - description: "The options for the upload manifest operation."
    name: "options"
    type: "<xref href=\"com.azure.containers.containerregistry.models.UploadManifestOptions?alt=com.azure.containers.containerregistry.models.UploadManifestOptions&text=UploadManifestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<UploadManifestResult>> uploadManifestWithResponse(UploadManifestOptions options)"
  desc: "Uploads a manifest to the repository. The client currently only supports uploading OciManifests to the repository. And this operation makes the assumption that the data provided is a valid OCI manifest.\n\nAlso, the data is read into memory and then an upload operation is performed as a single operation."
  returns:
    description: "The rest response containing the operation result."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.containers.containerregistry.models.UploadManifestResult?alt=com.azure.containers.containerregistry.models.UploadManifestResult&text=UploadManifestResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "This class provides a client that exposes operations to push and pull images into container registry. It exposes methods that upload, download and delete artifacts from the registry i.e. images and manifests.\n\nView <xref uid=\"com.azure.containers.containerregistry.specialized.ContainerRegistryBlobClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"this\"></xref> for additional ways to construct the client."
metadata: {}
package: "com.azure.containers.containerregistry.specialized"
artifact: com.azure:azure-containers-containerregistry:1.1.0-beta.3
