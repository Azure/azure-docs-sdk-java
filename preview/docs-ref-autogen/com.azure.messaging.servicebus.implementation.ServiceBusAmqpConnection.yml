### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection"
  id: "ServiceBusAmqpConnection"
  parent: "com.azure.messaging.servicebus.implementation"
  children:
  - "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.createReceiveLink(java.lang.String,java.lang.String,com.azure.messaging.servicebus.models.ReceiveMode,boolean,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType)"
  - "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.createSendLink(java.lang.String,java.lang.String,com.azure.core.amqp.AmqpRetryOptions)"
  - "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.getManagementNode(java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType)"
  langs:
  - "java"
  name: "ServiceBusAmqpConnection"
  nameWithType: "ServiceBusAmqpConnection"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection"
  type: "Interface"
  package: "com.azure.messaging.servicebus.implementation"
  syntax:
    content: "public interface ServiceBusAmqpConnection extends AmqpConnection"
  implements:
  - "com.azure.core.amqp.AmqpConnection"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.createReceiveLink(java.lang.String,java.lang.String,com.azure.messaging.servicebus.models.ReceiveMode,boolean,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType)"
  id: "createReceiveLink(java.lang.String,java.lang.String,com.azure.messaging.servicebus.models.ReceiveMode,boolean,java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType)"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection"
  langs:
  - "java"
  name: "createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode, boolean isSession, String transferEntityPath, MessagingEntityType entityType)"
  nameWithType: "ServiceBusAmqpConnection.createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode, boolean isSession, String transferEntityPath, MessagingEntityType entityType)"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode, boolean isSession, String transferEntityPath, MessagingEntityType entityType)"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.createReceiveLink*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Creates or gets an existing receive link. The same link is returned if there is an existing receive link with the same `linkName`. Otherwise, a new link is created and returned."
  syntax:
    content: "public abstract Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode, boolean isSession, String transferEntityPath, MessagingEntityType entityType)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
      description: "The name of the link."
    - id: "entityPath"
      type: "java.lang.String"
      description: "The remote address to connect to for the message broker."
    - id: "receiveMode"
      type: "com.azure.messaging.servicebus.models.ReceiveMode"
      description: "<xref uid=\"com.azure.messaging.servicebus.models.ReceiveMode\" data-throw-if-not-resolved=\"false\">ReceiveMode</xref> to use when creating the link."
    - id: "isSession"
      type: "boolean"
    - id: "transferEntityPath"
      type: "java.lang.String"
      description: "Path if the events should be transferred to another link after being received from this\n     link."
    - id: "entityType"
      type: "com.azure.messaging.servicebus.implementation.MessagingEntityType"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpReceiveLink>"
      description: "A new or existing receive link that is connected to the given <code>entityPath</code>."
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.createSendLink(java.lang.String,java.lang.String,com.azure.core.amqp.AmqpRetryOptions)"
  id: "createSendLink(java.lang.String,java.lang.String,com.azure.core.amqp.AmqpRetryOptions)"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection"
  langs:
  - "java"
  name: "createSendLink(String linkName, String entityPath, AmqpRetryOptions retryOptions)"
  nameWithType: "ServiceBusAmqpConnection.createSendLink(String linkName, String entityPath, AmqpRetryOptions retryOptions)"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.createSendLink(String linkName, String entityPath, AmqpRetryOptions retryOptions)"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.createSendLink*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Creates or gets a send link. The same link is returned if there is an existing send link with the same `linkName`. Otherwise, a new link is created and returned."
  syntax:
    content: "public abstract Mono<AmqpSendLink> createSendLink(String linkName, String entityPath, AmqpRetryOptions retryOptions)"
    parameters:
    - id: "linkName"
      type: "java.lang.String"
      description: "The name of the link."
    - id: "entityPath"
      type: "java.lang.String"
      description: "The remote address to connect to for the message broker."
    - id: "retryOptions"
      type: "com.azure.core.amqp.AmqpRetryOptions"
      description: "Options to use when creating the link."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpSendLink>"
      description: "A new or existing send link that is connected to the given <code>entityPath</code>."
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.getManagementNode(java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType)"
  id: "getManagementNode(java.lang.String,com.azure.messaging.servicebus.implementation.MessagingEntityType)"
  parent: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection"
  langs:
  - "java"
  name: "getManagementNode(String entityPath, MessagingEntityType entityType)"
  nameWithType: "ServiceBusAmqpConnection.getManagementNode(String entityPath, MessagingEntityType entityType)"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.getManagementNode(String entityPath, MessagingEntityType entityType)"
  overload: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.getManagementNode*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Gets the management node for a Service Bus resource and performs metadata and management operations using it."
  syntax:
    content: "public abstract Mono<ServiceBusManagementNode> getManagementNode(String entityPath, MessagingEntityType entityType)"
    parameters:
    - id: "entityPath"
      type: "java.lang.String"
      description: "Name of the Service bus resource."
    - id: "entityType"
      type: "com.azure.messaging.servicebus.implementation.MessagingEntityType"
    return:
      type: "reactor.core.publisher.Mono<com.azure.messaging.servicebus.implementation.ServiceBusManagementNode>"
      description: "A Mono that completes with that resources's management node."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.messaging.servicebus.implementation.MessagingEntityType"
  name: "MessagingEntityType"
  nameWithType: "MessagingEntityType"
  fullName: "com.azure.messaging.servicebus.implementation.MessagingEntityType"
- uid: "reactor.core.publisher.Mono<com.azure.messaging.servicebus.implementation.ServiceBusManagementNode>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.servicebus.implementation.ServiceBusManagementNode"
    name: "ServiceBusManagementNode"
    fullName: "com.azure.messaging.servicebus.implementation.ServiceBusManagementNode"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.getManagementNode*"
  name: "getManagementNode"
  nameWithType: "ServiceBusAmqpConnection.getManagementNode"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.getManagementNode"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.core.amqp.AmqpRetryOptions"
  spec.java:
  - uid: "com.azure.core.amqp.AmqpRetryOptions"
    name: "AmqpRetryOptions"
    fullName: "com.azure.core.amqp.AmqpRetryOptions"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpSendLink>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.implementation.AmqpSendLink"
    name: "AmqpSendLink"
    fullName: "com.azure.core.amqp.implementation.AmqpSendLink"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.createSendLink*"
  name: "createSendLink"
  nameWithType: "ServiceBusAmqpConnection.createSendLink"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.createSendLink"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.models.ReceiveMode"
  name: "ReceiveMode"
  nameWithType: "ReceiveMode"
  fullName: "com.azure.messaging.servicebus.models.ReceiveMode"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "reactor.core.publisher.Mono<com.azure.core.amqp.implementation.AmqpReceiveLink>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
    name: "AmqpReceiveLink"
    fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.createReceiveLink*"
  name: "createReceiveLink"
  nameWithType: "ServiceBusAmqpConnection.createReceiveLink"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusAmqpConnection.createReceiveLink"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.core.amqp.AmqpConnection"
  name: "AmqpConnection"
  nameWithType: "AmqpConnection"
  fullName: "com.azure.core.amqp.AmqpConnection"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.messaging.servicebus.implementation.ServiceBusManagementNode"
  name: "ServiceBusManagementNode"
  nameWithType: "ServiceBusManagementNode"
  fullName: "com.azure.messaging.servicebus.implementation.ServiceBusManagementNode"
- uid: "com.azure.core.amqp.implementation.AmqpSendLink"
  name: "AmqpSendLink"
  nameWithType: "AmqpSendLink"
  fullName: "com.azure.core.amqp.implementation.AmqpSendLink"
- uid: "com.azure.core.amqp.implementation.AmqpReceiveLink"
  name: "AmqpReceiveLink"
  nameWithType: "AmqpReceiveLink"
  fullName: "com.azure.core.amqp.implementation.AmqpReceiveLink"
