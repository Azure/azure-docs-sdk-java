### YamlMime:JavaEnum
uid: "com.azure.storage.blob.implementation.models.QueryFormatType"
fullName: "com.azure.storage.blob.implementation.models.QueryFormatType"
name: "QueryFormatType"
nameWithType: "QueryFormatType"
summary: "Defines values for QueryFormatType."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum QueryFormatType extends Enum<QueryFormatType>"
fields:
- uid: "com.azure.storage.blob.implementation.models.QueryFormatType.ARROW"
  fullName: "com.azure.storage.blob.implementation.models.QueryFormatType.ARROW"
  name: "ARROW"
  nameWithType: "QueryFormatType.ARROW"
  summary: "Enum value arrow."
- uid: "com.azure.storage.blob.implementation.models.QueryFormatType.DELIMITED"
  fullName: "com.azure.storage.blob.implementation.models.QueryFormatType.DELIMITED"
  name: "DELIMITED"
  nameWithType: "QueryFormatType.DELIMITED"
  summary: "Enum value delimited."
- uid: "com.azure.storage.blob.implementation.models.QueryFormatType.JSON"
  fullName: "com.azure.storage.blob.implementation.models.QueryFormatType.JSON"
  name: "JSON"
  nameWithType: "QueryFormatType.JSON"
  summary: "Enum value json."
methods:
- uid: "com.azure.storage.blob.implementation.models.QueryFormatType.fromString(java.lang.String)"
  fullName: "com.azure.storage.blob.implementation.models.QueryFormatType.fromString(String value)"
  name: "fromString(String value)"
  nameWithType: "QueryFormatType.fromString(String value)"
  summary: "Parses a serialized value to a QueryFormatType instance."
  parameters:
  - description: "the serialized value to parse."
    name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static QueryFormatType fromString(String value)"
  returns:
    description: "the parsed QueryFormatType object, or null if unable to parse."
    type: "<xref href=\"com.azure.storage.blob.implementation.models.QueryFormatType?alt=com.azure.storage.blob.implementation.models.QueryFormatType&text=QueryFormatType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.implementation.models.QueryFormatType.toString()"
  fullName: "com.azure.storage.blob.implementation.models.QueryFormatType.toString()"
  name: "toString()"
  nameWithType: "QueryFormatType.toString()"
  overridden: "java.lang.Enum.toString()"
  syntax: "public String toString()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.implementation.models.QueryFormatType.valueOf(java.lang.String)"
  fullName: "com.azure.storage.blob.implementation.models.QueryFormatType.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "QueryFormatType.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static QueryFormatType valueOf(String name)"
  returns:
    type: "<xref href=\"com.azure.storage.blob.implementation.models.QueryFormatType?alt=com.azure.storage.blob.implementation.models.QueryFormatType&text=QueryFormatType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.implementation.models.QueryFormatType.values()"
  fullName: "com.azure.storage.blob.implementation.models.QueryFormatType.values()"
  name: "values()"
  nameWithType: "QueryFormatType.values()"
  syntax: "public static QueryFormatType[] values()"
  returns:
    type: "<xref href=\"com.azure.storage.blob.implementation.models.QueryFormatType?alt=com.azure.storage.blob.implementation.models.QueryFormatType&text=QueryFormatType\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.azure.storage.blob.implementation.models"
artifact: com.azure:azure-storage-blob:12.11.0-beta.2
