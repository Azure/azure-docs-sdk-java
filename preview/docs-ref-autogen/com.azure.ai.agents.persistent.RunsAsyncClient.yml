### YamlMime:JavaType
uid: "com.azure.ai.agents.persistent.RunsAsyncClient"
fullName: "com.azure.ai.agents.persistent.RunsAsyncClient"
name: "RunsAsyncClient"
nameWithType: "RunsAsyncClient"
summary: "Initializes a new instance of the asynchronous Persistent<wbr>Agents<wbr>Administration<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **RunsAsyncClient**"
methods:
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.cancelRun(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.cancelRun(String threadId, String runId)"
  name: "cancelRun(String threadId, String runId)"
  nameWithType: "RunsAsyncClient.cancelRun(String threadId, String runId)"
  summary: "Cancels a run of an in\\\\u2010progress thread."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the run."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<ThreadRun> cancelRun(String threadId, String runId)"
  desc: "Cancels a run of an in\\\\u2010progress thread."
  returns:
    description: "data representing a single evaluation run of an agent thread on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.ThreadRun?alt=com.azure.ai.agents.persistent.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.cancelRunWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.cancelRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  name: "cancelRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  nameWithType: "RunsAsyncClient.cancelRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  summary: "Cancels a run of an in\\\\u2010progress thread."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the run."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> cancelRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  desc: "Cancels a run of an in\\\\u2010progress thread.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n         type: String (Required)\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n             type: String (Required)\n         }\n     ]\n     created_at: long (Required)\n     expires_at: Long (Required)\n     started_at: Long (Required)\n     completed_at: Long (Required)\n     cancelled_at: Long (Required)\n     failed_at: Long (Required)\n     incomplete_details (Required): {\n         reason: String(max_completion_tokens/max_prompt_tokens) (Required)\n     }\n     usage (Required): {\n         completion_tokens: long (Required)\n         prompt_tokens: long (Required)\n         total_tokens: long (Required)\n     }\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     max_prompt_tokens: Integer (Required)\n     max_completion_tokens: Integer (Required)\n     truncation_strategy (Required): {\n         type: String(auto/last_messages) (Required)\n         last_messages: Integer (Optional)\n     }\n     tool_choice: BinaryData (Required)\n     response_format: BinaryData (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n     tool_resources (Optional): {\n         code_interpreter (Optional): {\n             file_ids (Optional): [\n                 String (Optional)\n             ]\n             data_sources (Optional): [\n                  (Optional){\n                     uri: String (Required)\n                     type: String(uri_asset/id_asset) (Required)\n                 }\n             ]\n         }\n         file_search (Optional): {\n             vector_store_ids (Optional): [\n                 String (Optional)\n             ]\n             vector_stores (Optional): [\n                  (Optional){\n                     name: String (Required)\n                     configuration (Required): {\n                         data_sources (Required): [\n                             (recursive schema, see above)\n                         ]\n                     }\n                 }\n             ]\n         }\n         azure_ai_search (Optional): {\n             indexes (Optional): [\n                  (Optional){\n                     index_connection_id: String (Optional)\n                     index_name: String (Optional)\n                     query_type: String(simple/semantic/vector/vector_simple_hybrid/vector_semantic_hybrid) (Optional)\n                     top_k: Integer (Optional)\n                     filter: String (Optional)\n                     index_asset_id: String (Optional)\n                 }\n             ]\n         }\n     }\n     parallel_tool_calls: boolean (Required)\n }\n```"
  returns:
    description: "data representing a single evaluation run of an agent thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.createRun(com.azure.ai.agents.persistent.models.CreateRunOptions)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.createRun(CreateRunOptions options)"
  name: "createRun(CreateRunOptions options)"
  nameWithType: "RunsAsyncClient.createRun(CreateRunOptions options)"
  summary: "Creates a new run for an agent thread."
  parameters:
  - description: "Options for createRun API."
    name: "options"
    type: "<xref href=\"com.azure.ai.agents.persistent.models.CreateRunOptions?alt=com.azure.ai.agents.persistent.models.CreateRunOptions&text=CreateRunOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ThreadRun> createRun(CreateRunOptions options)"
  desc: "Creates a new run for an agent thread."
  returns:
    description: "data representing a single evaluation run of an agent thread on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.ThreadRun?alt=com.azure.ai.agents.persistent.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.createRunStreaming(com.azure.ai.agents.persistent.models.CreateRunOptions)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.createRunStreaming(CreateRunOptions options)"
  name: "createRunStreaming(CreateRunOptions options)"
  nameWithType: "RunsAsyncClient.createRunStreaming(CreateRunOptions options)"
  summary: "Creates a new streaming run for an agent thread."
  parameters:
  - description: "Options for createRun API."
    name: "options"
    type: "<xref href=\"com.azure.ai.agents.persistent.models.CreateRunOptions?alt=com.azure.ai.agents.persistent.models.CreateRunOptions&text=CreateRunOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Flux<StreamUpdate>> createRunStreaming(CreateRunOptions options)"
  desc: "Creates a new streaming run for an agent thread."
  returns:
    description: "A flux streaming updates from the run."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.StreamUpdate?alt=com.azure.ai.agents.persistent.models.StreamUpdate&text=StreamUpdate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.createRunWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.createRunWithResponse(String threadId, BinaryData createRunRequest, RequestOptions requestOptions)"
  name: "createRunWithResponse(String threadId, BinaryData createRunRequest, RequestOptions requestOptions)"
  nameWithType: "RunsAsyncClient.createRunWithResponse(String threadId, BinaryData createRunRequest, RequestOptions requestOptions)"
  summary: "Creates a new run for an agent thread."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The createRunRequest parameter."
    name: "createRunRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> createRunWithResponse(String threadId, BinaryData createRunRequest, RequestOptions requestOptions)"
  desc: "Creates a new run for an agent thread.\n\n**Query Parameters**\n\n    | ----------- | ------------ | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name        | Type         | Required | Description                                                                                                                                                                                                                                        |\n    | include\\[\\] | List<String> | No       | A list of additional fields to include in the response. Currently the only supported value is \\`step\\_details.tool\\_calls\\[\\*\\].file\\_search.results\\[\\*\\].content\\` to fetch the file search result content. In the form of \",\" separated string. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     assistant_id: String (Required)\n     model: String (Optional)\n     instructions: String (Optional)\n     additional_instructions: String (Optional)\n     additional_messages (Optional): [\n          (Optional){\n             role: String(user/assistant) (Required)\n             content: BinaryData (Required)\n             attachments (Optional): [\n                  (Optional){\n                     file_id: String (Optional)\n                     data_source (Optional): {\n                         uri: String (Required)\n                         type: String(uri_asset/id_asset) (Required)\n                     }\n                     tools (Required): [\n                         BinaryData (Required)\n                     ]\n                 }\n             ]\n             metadata (Optional): {\n                 String: String (Required)\n             }\n         }\n     ]\n     tools (Optional): [\n          (Optional){\n             type: String (Required)\n         }\n     ]\n     stream: Boolean (Optional)\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     max_prompt_tokens: Integer (Optional)\n     max_completion_tokens: Integer (Optional)\n     truncation_strategy (Optional): {\n         type: String(auto/last_messages) (Required)\n         last_messages: Integer (Optional)\n     }\n     tool_choice: BinaryData (Optional)\n     response_format: BinaryData (Optional)\n     parallel_tool_calls: Boolean (Optional)\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n         type: String (Required)\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n             type: String (Required)\n         }\n     ]\n     created_at: long (Required)\n     expires_at: Long (Required)\n     started_at: Long (Required)\n     completed_at: Long (Required)\n     cancelled_at: Long (Required)\n     failed_at: Long (Required)\n     incomplete_details (Required): {\n         reason: String(max_completion_tokens/max_prompt_tokens) (Required)\n     }\n     usage (Required): {\n         completion_tokens: long (Required)\n         prompt_tokens: long (Required)\n         total_tokens: long (Required)\n     }\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     max_prompt_tokens: Integer (Required)\n     max_completion_tokens: Integer (Required)\n     truncation_strategy (Required): {\n         type: String(auto/last_messages) (Required)\n         last_messages: Integer (Optional)\n     }\n     tool_choice: BinaryData (Required)\n     response_format: BinaryData (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n     tool_resources (Optional): {\n         code_interpreter (Optional): {\n             file_ids (Optional): [\n                 String (Optional)\n             ]\n             data_sources (Optional): [\n                  (Optional){\n                     uri: String (Required)\n                     type: String(uri_asset/id_asset) (Required)\n                 }\n             ]\n         }\n         file_search (Optional): {\n             vector_store_ids (Optional): [\n                 String (Optional)\n             ]\n             vector_stores (Optional): [\n                  (Optional){\n                     name: String (Required)\n                     configuration (Required): {\n                         data_sources (Required): [\n                             (recursive schema, see above)\n                         ]\n                     }\n                 }\n             ]\n         }\n         azure_ai_search (Optional): {\n             indexes (Optional): [\n                  (Optional){\n                     index_connection_id: String (Optional)\n                     index_name: String (Optional)\n                     query_type: String(simple/semantic/vector/vector_simple_hybrid/vector_semantic_hybrid) (Optional)\n                     top_k: Integer (Optional)\n                     filter: String (Optional)\n                     index_asset_id: String (Optional)\n                 }\n             ]\n         }\n     }\n     parallel_tool_calls: boolean (Required)\n }\n```"
  returns:
    description: "data representing a single evaluation run of an agent thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.getRun(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.getRun(String threadId, String runId)"
  name: "getRun(String threadId, String runId)"
  nameWithType: "RunsAsyncClient.getRun(String threadId, String runId)"
  summary: "Gets an existing run from an existing thread."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the run."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<ThreadRun> getRun(String threadId, String runId)"
  desc: "Gets an existing run from an existing thread."
  returns:
    description: "an existing run from an existing thread on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.ThreadRun?alt=com.azure.ai.agents.persistent.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.getRunWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.getRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  name: "getRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  nameWithType: "RunsAsyncClient.getRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  summary: "Gets an existing run from an existing thread."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the run."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getRunWithResponse(String threadId, String runId, RequestOptions requestOptions)"
  desc: "Gets an existing run from an existing thread.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n         type: String (Required)\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n             type: String (Required)\n         }\n     ]\n     created_at: long (Required)\n     expires_at: Long (Required)\n     started_at: Long (Required)\n     completed_at: Long (Required)\n     cancelled_at: Long (Required)\n     failed_at: Long (Required)\n     incomplete_details (Required): {\n         reason: String(max_completion_tokens/max_prompt_tokens) (Required)\n     }\n     usage (Required): {\n         completion_tokens: long (Required)\n         prompt_tokens: long (Required)\n         total_tokens: long (Required)\n     }\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     max_prompt_tokens: Integer (Required)\n     max_completion_tokens: Integer (Required)\n     truncation_strategy (Required): {\n         type: String(auto/last_messages) (Required)\n         last_messages: Integer (Optional)\n     }\n     tool_choice: BinaryData (Required)\n     response_format: BinaryData (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n     tool_resources (Optional): {\n         code_interpreter (Optional): {\n             file_ids (Optional): [\n                 String (Optional)\n             ]\n             data_sources (Optional): [\n                  (Optional){\n                     uri: String (Required)\n                     type: String(uri_asset/id_asset) (Required)\n                 }\n             ]\n         }\n         file_search (Optional): {\n             vector_store_ids (Optional): [\n                 String (Optional)\n             ]\n             vector_stores (Optional): [\n                  (Optional){\n                     name: String (Required)\n                     configuration (Required): {\n                         data_sources (Required): [\n                             (recursive schema, see above)\n                         ]\n                     }\n                 }\n             ]\n         }\n         azure_ai_search (Optional): {\n             indexes (Optional): [\n                  (Optional){\n                     index_connection_id: String (Optional)\n                     index_name: String (Optional)\n                     query_type: String(simple/semantic/vector/vector_simple_hybrid/vector_semantic_hybrid) (Optional)\n                     top_k: Integer (Optional)\n                     filter: String (Optional)\n                     index_asset_id: String (Optional)\n                 }\n             ]\n         }\n     }\n     parallel_tool_calls: boolean (Required)\n }\n```"
  returns:
    description: "an existing run from an existing thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.listRuns(java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.listRuns(String threadId)"
  name: "listRuns(String threadId)"
  nameWithType: "RunsAsyncClient.listRuns(String threadId)"
  summary: "Gets a list of runs for a specified thread."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<ThreadRun> listRuns(String threadId)"
  desc: "Gets a list of runs for a specified thread."
  returns:
    description: "a list of runs for a specified thread as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.agents.persistent.models.ThreadRun?alt=com.azure.ai.agents.persistent.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.listRuns(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.listRuns(String threadId, RequestOptions requestOptions)"
  name: "listRuns(String threadId, RequestOptions requestOptions)"
  nameWithType: "RunsAsyncClient.listRuns(String threadId, RequestOptions requestOptions)"
  summary: "Gets a list of runs for a specified thread."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listRuns(String threadId, RequestOptions requestOptions)"
  desc: "Gets a list of runs for a specified thread.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                                                                                                                                                                                                                           |\n    | limit  | Integer | No       | A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.                                                                                                                                                                            |\n    | order  | String  | No       | Sort order by the created\\_at timestamp of the objects. asc for ascending order and desc for descending order. Allowed values: \"asc\", \"desc\".                                                                                                                                         |\n    | after  | String  | No       | A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include after=obj\\_foo in order to fetch the next page of the list.       |\n    | before | String  | No       | A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include before=obj\\_foo in order to fetch the previous page of the list. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n         type: String (Required)\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n             type: String (Required)\n         }\n     ]\n     created_at: long (Required)\n     expires_at: Long (Required)\n     started_at: Long (Required)\n     completed_at: Long (Required)\n     cancelled_at: Long (Required)\n     failed_at: Long (Required)\n     incomplete_details (Required): {\n         reason: String(max_completion_tokens/max_prompt_tokens) (Required)\n     }\n     usage (Required): {\n         completion_tokens: long (Required)\n         prompt_tokens: long (Required)\n         total_tokens: long (Required)\n     }\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     max_prompt_tokens: Integer (Required)\n     max_completion_tokens: Integer (Required)\n     truncation_strategy (Required): {\n         type: String(auto/last_messages) (Required)\n         last_messages: Integer (Optional)\n     }\n     tool_choice: BinaryData (Required)\n     response_format: BinaryData (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n     tool_resources (Optional): {\n         code_interpreter (Optional): {\n             file_ids (Optional): [\n                 String (Optional)\n             ]\n             data_sources (Optional): [\n                  (Optional){\n                     uri: String (Required)\n                     type: String(uri_asset/id_asset) (Required)\n                 }\n             ]\n         }\n         file_search (Optional): {\n             vector_store_ids (Optional): [\n                 String (Optional)\n             ]\n             vector_stores (Optional): [\n                  (Optional){\n                     name: String (Required)\n                     configuration (Required): {\n                         data_sources (Required): [\n                             (recursive schema, see above)\n                         ]\n                     }\n                 }\n             ]\n         }\n         azure_ai_search (Optional): {\n             indexes (Optional): [\n                  (Optional){\n                     index_connection_id: String (Optional)\n                     index_name: String (Optional)\n                     query_type: String(simple/semantic/vector/vector_simple_hybrid/vector_semantic_hybrid) (Optional)\n                     top_k: Integer (Optional)\n                     filter: String (Optional)\n                     index_asset_id: String (Optional)\n                 }\n             ]\n         }\n     }\n     parallel_tool_calls: boolean (Required)\n }\n```"
  returns:
    description: "a list of runs for a specified thread as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.listRuns(java.lang.String,java.lang.Integer,com.azure.ai.agents.persistent.models.ListSortOrder,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.listRuns(String threadId, Integer limit, ListSortOrder order, String after, String before)"
  name: "listRuns(String threadId, Integer limit, ListSortOrder order, String after, String before)"
  nameWithType: "RunsAsyncClient.listRuns(String threadId, Integer limit, ListSortOrder order, String after, String before)"
  summary: "Gets a list of runs for a specified thread."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default\n is 20."
    name: "limit"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Sort order by the created_at timestamp of the objects. asc for ascending order and desc for\n descending order."
    name: "order"
    type: "<xref href=\"com.azure.ai.agents.persistent.models.ListSortOrder?alt=com.azure.ai.agents.persistent.models.ListSortOrder&text=ListSortOrder\" data-throw-if-not-resolved=\"False\" />"
  - description: "A cursor for use in pagination. after is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include after=obj_foo in order to fetch the next page of the list."
    name: "after"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A cursor for use in pagination. before is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include before=obj_foo in order to fetch the previous page of the list."
    name: "before"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<ThreadRun> listRuns(String threadId, Integer limit, ListSortOrder order, String after, String before)"
  desc: "Gets a list of runs for a specified thread."
  returns:
    description: "a list of runs for a specified thread as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.agents.persistent.models.ThreadRun?alt=com.azure.ai.agents.persistent.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.submitToolOutputsToRun(java.lang.String,java.lang.String,java.util.List<com.azure.ai.agents.persistent.models.ToolOutput>)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.submitToolOutputsToRun(String threadId, String runId, List<ToolOutput> toolOutputs)"
  name: "submitToolOutputsToRun(String threadId, String runId, List<ToolOutput> toolOutputs)"
  nameWithType: "RunsAsyncClient.submitToolOutputsToRun(String threadId, String runId, List<ToolOutput> toolOutputs)"
  summary: "Submits outputs from tools as requested by tool calls in a run."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the run."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A list of tools for which the outputs are being submitted."
    name: "toolOutputs"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.ToolOutput?alt=com.azure.ai.agents.persistent.models.ToolOutput&text=ToolOutput\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<ThreadRun> submitToolOutputsToRun(String threadId, String runId, List<ToolOutput> toolOutputs)"
  desc: "Submits outputs from tools as requested by tool calls in a run."
  returns:
    description: "data representing a single evaluation run of an agent thread on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.ThreadRun?alt=com.azure.ai.agents.persistent.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.submitToolOutputsToRun(java.lang.String,java.lang.String,java.util.List<com.azure.ai.agents.persistent.models.ToolOutput>,java.lang.Boolean)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.submitToolOutputsToRun(String threadId, String runId, List<ToolOutput> toolOutputs, Boolean stream)"
  name: "submitToolOutputsToRun(String threadId, String runId, List<ToolOutput> toolOutputs, Boolean stream)"
  nameWithType: "RunsAsyncClient.submitToolOutputsToRun(String threadId, String runId, List<ToolOutput> toolOutputs, Boolean stream)"
  summary: "Submits outputs from tools as requested by tool calls in a run."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the run."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A list of tools for which the outputs are being submitted."
    name: "toolOutputs"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.ToolOutput?alt=com.azure.ai.agents.persistent.models.ToolOutput&text=ToolOutput\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "If true, returns a stream of events that happen during the Run as SSE, terminating at `[DONE]`."
    name: "stream"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public Mono<ThreadRun> submitToolOutputsToRun(String threadId, String runId, List<ToolOutput> toolOutputs, Boolean stream)"
  desc: "Submits outputs from tools as requested by tool calls in a run."
  returns:
    description: "data representing a single evaluation run of an agent thread on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.ThreadRun?alt=com.azure.ai.agents.persistent.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.submitToolOutputsToRunStreaming(java.lang.String,java.lang.String,java.util.List<com.azure.ai.agents.persistent.models.ToolOutput>)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.submitToolOutputsToRunStreaming(String threadId, String runId, List<ToolOutput> toolOutputs)"
  name: "submitToolOutputsToRunStreaming(String threadId, String runId, List<ToolOutput> toolOutputs)"
  nameWithType: "RunsAsyncClient.submitToolOutputsToRunStreaming(String threadId, String runId, List<ToolOutput> toolOutputs)"
  summary: "Submits outputs from tools as requested by tool calls in a run with streaming updates."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the run."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A list of tools for which the outputs are being submitted."
    name: "toolOutputs"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.ToolOutput?alt=com.azure.ai.agents.persistent.models.ToolOutput&text=ToolOutput\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Flux<StreamUpdate>> submitToolOutputsToRunStreaming(String threadId, String runId, List<ToolOutput> toolOutputs)"
  desc: "Submits outputs from tools as requested by tool calls in a run with streaming updates. Runs that need submitted tool outputs will have a status of 'requires\\_action' with a required\\_action.type of 'submit\\_tool\\_outputs'."
  returns:
    description: "A mono of flux of streaming updates from the run."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.StreamUpdate?alt=com.azure.ai.agents.persistent.models.StreamUpdate&text=StreamUpdate\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.submitToolOutputsToRunWithResponse(java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.submitToolOutputsToRunWithResponse(String threadId, String runId, BinaryData submitToolOutputsToRunRequest, RequestOptions requestOptions)"
  name: "submitToolOutputsToRunWithResponse(String threadId, String runId, BinaryData submitToolOutputsToRunRequest, RequestOptions requestOptions)"
  nameWithType: "RunsAsyncClient.submitToolOutputsToRunWithResponse(String threadId, String runId, BinaryData submitToolOutputsToRunRequest, RequestOptions requestOptions)"
  summary: "Submits outputs from tools as requested by tool calls in a run."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the run."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The submitToolOutputsToRunRequest parameter."
    name: "submitToolOutputsToRunRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> submitToolOutputsToRunWithResponse(String threadId, String runId, BinaryData submitToolOutputsToRunRequest, RequestOptions requestOptions)"
  desc: "Submits outputs from tools as requested by tool calls in a run.\n\n**Request Body Schema**\n\n```java\n{\n     tool_outputs (Required): [\n          (Required){\n             tool_call_id: String (Optional)\n             output: String (Optional)\n         }\n     ]\n     stream: Boolean (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n         type: String (Required)\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n             type: String (Required)\n         }\n     ]\n     created_at: long (Required)\n     expires_at: Long (Required)\n     started_at: Long (Required)\n     completed_at: Long (Required)\n     cancelled_at: Long (Required)\n     failed_at: Long (Required)\n     incomplete_details (Required): {\n         reason: String(max_completion_tokens/max_prompt_tokens) (Required)\n     }\n     usage (Required): {\n         completion_tokens: long (Required)\n         prompt_tokens: long (Required)\n         total_tokens: long (Required)\n     }\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     max_prompt_tokens: Integer (Required)\n     max_completion_tokens: Integer (Required)\n     truncation_strategy (Required): {\n         type: String(auto/last_messages) (Required)\n         last_messages: Integer (Optional)\n     }\n     tool_choice: BinaryData (Required)\n     response_format: BinaryData (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n     tool_resources (Optional): {\n         code_interpreter (Optional): {\n             file_ids (Optional): [\n                 String (Optional)\n             ]\n             data_sources (Optional): [\n                  (Optional){\n                     uri: String (Required)\n                     type: String(uri_asset/id_asset) (Required)\n                 }\n             ]\n         }\n         file_search (Optional): {\n             vector_store_ids (Optional): [\n                 String (Optional)\n             ]\n             vector_stores (Optional): [\n                  (Optional){\n                     name: String (Required)\n                     configuration (Required): {\n                         data_sources (Required): [\n                             (recursive schema, see above)\n                         ]\n                     }\n                 }\n             ]\n         }\n         azure_ai_search (Optional): {\n             indexes (Optional): [\n                  (Optional){\n                     index_connection_id: String (Optional)\n                     index_name: String (Optional)\n                     query_type: String(simple/semantic/vector/vector_simple_hybrid/vector_semantic_hybrid) (Optional)\n                     top_k: Integer (Optional)\n                     filter: String (Optional)\n                     index_asset_id: String (Optional)\n                 }\n             ]\n         }\n     }\n     parallel_tool_calls: boolean (Required)\n }\n```"
  returns:
    description: "data representing a single evaluation run of an agent thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.updateRun(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.updateRun(String threadId, String runId)"
  name: "updateRun(String threadId, String runId)"
  nameWithType: "RunsAsyncClient.updateRun(String threadId, String runId)"
  summary: "Modifies an existing thread run."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the run."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<ThreadRun> updateRun(String threadId, String runId)"
  desc: "Modifies an existing thread run."
  returns:
    description: "data representing a single evaluation run of an agent thread on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.ThreadRun?alt=com.azure.ai.agents.persistent.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.updateRun(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.updateRun(String threadId, String runId, Map<String,String> metadata)"
  name: "updateRun(String threadId, String runId, Map<String,String> metadata)"
  nameWithType: "RunsAsyncClient.updateRun(String threadId, String runId, Map<String,String> metadata)"
  summary: "Modifies an existing thread run."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the run."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A set of up to 16 key/value pairs that can be attached to an object, used for storing additional\n information about that object in a structured format. Keys may be up to 64 characters in length and values may be\n up to 512 characters in length."
    name: "metadata"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public Mono<ThreadRun> updateRun(String threadId, String runId, Map<String,String> metadata)"
  desc: "Modifies an existing thread run."
  returns:
    description: "data representing a single evaluation run of an agent thread on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.ThreadRun?alt=com.azure.ai.agents.persistent.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.RunsAsyncClient.updateRunWithResponse(java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.RunsAsyncClient.updateRunWithResponse(String threadId, String runId, BinaryData updateRunRequest, RequestOptions requestOptions)"
  name: "updateRunWithResponse(String threadId, String runId, BinaryData updateRunRequest, RequestOptions requestOptions)"
  nameWithType: "RunsAsyncClient.updateRunWithResponse(String threadId, String runId, BinaryData updateRunRequest, RequestOptions requestOptions)"
  summary: "Modifies an existing thread run."
  parameters:
  - description: "Identifier of the thread."
    name: "threadId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the run."
    name: "runId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The updateRunRequest parameter."
    name: "updateRunRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> updateRunWithResponse(String threadId, String runId, BinaryData updateRunRequest, RequestOptions requestOptions)"
  desc: "Modifies an existing thread run.\n\n**Request Body Schema**\n\n```java\n{\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n         type: String (Required)\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n             type: String (Required)\n         }\n     ]\n     created_at: long (Required)\n     expires_at: Long (Required)\n     started_at: Long (Required)\n     completed_at: Long (Required)\n     cancelled_at: Long (Required)\n     failed_at: Long (Required)\n     incomplete_details (Required): {\n         reason: String(max_completion_tokens/max_prompt_tokens) (Required)\n     }\n     usage (Required): {\n         completion_tokens: long (Required)\n         prompt_tokens: long (Required)\n         total_tokens: long (Required)\n     }\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     max_prompt_tokens: Integer (Required)\n     max_completion_tokens: Integer (Required)\n     truncation_strategy (Required): {\n         type: String(auto/last_messages) (Required)\n         last_messages: Integer (Optional)\n     }\n     tool_choice: BinaryData (Required)\n     response_format: BinaryData (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n     tool_resources (Optional): {\n         code_interpreter (Optional): {\n             file_ids (Optional): [\n                 String (Optional)\n             ]\n             data_sources (Optional): [\n                  (Optional){\n                     uri: String (Required)\n                     type: String(uri_asset/id_asset) (Required)\n                 }\n             ]\n         }\n         file_search (Optional): {\n             vector_store_ids (Optional): [\n                 String (Optional)\n             ]\n             vector_stores (Optional): [\n                  (Optional){\n                     name: String (Required)\n                     configuration (Required): {\n                         data_sources (Required): [\n                             (recursive schema, see above)\n                         ]\n                     }\n                 }\n             ]\n         }\n         azure_ai_search (Optional): {\n             indexes (Optional): [\n                  (Optional){\n                     index_connection_id: String (Optional)\n                     index_name: String (Optional)\n                     query_type: String(simple/semantic/vector/vector_simple_hybrid/vector_semantic_hybrid) (Optional)\n                     top_k: Integer (Optional)\n                     filter: String (Optional)\n                     index_asset_id: String (Optional)\n                 }\n             ]\n         }\n     }\n     parallel_tool_calls: boolean (Required)\n }\n```"
  returns:
    description: "data representing a single evaluation run of an agent thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous PersistentAgentsAdministrationClient type."
metadata: {}
package: "com.azure.ai.agents.persistent"
artifact: com.azure:azure-ai-agents-persistent:1.0.0-beta.1
