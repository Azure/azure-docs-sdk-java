### YamlMime:ManagedReference
items:
- uid: org.apache.commons.codec.binary.StringUtils
  id: StringUtils
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary
  children:
  - org.apache.commons.codec.binary.StringUtils.StringUtils()
  - org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)
  - org.apache.commons.codec.binary.StringUtils.getByteBufferUtf8(java.lang.String)
  - org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1(java.lang.String)
  - org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(java.lang.String,java.lang.String)
  - org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(java.lang.String)
  - org.apache.commons.codec.binary.StringUtils.getBytesUtf16(java.lang.String)
  - org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be(java.lang.String)
  - org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le(java.lang.String)
  - org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String)
  - org.apache.commons.codec.binary.StringUtils.newString(byte[],java.lang.String)
  - org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byte[])
  - org.apache.commons.codec.binary.StringUtils.newStringUsAscii(byte[])
  - org.apache.commons.codec.binary.StringUtils.newStringUtf16(byte[])
  - org.apache.commons.codec.binary.StringUtils.newStringUtf16Be(byte[])
  - org.apache.commons.codec.binary.StringUtils.newStringUtf16Le(byte[])
  - org.apache.commons.codec.binary.StringUtils.newStringUtf8(byte[])
  langs:
  - java
  name: StringUtils
  nameWithType: StringUtils
  fullName: org.apache.commons.codec.binary.StringUtils
  type: Class
  package: org.apache.commons.codec.binary
  summary: >-
    Converts String to and from bytes using the encodings required by the Java specification. These encodings are specified in [ Standard charsets][Standard charsets].


    This class is immutable and thread-safe.



    [Standard charsets]: http://download.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html
  syntax:
    content: public class StringUtils
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.commons.codec.binary.StringUtils.StringUtils()
  id: StringUtils()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: StringUtils()
  nameWithType: StringUtils.StringUtils()
  fullName: org.apache.commons.codec.binary.StringUtils.StringUtils()
  overload: org.apache.commons.codec.binary.StringUtils.StringUtils*
  type: Constructor
  package: org.apache.commons.codec.binary
  syntax:
    content: public StringUtils()
- uid: org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)
  id: equals(java.lang.CharSequence,java.lang.CharSequence)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: equals(CharSequence cs1, CharSequence cs2)
  nameWithType: StringUtils.equals(CharSequence cs1, CharSequence cs2)
  fullName: org.apache.commons.codec.binary.StringUtils.equals(CharSequence cs1, CharSequence cs2)
  overload: org.apache.commons.codec.binary.StringUtils.equals*
  type: Method
  package: org.apache.commons.codec.binary
  summary: >-
    Compares two CharSequences, returning `true` if they represent equal sequences of characters.


    `null`s are handled without exceptions. Two `null` references are considered to be equal. The comparison is case sensitive.


    ```java

    StringUtils.equals(null, null)   = true
     StringUtils.equals(null, "abc")  = false
     StringUtils.equals("abc", null)  = false
     StringUtils.equals("abc", "abc") = true
     StringUtils.equals("abc", "ABC") = false
    ```


    Copied from Apache Commons Lang r1583482 on April 10, 2014 (day of 3.3.2 release).
  syntax:
    content: public static boolean equals(CharSequence cs1, CharSequence cs2)
    parameters:
    - id: cs1
      type: java.lang.CharSequence
      description: the first CharSequence, may be <code>null</code>
    - id: cs2
      type: java.lang.CharSequence
      description: the second CharSequence, may be <code>null</code>
    return:
      type: boolean
      description: <code>true</code> if the CharSequences are equal (case-sensitive), or both <code>null</code>
- uid: org.apache.commons.codec.binary.StringUtils.getByteBufferUtf8(java.lang.String)
  id: getByteBufferUtf8(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: getByteBufferUtf8(String string)
  nameWithType: StringUtils.getByteBufferUtf8(String string)
  fullName: org.apache.commons.codec.binary.StringUtils.getByteBufferUtf8(String string)
  overload: org.apache.commons.codec.binary.StringUtils.getByteBufferUtf8*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Encodes the given string into a byte buffer using the UTF-8 charset, storing the result into a new byte array.
  syntax:
    content: public static ByteBuffer getByteBufferUtf8(String string)
    parameters:
    - id: string
      type: java.lang.String
      description: the String to encode, may be <code>null</code>
    return:
      type: java.nio.ByteBuffer
      description: encoded bytes, or <code>null</code> if the input string was <code>null</code>
- uid: org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1(java.lang.String)
  id: getBytesIso8859_1(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: getBytesIso8859_1(String string)
  nameWithType: StringUtils.getBytesIso8859_1(String string)
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1(String string)
  overload: org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Encodes the given string into a sequence of bytes using the ISO-8859-1 charset, storing the result into a new byte array.
  syntax:
    content: public static byte[] getBytesIso8859_1(String string)
    parameters:
    - id: string
      type: java.lang.String
      description: the String to encode, may be <code>null</code>
    return:
      type: byte[]
      description: encoded bytes, or <code>null</code> if the input string was <code>null</code>
- uid: org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(java.lang.String,java.lang.String)
  id: getBytesUnchecked(java.lang.String,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: getBytesUnchecked(String string, String charsetName)
  nameWithType: StringUtils.getBytesUnchecked(String string, String charsetName)
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(String string, String charsetName)
  overload: org.apache.commons.codec.binary.StringUtils.getBytesUnchecked*
  type: Method
  package: org.apache.commons.codec.binary
  summary: >-
    Encodes the given string into a sequence of bytes using the named charset, storing the result into a new byte array.


    This method catches <xref uid="" data-throw-if-not-resolved="false">UnsupportedEncodingException</xref> and rethrows it as <xref uid="java.lang.IllegalStateException" data-throw-if-not-resolved="false">IllegalStateException</xref>, which should never happen for a required charset name. Use this method when the encoding is required to be in the JRE.
  syntax:
    content: public static byte[] getBytesUnchecked(String string, String charsetName)
    parameters:
    - id: string
      type: java.lang.String
      description: the String to encode, may be <code>null</code>
    - id: charsetName
      type: java.lang.String
      description: The name of a required <xref uid="java.nio.charset.Charset" data-throw-if-not-resolved="false">java.nio.charset.Charset</xref>
    return:
      type: byte[]
      description: encoded bytes, or <code>null</code> if the input string was <code>null</code>
- uid: org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(java.lang.String)
  id: getBytesUsAscii(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: getBytesUsAscii(String string)
  nameWithType: StringUtils.getBytesUsAscii(String string)
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(String string)
  overload: org.apache.commons.codec.binary.StringUtils.getBytesUsAscii*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Encodes the given string into a sequence of bytes using the US-ASCII charset, storing the result into a new byte array.
  syntax:
    content: public static byte[] getBytesUsAscii(String string)
    parameters:
    - id: string
      type: java.lang.String
      description: the String to encode, may be <code>null</code>
    return:
      type: byte[]
      description: encoded bytes, or <code>null</code> if the input string was <code>null</code>
- uid: org.apache.commons.codec.binary.StringUtils.getBytesUtf16(java.lang.String)
  id: getBytesUtf16(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: getBytesUtf16(String string)
  nameWithType: StringUtils.getBytesUtf16(String string)
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesUtf16(String string)
  overload: org.apache.commons.codec.binary.StringUtils.getBytesUtf16*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Encodes the given string into a sequence of bytes using the UTF-16 charset, storing the result into a new byte array.
  syntax:
    content: public static byte[] getBytesUtf16(String string)
    parameters:
    - id: string
      type: java.lang.String
      description: the String to encode, may be <code>null</code>
    return:
      type: byte[]
      description: encoded bytes, or <code>null</code> if the input string was <code>null</code>
- uid: org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be(java.lang.String)
  id: getBytesUtf16Be(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: getBytesUtf16Be(String string)
  nameWithType: StringUtils.getBytesUtf16Be(String string)
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be(String string)
  overload: org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Encodes the given string into a sequence of bytes using the UTF-16BE charset, storing the result into a new byte array.
  syntax:
    content: public static byte[] getBytesUtf16Be(String string)
    parameters:
    - id: string
      type: java.lang.String
      description: the String to encode, may be <code>null</code>
    return:
      type: byte[]
      description: encoded bytes, or <code>null</code> if the input string was <code>null</code>
- uid: org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le(java.lang.String)
  id: getBytesUtf16Le(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: getBytesUtf16Le(String string)
  nameWithType: StringUtils.getBytesUtf16Le(String string)
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le(String string)
  overload: org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Encodes the given string into a sequence of bytes using the UTF-16LE charset, storing the result into a new byte array.
  syntax:
    content: public static byte[] getBytesUtf16Le(String string)
    parameters:
    - id: string
      type: java.lang.String
      description: the String to encode, may be <code>null</code>
    return:
      type: byte[]
      description: encoded bytes, or <code>null</code> if the input string was <code>null</code>
- uid: org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String)
  id: getBytesUtf8(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: getBytesUtf8(String string)
  nameWithType: StringUtils.getBytesUtf8(String string)
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesUtf8(String string)
  overload: org.apache.commons.codec.binary.StringUtils.getBytesUtf8*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Encodes the given string into a sequence of bytes using the UTF-8 charset, storing the result into a new byte array.
  syntax:
    content: public static byte[] getBytesUtf8(String string)
    parameters:
    - id: string
      type: java.lang.String
      description: the String to encode, may be <code>null</code>
    return:
      type: byte[]
      description: encoded bytes, or <code>null</code> if the input string was <code>null</code>
- uid: org.apache.commons.codec.binary.StringUtils.newString(byte[],java.lang.String)
  id: newString(byte[],java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: newString(byte[] bytes, String charsetName)
  nameWithType: StringUtils.newString(byte[] bytes, String charsetName)
  fullName: org.apache.commons.codec.binary.StringUtils.newString(byte[] bytes, String charsetName)
  overload: org.apache.commons.codec.binary.StringUtils.newString*
  type: Method
  package: org.apache.commons.codec.binary
  summary: >-
    Constructs a new `String` by decoding the specified array of bytes using the given charset.


    This method catches <xref uid="" data-throw-if-not-resolved="false">UnsupportedEncodingException</xref> and re-throws it as <xref uid="java.lang.IllegalStateException" data-throw-if-not-resolved="false">IllegalStateException</xref>, which should never happen for a required charset name. Use this method when the encoding is required to be in the JRE.
  syntax:
    content: public static String newString(byte[] bytes, String charsetName)
    parameters:
    - id: bytes
      type: byte[]
      description: The bytes to be decoded into characters, may be <code>null</code>
    - id: charsetName
      type: java.lang.String
      description: The name of a required <xref uid="java.nio.charset.Charset" data-throw-if-not-resolved="false">java.nio.charset.Charset</xref>
    return:
      type: java.lang.String
      description: >-
        A new <code>String</code> decoded from the specified array of bytes using the given charset,
                 or <code>null</code> if the input byte array was <code>null</code>.
- uid: org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byte[])
  id: newStringIso8859_1(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: newStringIso8859_1(byte[] bytes)
  nameWithType: StringUtils.newStringIso8859_1(byte[] bytes)
  fullName: org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byte[] bytes)
  overload: org.apache.commons.codec.binary.StringUtils.newStringIso8859_1*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Constructs a new `String` by decoding the specified array of bytes using the ISO-8859-1 charset.
  syntax:
    content: public static String newStringIso8859_1(byte[] bytes)
    parameters:
    - id: bytes
      type: byte[]
      description: The bytes to be decoded into characters, may be <code>null</code>
    return:
      type: java.lang.String
      description: >-
        A new <code>String</code> decoded from the specified array of bytes using the ISO-8859-1 charset, or
                 <code>null</code> if the input byte array was <code>null</code>.
- uid: org.apache.commons.codec.binary.StringUtils.newStringUsAscii(byte[])
  id: newStringUsAscii(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: newStringUsAscii(byte[] bytes)
  nameWithType: StringUtils.newStringUsAscii(byte[] bytes)
  fullName: org.apache.commons.codec.binary.StringUtils.newStringUsAscii(byte[] bytes)
  overload: org.apache.commons.codec.binary.StringUtils.newStringUsAscii*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Constructs a new `String` by decoding the specified array of bytes using the US-ASCII charset.
  syntax:
    content: public static String newStringUsAscii(byte[] bytes)
    parameters:
    - id: bytes
      type: byte[]
      description: The bytes to be decoded into characters
    return:
      type: java.lang.String
      description: >-
        A new <code>String</code> decoded from the specified array of bytes using the US-ASCII charset,
                 or <code>null</code> if the input byte array was <code>null</code>.
- uid: org.apache.commons.codec.binary.StringUtils.newStringUtf16(byte[])
  id: newStringUtf16(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: newStringUtf16(byte[] bytes)
  nameWithType: StringUtils.newStringUtf16(byte[] bytes)
  fullName: org.apache.commons.codec.binary.StringUtils.newStringUtf16(byte[] bytes)
  overload: org.apache.commons.codec.binary.StringUtils.newStringUtf16*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Constructs a new `String` by decoding the specified array of bytes using the UTF-16 charset.
  syntax:
    content: public static String newStringUtf16(byte[] bytes)
    parameters:
    - id: bytes
      type: byte[]
      description: The bytes to be decoded into characters
    return:
      type: java.lang.String
      description: >-
        A new <code>String</code> decoded from the specified array of bytes using the UTF-16 charset
                 or <code>null</code> if the input byte array was <code>null</code>.
- uid: org.apache.commons.codec.binary.StringUtils.newStringUtf16Be(byte[])
  id: newStringUtf16Be(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: newStringUtf16Be(byte[] bytes)
  nameWithType: StringUtils.newStringUtf16Be(byte[] bytes)
  fullName: org.apache.commons.codec.binary.StringUtils.newStringUtf16Be(byte[] bytes)
  overload: org.apache.commons.codec.binary.StringUtils.newStringUtf16Be*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Constructs a new `String` by decoding the specified array of bytes using the UTF-16BE charset.
  syntax:
    content: public static String newStringUtf16Be(byte[] bytes)
    parameters:
    - id: bytes
      type: byte[]
      description: The bytes to be decoded into characters
    return:
      type: java.lang.String
      description: >-
        A new <code>String</code> decoded from the specified array of bytes using the UTF-16BE charset,
                 or <code>null</code> if the input byte array was <code>null</code>.
- uid: org.apache.commons.codec.binary.StringUtils.newStringUtf16Le(byte[])
  id: newStringUtf16Le(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: newStringUtf16Le(byte[] bytes)
  nameWithType: StringUtils.newStringUtf16Le(byte[] bytes)
  fullName: org.apache.commons.codec.binary.StringUtils.newStringUtf16Le(byte[] bytes)
  overload: org.apache.commons.codec.binary.StringUtils.newStringUtf16Le*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Constructs a new `String` by decoding the specified array of bytes using the UTF-16LE charset.
  syntax:
    content: public static String newStringUtf16Le(byte[] bytes)
    parameters:
    - id: bytes
      type: byte[]
      description: The bytes to be decoded into characters
    return:
      type: java.lang.String
      description: >-
        A new <code>String</code> decoded from the specified array of bytes using the UTF-16LE charset,
                 or <code>null</code> if the input byte array was <code>null</code>.
- uid: org.apache.commons.codec.binary.StringUtils.newStringUtf8(byte[])
  id: newStringUtf8(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.binary.StringUtils
  langs:
  - java
  name: newStringUtf8(byte[] bytes)
  nameWithType: StringUtils.newStringUtf8(byte[] bytes)
  fullName: org.apache.commons.codec.binary.StringUtils.newStringUtf8(byte[] bytes)
  overload: org.apache.commons.codec.binary.StringUtils.newStringUtf8*
  type: Method
  package: org.apache.commons.codec.binary
  summary: Constructs a new `String` by decoding the specified array of bytes using the UTF-8 charset.
  syntax:
    content: public static String newStringUtf8(byte[] bytes)
    parameters:
    - id: bytes
      type: byte[]
      description: The bytes to be decoded into characters
    return:
      type: java.lang.String
      description: >-
        A new <code>String</code> decoded from the specified array of bytes using the UTF-8 charset,
                 or <code>null</code> if the input byte array was <code>null</code>.
references:
- uid: org.apache.commons.codec.binary.StringUtils.StringUtils*
  name: StringUtils
  nameWithType: StringUtils.StringUtils
  fullName: org.apache.commons.codec.binary.StringUtils.StringUtils
  package: org.apache.commons.codec.binary
- uid: java.lang.CharSequence
  spec.java:
  - uid: java.lang.CharSequence
    name: CharSequence
    fullName: java.lang.CharSequence
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.commons.codec.binary.StringUtils.equals*
  name: equals
  nameWithType: StringUtils.equals
  fullName: org.apache.commons.codec.binary.StringUtils.equals
  package: org.apache.commons.codec.binary
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.nio.ByteBuffer
  spec.java:
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
- uid: org.apache.commons.codec.binary.StringUtils.getByteBufferUtf8*
  name: getByteBufferUtf8
  nameWithType: StringUtils.getByteBufferUtf8
  fullName: org.apache.commons.codec.binary.StringUtils.getByteBufferUtf8
  package: org.apache.commons.codec.binary
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1*
  name: getBytesIso8859_1
  nameWithType: StringUtils.getBytesIso8859_1
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.getBytesUnchecked*
  name: getBytesUnchecked
  nameWithType: StringUtils.getBytesUnchecked
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesUnchecked
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.getBytesUsAscii*
  name: getBytesUsAscii
  nameWithType: StringUtils.getBytesUsAscii
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesUsAscii
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.getBytesUtf16*
  name: getBytesUtf16
  nameWithType: StringUtils.getBytesUtf16
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesUtf16
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be*
  name: getBytesUtf16Be
  nameWithType: StringUtils.getBytesUtf16Be
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le*
  name: getBytesUtf16Le
  nameWithType: StringUtils.getBytesUtf16Le
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.getBytesUtf8*
  name: getBytesUtf8
  nameWithType: StringUtils.getBytesUtf8
  fullName: org.apache.commons.codec.binary.StringUtils.getBytesUtf8
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.newString*
  name: newString
  nameWithType: StringUtils.newString
  fullName: org.apache.commons.codec.binary.StringUtils.newString
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.newStringIso8859_1*
  name: newStringIso8859_1
  nameWithType: StringUtils.newStringIso8859_1
  fullName: org.apache.commons.codec.binary.StringUtils.newStringIso8859_1
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.newStringUsAscii*
  name: newStringUsAscii
  nameWithType: StringUtils.newStringUsAscii
  fullName: org.apache.commons.codec.binary.StringUtils.newStringUsAscii
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.newStringUtf16*
  name: newStringUtf16
  nameWithType: StringUtils.newStringUtf16
  fullName: org.apache.commons.codec.binary.StringUtils.newStringUtf16
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.newStringUtf16Be*
  name: newStringUtf16Be
  nameWithType: StringUtils.newStringUtf16Be
  fullName: org.apache.commons.codec.binary.StringUtils.newStringUtf16Be
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.newStringUtf16Le*
  name: newStringUtf16Le
  nameWithType: StringUtils.newStringUtf16Le
  fullName: org.apache.commons.codec.binary.StringUtils.newStringUtf16Le
  package: org.apache.commons.codec.binary
- uid: org.apache.commons.codec.binary.StringUtils.newStringUtf8*
  name: newStringUtf8
  nameWithType: StringUtils.newStringUtf8
  fullName: org.apache.commons.codec.binary.StringUtils.newStringUtf8
  package: org.apache.commons.codec.binary
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
