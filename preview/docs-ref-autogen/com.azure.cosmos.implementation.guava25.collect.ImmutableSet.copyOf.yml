### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSet.copyOf*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSet<E>.<E>copyOf"
name: "<E>copyOf"
nameWithType: "ImmutableSet<E>.<E>copyOf"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSet.<E>copyOf(E[])"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSet<E>.<E>copyOf(E[] elements)"
  name: "<E>copyOf(E[] elements)"
  nameWithType: "ImmutableSet<E>.<E>copyOf(E[] elements)"
  summary: "Returns an immutable set containing each of `elements`, minus duplicates, in the order each appears first in the source array."
  parameters:
  - name: "elements"
    type: "<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static ImmutableSet<E> <E>copyOf(E[] elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSet&text=ImmutableSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSet.<E>copyOf(java.lang.Iterable<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSet<E>.<E>copyOf(Iterable<? extends E> elements)"
  name: "<E>copyOf(Iterable<? extends E> elements)"
  nameWithType: "ImmutableSet<E>.<E>copyOf(Iterable<? extends E> elements)"
  summary: "Returns an immutable set containing each of `elements`, minus duplicates, in the order each appears first in the source iterable. This method iterates over `elements` only once.\n\n**Performance note:** This method will sometimes recognize that the actual copy operation is unnecessary; for example, `copyOf(copyOf(anArrayList))` should copy the data only once. This reduces the expense of habitually making defensive copies at API boundaries. However, the precise conditions for skipping the copy operation are undefined."
  parameters:
  - name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSet<E> <E>copyOf(Iterable<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSet&text=ImmutableSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSet.<E>copyOf(java.util.Collection<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSet<E>.<E>copyOf(Collection<? extends E> elements)"
  name: "<E>copyOf(Collection<? extends E> elements)"
  nameWithType: "ImmutableSet<E>.<E>copyOf(Collection<? extends E> elements)"
  summary: "Returns an immutable set containing each of `elements`, minus duplicates, in the order each appears first in the source collection.\n\n**Performance note:** This method will sometimes recognize that the actual copy operation is unnecessary; for example, `copyOf(copyOf(anArrayList))` will copy the data only once. This reduces the expense of habitually making defensive copies at API boundaries. However, the precise conditions for skipping the copy operation are undefined."
  parameters:
  - name: "elements"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSet<E> <E>copyOf(Collection<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSet&text=ImmutableSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableSet.<E>copyOf(java.util.Iterator<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableSet<E>.<E>copyOf(Iterator<? extends E> elements)"
  name: "<E>copyOf(Iterator<? extends E> elements)"
  nameWithType: "ImmutableSet<E>.<E>copyOf(Iterator<? extends E> elements)"
  summary: "Returns an immutable set containing each of `elements`, minus duplicates, in the order each appears first in the source iterator."
  parameters:
  - name: "elements"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableSet<E> <E>copyOf(Iterator<? extends E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableSet?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableSet&text=ImmutableSet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
