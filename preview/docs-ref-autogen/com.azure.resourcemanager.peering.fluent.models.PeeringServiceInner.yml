### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner"
fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner"
name: "PeeringServiceInner"
nameWithType: "PeeringServiceInner"
summary: "Peering Service."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class PeeringServiceInner extends ProxyResource"
constructors:
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.PeeringServiceInner()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.PeeringServiceInner()"
  name: "PeeringServiceInner()"
  nameWithType: "PeeringServiceInner.PeeringServiceInner()"
  syntax: "public PeeringServiceInner()"
methods:
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.location()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.location()"
  name: "location()"
  nameWithType: "PeeringServiceInner.location()"
  summary: "Get the location property: The location of the resource."
  syntax: "public String location()"
  desc: "Get the location property: The location of the resource."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.peeringServiceLocation()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.peeringServiceLocation()"
  name: "peeringServiceLocation()"
  nameWithType: "PeeringServiceInner.peeringServiceLocation()"
  summary: "Get the peering<wbr>Service<wbr>Location property: The location (state/province) of the customer."
  syntax: "public String peeringServiceLocation()"
  desc: "Get the peeringServiceLocation property: The location (state/province) of the customer."
  returns:
    description: "the peeringServiceLocation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.peeringServiceProvider()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.peeringServiceProvider()"
  name: "peeringServiceProvider()"
  nameWithType: "PeeringServiceInner.peeringServiceProvider()"
  summary: "Get the peering<wbr>Service<wbr>Provider property: The name of the service provider."
  syntax: "public String peeringServiceProvider()"
  desc: "Get the peeringServiceProvider property: The name of the service provider."
  returns:
    description: "the peeringServiceProvider value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.providerBackupPeeringLocation()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.providerBackupPeeringLocation()"
  name: "providerBackupPeeringLocation()"
  nameWithType: "PeeringServiceInner.providerBackupPeeringLocation()"
  summary: "Get the provider<wbr>Backup<wbr>Peering<wbr>Location property: The backup peering (Microsoft/service provider) location to be used for customer traffic."
  syntax: "public String providerBackupPeeringLocation()"
  desc: "Get the providerBackupPeeringLocation property: The backup peering (Microsoft/service provider) location to be used for customer traffic."
  returns:
    description: "the providerBackupPeeringLocation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.providerPrimaryPeeringLocation()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.providerPrimaryPeeringLocation()"
  name: "providerPrimaryPeeringLocation()"
  nameWithType: "PeeringServiceInner.providerPrimaryPeeringLocation()"
  summary: "Get the provider<wbr>Primary<wbr>Peering<wbr>Location property: The primary peering (Microsoft/service provider) location to be used for customer traffic."
  syntax: "public String providerPrimaryPeeringLocation()"
  desc: "Get the providerPrimaryPeeringLocation property: The primary peering (Microsoft/service provider) location to be used for customer traffic."
  returns:
    description: "the providerPrimaryPeeringLocation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.provisioningState()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PeeringServiceInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning state of the resource."
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: The provisioning state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.ProvisioningState?alt=com.azure.resourcemanager.peering.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.sku()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.sku()"
  name: "sku()"
  nameWithType: "PeeringServiceInner.sku()"
  summary: "Get the sku property: The SKU that defines the type of the peering service."
  syntax: "public PeeringServiceSku sku()"
  desc: "Get the sku property: The SKU that defines the type of the peering service."
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServiceSku?alt=com.azure.resourcemanager.peering.models.PeeringServiceSku&text=PeeringServiceSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.tags()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.tags()"
  name: "tags()"
  nameWithType: "PeeringServiceInner.tags()"
  summary: "Get the tags property: The resource tags."
  syntax: "public Map<String,String> tags()"
  desc: "Get the tags property: The resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.validate()"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.validate()"
  name: "validate()"
  nameWithType: "PeeringServiceInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "PeeringServiceInner.withLocation(String location)"
  summary: "Set the location property: The location of the resource."
  parameters:
  - description: "the location value to set."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringServiceInner withLocation(String location)"
  desc: "Set the location property: The location of the resource."
  returns:
    description: "the PeeringServiceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withPeeringServiceLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withPeeringServiceLocation(String peeringServiceLocation)"
  name: "withPeeringServiceLocation(String peeringServiceLocation)"
  nameWithType: "PeeringServiceInner.withPeeringServiceLocation(String peeringServiceLocation)"
  summary: "Set the peering<wbr>Service<wbr>Location property: The location (state/province) of the customer."
  parameters:
  - description: "the peeringServiceLocation value to set."
    name: "peeringServiceLocation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringServiceInner withPeeringServiceLocation(String peeringServiceLocation)"
  desc: "Set the peeringServiceLocation property: The location (state/province) of the customer."
  returns:
    description: "the PeeringServiceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withPeeringServiceProvider(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withPeeringServiceProvider(String peeringServiceProvider)"
  name: "withPeeringServiceProvider(String peeringServiceProvider)"
  nameWithType: "PeeringServiceInner.withPeeringServiceProvider(String peeringServiceProvider)"
  summary: "Set the peering<wbr>Service<wbr>Provider property: The name of the service provider."
  parameters:
  - description: "the peeringServiceProvider value to set."
    name: "peeringServiceProvider"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringServiceInner withPeeringServiceProvider(String peeringServiceProvider)"
  desc: "Set the peeringServiceProvider property: The name of the service provider."
  returns:
    description: "the PeeringServiceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withProviderBackupPeeringLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withProviderBackupPeeringLocation(String providerBackupPeeringLocation)"
  name: "withProviderBackupPeeringLocation(String providerBackupPeeringLocation)"
  nameWithType: "PeeringServiceInner.withProviderBackupPeeringLocation(String providerBackupPeeringLocation)"
  summary: "Set the provider<wbr>Backup<wbr>Peering<wbr>Location property: The backup peering (Microsoft/service provider) location to be used for customer traffic."
  parameters:
  - description: "the providerBackupPeeringLocation value to set."
    name: "providerBackupPeeringLocation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringServiceInner withProviderBackupPeeringLocation(String providerBackupPeeringLocation)"
  desc: "Set the providerBackupPeeringLocation property: The backup peering (Microsoft/service provider) location to be used for customer traffic."
  returns:
    description: "the PeeringServiceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withProviderPrimaryPeeringLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withProviderPrimaryPeeringLocation(String providerPrimaryPeeringLocation)"
  name: "withProviderPrimaryPeeringLocation(String providerPrimaryPeeringLocation)"
  nameWithType: "PeeringServiceInner.withProviderPrimaryPeeringLocation(String providerPrimaryPeeringLocation)"
  summary: "Set the provider<wbr>Primary<wbr>Peering<wbr>Location property: The primary peering (Microsoft/service provider) location to be used for customer traffic."
  parameters:
  - description: "the providerPrimaryPeeringLocation value to set."
    name: "providerPrimaryPeeringLocation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringServiceInner withProviderPrimaryPeeringLocation(String providerPrimaryPeeringLocation)"
  desc: "Set the providerPrimaryPeeringLocation property: The primary peering (Microsoft/service provider) location to be used for customer traffic."
  returns:
    description: "the PeeringServiceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withSku(com.azure.resourcemanager.peering.models.PeeringServiceSku)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withSku(PeeringServiceSku sku)"
  name: "withSku(PeeringServiceSku sku)"
  nameWithType: "PeeringServiceInner.withSku(PeeringServiceSku sku)"
  summary: "Set the sku property: The SKU that defines the type of the peering service."
  parameters:
  - description: "the sku value to set."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServiceSku?alt=com.azure.resourcemanager.peering.models.PeeringServiceSku&text=PeeringServiceSku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringServiceInner withSku(PeeringServiceSku sku)"
  desc: "Set the sku property: The SKU that defines the type of the peering service."
  returns:
    description: "the PeeringServiceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "PeeringServiceInner.withTags(Map<String,String> tags)"
  summary: "Set the tags property: The resource tags."
  parameters:
  - description: "the tags value to set."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PeeringServiceInner withTags(Map<String,String> tags)"
  desc: "Set the tags property: The resource tags."
  returns:
    description: "the PeeringServiceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Peering Service."
metadata: {}
package: "com.azure.resourcemanager.peering.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
