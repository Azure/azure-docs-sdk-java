### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.SequenceWriter
  id: SequenceWriter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.SequenceWriter.<C>writeAll(C)
  - com.fasterxml.jackson.databind.SequenceWriter.SequenceWriter(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.core.JsonGenerator,boolean,com.fasterxml.jackson.databind.ObjectWriter.Prefetch)
  - com.fasterxml.jackson.databind.SequenceWriter._cfgCloseCloseable
  - com.fasterxml.jackson.databind.SequenceWriter._cfgFlush
  - com.fasterxml.jackson.databind.SequenceWriter._closeGenerator
  - com.fasterxml.jackson.databind.SequenceWriter._closed
  - com.fasterxml.jackson.databind.SequenceWriter._config
  - com.fasterxml.jackson.databind.SequenceWriter._dynamicSerializers
  - com.fasterxml.jackson.databind.SequenceWriter._generator
  - com.fasterxml.jackson.databind.SequenceWriter._openArray
  - com.fasterxml.jackson.databind.SequenceWriter._provider
  - com.fasterxml.jackson.databind.SequenceWriter._rootSerializer
  - com.fasterxml.jackson.databind.SequenceWriter._typeSerializer
  - com.fasterxml.jackson.databind.SequenceWriter._writeCloseableValue(java.lang.Object)
  - com.fasterxml.jackson.databind.SequenceWriter._writeCloseableValue(java.lang.Object,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.SequenceWriter.close()
  - com.fasterxml.jackson.databind.SequenceWriter.flush()
  - com.fasterxml.jackson.databind.SequenceWriter.init(boolean)
  - com.fasterxml.jackson.databind.SequenceWriter.version()
  - com.fasterxml.jackson.databind.SequenceWriter.write(java.lang.Object)
  - com.fasterxml.jackson.databind.SequenceWriter.write(java.lang.Object,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.SequenceWriter.writeAll(java.lang.Iterable<?>)
  - com.fasterxml.jackson.databind.SequenceWriter.writeAll(java.lang.Object[])
  langs:
  - java
  name: SequenceWriter
  nameWithType: SequenceWriter
  fullName: com.fasterxml.jackson.databind.SequenceWriter
  type: Class
  package: com.fasterxml.jackson.databind
  summary: >-
    Writer class similar to <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>, except that it can be used for writing sequences of values, not just a single value. The main use case is in writing very long sequences, or sequences where values are incrementally produced; cases where it would be impractical or at least inconvenient to construct a wrapper container around values (or where no JSON array is desired around values).


    Differences from <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref> include:

     *  Instances of <xref uid="com.fasterxml.jackson.databind.SequenceWriter" data-throw-if-not-resolved="false">SequenceWriter</xref> are stateful, and not thread-safe: if sharing, external synchronization must be used.
     *  Explicit <xref uid="com.fasterxml.jackson.databind.SequenceWriter.close*" data-throw-if-not-resolved="false">#close</xref> is needed after all values have been written (<xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref> can auto-close after individual value writes)
  syntax:
    content: public class SequenceWriter implements Versioned, Closeable, Flushable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.core.Versioned
  - java.io.Closeable
  - java.io.Flushable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.SequenceWriter.<C>writeAll(C)
  id: <C>writeAll(C)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: <C>writeAll(C container)
  nameWithType: SequenceWriter.<C>writeAll(C container)
  fullName: com.fasterxml.jackson.databind.SequenceWriter.<C>writeAll(C container)
  overload: com.fasterxml.jackson.databind.SequenceWriter.writeAll*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public SequenceWriter <C>writeAll(C container)
    parameters:
    - id: container
      type: C
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.SequenceWriter.SequenceWriter(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.core.JsonGenerator,boolean,com.fasterxml.jackson.databind.ObjectWriter.Prefetch)
  id: SequenceWriter(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.core.JsonGenerator,boolean,com.fasterxml.jackson.databind.ObjectWriter.Prefetch)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: SequenceWriter(DefaultSerializerProvider prov, JsonGenerator gen, boolean closeGenerator, ObjectWriter.Prefetch prefetch)
  nameWithType: SequenceWriter.SequenceWriter(DefaultSerializerProvider prov, JsonGenerator gen, boolean closeGenerator, ObjectWriter.Prefetch prefetch)
  fullName: com.fasterxml.jackson.databind.SequenceWriter.SequenceWriter(DefaultSerializerProvider prov, JsonGenerator gen, boolean closeGenerator, ObjectWriter.Prefetch prefetch)
  overload: com.fasterxml.jackson.databind.SequenceWriter.SequenceWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public SequenceWriter(DefaultSerializerProvider prov, JsonGenerator gen, boolean closeGenerator, ObjectWriter.Prefetch prefetch)
    parameters:
    - id: prov
      type: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: closeGenerator
      type: boolean
    - id: prefetch
      type: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
- uid: com.fasterxml.jackson.databind.SequenceWriter._cfgCloseCloseable
  id: _cfgCloseCloseable
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _cfgCloseCloseable
  nameWithType: SequenceWriter._cfgCloseCloseable
  fullName: com.fasterxml.jackson.databind.SequenceWriter._cfgCloseCloseable
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final boolean _cfgCloseCloseable
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.SequenceWriter._cfgFlush
  id: _cfgFlush
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _cfgFlush
  nameWithType: SequenceWriter._cfgFlush
  fullName: com.fasterxml.jackson.databind.SequenceWriter._cfgFlush
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final boolean _cfgFlush
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.SequenceWriter._closeGenerator
  id: _closeGenerator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _closeGenerator
  nameWithType: SequenceWriter._closeGenerator
  fullName: com.fasterxml.jackson.databind.SequenceWriter._closeGenerator
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final boolean _closeGenerator
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.SequenceWriter._closed
  id: _closed
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _closed
  nameWithType: SequenceWriter._closed
  fullName: com.fasterxml.jackson.databind.SequenceWriter._closed
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected boolean _closed
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.SequenceWriter._config
  id: _config
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _config
  nameWithType: SequenceWriter._config
  fullName: com.fasterxml.jackson.databind.SequenceWriter._config
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final SerializationConfig _config
    return:
      type: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.SequenceWriter._dynamicSerializers
  id: _dynamicSerializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _dynamicSerializers
  nameWithType: SequenceWriter._dynamicSerializers
  fullName: com.fasterxml.jackson.databind.SequenceWriter._dynamicSerializers
  type: Field
  package: com.fasterxml.jackson.databind
  summary: If <xref uid="com.fasterxml.jackson.databind.SequenceWriter._rootSerializer" data-throw-if-not-resolved="false">#_rootSerializer</xref> is not defined (no root type was used for constructing <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>), we will use simple scheme for keeping track of serializers needed. Assumption is that
  syntax:
    content: protected PropertySerializerMap _dynamicSerializers
    return:
      type: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap
- uid: com.fasterxml.jackson.databind.SequenceWriter._generator
  id: _generator
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _generator
  nameWithType: SequenceWriter._generator
  fullName: com.fasterxml.jackson.databind.SequenceWriter._generator
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final JsonGenerator _generator
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SequenceWriter._openArray
  id: _openArray
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _openArray
  nameWithType: SequenceWriter._openArray
  fullName: com.fasterxml.jackson.databind.SequenceWriter._openArray
  type: Field
  package: com.fasterxml.jackson.databind
  summary: State flag for keeping track of need to write matching END\_ARRAY, if a START\_ARRAY was written during initialization
  syntax:
    content: protected boolean _openArray
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.SequenceWriter._provider
  id: _provider
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _provider
  nameWithType: SequenceWriter._provider
  fullName: com.fasterxml.jackson.databind.SequenceWriter._provider
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final DefaultSerializerProvider _provider
    return:
      type: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
- uid: com.fasterxml.jackson.databind.SequenceWriter._rootSerializer
  id: _rootSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _rootSerializer
  nameWithType: SequenceWriter._rootSerializer
  fullName: com.fasterxml.jackson.databind.SequenceWriter._rootSerializer
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final JsonSerializer<Object> _rootSerializer
    return:
      type: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.SequenceWriter._typeSerializer
  id: _typeSerializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _typeSerializer
  nameWithType: SequenceWriter._typeSerializer
  fullName: com.fasterxml.jackson.databind.SequenceWriter._typeSerializer
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final TypeSerializer _typeSerializer
    return:
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.SequenceWriter._writeCloseableValue(java.lang.Object)
  id: _writeCloseableValue(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _writeCloseableValue(Object value)
  nameWithType: SequenceWriter._writeCloseableValue(Object value)
  fullName: com.fasterxml.jackson.databind.SequenceWriter._writeCloseableValue(Object value)
  overload: com.fasterxml.jackson.databind.SequenceWriter._writeCloseableValue*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected SequenceWriter _writeCloseableValue(Object value)
    parameters:
    - id: value
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.SequenceWriter._writeCloseableValue(java.lang.Object,com.fasterxml.jackson.databind.JavaType)
  id: _writeCloseableValue(java.lang.Object,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: _writeCloseableValue(Object value, JavaType type)
  nameWithType: SequenceWriter._writeCloseableValue(Object value, JavaType type)
  fullName: com.fasterxml.jackson.databind.SequenceWriter._writeCloseableValue(Object value, JavaType type)
  overload: com.fasterxml.jackson.databind.SequenceWriter._writeCloseableValue*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected SequenceWriter _writeCloseableValue(Object value, JavaType type)
    parameters:
    - id: value
      type: java.lang.Object
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.SequenceWriter.close()
  id: close()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: close()
  nameWithType: SequenceWriter.close()
  fullName: com.fasterxml.jackson.databind.SequenceWriter.close()
  overload: com.fasterxml.jackson.databind.SequenceWriter.close*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.SequenceWriter.flush()
  id: flush()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: flush()
  nameWithType: SequenceWriter.flush()
  fullName: com.fasterxml.jackson.databind.SequenceWriter.flush()
  overload: com.fasterxml.jackson.databind.SequenceWriter.flush*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public void flush()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.SequenceWriter.init(boolean)
  id: init(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: init(boolean wrapInArray)
  nameWithType: SequenceWriter.init(boolean wrapInArray)
  fullName: com.fasterxml.jackson.databind.SequenceWriter.init(boolean wrapInArray)
  overload: com.fasterxml.jackson.databind.SequenceWriter.init*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Internal method called by <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>: should not be called by code outside `jackson-databind` classes.'
  syntax:
    content: public SequenceWriter init(boolean wrapInArray)
    parameters:
    - id: wrapInArray
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.SequenceWriter.version()
  id: version()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: version()
  nameWithType: SequenceWriter.version()
  fullName: com.fasterxml.jackson.databind.SequenceWriter.version()
  overload: com.fasterxml.jackson.databind.SequenceWriter.version*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that will return version information stored in and read from jar that contains this class.
  syntax:
    content: public Version version()
    return:
      type: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.databind.SequenceWriter.write(java.lang.Object)
  id: write(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: write(Object value)
  nameWithType: SequenceWriter.write(Object value)
  fullName: com.fasterxml.jackson.databind.SequenceWriter.write(Object value)
  overload: com.fasterxml.jackson.databind.SequenceWriter.write*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for writing given value into output, as part of sequence to write. If root type was specified for <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>, value must be of compatible type (same or subtype).
  syntax:
    content: public SequenceWriter write(Object value)
    parameters:
    - id: value
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.SequenceWriter.write(java.lang.Object,com.fasterxml.jackson.databind.JavaType)
  id: write(java.lang.Object,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: write(Object value, JavaType type)
  nameWithType: SequenceWriter.write(Object value, JavaType type)
  fullName: com.fasterxml.jackson.databind.SequenceWriter.write(Object value, JavaType type)
  overload: com.fasterxml.jackson.databind.SequenceWriter.write*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for writing given value into output, as part of sequence to write; further, full type (often generic, like <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> is passed in case a new <xref uid="com.fasterxml.jackson.databind.JsonSerializer" data-throw-if-not-resolved="false">JsonSerializer</xref> needs to be fetched to handle type If root type was specified for <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>, value must be of compatible type (same or subtype).
  syntax:
    content: public SequenceWriter write(Object value, JavaType type)
    parameters:
    - id: value
      type: java.lang.Object
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.SequenceWriter.writeAll(java.lang.Iterable<?>)
  id: writeAll(java.lang.Iterable<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: writeAll(Iterable<?> iterable)
  nameWithType: SequenceWriter.writeAll(Iterable<?> iterable)
  fullName: com.fasterxml.jackson.databind.SequenceWriter.writeAll(Iterable<?> iterable)
  overload: com.fasterxml.jackson.databind.SequenceWriter.writeAll*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public SequenceWriter writeAll(Iterable<?> iterable)
    parameters:
    - id: iterable
      type: java.lang.Iterable<?>
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.SequenceWriter.writeAll(java.lang.Object[])
  id: writeAll(java.lang.Object[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.SequenceWriter
  langs:
  - java
  name: writeAll(Object[] value)
  nameWithType: SequenceWriter.writeAll(Object[] value)
  fullName: com.fasterxml.jackson.databind.SequenceWriter.writeAll(Object[] value)
  overload: com.fasterxml.jackson.databind.SequenceWriter.writeAll*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public SequenceWriter writeAll(Object[] value)
    parameters:
    - id: value
      type: java.lang.Object[]
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
  name: DefaultSerializerProvider
  nameWithType: DefaultSerializerProvider
  fullName: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
  name: ObjectWriter.Prefetch
  nameWithType: ObjectWriter.Prefetch
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
- uid: com.fasterxml.jackson.databind.SequenceWriter.SequenceWriter*
  name: SequenceWriter
  nameWithType: SequenceWriter.SequenceWriter
  fullName: com.fasterxml.jackson.databind.SequenceWriter.SequenceWriter
  package: com.fasterxml.jackson.databind
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.databind.SequenceWriter.init*
  name: init
  nameWithType: SequenceWriter.init
  fullName: com.fasterxml.jackson.databind.SequenceWriter.init
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.Version
  name: Version
  nameWithType: Version
  fullName: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.databind.SequenceWriter.version*
  name: version
  nameWithType: SequenceWriter.version
  fullName: com.fasterxml.jackson.databind.SequenceWriter.version
  package: com.fasterxml.jackson.databind
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.SequenceWriter.write*
  name: write
  nameWithType: SequenceWriter.write
  fullName: com.fasterxml.jackson.databind.SequenceWriter.write
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.SequenceWriter.writeAll*
  name: writeAll
  nameWithType: SequenceWriter.writeAll
  fullName: com.fasterxml.jackson.databind.SequenceWriter.writeAll
  package: com.fasterxml.jackson.databind
- uid: C
  spec.java:
  - uid: C
    name: C
    fullName: C
- uid: java.lang.Iterable<?>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.SequenceWriter.flush*
  name: flush
  nameWithType: SequenceWriter.flush
  fullName: com.fasterxml.jackson.databind.SequenceWriter.flush
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.SequenceWriter.close*
  name: close
  nameWithType: SequenceWriter.close
  fullName: com.fasterxml.jackson.databind.SequenceWriter.close
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.SequenceWriter._writeCloseableValue*
  name: _writeCloseableValue
  nameWithType: SequenceWriter._writeCloseableValue
  fullName: com.fasterxml.jackson.databind.SequenceWriter._writeCloseableValue
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap
  name: PropertySerializerMap
  nameWithType: PropertySerializerMap
  fullName: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap
- uid: java.io.Closeable
  name: Closeable
  nameWithType: Closeable
  fullName: java.io.Closeable
- uid: com.fasterxml.jackson.core.Versioned
  name: Versioned
  nameWithType: Versioned
  fullName: com.fasterxml.jackson.core.Versioned
- uid: java.io.Flushable
  name: Flushable
  nameWithType: Flushable
  fullName: java.io.Flushable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
