### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider"
fullName: "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider"
name: "SimpleFilterProvider"
nameWithType: "SimpleFilterProvider"
summary: "Simple <xref uid=\"com.fasterxml.jackson.databind.ser.FilterProvider\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FilterProvider\"></xref> implementation that just stores direct id-to-filter mapping.\n\nNote that version 2.3 was a partial rewrite, now that <xref uid=\"com.fasterxml.jackson.databind.ser.PropertyFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PropertyFilter\"></xref> is set to replace `BeanPropertyFilter`."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.databind.ser.FilterProvider\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.databind.ser.FilterProvider.findFilter(java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.FilterProvider.findPropertyFilter(java.lang.Object,java.lang.Object)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SimpleFilterProvider extends FilterProvider implements Serializable"
constructors:
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.SimpleFilterProvider()"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.SimpleFilterProvider(java.util.Map<java.lang.String,?>)"
fields:
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider._cfgFailOnUnknownId"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider._defaultFilter"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider._filtersById"
methods:
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.addFilter(java.lang.String,com.fasterxml.jackson.databind.ser.BeanPropertyFilter)"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.addFilter(java.lang.String,com.fasterxml.jackson.databind.ser.PropertyFilter)"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.addFilter(java.lang.String,com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter)"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.findFilter(java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.findPropertyFilter(java.lang.Object,java.lang.Object)"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.getDefaultFilter()"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.removeFilter(java.lang.String)"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.setDefaultFilter(com.fasterxml.jackson.databind.ser.BeanPropertyFilter)"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.setDefaultFilter(com.fasterxml.jackson.databind.ser.PropertyFilter)"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.setDefaultFilter(com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter)"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.setFailOnUnknownId(boolean)"
- "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.willFailOnUnknownId()"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.impl"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
