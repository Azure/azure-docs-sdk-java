### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync*"
fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync"
name: "detectObjectsInStreamWithServiceResponseAsync"
nameWithType: "ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync"
members:
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync(byte[],com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsInStreamOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync(byte[] image, DetectObjectsInStreamOptionalParameter detectObjectsInStreamOptionalParameter)"
  name: "detectObjectsInStreamWithServiceResponseAsync(byte[] image, DetectObjectsInStreamOptionalParameter detectObjectsInStreamOptionalParameter)"
  nameWithType: "ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync(byte[] image, DetectObjectsInStreamOptionalParameter detectObjectsInStreamOptionalParameter)"
  summary: "Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectObjectsInStreamOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsInStreamOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectObjectsInStreamOptionalParameter&text=DetectObjectsInStreamOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Observable<ServiceResponse<DetectResult>> detectObjectsInStreamWithServiceResponseAsync(byte[] image, DetectObjectsInStreamOptionalParameter detectObjectsInStreamOptionalParameter)"
  returns:
    description: "the observable to the DetectResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponse?alt=com.microsoft.rest.ServiceResponse&text=ServiceResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult&text=DetectResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync(byte[],java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation.ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync(byte[] image, String modelVersion)"
  name: "detectObjectsInStreamWithServiceResponseAsync(byte[] image, String modelVersion)"
  nameWithType: "ComputerVisionImpl.detectObjectsInStreamWithServiceResponseAsync(byte[] image, String modelVersion)"
  summary: "Performs object detection on the specified image. Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL. A successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
  parameters:
  - description: "An image stream."
    name: "image"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "Optional parameter to specify the version of the AI model. Accepted values are: \"latest\", \"2021-04-01\". Defaults to \"latest\"."
    name: "modelVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Observable<ServiceResponse<DetectResult>> detectObjectsInStreamWithServiceResponseAsync(byte[] image, String modelVersion)"
  returns:
    description: "the observable to the DetectResult object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponse?alt=com.microsoft.rest.ServiceResponse&text=ServiceResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.DetectResult&text=DetectResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.computervision.implementation"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.6-beta
