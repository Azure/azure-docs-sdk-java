### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.EnumBiMap.create*"
fullName: "com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>.<K,V>create"
name: "<K,V>create"
nameWithType: "EnumBiMap<K,V>.<K,V>create"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.EnumBiMap.<K,V>create(java.lang.Class<K>,java.lang.Class<V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>.<K,V>create(Class<K> keyType, Class<V> valueType)"
  name: "<K,V>create(Class<K> keyType, Class<V> valueType)"
  nameWithType: "EnumBiMap<K,V>.<K,V>create(Class<K> keyType, Class<V> valueType)"
  summary: "Returns a new, empty `EnumBiMap` using the specified key and value types."
  parameters:
  - description: "the key type"
    name: "keyType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the value type"
    name: "valueType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static EnumBiMap<K,V> <K,V>create(Class<K> keyType, Class<V> valueType)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.EnumBiMap?alt=com.azure.cosmos.implementation.guava25.collect.EnumBiMap&text=EnumBiMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.EnumBiMap.<K,V>create(java.util.Map<K,V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.EnumBiMap<K,V>.<K,V>create(Map<K,V> map)"
  name: "<K,V>create(Map<K,V> map)"
  nameWithType: "EnumBiMap<K,V>.<K,V>create(Map<K,V> map)"
  summary: "Returns a new bimap with the same mappings as the specified map. If the specified map is an `EnumBiMap`, the new bimap has the same types as the provided map. Otherwise, the specified map must contain at least one mapping, in order to determine the key and value types."
  parameters:
  - description: "the map whose mappings are to be placed in this map"
    name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static EnumBiMap<K,V> <K,V>create(Map<K,V> map)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.EnumBiMap?alt=com.azure.cosmos.implementation.guava25.collect.EnumBiMap&text=EnumBiMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
