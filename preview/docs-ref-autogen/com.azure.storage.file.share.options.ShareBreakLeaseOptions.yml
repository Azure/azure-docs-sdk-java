### YamlMime:ManagedReference
items:
- uid: com.azure.storage.file.share.options.ShareBreakLeaseOptions
  id: ShareBreakLeaseOptions
  artifact: com.azure:azure-storage-file-share:12.7.0-beta.1
  parent: com.azure.storage.file.share.options
  children:
  - com.azure.storage.file.share.options.ShareBreakLeaseOptions.ShareBreakLeaseOptions()
  - com.azure.storage.file.share.options.ShareBreakLeaseOptions.getBreakPeriod()
  - com.azure.storage.file.share.options.ShareBreakLeaseOptions.setBreakPeriod(java.time.Duration)
  langs:
  - java
  name: ShareBreakLeaseOptions
  nameWithType: ShareBreakLeaseOptions
  fullName: com.azure.storage.file.share.options.ShareBreakLeaseOptions
  type: Class
  package: com.azure.storage.file.share.options
  summary: Extended options that may be passed when breaking a lease to a file or share.
  syntax:
    content: public class ShareBreakLeaseOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.file.share.options.ShareBreakLeaseOptions.ShareBreakLeaseOptions()
  id: ShareBreakLeaseOptions()
  artifact: com.azure:azure-storage-file-share:12.7.0-beta.1
  parent: com.azure.storage.file.share.options.ShareBreakLeaseOptions
  langs:
  - java
  name: ShareBreakLeaseOptions()
  nameWithType: ShareBreakLeaseOptions.ShareBreakLeaseOptions()
  fullName: com.azure.storage.file.share.options.ShareBreakLeaseOptions.ShareBreakLeaseOptions()
  overload: com.azure.storage.file.share.options.ShareBreakLeaseOptions.ShareBreakLeaseOptions*
  type: Constructor
  package: com.azure.storage.file.share.options
  syntax:
    content: public ShareBreakLeaseOptions()
- uid: com.azure.storage.file.share.options.ShareBreakLeaseOptions.getBreakPeriod()
  id: getBreakPeriod()
  artifact: com.azure:azure-storage-file-share:12.7.0-beta.1
  parent: com.azure.storage.file.share.options.ShareBreakLeaseOptions
  langs:
  - java
  name: getBreakPeriod()
  nameWithType: ShareBreakLeaseOptions.getBreakPeriod()
  fullName: com.azure.storage.file.share.options.ShareBreakLeaseOptions.getBreakPeriod()
  overload: com.azure.storage.file.share.options.ShareBreakLeaseOptions.getBreakPeriod*
  type: Method
  package: com.azure.storage.file.share.options
  syntax:
    content: public Duration getBreakPeriod()
    return:
      type: java.time.Duration
      description: >-
        An optional duration, between 0 and 60 seconds, that the lease should continue before
         it is broken. If the break period is longer than the time remaining on the lease the remaining time on the lease
         is used. A new lease will not be available before the break period has expired, but the lease may be held for
         longer than the break period.
- uid: com.azure.storage.file.share.options.ShareBreakLeaseOptions.setBreakPeriod(java.time.Duration)
  id: setBreakPeriod(java.time.Duration)
  artifact: com.azure:azure-storage-file-share:12.7.0-beta.1
  parent: com.azure.storage.file.share.options.ShareBreakLeaseOptions
  langs:
  - java
  name: setBreakPeriod(Duration breakPeriod)
  nameWithType: ShareBreakLeaseOptions.setBreakPeriod(Duration breakPeriod)
  fullName: com.azure.storage.file.share.options.ShareBreakLeaseOptions.setBreakPeriod(Duration breakPeriod)
  overload: com.azure.storage.file.share.options.ShareBreakLeaseOptions.setBreakPeriod*
  type: Method
  package: com.azure.storage.file.share.options
  syntax:
    content: public ShareBreakLeaseOptions setBreakPeriod(Duration breakPeriod)
    parameters:
    - id: breakPeriod
      type: java.time.Duration
      description: >-
        An optional duration, between 0 and 60 seconds, that the lease should continue before
         it is broken. If the break period is longer than the time remaining on the lease the remaining time on the lease
         is used. A new lease will not be available before the break period has expired, but the lease may be held for
         longer than the break period.
    return:
      type: com.azure.storage.file.share.options.ShareBreakLeaseOptions
      description: The updated options.
references:
- uid: com.azure.storage.file.share.options.ShareBreakLeaseOptions.ShareBreakLeaseOptions*
  name: ShareBreakLeaseOptions
  nameWithType: ShareBreakLeaseOptions.ShareBreakLeaseOptions
  fullName: com.azure.storage.file.share.options.ShareBreakLeaseOptions.ShareBreakLeaseOptions
  package: com.azure.storage.file.share.options
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.storage.file.share.options.ShareBreakLeaseOptions.getBreakPeriod*
  name: getBreakPeriod
  nameWithType: ShareBreakLeaseOptions.getBreakPeriod
  fullName: com.azure.storage.file.share.options.ShareBreakLeaseOptions.getBreakPeriod
  package: com.azure.storage.file.share.options
- uid: com.azure.storage.file.share.options.ShareBreakLeaseOptions.setBreakPeriod*
  name: setBreakPeriod
  nameWithType: ShareBreakLeaseOptions.setBreakPeriod
  fullName: com.azure.storage.file.share.options.ShareBreakLeaseOptions.setBreakPeriod
  package: com.azure.storage.file.share.options
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
