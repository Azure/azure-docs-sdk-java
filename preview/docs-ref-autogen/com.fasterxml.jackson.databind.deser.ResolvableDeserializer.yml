### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.ResolvableDeserializer
  id: ResolvableDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser
  children:
  - com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve(com.fasterxml.jackson.databind.DeserializationContext)
  langs:
  - java
  name: ResolvableDeserializer
  nameWithType: ResolvableDeserializer
  fullName: com.fasterxml.jackson.databind.deser.ResolvableDeserializer
  type: Interface
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Interface used to indicate deserializers that want to do post-processing after construction but before being returned to caller (and possibly cached) and used. This is typically used to resolve references to other contained types; for example, bean deserializers use this callback to locate deserializers for contained field types. Main reason for using a callback (instead of trying to resolve dependencies immediately) is to make it possible to cleanly handle self-references; otherwise it would be easy to get into infinite recursion.


    Note that <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve*" data-throw-if-not-resolved="false">#resolve</xref> method does NOT allow returning anything (specifically, a new deserializer instance): reason for this is that allowing this would not work with proper handling of cyclic dependencies, which are resolved by two-phase processing, where initially constructed deserializer is added as known deserializer, and only after this resolution is done. Resolution is the part that results in lookups for dependant deserializers, which may include handling references to deserializer itself.


    Note that in cases where deserializer needs both contextualization and resolution -- that is, implements both this interface and <xref uid="com.fasterxml.jackson.databind.deser.ContextualDeserializer" data-throw-if-not-resolved="false">ContextualDeserializer</xref> \-- resolution via this interface occurs first, and contextual resolution (using <xref uid="com.fasterxml.jackson.databind.deser.ContextualDeserializer" data-throw-if-not-resolved="false">ContextualDeserializer</xref>) later on.
  syntax:
    content: public interface ResolvableDeserializer
- uid: com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve(com.fasterxml.jackson.databind.DeserializationContext)
  id: resolve(com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.ResolvableDeserializer
  langs:
  - java
  name: resolve(DeserializationContext ctxt)
  nameWithType: ResolvableDeserializer.resolve(DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve(DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called after deserializer instance has been constructed (and registered as necessary by provider objects), but before it has returned it to the caller. Called object can then resolve its dependencies to other types, including self-references (direct or indirect).
  syntax:
    content: public abstract void resolve(DeserializationContext ctxt)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
      description: >-
        Context to use for accessing configuration, resolving
            secondary deserializers
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
references:
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve*
  name: resolve
  nameWithType: ResolvableDeserializer.resolve
  fullName: com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve
  package: com.fasterxml.jackson.databind.deser
