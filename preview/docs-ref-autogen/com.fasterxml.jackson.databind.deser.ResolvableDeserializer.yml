### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.deser.ResolvableDeserializer"
fullName: "com.fasterxml.jackson.databind.deser.ResolvableDeserializer"
name: "ResolvableDeserializer"
nameWithType: "ResolvableDeserializer"
summary: "Interface used to indicate deserializers that want to do post-processing after construction but before being returned to caller (and possibly cached) and used. This is typically used to resolve references to other contained types; for example, bean deserializers use this callback to locate deserializers for contained field types. Main reason for using a callback (instead of trying to resolve dependencies immediately) is to make it possible to cleanly handle self-references; otherwise it would be easy to get into infinite recursion.\n\nNote that <xref uid=\"com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#resolve\"></xref> method does NOT allow returning anything (specifically, a new deserializer instance): reason for this is that allowing this would not work with proper handling of cyclic dependencies, which are resolved by two-phase processing, where initially constructed deserializer is added as known deserializer, and only after this resolution is done. Resolution is the part that results in lookups for dependant deserializers, which may include handling references to deserializer itself.\n\nNote that in cases where deserializer needs both contextualization and resolution -- that is, implements both this interface and <xref uid=\"com.fasterxml.jackson.databind.deser.ContextualDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContextualDeserializer\"></xref> \\-- resolution via this interface occurs first, and contextual resolution (using <xref uid=\"com.fasterxml.jackson.databind.deser.ContextualDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContextualDeserializer\"></xref>) later on."
syntax: "public interface ResolvableDeserializer"
methods:
- "com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve(com.fasterxml.jackson.databind.DeserializationContext)"
type: "interface"
metadata: {}
package: "com.fasterxml.jackson.databind.deser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
