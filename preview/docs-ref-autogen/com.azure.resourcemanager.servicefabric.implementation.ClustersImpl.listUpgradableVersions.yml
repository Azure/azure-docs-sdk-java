### YamlMime:JavaMember
uid: "com.azure.resourcemanager.servicefabric.implementation.ClustersImpl.listUpgradableVersions*"
fullName: "com.azure.resourcemanager.servicefabric.implementation.ClustersImpl.listUpgradableVersions"
name: "listUpgradableVersions"
nameWithType: "ClustersImpl.listUpgradableVersions"
members:
- uid: "com.azure.resourcemanager.servicefabric.implementation.ClustersImpl.listUpgradableVersions(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.servicefabric.implementation.ClustersImpl.listUpgradableVersions(String resourceGroupName, String clusterName)"
  name: "listUpgradableVersions(String resourceGroupName, String clusterName)"
  nameWithType: "ClustersImpl.listUpgradableVersions(String resourceGroupName, String clusterName)"
  summary: "If a target is not provided, it will get the minimum and maximum versions available from the current cluster version. If a target is given, it will provide the required path to get from the current cluster version to the target version."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "clusterName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpgradableVersionPathResult listUpgradableVersions(String resourceGroupName, String clusterName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.UpgradableVersionPathResult?alt=com.azure.resourcemanager.servicefabric.models.UpgradableVersionPathResult&text=UpgradableVersionPathResult\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.servicefabric.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabric:1.0.0-beta.2
