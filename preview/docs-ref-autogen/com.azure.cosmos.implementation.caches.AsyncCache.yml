### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.caches.AsyncCache"
fullName: "com.azure.cosmos.implementation.caches.AsyncCache<TKey,TValue>"
name: "AsyncCache<TKey,TValue>"
nameWithType: "AsyncCache<TKey,TValue>"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AsyncCache<TKey,TValue>"
constructors:
- "com.azure.cosmos.implementation.caches.AsyncCache.AsyncCache()"
- "com.azure.cosmos.implementation.caches.AsyncCache.AsyncCache(com.azure.cosmos.implementation.caches.IEqualityComparer<TValue>)"
methods:
- "com.azure.cosmos.implementation.caches.AsyncCache.clear()"
- "com.azure.cosmos.implementation.caches.AsyncCache.getAsync(TKey,TValue,java.util.concurrent.Callable<reactor.core.publisher.Mono<TValue>>)"
- "com.azure.cosmos.implementation.caches.AsyncCache.refresh(TKey,java.util.concurrent.Callable<reactor.core.publisher.Mono<TValue>>)"
- "com.azure.cosmos.implementation.caches.AsyncCache.remove(TKey)"
- "com.azure.cosmos.implementation.caches.AsyncCache.removeAsync(TKey)"
- "com.azure.cosmos.implementation.caches.AsyncCache.set(TKey,TValue)"
type: "class"
typeParameters:
- name: "TKey"
- name: "TValue"
metadata: {}
package: "com.azure.cosmos.implementation.caches"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
