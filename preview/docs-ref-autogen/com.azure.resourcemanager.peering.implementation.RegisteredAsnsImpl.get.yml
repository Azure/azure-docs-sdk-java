### YamlMime:JavaMember
uid: "com.azure.resourcemanager.peering.implementation.RegisteredAsnsImpl.get*"
fullName: "com.azure.resourcemanager.peering.implementation.RegisteredAsnsImpl.get"
name: "get"
nameWithType: "RegisteredAsnsImpl.get"
members:
- uid: "com.azure.resourcemanager.peering.implementation.RegisteredAsnsImpl.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.peering.implementation.RegisteredAsnsImpl.get(String resourceGroupName, String peeringName, String registeredAsnName)"
  name: "get(String resourceGroupName, String peeringName, String registeredAsnName)"
  nameWithType: "RegisteredAsnsImpl.get(String resourceGroupName, String peeringName, String registeredAsnName)"
  summary: "Gets an existing registered ASN with the specified name under the given subscription, resource group and peering."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "peeringName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "registeredAsnName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PeeringRegisteredAsn get(String resourceGroupName, String peeringName, String registeredAsnName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringRegisteredAsn?alt=com.azure.resourcemanager.peering.models.PeeringRegisteredAsn&text=PeeringRegisteredAsn\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.peering.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
