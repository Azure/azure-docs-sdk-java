### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableListMultimap.replaceValues*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableListMultimap<K,V>.replaceValues"
name: "replaceValues"
nameWithType: "ImmutableListMultimap<K,V>.replaceValues"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableListMultimap.replaceValues(K,java.lang.Iterable<? extends V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableListMultimap<K,V>.replaceValues(K key, Iterable<? extends V> values)"
  name: "replaceValues(K key, Iterable<? extends V> values)"
  nameWithType: "ImmutableListMultimap<K,V>.replaceValues(K key, Iterable<? extends V> values)"
  summary: "Guaranteed to throw an exception and leave the multimap unmodified."
  overridden: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.replaceValues(K,java.lang.Iterable<? extends V>)"
  parameters:
  - name: "key"
    type: "<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />"
  - name: "values"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ImmutableList<V> replaceValues(K key, Iterable<? extends V> values)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableList&text=ImmutableList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
