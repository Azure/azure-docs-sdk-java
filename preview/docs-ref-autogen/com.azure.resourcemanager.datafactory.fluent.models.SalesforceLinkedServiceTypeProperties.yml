### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties"
name: "SalesforceLinkedServiceTypeProperties"
nameWithType: "SalesforceLinkedServiceTypeProperties"
summary: "Salesforce linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SalesforceLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.SalesforceLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.SalesforceLinkedServiceTypeProperties()"
  name: "SalesforceLinkedServiceTypeProperties()"
  nameWithType: "SalesforceLinkedServiceTypeProperties.SalesforceLinkedServiceTypeProperties()"
  syntax: "public SalesforceLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.apiVersion()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.apiVersion()"
  name: "apiVersion()"
  nameWithType: "SalesforceLinkedServiceTypeProperties.apiVersion()"
  summary: "Get the api<wbr>Version property: The Salesforce API version used in ADF."
  syntax: "public Object apiVersion()"
  desc: "Get the apiVersion property: The Salesforce API version used in ADF. Type: string (or Expression with resultType string)."
  returns:
    description: "the apiVersion value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "SalesforceLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.environmentUrl()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.environmentUrl()"
  name: "environmentUrl()"
  nameWithType: "SalesforceLinkedServiceTypeProperties.environmentUrl()"
  summary: "Get the environment<wbr>Url property: The URL of Salesforce instance."
  syntax: "public Object environmentUrl()"
  desc: "Get the environmentUrl property: The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://\\[domain\\].my.salesforce.com'. Type: string (or Expression with resultType string)."
  returns:
    description: "the environmentUrl value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "SalesforceLinkedServiceTypeProperties.password()"
  summary: "Get the password property: The password for Basic authentication of the Salesforce instance."
  syntax: "public SecretBase password()"
  desc: "Get the password property: The password for Basic authentication of the Salesforce instance."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.securityToken()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.securityToken()"
  name: "securityToken()"
  nameWithType: "SalesforceLinkedServiceTypeProperties.securityToken()"
  summary: "Get the security<wbr>Token property: The security token is optional to remotely access Salesforce instance."
  syntax: "public SecretBase securityToken()"
  desc: "Get the securityToken property: The security token is optional to remotely access Salesforce instance."
  returns:
    description: "the securityToken value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "SalesforceLinkedServiceTypeProperties.username()"
  summary: "Get the username property: The username for Basic authentication of the Salesforce instance."
  syntax: "public Object username()"
  desc: "Get the username property: The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string)."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "SalesforceLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.withApiVersion(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.withApiVersion(Object apiVersion)"
  name: "withApiVersion(Object apiVersion)"
  nameWithType: "SalesforceLinkedServiceTypeProperties.withApiVersion(Object apiVersion)"
  summary: "Set the api<wbr>Version property: The Salesforce API version used in ADF."
  parameters:
  - description: "the apiVersion value to set."
    name: "apiVersion"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SalesforceLinkedServiceTypeProperties withApiVersion(Object apiVersion)"
  desc: "Set the apiVersion property: The Salesforce API version used in ADF. Type: string (or Expression with resultType string)."
  returns:
    description: "the SalesforceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties&text=SalesforceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "SalesforceLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SalesforceLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the SalesforceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties&text=SalesforceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.withEnvironmentUrl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.withEnvironmentUrl(Object environmentUrl)"
  name: "withEnvironmentUrl(Object environmentUrl)"
  nameWithType: "SalesforceLinkedServiceTypeProperties.withEnvironmentUrl(Object environmentUrl)"
  summary: "Set the environment<wbr>Url property: The URL of Salesforce instance."
  parameters:
  - description: "the environmentUrl value to set."
    name: "environmentUrl"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SalesforceLinkedServiceTypeProperties withEnvironmentUrl(Object environmentUrl)"
  desc: "Set the environmentUrl property: The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://\\[domain\\].my.salesforce.com'. Type: string (or Expression with resultType string)."
  returns:
    description: "the SalesforceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties&text=SalesforceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "SalesforceLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: The password for Basic authentication of the Salesforce instance."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SalesforceLinkedServiceTypeProperties withPassword(SecretBase password)"
  desc: "Set the password property: The password for Basic authentication of the Salesforce instance."
  returns:
    description: "the SalesforceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties&text=SalesforceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.withSecurityToken(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.withSecurityToken(SecretBase securityToken)"
  name: "withSecurityToken(SecretBase securityToken)"
  nameWithType: "SalesforceLinkedServiceTypeProperties.withSecurityToken(SecretBase securityToken)"
  summary: "Set the security<wbr>Token property: The security token is optional to remotely access Salesforce instance."
  parameters:
  - description: "the securityToken value to set."
    name: "securityToken"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SalesforceLinkedServiceTypeProperties withSecurityToken(SecretBase securityToken)"
  desc: "Set the securityToken property: The security token is optional to remotely access Salesforce instance."
  returns:
    description: "the SalesforceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties&text=SalesforceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "SalesforceLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: The username for Basic authentication of the Salesforce instance."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SalesforceLinkedServiceTypeProperties withUsername(Object username)"
  desc: "Set the username property: The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string)."
  returns:
    description: "the SalesforceLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SalesforceLinkedServiceTypeProperties&text=SalesforceLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Salesforce linked service properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
