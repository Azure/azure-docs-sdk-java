### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties"
name: "SapEccLinkedServiceTypeProperties"
nameWithType: "SapEccLinkedServiceTypeProperties"
summary: "SAP ECC linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SapEccLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.SapEccLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.SapEccLinkedServiceTypeProperties()"
  name: "SapEccLinkedServiceTypeProperties()"
  nameWithType: "SapEccLinkedServiceTypeProperties.SapEccLinkedServiceTypeProperties()"
  syntax: "public SapEccLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "SapEccLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public String encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "SapEccLinkedServiceTypeProperties.password()"
  summary: "Get the password property: The password for Basic authentication."
  syntax: "public SecretBase password()"
  desc: "Get the password property: The password for Basic authentication."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.url()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.url()"
  name: "url()"
  nameWithType: "SapEccLinkedServiceTypeProperties.url()"
  summary: "Get the url property: The URL of SAP ECC OData API."
  syntax: "public String url()"
  desc: "Get the url property: The URL of SAP ECC OData API. For example, '\\[https://hostname:port/sap/opu/odata/sap/servicename/\\]'. Type: string (or Expression with resultType string)."
  returns:
    description: "the url value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "SapEccLinkedServiceTypeProperties.username()"
  summary: "Get the username property: The username for Basic authentication."
  syntax: "public String username()"
  desc: "Get the username property: The username for Basic authentication. Type: string (or Expression with resultType string)."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "SapEccLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.withEncryptedCredential(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.withEncryptedCredential(String encryptedCredential)"
  name: "withEncryptedCredential(String encryptedCredential)"
  nameWithType: "SapEccLinkedServiceTypeProperties.withEncryptedCredential(String encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SapEccLinkedServiceTypeProperties withEncryptedCredential(String encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string)."
  returns:
    description: "the SapEccLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties&text=SapEccLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "SapEccLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: The password for Basic authentication."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SapEccLinkedServiceTypeProperties withPassword(SecretBase password)"
  desc: "Set the password property: The password for Basic authentication."
  returns:
    description: "the SapEccLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties&text=SapEccLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.withUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.withUrl(String url)"
  name: "withUrl(String url)"
  nameWithType: "SapEccLinkedServiceTypeProperties.withUrl(String url)"
  summary: "Set the url property: The URL of SAP ECC OData API."
  parameters:
  - description: "the url value to set."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SapEccLinkedServiceTypeProperties withUrl(String url)"
  desc: "Set the url property: The URL of SAP ECC OData API. For example, '\\[https://hostname:port/sap/opu/odata/sap/servicename/\\]'. Type: string (or Expression with resultType string)."
  returns:
    description: "the SapEccLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties&text=SapEccLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.withUsername(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties.withUsername(String username)"
  name: "withUsername(String username)"
  nameWithType: "SapEccLinkedServiceTypeProperties.withUsername(String username)"
  summary: "Set the username property: The username for Basic authentication."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SapEccLinkedServiceTypeProperties withUsername(String username)"
  desc: "Set the username property: The username for Basic authentication. Type: string (or Expression with resultType string)."
  returns:
    description: "the SapEccLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.SapEccLinkedServiceTypeProperties&text=SapEccLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "SAP ECC linked service properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
