### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity
  id: GzipCompressingEntity
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity
  children:
  - org.apache.hc.client5.http.entity.GzipCompressingEntity.GzipCompressingEntity(org.apache.hc.core5.http.HttpEntity)
  - org.apache.hc.client5.http.entity.GzipCompressingEntity.getContent()
  - org.apache.hc.client5.http.entity.GzipCompressingEntity.getContentEncoding()
  - org.apache.hc.client5.http.entity.GzipCompressingEntity.getContentLength()
  - org.apache.hc.client5.http.entity.GzipCompressingEntity.isChunked()
  - org.apache.hc.client5.http.entity.GzipCompressingEntity.writeTo(java.io.OutputStream)
  langs:
  - java
  name: GzipCompressingEntity
  nameWithType: GzipCompressingEntity
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity
  type: Class
  package: org.apache.hc.client5.http.entity
  summary: Wrapping entity that compresses content when <xref uid="org.apache.hc.client5.http.entity.GzipCompressingEntity.writeTo*" data-throw-if-not-resolved="false">writing</xref>.
  syntax:
    content: public class GzipCompressingEntity extends HttpEntityWrapper
  inheritance:
  - java.lang.Object
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper.close()
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getContent()
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getContentEncoding()
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getContentLength()
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getContentType()
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getTrailerNames()
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getTrailers()
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper.isChunked()
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper.isRepeatable()
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper.isStreaming()
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper.toString()
  - org.apache.hc.core5.http.io.entity.HttpEntityWrapper.writeTo(java.io.OutputStream)
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity.GzipCompressingEntity(org.apache.hc.core5.http.HttpEntity)
  id: GzipCompressingEntity(org.apache.hc.core5.http.HttpEntity)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.GzipCompressingEntity
  langs:
  - java
  name: GzipCompressingEntity(HttpEntity entity)
  nameWithType: GzipCompressingEntity.GzipCompressingEntity(HttpEntity entity)
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity.GzipCompressingEntity(HttpEntity entity)
  overload: org.apache.hc.client5.http.entity.GzipCompressingEntity.GzipCompressingEntity*
  type: Constructor
  package: org.apache.hc.client5.http.entity
  syntax:
    content: public GzipCompressingEntity(HttpEntity entity)
    parameters:
    - id: entity
      type: org.apache.hc.core5.http.HttpEntity
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContent()
  id: getContent()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.GzipCompressingEntity
  langs:
  - java
  name: getContent()
  nameWithType: GzipCompressingEntity.getContent()
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContent()
  overload: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContent*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: >-
    Returns a content stream of the entity. <xref uid="org.apache.hc.client5.http.entity.GzipCompressingEntity.isRepeatable" data-throw-if-not-resolved="false">Repeatable</xref> entities are expected to create a new instance of <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">InputStream</xref> for each invocation of this method and therefore can be consumed multiple times. Entities that are not <xref uid="org.apache.hc.client5.http.entity.GzipCompressingEntity.isRepeatable" data-throw-if-not-resolved="false">repeatable</xref> are expected to return the same <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">InputStream</xref> instance and therefore may not be consumed more than once.


    IMPORTANT: Please note all entity implementations must ensure that all allocated resources are properly deallocated after the <xref uid="java.io.InputStream.close()" data-throw-if-not-resolved="false">InputStream#close()</xref> method is invoked.
  syntax:
    content: public InputStream getContent()
    return:
      type: java.io.InputStream
  exceptions:
  - type: java.io.IOException
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContentEncoding()
  id: getContentEncoding()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.GzipCompressingEntity
  langs:
  - java
  name: getContentEncoding()
  nameWithType: GzipCompressingEntity.getContentEncoding()
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContentEncoding()
  overload: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContentEncoding*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: Returns content encoding of the entity, if known.
  syntax:
    content: public String getContentEncoding()
    return:
      type: java.lang.String
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContentLength()
  id: getContentLength()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.GzipCompressingEntity
  langs:
  - java
  name: getContentLength()
  nameWithType: GzipCompressingEntity.getContentLength()
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContentLength()
  overload: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContentLength*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: Returns length of the entity, if known.
  syntax:
    content: public long getContentLength()
    return:
      type: long
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity.isChunked()
  id: isChunked()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.GzipCompressingEntity
  langs:
  - java
  name: isChunked()
  nameWithType: GzipCompressingEntity.isChunked()
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity.isChunked()
  overload: org.apache.hc.client5.http.entity.GzipCompressingEntity.isChunked*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: >-
    Returns chunked transfer hint for this entity.


    The behavior of wrapping entities is implementation dependent, but should respect the primary purpose.
  syntax:
    content: public boolean isChunked()
    return:
      type: boolean
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity.writeTo(java.io.OutputStream)
  id: writeTo(java.io.OutputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.entity.GzipCompressingEntity
  langs:
  - java
  name: writeTo(OutputStream outStream)
  nameWithType: GzipCompressingEntity.writeTo(OutputStream outStream)
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity.writeTo(OutputStream outStream)
  overload: org.apache.hc.client5.http.entity.GzipCompressingEntity.writeTo*
  type: Method
  package: org.apache.hc.client5.http.entity
  summary: >-
    Writes the entity content out to the output stream.


    IMPORTANT: Please note all entity implementations must ensure that all allocated resources are properly deallocated when this method returns.
  syntax:
    content: public void writeTo(OutputStream outStream)
    parameters:
    - id: outStream
      type: java.io.OutputStream
  exceptions:
  - type: java.io.IOException
references:
- uid: org.apache.hc.core5.http.HttpEntity
  name: HttpEntity
  nameWithType: HttpEntity
  fullName: org.apache.hc.core5.http.HttpEntity
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity.GzipCompressingEntity*
  name: GzipCompressingEntity
  nameWithType: GzipCompressingEntity.GzipCompressingEntity
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity.GzipCompressingEntity
  package: org.apache.hc.client5.http.entity
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContentEncoding*
  name: getContentEncoding
  nameWithType: GzipCompressingEntity.getContentEncoding
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContentEncoding
  package: org.apache.hc.client5.http.entity
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContentLength*
  name: getContentLength
  nameWithType: GzipCompressingEntity.getContentLength
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContentLength
  package: org.apache.hc.client5.http.entity
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity.isChunked*
  name: isChunked
  nameWithType: GzipCompressingEntity.isChunked
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity.isChunked
  package: org.apache.hc.client5.http.entity
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContent*
  name: getContent
  nameWithType: GzipCompressingEntity.getContent
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity.getContent
  package: org.apache.hc.client5.http.entity
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: org.apache.hc.client5.http.entity.GzipCompressingEntity.writeTo*
  name: writeTo
  nameWithType: GzipCompressingEntity.writeTo
  fullName: org.apache.hc.client5.http.entity.GzipCompressingEntity.writeTo
  package: org.apache.hc.client5.http.entity
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper
  name: HttpEntityWrapper
  nameWithType: HttpEntityWrapper
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.close()
  name: HttpEntityWrapper.close()
  nameWithType: HttpEntityWrapper.close()
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.close()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getContentEncoding()
  name: HttpEntityWrapper.getContentEncoding()
  nameWithType: HttpEntityWrapper.getContentEncoding()
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getContentEncoding()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.writeTo(java.io.OutputStream)
  name: HttpEntityWrapper.writeTo(OutputStream)
  nameWithType: HttpEntityWrapper.writeTo(OutputStream)
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.writeTo(java.io.OutputStream)
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getContentType()
  name: HttpEntityWrapper.getContentType()
  nameWithType: HttpEntityWrapper.getContentType()
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getContentType()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.toString()
  name: HttpEntityWrapper.toString()
  nameWithType: HttpEntityWrapper.toString()
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.toString()
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getTrailerNames()
  name: HttpEntityWrapper.getTrailerNames()
  nameWithType: HttpEntityWrapper.getTrailerNames()
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getTrailerNames()
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getContent()
  name: HttpEntityWrapper.getContent()
  nameWithType: HttpEntityWrapper.getContent()
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getContent()
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.isStreaming()
  name: HttpEntityWrapper.isStreaming()
  nameWithType: HttpEntityWrapper.isStreaming()
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.isStreaming()
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getContentLength()
  name: HttpEntityWrapper.getContentLength()
  nameWithType: HttpEntityWrapper.getContentLength()
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getContentLength()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.isRepeatable()
  name: HttpEntityWrapper.isRepeatable()
  nameWithType: HttpEntityWrapper.isRepeatable()
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.isRepeatable()
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.isChunked()
  name: HttpEntityWrapper.isChunked()
  nameWithType: HttpEntityWrapper.isChunked()
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.isChunked()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getTrailers()
  name: HttpEntityWrapper.getTrailers()
  nameWithType: HttpEntityWrapper.getTrailers()
  fullName: org.apache.hc.core5.http.io.entity.HttpEntityWrapper.getTrailers()
