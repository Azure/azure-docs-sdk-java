### YamlMime:JavaMember
uid: "com.azure.resourcemanager.securityinsights.implementation.WatchlistItemImpl.withExistingWatchlist*"
fullName: "com.azure.resourcemanager.securityinsights.implementation.WatchlistItemImpl.withExistingWatchlist"
name: "withExistingWatchlist"
nameWithType: "WatchlistItemImpl.withExistingWatchlist"
members:
- uid: "com.azure.resourcemanager.securityinsights.implementation.WatchlistItemImpl.withExistingWatchlist(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.securityinsights.implementation.WatchlistItemImpl.withExistingWatchlist(String resourceGroupName, String workspaceName, String watchlistAlias)"
  name: "withExistingWatchlist(String resourceGroupName, String workspaceName, String watchlistAlias)"
  nameWithType: "WatchlistItemImpl.withExistingWatchlist(String resourceGroupName, String workspaceName, String watchlistAlias)"
  summary: "Specifies resourceGroupName, workspaceName, watchlistAlias."
  parameters:
  - name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "workspaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "watchlistAlias"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WatchlistItemImpl withExistingWatchlist(String resourceGroupName, String workspaceName, String watchlistAlias)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.implementation.WatchlistItemImpl?alt=com.azure.resourcemanager.securityinsights.implementation.WatchlistItemImpl&text=WatchlistItemImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.securityinsights.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-securityinsights:1.0.0-beta.1
