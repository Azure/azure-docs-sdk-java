### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient"
fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient"
name: "TopicsClient"
nameWithType: "TopicsClient"
summary: "An instance of this class provides access to all the operations defined in Topics<wbr>Client."
syntax: "public interface TopicsClient"
methods:
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.fluent.models.TopicInner)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginCreateOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo)"
  name: "beginCreateOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo)"
  nameWithType: "TopicsClient.beginCreateOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo)"
  summary: "Asynchronously creates a new topic with the specified parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Topic information."
    name: "topicInfo"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<TopicInner>,TopicInner> beginCreateOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo)"
  desc: "Asynchronously creates a new topic with the specified parameters."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of eventGrid Topic."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.fluent.models.TopicInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginCreateOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo, Context context)"
  name: "beginCreateOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo, Context context)"
  nameWithType: "TopicsClient.beginCreateOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo, Context context)"
  summary: "Asynchronously creates a new topic with the specified parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Topic information."
    name: "topicInfo"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<TopicInner>,TopicInner> beginCreateOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo, Context context)"
  desc: "Asynchronously creates a new topic with the specified parameters."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of eventGrid Topic."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginDelete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginDelete(String resourceGroupName, String topicName)"
  name: "beginDelete(String resourceGroupName, String topicName)"
  nameWithType: "TopicsClient.beginDelete(String resourceGroupName, String topicName)"
  summary: "Delete existing topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String topicName)"
  desc: "Delete existing topic."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginDelete(String resourceGroupName, String topicName, Context context)"
  name: "beginDelete(String resourceGroupName, String topicName, Context context)"
  nameWithType: "TopicsClient.beginDelete(String resourceGroupName, String topicName, Context context)"
  summary: "Delete existing topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String topicName, Context context)"
  desc: "Delete existing topic."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginRegenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginRegenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest)"
  name: "beginRegenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest)"
  nameWithType: "TopicsClient.beginRegenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest)"
  summary: "Regenerate a shared access key for a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest&text=TopicRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<TopicSharedAccessKeysInner>,TopicSharedAccessKeysInner> beginRegenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest)"
  desc: "Regenerate a shared access key for a topic."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of shared access keys of the Topic."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner&text=TopicSharedAccessKeysInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner&text=TopicSharedAccessKeysInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginRegenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginRegenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  name: "beginRegenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  nameWithType: "TopicsClient.beginRegenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  summary: "Regenerate a shared access key for a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest&text=TopicRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<TopicSharedAccessKeysInner>,TopicSharedAccessKeysInner> beginRegenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  desc: "Regenerate a shared access key for a topic."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of shared access keys of the Topic."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner&text=TopicSharedAccessKeysInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner&text=TopicSharedAccessKeysInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.TopicUpdateParameters)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginUpdate(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters)"
  name: "beginUpdate(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters)"
  nameWithType: "TopicsClient.beginUpdate(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters)"
  summary: "Asynchronously updates a topic with the specified parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Topic update information."
    name: "topicUpdateParameters"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicUpdateParameters?alt=com.azure.resourcemanager.eventgrid.models.TopicUpdateParameters&text=TopicUpdateParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<TopicInner>,TopicInner> beginUpdate(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters)"
  desc: "Asynchronously updates a topic with the specified parameters."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.TopicUpdateParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.beginUpdate(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters, Context context)"
  name: "beginUpdate(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters, Context context)"
  nameWithType: "TopicsClient.beginUpdate(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters, Context context)"
  summary: "Asynchronously updates a topic with the specified parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Topic update information."
    name: "topicUpdateParameters"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicUpdateParameters?alt=com.azure.resourcemanager.eventgrid.models.TopicUpdateParameters&text=TopicUpdateParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<TopicInner>,TopicInner> beginUpdate(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters, Context context)"
  desc: "Asynchronously updates a topic with the specified parameters."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.fluent.models.TopicInner)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.createOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo)"
  name: "createOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo)"
  nameWithType: "TopicsClient.createOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo)"
  summary: "Asynchronously creates a new topic with the specified parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Topic information."
    name: "topicInfo"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicInner createOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo)"
  desc: "Asynchronously creates a new topic with the specified parameters."
  returns:
    description: "eventGrid Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.fluent.models.TopicInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.createOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo, Context context)"
  name: "createOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo, Context context)"
  nameWithType: "TopicsClient.createOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo, Context context)"
  summary: "Asynchronously creates a new topic with the specified parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Topic information."
    name: "topicInfo"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicInner createOrUpdate(String resourceGroupName, String topicName, TopicInner topicInfo, Context context)"
  desc: "Asynchronously creates a new topic with the specified parameters."
  returns:
    description: "eventGrid Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.delete(String resourceGroupName, String topicName)"
  name: "delete(String resourceGroupName, String topicName)"
  nameWithType: "TopicsClient.delete(String resourceGroupName, String topicName)"
  summary: "Delete existing topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String topicName)"
  desc: "Delete existing topic."
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.delete(String resourceGroupName, String topicName, Context context)"
  name: "delete(String resourceGroupName, String topicName, Context context)"
  nameWithType: "TopicsClient.delete(String resourceGroupName, String topicName, Context context)"
  summary: "Delete existing topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String topicName, Context context)"
  desc: "Delete existing topic."
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.getByResourceGroup(String resourceGroupName, String topicName)"
  name: "getByResourceGroup(String resourceGroupName, String topicName)"
  nameWithType: "TopicsClient.getByResourceGroup(String resourceGroupName, String topicName)"
  summary: "Get properties of a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicInner getByResourceGroup(String resourceGroupName, String topicName)"
  desc: "Get properties of a topic."
  returns:
    description: "properties of a topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.getByResourceGroupWithResponse(String resourceGroupName, String topicName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String topicName, Context context)"
  nameWithType: "TopicsClient.getByResourceGroupWithResponse(String resourceGroupName, String topicName, Context context)"
  summary: "Get properties of a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<TopicInner> getByResourceGroupWithResponse(String resourceGroupName, String topicName, Context context)"
  desc: "Get properties of a topic."
  returns:
    description: "properties of a topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.list()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.list()"
  name: "list()"
  nameWithType: "TopicsClient.list()"
  summary: "List all the topics under an Azure subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<TopicInner> list()"
  desc: "List all the topics under an Azure subscription."
  returns:
    description: "result of the List Topics operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.list(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.list(String filter, Integer top, Context context)"
  name: "list(String filter, Integer top, Context context)"
  nameWithType: "TopicsClient.list(String filter, Integer top, Context context)"
  summary: "List all the topics under an Azure subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The query used to filter the search results using OData syntax. Filtering is permitted on the\n     'name' property only and with limited number of OData operations. These operations are: the 'contains'\n     function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal).\n     No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE,\n     'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq\n     'westus'."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of results to return per page for the list operation. Valid range for top parameter is 1 to\n     100. If not specified, the default number of results to be returned is 20 items per page."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<TopicInner> list(String filter, Integer top, Context context)"
  desc: "List all the topics under an Azure subscription."
  returns:
    description: "result of the List Topics operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "TopicsClient.listByResourceGroup(String resourceGroupName)"
  summary: "List all the topics under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<TopicInner> listByResourceGroup(String resourceGroupName)"
  desc: "List all the topics under a resource group."
  returns:
    description: "result of the List Topics operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.listByResourceGroup(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  name: "listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  nameWithType: "TopicsClient.listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  summary: "List all the topics under a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The query used to filter the search results using OData syntax. Filtering is permitted on the\n     'name' property only and with limited number of OData operations. These operations are: the 'contains'\n     function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal).\n     No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE,\n     'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq\n     'westus'."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of results to return per page for the list operation. Valid range for top parameter is 1 to\n     100. If not specified, the default number of results to be returned is 20 items per page."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<TopicInner> listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  desc: "List all the topics under a resource group."
  returns:
    description: "result of the List Topics operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.listEventTypes(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName)"
  name: "listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName)"
  nameWithType: "TopicsClient.listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName)"
  summary: "List event types for a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Namespace of the provider of the topic."
    name: "providerNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic type."
    name: "resourceTypeName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<EventTypeInner> listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName)"
  desc: "List event types for a topic."
  returns:
    description: "result of the List Event Types operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.EventTypeInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.EventTypeInner&text=EventTypeInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.listEventTypes(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName, Context context)"
  name: "listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName, Context context)"
  nameWithType: "TopicsClient.listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName, Context context)"
  summary: "List event types for a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Namespace of the provider of the topic."
    name: "providerNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic type."
    name: "resourceTypeName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<EventTypeInner> listEventTypes(String resourceGroupName, String providerNamespace, String resourceTypeName, String resourceName, Context context)"
  desc: "List event types for a topic."
  returns:
    description: "result of the List Event Types operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.EventTypeInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.EventTypeInner&text=EventTypeInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.listSharedAccessKeys(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.listSharedAccessKeys(String resourceGroupName, String topicName)"
  name: "listSharedAccessKeys(String resourceGroupName, String topicName)"
  nameWithType: "TopicsClient.listSharedAccessKeys(String resourceGroupName, String topicName)"
  summary: "List the two keys used to publish to a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicSharedAccessKeysInner listSharedAccessKeys(String resourceGroupName, String topicName)"
  desc: "List the two keys used to publish to a topic."
  returns:
    description: "shared access keys of the Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner&text=TopicSharedAccessKeysInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.listSharedAccessKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.listSharedAccessKeysWithResponse(String resourceGroupName, String topicName, Context context)"
  name: "listSharedAccessKeysWithResponse(String resourceGroupName, String topicName, Context context)"
  nameWithType: "TopicsClient.listSharedAccessKeysWithResponse(String resourceGroupName, String topicName, Context context)"
  summary: "List the two keys used to publish to a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<TopicSharedAccessKeysInner> listSharedAccessKeysWithResponse(String resourceGroupName, String topicName, Context context)"
  desc: "List the two keys used to publish to a topic."
  returns:
    description: "shared access keys of the Topic along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner&text=TopicSharedAccessKeysInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.regenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest)"
  name: "regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest)"
  nameWithType: "TopicsClient.regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest)"
  summary: "Regenerate a shared access key for a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest&text=TopicRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicSharedAccessKeysInner regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest)"
  desc: "Regenerate a shared access key for a topic."
  returns:
    description: "shared access keys of the Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner&text=TopicSharedAccessKeysInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.regenerateKey(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  name: "regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  nameWithType: "TopicsClient.regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  summary: "Regenerate a shared access key for a topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Request body to regenerate key."
    name: "regenerateKeyRequest"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest?alt=com.azure.resourcemanager.eventgrid.models.TopicRegenerateKeyRequest&text=TopicRegenerateKeyRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicSharedAccessKeysInner regenerateKey(String resourceGroupName, String topicName, TopicRegenerateKeyRequest regenerateKeyRequest, Context context)"
  desc: "Regenerate a shared access key for a topic."
  returns:
    description: "shared access keys of the Topic."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicSharedAccessKeysInner&text=TopicSharedAccessKeysInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.TopicUpdateParameters)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.update(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters)"
  name: "update(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters)"
  nameWithType: "TopicsClient.update(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters)"
  summary: "Asynchronously updates a topic with the specified parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Topic update information."
    name: "topicUpdateParameters"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicUpdateParameters?alt=com.azure.resourcemanager.eventgrid.models.TopicUpdateParameters&text=TopicUpdateParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicInner update(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters)"
  desc: "Asynchronously updates a topic with the specified parameters."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.eventgrid.models.TopicUpdateParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.TopicsClient.update(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters, Context context)"
  name: "update(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters, Context context)"
  nameWithType: "TopicsClient.update(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters, Context context)"
  summary: "Asynchronously updates a topic with the specified parameters."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the topic."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Topic update information."
    name: "topicUpdateParameters"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.TopicUpdateParameters?alt=com.azure.resourcemanager.eventgrid.models.TopicUpdateParameters&text=TopicUpdateParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract TopicInner update(String resourceGroupName, String topicName, TopicUpdateParameters topicUpdateParameters, Context context)"
  desc: "Asynchronously updates a topic with the specified parameters."
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.TopicInner?alt=com.azure.resourcemanager.eventgrid.fluent.models.TopicInner&text=TopicInner\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in TopicsClient."
metadata: {}
package: "com.azure.resourcemanager.eventgrid.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
