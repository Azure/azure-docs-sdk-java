### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager
  id: DatabaseManager
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation
  children:
  - com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.createDatabase(com.azure.cosmos.implementation.Database)
  - com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.deleteDatabase(java.lang.String)
  - com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.queryDatabases(com.azure.cosmos.models.SqlQuerySpec)
  langs:
  - java
  name: DatabaseForTest.DatabaseManager
  nameWithType: DatabaseForTest.DatabaseManager
  fullName: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager
  type: Interface
  package: com.azure.cosmos.implementation
  syntax:
    content: public static interface DatabaseForTest.DatabaseManager
- uid: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.createDatabase(com.azure.cosmos.implementation.Database)
  id: createDatabase(com.azure.cosmos.implementation.Database)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager
  langs:
  - java
  name: createDatabase(Database databaseDefinition)
  nameWithType: DatabaseForTest.DatabaseManager.createDatabase(Database databaseDefinition)
  fullName: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.createDatabase(Database databaseDefinition)
  overload: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.createDatabase*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public abstract Mono<ResourceResponse<Database>> createDatabase(Database databaseDefinition)
    parameters:
    - id: databaseDefinition
      type: com.azure.cosmos.implementation.Database
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Database>>
- uid: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.deleteDatabase(java.lang.String)
  id: deleteDatabase(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager
  langs:
  - java
  name: deleteDatabase(String id)
  nameWithType: DatabaseForTest.DatabaseManager.deleteDatabase(String id)
  fullName: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.deleteDatabase(String id)
  overload: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.deleteDatabase*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public abstract Mono<ResourceResponse<Database>> deleteDatabase(String id)
    parameters:
    - id: id
      type: java.lang.String
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Database>>
- uid: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.queryDatabases(com.azure.cosmos.models.SqlQuerySpec)
  id: queryDatabases(com.azure.cosmos.models.SqlQuerySpec)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager
  langs:
  - java
  name: queryDatabases(SqlQuerySpec query)
  nameWithType: DatabaseForTest.DatabaseManager.queryDatabases(SqlQuerySpec query)
  fullName: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.queryDatabases(SqlQuerySpec query)
  overload: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.queryDatabases*
  type: Method
  package: com.azure.cosmos.implementation
  syntax:
    content: public abstract Flux<FeedResponse<Database>> queryDatabases(SqlQuerySpec query)
    parameters:
    - id: query
      type: com.azure.cosmos.models.SqlQuerySpec
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<com.azure.cosmos.implementation.Database>>
references:
- uid: com.azure.cosmos.models.SqlQuerySpec
  name: SqlQuerySpec
  nameWithType: SqlQuerySpec
  fullName: com.azure.cosmos.models.SqlQuerySpec
- uid: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<com.azure.cosmos.implementation.Database>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.Database
    name: Database
    fullName: com.azure.cosmos.implementation.Database
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.queryDatabases*
  name: queryDatabases
  nameWithType: DatabaseForTest.DatabaseManager.queryDatabases
  fullName: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.queryDatabases
  package: com.azure.cosmos.implementation
- uid: com.azure.cosmos.implementation.Database
  name: Database
  nameWithType: Database
  fullName: com.azure.cosmos.implementation.Database
- uid: reactor.core.publisher.Mono<com.azure.cosmos.implementation.ResourceResponse<com.azure.cosmos.implementation.Database>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.ResourceResponse
    name: ResourceResponse
    fullName: com.azure.cosmos.implementation.ResourceResponse
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.Database
    name: Database
    fullName: com.azure.cosmos.implementation.Database
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.createDatabase*
  name: createDatabase
  nameWithType: DatabaseForTest.DatabaseManager.createDatabase
  fullName: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.createDatabase
  package: com.azure.cosmos.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.deleteDatabase*
  name: deleteDatabase
  nameWithType: DatabaseForTest.DatabaseManager.deleteDatabase
  fullName: com.azure.cosmos.implementation.DatabaseForTest.DatabaseManager.deleteDatabase
  package: com.azure.cosmos.implementation
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: com.azure.cosmos.models.FeedResponse
  name: FeedResponse
  nameWithType: FeedResponse
  fullName: com.azure.cosmos.models.FeedResponse
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.cosmos.implementation.ResourceResponse
  name: ResourceResponse
  nameWithType: ResourceResponse
  fullName: com.azure.cosmos.implementation.ResourceResponse
