### YamlMime:JavaType
uid: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings"
fullName: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings"
name: "WebApplicationFirewallSettings"
nameWithType: "WebApplicationFirewallSettings"
summary: "Settings for the NGINX App Protect Web Application Firewall (WAF)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **WebApplicationFirewallSettings**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings?alt=com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings&text=WebApplicationFirewallSettings\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings.WebApplicationFirewallSettings()"
  fullName: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings.WebApplicationFirewallSettings()"
  name: "WebApplicationFirewallSettings()"
  nameWithType: "WebApplicationFirewallSettings.WebApplicationFirewallSettings()"
  summary: "Creates an instance of Web<wbr>Application<wbr>Firewall<wbr>Settings class."
  syntax: "public WebApplicationFirewallSettings()"
  desc: "Creates an instance of WebApplicationFirewallSettings class."
methods:
- uid: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings.activationState()"
  fullName: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings.activationState()"
  name: "activationState()"
  nameWithType: "WebApplicationFirewallSettings.activationState()"
  summary: "Get the activation<wbr>State property: The activation state of the WAF."
  syntax: "public ActivationState activationState()"
  desc: "Get the activationState property: The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it."
  returns:
    description: "the activationState value."
    type: "<xref href=\"com.azure.resourcemanager.nginx.models.ActivationState?alt=com.azure.resourcemanager.nginx.models.ActivationState&text=ActivationState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "WebApplicationFirewallSettings.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Web<wbr>Application<wbr>Firewall<wbr>Settings from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static WebApplicationFirewallSettings fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the WebApplicationFirewallSettings."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of WebApplicationFirewallSettings from the JsonReader."
  returns:
    description: "An instance of WebApplicationFirewallSettings if the JsonReader was pointing to an instance of it, or\n null if it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings?alt=com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings&text=WebApplicationFirewallSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "WebApplicationFirewallSettings.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings.validate()"
  fullName: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings.validate()"
  name: "validate()"
  nameWithType: "WebApplicationFirewallSettings.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings.withActivationState(com.azure.resourcemanager.nginx.models.ActivationState)"
  fullName: "com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings.withActivationState(ActivationState activationState)"
  name: "withActivationState(ActivationState activationState)"
  nameWithType: "WebApplicationFirewallSettings.withActivationState(ActivationState activationState)"
  summary: "Set the activation<wbr>State property: The activation state of the WAF."
  parameters:
  - description: "the activationState value to set."
    name: "activationState"
    type: "<xref href=\"com.azure.resourcemanager.nginx.models.ActivationState?alt=com.azure.resourcemanager.nginx.models.ActivationState&text=ActivationState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public WebApplicationFirewallSettings withActivationState(ActivationState activationState)"
  desc: "Set the activationState property: The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it."
  returns:
    description: "the WebApplicationFirewallSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings?alt=com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings&text=WebApplicationFirewallSettings\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Settings for the NGINX App Protect Web Application Firewall (WAF)."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings?alt=com.azure.resourcemanager.nginx.models.WebApplicationFirewallSettings&text=WebApplicationFirewallSettings\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.nginx.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-nginx:1.1.0-beta.3
