### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.uuid.ext.FileBasedTimestampSynchronizer.update*"
fullName: "com.azure.cosmos.implementation.uuid.ext.FileBasedTimestampSynchronizer.update"
name: "update"
nameWithType: "FileBasedTimestampSynchronizer.update"
members:
- uid: "com.azure.cosmos.implementation.uuid.ext.FileBasedTimestampSynchronizer.update(long)"
  fullName: "com.azure.cosmos.implementation.uuid.ext.FileBasedTimestampSynchronizer.update(long now)"
  name: "update(long now)"
  nameWithType: "FileBasedTimestampSynchronizer.update(long now)"
  summary: "Method called by <xref uid=\"com.azure.cosmos.implementation.uuid.UUIDTimer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UUIDTimer\"></xref> to indicate that it has generated a timestamp value that is beyond last legal timestamp value. The method should only return once it has \"locked\" specified timestamp value (and possible additional ones)."
  overridden: "com.azure.cosmos.implementation.uuid.TimestampSynchronizer.update(long)"
  parameters:
  - name: "now"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public long update(long now)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Timestamp value that the caller can NOT use. That is, all\n   timestamp values prior to (less than) this value can be used\n   ok, but this value and ones after can only be used by first\n   calling update."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.uuid.ext"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
