### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  id: UntypedObjectDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std
  children:
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.NO_OBJECTS
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer()
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,boolean)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._clearIfStdImpl(com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._findCustomDeser(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._listDeserializer
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._listType
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._mapDeserializer
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._mapType
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._nonMerging
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._numberDeserializer
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._stringDeserializer
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.isCachable()
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection<java.lang.Object>)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.resolve(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  langs:
  - java
  name: UntypedObjectDeserializer
  nameWithType: UntypedObjectDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  type: Class
  package: com.fasterxml.jackson.databind.deser.std
  summary: 'Deserializer implementation that is used if it is necessary to bind content of "unknown" type; something declared as basic <xref uid="java.lang.Object" data-throw-if-not-resolved="false">java.lang.Object</xref> (either explicitly, or due to type erasure). If so, "natural" mapping is used to convert JSON values to their natural Java object matches: JSON arrays to Java <xref uid="java.util.List" data-throw-if-not-resolved="false">java.util.List</xref>s (or, if configured, Object\[\]), JSON objects to <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref>s, numbers to <xref uid="java.lang.Number" data-throw-if-not-resolved="false">java.lang.Number</xref>s, booleans to <xref uid="java.lang.Boolean" data-throw-if-not-resolved="false">java.lang.Boolean</xref>s and strings to <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref> (and nulls to nulls).'
  syntax:
    content: public class UntypedObjectDeserializer extends StdDeserializer<Object> implements ResolvableDeserializer, ContextualDeserializer
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonDeserializer
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer
  implements:
  - com.fasterxml.jackson.databind.deser.ResolvableDeserializer
  - com.fasterxml.jackson.databind.deser.ContextualDeserializer
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)
  - com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)
  - com.fasterxml.jackson.databind.JsonDeserializer.findBackReference(java.lang.String)
  - com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonDeserializer.getEmptyAccessPattern()
  - com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()
  - com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()
  - com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()
  - com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()
  - com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()
  - com.fasterxml.jackson.databind.JsonDeserializer.isCachable()
  - com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.JsonDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  - com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow(int)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow(long)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf(java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber(java.lang.Number)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum<?>,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow(int)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType(com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType()
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
  - com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble(java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.NO_OBJECTS
  id: NO_OBJECTS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: NO_OBJECTS
  nameWithType: UntypedObjectDeserializer.NO_OBJECTS
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.NO_OBJECTS
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected static final Object[] NO_OBJECTS
    return:
      type: java.lang.Object[]
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer()
  id: UntypedObjectDeserializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: UntypedObjectDeserializer()
  nameWithType: UntypedObjectDeserializer.UntypedObjectDeserializer()
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer()
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: public UntypedObjectDeserializer()
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  id: UntypedObjectDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: UntypedObjectDeserializer(JavaType listType, JavaType mapType)
  nameWithType: UntypedObjectDeserializer.UntypedObjectDeserializer(JavaType listType, JavaType mapType)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer(JavaType listType, JavaType mapType)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: public UntypedObjectDeserializer(JavaType listType, JavaType mapType)
    parameters:
    - id: listType
      type: com.fasterxml.jackson.databind.JavaType
    - id: mapType
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,boolean)
  id: UntypedObjectDeserializer(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: UntypedObjectDeserializer(UntypedObjectDeserializer base, boolean nonMerging)
  nameWithType: UntypedObjectDeserializer.UntypedObjectDeserializer(UntypedObjectDeserializer base, boolean nonMerging)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer(UntypedObjectDeserializer base, boolean nonMerging)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected UntypedObjectDeserializer(UntypedObjectDeserializer base, boolean nonMerging)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
    - id: nonMerging
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: UntypedObjectDeserializer(com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: UntypedObjectDeserializer(UntypedObjectDeserializer base, JsonDeserializer<?> mapDeser, JsonDeserializer<?> listDeser, JsonDeserializer<?> stringDeser, JsonDeserializer<?> numberDeser)
  nameWithType: UntypedObjectDeserializer.UntypedObjectDeserializer(UntypedObjectDeserializer base, JsonDeserializer<?> mapDeser, JsonDeserializer<?> listDeser, JsonDeserializer<?> stringDeser, JsonDeserializer<?> numberDeser)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer(UntypedObjectDeserializer base, JsonDeserializer<?> mapDeser, JsonDeserializer<?> listDeser, JsonDeserializer<?> stringDeser, JsonDeserializer<?> numberDeser)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: public UntypedObjectDeserializer(UntypedObjectDeserializer base, JsonDeserializer<?> mapDeser, JsonDeserializer<?> listDeser, JsonDeserializer<?> stringDeser, JsonDeserializer<?> numberDeser)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
    - id: mapDeser
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    - id: listDeser
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    - id: stringDeser
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    - id: numberDeser
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._clearIfStdImpl(com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)
  id: _clearIfStdImpl(com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: _clearIfStdImpl(JsonDeserializer<Object> deser)
  nameWithType: UntypedObjectDeserializer._clearIfStdImpl(JsonDeserializer<Object> deser)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._clearIfStdImpl(JsonDeserializer<Object> deser)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._clearIfStdImpl*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected JsonDeserializer<Object> _clearIfStdImpl(JsonDeserializer<Object> deser)
    parameters:
    - id: deser
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._findCustomDeser(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  id: _findCustomDeser(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: _findCustomDeser(DeserializationContext ctxt, JavaType type)
  nameWithType: UntypedObjectDeserializer._findCustomDeser(DeserializationContext ctxt, JavaType type)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._findCustomDeser(DeserializationContext ctxt, JavaType type)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._findCustomDeser*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected JsonDeserializer<Object> _findCustomDeser(DeserializationContext ctxt, JavaType type)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._listDeserializer
  id: _listDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: _listDeserializer
  nameWithType: UntypedObjectDeserializer._listDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._listDeserializer
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected JsonDeserializer<Object> _listDeserializer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._listType
  id: _listType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: _listType
  nameWithType: UntypedObjectDeserializer._listType
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._listType
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  summary: If <xref uid="java.util.List" data-throw-if-not-resolved="false">java.util.List</xref> has been mapped to non-default implementation, we'll store type here
  syntax:
    content: protected JavaType _listType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._mapDeserializer
  id: _mapDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: _mapDeserializer
  nameWithType: UntypedObjectDeserializer._mapDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._mapDeserializer
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected JsonDeserializer<Object> _mapDeserializer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._mapType
  id: _mapType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: _mapType
  nameWithType: UntypedObjectDeserializer._mapType
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._mapType
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  summary: If <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> has been mapped to non-default implementation, we'll store type here
  syntax:
    content: protected JavaType _mapType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._nonMerging
  id: _nonMerging
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: _nonMerging
  nameWithType: UntypedObjectDeserializer._nonMerging
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._nonMerging
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected final boolean _nonMerging
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._numberDeserializer
  id: _numberDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: _numberDeserializer
  nameWithType: UntypedObjectDeserializer._numberDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._numberDeserializer
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected JsonDeserializer<Object> _numberDeserializer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._stringDeserializer
  id: _stringDeserializer
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: _stringDeserializer
  nameWithType: UntypedObjectDeserializer._stringDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._stringDeserializer
  type: Field
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected JsonDeserializer<Object> _stringDeserializer
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  id: createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: createContextual(DeserializationContext ctxt, BeanProperty property)
  nameWithType: UntypedObjectDeserializer.createContextual(DeserializationContext ctxt, BeanProperty property)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.createContextual(DeserializationContext ctxt, BeanProperty property)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.createContextual*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: We only use contextualization for optimizing the case where no customization occurred; if so, can slip in a more streamlined version.
  syntax:
    content: public JsonDeserializer<?> createContextual(DeserializationContext ctxt, BeanProperty property)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: property
      type: com.fasterxml.jackson.databind.BeanProperty
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: deserialize(JsonParser p, DeserializationContext ctxt)
  nameWithType: UntypedObjectDeserializer.deserialize(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: >-
    Method that can be called to ask implementation to deserialize JSON content into the value type this serializer handles. Returned instance is to be constructed by method itself.


    Pre-condition for this method is that the parser points to the first event that is part of value to deserializer (and which is never JSON 'null' literal, more on this below): for simple types it may be the only value; and for structured types the Object start marker or a FIELD\_NAME.


    The two possible input conditions for structured types result from polymorphism via fields. In the ordinary case, Jackson calls this method when it has encountered an OBJECT\_START, and the method implementation must advance to the next token to see the first field name. If the application configures polymorphism via a field, then the object looks like the following.


    ```java

    {
              "@class": "class name",
              ...
          }
    ```


    Jackson consumes the two tokens (the @class field name and its value) in order to learn the class and select the deserializer. Thus, the stream is pointing to the FIELD\_NAME for the first field after the @class. Thus, if you want your method to work correctly both with and without polymorphism, you must begin your method with:


    ```java

    if (p.currentToken() == JsonToken.START_OBJECT) {
             p.nextToken();
           }
    ```


    This results in the stream pointing to the field name, so that the two conditions align.


    Post-condition is that the parser will point to the last event that is part of deserialized value (or in case deserialization fails, event that was not recognized or usable, which may be the same event as the one it pointed to upon call).


    Note that this method is never called for JSON null literal, and thus deserializers need (and should) not check for it.
  syntax:
    content: public Object deserialize(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  id: deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: deserialize(JsonParser p, DeserializationContext ctxt, Object intoValue)
  nameWithType: UntypedObjectDeserializer.deserialize(JsonParser p, DeserializationContext ctxt, Object intoValue)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize(JsonParser p, DeserializationContext ctxt, Object intoValue)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: >-
    Alternate deserialization method (compared to the most commonly used, <xref uid="com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)" data-throw-if-not-resolved="false">#deserialize(JsonParser, DeserializationContext)</xref>), which takes in initialized value instance, to be configured and/or populated by deserializer. Method is not necessarily used (or supported) by all types (it will not work for immutable types, for obvious reasons): most commonly it is used for Collections and Maps. It may be used both with "updating readers" (for POJOs) and when Collections and Maps use "getter as setter".


    Default implementation just throws <xref uid="" data-throw-if-not-resolved="false">UnsupportedOperationException</xref>, to indicate that types that do not explicitly add support do not necessarily support update-existing-value operation (esp. immutable types)
  syntax:
    content: public Object deserialize(JsonParser p, DeserializationContext ctxt, Object intoValue)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: intoValue
      type: java.lang.Object
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  id: deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
  nameWithType: UntypedObjectDeserializer.deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserializeWithType*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Base implementation that does not assume specific type inclusion mechanism. Sub-classes are expected to override this method if they are to handle type information.
  syntax:
    content: public Object deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: typeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.isCachable()
  id: isCachable()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: isCachable()
  nameWithType: UntypedObjectDeserializer.isCachable()
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.isCachable()
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.isCachable*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: >-
    Method called to see if deserializer instance is cachable and usable for other properties of same type (type for which instance was created).


    Note that cached instances are still resolved on per-property basis, if instance implements <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.deser.ResolvableDeserializer</xref>: cached instance is just as the base. This means that in most cases it is safe to cache instances; however, it only makes sense to cache instances if instantiation is expensive, or if instances are heavy-weight.


    Default implementation returns false, to indicate that no caching is done.
  syntax:
    content: public boolean isCachable()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: mapArray(JsonParser p, DeserializationContext ctxt)
  nameWithType: UntypedObjectDeserializer.mapArray(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArray(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArray*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Method called to map a JSON Array into a Java value.
  syntax:
    content: protected Object mapArray(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection<java.lang.Object>)
  id: mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection<java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: mapArray(JsonParser p, DeserializationContext ctxt, Collection<Object> result)
  nameWithType: UntypedObjectDeserializer.mapArray(JsonParser p, DeserializationContext ctxt, Collection<Object> result)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArray(JsonParser p, DeserializationContext ctxt, Collection<Object> result)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArray*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected Object mapArray(JsonParser p, DeserializationContext ctxt, Collection<Object> result)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: result
      type: java.util.Collection<java.lang.Object>
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: mapArrayToArray(JsonParser p, DeserializationContext ctxt)
  nameWithType: UntypedObjectDeserializer.mapArrayToArray(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArrayToArray(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArrayToArray*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Method called to map a JSON Array into a Java Object array (Object\[\]).
  syntax:
    content: protected Object[] mapArrayToArray(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object[]
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  id: mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: mapObject(JsonParser p, DeserializationContext ctxt)
  nameWithType: UntypedObjectDeserializer.mapObject(JsonParser p, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapObject(JsonParser p, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapObject*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: Method called to map a JSON Object into a Java value.
  syntax:
    content: protected Object mapObject(JsonParser p, DeserializationContext ctxt)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  id: mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map<java.lang.Object,java.lang.Object>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: mapObject(JsonParser p, DeserializationContext ctxt, Map<Object,Object> m)
  nameWithType: UntypedObjectDeserializer.mapObject(JsonParser p, DeserializationContext ctxt, Map<Object,Object> m)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapObject(JsonParser p, DeserializationContext ctxt, Map<Object,Object> m)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapObject*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  syntax:
    content: protected Object mapObject(JsonParser p, DeserializationContext ctxt, Map<Object,Object> m)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: m
      type: java.util.Map<java.lang.Object,java.lang.Object>
    return:
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.resolve(com.fasterxml.jackson.databind.DeserializationContext)
  id: resolve(com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: resolve(DeserializationContext ctxt)
  nameWithType: UntypedObjectDeserializer.resolve(DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.resolve(DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.resolve*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: 'We need to implement this method to properly find things to delegate to: it cannot be done earlier since delegated deserializers almost certainly require access to this instance (at least "List" and "Map" ones)'
  syntax:
    content: public void resolve(DeserializationContext ctxt)
    parameters:
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  id: supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer
  langs:
  - java
  name: supportsUpdate(DeserializationConfig config)
  nameWithType: UntypedObjectDeserializer.supportsUpdate(DeserializationConfig config)
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.supportsUpdate(DeserializationConfig config)
  overload: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.supportsUpdate*
  type: Method
  package: com.fasterxml.jackson.databind.deser.std
  summary: >-
    Introspection method that may be called to see whether deserializer supports update of an existing value (aka "merging") or not. Return value should either be <xref uid="java.lang.Boolean.FALSE" data-throw-if-not-resolved="false">Boolean#FALSE</xref> if update is not supported at all (immutable values); <xref uid="java.lang.Boolean.TRUE" data-throw-if-not-resolved="false">Boolean#TRUE</xref> if update should usually work (regular POJOs, for example), or `null` if this is either not known, or may sometimes work.


    Information gathered is typically used to either prevent merging update for property (either by skipping, if based on global defaults; or by exception during deserialization construction if explicit attempt made) if <xref uid="java.lang.Boolean.FALSE" data-throw-if-not-resolved="false">Boolean#FALSE</xref> returned, or inclusion if <xref uid="java.lang.Boolean.TRUE" data-throw-if-not-resolved="false">Boolean#TRUE</xref> is specified. If "unknown" case (`null` returned) behavior is to exclude property if global defaults used; or to allow if explicit per-type or property merging is defined.


    Default implementation returns `null` to allow explicit per-type or per-property attempts.
  syntax:
    content: public Boolean supportsUpdate(DeserializationConfig config)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    return:
      type: java.lang.Boolean
references:
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer*
  name: UntypedObjectDeserializer
  nameWithType: UntypedObjectDeserializer.UntypedObjectDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.UntypedObjectDeserializer
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.resolve*
  name: resolve
  nameWithType: UntypedObjectDeserializer.resolve
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.resolve
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.JsonDeserializer<java.lang.Object>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._findCustomDeser*
  name: _findCustomDeser
  nameWithType: UntypedObjectDeserializer._findCustomDeser
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._findCustomDeser
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._clearIfStdImpl*
  name: _clearIfStdImpl
  nameWithType: UntypedObjectDeserializer._clearIfStdImpl
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._clearIfStdImpl
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.BeanProperty
  name: BeanProperty
  nameWithType: BeanProperty
  fullName: com.fasterxml.jackson.databind.BeanProperty
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.createContextual*
  name: createContextual
  nameWithType: UntypedObjectDeserializer.createContextual
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.createContextual
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.isCachable*
  name: isCachable
  nameWithType: UntypedObjectDeserializer.isCachable
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.isCachable
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.supportsUpdate*
  name: supportsUpdate
  nameWithType: UntypedObjectDeserializer.supportsUpdate
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.supportsUpdate
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize*
  name: deserialize
  nameWithType: UntypedObjectDeserializer.deserialize
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  name: TypeDeserializer
  nameWithType: TypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserializeWithType*
  name: deserializeWithType
  nameWithType: UntypedObjectDeserializer.deserializeWithType
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserializeWithType
  package: com.fasterxml.jackson.databind.deser.std
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArray*
  name: mapArray
  nameWithType: UntypedObjectDeserializer.mapArray
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArray
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.util.Collection<java.lang.Object>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapObject*
  name: mapObject
  nameWithType: UntypedObjectDeserializer.mapObject
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapObject
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArrayToArray*
  name: mapArrayToArray
  nameWithType: UntypedObjectDeserializer.mapArrayToArray
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArrayToArray
  package: com.fasterxml.jackson.databind.deser.std
- uid: java.util.Map<java.lang.Object,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer<java.lang.Object>
  name: StdDeserializer<Object>
  nameWithType: StdDeserializer<Object>
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer<java.lang.Object>
- uid: com.fasterxml.jackson.databind.deser.ContextualDeserializer
  name: ContextualDeserializer
  nameWithType: ContextualDeserializer
  fullName: com.fasterxml.jackson.databind.deser.ContextualDeserializer
- uid: com.fasterxml.jackson.databind.deser.ResolvableDeserializer
  name: ResolvableDeserializer
  nameWithType: ResolvableDeserializer
  fullName: com.fasterxml.jackson.databind.deser.ResolvableDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._failDoubleToIntCoercion(JsonParser,DeserializationContext,String)
  nameWithType: StdDeserializer._failDoubleToIntCoercion(JsonParser,DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._failDoubleToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._parseDoublePrimitive(DeserializationContext,String)
  nameWithType: StdDeserializer._parseDoublePrimitive(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseDate(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseDate(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf(java.lang.String)
  name: StdDeserializer._isPosInf(String)
  nameWithType: StdDeserializer._isPosInf(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isPosInf(java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()
  name: JsonDeserializer.getDelegatee()
  nameWithType: JsonDeserializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
  name: JsonDeserializer.getNullValue(DeserializationContext)
  nameWithType: JsonDeserializer.getNullValue(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseFloatPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseFloatPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseBooleanFromInt(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseBooleanFromInt(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN(java.lang.String)
  name: StdDeserializer._isNaN(String)
  nameWithType: StdDeserializer._isNaN(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNaN(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber(java.lang.String)
  name: StdDeserializer._isIntNumber(String)
  nameWithType: StdDeserializer._isIntNumber(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isIntNumber(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf(java.lang.String)
  name: StdDeserializer._isNegInf(String)
  nameWithType: StdDeserializer._isNegInf(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isNegInf(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow(int)
  name: StdDeserializer._byteOverflow(int)
  nameWithType: StdDeserializer._byteOverflow(int)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._byteOverflow(int)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc()
  name: StdDeserializer._coercedTypeDesc()
  nameWithType: StdDeserializer._coercedTypeDesc()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._deserializeFromEmpty(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._deserializeFromEmpty(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseIntPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseIntPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber(java.lang.Number)
  name: StdDeserializer._nonNullNumber(Number)
  nameWithType: StdDeserializer._nonNullNumber(Number)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._nonNullNumber(java.lang.Number)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._verifyStringForScalarCoercion(DeserializationContext,String)
  nameWithType: StdDeserializer._verifyStringForScalarCoercion(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyStringForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  name: StdDeserializer._coerceEmptyString(DeserializationContext,boolean)
  nameWithType: StdDeserializer._coerceEmptyString(DeserializationContext,boolean)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceEmptyString(com.fasterxml.jackson.databind.DeserializationContext,boolean)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble(java.lang.String)
  name: StdDeserializer.parseDouble(String)
  nameWithType: StdDeserializer.parseDouble(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.parseDouble(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  name: StdDeserializer._coerceTextualNull(DeserializationContext,boolean)
  nameWithType: StdDeserializer._coerceTextualNull(DeserializationContext,boolean)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceTextualNull(com.fasterxml.jackson.databind.DeserializationContext,boolean)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.isCachable()
  name: JsonDeserializer.isCachable()
  nameWithType: JsonDeserializer.isCachable()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.isCachable()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: StdDeserializer.isDefaultDeserializer(JsonDeserializer<?>)
  nameWithType: StdDeserializer.isDefaultDeserializer(JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseLongPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseLongPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._parseLongPrimitive(DeserializationContext,String)
  nameWithType: StdDeserializer._parseLongPrimitive(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseBooleanPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseBooleanPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
  name: StdDeserializer.findDeserializer(DeserializationContext,JavaType,BeanProperty)
  nameWithType: StdDeserializer.findDeserializer(DeserializationContext,JavaType,BeanProperty)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
  name: StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class<?>)
  nameWithType: StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull(java.lang.String)
  name: StdDeserializer._hasTextualNull(String)
  nameWithType: StdDeserializer._hasTextualNull(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._hasTextualNull(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
  name: StdDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)
  nameWithType: StdDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.findBackReference(java.lang.String)
  name: JsonDeserializer.findBackReference(String)
  nameWithType: JsonDeserializer.findBackReference(String)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.findBackReference(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType()
  name: StdDeserializer.getValueType()
  nameWithType: StdDeserializer.getValueType()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseDate(String,DeserializationContext)
  nameWithType: StdDeserializer._parseDate(String,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer<?>)
  nameWithType: StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._deserializeFromArray(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._deserializeFromArray(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
  name: JsonDeserializer.supportsUpdate(DeserializationConfig)
  nameWithType: JsonDeserializer.supportsUpdate(DeserializationConfig)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._verifyNullForScalarCoercion(DeserializationContext,String)
  nameWithType: StdDeserializer._verifyNullForScalarCoercion(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)
  name: JsonDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer,T)
  nameWithType: JsonDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer,T)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,T)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: JsonDeserializer.deserialize(JsonParser,DeserializationContext)
  nameWithType: JsonDeserializer.deserialize(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._coerceIntegral(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._coerceIntegral(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer<?>)
  nameWithType: StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType()
  name: StdDeserializer.handledType()
  nameWithType: StdDeserializer.handledType()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handledType()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseShortPrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseShortPrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._verifyEndArrayForSingle(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._verifyEndArrayForSingle(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
  name: StdDeserializer.isDefaultKeyDeserializer(KeyDeserializer)
  nameWithType: StdDeserializer.isDefaultKeyDeserializer(KeyDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull(java.lang.String)
  name: StdDeserializer._isEmptyOrTextualNull(String)
  nameWithType: StdDeserializer._isEmptyOrTextualNull(String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._isEmptyOrTextualNull(java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>)
  name: StdDeserializer._parseBooleanPrimitive(DeserializationContext,JsonParser,Class<?>)
  nameWithType: StdDeserializer._parseBooleanPrimitive(DeserializationContext,JsonParser,Class<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseBytePrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseBytePrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseDateFromArray(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseDateFromArray(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseDoublePrimitive(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseDoublePrimitive(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: JsonDeserializer.replaceDelegatee(JsonDeserializer<?>)
  nameWithType: JsonDeserializer.replaceDelegatee(JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyAccessPattern()
  name: JsonDeserializer.getEmptyAccessPattern()
  nameWithType: JsonDeserializer.getEmptyAccessPattern()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyAccessPattern()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: StdDeserializer.findFormatFeature(DeserializationContext,BeanProperty,Class<?>,JsonFormat.Feature)
  nameWithType: StdDeserializer.findFormatFeature(DeserializationContext,BeanProperty,Class<?>,JsonFormat.Feature)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class<?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
  name: StdDeserializer.findContentNullStyle(DeserializationContext,BeanProperty)
  nameWithType: StdDeserializer.findContentNullStyle(DeserializationContext,BeanProperty)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()
  name: JsonDeserializer.getNullValue()
  nameWithType: JsonDeserializer.getNullValue()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getNullValue()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._parseIntPrimitive(DeserializationContext,String)
  nameWithType: StdDeserializer._parseIntPrimitive(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow(int)
  name: StdDeserializer._shortOverflow(int)
  nameWithType: StdDeserializer._shortOverflow(int)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._shortOverflow(int)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()
  name: JsonDeserializer.getObjectIdReader()
  nameWithType: JsonDeserializer.getObjectIdReader()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getObjectIdReader()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonDeserializer.unwrappingDeserializer(NameTransformer)
  nameWithType: JsonDeserializer.unwrappingDeserializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._verifyNullForPrimitiveCoercion(DeserializationContext,String)
  nameWithType: StdDeserializer._verifyNullForPrimitiveCoercion(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitiveCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  name: StdDeserializer.handleUnknownProperty(JsonParser,DeserializationContext,Object,String)
  nameWithType: StdDeserializer.handleUnknownProperty(JsonParser,DeserializationContext,Object,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._parseString(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._parseString(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull(java.lang.Object,java.lang.Object)
  name: StdDeserializer._neitherNull(Object,Object)
  nameWithType: StdDeserializer._neitherNull(Object,Object)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._neitherNull(java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()
  name: JsonDeserializer.getEmptyValue()
  nameWithType: JsonDeserializer.getEmptyValue()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue()
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
  name: JsonDeserializer.getEmptyValue(DeserializationContext)
  nameWithType: JsonDeserializer.getEmptyValue(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._deserializeWrappedValue(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer._deserializeWrappedValue(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()
  name: JsonDeserializer.getKnownPropertyNames()
  nameWithType: JsonDeserializer.getKnownPropertyNames()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getKnownPropertyNames()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
  name: StdDeserializer._verifyNumberForScalarCoercion(DeserializationContext,JsonParser)
  nameWithType: StdDeserializer._verifyNumberForScalarCoercion(DeserializationContext,JsonParser)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer._verifyNullForPrimitive(DeserializationContext)
  nameWithType: StdDeserializer._verifyNullForPrimitive(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)
  name: JsonDeserializer.deserialize(JsonParser,DeserializationContext,T)
  nameWithType: JsonDeserializer.deserialize(JsonParser,DeserializationContext,T)
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,T)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow(long)
  name: StdDeserializer._intOverflow(long)
  nameWithType: StdDeserializer._intOverflow(long)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._intOverflow(long)
- uid: com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()
  name: JsonDeserializer.getNullAccessPattern()
  nameWithType: JsonDeserializer.getNullAccessPattern()
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.getNullAccessPattern()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  name: StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer<?>)
  nameWithType: StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer<?>)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer<?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer.handleMissingEndArrayForSingle(JsonParser,DeserializationContext)
  nameWithType: StdDeserializer.handleMissingEndArrayForSingle(JsonParser,DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType(com.fasterxml.jackson.databind.DeserializationContext)
  name: StdDeserializer.getValueType(DeserializationContext)
  nameWithType: StdDeserializer.getValueType(DeserializationContext)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType(com.fasterxml.jackson.databind.DeserializationContext)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass()
  name: StdDeserializer.getValueClass()
  nameWithType: StdDeserializer.getValueClass()
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueClass()
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean)
  name: StdDeserializer._coerceNullToken(DeserializationContext,boolean)
  nameWithType: StdDeserializer._coerceNullToken(DeserializationContext,boolean)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken(com.fasterxml.jackson.databind.DeserializationContext,boolean)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
  name: StdDeserializer._parseFloatPrimitive(DeserializationContext,String)
  nameWithType: StdDeserializer._parseFloatPrimitive(DeserializationContext,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
  name: StdDeserializer.findValueNullProvider(DeserializationContext,SettableBeanProperty,PropertyMetadata)
  nameWithType: StdDeserializer.findValueNullProvider(DeserializationContext,SettableBeanProperty,PropertyMetadata)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.PropertyMetadata)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum<?>,java.lang.String)
  name: StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum<?>,String)
  nameWithType: StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum<?>,String)
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum<?>,java.lang.String)
- uid: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla
  name: UntypedObjectDeserializer.Vanilla
  nameWithType: UntypedObjectDeserializer.Vanilla
  fullName: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: java.lang.Object,java.lang.Object
  name: Object,Object
  nameWithType: Object,Object
  fullName: java.lang.Object,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer
  name: StdDeserializer
  nameWithType: StdDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer
  name: StdDeserializer.isDefaultDeserializer(JsonDeserializer
  nameWithType: StdDeserializer.isDefaultDeserializer(JsonDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class
  nameWithType: StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer
  name: StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer
  nameWithType: StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.databind.JsonDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer
  name: StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer
  nameWithType: StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class
  name: StdDeserializer._parseBooleanPrimitive(DeserializationContext,JsonParser,Class
  nameWithType: StdDeserializer._parseBooleanPrimitive(DeserializationContext,JsonParser,Class
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanPrimitive(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.Class
- uid: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer.replaceDelegatee(JsonDeserializer
  nameWithType: JsonDeserializer.replaceDelegatee(JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer
- uid: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
  name: ?>,JsonFormat.Feature)
  nameWithType: ?>,JsonFormat.Feature)
  fullName: ?>,com.fasterxml.jackson.annotation.JsonFormat.Feature)
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
  name: StdDeserializer.findFormatFeature(DeserializationContext,BeanProperty,Class
  nameWithType: StdDeserializer.findFormatFeature(DeserializationContext,BeanProperty,Class
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatFeature(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer
  name: StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer
  nameWithType: StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer
- uid: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum
  name: StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum
  nameWithType: StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum
  fullName: com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(com.fasterxml.jackson.databind.DeserializationContext,boolean,java.lang.Enum
- uid: ?>,java.lang.String)
  name: ?>,String)
  nameWithType: ?>,String)
  fullName: ?>,java.lang.String)
