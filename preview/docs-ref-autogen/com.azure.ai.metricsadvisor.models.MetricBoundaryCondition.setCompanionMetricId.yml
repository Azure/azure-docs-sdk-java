### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId*"
fullName: "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId"
name: "setCompanionMetricId"
nameWithType: "MetricBoundaryCondition.setCompanionMetricId"
members:
- uid: "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId(java.lang.String)"
  fullName: "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId(String companionMetricId)"
  name: "setCompanionMetricId(String companionMetricId)"
  nameWithType: "MetricBoundaryCondition.setCompanionMetricId(String companionMetricId)"
  summary: "Sets the companion metric id. When the companion-metric is set for a metric, an anomaly detected in the original metric will be included in the alert only if data points values of corresponding series in companion-metric are not within the boundary."
  parameters:
  - description: "The companion metric id."
    name: "companionMetricId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MetricBoundaryCondition setCompanionMetricId(String companionMetricId)"
  returns:
    description: "The MetricBoundaryCondition object itself."
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.MetricBoundaryCondition?alt=com.azure.ai.metricsadvisor.models.MetricBoundaryCondition&text=MetricBoundaryCondition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId(java.lang.String,boolean)"
  fullName: "com.azure.ai.metricsadvisor.models.MetricBoundaryCondition.setCompanionMetricId(String companionMetricId, boolean alertIfMissing)"
  name: "setCompanionMetricId(String companionMetricId, boolean alertIfMissing)"
  nameWithType: "MetricBoundaryCondition.setCompanionMetricId(String companionMetricId, boolean alertIfMissing)"
  summary: "Sets the companion metric id. When the companion-metric is set for a metric, an anomaly detected in the original metric series will be included in the alert only if data points values of corresponding series in companion-metric are not within the boundary."
  parameters:
  - description: "The companion metric id."
    name: "companionMetricId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Indicate whether or not alert should be triggered when\n     the companion-metric data-points are out of boundary but the corresponding data-point\n     is missing for the original metric."
    name: "alertIfMissing"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MetricBoundaryCondition setCompanionMetricId(String companionMetricId, boolean alertIfMissing)"
  returns:
    description: "The MetricBoundaryCondition object itself."
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.MetricBoundaryCondition?alt=com.azure.ai.metricsadvisor.models.MetricBoundaryCondition&text=MetricBoundaryCondition\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.models"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
