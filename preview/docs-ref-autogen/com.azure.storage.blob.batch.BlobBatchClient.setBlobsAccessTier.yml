### YamlMime:JavaMember
uid: "com.azure.storage.blob.batch.BlobBatchClient.setBlobsAccessTier*"
fullName: "com.azure.storage.blob.batch.BlobBatchClient.setBlobsAccessTier"
name: "setBlobsAccessTier"
nameWithType: "BlobBatchClient.setBlobsAccessTier"
members:
- uid: "com.azure.storage.blob.batch.BlobBatchClient.setBlobsAccessTier(java.util.List<java.lang.String>,com.azure.storage.blob.models.AccessTier)"
  fullName: "com.azure.storage.blob.batch.BlobBatchClient.setBlobsAccessTier(List<String> blobUrls, AccessTier accessTier)"
  name: "setBlobsAccessTier(List<String> blobUrls, AccessTier accessTier)"
  nameWithType: "BlobBatchClient.setBlobsAccessTier(List<String> blobUrls, AccessTier accessTier)"
  summary: "Set access tier on multiple blobs in a single request to the service.\n\n**Code samples**\n\n```java\nList<String> blobUrls = new ArrayList<>();\n blobUrls.add(blobClient1.getBlobUrl());\n blobUrls.add(blobClient2.getBlobUrl());\n blobUrls.add(blobClient3.getBlobUrl());\n \n try {\n     batchClient.setBlobsAccessTier(blobUrls, AccessTier.HOT).forEach(response ->\n         System.out.printf(\"Setting blob access tier with URL %s completed with status code %d%n\",\n             response.getRequest().getUrl(), response.getStatusCode()));\n } catch (Throwable error) {\n     System.err.printf(\"Setting blob access tier failed with exception: %s%n\", error.getMessage());\n }\n```"
  parameters:
  - description: "Urls of the blobs to set their access tier. Blob names must be encoded to UTF-8."
    name: "blobUrls"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref> to set on each blob."
    name: "accessTier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<Response<Void>> setBlobsAccessTier(List<String> blobUrls, AccessTier accessTier)"
  returns:
    description: "The status of each set tier operation."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.storage.blob.batch.BlobBatchClient.setBlobsAccessTier(java.util.List<java.lang.String>,com.azure.storage.blob.models.AccessTier,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.batch.BlobBatchClient.setBlobsAccessTier(List<String> blobUrls, AccessTier accessTier, Duration timeout, Context context)"
  name: "setBlobsAccessTier(List<String> blobUrls, AccessTier accessTier, Duration timeout, Context context)"
  nameWithType: "BlobBatchClient.setBlobsAccessTier(List<String> blobUrls, AccessTier accessTier, Duration timeout, Context context)"
  summary: "Set access tier on multiple blobs in a single request to the service.\n\n**Code samples**\n\n```java\nList<String> blobUrls = new ArrayList<>();\n blobUrls.add(blobClient1.getBlobUrl());\n blobUrls.add(blobClient2.getBlobUrl());\n blobUrls.add(blobClient3.getBlobUrl());\n \n try {\n     batchClient.setBlobsAccessTier(blobUrls, AccessTier.HOT, timeout, Context.NONE).forEach(response ->\n         System.out.printf(\"Setting blob access tier with URL %s completed with status code %d%n\",\n             response.getRequest().getUrl(), response.getStatusCode()));\n } catch (Throwable error) {\n     System.err.printf(\"Setting blob access tier failed with exception: %s%n\", error.getMessage());\n }\n```"
  parameters:
  - description: "Urls of the blobs to set their access tier. Blob names must be encoded to UTF-8."
    name: "blobUrls"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref> to set on each blob."
    name: "accessTier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<Response<Void>> setBlobsAccessTier(List<String> blobUrls, AccessTier accessTier, Duration timeout, Context context)"
  returns:
    description: "The status of each set tier operation."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.batch"
artifact: com.azure:azure-storage-blob-batch:12.7.0-beta.1
