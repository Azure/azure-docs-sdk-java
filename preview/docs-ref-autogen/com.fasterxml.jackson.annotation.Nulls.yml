### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.Nulls
  id: Nulls
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.Nulls.AS_EMPTY
  - com.fasterxml.jackson.annotation.Nulls.DEFAULT
  - com.fasterxml.jackson.annotation.Nulls.FAIL
  - com.fasterxml.jackson.annotation.Nulls.SET
  - com.fasterxml.jackson.annotation.Nulls.SKIP
  - com.fasterxml.jackson.annotation.Nulls.valueOf(java.lang.String)
  - com.fasterxml.jackson.annotation.Nulls.values()
  langs:
  - java
  name: Nulls
  nameWithType: Nulls
  fullName: com.fasterxml.jackson.annotation.Nulls
  type: Enum
  package: com.fasterxml.jackson.annotation
  summary: Enumeration used with <xref uid="com.fasterxml.jackson.annotation.JsonSetter" data-throw-if-not-resolved="false">JsonSetter</xref> (for properties \`nulls\` and \`contentNulls\`) to define how explicit \`null\` values from input (if input format has the concept; JSON, for example does) are handled.
  syntax:
    content: public enum Nulls extends Enum<Nulls>
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.annotation.Nulls.AS_EMPTY
  id: AS_EMPTY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.Nulls
  langs:
  - java
  name: AS_EMPTY
  nameWithType: Nulls.AS_EMPTY
  fullName: com.fasterxml.jackson.annotation.Nulls.AS_EMPTY
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Value that indicates that value to assign should come from the value deserializer of the type, using method `getEmptyValue()`.
  syntax:
    content: public static final Nulls AS_EMPTY
    return:
      type: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.annotation.Nulls.DEFAULT
  id: DEFAULT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.Nulls
  langs:
  - java
  name: DEFAULT
  nameWithType: Nulls.DEFAULT
  fullName: com.fasterxml.jackson.annotation.Nulls.DEFAULT
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Pseudo-value used to indicate that defaults are to be used for handling, that is, this value specifies no explicit handling override.
  syntax:
    content: public static final Nulls DEFAULT
    return:
      type: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.annotation.Nulls.FAIL
  id: FAIL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.Nulls
  langs:
  - java
  name: FAIL
  nameWithType: Nulls.FAIL
  fullName: com.fasterxml.jackson.annotation.Nulls.FAIL
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Value that indicates that an exception (of type that indicates input mismatch problem) is to be thrown, to indicate that null values are not accepted.
  syntax:
    content: public static final Nulls FAIL
    return:
      type: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.annotation.Nulls.Nulls()
  id: Nulls()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.Nulls
  langs:
  - java
  name: Nulls()
  nameWithType: Nulls.Nulls()
  fullName: com.fasterxml.jackson.annotation.Nulls.Nulls()
  overload: com.fasterxml.jackson.annotation.Nulls.Nulls*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: private Nulls()
- uid: com.fasterxml.jackson.annotation.Nulls.SET
  id: SET
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.Nulls
  langs:
  - java
  name: SET
  nameWithType: Nulls.SET
  fullName: com.fasterxml.jackson.annotation.Nulls.SET
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Value that indicates that an input null should result in assignment of Java \`null\` value of matching property (except where deserializer indicates other "null value" by overriding `getNullValue(...)` method)
  syntax:
    content: public static final Nulls SET
    return:
      type: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.annotation.Nulls.SKIP
  id: SKIP
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.Nulls
  langs:
  - java
  name: SKIP
  nameWithType: Nulls.SKIP
  fullName: com.fasterxml.jackson.annotation.Nulls.SKIP
  type: Field
  package: com.fasterxml.jackson.annotation
  summary: Value that indicates that an input null value should be skipped and no assignment is to be made; this usually means that the property will have its default value.
  syntax:
    content: public static final Nulls SKIP
    return:
      type: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.annotation.Nulls.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.Nulls
  langs:
  - java
  name: valueOf(String name)
  nameWithType: Nulls.valueOf(String name)
  fullName: com.fasterxml.jackson.annotation.Nulls.valueOf(String name)
  overload: com.fasterxml.jackson.annotation.Nulls.valueOf*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static Nulls valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.annotation.Nulls
- uid: com.fasterxml.jackson.annotation.Nulls.values()
  id: values()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.Nulls
  langs:
  - java
  name: values()
  nameWithType: Nulls.values()
  fullName: com.fasterxml.jackson.annotation.Nulls.values()
  overload: com.fasterxml.jackson.annotation.Nulls.values*
  type: Method
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public static Nulls[] values()
    return:
      type: com.fasterxml.jackson.annotation.Nulls[]
references:
- uid: com.fasterxml.jackson.annotation.Nulls.Nulls*
  name: Nulls
  nameWithType: Nulls.Nulls
  fullName: com.fasterxml.jackson.annotation.Nulls.Nulls
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.Nulls[]
  spec.java:
  - uid: com.fasterxml.jackson.annotation.Nulls
    name: Nulls
    fullName: com.fasterxml.jackson.annotation.Nulls
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.annotation.Nulls.values*
  name: values
  nameWithType: Nulls.values
  fullName: com.fasterxml.jackson.annotation.Nulls.values
  package: com.fasterxml.jackson.annotation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.annotation.Nulls.valueOf*
  name: valueOf
  nameWithType: Nulls.valueOf
  fullName: com.fasterxml.jackson.annotation.Nulls.valueOf
  package: com.fasterxml.jackson.annotation
- uid: java.lang.Enum<com.fasterxml.jackson.annotation.Nulls>
  name: Enum<Nulls>
  nameWithType: Enum<Nulls>
  fullName: java.lang.Enum<com.fasterxml.jackson.annotation.Nulls>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
