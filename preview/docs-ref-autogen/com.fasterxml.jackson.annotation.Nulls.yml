### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.annotation.Nulls"
fullName: "com.fasterxml.jackson.annotation.Nulls"
name: "Nulls"
nameWithType: "Nulls"
summary: "Enumeration used with <xref uid=\"com.fasterxml.jackson.annotation.JsonSetter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonSetter\"></xref> (for properties \\`nulls\\` and \\`contentNulls\\`) to define how explicit \\`null\\` values from input (if input format has the concept; JSON, for example does) are handled."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum Nulls extends Enum<Nulls>"
fields:
- uid: "com.fasterxml.jackson.annotation.Nulls.AS_EMPTY"
  fullName: "com.fasterxml.jackson.annotation.Nulls.AS_EMPTY"
  name: "AS_EMPTY"
  nameWithType: "Nulls.AS_EMPTY"
  summary: "Value that indicates that value to assign should come from the value deserializer of the type, using method `getEmptyValue()`."
- uid: "com.fasterxml.jackson.annotation.Nulls.DEFAULT"
  fullName: "com.fasterxml.jackson.annotation.Nulls.DEFAULT"
  name: "DEFAULT"
  nameWithType: "Nulls.DEFAULT"
  summary: "Pseudo-value used to indicate that defaults are to be used for handling, that is, this value specifies no explicit handling override."
- uid: "com.fasterxml.jackson.annotation.Nulls.FAIL"
  fullName: "com.fasterxml.jackson.annotation.Nulls.FAIL"
  name: "FAIL"
  nameWithType: "Nulls.FAIL"
  summary: "Value that indicates that an exception (of type that indicates input mismatch problem) is to be thrown, to indicate that null values are not accepted."
- uid: "com.fasterxml.jackson.annotation.Nulls.SET"
  fullName: "com.fasterxml.jackson.annotation.Nulls.SET"
  name: "SET"
  nameWithType: "Nulls.SET"
  summary: "Value that indicates that an input null should result in assignment of Java \\`null\\` value of matching property (except where deserializer indicates other \"null value\" by overriding `getNullValue(...)` method)"
- uid: "com.fasterxml.jackson.annotation.Nulls.SKIP"
  fullName: "com.fasterxml.jackson.annotation.Nulls.SKIP"
  name: "SKIP"
  nameWithType: "Nulls.SKIP"
  summary: "Value that indicates that an input null value should be skipped and no assignment is to be made; this usually means that the property will have its default value."
methods:
- uid: "com.fasterxml.jackson.annotation.Nulls.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.annotation.Nulls.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "Nulls.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Nulls valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.Nulls?alt=com.fasterxml.jackson.annotation.Nulls&text=Nulls\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.annotation.Nulls.values()"
  fullName: "com.fasterxml.jackson.annotation.Nulls.values()"
  name: "values()"
  nameWithType: "Nulls.values()"
  syntax: "public static Nulls[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.Nulls?alt=com.fasterxml.jackson.annotation.Nulls&text=Nulls\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
