### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.SimpleObjectIdResolver
  id: SimpleObjectIdResolver
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.SimpleObjectIdResolver.SimpleObjectIdResolver()
  - com.fasterxml.jackson.annotation.SimpleObjectIdResolver._items
  - com.fasterxml.jackson.annotation.SimpleObjectIdResolver.bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey,java.lang.Object)
  - com.fasterxml.jackson.annotation.SimpleObjectIdResolver.canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver)
  - com.fasterxml.jackson.annotation.SimpleObjectIdResolver.newForDeserialization(java.lang.Object)
  - com.fasterxml.jackson.annotation.SimpleObjectIdResolver.resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey)
  langs:
  - java
  name: SimpleObjectIdResolver
  nameWithType: SimpleObjectIdResolver
  fullName: com.fasterxml.jackson.annotation.SimpleObjectIdResolver
  type: Class
  package: com.fasterxml.jackson.annotation
  summary: Simple implementation of <xref uid="com.fasterxml.jackson.annotation.ObjectIdResolver" data-throw-if-not-resolved="false">ObjectIdResolver</xref>
  syntax:
    content: public class SimpleObjectIdResolver implements ObjectIdResolver
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.annotation.ObjectIdResolver
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.SimpleObjectIdResolver()
  id: SimpleObjectIdResolver()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.SimpleObjectIdResolver
  langs:
  - java
  name: SimpleObjectIdResolver()
  nameWithType: SimpleObjectIdResolver.SimpleObjectIdResolver()
  fullName: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.SimpleObjectIdResolver()
  overload: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.SimpleObjectIdResolver*
  type: Constructor
  package: com.fasterxml.jackson.annotation
  syntax:
    content: public SimpleObjectIdResolver()
- uid: com.fasterxml.jackson.annotation.SimpleObjectIdResolver._items
  id: _items
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.SimpleObjectIdResolver
  langs:
  - java
  name: _items
  nameWithType: SimpleObjectIdResolver._items
  fullName: com.fasterxml.jackson.annotation.SimpleObjectIdResolver._items
  type: Field
  package: com.fasterxml.jackson.annotation
  syntax:
    content: protected Map<ObjectIdGenerator.IdKey,Object> _items
    return:
      type: java.util.Map<com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey,java.lang.Object>
- uid: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey,java.lang.Object)
  id: bindItem(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.SimpleObjectIdResolver
  langs:
  - java
  name: bindItem(ObjectIdGenerator.IdKey id, Object ob)
  nameWithType: SimpleObjectIdResolver.bindItem(ObjectIdGenerator.IdKey id, Object ob)
  fullName: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.bindItem(ObjectIdGenerator.IdKey id, Object ob)
  overload: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.bindItem*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Method called when a POJO is deserialized and has an Object Identifier. Method exists so that implementation can keep track of existing object in JSON stream that could be useful for further resolution.
  syntax:
    content: public void bindItem(ObjectIdGenerator.IdKey id, Object ob)
    parameters:
    - id: id
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
    - id: ob
      type: java.lang.Object
- uid: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver)
  id: canUseFor(com.fasterxml.jackson.annotation.ObjectIdResolver)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.SimpleObjectIdResolver
  langs:
  - java
  name: canUseFor(ObjectIdResolver resolverType)
  nameWithType: SimpleObjectIdResolver.canUseFor(ObjectIdResolver resolverType)
  fullName: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.canUseFor(ObjectIdResolver resolverType)
  overload: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.canUseFor*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Method called to check whether this resolver instance can be used for Object Ids of specific resolver type; determination is based by passing a configured "blueprint" (prototype) instance; from which the actual instances are created (using <xref uid="com.fasterxml.jackson.annotation.SimpleObjectIdResolver.newForDeserialization*" data-throw-if-not-resolved="false">#newForDeserialization</xref>).
  syntax:
    content: public boolean canUseFor(ObjectIdResolver resolverType)
    parameters:
    - id: resolverType
      type: com.fasterxml.jackson.annotation.ObjectIdResolver
    return:
      type: boolean
- uid: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.newForDeserialization(java.lang.Object)
  id: newForDeserialization(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.SimpleObjectIdResolver
  langs:
  - java
  name: newForDeserialization(Object context)
  nameWithType: SimpleObjectIdResolver.newForDeserialization(Object context)
  fullName: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.newForDeserialization(Object context)
  overload: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.newForDeserialization*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: >-
    Factory method called to create a new instance to use for deserialization: needed since resolvers may have state (a pool of objects).


    Note that actual type of 'context' is `com.fasterxml.jackson.databind.DeserializationContext`, but can not be declared here as type itself (as well as call to this object) comes from databind package.
  syntax:
    content: public ObjectIdResolver newForDeserialization(Object context)
    parameters:
    - id: context
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.annotation.ObjectIdResolver
- uid: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey)
  id: resolveId(com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.SimpleObjectIdResolver
  langs:
  - java
  name: resolveId(ObjectIdGenerator.IdKey id)
  nameWithType: SimpleObjectIdResolver.resolveId(ObjectIdGenerator.IdKey id)
  fullName: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.resolveId(ObjectIdGenerator.IdKey id)
  overload: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.resolveId*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Method called when deserialization encounters the given Object Identifier and requires the POJO associated with it.
  syntax:
    content: public Object resolveId(ObjectIdGenerator.IdKey id)
    parameters:
    - id: id
      type: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
    return:
      type: java.lang.Object
references:
- uid: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.SimpleObjectIdResolver*
  name: SimpleObjectIdResolver
  nameWithType: SimpleObjectIdResolver.SimpleObjectIdResolver
  fullName: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.SimpleObjectIdResolver
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
  name: ObjectIdGenerator.IdKey
  nameWithType: ObjectIdGenerator.IdKey
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.bindItem*
  name: bindItem
  nameWithType: SimpleObjectIdResolver.bindItem
  fullName: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.bindItem
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.resolveId*
  name: resolveId
  nameWithType: SimpleObjectIdResolver.resolveId
  fullName: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.resolveId
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.ObjectIdResolver
  name: ObjectIdResolver
  nameWithType: ObjectIdResolver
  fullName: com.fasterxml.jackson.annotation.ObjectIdResolver
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.canUseFor*
  name: canUseFor
  nameWithType: SimpleObjectIdResolver.canUseFor
  fullName: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.canUseFor
  package: com.fasterxml.jackson.annotation
- uid: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.newForDeserialization*
  name: newForDeserialization
  nameWithType: SimpleObjectIdResolver.newForDeserialization
  fullName: com.fasterxml.jackson.annotation.SimpleObjectIdResolver.newForDeserialization
  package: com.fasterxml.jackson.annotation
- uid: java.util.Map<com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
    name: IdKey
    fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey,java.lang.Object
  name: ObjectIdGenerator.IdKey,Object
  nameWithType: ObjectIdGenerator.IdKey,Object
  fullName: com.fasterxml.jackson.annotation.ObjectIdGenerator.IdKey,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
