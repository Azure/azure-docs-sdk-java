### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult"
fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult"
name: "ReadResult"
nameWithType: "ReadResult"
summary: "Text extracted from a page in the input document."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ReadResult"
constructors:
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.ReadResult()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.ReadResult()"
  name: "ReadResult()"
  nameWithType: "ReadResult.ReadResult()"
  syntax: "public ReadResult()"
methods:
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.angle()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.angle()"
  name: "angle()"
  nameWithType: "ReadResult.angle()"
  summary: "Get the angle value."
  syntax: "public double angle()"
  desc: "Get the angle value."
  returns:
    description: "the angle value"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.height()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.height()"
  name: "height()"
  nameWithType: "ReadResult.height()"
  summary: "Get the height value."
  syntax: "public double height()"
  desc: "Get the height value."
  returns:
    description: "the height value"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.language()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.language()"
  name: "language()"
  nameWithType: "ReadResult.language()"
  summary: "Get the language value."
  syntax: "public String language()"
  desc: "Get the language value."
  returns:
    description: "the language value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.lines()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.lines()"
  name: "lines()"
  nameWithType: "ReadResult.lines()"
  summary: "Get the lines value."
  syntax: "public List<Line> lines()"
  desc: "Get the lines value."
  returns:
    description: "the lines value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.Line?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Line&text=Line\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.page()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.page()"
  name: "page()"
  nameWithType: "ReadResult.page()"
  summary: "Get the page value."
  syntax: "public int page()"
  desc: "Get the page value."
  returns:
    description: "the page value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.unit()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.unit()"
  name: "unit()"
  nameWithType: "ReadResult.unit()"
  summary: "Get the unit value."
  syntax: "public TextRecognitionResultDimensionUnit unit()"
  desc: "Get the unit value."
  returns:
    description: "the unit value"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionResultDimensionUnit?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionResultDimensionUnit&text=TextRecognitionResultDimensionUnit\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.width()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.width()"
  name: "width()"
  nameWithType: "ReadResult.width()"
  summary: "Get the width value."
  syntax: "public double width()"
  desc: "Get the width value."
  returns:
    description: "the width value"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withAngle(double)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withAngle(double angle)"
  name: "withAngle(double angle)"
  nameWithType: "ReadResult.withAngle(double angle)"
  summary: "Set the angle value."
  parameters:
  - description: "the angle value to set"
    name: "angle"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReadResult withAngle(double angle)"
  desc: "Set the angle value."
  returns:
    description: "the ReadResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withHeight(double)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withHeight(double height)"
  name: "withHeight(double height)"
  nameWithType: "ReadResult.withHeight(double height)"
  summary: "Set the height value."
  parameters:
  - description: "the height value to set"
    name: "height"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReadResult withHeight(double height)"
  desc: "Set the height value."
  returns:
    description: "the ReadResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withLanguage(java.lang.String)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withLanguage(String language)"
  name: "withLanguage(String language)"
  nameWithType: "ReadResult.withLanguage(String language)"
  summary: "Set the language value."
  parameters:
  - description: "the language value to set"
    name: "language"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReadResult withLanguage(String language)"
  desc: "Set the language value."
  returns:
    description: "the ReadResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withLines(java.util.List<com.microsoft.azure.cognitiveservices.vision.computervision.models.Line>)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withLines(List<Line> lines)"
  name: "withLines(List<Line> lines)"
  nameWithType: "ReadResult.withLines(List<Line> lines)"
  summary: "Set the lines value."
  parameters:
  - description: "the lines value to set"
    name: "lines"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.Line?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Line&text=Line\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ReadResult withLines(List<Line> lines)"
  desc: "Set the lines value."
  returns:
    description: "the ReadResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withPage(int)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withPage(int page)"
  name: "withPage(int page)"
  nameWithType: "ReadResult.withPage(int page)"
  summary: "Set the page value."
  parameters:
  - description: "the page value to set"
    name: "page"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReadResult withPage(int page)"
  desc: "Set the page value."
  returns:
    description: "the ReadResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withUnit(com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionResultDimensionUnit)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withUnit(TextRecognitionResultDimensionUnit unit)"
  name: "withUnit(TextRecognitionResultDimensionUnit unit)"
  nameWithType: "ReadResult.withUnit(TextRecognitionResultDimensionUnit unit)"
  summary: "Set the unit value."
  parameters:
  - description: "the unit value to set"
    name: "unit"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionResultDimensionUnit?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.TextRecognitionResultDimensionUnit&text=TextRecognitionResultDimensionUnit\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReadResult withUnit(TextRecognitionResultDimensionUnit unit)"
  desc: "Set the unit value."
  returns:
    description: "the ReadResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withWidth(double)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult.withWidth(double width)"
  name: "withWidth(double width)"
  nameWithType: "ReadResult.withWidth(double width)"
  summary: "Set the width value."
  parameters:
  - description: "the width value to set"
    name: "width"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReadResult withWidth(double width)"
  desc: "Set the width value."
  returns:
    description: "the ReadResult object itself."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.ReadResult&text=ReadResult\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Text extracted from a page in the input document."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.computervision.models"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-computervision:1.0.9-beta
