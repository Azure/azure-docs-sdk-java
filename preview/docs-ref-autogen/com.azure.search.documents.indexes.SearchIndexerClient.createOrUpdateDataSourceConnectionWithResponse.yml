### YamlMime:JavaMember
uid: "com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse*"
fullName: "com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse"
name: "createOrUpdateDataSourceConnectionWithResponse"
nameWithType: "SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse"
members:
- uid: "com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.CreateOrUpdateDataSourceConnectionOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse(CreateOrUpdateDataSourceConnectionOptions options, Context context)"
  name: "createOrUpdateDataSourceConnectionWithResponse(CreateOrUpdateDataSourceConnectionOptions options, Context context)"
  nameWithType: "SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse(CreateOrUpdateDataSourceConnectionOptions options, Context context)"
  summary: "Creates a new Azure Cognitive Search data source or updates a data source if it already exists.\n\n**Code Sample**\n\nCreate or update search indexer data source connection named \"dataSource\".\n\n```java\nSearchIndexerDataSourceConnection dataSource = searchIndexerClient.getDataSourceConnection(\"dataSource\");\n dataSource.setContainer(new SearchIndexerDataContainer(\"updatecontainer\"));\n CreateOrUpdateDataSourceConnectionOptions options = new CreateOrUpdateDataSourceConnectionOptions(dataSource)\n     .setOnlyIfUnchanged(true)\n     .setCacheResetRequirementsIgnored(true);\n\n Response<SearchIndexerDataSourceConnection> updateDataSource = searchIndexerClient\n     .createOrUpdateDataSourceConnectionWithResponse(options, new Context(key1, value1));\n System.out.printf(\"The status code of the response is %s.%nThe dataSource name is %s. \"\n         + \"The container name of dataSource is %s.%n\", updateDataSource.getStatusCode(),\n     updateDataSource.getValue().getName(), updateDataSource.getValue().getContainer().getName());\n```"
  parameters:
  - description: "The options used to create or update the <xref uid=\"SearchIndexerDataSourceConnection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"data source\n connection\"></xref>."
    name: "options"
    type: "<xref href=\"com.azure.search.documents.indexes.models.CreateOrUpdateDataSourceConnectionOptions?alt=com.azure.search.documents.indexes.models.CreateOrUpdateDataSourceConnectionOptions&text=CreateOrUpdateDataSourceConnectionOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SearchIndexerDataSourceConnection> createOrUpdateDataSourceConnectionWithResponse(CreateOrUpdateDataSourceConnectionOptions options, Context context)"
  returns:
    description: "a data source response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection?alt=com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection&text=SearchIndexerDataSourceConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection,boolean,com.azure.core.util.Context)"
  fullName: "com.azure.search.documents.indexes.SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, boolean onlyIfUnchanged, Context context)"
  name: "createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, boolean onlyIfUnchanged, Context context)"
  nameWithType: "SearchIndexerClient.createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, boolean onlyIfUnchanged, Context context)"
  summary: "Creates a new Azure Cognitive Search data source or updates a data source if it already exists.\n\n**Code Sample**\n\nCreate or update search indexer data source connection named \"dataSource\".\n\n```java\nSearchIndexerDataSourceConnection dataSource = searchIndexerClient.getDataSourceConnection(\"dataSource\");\n dataSource.setContainer(new SearchIndexerDataContainer(\"updatecontainer\"));\n\n Response<SearchIndexerDataSourceConnection> updateDataSource = searchIndexerClient\n     .createOrUpdateDataSourceConnectionWithResponse(dataSource, true, new Context(key1, value1));\n System.out.printf(\"The status code of the response is %s.%nThe dataSource name is %s. \"\n     + \"The container name of dataSource is %s.%n\", updateDataSource.getStatusCode(),\n     updateDataSource.getValue().getName(), updateDataSource.getValue().getContainer().getName());\n```"
  parameters:
  - description: "the <xref uid=\"com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchIndexerDataSourceConnection\"></xref> to create or update"
    name: "dataSourceConnection"
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection?alt=com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection&text=SearchIndexerDataSourceConnection\" data-throw-if-not-resolved=\"False\" />"
  - description: "<code>true</code> to update if the <code>dataSourceConnection</code> is the same as the current\n service value. <code>false</code> to always update existing value."
    name: "onlyIfUnchanged"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SearchIndexerDataSourceConnection> createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSourceConnection, boolean onlyIfUnchanged, Context context)"
  returns:
    description: "a response containing data source that was created or updated."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection?alt=com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection&text=SearchIndexerDataSourceConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.search.documents.indexes"
artifact: com.azure:azure-search-documents:11.5.0-beta.7
