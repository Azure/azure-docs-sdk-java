### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes*"
fullName: "com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes"
name: "registerSubtypes"
nameWithType: "SimpleModule.registerSubtypes"
members:
- uid: "com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType...)"
  fullName: "com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(NamedType[] subtypes)"
  name: "registerSubtypes(NamedType[] subtypes)"
  nameWithType: "SimpleModule.registerSubtypes(NamedType[] subtypes)"
  summary: "Method for adding set of subtypes (along with type name to use) to be registered with <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref> this is an alternative to using annotations in super type to indicate subtypes."
  parameters:
  - name: "subtypes"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.NamedType?alt=com.fasterxml.jackson.databind.jsontype.NamedType&text=NamedType\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public SimpleModule registerSubtypes(NamedType[] subtypes)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.module.SimpleModule?alt=com.fasterxml.jackson.databind.module.SimpleModule&text=SimpleModule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(java.lang.Class<?>...)"
  fullName: "com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(Class<?>[] subtypes)"
  name: "registerSubtypes(Class<?>[] subtypes)"
  nameWithType: "SimpleModule.registerSubtypes(Class<?>[] subtypes)"
  summary: "Method for adding set of subtypes to be registered with <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref> this is an alternative to using annotations in super type to indicate subtypes."
  parameters:
  - name: "subtypes"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;[]"
  syntax: "public SimpleModule registerSubtypes(Class<?>[] subtypes)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.module.SimpleModule?alt=com.fasterxml.jackson.databind.module.SimpleModule&text=SimpleModule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(java.util.Collection<java.lang.Class<?>>)"
  fullName: "com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(Collection<Class<?>> subtypes)"
  name: "registerSubtypes(Collection<Class<?>> subtypes)"
  nameWithType: "SimpleModule.registerSubtypes(Collection<Class<?>> subtypes)"
  summary: "Method for adding set of subtypes (along with type name to use) to be registered with <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref> this is an alternative to using annotations in super type to indicate subtypes."
  parameters:
  - name: "subtypes"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;&gt;"
  syntax: "public SimpleModule registerSubtypes(Collection<Class<?>> subtypes)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.module.SimpleModule?alt=com.fasterxml.jackson.databind.module.SimpleModule&text=SimpleModule\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.module"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
