### YamlMime:JavaType
uid: "com.fasterxml.jackson.annotation.JsonCreator"
fullName: "com.fasterxml.jackson.annotation.JsonCreator"
name: "JsonCreator"
nameWithType: "JsonCreator"
summary: "Marker annotation that can be used to define constructors and factory methods as one to use for instantiating new instances of the associated class.\n\nNOTE: when annotating creator methods (constructors, factory methods), method must either be:\n\n *  Single-argument constructor/factory method without <xref uid=\"com.fasterxml.jackson.annotation.JsonProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonProperty\"></xref> annotation for the argument: if so, this is so-called \"delegate creator\", in which case Jackson first binds JSON into type of the argument, and then calls creator. This is often used in conjunction with <xref uid=\"com.fasterxml.jackson.annotation.JsonValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonValue\"></xref> (used for serialization).\n *  Constructor/factory method where **every argument** is annotated with either <xref uid=\"com.fasterxml.jackson.annotation.JsonProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonProperty\"></xref> or <xref uid=\"com.fasterxml.jackson.annotation.JacksonInject\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JacksonInject\"></xref>, to indicate name of property to bind to\n\nAlso note that all <xref uid=\"com.fasterxml.jackson.annotation.JsonProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonProperty\"></xref> annotations must specify actual name (NOT empty String for \"default\") unless you use one of extension modules that can detect parameter name; this because default JDK versions before 8 have not been able to store and/or retrieve parameter names from bytecode. But with JDK 8 (or using helper libraries such as Paranamer, or other JVM languages like Scala or Kotlin), specifying name is optional.\n\nOne common use case is to use a delegating Creator to construct instances from scalar values (like `java.lang.String`) during deserialization, and serialize values using <xref uid=\"com.fasterxml.jackson.annotation.JsonValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonValue\"></xref>.\n\nNOTE: As of Jackson 2.6, use of <xref uid=\"com.fasterxml.jackson.annotation.JsonProperty.required()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonProperty#required()\"></xref> is supported for Creator methods (but not necessarily for regular setters or fields!)."
syntax: "public interface JsonCreator implements Annotation"
methods:
- "com.fasterxml.jackson.annotation.JsonCreator.mode()"
type: "interface"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
