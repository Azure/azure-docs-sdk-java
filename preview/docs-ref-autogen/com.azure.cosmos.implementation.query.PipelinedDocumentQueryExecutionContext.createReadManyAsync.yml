### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.query.PipelinedDocumentQueryExecutionContext.createReadManyAsync*"
fullName: "com.azure.cosmos.implementation.query.PipelinedDocumentQueryExecutionContext<T>.<T>createReadManyAsync"
name: "<T>createReadManyAsync"
nameWithType: "PipelinedDocumentQueryExecutionContext<T>.<T>createReadManyAsync"
members:
- uid: "com.azure.cosmos.implementation.query.PipelinedDocumentQueryExecutionContext.<T>createReadManyAsync(com.azure.cosmos.implementation.query.IDocumentQueryClient,java.lang.String,com.azure.cosmos.models.SqlQuerySpec,java.util.Map<com.azure.cosmos.implementation.PartitionKeyRange,com.azure.cosmos.models.SqlQuerySpec>,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,java.lang.String,java.util.UUID,java.lang.Class<T>,com.azure.cosmos.implementation.ResourceType)"
  fullName: "com.azure.cosmos.implementation.query.PipelinedDocumentQueryExecutionContext<T>.<T>createReadManyAsync(IDocumentQueryClient queryClient, String collectionResourceId, SqlQuerySpec sqlQuery, Map<PartitionKeyRange,SqlQuerySpec> rangeQueryMap, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceId, String collectionLink, UUID activityId, Class<T> klass, ResourceType resourceTypeEnum)"
  name: "<T>createReadManyAsync(IDocumentQueryClient queryClient, String collectionResourceId, SqlQuerySpec sqlQuery, Map<PartitionKeyRange,SqlQuerySpec> rangeQueryMap, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceId, String collectionLink, UUID activityId, Class<T> klass, ResourceType resourceTypeEnum)"
  nameWithType: "PipelinedDocumentQueryExecutionContext<T>.<T>createReadManyAsync(IDocumentQueryClient queryClient, String collectionResourceId, SqlQuerySpec sqlQuery, Map<PartitionKeyRange,SqlQuerySpec> rangeQueryMap, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceId, String collectionLink, UUID activityId, Class<T> klass, ResourceType resourceTypeEnum)"
  parameters:
  - name: "queryClient"
    type: "<xref href=\"com.azure.cosmos.implementation.query.IDocumentQueryClient?alt=com.azure.cosmos.implementation.query.IDocumentQueryClient&text=IDocumentQueryClient\" data-throw-if-not-resolved=\"False\" />"
  - name: "collectionResourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "sqlQuery"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - name: "rangeQueryMap"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.PartitionKeyRange?alt=com.azure.cosmos.implementation.PartitionKeyRange&text=PartitionKeyRange\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "cosmosQueryRequestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "collectionLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "activityId"
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
  - name: "klass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "resourceTypeEnum"
    type: "<xref href=\"com.azure.cosmos.implementation.ResourceType?alt=com.azure.cosmos.implementation.ResourceType&text=ResourceType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Flux<PipelinedDocumentQueryExecutionContext<T>> <T>createReadManyAsync(IDocumentQueryClient queryClient, String collectionResourceId, SqlQuerySpec sqlQuery, Map<PartitionKeyRange,SqlQuerySpec> rangeQueryMap, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceId, String collectionLink, UUID activityId, Class<T> klass, ResourceType resourceTypeEnum)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.query.PipelinedDocumentQueryExecutionContext?alt=com.azure.cosmos.implementation.query.PipelinedDocumentQueryExecutionContext&text=PipelinedDocumentQueryExecutionContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
