### YamlMime:JavaType
uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties"
fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties"
name: "DataControllerProperties"
nameWithType: "DataControllerProperties"
summary: "The data controller properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DataControllerProperties"
constructors:
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.DataControllerProperties()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.DataControllerProperties()"
  name: "DataControllerProperties()"
  nameWithType: "DataControllerProperties.DataControllerProperties()"
  syntax: "public DataControllerProperties()"
methods:
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.basicLoginInformation()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.basicLoginInformation()"
  name: "basicLoginInformation()"
  nameWithType: "DataControllerProperties.basicLoginInformation()"
  summary: "Get the basic<wbr>Login<wbr>Information property: Username and password for basic login authentication."
  syntax: "public BasicLoginInformation basicLoginInformation()"
  desc: "Get the basicLoginInformation property: Username and password for basic login authentication."
  returns:
    description: "the basicLoginInformation value."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.BasicLoginInformation?alt=com.azure.resourcemanager.azurearcdata.models.BasicLoginInformation&text=BasicLoginInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.clusterId()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.clusterId()"
  name: "clusterId()"
  nameWithType: "DataControllerProperties.clusterId()"
  summary: "Get the cluster<wbr>Id property: If a Custom<wbr>Location is provided, this contains the ARM id of the connected cluster the custom location belongs to."
  syntax: "public String clusterId()"
  desc: "Get the clusterId property: If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to."
  returns:
    description: "the clusterId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.extensionId()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.extensionId()"
  name: "extensionId()"
  nameWithType: "DataControllerProperties.extensionId()"
  summary: "Get the extension<wbr>Id property: If a Custom<wbr>Location is provided, this contains the ARM id of the extension the custom location belongs to."
  syntax: "public String extensionId()"
  desc: "Get the extensionId property: If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to."
  returns:
    description: "the extensionId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.infrastructure()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.infrastructure()"
  name: "infrastructure()"
  nameWithType: "DataControllerProperties.infrastructure()"
  summary: "Get the infrastructure property: The infrastructure the data controller is running on."
  syntax: "public Infrastructure infrastructure()"
  desc: "Get the infrastructure property: The infrastructure the data controller is running on."
  returns:
    description: "the infrastructure value."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.Infrastructure?alt=com.azure.resourcemanager.azurearcdata.models.Infrastructure&text=Infrastructure\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.k8SRaw()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.k8SRaw()"
  name: "k8SRaw()"
  nameWithType: "DataControllerProperties.k8SRaw()"
  summary: "Get the k8SRaw property: The raw kubernetes information."
  syntax: "public Object k8SRaw()"
  desc: "Get the k8SRaw property: The raw kubernetes information."
  returns:
    description: "the k8SRaw value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.lastUploadedDate()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.lastUploadedDate()"
  name: "lastUploadedDate()"
  nameWithType: "DataControllerProperties.lastUploadedDate()"
  summary: "Get the last<wbr>Uploaded<wbr>Date property: Last uploaded date from Kubernetes cluster."
  syntax: "public OffsetDateTime lastUploadedDate()"
  desc: "Get the lastUploadedDate property: Last uploaded date from Kubernetes cluster. Defaults to current date time."
  returns:
    description: "the lastUploadedDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.logAnalyticsWorkspaceConfig()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.logAnalyticsWorkspaceConfig()"
  name: "logAnalyticsWorkspaceConfig()"
  nameWithType: "DataControllerProperties.logAnalyticsWorkspaceConfig()"
  summary: "Get the log<wbr>Analytics<wbr>Workspace<wbr>Config property: Log analytics workspace id and primary key."
  syntax: "public LogAnalyticsWorkspaceConfig logAnalyticsWorkspaceConfig()"
  desc: "Get the logAnalyticsWorkspaceConfig property: Log analytics workspace id and primary key."
  returns:
    description: "the logAnalyticsWorkspaceConfig value."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.LogAnalyticsWorkspaceConfig?alt=com.azure.resourcemanager.azurearcdata.models.LogAnalyticsWorkspaceConfig&text=LogAnalyticsWorkspaceConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.onPremiseProperty()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.onPremiseProperty()"
  name: "onPremiseProperty()"
  nameWithType: "DataControllerProperties.onPremiseProperty()"
  summary: "Get the on<wbr>Premise<wbr>Property property: Properties from the Kubernetes data controller."
  syntax: "public OnPremiseProperty onPremiseProperty()"
  desc: "Get the onPremiseProperty property: Properties from the Kubernetes data controller."
  returns:
    description: "the onPremiseProperty value."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.OnPremiseProperty?alt=com.azure.resourcemanager.azurearcdata.models.OnPremiseProperty&text=OnPremiseProperty\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "DataControllerProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning<wbr>State property."
  syntax: "public String provisioningState()"
  desc: "Get the provisioningState property: The provisioningState property."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.uploadServicePrincipal()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.uploadServicePrincipal()"
  name: "uploadServicePrincipal()"
  nameWithType: "DataControllerProperties.uploadServicePrincipal()"
  summary: "Get the upload<wbr>Service<wbr>Principal property: Service principal for uploading billing, metrics and logs."
  syntax: "public UploadServicePrincipal uploadServicePrincipal()"
  desc: "Get the uploadServicePrincipal property: Service principal for uploading billing, metrics and logs."
  returns:
    description: "the uploadServicePrincipal value."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.UploadServicePrincipal?alt=com.azure.resourcemanager.azurearcdata.models.UploadServicePrincipal&text=UploadServicePrincipal\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.uploadWatermark()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.uploadWatermark()"
  name: "uploadWatermark()"
  nameWithType: "DataControllerProperties.uploadWatermark()"
  summary: "Get the upload<wbr>Watermark property: Properties on upload watermark."
  syntax: "public UploadWatermark uploadWatermark()"
  desc: "Get the uploadWatermark property: Properties on upload watermark. Mostly timestamp for each upload data type."
  returns:
    description: "the uploadWatermark value."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.UploadWatermark?alt=com.azure.resourcemanager.azurearcdata.models.UploadWatermark&text=UploadWatermark\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.validate()"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.validate()"
  name: "validate()"
  nameWithType: "DataControllerProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withBasicLoginInformation(com.azure.resourcemanager.azurearcdata.models.BasicLoginInformation)"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withBasicLoginInformation(BasicLoginInformation basicLoginInformation)"
  name: "withBasicLoginInformation(BasicLoginInformation basicLoginInformation)"
  nameWithType: "DataControllerProperties.withBasicLoginInformation(BasicLoginInformation basicLoginInformation)"
  summary: "Set the basic<wbr>Login<wbr>Information property: Username and password for basic login authentication."
  parameters:
  - description: "the basicLoginInformation value to set."
    name: "basicLoginInformation"
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.BasicLoginInformation?alt=com.azure.resourcemanager.azurearcdata.models.BasicLoginInformation&text=BasicLoginInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataControllerProperties withBasicLoginInformation(BasicLoginInformation basicLoginInformation)"
  desc: "Set the basicLoginInformation property: Username and password for basic login authentication."
  returns:
    description: "the DataControllerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.DataControllerProperties?alt=com.azure.resourcemanager.azurearcdata.models.DataControllerProperties&text=DataControllerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withClusterId(java.lang.String)"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withClusterId(String clusterId)"
  name: "withClusterId(String clusterId)"
  nameWithType: "DataControllerProperties.withClusterId(String clusterId)"
  summary: "Set the cluster<wbr>Id property: If a Custom<wbr>Location is provided, this contains the ARM id of the connected cluster the custom location belongs to."
  parameters:
  - description: "the clusterId value to set."
    name: "clusterId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataControllerProperties withClusterId(String clusterId)"
  desc: "Set the clusterId property: If a CustomLocation is provided, this contains the ARM id of the connected cluster the custom location belongs to."
  returns:
    description: "the DataControllerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.DataControllerProperties?alt=com.azure.resourcemanager.azurearcdata.models.DataControllerProperties&text=DataControllerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withExtensionId(java.lang.String)"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withExtensionId(String extensionId)"
  name: "withExtensionId(String extensionId)"
  nameWithType: "DataControllerProperties.withExtensionId(String extensionId)"
  summary: "Set the extension<wbr>Id property: If a Custom<wbr>Location is provided, this contains the ARM id of the extension the custom location belongs to."
  parameters:
  - description: "the extensionId value to set."
    name: "extensionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataControllerProperties withExtensionId(String extensionId)"
  desc: "Set the extensionId property: If a CustomLocation is provided, this contains the ARM id of the extension the custom location belongs to."
  returns:
    description: "the DataControllerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.DataControllerProperties?alt=com.azure.resourcemanager.azurearcdata.models.DataControllerProperties&text=DataControllerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withInfrastructure(com.azure.resourcemanager.azurearcdata.models.Infrastructure)"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withInfrastructure(Infrastructure infrastructure)"
  name: "withInfrastructure(Infrastructure infrastructure)"
  nameWithType: "DataControllerProperties.withInfrastructure(Infrastructure infrastructure)"
  summary: "Set the infrastructure property: The infrastructure the data controller is running on."
  parameters:
  - description: "the infrastructure value to set."
    name: "infrastructure"
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.Infrastructure?alt=com.azure.resourcemanager.azurearcdata.models.Infrastructure&text=Infrastructure\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataControllerProperties withInfrastructure(Infrastructure infrastructure)"
  desc: "Set the infrastructure property: The infrastructure the data controller is running on."
  returns:
    description: "the DataControllerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.DataControllerProperties?alt=com.azure.resourcemanager.azurearcdata.models.DataControllerProperties&text=DataControllerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withK8SRaw(java.lang.Object)"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withK8SRaw(Object k8SRaw)"
  name: "withK8SRaw(Object k8SRaw)"
  nameWithType: "DataControllerProperties.withK8SRaw(Object k8SRaw)"
  summary: "Set the k8SRaw property: The raw kubernetes information."
  parameters:
  - description: "the k8SRaw value to set."
    name: "k8SRaw"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataControllerProperties withK8SRaw(Object k8SRaw)"
  desc: "Set the k8SRaw property: The raw kubernetes information."
  returns:
    description: "the DataControllerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.DataControllerProperties?alt=com.azure.resourcemanager.azurearcdata.models.DataControllerProperties&text=DataControllerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withLastUploadedDate(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withLastUploadedDate(OffsetDateTime lastUploadedDate)"
  name: "withLastUploadedDate(OffsetDateTime lastUploadedDate)"
  nameWithType: "DataControllerProperties.withLastUploadedDate(OffsetDateTime lastUploadedDate)"
  summary: "Set the last<wbr>Uploaded<wbr>Date property: Last uploaded date from Kubernetes cluster."
  parameters:
  - description: "the lastUploadedDate value to set."
    name: "lastUploadedDate"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataControllerProperties withLastUploadedDate(OffsetDateTime lastUploadedDate)"
  desc: "Set the lastUploadedDate property: Last uploaded date from Kubernetes cluster. Defaults to current date time."
  returns:
    description: "the DataControllerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.DataControllerProperties?alt=com.azure.resourcemanager.azurearcdata.models.DataControllerProperties&text=DataControllerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withLogAnalyticsWorkspaceConfig(com.azure.resourcemanager.azurearcdata.models.LogAnalyticsWorkspaceConfig)"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withLogAnalyticsWorkspaceConfig(LogAnalyticsWorkspaceConfig logAnalyticsWorkspaceConfig)"
  name: "withLogAnalyticsWorkspaceConfig(LogAnalyticsWorkspaceConfig logAnalyticsWorkspaceConfig)"
  nameWithType: "DataControllerProperties.withLogAnalyticsWorkspaceConfig(LogAnalyticsWorkspaceConfig logAnalyticsWorkspaceConfig)"
  summary: "Set the log<wbr>Analytics<wbr>Workspace<wbr>Config property: Log analytics workspace id and primary key."
  parameters:
  - description: "the logAnalyticsWorkspaceConfig value to set."
    name: "logAnalyticsWorkspaceConfig"
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.LogAnalyticsWorkspaceConfig?alt=com.azure.resourcemanager.azurearcdata.models.LogAnalyticsWorkspaceConfig&text=LogAnalyticsWorkspaceConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataControllerProperties withLogAnalyticsWorkspaceConfig(LogAnalyticsWorkspaceConfig logAnalyticsWorkspaceConfig)"
  desc: "Set the logAnalyticsWorkspaceConfig property: Log analytics workspace id and primary key."
  returns:
    description: "the DataControllerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.DataControllerProperties?alt=com.azure.resourcemanager.azurearcdata.models.DataControllerProperties&text=DataControllerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withOnPremiseProperty(com.azure.resourcemanager.azurearcdata.models.OnPremiseProperty)"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withOnPremiseProperty(OnPremiseProperty onPremiseProperty)"
  name: "withOnPremiseProperty(OnPremiseProperty onPremiseProperty)"
  nameWithType: "DataControllerProperties.withOnPremiseProperty(OnPremiseProperty onPremiseProperty)"
  summary: "Set the on<wbr>Premise<wbr>Property property: Properties from the Kubernetes data controller."
  parameters:
  - description: "the onPremiseProperty value to set."
    name: "onPremiseProperty"
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.OnPremiseProperty?alt=com.azure.resourcemanager.azurearcdata.models.OnPremiseProperty&text=OnPremiseProperty\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataControllerProperties withOnPremiseProperty(OnPremiseProperty onPremiseProperty)"
  desc: "Set the onPremiseProperty property: Properties from the Kubernetes data controller."
  returns:
    description: "the DataControllerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.DataControllerProperties?alt=com.azure.resourcemanager.azurearcdata.models.DataControllerProperties&text=DataControllerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withUploadServicePrincipal(com.azure.resourcemanager.azurearcdata.models.UploadServicePrincipal)"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withUploadServicePrincipal(UploadServicePrincipal uploadServicePrincipal)"
  name: "withUploadServicePrincipal(UploadServicePrincipal uploadServicePrincipal)"
  nameWithType: "DataControllerProperties.withUploadServicePrincipal(UploadServicePrincipal uploadServicePrincipal)"
  summary: "Set the upload<wbr>Service<wbr>Principal property: Service principal for uploading billing, metrics and logs."
  parameters:
  - description: "the uploadServicePrincipal value to set."
    name: "uploadServicePrincipal"
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.UploadServicePrincipal?alt=com.azure.resourcemanager.azurearcdata.models.UploadServicePrincipal&text=UploadServicePrincipal\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataControllerProperties withUploadServicePrincipal(UploadServicePrincipal uploadServicePrincipal)"
  desc: "Set the uploadServicePrincipal property: Service principal for uploading billing, metrics and logs."
  returns:
    description: "the DataControllerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.DataControllerProperties?alt=com.azure.resourcemanager.azurearcdata.models.DataControllerProperties&text=DataControllerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withUploadWatermark(com.azure.resourcemanager.azurearcdata.models.UploadWatermark)"
  fullName: "com.azure.resourcemanager.azurearcdata.models.DataControllerProperties.withUploadWatermark(UploadWatermark uploadWatermark)"
  name: "withUploadWatermark(UploadWatermark uploadWatermark)"
  nameWithType: "DataControllerProperties.withUploadWatermark(UploadWatermark uploadWatermark)"
  summary: "Set the upload<wbr>Watermark property: Properties on upload watermark."
  parameters:
  - description: "the uploadWatermark value to set."
    name: "uploadWatermark"
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.UploadWatermark?alt=com.azure.resourcemanager.azurearcdata.models.UploadWatermark&text=UploadWatermark\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataControllerProperties withUploadWatermark(UploadWatermark uploadWatermark)"
  desc: "Set the uploadWatermark property: Properties on upload watermark. Mostly timestamp for each upload data type."
  returns:
    description: "the DataControllerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.azurearcdata.models.DataControllerProperties?alt=com.azure.resourcemanager.azurearcdata.models.DataControllerProperties&text=DataControllerProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The data controller properties."
metadata: {}
package: "com.azure.resourcemanager.azurearcdata.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-azurearcdata:1.0.0-beta.2
