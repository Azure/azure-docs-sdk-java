### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.CassandraSource"
fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource"
name: "CassandraSource"
nameWithType: "CassandraSource"
summary: "A copy activity source for a Cassandra database."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.CopySource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.TabularSource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.CopySource.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.CopySource.disableMetricsCollection()"
- "com.azure.resourcemanager.datafactory.models.CopySource.maxConcurrentConnections()"
- "com.azure.resourcemanager.datafactory.models.CopySource.sourceRetryCount()"
- "com.azure.resourcemanager.datafactory.models.CopySource.sourceRetryWait()"
- "com.azure.resourcemanager.datafactory.models.CopySource.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.TabularSource.additionalColumns()"
- "com.azure.resourcemanager.datafactory.models.TabularSource.queryTimeout()"
- "com.azure.resourcemanager.datafactory.models.TabularSource.validate()"
- "com.azure.resourcemanager.datafactory.models.TabularSource.withAdditionalColumns(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.TabularSource.withDisableMetricsCollection(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.TabularSource.withMaxConcurrentConnections(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.TabularSource.withQueryTimeout(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.TabularSource.withSourceRetryCount(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.models.TabularSource.withSourceRetryWait(java.lang.Object)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CassandraSource extends TabularSource"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.CassandraSource.CassandraSource()"
  fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource.CassandraSource()"
  name: "CassandraSource()"
  nameWithType: "CassandraSource.CassandraSource()"
  syntax: "public CassandraSource()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.CassandraSource.consistencyLevel()"
  fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource.consistencyLevel()"
  name: "consistencyLevel()"
  nameWithType: "CassandraSource.consistencyLevel()"
  summary: "Get the consistency<wbr>Level property: The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application."
  syntax: "public CassandraSourceReadConsistencyLevels consistencyLevel()"
  desc: "Get the consistencyLevel property: The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive."
  returns:
    description: "the consistencyLevel value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CassandraSourceReadConsistencyLevels?alt=com.azure.resourcemanager.datafactory.models.CassandraSourceReadConsistencyLevels&text=CassandraSourceReadConsistencyLevels\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.CassandraSource.query()"
  fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource.query()"
  name: "query()"
  nameWithType: "CassandraSource.query()"
  summary: "Get the query property: Database query."
  syntax: "public Object query()"
  desc: "Get the query property: Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string)."
  returns:
    description: "the query value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.CassandraSource.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource.validate()"
  name: "validate()"
  nameWithType: "CassandraSource.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.CassandraSource.withAdditionalColumns(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource.withAdditionalColumns(Object additionalColumns)"
  name: "withAdditionalColumns(Object additionalColumns)"
  nameWithType: "CassandraSource.withAdditionalColumns(Object additionalColumns)"
  summary: "Set the additional<wbr>Columns property: Specifies the additional columns to be added to source data."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.withAdditionalColumns(java.lang.Object)"
  parameters:
  - name: "additionalColumns"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CassandraSource withAdditionalColumns(Object additionalColumns)"
  desc: "Set the additionalColumns property: Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CassandraSource?alt=com.azure.resourcemanager.datafactory.models.CassandraSource&text=CassandraSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.CassandraSource.withConsistencyLevel(com.azure.resourcemanager.datafactory.models.CassandraSourceReadConsistencyLevels)"
  fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource.withConsistencyLevel(CassandraSourceReadConsistencyLevels consistencyLevel)"
  name: "withConsistencyLevel(CassandraSourceReadConsistencyLevels consistencyLevel)"
  nameWithType: "CassandraSource.withConsistencyLevel(CassandraSourceReadConsistencyLevels consistencyLevel)"
  summary: "Set the consistency<wbr>Level property: The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application."
  parameters:
  - description: "the consistencyLevel value to set."
    name: "consistencyLevel"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CassandraSourceReadConsistencyLevels?alt=com.azure.resourcemanager.datafactory.models.CassandraSourceReadConsistencyLevels&text=CassandraSourceReadConsistencyLevels\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CassandraSource withConsistencyLevel(CassandraSourceReadConsistencyLevels consistencyLevel)"
  desc: "Set the consistencyLevel property: The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive."
  returns:
    description: "the CassandraSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CassandraSource?alt=com.azure.resourcemanager.datafactory.models.CassandraSource&text=CassandraSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.CassandraSource.withDisableMetricsCollection(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource.withDisableMetricsCollection(Object disableMetricsCollection)"
  name: "withDisableMetricsCollection(Object disableMetricsCollection)"
  nameWithType: "CassandraSource.withDisableMetricsCollection(Object disableMetricsCollection)"
  summary: "Set the disable<wbr>Metrics<wbr>Collection property: If true, disable data store metrics collection."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.withDisableMetricsCollection(java.lang.Object)"
  parameters:
  - name: "disableMetricsCollection"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CassandraSource withDisableMetricsCollection(Object disableMetricsCollection)"
  desc: "Set the disableMetricsCollection property: If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CassandraSource?alt=com.azure.resourcemanager.datafactory.models.CassandraSource&text=CassandraSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.CassandraSource.withMaxConcurrentConnections(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource.withMaxConcurrentConnections(Object maxConcurrentConnections)"
  name: "withMaxConcurrentConnections(Object maxConcurrentConnections)"
  nameWithType: "CassandraSource.withMaxConcurrentConnections(Object maxConcurrentConnections)"
  summary: "Set the max<wbr>Concurrent<wbr>Connections property: The maximum concurrent connection count for the source data store."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.withMaxConcurrentConnections(java.lang.Object)"
  parameters:
  - name: "maxConcurrentConnections"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CassandraSource withMaxConcurrentConnections(Object maxConcurrentConnections)"
  desc: "Set the maxConcurrentConnections property: The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CassandraSource?alt=com.azure.resourcemanager.datafactory.models.CassandraSource&text=CassandraSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.CassandraSource.withQuery(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource.withQuery(Object query)"
  name: "withQuery(Object query)"
  nameWithType: "CassandraSource.withQuery(Object query)"
  summary: "Set the query property: Database query."
  parameters:
  - description: "the query value to set."
    name: "query"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CassandraSource withQuery(Object query)"
  desc: "Set the query property: Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string)."
  returns:
    description: "the CassandraSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CassandraSource?alt=com.azure.resourcemanager.datafactory.models.CassandraSource&text=CassandraSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.CassandraSource.withQueryTimeout(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource.withQueryTimeout(Object queryTimeout)"
  name: "withQueryTimeout(Object queryTimeout)"
  nameWithType: "CassandraSource.withQueryTimeout(Object queryTimeout)"
  summary: "Set the query<wbr>Timeout property: Query timeout."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.withQueryTimeout(java.lang.Object)"
  parameters:
  - name: "queryTimeout"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CassandraSource withQueryTimeout(Object queryTimeout)"
  desc: "Set the queryTimeout property: Query timeout. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CassandraSource?alt=com.azure.resourcemanager.datafactory.models.CassandraSource&text=CassandraSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.CassandraSource.withSourceRetryCount(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource.withSourceRetryCount(Object sourceRetryCount)"
  name: "withSourceRetryCount(Object sourceRetryCount)"
  nameWithType: "CassandraSource.withSourceRetryCount(Object sourceRetryCount)"
  summary: "Set the source<wbr>Retry<wbr>Count property: Source retry count."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.withSourceRetryCount(java.lang.Object)"
  parameters:
  - name: "sourceRetryCount"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CassandraSource withSourceRetryCount(Object sourceRetryCount)"
  desc: "Set the sourceRetryCount property: Source retry count. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CassandraSource?alt=com.azure.resourcemanager.datafactory.models.CassandraSource&text=CassandraSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.CassandraSource.withSourceRetryWait(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.CassandraSource.withSourceRetryWait(Object sourceRetryWait)"
  name: "withSourceRetryWait(Object sourceRetryWait)"
  nameWithType: "CassandraSource.withSourceRetryWait(Object sourceRetryWait)"
  summary: "Set the source<wbr>Retry<wbr>Wait property: Source retry wait."
  overridden: "com.azure.resourcemanager.datafactory.models.TabularSource.withSourceRetryWait(java.lang.Object)"
  parameters:
  - name: "sourceRetryWait"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CassandraSource withSourceRetryWait(Object sourceRetryWait)"
  desc: "Set the sourceRetryWait property: Source retry wait. Type: string (or Expression with resultType string), pattern: ((\\\\d+)\\\\.)?(\\\\d\\\\d):(60|(\\[0-5\\]\\[0-9\\])):(60|(\\[0-5\\]\\[0-9\\]))."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.CassandraSource?alt=com.azure.resourcemanager.datafactory.models.CassandraSource&text=CassandraSource\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A copy activity source for a Cassandra database."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
