### YamlMime:JavaMember
uid: "org.apache.hc.core5.http.io.EofSensorWatcher.eofDetected*"
fullName: "org.apache.hc.core5.http.io.EofSensorWatcher.eofDetected"
name: "eofDetected"
nameWithType: "EofSensorWatcher.eofDetected"
members:
- uid: "org.apache.hc.core5.http.io.EofSensorWatcher.eofDetected(java.io.InputStream)"
  fullName: "org.apache.hc.core5.http.io.EofSensorWatcher.eofDetected(InputStream wrapped)"
  name: "eofDetected(InputStream wrapped)"
  nameWithType: "EofSensorWatcher.eofDetected(InputStream wrapped)"
  summary: "Indicates that EOF is detected."
  parameters:
  - description: "the underlying stream which has reached EOF"
    name: "wrapped"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract boolean eofDetected(InputStream wrapped)"
  exceptions:
  - description: "in case of an IO problem, for example if the watcher itself\n         closes the underlying stream. The caller will leave the\n         wrapped stream alone, as if <code>false</code> was returned."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "<code>true</code> if <code>wrapped</code> should be closed,\n          <code>false</code> if it should be left alone"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.apache.hc.core5.http.io"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
