### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  id: EnableCosmosRepositories
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config
  children:
  - com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.basePackageClasses()
  - com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.basePackages()
  - com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.considerNestedRepositories()
  - com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.cosmosTemplateRef()
  - com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.excludeFilters()
  - com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.includeFilters()
  - com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.namedQueriesLocation()
  - com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.queryLookupStrategy()
  - com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryBaseClass()
  - com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryFactoryBeanClass()
  - com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryImplementationPostfix()
  - com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.value()
  langs:
  - java
  name: EnableCosmosRepositories
  nameWithType: EnableCosmosRepositories
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  type: Interface
  package: com.azure.spring.data.cosmos.repository.config
  summary: Interface to enable cosmos repository
  syntax:
    content: public interface EnableCosmosRepositories implements Annotation
  implements:
  - java.lang.annotation.Annotation
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.basePackageClasses()
  id: basePackageClasses()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  langs:
  - java
  name: basePackageClasses()
  nameWithType: EnableCosmosRepositories.basePackageClasses()
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.basePackageClasses()
  overload: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.basePackageClasses*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: To set base package class
  syntax:
    content: public abstract Class<?>[] basePackageClasses()
    return:
      type: java.lang.Class<?>[]
      description: default as {}
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.basePackages()
  id: basePackages()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  langs:
  - java
  name: basePackages()
  nameWithType: EnableCosmosRepositories.basePackages()
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.basePackages()
  overload: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.basePackages*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: To set base packages
  syntax:
    content: public abstract String[] basePackages()
    return:
      type: java.lang.String[]
      description: default as {}
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.considerNestedRepositories()
  id: considerNestedRepositories()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  langs:
  - java
  name: considerNestedRepositories()
  nameWithType: EnableCosmosRepositories.considerNestedRepositories()
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.considerNestedRepositories()
  overload: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.considerNestedRepositories*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: To set if consider nested repositories
  syntax:
    content: public abstract boolean considerNestedRepositories()
    return:
      type: boolean
      description: default value is false
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.cosmosTemplateRef()
  id: cosmosTemplateRef()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  langs:
  - java
  name: cosmosTemplateRef()
  nameWithType: EnableCosmosRepositories.cosmosTemplateRef()
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.cosmosTemplateRef()
  overload: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.cosmosTemplateRef*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: Configures the name of the <xref uid="com.azure.spring.data.cosmos.core.CosmosTemplate" data-throw-if-not-resolved="false">CosmosTemplate</xref> bean to be used with the repositories detected.
  syntax:
    content: public abstract String cosmosTemplateRef()
    return:
      type: java.lang.String
      description: cosmosTemplate by default.
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.excludeFilters()
  id: excludeFilters()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  langs:
  - java
  name: excludeFilters()
  nameWithType: EnableCosmosRepositories.excludeFilters()
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.excludeFilters()
  overload: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.excludeFilters*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: To exclude filters
  syntax:
    content: public abstract ComponentScan.Filter[] excludeFilters()
    return:
      type: org.springframework.context.annotation.ComponentScan.Filter[]
      description: default as {}
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.includeFilters()
  id: includeFilters()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  langs:
  - java
  name: includeFilters()
  nameWithType: EnableCosmosRepositories.includeFilters()
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.includeFilters()
  overload: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.includeFilters*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: To include filters
  syntax:
    content: public abstract ComponentScan.Filter[] includeFilters()
    return:
      type: org.springframework.context.annotation.ComponentScan.Filter[]
      description: default as {}
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.namedQueriesLocation()
  id: namedQueriesLocation()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  langs:
  - java
  name: namedQueriesLocation()
  nameWithType: EnableCosmosRepositories.namedQueriesLocation()
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.namedQueriesLocation()
  overload: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.namedQueriesLocation*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: To set the named query location
  syntax:
    content: public abstract String namedQueriesLocation()
    return:
      type: java.lang.String
      description: default as ""
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.queryLookupStrategy()
  id: queryLookupStrategy()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  langs:
  - java
  name: queryLookupStrategy()
  nameWithType: EnableCosmosRepositories.queryLookupStrategy()
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.queryLookupStrategy()
  overload: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.queryLookupStrategy*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: To set query look up strategy
  syntax:
    content: public abstract QueryLookupStrategy.Key queryLookupStrategy()
    return:
      type: org.springframework.data.repository.query.QueryLookupStrategy.Key
      description: QueryLookupStrategy.Key
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryBaseClass()
  id: repositoryBaseClass()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  langs:
  - java
  name: repositoryBaseClass()
  nameWithType: EnableCosmosRepositories.repositoryBaseClass()
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryBaseClass()
  overload: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryBaseClass*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: To set base class of repo
  syntax:
    content: public abstract Class<?> repositoryBaseClass()
    return:
      type: java.lang.Class<?>
      description: default value is DefaultRepositoryBaseClass.class
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryFactoryBeanClass()
  id: repositoryFactoryBeanClass()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  langs:
  - java
  name: repositoryFactoryBeanClass()
  nameWithType: EnableCosmosRepositories.repositoryFactoryBeanClass()
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryFactoryBeanClass()
  overload: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryFactoryBeanClass*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: To set factory bean class of repo
  syntax:
    content: public abstract Class<?> repositoryFactoryBeanClass()
    return:
      type: java.lang.Class<?>
      description: default value is ReactiveCosmosRepositoryFactoryBean.class
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryImplementationPostfix()
  id: repositoryImplementationPostfix()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  langs:
  - java
  name: repositoryImplementationPostfix()
  nameWithType: EnableCosmosRepositories.repositoryImplementationPostfix()
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryImplementationPostfix()
  overload: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryImplementationPostfix*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: To set repo Implement postfix
  syntax:
    content: public abstract String repositoryImplementationPostfix()
    return:
      type: java.lang.String
      description: default as "Impl"
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.value()
  id: value()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories
  langs:
  - java
  name: value()
  nameWithType: EnableCosmosRepositories.value()
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.value()
  overload: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.value*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: To set repo value
  syntax:
    content: public abstract String[] value()
    return:
      type: java.lang.String[]
      description: default as {}
references:
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.value*
  name: value
  nameWithType: EnableCosmosRepositories.value
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.value
  package: com.azure.spring.data.cosmos.repository.config
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.basePackages*
  name: basePackages
  nameWithType: EnableCosmosRepositories.basePackages
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.basePackages
  package: com.azure.spring.data.cosmos.repository.config
- uid: java.lang.Class<?>[]
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.basePackageClasses*
  name: basePackageClasses
  nameWithType: EnableCosmosRepositories.basePackageClasses
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.basePackageClasses
  package: com.azure.spring.data.cosmos.repository.config
- uid: org.springframework.context.annotation.ComponentScan.Filter[]
  spec.java:
  - uid: org.springframework.context.annotation.ComponentScan.Filter
    name: Filter
    fullName: org.springframework.context.annotation.ComponentScan.Filter
  - name: '[]'
    fullName: '[]'
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.includeFilters*
  name: includeFilters
  nameWithType: EnableCosmosRepositories.includeFilters
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.includeFilters
  package: com.azure.spring.data.cosmos.repository.config
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.excludeFilters*
  name: excludeFilters
  nameWithType: EnableCosmosRepositories.excludeFilters
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.excludeFilters
  package: com.azure.spring.data.cosmos.repository.config
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryImplementationPostfix*
  name: repositoryImplementationPostfix
  nameWithType: EnableCosmosRepositories.repositoryImplementationPostfix
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryImplementationPostfix
  package: com.azure.spring.data.cosmos.repository.config
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.namedQueriesLocation*
  name: namedQueriesLocation
  nameWithType: EnableCosmosRepositories.namedQueriesLocation
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.namedQueriesLocation
  package: com.azure.spring.data.cosmos.repository.config
- uid: org.springframework.data.repository.query.QueryLookupStrategy.Key
  spec.java:
  - uid: org.springframework.data.repository.query.QueryLookupStrategy.Key
    name: Key
    fullName: org.springframework.data.repository.query.QueryLookupStrategy.Key
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.queryLookupStrategy*
  name: queryLookupStrategy
  nameWithType: EnableCosmosRepositories.queryLookupStrategy
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.queryLookupStrategy
  package: com.azure.spring.data.cosmos.repository.config
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryFactoryBeanClass*
  name: repositoryFactoryBeanClass
  nameWithType: EnableCosmosRepositories.repositoryFactoryBeanClass
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryFactoryBeanClass
  package: com.azure.spring.data.cosmos.repository.config
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryBaseClass*
  name: repositoryBaseClass
  nameWithType: EnableCosmosRepositories.repositoryBaseClass
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.repositoryBaseClass
  package: com.azure.spring.data.cosmos.repository.config
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.considerNestedRepositories*
  name: considerNestedRepositories
  nameWithType: EnableCosmosRepositories.considerNestedRepositories
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.considerNestedRepositories
  package: com.azure.spring.data.cosmos.repository.config
- uid: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.cosmosTemplateRef*
  name: cosmosTemplateRef
  nameWithType: EnableCosmosRepositories.cosmosTemplateRef
  fullName: com.azure.spring.data.cosmos.repository.config.EnableCosmosRepositories.cosmosTemplateRef
  package: com.azure.spring.data.cosmos.repository.config
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: ?>[]
  name: ?>[]
  nameWithType: ?>[]
  fullName: ?>[]
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
