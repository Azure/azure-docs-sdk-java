### YamlMime:JavaMember
uid: "com.azure.messaging.webpubsub.WebPubSubAsyncServiceClient.checkGroupExistsWithResponse*"
fullName: "com.azure.messaging.webpubsub.WebPubSubAsyncServiceClient.checkGroupExistsWithResponse"
name: "checkGroupExistsWithResponse"
nameWithType: "WebPubSubAsyncServiceClient.checkGroupExistsWithResponse"
members:
- uid: "com.azure.messaging.webpubsub.WebPubSubAsyncServiceClient.checkGroupExistsWithResponse(java.lang.String)"
  fullName: "com.azure.messaging.webpubsub.WebPubSubAsyncServiceClient.checkGroupExistsWithResponse(String group)"
  name: "checkGroupExistsWithResponse(String group)"
  nameWithType: "WebPubSubAsyncServiceClient.checkGroupExistsWithResponse(String group)"
  summary: "Check if a particular group exists (i.e. has active connections)."
  parameters:
  - description: "The group name to check for."
    name: "group"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Boolean>> checkGroupExistsWithResponse(String group)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> with a Boolean value representing whether the group exists,\n      as well as status code and response headers representing the response from the service."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.messaging.webpubsub"
artifact: com.azure:azure-messaging-webpubsub:1.0.0-beta.2
