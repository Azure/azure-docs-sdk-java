### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.SearchServiceLimits"
fullName: "com.azure.search.documents.indexes.models.SearchServiceLimits"
name: "SearchServiceLimits"
nameWithType: "SearchServiceLimits"
summary: "Represents various service level limits."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SearchServiceLimits"
constructors:
- "com.azure.search.documents.indexes.models.SearchServiceLimits.SearchServiceLimits()"
methods:
- "com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexCollectionFieldsPerIndex()"
- "com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexObjectsInCollectionsPerDocument()"
- "com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldNestingDepthPerIndex()"
- "com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldsPerIndex()"
- "com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexCollectionFieldsPerIndex(java.lang.Integer)"
- "com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexObjectsInCollectionsPerDocument(java.lang.Integer)"
- "com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldNestingDepthPerIndex(java.lang.Integer)"
- "com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldsPerIndex(java.lang.Integer)"
type: "class"
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.2.0-beta.3
