### YamlMime:ManagedReference
items:
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits
  id: SearchServiceLimits
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models
  children:
  - com.azure.search.documents.indexes.models.SearchServiceLimits.SearchServiceLimits()
  - com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexCollectionFieldsPerIndex()
  - com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexObjectsInCollectionsPerDocument()
  - com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldNestingDepthPerIndex()
  - com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldsPerIndex()
  - com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexCollectionFieldsPerIndex(java.lang.Integer)
  - com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexObjectsInCollectionsPerDocument(java.lang.Integer)
  - com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldNestingDepthPerIndex(java.lang.Integer)
  - com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldsPerIndex(java.lang.Integer)
  langs:
  - java
  name: SearchServiceLimits
  nameWithType: SearchServiceLimits
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits
  type: Class
  package: com.azure.search.documents.indexes.models
  summary: Represents various service level limits.
  syntax:
    content: public final class SearchServiceLimits
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.SearchServiceLimits()
  id: SearchServiceLimits()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.SearchServiceLimits
  langs:
  - java
  name: SearchServiceLimits()
  nameWithType: SearchServiceLimits.SearchServiceLimits()
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.SearchServiceLimits()
  overload: com.azure.search.documents.indexes.models.SearchServiceLimits.SearchServiceLimits*
  type: Constructor
  package: com.azure.search.documents.indexes.models
  syntax:
    content: public SearchServiceLimits()
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexCollectionFieldsPerIndex()
  id: getMaxComplexCollectionFieldsPerIndex()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.SearchServiceLimits
  langs:
  - java
  name: getMaxComplexCollectionFieldsPerIndex()
  nameWithType: SearchServiceLimits.getMaxComplexCollectionFieldsPerIndex()
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexCollectionFieldsPerIndex()
  overload: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexCollectionFieldsPerIndex*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the maxComplexCollectionFieldsPerIndex property: The maximum number of fields of type Collection(Edm.ComplexType) allowed in an index.'
  syntax:
    content: public Integer getMaxComplexCollectionFieldsPerIndex()
    return:
      type: java.lang.Integer
      description: the maxComplexCollectionFieldsPerIndex value.
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexObjectsInCollectionsPerDocument()
  id: getMaxComplexObjectsInCollectionsPerDocument()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.SearchServiceLimits
  langs:
  - java
  name: getMaxComplexObjectsInCollectionsPerDocument()
  nameWithType: SearchServiceLimits.getMaxComplexObjectsInCollectionsPerDocument()
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexObjectsInCollectionsPerDocument()
  overload: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexObjectsInCollectionsPerDocument*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the maxComplexObjectsInCollectionsPerDocument property: The maximum number of objects in complex collections allowed per document.'
  syntax:
    content: public Integer getMaxComplexObjectsInCollectionsPerDocument()
    return:
      type: java.lang.Integer
      description: the maxComplexObjectsInCollectionsPerDocument value.
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldNestingDepthPerIndex()
  id: getMaxFieldNestingDepthPerIndex()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.SearchServiceLimits
  langs:
  - java
  name: getMaxFieldNestingDepthPerIndex()
  nameWithType: SearchServiceLimits.getMaxFieldNestingDepthPerIndex()
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldNestingDepthPerIndex()
  overload: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldNestingDepthPerIndex*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the maxFieldNestingDepthPerIndex property: The maximum depth which you can nest sub-fields in an index, including the top-level complex field. For example, a/b/c has a nesting depth of 3.'
  syntax:
    content: public Integer getMaxFieldNestingDepthPerIndex()
    return:
      type: java.lang.Integer
      description: the maxFieldNestingDepthPerIndex value.
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldsPerIndex()
  id: getMaxFieldsPerIndex()
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.SearchServiceLimits
  langs:
  - java
  name: getMaxFieldsPerIndex()
  nameWithType: SearchServiceLimits.getMaxFieldsPerIndex()
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldsPerIndex()
  overload: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldsPerIndex*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Get the maxFieldsPerIndex property: The maximum allowed fields per index.'
  syntax:
    content: public Integer getMaxFieldsPerIndex()
    return:
      type: java.lang.Integer
      description: the maxFieldsPerIndex value.
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexCollectionFieldsPerIndex(java.lang.Integer)
  id: setMaxComplexCollectionFieldsPerIndex(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.SearchServiceLimits
  langs:
  - java
  name: setMaxComplexCollectionFieldsPerIndex(Integer maxComplexCollectionFieldsPerIndex)
  nameWithType: SearchServiceLimits.setMaxComplexCollectionFieldsPerIndex(Integer maxComplexCollectionFieldsPerIndex)
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexCollectionFieldsPerIndex(Integer maxComplexCollectionFieldsPerIndex)
  overload: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexCollectionFieldsPerIndex*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the maxComplexCollectionFieldsPerIndex property: The maximum number of fields of type Collection(Edm.ComplexType) allowed in an index.'
  syntax:
    content: public SearchServiceLimits setMaxComplexCollectionFieldsPerIndex(Integer maxComplexCollectionFieldsPerIndex)
    parameters:
    - id: maxComplexCollectionFieldsPerIndex
      type: java.lang.Integer
      description: >-
        the
         maxComplexCollectionFieldsPerIndex value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchServiceLimits
      description: the ServiceLimits object itself.
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexObjectsInCollectionsPerDocument(java.lang.Integer)
  id: setMaxComplexObjectsInCollectionsPerDocument(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.SearchServiceLimits
  langs:
  - java
  name: setMaxComplexObjectsInCollectionsPerDocument(Integer maxComplexObjectsInCollectionsPerDocument)
  nameWithType: SearchServiceLimits.setMaxComplexObjectsInCollectionsPerDocument(Integer maxComplexObjectsInCollectionsPerDocument)
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexObjectsInCollectionsPerDocument(Integer maxComplexObjectsInCollectionsPerDocument)
  overload: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexObjectsInCollectionsPerDocument*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the maxComplexObjectsInCollectionsPerDocument property: The maximum number of objects in complex collections allowed per document.'
  syntax:
    content: public SearchServiceLimits setMaxComplexObjectsInCollectionsPerDocument(Integer maxComplexObjectsInCollectionsPerDocument)
    parameters:
    - id: maxComplexObjectsInCollectionsPerDocument
      type: java.lang.Integer
      description: >-
        the
         maxComplexObjectsInCollectionsPerDocument value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchServiceLimits
      description: the ServiceLimits object itself.
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldNestingDepthPerIndex(java.lang.Integer)
  id: setMaxFieldNestingDepthPerIndex(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.SearchServiceLimits
  langs:
  - java
  name: setMaxFieldNestingDepthPerIndex(Integer maxFieldNestingDepthPerIndex)
  nameWithType: SearchServiceLimits.setMaxFieldNestingDepthPerIndex(Integer maxFieldNestingDepthPerIndex)
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldNestingDepthPerIndex(Integer maxFieldNestingDepthPerIndex)
  overload: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldNestingDepthPerIndex*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the maxFieldNestingDepthPerIndex property: The maximum depth which you can nest sub-fields in an index, including the top-level complex field. For example, a/b/c has a nesting depth of 3.'
  syntax:
    content: public SearchServiceLimits setMaxFieldNestingDepthPerIndex(Integer maxFieldNestingDepthPerIndex)
    parameters:
    - id: maxFieldNestingDepthPerIndex
      type: java.lang.Integer
      description: >-
        the maxFieldNestingDepthPerIndex
         value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchServiceLimits
      description: the ServiceLimits object itself.
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldsPerIndex(java.lang.Integer)
  id: setMaxFieldsPerIndex(java.lang.Integer)
  artifact: com.azure:azure-search-documents:11.1.0-beta.1
  parent: com.azure.search.documents.indexes.models.SearchServiceLimits
  langs:
  - java
  name: setMaxFieldsPerIndex(Integer maxFieldsPerIndex)
  nameWithType: SearchServiceLimits.setMaxFieldsPerIndex(Integer maxFieldsPerIndex)
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldsPerIndex(Integer maxFieldsPerIndex)
  overload: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldsPerIndex*
  type: Method
  package: com.azure.search.documents.indexes.models
  summary: 'Set the maxFieldsPerIndex property: The maximum allowed fields per index.'
  syntax:
    content: public SearchServiceLimits setMaxFieldsPerIndex(Integer maxFieldsPerIndex)
    parameters:
    - id: maxFieldsPerIndex
      type: java.lang.Integer
      description: the maxFieldsPerIndex value to set.
    return:
      type: com.azure.search.documents.indexes.models.SearchServiceLimits
      description: the ServiceLimits object itself.
references:
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.SearchServiceLimits*
  name: SearchServiceLimits
  nameWithType: SearchServiceLimits.SearchServiceLimits
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.SearchServiceLimits
  package: com.azure.search.documents.indexes.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldsPerIndex*
  name: getMaxFieldsPerIndex
  nameWithType: SearchServiceLimits.getMaxFieldsPerIndex
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldsPerIndex
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldsPerIndex*
  name: setMaxFieldsPerIndex
  nameWithType: SearchServiceLimits.setMaxFieldsPerIndex
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldsPerIndex
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldNestingDepthPerIndex*
  name: getMaxFieldNestingDepthPerIndex
  nameWithType: SearchServiceLimits.getMaxFieldNestingDepthPerIndex
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxFieldNestingDepthPerIndex
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldNestingDepthPerIndex*
  name: setMaxFieldNestingDepthPerIndex
  nameWithType: SearchServiceLimits.setMaxFieldNestingDepthPerIndex
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxFieldNestingDepthPerIndex
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexCollectionFieldsPerIndex*
  name: getMaxComplexCollectionFieldsPerIndex
  nameWithType: SearchServiceLimits.getMaxComplexCollectionFieldsPerIndex
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexCollectionFieldsPerIndex
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexCollectionFieldsPerIndex*
  name: setMaxComplexCollectionFieldsPerIndex
  nameWithType: SearchServiceLimits.setMaxComplexCollectionFieldsPerIndex
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexCollectionFieldsPerIndex
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexObjectsInCollectionsPerDocument*
  name: getMaxComplexObjectsInCollectionsPerDocument
  nameWithType: SearchServiceLimits.getMaxComplexObjectsInCollectionsPerDocument
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.getMaxComplexObjectsInCollectionsPerDocument
  package: com.azure.search.documents.indexes.models
- uid: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexObjectsInCollectionsPerDocument*
  name: setMaxComplexObjectsInCollectionsPerDocument
  nameWithType: SearchServiceLimits.setMaxComplexObjectsInCollectionsPerDocument
  fullName: com.azure.search.documents.indexes.models.SearchServiceLimits.setMaxComplexObjectsInCollectionsPerDocument
  package: com.azure.search.documents.indexes.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
