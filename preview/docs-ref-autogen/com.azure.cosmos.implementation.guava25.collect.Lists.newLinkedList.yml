### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Lists.newLinkedList*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newLinkedList"
name: "<E>newLinkedList"
nameWithType: "Lists.<E>newLinkedList"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newLinkedList()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newLinkedList()"
  name: "<E>newLinkedList()"
  nameWithType: "Lists.<E>newLinkedList()"
  summary: "Creates a *mutable*, empty `LinkedList` instance (for Java 6 and earlier).\n\n**Note:** if you won't be adding any elements to the list, use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList.&lt;E&gt;of()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ImmutableList#of()\"></xref> instead.\n\n**Performance note:** <xref uid=\"java.util.ArrayList\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ArrayList\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.ArrayDeque\"></xref> consistently outperform `LinkedList` except in certain rare and specific situations. Unless you have spent a lot of time benchmarking your specific needs, use one of those instead.\n\n**Note for Java 7 and later:** this method is now unnecessary and should be treated as deprecated. Instead, use the `LinkedList` <xref uid=\"java.util.LinkedList.LinkedList*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"constructor\"></xref> directly, taking advantage of the new [\"diamond\" syntax][diamond_ syntax].\n\n\n[diamond_ syntax]: http://goo.gl/iz2Wi"
  syntax: "public static LinkedList<E> <E>newLinkedList()"
  returns:
    type: "<xref href=\"java.util.LinkedList?alt=java.util.LinkedList&text=LinkedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newLinkedList(java.lang.Iterable<? extends E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Lists.<E>newLinkedList(Iterable<? extends E> elements)"
  name: "<E>newLinkedList(Iterable<? extends E> elements)"
  nameWithType: "Lists.<E>newLinkedList(Iterable<? extends E> elements)"
  summary: "Creates a *mutable* `LinkedList` instance containing the given elements; a very thin shortcut for creating an empty list then calling <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Iterables.addAll\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterables#addAll\"></xref>.\n\n**Note:** if mutability is not required and the elements are non-null, use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableList.&lt;E&gt;copyOf(java.lang.Iterable&lt;? extends E&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ImmutableList#copyOf(Iterable)\"></xref> instead. (Or, change `elements` to be a <xref uid=\"com.azure.cosmos.implementation.guava25.collect.FluentIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FluentIterable\"></xref> and call `elements.toList()`.)\n\n**Performance note:** <xref uid=\"java.util.ArrayList\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ArrayList\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.ArrayDeque\"></xref> consistently outperform `LinkedList` except in certain rare and specific situations. Unless you have spent a lot of time benchmarking your specific needs, use one of those instead.\n\n**Note for Java 7 and later:** if `elements` is a <xref uid=\"java.util.Collection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Collection\"></xref>, you don't need this method. Use the `LinkedList` <xref uid=\"java.util.LinkedList.LinkedList*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"constructor\"></xref> directly, taking advantage of the new [\"diamond\" syntax][diamond_ syntax].\n\n\n[diamond_ syntax]: http://goo.gl/iz2Wi"
  parameters:
  - name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends E?alt=? extends E&text=? extends E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static LinkedList<E> <E>newLinkedList(Iterable<? extends E> elements)"
  returns:
    type: "<xref href=\"java.util.LinkedList?alt=java.util.LinkedList&text=LinkedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
