### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ObjectMapper._mixIns*"
fullName: "com.fasterxml.jackson.databind.ObjectMapper._mixIns"
name: "_mixIns"
nameWithType: "ObjectMapper._mixIns"
members:
- uid: "com.fasterxml.jackson.databind.ObjectMapper._mixIns"
  fullName: "com.fasterxml.jackson.databind.ObjectMapper._mixIns"
  name: "_mixIns"
  nameWithType: "ObjectMapper._mixIns"
  summary: "Mapping that defines how to apply mix-in annotations: key is the type to received additional annotations, and value is the type that has annotations to \"mix in\".\n\nAnnotations associated with the value classes will be used to override annotations of the key class, associated with the same field or method. They can be further masked by sub-classes: you can think of it as injecting annotations between the target class and its sub-classes (or interfaces)"
  syntax: "protected SimpleMixInResolver _mixIns"
type: "field"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
