### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventgrid.EventGridSasCredential
  id: EventGridSasCredential
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.1
  parent: com.azure.messaging.eventgrid
  children:
  - com.azure.messaging.eventgrid.EventGridSasCredential.EventGridSasCredential(java.lang.String)
  - com.azure.messaging.eventgrid.EventGridSasCredential.createSas(java.lang.String,java.time.OffsetDateTime,com.azure.core.credential.AzureKeyCredential)
  - com.azure.messaging.eventgrid.EventGridSasCredential.getSas()
  - com.azure.messaging.eventgrid.EventGridSasCredential.update(java.lang.String)
  langs:
  - java
  name: EventGridSasCredential
  nameWithType: EventGridSasCredential
  fullName: com.azure.messaging.eventgrid.EventGridSasCredential
  type: Class
  package: com.azure.messaging.eventgrid
  summary: A way to use a generated shared access signature as a credential to publish events to a topic through a client.
  syntax:
    content: public final class EventGridSasCredential
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.eventgrid.EventGridSasCredential.EventGridSasCredential(java.lang.String)
  id: EventGridSasCredential(java.lang.String)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.1
  parent: com.azure.messaging.eventgrid.EventGridSasCredential
  langs:
  - java
  name: EventGridSasCredential(String sas)
  nameWithType: EventGridSasCredential.EventGridSasCredential(String sas)
  fullName: com.azure.messaging.eventgrid.EventGridSasCredential.EventGridSasCredential(String sas)
  overload: com.azure.messaging.eventgrid.EventGridSasCredential.EventGridSasCredential*
  type: Constructor
  package: com.azure.messaging.eventgrid
  summary: Create an instance of this object to authenticate calls to the EventGrid service.
  syntax:
    content: public EventGridSasCredential(String sas)
    parameters:
    - id: sas
      type: java.lang.String
      description: the shared access signature to use.
- uid: com.azure.messaging.eventgrid.EventGridSasCredential.createSas(java.lang.String,java.time.OffsetDateTime,com.azure.core.credential.AzureKeyCredential)
  id: createSas(java.lang.String,java.time.OffsetDateTime,com.azure.core.credential.AzureKeyCredential)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.1
  parent: com.azure.messaging.eventgrid.EventGridSasCredential
  langs:
  - java
  name: createSas(String endpoint, OffsetDateTime expirationTime, AzureKeyCredential keyCredential)
  nameWithType: EventGridSasCredential.createSas(String endpoint, OffsetDateTime expirationTime, AzureKeyCredential keyCredential)
  fullName: com.azure.messaging.eventgrid.EventGridSasCredential.createSas(String endpoint, OffsetDateTime expirationTime, AzureKeyCredential keyCredential)
  overload: com.azure.messaging.eventgrid.EventGridSasCredential.createSas*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Generate a shared access signature to provide time-limited authentication for requests to the Event Grid service.
  syntax:
    content: public static String createSas(String endpoint, OffsetDateTime expirationTime, AzureKeyCredential keyCredential)
    parameters:
    - id: endpoint
      type: java.lang.String
      description: the endpoint of the Event Grid topic or domain.
    - id: expirationTime
      type: java.time.OffsetDateTime
      description: the time in which the signature should expire, no longer providing authentication.
    - id: keyCredential
      type: com.azure.core.credential.AzureKeyCredential
      description: the access key obtained from the Event Grid topic or domain.
    return:
      type: java.lang.String
      description: >-
        the shared access signature string which can be used to construct an instance of
         <xref uid="com.azure.messaging.eventgrid.EventGridSasCredential" data-throw-if-not-resolved="false">EventGridSasCredential</xref>.
- uid: com.azure.messaging.eventgrid.EventGridSasCredential.getSas()
  id: getSas()
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.1
  parent: com.azure.messaging.eventgrid.EventGridSasCredential
  langs:
  - java
  name: getSas()
  nameWithType: EventGridSasCredential.getSas()
  fullName: com.azure.messaging.eventgrid.EventGridSasCredential.getSas()
  overload: com.azure.messaging.eventgrid.EventGridSasCredential.getSas*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Get the token string to authenticate service calls
  syntax:
    content: public String getSas()
    return:
      type: java.lang.String
      description: the Shared Access Signature as a string
- uid: com.azure.messaging.eventgrid.EventGridSasCredential.update(java.lang.String)
  id: update(java.lang.String)
  artifact: com.azure:azure-messaging-eventgrid:2.0.0-beta.1
  parent: com.azure.messaging.eventgrid.EventGridSasCredential
  langs:
  - java
  name: update(String sas)
  nameWithType: EventGridSasCredential.update(String sas)
  fullName: com.azure.messaging.eventgrid.EventGridSasCredential.update(String sas)
  overload: com.azure.messaging.eventgrid.EventGridSasCredential.update*
  type: Method
  package: com.azure.messaging.eventgrid
  summary: Change the shared access signature token to a new one.
  syntax:
    content: public void update(String sas)
    parameters:
    - id: sas
      type: java.lang.String
      description: the shared access signature token to use.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.messaging.eventgrid.EventGridSasCredential.EventGridSasCredential*
  name: EventGridSasCredential
  nameWithType: EventGridSasCredential.EventGridSasCredential
  fullName: com.azure.messaging.eventgrid.EventGridSasCredential.EventGridSasCredential
  package: com.azure.messaging.eventgrid
- uid: java.time.OffsetDateTime
  spec.java:
  - uid: java.time.OffsetDateTime
    name: OffsetDateTime
    fullName: java.time.OffsetDateTime
- uid: com.azure.core.credential.AzureKeyCredential
  spec.java:
  - uid: com.azure.core.credential.AzureKeyCredential
    name: AzureKeyCredential
    fullName: com.azure.core.credential.AzureKeyCredential
- uid: com.azure.messaging.eventgrid.EventGridSasCredential.createSas*
  name: createSas
  nameWithType: EventGridSasCredential.createSas
  fullName: com.azure.messaging.eventgrid.EventGridSasCredential.createSas
  package: com.azure.messaging.eventgrid
- uid: com.azure.messaging.eventgrid.EventGridSasCredential.getSas*
  name: getSas
  nameWithType: EventGridSasCredential.getSas
  fullName: com.azure.messaging.eventgrid.EventGridSasCredential.getSas
  package: com.azure.messaging.eventgrid
- uid: com.azure.messaging.eventgrid.EventGridSasCredential.update*
  name: update
  nameWithType: EventGridSasCredential.update
  fullName: com.azure.messaging.eventgrid.EventGridSasCredential.update
  package: com.azure.messaging.eventgrid
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
