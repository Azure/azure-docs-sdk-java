### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.type.MapLikeType.upgradeFrom*"
fullName: "com.fasterxml.jackson.databind.type.MapLikeType.upgradeFrom"
name: "upgradeFrom"
nameWithType: "MapLikeType.upgradeFrom"
members:
- uid: "com.fasterxml.jackson.databind.type.MapLikeType.upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)"
  fullName: "com.fasterxml.jackson.databind.type.MapLikeType.upgradeFrom(JavaType baseType, JavaType keyT, JavaType valueT)"
  name: "upgradeFrom(JavaType baseType, JavaType keyT, JavaType valueT)"
  nameWithType: "MapLikeType.upgradeFrom(JavaType baseType, JavaType keyT, JavaType valueT)"
  summary: "Factory method that can be used to \"upgrade\" a basic type into collection-like one; usually done via <xref uid=\"com.fasterxml.jackson.databind.type.TypeModifier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeModifier\"></xref>"
  parameters:
  - name: "baseType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "keyT"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "valueT"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static MapLikeType upgradeFrom(JavaType baseType, JavaType keyT, JavaType valueT)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.type.MapLikeType?alt=com.fasterxml.jackson.databind.type.MapLikeType&text=MapLikeType\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
