### YamlMime:JavaMember
uid: "com.azure.communication.common.CommunicationUserCredential.CommunicationUserCredential*"
fullName: "com.azure.communication.common.CommunicationUserCredential.CommunicationUserCredential"
name: "CommunicationUserCredential"
nameWithType: "CommunicationUserCredential.CommunicationUserCredential"
members:
- uid: "com.azure.communication.common.CommunicationUserCredential.CommunicationUserCredential(com.azure.communication.common.TokenRefresher)"
  fullName: "com.azure.communication.common.CommunicationUserCredential.CommunicationUserCredential(TokenRefresher tokenRefresher)"
  name: "CommunicationUserCredential(TokenRefresher tokenRefresher)"
  nameWithType: "CommunicationUserCredential.CommunicationUserCredential(TokenRefresher tokenRefresher)"
  summary: "Create with a tokenRefresher"
  parameters:
  - description: "implementation to supply fresh token when reqested"
    name: "tokenRefresher"
    type: "<xref href=\"com.azure.communication.common.TokenRefresher?alt=com.azure.communication.common.TokenRefresher&text=TokenRefresher\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommunicationUserCredential(TokenRefresher tokenRefresher)"
- uid: "com.azure.communication.common.CommunicationUserCredential.CommunicationUserCredential(com.azure.communication.common.TokenRefresher,java.lang.String,boolean)"
  fullName: "com.azure.communication.common.CommunicationUserCredential.CommunicationUserCredential(TokenRefresher tokenRefresher, String initialToken, boolean refreshProactively)"
  name: "CommunicationUserCredential(TokenRefresher tokenRefresher, String initialToken, boolean refreshProactively)"
  nameWithType: "CommunicationUserCredential.CommunicationUserCredential(TokenRefresher tokenRefresher, String initialToken, boolean refreshProactively)"
  summary: "Create with serialized JWT token and a token supplier to auto-refresh the token before it expires. Callback function tokenRefresher will be called ahead of the token expiry by the number of minutes specified by CallbackOffsetMinutes defaulted to two minutes. To modify this default, call setCallbackOffsetMinutes after construction"
  parameters:
  - description: "implementation to supply fresh token when reqested"
    name: "tokenRefresher"
    type: "<xref href=\"com.azure.communication.common.TokenRefresher?alt=com.azure.communication.common.TokenRefresher&text=TokenRefresher\" data-throw-if-not-resolved=\"False\" />"
  - description: "serialized JWT token"
    name: "initialToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "when set to true, turn on proactive fetching to\n                           call tokenRefresher before token expiry by minutes\n                           set with setCallbackOffsetMinutes or default value\n                           of two minutes"
    name: "refreshProactively"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommunicationUserCredential(TokenRefresher tokenRefresher, String initialToken, boolean refreshProactively)"
- uid: "com.azure.communication.common.CommunicationUserCredential.CommunicationUserCredential(java.lang.String)"
  fullName: "com.azure.communication.common.CommunicationUserCredential.CommunicationUserCredential(String initialToken)"
  name: "CommunicationUserCredential(String initialToken)"
  nameWithType: "CommunicationUserCredential.CommunicationUserCredential(String initialToken)"
  summary: "Create with serialized JWT token"
  parameters:
  - description: "serialized JWT token"
    name: "initialToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommunicationUserCredential(String initialToken)"
type: "constructor"
metadata: {}
package: "com.azure.communication.common"
artifact: com.azure:azure-communication-common:1.0.0-beta.3
