### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.type.TypeReference.compareTo*"
fullName: "com.fasterxml.jackson.core.type.TypeReference<T>.compareTo"
name: "compareTo"
nameWithType: "TypeReference<T>.compareTo"
members:
- uid: "com.fasterxml.jackson.core.type.TypeReference.compareTo(com.fasterxml.jackson.core.type.TypeReference<T>)"
  fullName: "com.fasterxml.jackson.core.type.TypeReference<T>.compareTo(TypeReference<T> o)"
  name: "compareTo(TypeReference<T> o)"
  nameWithType: "TypeReference<T>.compareTo(TypeReference<T> o)"
  summary: "The only reason we define this method (and require implementation of `Comparable`) is to prevent constructing a reference without type information."
  parameters:
  - name: "o"
    type: "<xref href=\"com.fasterxml.jackson.core.type.TypeReference?alt=com.fasterxml.jackson.core.type.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public int compareTo(TypeReference<T> o)"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
