### YamlMime:JavaMember
uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionExists*"
fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionExists"
name: "getSubscriptionExists"
nameWithType: "ServiceBusAdministrationAsyncClient.getSubscriptionExists"
members:
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionExists(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionExists(String topicName, String subscriptionName)"
  name: "getSubscriptionExists(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getSubscriptionExists(String topicName, String subscriptionName)"
  summary: "Gets whether or not a subscription within a topic exists."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Boolean> getSubscriptionExists(String topicName, String subscriptionName)"
  returns:
    description: "A Mono that completes indicating whether or not the subscription exists."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.messaging.servicebus.administration"
artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.7
