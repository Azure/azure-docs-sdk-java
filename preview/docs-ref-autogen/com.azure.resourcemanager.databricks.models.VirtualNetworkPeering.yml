### YamlMime:JavaType
uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering"
fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering"
name: "VirtualNetworkPeering"
nameWithType: "VirtualNetworkPeering"
summary: "An immutable client-side representation of Virtual<wbr>Network<wbr>Peering."
syntax: "public interface VirtualNetworkPeering"
methods:
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.allowForwardedTraffic()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.allowForwardedTraffic()"
  name: "allowForwardedTraffic()"
  nameWithType: "VirtualNetworkPeering.allowForwardedTraffic()"
  summary: "Gets the allow<wbr>Forwarded<wbr>Traffic property: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean allowForwardedTraffic()"
  desc: "Gets the allowForwardedTraffic property: Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network."
  returns:
    description: "the allowForwardedTraffic value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.allowGatewayTransit()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.allowGatewayTransit()"
  name: "allowGatewayTransit()"
  nameWithType: "VirtualNetworkPeering.allowGatewayTransit()"
  summary: "Gets the allow<wbr>Gateway<wbr>Transit property: If gateway links can be used in remote virtual networking to link to this virtual network."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean allowGatewayTransit()"
  desc: "Gets the allowGatewayTransit property: If gateway links can be used in remote virtual networking to link to this virtual network."
  returns:
    description: "the allowGatewayTransit value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.allowVirtualNetworkAccess()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.allowVirtualNetworkAccess()"
  name: "allowVirtualNetworkAccess()"
  nameWithType: "VirtualNetworkPeering.allowVirtualNetworkAccess()"
  summary: "Gets the allow<wbr>Virtual<wbr>Network<wbr>Access property: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean allowVirtualNetworkAccess()"
  desc: "Gets the allowVirtualNetworkAccess property: Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space."
  returns:
    description: "the allowVirtualNetworkAccess value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.databricksAddressSpace()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.databricksAddressSpace()"
  name: "databricksAddressSpace()"
  nameWithType: "VirtualNetworkPeering.databricksAddressSpace()"
  summary: "Gets the databricks<wbr>Address<wbr>Space property: The reference to the databricks virtual network address space."
  modifiers:
  - "abstract"
  syntax: "public abstract AddressSpace databricksAddressSpace()"
  desc: "Gets the databricksAddressSpace property: The reference to the databricks virtual network address space."
  returns:
    description: "the databricksAddressSpace value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.AddressSpace?alt=com.azure.resourcemanager.databricks.models.AddressSpace&text=AddressSpace\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.databricksVirtualNetwork()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.databricksVirtualNetwork()"
  name: "databricksVirtualNetwork()"
  nameWithType: "VirtualNetworkPeering.databricksVirtualNetwork()"
  summary: "Gets the databricks<wbr>Virtual<wbr>Network property: The remote virtual network should be in the same region."
  modifiers:
  - "abstract"
  syntax: "public abstract VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork databricksVirtualNetwork()"
  desc: "Gets the databricksVirtualNetwork property: The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
  returns:
    description: "the databricksVirtualNetwork value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork&text=VirtualNetworkPeeringPropertiesFormatDatabricksVirtualNetwork\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.id()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.id()"
  name: "id()"
  nameWithType: "VirtualNetworkPeering.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.innerModel()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.innerModel()"
  name: "innerModel()"
  nameWithType: "VirtualNetworkPeering.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>databricks.<wbr>fluent.<wbr>models.<wbr>Virtual<wbr>Network<wbr>Peering<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract VirtualNetworkPeeringInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner?alt=com.azure.resourcemanager.databricks.fluent.models.VirtualNetworkPeeringInner&text=VirtualNetworkPeeringInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.name()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.name()"
  name: "name()"
  nameWithType: "VirtualNetworkPeering.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.peeringState()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.peeringState()"
  name: "peeringState()"
  nameWithType: "VirtualNetworkPeering.peeringState()"
  summary: "Gets the peering<wbr>State property: The status of the virtual network peering."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringState peeringState()"
  desc: "Gets the peeringState property: The status of the virtual network peering."
  returns:
    description: "the peeringState value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.PeeringState?alt=com.azure.resourcemanager.databricks.models.PeeringState&text=PeeringState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.provisioningState()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.provisioningState()"
  name: "provisioningState()"
  nameWithType: "VirtualNetworkPeering.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: The provisioning state of the virtual network peering resource."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: The provisioning state of the virtual network peering resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.PeeringProvisioningState?alt=com.azure.resourcemanager.databricks.models.PeeringProvisioningState&text=PeeringProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.refresh()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.refresh()"
  name: "refresh()"
  nameWithType: "VirtualNetworkPeering.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract VirtualNetworkPeering refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeering?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeering&text=VirtualNetworkPeering\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "VirtualNetworkPeering.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract VirtualNetworkPeering refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeering?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeering&text=VirtualNetworkPeering\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.remoteAddressSpace()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.remoteAddressSpace()"
  name: "remoteAddressSpace()"
  nameWithType: "VirtualNetworkPeering.remoteAddressSpace()"
  summary: "Gets the remote<wbr>Address<wbr>Space property: The reference to the remote virtual network address space."
  modifiers:
  - "abstract"
  syntax: "public abstract AddressSpace remoteAddressSpace()"
  desc: "Gets the remoteAddressSpace property: The reference to the remote virtual network address space."
  returns:
    description: "the remoteAddressSpace value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.AddressSpace?alt=com.azure.resourcemanager.databricks.models.AddressSpace&text=AddressSpace\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.remoteVirtualNetwork()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.remoteVirtualNetwork()"
  name: "remoteVirtualNetwork()"
  nameWithType: "VirtualNetworkPeering.remoteVirtualNetwork()"
  summary: "Gets the remote<wbr>Virtual<wbr>Network property: The remote virtual network should be in the same region."
  modifiers:
  - "abstract"
  syntax: "public abstract VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork remoteVirtualNetwork()"
  desc: "Gets the remoteVirtualNetwork property: The remote virtual network should be in the same region. See here to learn more (https://docs.microsoft.com/en-us/azure/databricks/administration-guide/cloud-configurations/azure/vnet-peering)."
  returns:
    description: "the remoteVirtualNetwork value."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork&text=VirtualNetworkPeeringPropertiesFormatRemoteVirtualNetwork\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.type()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.type()"
  name: "type()"
  nameWithType: "VirtualNetworkPeering.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.update()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.update()"
  name: "update()"
  nameWithType: "VirtualNetworkPeering.update()"
  summary: "Begins update for the Virtual<wbr>Network<wbr>Peering resource."
  modifiers:
  - "abstract"
  syntax: "public abstract VirtualNetworkPeering.Update update()"
  desc: "Begins update for the VirtualNetworkPeering resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.Update?alt=com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.useRemoteGateways()"
  fullName: "com.azure.resourcemanager.databricks.models.VirtualNetworkPeering.useRemoteGateways()"
  name: "useRemoteGateways()"
  nameWithType: "VirtualNetworkPeering.useRemoteGateways()"
  summary: "Gets the use<wbr>Remote<wbr>Gateways property: If remote gateways can be used on this virtual network."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean useRemoteGateways()"
  desc: "Gets the useRemoteGateways property: If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
  returns:
    description: "the useRemoteGateways value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of VirtualNetworkPeering."
metadata: {}
package: "com.azure.resourcemanager.databricks.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-databricks:1.0.0-beta.2
