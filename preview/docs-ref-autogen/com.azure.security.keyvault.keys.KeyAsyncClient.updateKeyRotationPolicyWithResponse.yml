### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyAsyncClient.updateKeyRotationPolicyWithResponse*"
fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.updateKeyRotationPolicyWithResponse"
name: "updateKeyRotationPolicyWithResponse"
nameWithType: "KeyAsyncClient.updateKeyRotationPolicyWithResponse"
members:
- uid: "com.azure.security.keyvault.keys.KeyAsyncClient.updateKeyRotationPolicyWithResponse(java.lang.String,com.azure.security.keyvault.keys.models.KeyRotationPolicyProperties)"
  fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.updateKeyRotationPolicyWithResponse(String name, KeyRotationPolicyProperties keyRotationPolicyProperties)"
  name: "updateKeyRotationPolicyWithResponse(String name, KeyRotationPolicyProperties keyRotationPolicyProperties)"
  nameWithType: "KeyAsyncClient.updateKeyRotationPolicyWithResponse(String name, KeyRotationPolicyProperties keyRotationPolicyProperties)"
  summary: "Updates the <xref uid=\"com.azure.security.keyvault.keys.models.KeyRotationPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyRotationPolicy\"></xref> of the key with the provided name. This operation requires the `keys/update` permission.\n\n**Code Samples**\n\nUpdates the <xref uid=\"com.azure.security.keyvault.keys.models.KeyRotationPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"rotation policy\"></xref> of a given <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>. Subscribes to the call asynchronously and prints out the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP Response\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.KeyRotationPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"rotation policy key\"></xref> details when a response has been received.\n\n```java\nList<KeyRotationLifetimeAction> myLifetimeActions = new ArrayList<>();\n KeyRotationLifetimeAction myRotateLifetimeAction = new KeyRotationLifetimeAction(KeyRotationPolicyAction.ROTATE)\n     .setTimeAfterCreate(\"P90D\");\n KeyRotationLifetimeAction myNotifyLifetimeAction = new KeyRotationLifetimeAction(KeyRotationPolicyAction.NOTIFY)\n     .setTimeBeforeExpiry(\"P45D\");\n\n myLifetimeActions.add(myRotateLifetimeAction);\n myLifetimeActions.add(myNotifyLifetimeAction);\n\n KeyRotationPolicyProperties myPolicyProperties = new KeyRotationPolicyProperties()\n     .setLifetimeActions(myLifetimeActions)\n     .setExpiryTime(\"P6M\");\n\n keyAsyncClient.updateKeyRotationPolicyWithResponse(\"keyName\", myPolicyProperties)\n     .subscribe(updateKeyRotationPolicyResponse ->\n         System.out.printf(\"Response received successfully with status code: %d. Updated key rotation policy\"\n             + \"with id: %s%n\", updateKeyRotationPolicyResponse.getStatusCode(),\n             updateKeyRotationPolicyResponse.getValue().getId()));\n```"
  parameters:
  - description: "The name of the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The <xref uid=\"com.azure.security.keyvault.keys.models.KeyRotationPolicyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyRotationPolicyProperties\"></xref> for the key."
    name: "keyRotationPolicyProperties"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyRotationPolicyProperties?alt=com.azure.security.keyvault.keys.models.KeyRotationPolicyProperties&text=KeyRotationPolicyProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<KeyRotationPolicy>> updateKeyRotationPolicyWithResponse(String name, KeyRotationPolicyProperties keyRotationPolicyProperties)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HTTP response\"></xref> for this operation and the\n <xref uid=\"com.azure.security.keyvault.keys.models.KeyRotationPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"KeyRotationPolicy\"></xref> for the key."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyRotationPolicy?alt=com.azure.security.keyvault.keys.models.KeyRotationPolicy&text=KeyRotationPolicy\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.4.0-beta.5
