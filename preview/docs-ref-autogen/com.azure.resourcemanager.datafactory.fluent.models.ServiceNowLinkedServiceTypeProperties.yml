### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties"
name: "ServiceNowLinkedServiceTypeProperties"
nameWithType: "ServiceNowLinkedServiceTypeProperties"
summary: "ServiceNow server linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServiceNowLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.ServiceNowLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.ServiceNowLinkedServiceTypeProperties()"
  name: "ServiceNowLinkedServiceTypeProperties()"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.ServiceNowLinkedServiceTypeProperties()"
  syntax: "public ServiceNowLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.authenticationType()"
  name: "authenticationType()"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.authenticationType()"
  summary: "Get the authenticationType property: The authentication type to use."
  syntax: "public ServiceNowAuthenticationType authenticationType()"
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ServiceNowAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.ServiceNowAuthenticationType&text=ServiceNowAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.clientId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.clientId()"
  name: "clientId()"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.clientId()"
  summary: "Get the clientId property: The client id for OAuth2 authentication."
  syntax: "public Object clientId()"
  returns:
    description: "the clientId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.clientSecret()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.clientSecret()"
  name: "clientSecret()"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.clientSecret()"
  summary: "Get the clientSecret property: The client secret for OAuth2 authentication."
  syntax: "public SecretBase clientSecret()"
  returns:
    description: "the clientSecret value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  syntax: "public Object encryptedCredential()"
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.endpoint()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.endpoint()"
  name: "endpoint()"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.endpoint()"
  summary: "Get the endpoint property: The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)."
  syntax: "public Object endpoint()"
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.password()"
  summary: "Get the password property: The password corresponding to the user name for Basic and OAuth2 authentication."
  syntax: "public SecretBase password()"
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.useEncryptedEndpoints()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.useEncryptedEndpoints()"
  name: "useEncryptedEndpoints()"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.useEncryptedEndpoints()"
  summary: "Get the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  syntax: "public Object useEncryptedEndpoints()"
  returns:
    description: "the useEncryptedEndpoints value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.useHostVerification()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.useHostVerification()"
  name: "useHostVerification()"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.useHostVerification()"
  summary: "Get the useHostVerification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
  syntax: "public Object useHostVerification()"
  returns:
    description: "the useHostVerification value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.usePeerVerification()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.usePeerVerification()"
  name: "usePeerVerification()"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.usePeerVerification()"
  summary: "Get the usePeerVerification property: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
  syntax: "public Object usePeerVerification()"
  returns:
    description: "the usePeerVerification value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.username()"
  summary: "Get the username property: The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication."
  syntax: "public Object username()"
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withAuthenticationType(com.azure.resourcemanager.datafactory.models.ServiceNowAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withAuthenticationType(ServiceNowAuthenticationType authenticationType)"
  name: "withAuthenticationType(ServiceNowAuthenticationType authenticationType)"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.withAuthenticationType(ServiceNowAuthenticationType authenticationType)"
  summary: "Set the authenticationType property: The authentication type to use."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ServiceNowAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.ServiceNowAuthenticationType&text=ServiceNowAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceNowLinkedServiceTypeProperties withAuthenticationType(ServiceNowAuthenticationType authenticationType)"
  returns:
    description: "the ServiceNowLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties&text=ServiceNowLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withClientId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withClientId(Object clientId)"
  name: "withClientId(Object clientId)"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.withClientId(Object clientId)"
  summary: "Set the clientId property: The client id for OAuth2 authentication."
  parameters:
  - description: "the clientId value to set."
    name: "clientId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceNowLinkedServiceTypeProperties withClientId(Object clientId)"
  returns:
    description: "the ServiceNowLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties&text=ServiceNowLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withClientSecret(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withClientSecret(SecretBase clientSecret)"
  name: "withClientSecret(SecretBase clientSecret)"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.withClientSecret(SecretBase clientSecret)"
  summary: "Set the clientSecret property: The client secret for OAuth2 authentication."
  parameters:
  - description: "the clientSecret value to set."
    name: "clientSecret"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceNowLinkedServiceTypeProperties withClientSecret(SecretBase clientSecret)"
  returns:
    description: "the ServiceNowLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties&text=ServiceNowLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceNowLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  returns:
    description: "the ServiceNowLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties&text=ServiceNowLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withEndpoint(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withEndpoint(Object endpoint)"
  name: "withEndpoint(Object endpoint)"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.withEndpoint(Object endpoint)"
  summary: "Set the endpoint property: The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)."
  parameters:
  - description: "the endpoint value to set."
    name: "endpoint"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceNowLinkedServiceTypeProperties withEndpoint(Object endpoint)"
  returns:
    description: "the ServiceNowLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties&text=ServiceNowLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: The password corresponding to the user name for Basic and OAuth2 authentication."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceNowLinkedServiceTypeProperties withPassword(SecretBase password)"
  returns:
    description: "the ServiceNowLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties&text=ServiceNowLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withUseEncryptedEndpoints(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  name: "withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  summary: "Set the useEncryptedEndpoints property: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true."
  parameters:
  - description: "the useEncryptedEndpoints value to set."
    name: "useEncryptedEndpoints"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceNowLinkedServiceTypeProperties withUseEncryptedEndpoints(Object useEncryptedEndpoints)"
  returns:
    description: "the ServiceNowLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties&text=ServiceNowLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withUseHostVerification(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withUseHostVerification(Object useHostVerification)"
  name: "withUseHostVerification(Object useHostVerification)"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.withUseHostVerification(Object useHostVerification)"
  summary: "Set the useHostVerification property: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true."
  parameters:
  - description: "the useHostVerification value to set."
    name: "useHostVerification"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceNowLinkedServiceTypeProperties withUseHostVerification(Object useHostVerification)"
  returns:
    description: "the ServiceNowLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties&text=ServiceNowLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withUsePeerVerification(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withUsePeerVerification(Object usePeerVerification)"
  name: "withUsePeerVerification(Object usePeerVerification)"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.withUsePeerVerification(Object usePeerVerification)"
  summary: "Set the usePeerVerification property: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true."
  parameters:
  - description: "the usePeerVerification value to set."
    name: "usePeerVerification"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceNowLinkedServiceTypeProperties withUsePeerVerification(Object usePeerVerification)"
  returns:
    description: "the ServiceNowLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties&text=ServiceNowLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "ServiceNowLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceNowLinkedServiceTypeProperties withUsername(Object username)"
  returns:
    description: "the ServiceNowLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ServiceNowLinkedServiceTypeProperties&text=ServiceNowLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
