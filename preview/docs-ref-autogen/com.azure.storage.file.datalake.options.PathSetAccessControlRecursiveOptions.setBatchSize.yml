### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions.setBatchSize*"
fullName: "com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions.setBatchSize"
name: "setBatchSize"
nameWithType: "PathSetAccessControlRecursiveOptions.setBatchSize"
members:
- uid: "com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions.setBatchSize(java.lang.Integer)"
  fullName: "com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions.setBatchSize(Integer batchSize)"
  name: "setBatchSize(Integer batchSize)"
  nameWithType: "PathSetAccessControlRecursiveOptions.setBatchSize(Integer batchSize)"
  summary: "Sets the batch size.\n\nIf data set size exceeds batch size then operation will be split into multiple requests so that progress can be tracked. Batch size should be between 1 and 2000. The default when unspecified is 2000."
  parameters:
  - description: "The size of the batch."
    name: "batchSize"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathSetAccessControlRecursiveOptions setBatchSize(Integer batchSize)"
  returns:
    description: "The updated object."
    type: "<xref href=\"com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions?alt=com.azure.storage.file.datalake.options.PathSetAccessControlRecursiveOptions&text=PathSetAccessControlRecursiveOptions\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.options"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
