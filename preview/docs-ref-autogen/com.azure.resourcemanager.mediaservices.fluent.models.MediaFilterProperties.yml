### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties"
fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties"
name: "MediaFilterProperties"
nameWithType: "MediaFilterProperties"
summary: "The Media Filter properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class MediaFilterProperties"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.MediaFilterProperties()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.MediaFilterProperties()"
  name: "MediaFilterProperties()"
  nameWithType: "MediaFilterProperties.MediaFilterProperties()"
  syntax: "public MediaFilterProperties()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.firstQuality()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.firstQuality()"
  name: "firstQuality()"
  nameWithType: "MediaFilterProperties.firstQuality()"
  summary: "Get the first<wbr>Quality property: The first quality."
  syntax: "public FirstQuality firstQuality()"
  desc: "Get the firstQuality property: The first quality."
  returns:
    description: "the firstQuality value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.FirstQuality?alt=com.azure.resourcemanager.mediaservices.models.FirstQuality&text=FirstQuality\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.presentationTimeRange()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.presentationTimeRange()"
  name: "presentationTimeRange()"
  nameWithType: "MediaFilterProperties.presentationTimeRange()"
  summary: "Get the presentation<wbr>Time<wbr>Range property: The presentation time range."
  syntax: "public PresentationTimeRange presentationTimeRange()"
  desc: "Get the presentationTimeRange property: The presentation time range."
  returns:
    description: "the presentationTimeRange value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PresentationTimeRange?alt=com.azure.resourcemanager.mediaservices.models.PresentationTimeRange&text=PresentationTimeRange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.tracks()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.tracks()"
  name: "tracks()"
  nameWithType: "MediaFilterProperties.tracks()"
  summary: "Get the tracks property: The tracks selection conditions."
  syntax: "public List<FilterTrackSelection> tracks()"
  desc: "Get the tracks property: The tracks selection conditions."
  returns:
    description: "the tracks value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.FilterTrackSelection?alt=com.azure.resourcemanager.mediaservices.models.FilterTrackSelection&text=FilterTrackSelection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.validate()"
  name: "validate()"
  nameWithType: "MediaFilterProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.withFirstQuality(com.azure.resourcemanager.mediaservices.models.FirstQuality)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.withFirstQuality(FirstQuality firstQuality)"
  name: "withFirstQuality(FirstQuality firstQuality)"
  nameWithType: "MediaFilterProperties.withFirstQuality(FirstQuality firstQuality)"
  summary: "Set the first<wbr>Quality property: The first quality."
  parameters:
  - description: "the firstQuality value to set."
    name: "firstQuality"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.FirstQuality?alt=com.azure.resourcemanager.mediaservices.models.FirstQuality&text=FirstQuality\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MediaFilterProperties withFirstQuality(FirstQuality firstQuality)"
  desc: "Set the firstQuality property: The first quality."
  returns:
    description: "the MediaFilterProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties&text=MediaFilterProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.withPresentationTimeRange(com.azure.resourcemanager.mediaservices.models.PresentationTimeRange)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.withPresentationTimeRange(PresentationTimeRange presentationTimeRange)"
  name: "withPresentationTimeRange(PresentationTimeRange presentationTimeRange)"
  nameWithType: "MediaFilterProperties.withPresentationTimeRange(PresentationTimeRange presentationTimeRange)"
  summary: "Set the presentation<wbr>Time<wbr>Range property: The presentation time range."
  parameters:
  - description: "the presentationTimeRange value to set."
    name: "presentationTimeRange"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PresentationTimeRange?alt=com.azure.resourcemanager.mediaservices.models.PresentationTimeRange&text=PresentationTimeRange\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MediaFilterProperties withPresentationTimeRange(PresentationTimeRange presentationTimeRange)"
  desc: "Set the presentationTimeRange property: The presentation time range."
  returns:
    description: "the MediaFilterProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties&text=MediaFilterProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.withTracks(java.util.List<com.azure.resourcemanager.mediaservices.models.FilterTrackSelection>)"
  fullName: "com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties.withTracks(List<FilterTrackSelection> tracks)"
  name: "withTracks(List<FilterTrackSelection> tracks)"
  nameWithType: "MediaFilterProperties.withTracks(List<FilterTrackSelection> tracks)"
  summary: "Set the tracks property: The tracks selection conditions."
  parameters:
  - description: "the tracks value to set."
    name: "tracks"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.FilterTrackSelection?alt=com.azure.resourcemanager.mediaservices.models.FilterTrackSelection&text=FilterTrackSelection\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MediaFilterProperties withTracks(List<FilterTrackSelection> tracks)"
  desc: "Set the tracks property: The tracks selection conditions."
  returns:
    description: "the MediaFilterProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties?alt=com.azure.resourcemanager.mediaservices.fluent.models.MediaFilterProperties&text=MediaFilterProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The Media Filter properties."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0-beta.1
