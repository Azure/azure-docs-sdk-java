### YamlMime:JavaType
uid: "com.azure.resourcemanager.dataprotection.models.BackupPolicy"
fullName: "com.azure.resourcemanager.dataprotection.models.BackupPolicy"
name: "BackupPolicy"
nameWithType: "BackupPolicy"
summary: "Backup<wbr>Policy Rule based backup policy."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.dataprotection.models.BaseBackupPolicy?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.dataprotection.models.BaseBackupPolicy.datasourceTypes()"
- "com.azure.resourcemanager.dataprotection.models.BaseBackupPolicy.validate()"
- "com.azure.resourcemanager.dataprotection.models.BaseBackupPolicy.withDatasourceTypes(java.util.List<java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BackupPolicy extends BaseBackupPolicy"
constructors:
- uid: "com.azure.resourcemanager.dataprotection.models.BackupPolicy.BackupPolicy()"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupPolicy.BackupPolicy()"
  name: "BackupPolicy()"
  nameWithType: "BackupPolicy.BackupPolicy()"
  syntax: "public BackupPolicy()"
methods:
- uid: "com.azure.resourcemanager.dataprotection.models.BackupPolicy.policyRules()"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupPolicy.policyRules()"
  name: "policyRules()"
  nameWithType: "BackupPolicy.policyRules()"
  summary: "Get the policy<wbr>Rules property: Policy rule dictionary that contains rules for each backuptype i.<wbr>e Full/Incremental/Logs etc."
  syntax: "public List<BasePolicyRule> policyRules()"
  desc: "Get the policyRules property: Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc."
  returns:
    description: "the policyRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dataprotection.models.BasePolicyRule?alt=com.azure.resourcemanager.dataprotection.models.BasePolicyRule&text=BasePolicyRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupPolicy.validate()"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupPolicy.validate()"
  name: "validate()"
  nameWithType: "BackupPolicy.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.dataprotection.models.BaseBackupPolicy.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.dataprotection.models.BackupPolicy.withDatasourceTypes(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupPolicy.withDatasourceTypes(List<String> datasourceTypes)"
  name: "withDatasourceTypes(List<String> datasourceTypes)"
  nameWithType: "BackupPolicy.withDatasourceTypes(List<String> datasourceTypes)"
  summary: "Set the datasource<wbr>Types property: Type of datasource for the backup management."
  overridden: "com.azure.resourcemanager.dataprotection.models.BaseBackupPolicy.withDatasourceTypes(java.util.List<java.lang.String>)"
  parameters:
  - name: "datasourceTypes"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BackupPolicy withDatasourceTypes(List<String> datasourceTypes)"
  desc: "Set the datasourceTypes property: Type of datasource for the backup management."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupPolicy?alt=com.azure.resourcemanager.dataprotection.models.BackupPolicy&text=BackupPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dataprotection.models.BackupPolicy.withPolicyRules(java.util.List<com.azure.resourcemanager.dataprotection.models.BasePolicyRule>)"
  fullName: "com.azure.resourcemanager.dataprotection.models.BackupPolicy.withPolicyRules(List<BasePolicyRule> policyRules)"
  name: "withPolicyRules(List<BasePolicyRule> policyRules)"
  nameWithType: "BackupPolicy.withPolicyRules(List<BasePolicyRule> policyRules)"
  summary: "Set the policy<wbr>Rules property: Policy rule dictionary that contains rules for each backuptype i.<wbr>e Full/Incremental/Logs etc."
  parameters:
  - description: "the policyRules value to set."
    name: "policyRules"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dataprotection.models.BasePolicyRule?alt=com.azure.resourcemanager.dataprotection.models.BasePolicyRule&text=BasePolicyRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BackupPolicy withPolicyRules(List<BasePolicyRule> policyRules)"
  desc: "Set the policyRules property: Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc."
  returns:
    description: "the BackupPolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.dataprotection.models.BackupPolicy?alt=com.azure.resourcemanager.dataprotection.models.BackupPolicy&text=BackupPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "BackupPolicy Rule based backup policy."
metadata: {}
package: "com.azure.resourcemanager.dataprotection.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-dataprotection:1.0.0-beta.1
