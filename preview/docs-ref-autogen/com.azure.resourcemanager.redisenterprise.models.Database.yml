### YamlMime:JavaType
uid: "com.azure.resourcemanager.redisenterprise.models.Database"
fullName: "com.azure.resourcemanager.redisenterprise.models.Database"
name: "Database"
nameWithType: "Database"
summary: "An immutable client-side representation of Database."
syntax: "public interface Database"
methods:
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.clientProtocol()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.clientProtocol()"
  name: "clientProtocol()"
  nameWithType: "Database.clientProtocol()"
  summary: "Gets the clientProtocol property: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted."
  modifiers:
  - "abstract"
  syntax: "public abstract Protocol clientProtocol()"
  returns:
    description: "the clientProtocol value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.Protocol?alt=com.azure.resourcemanager.redisenterprise.models.Protocol&text=Protocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.clusteringPolicy()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.clusteringPolicy()"
  name: "clusteringPolicy()"
  nameWithType: "Database.clusteringPolicy()"
  summary: "Gets the clusteringPolicy property: Clustering policy - default is OSSCluster. Specified at create time."
  modifiers:
  - "abstract"
  syntax: "public abstract ClusteringPolicy clusteringPolicy()"
  returns:
    description: "the clusteringPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ClusteringPolicy?alt=com.azure.resourcemanager.redisenterprise.models.ClusteringPolicy&text=ClusteringPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.evictionPolicy()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.evictionPolicy()"
  name: "evictionPolicy()"
  nameWithType: "Database.evictionPolicy()"
  summary: "Gets the evictionPolicy property: Redis eviction policy - default is VolatileLRU."
  modifiers:
  - "abstract"
  syntax: "public abstract EvictionPolicy evictionPolicy()"
  returns:
    description: "the evictionPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.EvictionPolicy?alt=com.azure.resourcemanager.redisenterprise.models.EvictionPolicy&text=EvictionPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.export(com.azure.resourcemanager.redisenterprise.models.ExportClusterParameters)"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.export(ExportClusterParameters parameters)"
  name: "export(ExportClusterParameters parameters)"
  nameWithType: "Database.export(ExportClusterParameters parameters)"
  summary: "Exports a database file from target database."
  modifiers:
  - "abstract"
  parameters:
  - description: "Storage information for exporting into the cluster."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ExportClusterParameters?alt=com.azure.resourcemanager.redisenterprise.models.ExportClusterParameters&text=ExportClusterParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void export(ExportClusterParameters parameters)"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.export(com.azure.resourcemanager.redisenterprise.models.ExportClusterParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.export(ExportClusterParameters parameters, Context context)"
  name: "export(ExportClusterParameters parameters, Context context)"
  nameWithType: "Database.export(ExportClusterParameters parameters, Context context)"
  summary: "Exports a database file from target database."
  modifiers:
  - "abstract"
  parameters:
  - description: "Storage information for exporting into the cluster."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ExportClusterParameters?alt=com.azure.resourcemanager.redisenterprise.models.ExportClusterParameters&text=ExportClusterParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void export(ExportClusterParameters parameters, Context context)"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.forceUnlink(com.azure.resourcemanager.redisenterprise.models.ForceUnlinkParameters)"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.forceUnlink(ForceUnlinkParameters parameters)"
  name: "forceUnlink(ForceUnlinkParameters parameters)"
  nameWithType: "Database.forceUnlink(ForceUnlinkParameters parameters)"
  summary: "Forcibly removes the link to the specified database resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Information identifying the database to be unlinked."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ForceUnlinkParameters?alt=com.azure.resourcemanager.redisenterprise.models.ForceUnlinkParameters&text=ForceUnlinkParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void forceUnlink(ForceUnlinkParameters parameters)"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.forceUnlink(com.azure.resourcemanager.redisenterprise.models.ForceUnlinkParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.forceUnlink(ForceUnlinkParameters parameters, Context context)"
  name: "forceUnlink(ForceUnlinkParameters parameters, Context context)"
  nameWithType: "Database.forceUnlink(ForceUnlinkParameters parameters, Context context)"
  summary: "Forcibly removes the link to the specified database resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Information identifying the database to be unlinked."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ForceUnlinkParameters?alt=com.azure.resourcemanager.redisenterprise.models.ForceUnlinkParameters&text=ForceUnlinkParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void forceUnlink(ForceUnlinkParameters parameters, Context context)"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.geoReplication()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.geoReplication()"
  name: "geoReplication()"
  nameWithType: "Database.geoReplication()"
  summary: "Gets the geoReplication property: Optional set of properties to configure geo replication for this database."
  modifiers:
  - "abstract"
  syntax: "public abstract DatabasePropertiesGeoReplication geoReplication()"
  returns:
    description: "the geoReplication value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabasePropertiesGeoReplication?alt=com.azure.resourcemanager.redisenterprise.models.DatabasePropertiesGeoReplication&text=DatabasePropertiesGeoReplication\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.id()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.id()"
  name: "id()"
  nameWithType: "Database.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.importMethod(com.azure.resourcemanager.redisenterprise.models.ImportClusterParameters)"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.importMethod(ImportClusterParameters parameters)"
  name: "importMethod(ImportClusterParameters parameters)"
  nameWithType: "Database.importMethod(ImportClusterParameters parameters)"
  summary: "Imports database files to target database."
  modifiers:
  - "abstract"
  parameters:
  - description: "Storage information for importing into the cluster."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ImportClusterParameters?alt=com.azure.resourcemanager.redisenterprise.models.ImportClusterParameters&text=ImportClusterParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void importMethod(ImportClusterParameters parameters)"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.importMethod(com.azure.resourcemanager.redisenterprise.models.ImportClusterParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.importMethod(ImportClusterParameters parameters, Context context)"
  name: "importMethod(ImportClusterParameters parameters, Context context)"
  nameWithType: "Database.importMethod(ImportClusterParameters parameters, Context context)"
  summary: "Imports database files to target database."
  modifiers:
  - "abstract"
  parameters:
  - description: "Storage information for importing into the cluster."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ImportClusterParameters?alt=com.azure.resourcemanager.redisenterprise.models.ImportClusterParameters&text=ImportClusterParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void importMethod(ImportClusterParameters parameters, Context context)"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.innerModel()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.innerModel()"
  name: "innerModel()"
  nameWithType: "Database.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract DatabaseInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseInner?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseInner&text=DatabaseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.listKeys()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.listKeys()"
  name: "listKeys()"
  nameWithType: "Database.listKeys()"
  summary: "Retrieves the access keys for the RedisEnterprise database."
  modifiers:
  - "abstract"
  syntax: "public abstract AccessKeys listKeys()"
  returns:
    description: "access keys."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.AccessKeys?alt=com.azure.resourcemanager.redisenterprise.models.AccessKeys&text=AccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.listKeysWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.listKeysWithResponse(Context context)"
  name: "listKeysWithResponse(Context context)"
  nameWithType: "Database.listKeysWithResponse(Context context)"
  summary: "Retrieves the access keys for the RedisEnterprise database."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AccessKeys> listKeysWithResponse(Context context)"
  returns:
    description: "access keys along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redisenterprise.models.AccessKeys?alt=com.azure.resourcemanager.redisenterprise.models.AccessKeys&text=AccessKeys\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.modules()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.modules()"
  name: "modules()"
  nameWithType: "Database.modules()"
  summary: "Gets the modules property: Optional set of redis modules to enable in this database - modules can only be added at creation time."
  modifiers:
  - "abstract"
  syntax: "public abstract List<Module> modules()"
  returns:
    description: "the modules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redisenterprise.models.Module?alt=com.azure.resourcemanager.redisenterprise.models.Module&text=Module\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.name()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.name()"
  name: "name()"
  nameWithType: "Database.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.persistence()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.persistence()"
  name: "persistence()"
  nameWithType: "Database.persistence()"
  summary: "Gets the persistence property: Persistence settings."
  modifiers:
  - "abstract"
  syntax: "public abstract Persistence persistence()"
  returns:
    description: "the persistence value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.Persistence?alt=com.azure.resourcemanager.redisenterprise.models.Persistence&text=Persistence\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.port()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.port()"
  name: "port()"
  nameWithType: "Database.port()"
  summary: "Gets the port property: TCP port of the database endpoint. Specified at create time. Defaults to an available port."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer port()"
  returns:
    description: "the port value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.provisioningState()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.provisioningState()"
  name: "provisioningState()"
  nameWithType: "Database.provisioningState()"
  summary: "Gets the provisioningState property: Current provisioning status of the database."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ProvisioningState?alt=com.azure.resourcemanager.redisenterprise.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.refresh()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.refresh()"
  name: "refresh()"
  nameWithType: "Database.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract Database refresh()"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.Database?alt=com.azure.resourcemanager.redisenterprise.models.Database&text=Database\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "Database.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Database refresh(Context context)"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.Database?alt=com.azure.resourcemanager.redisenterprise.models.Database&text=Database\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.regenerateKey(com.azure.resourcemanager.redisenterprise.models.RegenerateKeyParameters)"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.regenerateKey(RegenerateKeyParameters parameters)"
  name: "regenerateKey(RegenerateKeyParameters parameters)"
  nameWithType: "Database.regenerateKey(RegenerateKeyParameters parameters)"
  summary: "Regenerates the RedisEnterprise database's access keys."
  modifiers:
  - "abstract"
  parameters:
  - description: "Specifies which key to regenerate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.RegenerateKeyParameters?alt=com.azure.resourcemanager.redisenterprise.models.RegenerateKeyParameters&text=RegenerateKeyParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AccessKeys regenerateKey(RegenerateKeyParameters parameters)"
  returns:
    description: "access keys."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.AccessKeys?alt=com.azure.resourcemanager.redisenterprise.models.AccessKeys&text=AccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.regenerateKey(com.azure.resourcemanager.redisenterprise.models.RegenerateKeyParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.regenerateKey(RegenerateKeyParameters parameters, Context context)"
  name: "regenerateKey(RegenerateKeyParameters parameters, Context context)"
  nameWithType: "Database.regenerateKey(RegenerateKeyParameters parameters, Context context)"
  summary: "Regenerates the RedisEnterprise database's access keys."
  modifiers:
  - "abstract"
  parameters:
  - description: "Specifies which key to regenerate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.RegenerateKeyParameters?alt=com.azure.resourcemanager.redisenterprise.models.RegenerateKeyParameters&text=RegenerateKeyParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AccessKeys regenerateKey(RegenerateKeyParameters parameters, Context context)"
  returns:
    description: "access keys."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.AccessKeys?alt=com.azure.resourcemanager.redisenterprise.models.AccessKeys&text=AccessKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.resourceState()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.resourceState()"
  name: "resourceState()"
  nameWithType: "Database.resourceState()"
  summary: "Gets the resourceState property: Current resource status of the database."
  modifiers:
  - "abstract"
  syntax: "public abstract ResourceState resourceState()"
  returns:
    description: "the resourceState value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ResourceState?alt=com.azure.resourcemanager.redisenterprise.models.ResourceState&text=ResourceState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.type()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.type()"
  name: "type()"
  nameWithType: "Database.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.models.Database.update()"
  fullName: "com.azure.resourcemanager.redisenterprise.models.Database.update()"
  name: "update()"
  nameWithType: "Database.update()"
  summary: "Begins update for the Database resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Database.Update update()"
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.Database.Update?alt=com.azure.resourcemanager.redisenterprise.models.Database.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.redisenterprise.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-redisenterprise:1.1.0-beta.1
