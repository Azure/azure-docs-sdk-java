### YamlMime:JavaType
uid: "com.azure.communication.callautomation.CallRecordingAsync"
fullName: "com.azure.communication.callautomation.CallRecordingAsync"
name: "CallRecordingAsync"
nameWithType: "CallRecordingAsync"
summary: "Call<wbr>Recording<wbr>Async."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **CallRecordingAsync**"
methods:
- uid: "com.azure.communication.callautomation.CallRecordingAsync.delete(java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.delete(String deleteUrl)"
  name: "delete(String deleteUrl)"
  nameWithType: "CallRecordingAsync.delete(String deleteUrl)"
  summary: "Delete the content located at the delete<wbr>Url"
  parameters:
  - description: "- ACS URL where the content is located."
    name: "deleteUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> delete(String deleteUrl)"
  desc: "Delete the content located at the deleteUrl"
  returns:
    description: "Response for successful delete request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.deleteWithResponse(java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.deleteWithResponse(String deleteUrl)"
  name: "deleteWithResponse(String deleteUrl)"
  nameWithType: "CallRecordingAsync.deleteWithResponse(String deleteUrl)"
  summary: "Delete the content located at the delete<wbr>Url Recording deletion will be done using parallel workers."
  parameters:
  - description: "- ACS URL where the content is located."
    name: "deleteUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> deleteWithResponse(String deleteUrl)"
  desc: "Delete the content located at the deleteUrl Recording deletion will be done using parallel workers."
  returns:
    description: "Response for successful delete request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.downloadContent(java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.downloadContent(String sourceUrl)"
  name: "downloadContent(String sourceUrl)"
  nameWithType: "CallRecordingAsync.downloadContent(String sourceUrl)"
  summary: "Reads the entire content."
  parameters:
  - description: "- URL where the content is located."
    name: "sourceUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<BinaryData> downloadContent(String sourceUrl)"
  desc: "Reads the entire content.\n\n**Code Samples**\n\nThis method supports downloads up to 2GB of data. Use <xref uid=\"com.azure.communication.callautomation.CallRecordingAsync.downloadStream(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#downloadStream(String)\"></xref> ()\\} to download larger blobs."
  returns:
    description: "A reactive response containing the content data."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.downloadContentWithResponse(java.lang.String,com.azure.core.http.HttpRange)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.downloadContentWithResponse(String sourceUrl, HttpRange range)"
  name: "downloadContentWithResponse(String sourceUrl, HttpRange range)"
  nameWithType: "CallRecordingAsync.downloadContentWithResponse(String sourceUrl, HttpRange range)"
  summary: "Reads a range of bytes from a content."
  parameters:
  - description: "- URL where the content is located."
    name: "sourceUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- An optional <xref uid=\"com.azure.core.http.HttpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRange\"></xref> value containing the range of bytes to download. If missing,\n                  the whole content will be downloaded."
    name: "range"
    type: "<xref href=\"com.azure.core.http.HttpRange?alt=com.azure.core.http.HttpRange&text=HttpRange\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> downloadContentWithResponse(String sourceUrl, HttpRange range)"
  desc: "Reads a range of bytes from a content.\n\nThis method supports downloads up to 2GB of data. Use <xref uid=\"com.azure.communication.callautomation.CallRecordingAsync.downloadStreamWithResponse(java.lang.String,com.azure.core.http.HttpRange)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#downloadStreamWithResponse(String, HttpRange)\"></xref> to download larger blobs."
  returns:
    description: "A reactive response containing the blob data."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.downloadStream(java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.downloadStream(String sourceUrl)"
  name: "downloadStream(String sourceUrl)"
  nameWithType: "CallRecordingAsync.downloadStream(String sourceUrl)"
  summary: "Download the recording content, e.<wbr>g."
  parameters:
  - description: "- URL where the content is located."
    name: "sourceUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Flux<ByteBuffer> downloadStream(String sourceUrl)"
  desc: "Download the recording content, e.g. Recording's metadata, Recording video, from the ACS endpoint passed as parameter."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> object containing the byte stream of the content requested."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.downloadStreamWithResponse(java.lang.String,com.azure.core.http.HttpRange)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.downloadStreamWithResponse(String sourceUrl, HttpRange range)"
  name: "downloadStreamWithResponse(String sourceUrl, HttpRange range)"
  nameWithType: "CallRecordingAsync.downloadStreamWithResponse(String sourceUrl, HttpRange range)"
  summary: "Download the recording content, (e.<wbr>g."
  parameters:
  - description: "- URL where the content is located."
    name: "sourceUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- An optional <xref uid=\"com.azure.core.http.HttpRange\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRange\"></xref> value containing the range of bytes to download. If missing,\n                  the whole content will be downloaded."
    name: "range"
    type: "<xref href=\"com.azure.core.http.HttpRange?alt=com.azure.core.http.HttpRange&text=HttpRange\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Flux<ByteBuffer>>> downloadStreamWithResponse(String sourceUrl, HttpRange range)"
  desc: "Download the recording content, (e.g. Recording's metadata, Recording video, etc.) from the `endpoint`."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> object containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> with the byte stream of the content requested."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.downloadTo(java.lang.String,java.nio.file.Path)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.downloadTo(String sourceUrl, Path destinationPath)"
  name: "downloadTo(String sourceUrl, Path destinationPath)"
  nameWithType: "CallRecordingAsync.downloadTo(String sourceUrl, Path destinationPath)"
  summary: "Download the content located in `endpoint` into a file marked by `path`."
  parameters:
  - description: "- ACS URL where the content is located."
    name: "sourceUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- File location."
    name: "destinationPath"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html\">Path</a>"
  syntax: "public Mono<Void> downloadTo(String sourceUrl, Path destinationPath)"
  desc: "Download the content located in `endpoint` into a file marked by `path`. This download will be done using parallel workers."
  returns:
    description: "Response for a successful downloadTo request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.downloadTo(java.lang.String,java.nio.file.Path,com.azure.communication.callautomation.models.DownloadToFileOptions)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.downloadTo(String sourceUrl, Path destinationPath, DownloadToFileOptions options)"
  name: "downloadTo(String sourceUrl, Path destinationPath, DownloadToFileOptions options)"
  nameWithType: "CallRecordingAsync.downloadTo(String sourceUrl, Path destinationPath, DownloadToFileOptions options)"
  summary: "Download the content located in `endpoint` into a file marked by `path`."
  parameters:
  - description: "- ACS URL where the content is located."
    name: "sourceUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- File location."
    name: "destinationPath"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html\">Path</a>"
  - description: "- an optional <xref uid=\"com.azure.communication.callautomation.models.DownloadToFileOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DownloadToFileOptions\"></xref> object to modify how the\n                download will work."
    name: "options"
    type: "<xref href=\"com.azure.communication.callautomation.models.DownloadToFileOptions?alt=com.azure.communication.callautomation.models.DownloadToFileOptions&text=DownloadToFileOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> downloadTo(String sourceUrl, Path destinationPath, DownloadToFileOptions options)"
  desc: "Download the content located in `endpoint` into a file marked by `path`. This download will be done using parallel workers."
  returns:
    description: "Response containing the http response information from the download."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.getState(java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.getState(String recordingId)"
  name: "getState(String recordingId)"
  nameWithType: "CallRecordingAsync.getState(String recordingId)"
  summary: "Get current recording state by recording id."
  parameters:
  - description: "Recording id to stop."
    name: "recordingId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<RecordingStateResult> getState(String recordingId)"
  desc: "Get current recording state by recording id."
  returns:
    description: "Response for a successful get recording state request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.communication.callautomation.models.RecordingStateResult?alt=com.azure.communication.callautomation.models.RecordingStateResult&text=RecordingStateResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.getStateWithResponse(java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.getStateWithResponse(String recordingId)"
  name: "getStateWithResponse(String recordingId)"
  nameWithType: "CallRecordingAsync.getStateWithResponse(String recordingId)"
  summary: "Get current recording state by recording id."
  parameters:
  - description: "Recording id to stop."
    name: "recordingId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<RecordingStateResult>> getStateWithResponse(String recordingId)"
  desc: "Get current recording state by recording id."
  returns:
    description: "Response for a successful get recording state request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callautomation.models.RecordingStateResult?alt=com.azure.communication.callautomation.models.RecordingStateResult&text=RecordingStateResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.pause(java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.pause(String recordingId)"
  name: "pause(String recordingId)"
  nameWithType: "CallRecordingAsync.pause(String recordingId)"
  summary: "Pause recording of the call."
  parameters:
  - description: "Recording id to stop."
    name: "recordingId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> pause(String recordingId)"
  desc: "Pause recording of the call."
  returns:
    description: "Response for a successful pause recording request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.pauseWithResponse(java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.pauseWithResponse(String recordingId)"
  name: "pauseWithResponse(String recordingId)"
  nameWithType: "CallRecordingAsync.pauseWithResponse(String recordingId)"
  summary: "Pause recording of the call."
  parameters:
  - description: "Recording id to stop."
    name: "recordingId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> pauseWithResponse(String recordingId)"
  desc: "Pause recording of the call."
  returns:
    description: "Response for a successful pause recording request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.resume(java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.resume(String recordingId)"
  name: "resume(String recordingId)"
  nameWithType: "CallRecordingAsync.resume(String recordingId)"
  summary: "Resume recording of the call."
  parameters:
  - description: "Recording id to stop."
    name: "recordingId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> resume(String recordingId)"
  desc: "Resume recording of the call."
  returns:
    description: "response for a successful resume recording request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.resumeWithResponse(java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.resumeWithResponse(String recordingId)"
  name: "resumeWithResponse(String recordingId)"
  nameWithType: "CallRecordingAsync.resumeWithResponse(String recordingId)"
  summary: "Resume recording of the call."
  parameters:
  - description: "Recording id to stop."
    name: "recordingId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> resumeWithResponse(String recordingId)"
  desc: "Resume recording of the call."
  returns:
    description: "response for a successful resume recording request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.start(com.azure.communication.callautomation.models.StartRecordingOptions)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.start(StartRecordingOptions options)"
  name: "start(StartRecordingOptions options)"
  nameWithType: "CallRecordingAsync.start(StartRecordingOptions options)"
  summary: "Start recording of the call."
  parameters:
  - description: "A <xref uid=\"com.azure.communication.callautomation.models.StartRecordingOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StartRecordingOptions\"></xref> object containing different options for recording."
    name: "options"
    type: "<xref href=\"com.azure.communication.callautomation.models.StartRecordingOptions?alt=com.azure.communication.callautomation.models.StartRecordingOptions&text=StartRecordingOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<RecordingStateResult> start(StartRecordingOptions options)"
  desc: "Start recording of the call."
  returns:
    description: "Response for a successful start recording request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.communication.callautomation.models.RecordingStateResult?alt=com.azure.communication.callautomation.models.RecordingStateResult&text=RecordingStateResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.startWithResponse(com.azure.communication.callautomation.models.StartRecordingOptions)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.startWithResponse(StartRecordingOptions options)"
  name: "startWithResponse(StartRecordingOptions options)"
  nameWithType: "CallRecordingAsync.startWithResponse(StartRecordingOptions options)"
  summary: "Start recording of the call."
  parameters:
  - description: "A <xref uid=\"com.azure.communication.callautomation.models.StartRecordingOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StartRecordingOptions\"></xref> object containing different options for recording."
    name: "options"
    type: "<xref href=\"com.azure.communication.callautomation.models.StartRecordingOptions?alt=com.azure.communication.callautomation.models.StartRecordingOptions&text=StartRecordingOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<RecordingStateResult>> startWithResponse(StartRecordingOptions options)"
  desc: "Start recording of the call."
  returns:
    description: "Response for a successful start recording request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.communication.callautomation.models.RecordingStateResult?alt=com.azure.communication.callautomation.models.RecordingStateResult&text=RecordingStateResult\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.stop(java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.stop(String recordingId)"
  name: "stop(String recordingId)"
  nameWithType: "CallRecordingAsync.stop(String recordingId)"
  summary: "Stop recording of the call."
  parameters:
  - description: "Recording id to stop."
    name: "recordingId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> stop(String recordingId)"
  desc: "Stop recording of the call."
  returns:
    description: "Response for a successful stop recording request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.communication.callautomation.CallRecordingAsync.stopWithResponse(java.lang.String)"
  fullName: "com.azure.communication.callautomation.CallRecordingAsync.stopWithResponse(String recordingId)"
  name: "stopWithResponse(String recordingId)"
  nameWithType: "CallRecordingAsync.stopWithResponse(String recordingId)"
  summary: "Stop recording of the call."
  parameters:
  - description: "Recording id to stop."
    name: "recordingId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> stopWithResponse(String recordingId)"
  desc: "Stop recording of the call."
  returns:
    description: "Response for a successful stop recording request."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
type: "class"
desc: "CallRecordingAsync."
metadata: {}
package: "com.azure.communication.callautomation"
artifact: com.azure:azure-communication-callautomation:1.1.0-beta.1
