### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.createHookWithResponse*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.createHookWithResponse"
name: "createHookWithResponse"
nameWithType: "MetricsAdvisorAdministrationClient.createHookWithResponse"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.createHookWithResponse(com.azure.ai.metricsadvisor.models.NotificationHook,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.createHookWithResponse(NotificationHook notificationHook, Context context)"
  name: "createHookWithResponse(NotificationHook notificationHook, Context context)"
  nameWithType: "MetricsAdvisorAdministrationClient.createHookWithResponse(NotificationHook notificationHook, Context context)"
  summary: "Creates a notificationHook that receives anomaly incident alerts.\n\n**Code sample**\n\n```java\nNotificationHook emailNotificationHook = new EmailNotificationHook(\"email hook\")\n     .setDescription(\"my email hook\")\n     .addEmailToAlert(\"alertme{@literal @}alertme.com\")\n     .setExternalLink(\"https://adwiki.azurewebsites.net/articles/howto/alerts/create-hooks.html\");\n \n Response<NotificationHook> response\n     = metricsAdvisorAdminClient.createHookWithResponse(emailNotificationHook, Context.NONE);\n System.out.printf(\"Response statusCode: %d%n\", response.getStatusCode());\n EmailNotificationHook createdEmailHook = (EmailNotificationHook) response.getValue();\n System.out.printf(\"NotificationHook Id: %s%n\", createdEmailHook.getId());\n System.out.printf(\"NotificationHook Name: %s%n\", createdEmailHook.getName());\n System.out.printf(\"NotificationHook Description: %s%n\", createdEmailHook.getDescription());\n System.out.printf(\"NotificationHook External Link: %s%n\", createdEmailHook.getExternalLink());\n System.out.printf(\"NotificationHook Emails: %s%n\", String.join(\",\",\n     createdEmailHook.getEmailsToAlert()));\n```"
  parameters:
  - description: "The notificationHook."
    name: "notificationHook"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.NotificationHook?alt=com.azure.ai.metricsadvisor.models.NotificationHook&text=NotificationHook\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<NotificationHook> createHookWithResponse(NotificationHook notificationHook, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> containing the created <xref uid=\"com.azure.ai.metricsadvisor.models.NotificationHook\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NotificationHook\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.NotificationHook?alt=com.azure.ai.metricsadvisor.models.NotificationHook&text=NotificationHook\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
