### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.createDocumentProducer*"
fullName: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext<T>.createDocumentProducer"
name: "createDocumentProducer"
nameWithType: "OrderByDocumentQueryExecutionContext<T>.createDocumentProducer"
members:
- uid: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext.createDocumentProducer(java.lang.String,com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String,int,com.azure.cosmos.models.CosmosQueryRequestOptions,com.azure.cosmos.models.SqlQuerySpec,java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.implementation.query.TriFunction<com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.util.concurrent.Callable<com.azure.cosmos.implementation.DocumentClientRetryPolicy>)"
  fullName: "com.azure.cosmos.implementation.query.OrderByDocumentQueryExecutionContext<T>.createDocumentProducer(String collectionRid, PartitionKeyRange targetRange, String continuationToken, int initialPageSize, CosmosQueryRequestOptions cosmosQueryRequestOptions, SqlQuerySpec querySpecForInit, Map<String,String> commonRequestHeaders, TriFunction<PartitionKeyRange,String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Callable<DocumentClientRetryPolicy> createRetryPolicyFunc)"
  name: "createDocumentProducer(String collectionRid, PartitionKeyRange targetRange, String continuationToken, int initialPageSize, CosmosQueryRequestOptions cosmosQueryRequestOptions, SqlQuerySpec querySpecForInit, Map<String,String> commonRequestHeaders, TriFunction<PartitionKeyRange,String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Callable<DocumentClientRetryPolicy> createRetryPolicyFunc)"
  nameWithType: "OrderByDocumentQueryExecutionContext<T>.createDocumentProducer(String collectionRid, PartitionKeyRange targetRange, String continuationToken, int initialPageSize, CosmosQueryRequestOptions cosmosQueryRequestOptions, SqlQuerySpec querySpecForInit, Map<String,String> commonRequestHeaders, TriFunction<PartitionKeyRange,String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Callable<DocumentClientRetryPolicy> createRetryPolicyFunc)"
  overridden: "com.azure.cosmos.implementation.query.ParallelDocumentQueryExecutionContextBase.createDocumentProducer(java.lang.String,com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String,int,com.azure.cosmos.models.CosmosQueryRequestOptions,com.azure.cosmos.models.SqlQuerySpec,java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.implementation.query.TriFunction<com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.util.concurrent.Callable<com.azure.cosmos.implementation.DocumentClientRetryPolicy>)"
  parameters:
  - name: "collectionRid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "targetRange"
    type: "<xref href=\"com.azure.cosmos.implementation.PartitionKeyRange?alt=com.azure.cosmos.implementation.PartitionKeyRange&text=PartitionKeyRange\" data-throw-if-not-resolved=\"False\" />"
  - name: "continuationToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "initialPageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "cosmosQueryRequestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - name: "querySpecForInit"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - name: "commonRequestHeaders"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "createRequestFunc"
    type: "<xref href=\"com.azure.cosmos.implementation.query.TriFunction?alt=com.azure.cosmos.implementation.query.TriFunction&text=TriFunction\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.PartitionKeyRange?alt=com.azure.cosmos.implementation.PartitionKeyRange&text=PartitionKeyRange\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "executeFunc"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />,<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
  - name: "createRetryPolicyFunc"
    type: "<xref href=\"java.util.concurrent.Callable?alt=java.util.concurrent.Callable&text=Callable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.DocumentClientRetryPolicy?alt=com.azure.cosmos.implementation.DocumentClientRetryPolicy&text=DocumentClientRetryPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected OrderByDocumentProducer<T> createDocumentProducer(String collectionRid, PartitionKeyRange targetRange, String continuationToken, int initialPageSize, CosmosQueryRequestOptions cosmosQueryRequestOptions, SqlQuerySpec querySpecForInit, Map<String,String> commonRequestHeaders, TriFunction<PartitionKeyRange,String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Callable<DocumentClientRetryPolicy> createRetryPolicyFunc)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.query.OrderByDocumentProducer?alt=com.azure.cosmos.implementation.query.OrderByDocumentProducer&text=OrderByDocumentProducer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
