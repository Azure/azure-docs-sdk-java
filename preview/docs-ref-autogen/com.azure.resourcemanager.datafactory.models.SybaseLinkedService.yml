### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService"
name: "SybaseLinkedService"
nameWithType: "SybaseLinkedService"
summary: "Linked service for Sybase data source."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SybaseLinkedService extends LinkedService"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.SybaseLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.SybaseLinkedService()"
  name: "SybaseLinkedService()"
  nameWithType: "SybaseLinkedService.SybaseLinkedService()"
  syntax: "public SybaseLinkedService()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.authenticationType()"
  name: "authenticationType()"
  nameWithType: "SybaseLinkedService.authenticationType()"
  summary: "Get the authentication<wbr>Type property: Authentication<wbr>Type to be used for connection."
  syntax: "public SybaseAuthenticationType authenticationType()"
  desc: "Get the authenticationType property: AuthenticationType to be used for connection."
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.SybaseAuthenticationType&text=SybaseAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.database()"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.database()"
  name: "database()"
  nameWithType: "SybaseLinkedService.database()"
  summary: "Get the database property: Database name for connection."
  syntax: "public Object database()"
  desc: "Get the database property: Database name for connection. Type: string (or Expression with resultType string)."
  returns:
    description: "the database value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "SybaseLinkedService.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.password()"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.password()"
  name: "password()"
  nameWithType: "SybaseLinkedService.password()"
  summary: "Get the password property: Password for authentication."
  syntax: "public SecretBase password()"
  desc: "Get the password property: Password for authentication."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.schema()"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.schema()"
  name: "schema()"
  nameWithType: "SybaseLinkedService.schema()"
  summary: "Get the schema property: Schema name for connection."
  syntax: "public Object schema()"
  desc: "Get the schema property: Schema name for connection. Type: string (or Expression with resultType string)."
  returns:
    description: "the schema value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.server()"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.server()"
  name: "server()"
  nameWithType: "SybaseLinkedService.server()"
  summary: "Get the server property: Server name for connection."
  syntax: "public Object server()"
  desc: "Get the server property: Server name for connection. Type: string (or Expression with resultType string)."
  returns:
    description: "the server value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.username()"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.username()"
  name: "username()"
  nameWithType: "SybaseLinkedService.username()"
  summary: "Get the username property: Username for authentication."
  syntax: "public Object username()"
  desc: "Get the username property: Username for authentication. Type: string (or Expression with resultType string)."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.validate()"
  name: "validate()"
  nameWithType: "SybaseLinkedService.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "SybaseLinkedService.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SybaseLinkedService withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseLinkedService?alt=com.azure.resourcemanager.datafactory.models.SybaseLinkedService&text=SybaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withAuthenticationType(com.azure.resourcemanager.datafactory.models.SybaseAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withAuthenticationType(SybaseAuthenticationType authenticationType)"
  name: "withAuthenticationType(SybaseAuthenticationType authenticationType)"
  nameWithType: "SybaseLinkedService.withAuthenticationType(SybaseAuthenticationType authenticationType)"
  summary: "Set the authentication<wbr>Type property: Authentication<wbr>Type to be used for connection."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.SybaseAuthenticationType&text=SybaseAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SybaseLinkedService withAuthenticationType(SybaseAuthenticationType authenticationType)"
  desc: "Set the authenticationType property: AuthenticationType to be used for connection."
  returns:
    description: "the SybaseLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseLinkedService?alt=com.azure.resourcemanager.datafactory.models.SybaseLinkedService&text=SybaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  name: "withConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "SybaseLinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connect<wbr>Via property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SybaseLinkedService withConnectVia(IntegrationRuntimeReference connectVia)"
  desc: "Set the connectVia property: The integration runtime reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseLinkedService?alt=com.azure.resourcemanager.datafactory.models.SybaseLinkedService&text=SybaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withDatabase(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withDatabase(Object database)"
  name: "withDatabase(Object database)"
  nameWithType: "SybaseLinkedService.withDatabase(Object database)"
  summary: "Set the database property: Database name for connection."
  parameters:
  - description: "the database value to set."
    name: "database"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SybaseLinkedService withDatabase(Object database)"
  desc: "Set the database property: Database name for connection. Type: string (or Expression with resultType string)."
  returns:
    description: "the SybaseLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseLinkedService?alt=com.azure.resourcemanager.datafactory.models.SybaseLinkedService&text=SybaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "SybaseLinkedService.withDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SybaseLinkedService withDescription(String description)"
  desc: "Set the description property: Linked service description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseLinkedService?alt=com.azure.resourcemanager.datafactory.models.SybaseLinkedService&text=SybaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "SybaseLinkedService.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SybaseLinkedService withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the SybaseLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseLinkedService?alt=com.azure.resourcemanager.datafactory.models.SybaseLinkedService&text=SybaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "SybaseLinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SybaseLinkedService withParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: Parameters for linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseLinkedService?alt=com.azure.resourcemanager.datafactory.models.SybaseLinkedService&text=SybaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "SybaseLinkedService.withPassword(SecretBase password)"
  summary: "Set the password property: Password for authentication."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SybaseLinkedService withPassword(SecretBase password)"
  desc: "Set the password property: Password for authentication."
  returns:
    description: "the SybaseLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseLinkedService?alt=com.azure.resourcemanager.datafactory.models.SybaseLinkedService&text=SybaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withSchema(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withSchema(Object schema)"
  name: "withSchema(Object schema)"
  nameWithType: "SybaseLinkedService.withSchema(Object schema)"
  summary: "Set the schema property: Schema name for connection."
  parameters:
  - description: "the schema value to set."
    name: "schema"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SybaseLinkedService withSchema(Object schema)"
  desc: "Set the schema property: Schema name for connection. Type: string (or Expression with resultType string)."
  returns:
    description: "the SybaseLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseLinkedService?alt=com.azure.resourcemanager.datafactory.models.SybaseLinkedService&text=SybaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withServer(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withServer(Object server)"
  name: "withServer(Object server)"
  nameWithType: "SybaseLinkedService.withServer(Object server)"
  summary: "Set the server property: Server name for connection."
  parameters:
  - description: "the server value to set."
    name: "server"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SybaseLinkedService withServer(Object server)"
  desc: "Set the server property: Server name for connection. Type: string (or Expression with resultType string)."
  returns:
    description: "the SybaseLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseLinkedService?alt=com.azure.resourcemanager.datafactory.models.SybaseLinkedService&text=SybaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.SybaseLinkedService.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "SybaseLinkedService.withUsername(Object username)"
  summary: "Set the username property: Username for authentication."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SybaseLinkedService withUsername(Object username)"
  desc: "Set the username property: Username for authentication. Type: string (or Expression with resultType string)."
  returns:
    description: "the SybaseLinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SybaseLinkedService?alt=com.azure.resourcemanager.datafactory.models.SybaseLinkedService&text=SybaseLinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Linked service for Sybase data source."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
