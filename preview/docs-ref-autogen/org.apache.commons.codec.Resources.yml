### YamlMime:ManagedReference
items:
- uid: org.apache.commons.codec.Resources
  id: Resources
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec
  children:
  - org.apache.commons.codec.Resources.Resources()
  - org.apache.commons.codec.Resources.getInputStream(java.lang.String)
  langs:
  - java
  name: Resources
  nameWithType: Resources
  fullName: org.apache.commons.codec.Resources
  type: Class
  package: org.apache.commons.codec
  summary: Consider this class package private. Helps load resources.
  syntax:
    content: public class Resources
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.commons.codec.Resources.Resources()
  id: Resources()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.Resources
  langs:
  - java
  name: Resources()
  nameWithType: Resources.Resources()
  fullName: org.apache.commons.codec.Resources.Resources()
  overload: org.apache.commons.codec.Resources.Resources*
  type: Constructor
  package: org.apache.commons.codec
  syntax:
    content: public Resources()
- uid: org.apache.commons.codec.Resources.getInputStream(java.lang.String)
  id: getInputStream(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.Resources
  langs:
  - java
  name: getInputStream(String name)
  nameWithType: Resources.getInputStream(String name)
  fullName: org.apache.commons.codec.Resources.getInputStream(String name)
  overload: org.apache.commons.codec.Resources.getInputStream*
  type: Method
  package: org.apache.commons.codec
  summary: Opens the given named resource from the given class.
  syntax:
    content: public static InputStream getInputStream(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The resource name.
    return:
      type: java.io.InputStream
      description: An input stream.
references:
- uid: org.apache.commons.codec.Resources.Resources*
  name: Resources
  nameWithType: Resources.Resources
  fullName: org.apache.commons.codec.Resources.Resources
  package: org.apache.commons.codec
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: org.apache.commons.codec.Resources.getInputStream*
  name: getInputStream
  nameWithType: Resources.getInputStream
  fullName: org.apache.commons.codec.Resources.getInputStream
  package: org.apache.commons.codec
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
