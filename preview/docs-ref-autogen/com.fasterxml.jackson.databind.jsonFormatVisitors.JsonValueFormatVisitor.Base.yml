### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor.Base"
fullName: "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor.Base"
name: "JsonValueFormatVisitor.Base"
nameWithType: "JsonValueFormatVisitor.Base"
summary: "Default \"empty\" implementation, useful as the base to start on; especially as it is guaranteed to implement all the method of the interface, even if new methods are getting added."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public static class JsonValueFormatVisitor.Base implements jsonFormatVisitors.JsonValueFormatVisitor"
constructors:
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor.Base.Base()"
methods:
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor.Base.enumTypes(java.util.Set<java.lang.String>)"
- "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor.Base.format(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)"
type: "class"
implements:
- "<xref href=\"com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor?alt=com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor&text=JsonValueFormatVisitor\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.jsonFormatVisitors"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
