### YamlMime:JavaType
uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties"
fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties"
name: "PrivateCloudProperties"
nameWithType: "PrivateCloudProperties"
summary: "The properties of a private cloud resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.availability()"
- "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.encryption()"
- "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.identitySources()"
- "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.internet()"
- "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.managementCluster()"
- "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.validate()"
- "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.withAvailability(com.azure.resourcemanager.avs.models.AvailabilityProperties)"
- "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.withEncryption(com.azure.resourcemanager.avs.models.Encryption)"
- "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.withIdentitySources(java.util.List<com.azure.resourcemanager.avs.models.IdentitySource>)"
- "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.withInternet(com.azure.resourcemanager.avs.models.InternetEnum)"
- "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.withManagementCluster(com.azure.resourcemanager.avs.models.ManagementCluster)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PrivateCloudProperties extends PrivateCloudUpdateProperties"
constructors:
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.PrivateCloudProperties()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.PrivateCloudProperties()"
  name: "PrivateCloudProperties()"
  nameWithType: "PrivateCloudProperties.PrivateCloudProperties()"
  syntax: "public PrivateCloudProperties()"
methods:
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.circuit()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.circuit()"
  name: "circuit()"
  nameWithType: "PrivateCloudProperties.circuit()"
  summary: "Get the circuit property: An Express<wbr>Route Circuit."
  syntax: "public Circuit circuit()"
  desc: "Get the circuit property: An ExpressRoute Circuit."
  returns:
    description: "the circuit value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Circuit?alt=com.azure.resourcemanager.avs.models.Circuit&text=Circuit\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.endpoints()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.endpoints()"
  name: "endpoints()"
  nameWithType: "PrivateCloudProperties.endpoints()"
  summary: "Get the endpoints property: The endpoints."
  syntax: "public Endpoints endpoints()"
  desc: "Get the endpoints property: The endpoints."
  returns:
    description: "the endpoints value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Endpoints?alt=com.azure.resourcemanager.avs.models.Endpoints&text=Endpoints\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.externalCloudLinks()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.externalCloudLinks()"
  name: "externalCloudLinks()"
  nameWithType: "PrivateCloudProperties.externalCloudLinks()"
  summary: "Get the external<wbr>Cloud<wbr>Links property: Array of cloud link IDs from other clouds that connect to this one."
  syntax: "public List<String> externalCloudLinks()"
  desc: "Get the externalCloudLinks property: Array of cloud link IDs from other clouds that connect to this one."
  returns:
    description: "the externalCloudLinks value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.managementNetwork()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.managementNetwork()"
  name: "managementNetwork()"
  nameWithType: "PrivateCloudProperties.managementNetwork()"
  summary: "Get the management<wbr>Network property: Network used to access v<wbr>Center Server and NSX-T Manager."
  syntax: "public String managementNetwork()"
  desc: "Get the managementNetwork property: Network used to access vCenter Server and NSX-T Manager."
  returns:
    description: "the managementNetwork value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.networkBlock()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.networkBlock()"
  name: "networkBlock()"
  nameWithType: "PrivateCloudProperties.networkBlock()"
  summary: "Get the network<wbr>Block property: The block of addresses should be unique across VNet in your subscription as well as on-premise."
  syntax: "public String networkBlock()"
  desc: "Get the networkBlock property: The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22."
  returns:
    description: "the networkBlock value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.nsxtCertificateThumbprint()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.nsxtCertificateThumbprint()"
  name: "nsxtCertificateThumbprint()"
  nameWithType: "PrivateCloudProperties.nsxtCertificateThumbprint()"
  summary: "Get the nsxt<wbr>Certificate<wbr>Thumbprint property: Thumbprint of the NSX-T Manager SSL certificate."
  syntax: "public String nsxtCertificateThumbprint()"
  desc: "Get the nsxtCertificateThumbprint property: Thumbprint of the NSX-T Manager SSL certificate."
  returns:
    description: "the nsxtCertificateThumbprint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.nsxtPassword()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.nsxtPassword()"
  name: "nsxtPassword()"
  nameWithType: "PrivateCloudProperties.nsxtPassword()"
  summary: "Get the nsxt<wbr>Password property: Optionally, set the NSX-T Manager password when the private cloud is created."
  syntax: "public String nsxtPassword()"
  desc: "Get the nsxtPassword property: Optionally, set the NSX-T Manager password when the private cloud is created."
  returns:
    description: "the nsxtPassword value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.provisioningNetwork()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.provisioningNetwork()"
  name: "provisioningNetwork()"
  nameWithType: "PrivateCloudProperties.provisioningNetwork()"
  summary: "Get the provisioning<wbr>Network property: Used for virtual machine cold migration, cloning, and snapshot migration."
  syntax: "public String provisioningNetwork()"
  desc: "Get the provisioningNetwork property: Used for virtual machine cold migration, cloning, and snapshot migration."
  returns:
    description: "the provisioningNetwork value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PrivateCloudProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning state."
  syntax: "public PrivateCloudProvisioningState provisioningState()"
  desc: "Get the provisioningState property: The provisioning state."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.PrivateCloudProvisioningState?alt=com.azure.resourcemanager.avs.models.PrivateCloudProvisioningState&text=PrivateCloudProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.secondaryCircuit()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.secondaryCircuit()"
  name: "secondaryCircuit()"
  nameWithType: "PrivateCloudProperties.secondaryCircuit()"
  summary: "Get the secondary<wbr>Circuit property: A secondary express<wbr>Route circuit from a separate AZ."
  syntax: "public Circuit secondaryCircuit()"
  desc: "Get the secondaryCircuit property: A secondary expressRoute circuit from a separate AZ. Only present in a stretched private cloud."
  returns:
    description: "the secondaryCircuit value."
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Circuit?alt=com.azure.resourcemanager.avs.models.Circuit&text=Circuit\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.validate()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.validate()"
  name: "validate()"
  nameWithType: "PrivateCloudProperties.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.vcenterCertificateThumbprint()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.vcenterCertificateThumbprint()"
  name: "vcenterCertificateThumbprint()"
  nameWithType: "PrivateCloudProperties.vcenterCertificateThumbprint()"
  summary: "Get the vcenter<wbr>Certificate<wbr>Thumbprint property: Thumbprint of the v<wbr>Center Server SSL certificate."
  syntax: "public String vcenterCertificateThumbprint()"
  desc: "Get the vcenterCertificateThumbprint property: Thumbprint of the vCenter Server SSL certificate."
  returns:
    description: "the vcenterCertificateThumbprint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.vcenterPassword()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.vcenterPassword()"
  name: "vcenterPassword()"
  nameWithType: "PrivateCloudProperties.vcenterPassword()"
  summary: "Get the vcenter<wbr>Password property: Optionally, set the v<wbr>Center admin password when the private cloud is created."
  syntax: "public String vcenterPassword()"
  desc: "Get the vcenterPassword property: Optionally, set the vCenter admin password when the private cloud is created."
  returns:
    description: "the vcenterPassword value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.vmotionNetwork()"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.vmotionNetwork()"
  name: "vmotionNetwork()"
  nameWithType: "PrivateCloudProperties.vmotionNetwork()"
  summary: "Get the vmotion<wbr>Network property: Used for live migration of virtual machines."
  syntax: "public String vmotionNetwork()"
  desc: "Get the vmotionNetwork property: Used for live migration of virtual machines."
  returns:
    description: "the vmotionNetwork value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withAvailability(com.azure.resourcemanager.avs.models.AvailabilityProperties)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withAvailability(AvailabilityProperties availability)"
  name: "withAvailability(AvailabilityProperties availability)"
  nameWithType: "PrivateCloudProperties.withAvailability(AvailabilityProperties availability)"
  summary: "Set the availability property: Properties describing how the cloud is distributed across availability zones."
  overridden: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.withAvailability(com.azure.resourcemanager.avs.models.AvailabilityProperties)"
  parameters:
  - name: "availability"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.AvailabilityProperties?alt=com.azure.resourcemanager.avs.models.AvailabilityProperties&text=AvailabilityProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudProperties withAvailability(AvailabilityProperties availability)"
  desc: "Set the availability property: Properties describing how the cloud is distributed across availability zones."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties&text=PrivateCloudProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withCircuit(com.azure.resourcemanager.avs.models.Circuit)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withCircuit(Circuit circuit)"
  name: "withCircuit(Circuit circuit)"
  nameWithType: "PrivateCloudProperties.withCircuit(Circuit circuit)"
  summary: "Set the circuit property: An Express<wbr>Route Circuit."
  parameters:
  - description: "the circuit value to set."
    name: "circuit"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Circuit?alt=com.azure.resourcemanager.avs.models.Circuit&text=Circuit\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudProperties withCircuit(Circuit circuit)"
  desc: "Set the circuit property: An ExpressRoute Circuit."
  returns:
    description: "the PrivateCloudProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties&text=PrivateCloudProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withEncryption(com.azure.resourcemanager.avs.models.Encryption)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withEncryption(Encryption encryption)"
  name: "withEncryption(Encryption encryption)"
  nameWithType: "PrivateCloudProperties.withEncryption(Encryption encryption)"
  summary: "Set the encryption property: Customer managed key encryption, can be enabled or disabled."
  overridden: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.withEncryption(com.azure.resourcemanager.avs.models.Encryption)"
  parameters:
  - name: "encryption"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Encryption?alt=com.azure.resourcemanager.avs.models.Encryption&text=Encryption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudProperties withEncryption(Encryption encryption)"
  desc: "Set the encryption property: Customer managed key encryption, can be enabled or disabled."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties&text=PrivateCloudProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withIdentitySources(java.util.List<com.azure.resourcemanager.avs.models.IdentitySource>)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withIdentitySources(List<IdentitySource> identitySources)"
  name: "withIdentitySources(List<IdentitySource> identitySources)"
  nameWithType: "PrivateCloudProperties.withIdentitySources(List<IdentitySource> identitySources)"
  summary: "Set the identity<wbr>Sources property: v<wbr>Center Single Sign On Identity Sources."
  overridden: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.withIdentitySources(java.util.List<com.azure.resourcemanager.avs.models.IdentitySource>)"
  parameters:
  - name: "identitySources"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.avs.models.IdentitySource?alt=com.azure.resourcemanager.avs.models.IdentitySource&text=IdentitySource\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PrivateCloudProperties withIdentitySources(List<IdentitySource> identitySources)"
  desc: "Set the identitySources property: vCenter Single Sign On Identity Sources."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties&text=PrivateCloudProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withInternet(com.azure.resourcemanager.avs.models.InternetEnum)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withInternet(InternetEnum internet)"
  name: "withInternet(InternetEnum internet)"
  nameWithType: "PrivateCloudProperties.withInternet(InternetEnum internet)"
  summary: "Set the internet property: Connectivity to internet is enabled or disabled."
  overridden: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.withInternet(com.azure.resourcemanager.avs.models.InternetEnum)"
  parameters:
  - name: "internet"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.InternetEnum?alt=com.azure.resourcemanager.avs.models.InternetEnum&text=InternetEnum\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudProperties withInternet(InternetEnum internet)"
  desc: "Set the internet property: Connectivity to internet is enabled or disabled."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties&text=PrivateCloudProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withManagementCluster(com.azure.resourcemanager.avs.models.ManagementCluster)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withManagementCluster(ManagementCluster managementCluster)"
  name: "withManagementCluster(ManagementCluster managementCluster)"
  nameWithType: "PrivateCloudProperties.withManagementCluster(ManagementCluster managementCluster)"
  summary: "Set the management<wbr>Cluster property: The default cluster used for management."
  overridden: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudUpdateProperties.withManagementCluster(com.azure.resourcemanager.avs.models.ManagementCluster)"
  parameters:
  - name: "managementCluster"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.ManagementCluster?alt=com.azure.resourcemanager.avs.models.ManagementCluster&text=ManagementCluster\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudProperties withManagementCluster(ManagementCluster managementCluster)"
  desc: "Set the managementCluster property: The default cluster used for management."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties&text=PrivateCloudProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withNetworkBlock(java.lang.String)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withNetworkBlock(String networkBlock)"
  name: "withNetworkBlock(String networkBlock)"
  nameWithType: "PrivateCloudProperties.withNetworkBlock(String networkBlock)"
  summary: "Set the network<wbr>Block property: The block of addresses should be unique across VNet in your subscription as well as on-premise."
  parameters:
  - description: "the networkBlock value to set."
    name: "networkBlock"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudProperties withNetworkBlock(String networkBlock)"
  desc: "Set the networkBlock property: The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22."
  returns:
    description: "the PrivateCloudProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties&text=PrivateCloudProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withNsxtPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withNsxtPassword(String nsxtPassword)"
  name: "withNsxtPassword(String nsxtPassword)"
  nameWithType: "PrivateCloudProperties.withNsxtPassword(String nsxtPassword)"
  summary: "Set the nsxt<wbr>Password property: Optionally, set the NSX-T Manager password when the private cloud is created."
  parameters:
  - description: "the nsxtPassword value to set."
    name: "nsxtPassword"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudProperties withNsxtPassword(String nsxtPassword)"
  desc: "Set the nsxtPassword property: Optionally, set the NSX-T Manager password when the private cloud is created."
  returns:
    description: "the PrivateCloudProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties&text=PrivateCloudProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withSecondaryCircuit(com.azure.resourcemanager.avs.models.Circuit)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withSecondaryCircuit(Circuit secondaryCircuit)"
  name: "withSecondaryCircuit(Circuit secondaryCircuit)"
  nameWithType: "PrivateCloudProperties.withSecondaryCircuit(Circuit secondaryCircuit)"
  summary: "Set the secondary<wbr>Circuit property: A secondary express<wbr>Route circuit from a separate AZ."
  parameters:
  - description: "the secondaryCircuit value to set."
    name: "secondaryCircuit"
    type: "<xref href=\"com.azure.resourcemanager.avs.models.Circuit?alt=com.azure.resourcemanager.avs.models.Circuit&text=Circuit\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudProperties withSecondaryCircuit(Circuit secondaryCircuit)"
  desc: "Set the secondaryCircuit property: A secondary expressRoute circuit from a separate AZ. Only present in a stretched private cloud."
  returns:
    description: "the PrivateCloudProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties&text=PrivateCloudProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withVcenterPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties.withVcenterPassword(String vcenterPassword)"
  name: "withVcenterPassword(String vcenterPassword)"
  nameWithType: "PrivateCloudProperties.withVcenterPassword(String vcenterPassword)"
  summary: "Set the vcenter<wbr>Password property: Optionally, set the v<wbr>Center admin password when the private cloud is created."
  parameters:
  - description: "the vcenterPassword value to set."
    name: "vcenterPassword"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PrivateCloudProperties withVcenterPassword(String vcenterPassword)"
  desc: "Set the vcenterPassword property: Optionally, set the vCenter admin password when the private cloud is created."
  returns:
    description: "the PrivateCloudProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties?alt=com.azure.resourcemanager.avs.fluent.models.PrivateCloudProperties&text=PrivateCloudProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The properties of a private cloud resource."
metadata: {}
package: "com.azure.resourcemanager.avs.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-avs:1.0.0-beta.3
