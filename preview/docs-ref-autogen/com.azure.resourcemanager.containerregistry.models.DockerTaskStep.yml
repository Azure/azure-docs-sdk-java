### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  id: DockerTaskStep
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models
  children:
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.DockerTaskStep()
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.arguments()
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.dockerFilePath()
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.imageNames()
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.isPushEnabled()
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.noCache()
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.target()
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.validate()
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withArguments(java.util.List<com.azure.resourcemanager.containerregistry.models.Argument>)
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withDockerFilePath(java.lang.String)
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withImageNames(java.util.List<java.lang.String>)
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withIsPushEnabled(java.lang.Boolean)
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withNoCache(java.lang.Boolean)
  - com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withTarget(java.lang.String)
  langs:
  - java
  name: DockerTaskStep
  nameWithType: DockerTaskStep
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  type: Class
  package: com.azure.resourcemanager.containerregistry.models
  summary: The DockerTaskStep model.
  syntax:
    content: public final class DockerTaskStep extends TaskStepProperties
  inheritance:
  - java.lang.Object
  - com.azure.resourcemanager.containerregistry.models.TaskStepProperties
  inheritedMembers:
  - com.azure.resourcemanager.containerregistry.models.TaskStepProperties.baseImageDependencies()
  - com.azure.resourcemanager.containerregistry.models.TaskStepProperties.contextAccessToken()
  - com.azure.resourcemanager.containerregistry.models.TaskStepProperties.contextPath()
  - com.azure.resourcemanager.containerregistry.models.TaskStepProperties.validate()
  - com.azure.resourcemanager.containerregistry.models.TaskStepProperties.withContextAccessToken(java.lang.String)
  - com.azure.resourcemanager.containerregistry.models.TaskStepProperties.withContextPath(java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.DockerTaskStep()
  id: DockerTaskStep()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: DockerTaskStep()
  nameWithType: DockerTaskStep.DockerTaskStep()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.DockerTaskStep()
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.DockerTaskStep*
  type: Constructor
  package: com.azure.resourcemanager.containerregistry.models
  syntax:
    content: public DockerTaskStep()
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.arguments()
  id: arguments()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: arguments()
  nameWithType: DockerTaskStep.arguments()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.arguments()
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.arguments*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the arguments property: The collection of override arguments to be used when executing this build step.'
  syntax:
    content: public List<Argument> arguments()
    return:
      type: java.util.List<com.azure.resourcemanager.containerregistry.models.Argument>
      description: the arguments value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.dockerFilePath()
  id: dockerFilePath()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: dockerFilePath()
  nameWithType: DockerTaskStep.dockerFilePath()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.dockerFilePath()
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.dockerFilePath*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the dockerFilePath property: The Docker file path relative to the source context.'
  syntax:
    content: public String dockerFilePath()
    return:
      type: java.lang.String
      description: the dockerFilePath value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.imageNames()
  id: imageNames()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: imageNames()
  nameWithType: DockerTaskStep.imageNames()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.imageNames()
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.imageNames*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the imageNames property: The fully qualified image names including the repository and tag.'
  syntax:
    content: public List<String> imageNames()
    return:
      type: java.util.List<java.lang.String>
      description: the imageNames value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.isPushEnabled()
  id: isPushEnabled()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: isPushEnabled()
  nameWithType: DockerTaskStep.isPushEnabled()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.isPushEnabled()
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.isPushEnabled*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the isPushEnabled property: The value of this property indicates whether the image built should be pushed to the registry or not.'
  syntax:
    content: public Boolean isPushEnabled()
    return:
      type: java.lang.Boolean
      description: the isPushEnabled value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.noCache()
  id: noCache()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: noCache()
  nameWithType: DockerTaskStep.noCache()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.noCache()
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.noCache*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the noCache property: The value of this property indicates whether the image cache is enabled or not.'
  syntax:
    content: public Boolean noCache()
    return:
      type: java.lang.Boolean
      description: the noCache value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.target()
  id: target()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: target()
  nameWithType: DockerTaskStep.target()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.target()
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.target*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the target property: The name of the target build stage for the docker build.'
  syntax:
    content: public String target()
    return:
      type: java.lang.String
      description: the target value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.validate()
  id: validate()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: validate()
  nameWithType: DockerTaskStep.validate()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.validate()
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.validate*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withArguments(java.util.List<com.azure.resourcemanager.containerregistry.models.Argument>)
  id: withArguments(java.util.List<com.azure.resourcemanager.containerregistry.models.Argument>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: withArguments(List<Argument> arguments)
  nameWithType: DockerTaskStep.withArguments(List<Argument> arguments)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withArguments(List<Argument> arguments)
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withArguments*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the arguments property: The collection of override arguments to be used when executing this build step.'
  syntax:
    content: public DockerTaskStep withArguments(List<Argument> arguments)
    parameters:
    - id: arguments
      type: java.util.List<com.azure.resourcemanager.containerregistry.models.Argument>
      description: the arguments value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
      description: the DockerTaskStep object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withDockerFilePath(java.lang.String)
  id: withDockerFilePath(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: withDockerFilePath(String dockerFilePath)
  nameWithType: DockerTaskStep.withDockerFilePath(String dockerFilePath)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withDockerFilePath(String dockerFilePath)
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withDockerFilePath*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the dockerFilePath property: The Docker file path relative to the source context.'
  syntax:
    content: public DockerTaskStep withDockerFilePath(String dockerFilePath)
    parameters:
    - id: dockerFilePath
      type: java.lang.String
      description: the dockerFilePath value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
      description: the DockerTaskStep object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withImageNames(java.util.List<java.lang.String>)
  id: withImageNames(java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: withImageNames(List<String> imageNames)
  nameWithType: DockerTaskStep.withImageNames(List<String> imageNames)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withImageNames(List<String> imageNames)
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withImageNames*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the imageNames property: The fully qualified image names including the repository and tag.'
  syntax:
    content: public DockerTaskStep withImageNames(List<String> imageNames)
    parameters:
    - id: imageNames
      type: java.util.List<java.lang.String>
      description: the imageNames value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
      description: the DockerTaskStep object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withIsPushEnabled(java.lang.Boolean)
  id: withIsPushEnabled(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: withIsPushEnabled(Boolean isPushEnabled)
  nameWithType: DockerTaskStep.withIsPushEnabled(Boolean isPushEnabled)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withIsPushEnabled(Boolean isPushEnabled)
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withIsPushEnabled*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the isPushEnabled property: The value of this property indicates whether the image built should be pushed to the registry or not.'
  syntax:
    content: public DockerTaskStep withIsPushEnabled(Boolean isPushEnabled)
    parameters:
    - id: isPushEnabled
      type: java.lang.Boolean
      description: the isPushEnabled value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
      description: the DockerTaskStep object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withNoCache(java.lang.Boolean)
  id: withNoCache(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: withNoCache(Boolean noCache)
  nameWithType: DockerTaskStep.withNoCache(Boolean noCache)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withNoCache(Boolean noCache)
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withNoCache*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the noCache property: The value of this property indicates whether the image cache is enabled or not.'
  syntax:
    content: public DockerTaskStep withNoCache(Boolean noCache)
    parameters:
    - id: noCache
      type: java.lang.Boolean
      description: the noCache value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
      description: the DockerTaskStep object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withTarget(java.lang.String)
  id: withTarget(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
  langs:
  - java
  name: withTarget(String target)
  nameWithType: DockerTaskStep.withTarget(String target)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withTarget(String target)
  overload: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withTarget*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the target property: The name of the target build stage for the docker build.'
  syntax:
    content: public DockerTaskStep withTarget(String target)
    parameters:
    - id: target
      type: java.lang.String
      description: the target value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerTaskStep
      description: the DockerTaskStep object itself.
references:
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.DockerTaskStep*
  name: DockerTaskStep
  nameWithType: DockerTaskStep.DockerTaskStep
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.DockerTaskStep
  package: com.azure.resourcemanager.containerregistry.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.imageNames*
  name: imageNames
  nameWithType: DockerTaskStep.imageNames
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.imageNames
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withImageNames*
  name: withImageNames
  nameWithType: DockerTaskStep.withImageNames
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withImageNames
  package: com.azure.resourcemanager.containerregistry.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.isPushEnabled*
  name: isPushEnabled
  nameWithType: DockerTaskStep.isPushEnabled
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.isPushEnabled
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withIsPushEnabled*
  name: withIsPushEnabled
  nameWithType: DockerTaskStep.withIsPushEnabled
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withIsPushEnabled
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.noCache*
  name: noCache
  nameWithType: DockerTaskStep.noCache
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.noCache
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withNoCache*
  name: withNoCache
  nameWithType: DockerTaskStep.withNoCache
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withNoCache
  package: com.azure.resourcemanager.containerregistry.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.dockerFilePath*
  name: dockerFilePath
  nameWithType: DockerTaskStep.dockerFilePath
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.dockerFilePath
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withDockerFilePath*
  name: withDockerFilePath
  nameWithType: DockerTaskStep.withDockerFilePath
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withDockerFilePath
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.target*
  name: target
  nameWithType: DockerTaskStep.target
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.target
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withTarget*
  name: withTarget
  nameWithType: DockerTaskStep.withTarget
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withTarget
  package: com.azure.resourcemanager.containerregistry.models
- uid: java.util.List<com.azure.resourcemanager.containerregistry.models.Argument>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.containerregistry.models.Argument
    name: Argument
    fullName: com.azure.resourcemanager.containerregistry.models.Argument
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.arguments*
  name: arguments
  nameWithType: DockerTaskStep.arguments
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.arguments
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withArguments*
  name: withArguments
  nameWithType: DockerTaskStep.withArguments
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.withArguments
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.validate*
  name: validate
  nameWithType: DockerTaskStep.validate
  fullName: com.azure.resourcemanager.containerregistry.models.DockerTaskStep.validate
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.TaskStepProperties
  name: TaskStepProperties
  nameWithType: TaskStepProperties
  fullName: com.azure.resourcemanager.containerregistry.models.TaskStepProperties
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.resourcemanager.containerregistry.models.TaskStepProperties.validate()
  name: TaskStepProperties.validate()
  nameWithType: TaskStepProperties.validate()
  fullName: com.azure.resourcemanager.containerregistry.models.TaskStepProperties.validate()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.resourcemanager.containerregistry.models.TaskStepProperties.contextAccessToken()
  name: TaskStepProperties.contextAccessToken()
  nameWithType: TaskStepProperties.contextAccessToken()
  fullName: com.azure.resourcemanager.containerregistry.models.TaskStepProperties.contextAccessToken()
- uid: com.azure.resourcemanager.containerregistry.models.TaskStepProperties.withContextAccessToken(java.lang.String)
  name: TaskStepProperties.withContextAccessToken(String)
  nameWithType: TaskStepProperties.withContextAccessToken(String)
  fullName: com.azure.resourcemanager.containerregistry.models.TaskStepProperties.withContextAccessToken(java.lang.String)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.resourcemanager.containerregistry.models.TaskStepProperties.contextPath()
  name: TaskStepProperties.contextPath()
  nameWithType: TaskStepProperties.contextPath()
  fullName: com.azure.resourcemanager.containerregistry.models.TaskStepProperties.contextPath()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.azure.resourcemanager.containerregistry.models.TaskStepProperties.baseImageDependencies()
  name: TaskStepProperties.baseImageDependencies()
  nameWithType: TaskStepProperties.baseImageDependencies()
  fullName: com.azure.resourcemanager.containerregistry.models.TaskStepProperties.baseImageDependencies()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.containerregistry.models.TaskStepProperties.withContextPath(java.lang.String)
  name: TaskStepProperties.withContextPath(String)
  nameWithType: TaskStepProperties.withContextPath(String)
  fullName: com.azure.resourcemanager.containerregistry.models.TaskStepProperties.withContextPath(java.lang.String)
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.resourcemanager.containerregistry.models.Argument
  name: Argument
  nameWithType: Argument
  fullName: com.azure.resourcemanager.containerregistry.models.Argument
