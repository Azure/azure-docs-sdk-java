### YamlMime:ManagedReference
items:
- uid: com.azure.communication.chat.ChatServiceVersion
  id: ChatServiceVersion
  artifact: com.azure:azure-communication-chat:1.0.0-beta.3
  parent: com.azure.communication.chat
  children:
  - com.azure.communication.chat.ChatServiceVersion.V2020_09_21_preview2
  - com.azure.communication.chat.ChatServiceVersion.getLatest()
  - com.azure.communication.chat.ChatServiceVersion.getVersion()
  - com.azure.communication.chat.ChatServiceVersion.valueOf(java.lang.String)
  - com.azure.communication.chat.ChatServiceVersion.values()
  langs:
  - java
  name: ChatServiceVersion
  nameWithType: ChatServiceVersion
  fullName: com.azure.communication.chat.ChatServiceVersion
  type: Enum
  package: com.azure.communication.chat
  summary: The versions of Chat Service supported by this client library.
  syntax:
    content: public enum ChatServiceVersion extends Enum<ChatServiceVersion> implements ServiceVersion
  inheritance:
  - java.lang.Object
  - java.lang.Enum
  implements:
  - com.azure.core.util.ServiceVersion
  inheritedMembers:
  - java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  - java.lang.Enum.clone()
  - java.lang.Enum.compareTo(E)
  - java.lang.Enum.equals(java.lang.Object)
  - java.lang.Enum.finalize()
  - java.lang.Enum.getDeclaringClass()
  - java.lang.Enum.hashCode()
  - java.lang.Enum.name()
  - java.lang.Enum.ordinal()
  - java.lang.Enum.toString()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.communication.chat.ChatServiceVersion.ChatServiceVersion(java.lang.String)
  id: ChatServiceVersion(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.3
  parent: com.azure.communication.chat.ChatServiceVersion
  langs:
  - java
  name: ChatServiceVersion(String version)
  nameWithType: ChatServiceVersion.ChatServiceVersion(String version)
  fullName: com.azure.communication.chat.ChatServiceVersion.ChatServiceVersion(String version)
  overload: com.azure.communication.chat.ChatServiceVersion.ChatServiceVersion*
  type: Constructor
  package: com.azure.communication.chat
  syntax:
    content: private ChatServiceVersion(String version)
    parameters:
    - id: version
      type: java.lang.String
- uid: com.azure.communication.chat.ChatServiceVersion.V2020_09_21_preview2
  id: V2020_09_21_preview2
  artifact: com.azure:azure-communication-chat:1.0.0-beta.3
  parent: com.azure.communication.chat.ChatServiceVersion
  langs:
  - java
  name: V2020_09_21_preview2
  nameWithType: ChatServiceVersion.V2020_09_21_preview2
  fullName: com.azure.communication.chat.ChatServiceVersion.V2020_09_21_preview2
  type: Field
  package: com.azure.communication.chat
  syntax:
    content: public static final ChatServiceVersion V2020_09_21_preview2
    return:
      type: com.azure.communication.chat.ChatServiceVersion
- uid: com.azure.communication.chat.ChatServiceVersion.getLatest()
  id: getLatest()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.3
  parent: com.azure.communication.chat.ChatServiceVersion
  langs:
  - java
  name: getLatest()
  nameWithType: ChatServiceVersion.getLatest()
  fullName: com.azure.communication.chat.ChatServiceVersion.getLatest()
  overload: com.azure.communication.chat.ChatServiceVersion.getLatest*
  type: Method
  package: com.azure.communication.chat
  summary: Gets the latest service version supported by this client library
  syntax:
    content: public static ChatServiceVersion getLatest()
    return:
      type: com.azure.communication.chat.ChatServiceVersion
      description: the latest <xref uid="com.azure.communication.chat.ChatServiceVersion" data-throw-if-not-resolved="false">ChatServiceVersion</xref>
- uid: com.azure.communication.chat.ChatServiceVersion.getVersion()
  id: getVersion()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.3
  parent: com.azure.communication.chat.ChatServiceVersion
  langs:
  - java
  name: getVersion()
  nameWithType: ChatServiceVersion.getVersion()
  fullName: com.azure.communication.chat.ChatServiceVersion.getVersion()
  overload: com.azure.communication.chat.ChatServiceVersion.getVersion*
  type: Method
  package: com.azure.communication.chat
  syntax:
    content: public String getVersion()
    return:
      type: java.lang.String
- uid: com.azure.communication.chat.ChatServiceVersion.valueOf(java.lang.String)
  id: valueOf(java.lang.String)
  artifact: com.azure:azure-communication-chat:1.0.0-beta.3
  parent: com.azure.communication.chat.ChatServiceVersion
  langs:
  - java
  name: valueOf(String name)
  nameWithType: ChatServiceVersion.valueOf(String name)
  fullName: com.azure.communication.chat.ChatServiceVersion.valueOf(String name)
  overload: com.azure.communication.chat.ChatServiceVersion.valueOf*
  type: Method
  package: com.azure.communication.chat
  syntax:
    content: public static ChatServiceVersion valueOf(String name)
    parameters:
    - id: name
      type: java.lang.String
    return:
      type: com.azure.communication.chat.ChatServiceVersion
- uid: com.azure.communication.chat.ChatServiceVersion.values()
  id: values()
  artifact: com.azure:azure-communication-chat:1.0.0-beta.3
  parent: com.azure.communication.chat.ChatServiceVersion
  langs:
  - java
  name: values()
  nameWithType: ChatServiceVersion.values()
  fullName: com.azure.communication.chat.ChatServiceVersion.values()
  overload: com.azure.communication.chat.ChatServiceVersion.values*
  type: Method
  package: com.azure.communication.chat
  syntax:
    content: public static ChatServiceVersion[] values()
    return:
      type: com.azure.communication.chat.ChatServiceVersion[]
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.communication.chat.ChatServiceVersion.ChatServiceVersion*
  name: ChatServiceVersion
  nameWithType: ChatServiceVersion.ChatServiceVersion
  fullName: com.azure.communication.chat.ChatServiceVersion.ChatServiceVersion
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatServiceVersion[]
  spec.java:
  - uid: com.azure.communication.chat.ChatServiceVersion
    name: ChatServiceVersion
    fullName: com.azure.communication.chat.ChatServiceVersion
  - name: '[]'
    fullName: '[]'
- uid: com.azure.communication.chat.ChatServiceVersion.values*
  name: values
  nameWithType: ChatServiceVersion.values
  fullName: com.azure.communication.chat.ChatServiceVersion.values
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatServiceVersion.valueOf*
  name: valueOf
  nameWithType: ChatServiceVersion.valueOf
  fullName: com.azure.communication.chat.ChatServiceVersion.valueOf
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatServiceVersion.getVersion*
  name: getVersion
  nameWithType: ChatServiceVersion.getVersion
  fullName: com.azure.communication.chat.ChatServiceVersion.getVersion
  package: com.azure.communication.chat
- uid: com.azure.communication.chat.ChatServiceVersion.getLatest*
  name: getLatest
  nameWithType: ChatServiceVersion.getLatest
  fullName: com.azure.communication.chat.ChatServiceVersion.getLatest
  package: com.azure.communication.chat
- uid: java.lang.Enum<com.azure.communication.chat.ChatServiceVersion>
  name: Enum<ChatServiceVersion>
  nameWithType: Enum<ChatServiceVersion>
  fullName: java.lang.Enum<com.azure.communication.chat.ChatServiceVersion>
- uid: com.azure.core.util.ServiceVersion
  name: ServiceVersion
  nameWithType: ServiceVersion
  fullName: com.azure.core.util.ServiceVersion
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Enum.toString()
  name: Enum.toString()
  nameWithType: Enum.toString()
  fullName: java.lang.Enum.toString()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Enum.clone()
  name: Enum.clone()
  nameWithType: Enum.clone()
  fullName: java.lang.Enum.clone()
- uid: java.lang.Enum.finalize()
  name: Enum.finalize()
  nameWithType: Enum.finalize()
  fullName: java.lang.Enum.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Enum.compareTo(E)
  name: Enum.compareTo(E)
  nameWithType: Enum.compareTo(E)
  fullName: java.lang.Enum.compareTo(E)
- uid: java.lang.Enum.name()
  name: Enum.name()
  nameWithType: Enum.name()
  fullName: java.lang.Enum.name()
- uid: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
  name: Enum.<T>valueOf(Class<T>,String)
  nameWithType: Enum.<T>valueOf(Class<T>,String)
  fullName: java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Enum.getDeclaringClass()
  name: Enum.getDeclaringClass()
  nameWithType: Enum.getDeclaringClass()
  fullName: java.lang.Enum.getDeclaringClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Enum.ordinal()
  name: Enum.ordinal()
  nameWithType: Enum.ordinal()
  fullName: java.lang.Enum.ordinal()
- uid: java.lang.Enum.hashCode()
  name: Enum.hashCode()
  nameWithType: Enum.hashCode()
  fullName: java.lang.Enum.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Enum.equals(java.lang.Object)
  name: Enum.equals(Object)
  nameWithType: Enum.equals(Object)
  fullName: java.lang.Enum.equals(java.lang.Object)
- uid: java.lang.Enum
  name: Enum
  nameWithType: Enum
  fullName: java.lang.Enum
- uid: java.lang.Enum.
  name: Enum.
  nameWithType: Enum.
  fullName: java.lang.Enum.
- uid: T>,java.lang.String)
  name: T>,String)
  nameWithType: T>,String)
  fullName: T>,java.lang.String)
- uid: T>valueOf(java.lang.Class
  name: T>valueOf(Class
  nameWithType: T>valueOf(Class
  fullName: T>valueOf(java.lang.Class
