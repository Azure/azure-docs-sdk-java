### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner"
fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner"
name: "DataLakeStoreAccountInner"
nameWithType: "DataLakeStoreAccountInner"
summary: "Data Lake Store account information."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DataLakeStoreAccountInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.DataLakeStoreAccountInner()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.DataLakeStoreAccountInner()"
  name: "DataLakeStoreAccountInner()"
  nameWithType: "DataLakeStoreAccountInner.DataLakeStoreAccountInner()"
  syntax: "public DataLakeStoreAccountInner()"
methods:
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.accountId()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.accountId()"
  name: "accountId()"
  nameWithType: "DataLakeStoreAccountInner.accountId()"
  summary: "Get the accountId property: The unique identifier associated with this Data Lake Store account."
  syntax: "public UUID accountId()"
  returns:
    description: "the accountId value."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.creationTime()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.creationTime()"
  name: "creationTime()"
  nameWithType: "DataLakeStoreAccountInner.creationTime()"
  summary: "Get the creationTime property: The account creation time."
  syntax: "public OffsetDateTime creationTime()"
  returns:
    description: "the creationTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.currentTier()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.currentTier()"
  name: "currentTier()"
  nameWithType: "DataLakeStoreAccountInner.currentTier()"
  summary: "Get the currentTier property: The commitment tier in use for the current month."
  syntax: "public TierType currentTier()"
  returns:
    description: "the currentTier value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.defaultGroup()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.defaultGroup()"
  name: "defaultGroup()"
  nameWithType: "DataLakeStoreAccountInner.defaultGroup()"
  summary: "Get the defaultGroup property: The default owner group for all new folders and files created in the Data Lake Store account."
  syntax: "public String defaultGroup()"
  returns:
    description: "the defaultGroup value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.encryptionConfig()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.encryptionConfig()"
  name: "encryptionConfig()"
  nameWithType: "DataLakeStoreAccountInner.encryptionConfig()"
  summary: "Get the encryptionConfig property: The Key Vault encryption configuration."
  syntax: "public EncryptionConfig encryptionConfig()"
  returns:
    description: "the encryptionConfig value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.EncryptionConfig&text=EncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.encryptionProvisioningState()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.encryptionProvisioningState()"
  name: "encryptionProvisioningState()"
  nameWithType: "DataLakeStoreAccountInner.encryptionProvisioningState()"
  summary: "Get the encryptionProvisioningState property: The current state of encryption provisioning for this Data Lake Store account."
  syntax: "public EncryptionProvisioningState encryptionProvisioningState()"
  returns:
    description: "the encryptionProvisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionProvisioningState?alt=com.azure.resourcemanager.datalakestore.models.EncryptionProvisioningState&text=EncryptionProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.encryptionState()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.encryptionState()"
  name: "encryptionState()"
  nameWithType: "DataLakeStoreAccountInner.encryptionState()"
  summary: "Get the encryptionState property: The current state of encryption for this Data Lake Store account."
  syntax: "public EncryptionState encryptionState()"
  returns:
    description: "the encryptionState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionState?alt=com.azure.resourcemanager.datalakestore.models.EncryptionState&text=EncryptionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.endpoint()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.endpoint()"
  name: "endpoint()"
  nameWithType: "DataLakeStoreAccountInner.endpoint()"
  summary: "Get the endpoint property: The full CName endpoint for this account."
  syntax: "public String endpoint()"
  returns:
    description: "the endpoint value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.firewallAllowAzureIps()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.firewallAllowAzureIps()"
  name: "firewallAllowAzureIps()"
  nameWithType: "DataLakeStoreAccountInner.firewallAllowAzureIps()"
  summary: "Get the firewallAllowAzureIps property: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
  syntax: "public FirewallAllowAzureIpsState firewallAllowAzureIps()"
  returns:
    description: "the firewallAllowAzureIps value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState?alt=com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState&text=FirewallAllowAzureIpsState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.firewallRules()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.firewallRules()"
  name: "firewallRules()"
  nameWithType: "DataLakeStoreAccountInner.firewallRules()"
  summary: "Get the firewallRules property: The list of firewall rules associated with this Data Lake Store account."
  syntax: "public List<FirewallRuleInner> firewallRules()"
  returns:
    description: "the firewallRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.FirewallRuleInner?alt=com.azure.resourcemanager.datalakestore.fluent.models.FirewallRuleInner&text=FirewallRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.firewallState()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.firewallState()"
  name: "firewallState()"
  nameWithType: "DataLakeStoreAccountInner.firewallState()"
  summary: "Get the firewallState property: The current state of the IP address firewall for this Data Lake Store account."
  syntax: "public FirewallState firewallState()"
  returns:
    description: "the firewallState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallState?alt=com.azure.resourcemanager.datalakestore.models.FirewallState&text=FirewallState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.identity()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.identity()"
  name: "identity()"
  nameWithType: "DataLakeStoreAccountInner.identity()"
  summary: "Get the identity property: The Key Vault encryption identity, if any."
  syntax: "public EncryptionIdentity identity()"
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.EncryptionIdentity?alt=com.azure.resourcemanager.datalakestore.models.EncryptionIdentity&text=EncryptionIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.lastModifiedTime()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.lastModifiedTime()"
  name: "lastModifiedTime()"
  nameWithType: "DataLakeStoreAccountInner.lastModifiedTime()"
  summary: "Get the lastModifiedTime property: The account last modified time."
  syntax: "public OffsetDateTime lastModifiedTime()"
  returns:
    description: "the lastModifiedTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.newTier()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.newTier()"
  name: "newTier()"
  nameWithType: "DataLakeStoreAccountInner.newTier()"
  summary: "Get the newTier property: The commitment tier to use for next month."
  syntax: "public TierType newTier()"
  returns:
    description: "the newTier value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.provisioningState()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "DataLakeStoreAccountInner.provisioningState()"
  summary: "Get the provisioningState property: The provisioning status of the Data Lake Store account."
  syntax: "public DataLakeStoreAccountStatus provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccountStatus?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccountStatus&text=DataLakeStoreAccountStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.state()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.state()"
  name: "state()"
  nameWithType: "DataLakeStoreAccountInner.state()"
  summary: "Get the state property: The state of the Data Lake Store account."
  syntax: "public DataLakeStoreAccountState state()"
  returns:
    description: "the state value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccountState?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccountState&text=DataLakeStoreAccountState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.trustedIdProviderState()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.trustedIdProviderState()"
  name: "trustedIdProviderState()"
  nameWithType: "DataLakeStoreAccountInner.trustedIdProviderState()"
  summary: "Get the trustedIdProviderState property: The current state of the trusted identity provider feature for this Data Lake Store account."
  syntax: "public TrustedIdProviderState trustedIdProviderState()"
  returns:
    description: "the trustedIdProviderState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState?alt=com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState&text=TrustedIdProviderState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.trustedIdProviders()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.trustedIdProviders()"
  name: "trustedIdProviders()"
  nameWithType: "DataLakeStoreAccountInner.trustedIdProviders()"
  summary: "Get the trustedIdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  syntax: "public List<TrustedIdProviderInner> trustedIdProviders()"
  returns:
    description: "the trustedIdProviders value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.TrustedIdProviderInner?alt=com.azure.resourcemanager.datalakestore.fluent.models.TrustedIdProviderInner&text=TrustedIdProviderInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.validate()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.validate()"
  name: "validate()"
  nameWithType: "DataLakeStoreAccountInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.virtualNetworkRules()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.virtualNetworkRules()"
  name: "virtualNetworkRules()"
  nameWithType: "DataLakeStoreAccountInner.virtualNetworkRules()"
  summary: "Get the virtualNetworkRules property: The list of virtual network rules associated with this Data Lake Store account."
  syntax: "public List<VirtualNetworkRuleInner> virtualNetworkRules()"
  returns:
    description: "the virtualNetworkRules value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.VirtualNetworkRuleInner?alt=com.azure.resourcemanager.datalakestore.fluent.models.VirtualNetworkRuleInner&text=VirtualNetworkRuleInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "DataLakeStoreAccountInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataLakeStoreAccountInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner?alt=com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner&text=DataLakeStoreAccountInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "DataLakeStoreAccountInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DataLakeStoreAccountInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner?alt=com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner&text=DataLakeStoreAccountInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datalakestore.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.1
