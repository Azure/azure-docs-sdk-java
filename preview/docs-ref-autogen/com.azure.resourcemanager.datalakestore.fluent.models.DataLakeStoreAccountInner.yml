### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner"
fullName: "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner"
name: "DataLakeStoreAccountInner"
nameWithType: "DataLakeStoreAccountInner"
summary: "Data Lake Store account information."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DataLakeStoreAccountInner extends Resource"
constructors:
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.DataLakeStoreAccountInner()"
methods:
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.accountId()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.creationTime()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.currentTier()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.defaultGroup()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.encryptionConfig()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.encryptionProvisioningState()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.encryptionState()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.endpoint()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.firewallAllowAzureIps()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.firewallRules()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.firewallState()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.identity()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.lastModifiedTime()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.newTier()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.provisioningState()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.state()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.trustedIdProviderState()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.trustedIdProviders()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.validate()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.virtualNetworkRules()"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.withLocation(java.lang.String)"
- "com.azure.resourcemanager.datalakestore.fluent.models.DataLakeStoreAccountInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.datalakestore.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.1
