### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.node.TreeTraversingParser.isNaN*"
fullName: "com.fasterxml.jackson.databind.node.TreeTraversingParser.isNaN"
name: "isNaN"
nameWithType: "TreeTraversingParser.isNaN"
members:
- uid: "com.fasterxml.jackson.databind.node.TreeTraversingParser.isNaN()"
  fullName: "com.fasterxml.jackson.databind.node.TreeTraversingParser.isNaN()"
  name: "isNaN()"
  nameWithType: "TreeTraversingParser.isNaN()"
  summary: "Access for checking whether current token is a numeric value token, but one that is of \"not-a-number\" (NaN) variety (including both \"NaN\" AND positive/negative infinity!): not supported by all formats, but often supported for <xref uid=\"com.fasterxml.jackson.core.JsonToken.VALUE_NUMBER_FLOAT\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonToken#VALUE_NUMBER_FLOAT\"></xref>. NOTE: roughly equivalent to calling `!Double.isFinite()` on value you would get from calling <xref uid=\"com.fasterxml.jackson.databind.node.TreeTraversingParser.getDoubleValue()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getDoubleValue()\"></xref>."
  overridden: "com.fasterxml.jackson.core.JsonParser.isNaN()"
  syntax: "public boolean isNaN()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.node"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
