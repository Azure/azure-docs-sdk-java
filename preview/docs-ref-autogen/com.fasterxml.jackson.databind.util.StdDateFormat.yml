### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.util.StdDateFormat
  id: StdDateFormat
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util
  children:
  - com.fasterxml.jackson.databind.util.StdDateFormat.<T>_equals(T,T)
  - com.fasterxml.jackson.databind.util.StdDateFormat.ALL_FORMATS
  - com.fasterxml.jackson.databind.util.StdDateFormat.CALENDAR
  - com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_RFC1123
  - com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_ISO8601
  - com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_PLAIN
  - com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_RFC1123
  - com.fasterxml.jackson.databind.util.StdDateFormat.DEFAULT_LOCALE
  - com.fasterxml.jackson.databind.util.StdDateFormat.DEFAULT_TIMEZONE
  - com.fasterxml.jackson.databind.util.StdDateFormat.PATTERN_ISO8601
  - com.fasterxml.jackson.databind.util.StdDateFormat.PATTERN_PLAIN
  - com.fasterxml.jackson.databind.util.StdDateFormat.PATTERN_PLAIN_STR
  - com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat()
  - com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat(java.util.TimeZone,java.util.Locale)
  - com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat(java.util.TimeZone,java.util.Locale,java.lang.Boolean)
  - com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat(java.util.TimeZone,java.util.Locale,java.lang.Boolean,boolean)
  - com.fasterxml.jackson.databind.util.StdDateFormat._clearFormats()
  - com.fasterxml.jackson.databind.util.StdDateFormat._format(java.util.TimeZone,java.util.Locale,java.util.Date,java.lang.StringBuffer)
  - com.fasterxml.jackson.databind.util.StdDateFormat._formatBCEYear(java.lang.StringBuffer,int)
  - com.fasterxml.jackson.databind.util.StdDateFormat._getCalendar(java.util.TimeZone)
  - com.fasterxml.jackson.databind.util.StdDateFormat._lenient
  - com.fasterxml.jackson.databind.util.StdDateFormat._locale
  - com.fasterxml.jackson.databind.util.StdDateFormat._parseAsISO8601(java.lang.String,java.text.ParsePosition)
  - com.fasterxml.jackson.databind.util.StdDateFormat._parseDate(java.lang.String,java.text.ParsePosition)
  - com.fasterxml.jackson.databind.util.StdDateFormat._timezone
  - com.fasterxml.jackson.databind.util.StdDateFormat.clone()
  - com.fasterxml.jackson.databind.util.StdDateFormat.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.util.StdDateFormat.format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)
  - com.fasterxml.jackson.databind.util.StdDateFormat.getDefaultTimeZone()
  - com.fasterxml.jackson.databind.util.StdDateFormat.getISO8601Format(java.util.TimeZone,java.util.Locale)
  - com.fasterxml.jackson.databind.util.StdDateFormat.getRFC1123Format(java.util.TimeZone,java.util.Locale)
  - com.fasterxml.jackson.databind.util.StdDateFormat.getTimeZone()
  - com.fasterxml.jackson.databind.util.StdDateFormat.hashCode()
  - com.fasterxml.jackson.databind.util.StdDateFormat.instance
  - com.fasterxml.jackson.databind.util.StdDateFormat.isColonIncludedInTimeZone()
  - com.fasterxml.jackson.databind.util.StdDateFormat.isLenient()
  - com.fasterxml.jackson.databind.util.StdDateFormat.looksLikeISO8601(java.lang.String)
  - com.fasterxml.jackson.databind.util.StdDateFormat.parse(java.lang.String)
  - com.fasterxml.jackson.databind.util.StdDateFormat.parse(java.lang.String,java.text.ParsePosition)
  - com.fasterxml.jackson.databind.util.StdDateFormat.parseAsISO8601(java.lang.String,java.text.ParsePosition)
  - com.fasterxml.jackson.databind.util.StdDateFormat.parseAsRFC1123(java.lang.String,java.text.ParsePosition)
  - com.fasterxml.jackson.databind.util.StdDateFormat.setLenient(boolean)
  - com.fasterxml.jackson.databind.util.StdDateFormat.setTimeZone(java.util.TimeZone)
  - com.fasterxml.jackson.databind.util.StdDateFormat.toPattern()
  - com.fasterxml.jackson.databind.util.StdDateFormat.toString()
  - com.fasterxml.jackson.databind.util.StdDateFormat.withColonInTimeZone(boolean)
  - com.fasterxml.jackson.databind.util.StdDateFormat.withLenient(java.lang.Boolean)
  - com.fasterxml.jackson.databind.util.StdDateFormat.withLocale(java.util.Locale)
  - com.fasterxml.jackson.databind.util.StdDateFormat.withTimeZone(java.util.TimeZone)
  langs:
  - java
  name: StdDateFormat
  nameWithType: StdDateFormat
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat
  type: Class
  package: com.fasterxml.jackson.databind.util
  summary: >-
    Default <xref uid="java.text.DateFormat" data-throw-if-not-resolved="false">DateFormat</xref> implementation used by standard Date serializers and deserializers. For serialization defaults to using an ISO-8601 compliant format (format String "yyyy-MM-dd'T'HH:mm:ss.SSSZ") and for deserialization, both ISO-8601 and RFC-1123.

    Note that \`Z\` in format String refers to ISO-8601 time offset notation which produces values like "-08:00" -- that is, full minute/hour combo without colon, and not using \`Z\` as alias for "+00:00". Inclusion of colon as separator, as default setting, started in Jackson 2.11: prior versions omitted it. Note that it is possible to enable/disable use of colon in time offset by using method <xref uid="com.fasterxml.jackson.databind.util.StdDateFormat.withColonInTimeZone*" data-throw-if-not-resolved="false">#withColonInTimeZone</xref> for creating new differently configured format instance, and configuring `ObjectMapper` with it.
  syntax:
    content: public class StdDateFormat extends DateFormat
  inheritance:
  - java.lang.Object
  - java.text.Format
  - java.text.DateFormat
  inheritedMembers:
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - java.text.DateFormat.clone()
  - java.text.DateFormat.equals(java.lang.Object)
  - java.text.DateFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
  - java.text.DateFormat.format(java.util.Date)
  - java.text.DateFormat.format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)
  - java.text.DateFormat.getAvailableLocales()
  - java.text.DateFormat.getCalendar()
  - java.text.DateFormat.getDateInstance()
  - java.text.DateFormat.getDateInstance(int)
  - java.text.DateFormat.getDateInstance(int,java.util.Locale)
  - java.text.DateFormat.getDateTimeInstance()
  - java.text.DateFormat.getDateTimeInstance(int,int)
  - java.text.DateFormat.getDateTimeInstance(int,int,java.util.Locale)
  - java.text.DateFormat.getInstance()
  - java.text.DateFormat.getNumberFormat()
  - java.text.DateFormat.getTimeInstance()
  - java.text.DateFormat.getTimeInstance(int)
  - java.text.DateFormat.getTimeInstance(int,java.util.Locale)
  - java.text.DateFormat.getTimeZone()
  - java.text.DateFormat.hashCode()
  - java.text.DateFormat.isLenient()
  - java.text.DateFormat.parse(java.lang.String)
  - java.text.DateFormat.parse(java.lang.String,java.text.ParsePosition)
  - java.text.DateFormat.parseObject(java.lang.String,java.text.ParsePosition)
  - java.text.DateFormat.setCalendar(java.util.Calendar)
  - java.text.DateFormat.setLenient(boolean)
  - java.text.DateFormat.setNumberFormat(java.text.NumberFormat)
  - java.text.DateFormat.setTimeZone(java.util.TimeZone)
  - java.text.Format.format(java.lang.Object)
  - java.text.Format.formatToCharacterIterator(java.lang.Object)
  - java.text.Format.parseObject(java.lang.String)
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.<T>_equals(T,T)
  id: <T>_equals(T,T)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: <T>_equals(T value1, T value2)
  nameWithType: StdDateFormat.<T>_equals(T value1, T value2)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.<T>_equals(T value1, T value2)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat._equals*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected static boolean <T>_equals(T value1, T value2)
    parameters:
    - id: value1
      type: T
    - id: value2
      type: T
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.ALL_FORMATS
  id: ALL_FORMATS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: ALL_FORMATS
  nameWithType: StdDateFormat.ALL_FORMATS
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.ALL_FORMATS
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: For error messages we'll also need a list of all formats.
  syntax:
    content: protected static final String[] ALL_FORMATS
    return:
      type: java.lang.String[]
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.CALENDAR
  id: CALENDAR
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: CALENDAR
  nameWithType: StdDateFormat.CALENDAR
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.CALENDAR
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: Blueprint "Calendar" instance for use during formatting. Cannot be used as is, due to thread-safety issues, but can be used for constructing actual instances more cheaply by cloning.
  syntax:
    content: protected static final Calendar CALENDAR
    return:
      type: java.util.Calendar
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_RFC1123
  id: DATE_FORMAT_RFC1123
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: DATE_FORMAT_RFC1123
  nameWithType: StdDateFormat.DATE_FORMAT_RFC1123
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_RFC1123
  type: Field
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected static final DateFormat DATE_FORMAT_RFC1123
    return:
      type: java.text.DateFormat
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_ISO8601
  id: DATE_FORMAT_STR_ISO8601
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: DATE_FORMAT_STR_ISO8601
  nameWithType: StdDateFormat.DATE_FORMAT_STR_ISO8601
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_ISO8601
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: Defines a commonly used date format that conforms to ISO-8601 date formatting standard, when it includes basic undecorated timezone definition.
  syntax:
    content: public static final String DATE_FORMAT_STR_ISO8601
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_PLAIN
  id: DATE_FORMAT_STR_PLAIN
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: DATE_FORMAT_STR_PLAIN
  nameWithType: StdDateFormat.DATE_FORMAT_STR_PLAIN
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_PLAIN
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: 'ISO-8601 with just the Date part, no time: needed for error messages'
  syntax:
    content: protected static final String DATE_FORMAT_STR_PLAIN
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_RFC1123
  id: DATE_FORMAT_STR_RFC1123
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: DATE_FORMAT_STR_RFC1123
  nameWithType: StdDateFormat.DATE_FORMAT_STR_RFC1123
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_RFC1123
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: This constant defines the date format specified by RFC 1123 / RFC 822. Used for parsing via \`SimpleDateFormat\` as well as error messages.
  syntax:
    content: protected static final String DATE_FORMAT_STR_RFC1123
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.DEFAULT_LOCALE
  id: DEFAULT_LOCALE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: DEFAULT_LOCALE
  nameWithType: StdDateFormat.DEFAULT_LOCALE
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.DEFAULT_LOCALE
  type: Field
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected static final Locale DEFAULT_LOCALE
    return:
      type: java.util.Locale
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.DEFAULT_TIMEZONE
  id: DEFAULT_TIMEZONE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: DEFAULT_TIMEZONE
  nameWithType: StdDateFormat.DEFAULT_TIMEZONE
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.DEFAULT_TIMEZONE
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: By default we use UTC for everything, with Jackson 2.7 and later (2.6 and earlier relied on GMT)
  syntax:
    content: protected static final TimeZone DEFAULT_TIMEZONE
    return:
      type: java.util.TimeZone
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.PATTERN_ISO8601
  id: PATTERN_ISO8601
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: PATTERN_ISO8601
  nameWithType: StdDateFormat.PATTERN_ISO8601
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.PATTERN_ISO8601
  type: Field
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected static final Pattern PATTERN_ISO8601
    return:
      type: java.util.regex.Pattern
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.PATTERN_PLAIN
  id: PATTERN_PLAIN
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: PATTERN_PLAIN
  nameWithType: StdDateFormat.PATTERN_PLAIN
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.PATTERN_PLAIN
  type: Field
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected static final Pattern PATTERN_PLAIN
    return:
      type: java.util.regex.Pattern
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.PATTERN_PLAIN_STR
  id: PATTERN_PLAIN_STR
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: PATTERN_PLAIN_STR
  nameWithType: StdDateFormat.PATTERN_PLAIN_STR
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.PATTERN_PLAIN_STR
  type: Field
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected static final String PATTERN_PLAIN_STR
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat()
  id: StdDateFormat()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: StdDateFormat()
  nameWithType: StdDateFormat.StdDateFormat()
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat()
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public StdDateFormat()
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat(java.util.TimeZone,java.util.Locale)
  id: StdDateFormat(java.util.TimeZone,java.util.Locale)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: StdDateFormat(TimeZone tz, Locale loc)
  nameWithType: StdDateFormat.StdDateFormat(TimeZone tz, Locale loc)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat(TimeZone tz, Locale loc)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public StdDateFormat(TimeZone tz, Locale loc)
    parameters:
    - id: tz
      type: java.util.TimeZone
    - id: loc
      type: java.util.Locale
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat(java.util.TimeZone,java.util.Locale,java.lang.Boolean)
  id: StdDateFormat(java.util.TimeZone,java.util.Locale,java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: StdDateFormat(TimeZone tz, Locale loc, Boolean lenient)
  nameWithType: StdDateFormat.StdDateFormat(TimeZone tz, Locale loc, Boolean lenient)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat(TimeZone tz, Locale loc, Boolean lenient)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected StdDateFormat(TimeZone tz, Locale loc, Boolean lenient)
    parameters:
    - id: tz
      type: java.util.TimeZone
    - id: loc
      type: java.util.Locale
    - id: lenient
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat(java.util.TimeZone,java.util.Locale,java.lang.Boolean,boolean)
  id: StdDateFormat(java.util.TimeZone,java.util.Locale,java.lang.Boolean,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: StdDateFormat(TimeZone tz, Locale loc, Boolean lenient, boolean formatTzOffsetWithColon)
  nameWithType: StdDateFormat.StdDateFormat(TimeZone tz, Locale loc, Boolean lenient, boolean formatTzOffsetWithColon)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat(TimeZone tz, Locale loc, Boolean lenient, boolean formatTzOffsetWithColon)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat*
  type: Constructor
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected StdDateFormat(TimeZone tz, Locale loc, Boolean lenient, boolean formatTzOffsetWithColon)
    parameters:
    - id: tz
      type: java.util.TimeZone
    - id: loc
      type: java.util.Locale
    - id: lenient
      type: java.lang.Boolean
    - id: formatTzOffsetWithColon
      type: boolean
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._clearFormats()
  id: _clearFormats()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: _clearFormats()
  nameWithType: StdDateFormat._clearFormats()
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._clearFormats()
  overload: com.fasterxml.jackson.databind.util.StdDateFormat._clearFormats*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected void _clearFormats()
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._format(java.util.TimeZone,java.util.Locale,java.util.Date,java.lang.StringBuffer)
  id: _format(java.util.TimeZone,java.util.Locale,java.util.Date,java.lang.StringBuffer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: _format(TimeZone tz, Locale loc, Date date, StringBuffer buffer)
  nameWithType: StdDateFormat._format(TimeZone tz, Locale loc, Date date, StringBuffer buffer)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._format(TimeZone tz, Locale loc, Date date, StringBuffer buffer)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat._format*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected void _format(TimeZone tz, Locale loc, Date date, StringBuffer buffer)
    parameters:
    - id: tz
      type: java.util.TimeZone
    - id: loc
      type: java.util.Locale
    - id: date
      type: java.util.Date
    - id: buffer
      type: java.lang.StringBuffer
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._formatBCEYear(java.lang.StringBuffer,int)
  id: _formatBCEYear(java.lang.StringBuffer,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: _formatBCEYear(StringBuffer buffer, int bceYearNoSign)
  nameWithType: StdDateFormat._formatBCEYear(StringBuffer buffer, int bceYearNoSign)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._formatBCEYear(StringBuffer buffer, int bceYearNoSign)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat._formatBCEYear*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected void _formatBCEYear(StringBuffer buffer, int bceYearNoSign)
    parameters:
    - id: buffer
      type: java.lang.StringBuffer
    - id: bceYearNoSign
      type: int
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._getCalendar(java.util.TimeZone)
  id: _getCalendar(java.util.TimeZone)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: _getCalendar(TimeZone tz)
  nameWithType: StdDateFormat._getCalendar(TimeZone tz)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._getCalendar(TimeZone tz)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat._getCalendar*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected Calendar _getCalendar(TimeZone tz)
    parameters:
    - id: tz
      type: java.util.TimeZone
    return:
      type: java.util.Calendar
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._lenient
  id: _lenient
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: _lenient
  nameWithType: StdDateFormat._lenient
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._lenient
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: >-
    Explicit override for leniency, if specified.


    Cannot be \`final\` because <xref uid="com.fasterxml.jackson.databind.util.StdDateFormat.setLenient(boolean)" data-throw-if-not-resolved="false">#setLenient(boolean)</xref> returns \`void\`.
  syntax:
    content: protected Boolean _lenient
    return:
      type: java.lang.Boolean
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._locale
  id: _locale
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: _locale
  nameWithType: StdDateFormat._locale
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._locale
  type: Field
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected final Locale _locale
    return:
      type: java.util.Locale
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._parseAsISO8601(java.lang.String,java.text.ParsePosition)
  id: _parseAsISO8601(java.lang.String,java.text.ParsePosition)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: _parseAsISO8601(String dateStr, ParsePosition bogus)
  nameWithType: StdDateFormat._parseAsISO8601(String dateStr, ParsePosition bogus)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._parseAsISO8601(String dateStr, ParsePosition bogus)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat._parseAsISO8601*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected Date _parseAsISO8601(String dateStr, ParsePosition bogus)
    parameters:
    - id: dateStr
      type: java.lang.String
    - id: bogus
      type: java.text.ParsePosition
    return:
      type: java.util.Date
  exceptions:
  - type: java.lang.IllegalArgumentException
  - type: java.text.ParseException
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._parseDate(java.lang.String,java.text.ParsePosition)
  id: _parseDate(java.lang.String,java.text.ParsePosition)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: _parseDate(String dateStr, ParsePosition pos)
  nameWithType: StdDateFormat._parseDate(String dateStr, ParsePosition pos)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._parseDate(String dateStr, ParsePosition pos)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat._parseDate*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected Date _parseDate(String dateStr, ParsePosition pos)
    parameters:
    - id: dateStr
      type: java.lang.String
    - id: pos
      type: java.text.ParsePosition
    return:
      type: java.util.Date
  exceptions:
  - type: java.text.ParseException
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._timezone
  id: _timezone
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: _timezone
  nameWithType: StdDateFormat._timezone
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._timezone
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: Caller may want to explicitly override timezone to use; if so, we will have non-null value here.
  syntax:
    content: protected transient TimeZone _timezone
    return:
      type: java.util.TimeZone
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.clone()
  id: clone()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: clone()
  nameWithType: StdDateFormat.clone()
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.clone()
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.clone*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public StdDateFormat clone()
    return:
      type: com.fasterxml.jackson.databind.util.StdDateFormat
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: equals(Object o)
  nameWithType: StdDateFormat.equals(Object o)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.equals(Object o)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.equals*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)
  id: format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition)
  nameWithType: StdDateFormat.format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.format*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public StringBuffer format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition)
    parameters:
    - id: date
      type: java.util.Date
    - id: toAppendTo
      type: java.lang.StringBuffer
    - id: fieldPosition
      type: java.text.FieldPosition
    return:
      type: java.lang.StringBuffer
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.getDefaultTimeZone()
  id: getDefaultTimeZone()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: getDefaultTimeZone()
  nameWithType: StdDateFormat.getDefaultTimeZone()
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.getDefaultTimeZone()
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.getDefaultTimeZone*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public static TimeZone getDefaultTimeZone()
    return:
      type: java.util.TimeZone
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.getISO8601Format(java.util.TimeZone,java.util.Locale)
  id: getISO8601Format(java.util.TimeZone,java.util.Locale)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: getISO8601Format(TimeZone tz, Locale loc)
  nameWithType: StdDateFormat.getISO8601Format(TimeZone tz, Locale loc)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.getISO8601Format(TimeZone tz, Locale loc)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.getISO8601Format*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method for getting a non-shared DateFormat instance that uses specified timezone and can handle simple ISO-8601 compliant date format.
  syntax:
    content: public static DateFormat getISO8601Format(TimeZone tz, Locale loc)
    parameters:
    - id: tz
      type: java.util.TimeZone
    - id: loc
      type: java.util.Locale
    return:
      type: java.text.DateFormat
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.getRFC1123Format(java.util.TimeZone,java.util.Locale)
  id: getRFC1123Format(java.util.TimeZone,java.util.Locale)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: getRFC1123Format(TimeZone tz, Locale loc)
  nameWithType: StdDateFormat.getRFC1123Format(TimeZone tz, Locale loc)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.getRFC1123Format(TimeZone tz, Locale loc)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.getRFC1123Format*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method for getting a non-shared DateFormat instance that uses specific timezone and can handle RFC-1123 compliant date format.
  syntax:
    content: public static DateFormat getRFC1123Format(TimeZone tz, Locale loc)
    parameters:
    - id: tz
      type: java.util.TimeZone
    - id: loc
      type: java.util.Locale
    return:
      type: java.text.DateFormat
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.getTimeZone()
  id: getTimeZone()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: getTimeZone()
  nameWithType: StdDateFormat.getTimeZone()
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.getTimeZone()
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.getTimeZone*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public TimeZone getTimeZone()
    return:
      type: java.util.TimeZone
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: hashCode()
  nameWithType: StdDateFormat.hashCode()
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.hashCode()
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.hashCode*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.instance
  id: instance
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: instance
  nameWithType: StdDateFormat.instance
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.instance
  type: Field
  package: com.fasterxml.jackson.databind.util
  summary: A singleton instance can be used for cloning purposes, as a blueprint of sorts.
  syntax:
    content: public static final StdDateFormat instance
    return:
      type: com.fasterxml.jackson.databind.util.StdDateFormat
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.isColonIncludedInTimeZone()
  id: isColonIncludedInTimeZone()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: isColonIncludedInTimeZone()
  nameWithType: StdDateFormat.isColonIncludedInTimeZone()
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.isColonIncludedInTimeZone()
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.isColonIncludedInTimeZone*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: >-
    Accessor for checking whether this instance would include colon within timezone serialization or not: if \{code true\}, timezone offset is serialized like `-06:00`; if \{code false\} as `-0600`.


    NOTE: only relevant for serialization (formatting), as deserialization (parsing) always accepts optional colon but does not require it, regardless of this setting.
  syntax:
    content: public boolean isColonIncludedInTimeZone()
    return:
      type: boolean
      description: "<code>true</code> if a colon is to be inserted between the hours and minutes \n of the TZ offset when serializing as String; otherwise <code>false</code>"
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.isLenient()
  id: isLenient()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: isLenient()
  nameWithType: StdDateFormat.isLenient()
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.isLenient()
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.isLenient*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public boolean isLenient()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.looksLikeISO8601(java.lang.String)
  id: looksLikeISO8601(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: looksLikeISO8601(String dateStr)
  nameWithType: StdDateFormat.looksLikeISO8601(String dateStr)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.looksLikeISO8601(String dateStr)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.looksLikeISO8601*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Helper method used to figure out if input looks like valid ISO-8601 string.
  syntax:
    content: protected boolean looksLikeISO8601(String dateStr)
    parameters:
    - id: dateStr
      type: java.lang.String
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.parse(java.lang.String)
  id: parse(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: parse(String dateStr)
  nameWithType: StdDateFormat.parse(String dateStr)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.parse(String dateStr)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.parse*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public Date parse(String dateStr)
    parameters:
    - id: dateStr
      type: java.lang.String
    return:
      type: java.util.Date
  exceptions:
  - type: java.text.ParseException
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.parse(java.lang.String,java.text.ParsePosition)
  id: parse(java.lang.String,java.text.ParsePosition)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: parse(String dateStr, ParsePosition pos)
  nameWithType: StdDateFormat.parse(String dateStr, ParsePosition pos)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.parse(String dateStr, ParsePosition pos)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.parse*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public Date parse(String dateStr, ParsePosition pos)
    parameters:
    - id: dateStr
      type: java.lang.String
    - id: pos
      type: java.text.ParsePosition
    return:
      type: java.util.Date
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.parseAsISO8601(java.lang.String,java.text.ParsePosition)
  id: parseAsISO8601(java.lang.String,java.text.ParsePosition)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: parseAsISO8601(String dateStr, ParsePosition pos)
  nameWithType: StdDateFormat.parseAsISO8601(String dateStr, ParsePosition pos)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.parseAsISO8601(String dateStr, ParsePosition pos)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.parseAsISO8601*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected Date parseAsISO8601(String dateStr, ParsePosition pos)
    parameters:
    - id: dateStr
      type: java.lang.String
    - id: pos
      type: java.text.ParsePosition
    return:
      type: java.util.Date
  exceptions:
  - type: java.text.ParseException
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.parseAsRFC1123(java.lang.String,java.text.ParsePosition)
  id: parseAsRFC1123(java.lang.String,java.text.ParsePosition)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: parseAsRFC1123(String dateStr, ParsePosition pos)
  nameWithType: StdDateFormat.parseAsRFC1123(String dateStr, ParsePosition pos)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.parseAsRFC1123(String dateStr, ParsePosition pos)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.parseAsRFC1123*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: protected Date parseAsRFC1123(String dateStr, ParsePosition pos)
    parameters:
    - id: dateStr
      type: java.lang.String
    - id: pos
      type: java.text.ParsePosition
    return:
      type: java.util.Date
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.setLenient(boolean)
  id: setLenient(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: setLenient(boolean enabled)
  nameWithType: StdDateFormat.setLenient(boolean enabled)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.setLenient(boolean enabled)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.setLenient*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Need to override since we need to keep track of leniency locally, and not via underlying <xref uid="java.util.Calendar" data-throw-if-not-resolved="false">Calendar</xref> instance like base class does.
  syntax:
    content: public void setLenient(boolean enabled)
    parameters:
    - id: enabled
      type: boolean
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.setTimeZone(java.util.TimeZone)
  id: setTimeZone(java.util.TimeZone)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: setTimeZone(TimeZone tz)
  nameWithType: StdDateFormat.setTimeZone(TimeZone tz)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.setTimeZone(TimeZone tz)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.setTimeZone*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public void setTimeZone(TimeZone tz)
    parameters:
    - id: tz
      type: java.util.TimeZone
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.toPattern()
  id: toPattern()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: toPattern()
  nameWithType: StdDateFormat.toPattern()
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.toPattern()
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.toPattern*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public String toPattern()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: toString()
  nameWithType: StdDateFormat.toString()
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.toString()
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.toString*
  type: Method
  package: com.fasterxml.jackson.databind.util
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.withColonInTimeZone(boolean)
  id: withColonInTimeZone(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: withColonInTimeZone(boolean b)
  nameWithType: StdDateFormat.withColonInTimeZone(boolean b)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.withColonInTimeZone(boolean b)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.withColonInTimeZone*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: "\"Mutant factory\" method that will return an instance that has specified handling of colon when serializing timezone (timezone either written like `+0500` or `+05:00`): either `this` instance (if setting would not change), or newly constructed instance with desired setting for colon inclusion.\n\nNOTE: does NOT affect deserialization as colon is optional accepted but not required -- put another way, either serialization is accepted by this class."
  syntax:
    content: public StdDateFormat withColonInTimeZone(boolean b)
    parameters:
    - id: b
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.util.StdDateFormat
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.withLenient(java.lang.Boolean)
  id: withLenient(java.lang.Boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: withLenient(Boolean b)
  nameWithType: StdDateFormat.withLenient(Boolean b)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.withLenient(Boolean b)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.withLenient*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: "\"Mutant factory\" method that will return an instance that has specified leniency setting: either `this` instance (if setting would not change), or newly constructed instance."
  syntax:
    content: public StdDateFormat withLenient(Boolean b)
    parameters:
    - id: b
      type: java.lang.Boolean
    return:
      type: com.fasterxml.jackson.databind.util.StdDateFormat
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.withLocale(java.util.Locale)
  id: withLocale(java.util.Locale)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: withLocale(Locale loc)
  nameWithType: StdDateFormat.withLocale(Locale loc)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.withLocale(Locale loc)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.withLocale*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: "\"Mutant factory\" method that will return an instance that uses specified `Locale`: either `this` instance (if setting would not change), or newly constructed instance with different `Locale` to use."
  syntax:
    content: public StdDateFormat withLocale(Locale loc)
    parameters:
    - id: loc
      type: java.util.Locale
    return:
      type: com.fasterxml.jackson.databind.util.StdDateFormat
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.withTimeZone(java.util.TimeZone)
  id: withTimeZone(java.util.TimeZone)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.util.StdDateFormat
  langs:
  - java
  name: withTimeZone(TimeZone tz)
  nameWithType: StdDateFormat.withTimeZone(TimeZone tz)
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.withTimeZone(TimeZone tz)
  overload: com.fasterxml.jackson.databind.util.StdDateFormat.withTimeZone*
  type: Method
  package: com.fasterxml.jackson.databind.util
  summary: Method used for creating a new instance with specified timezone; if no timezone specified, defaults to the default timezone (UTC).
  syntax:
    content: public StdDateFormat withTimeZone(TimeZone tz)
    parameters:
    - id: tz
      type: java.util.TimeZone
    return:
      type: com.fasterxml.jackson.databind.util.StdDateFormat
references:
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat*
  name: StdDateFormat
  nameWithType: StdDateFormat.StdDateFormat
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.StdDateFormat
  package: com.fasterxml.jackson.databind.util
- uid: java.util.TimeZone
  spec.java:
  - uid: java.util.TimeZone
    name: TimeZone
    fullName: java.util.TimeZone
- uid: java.util.Locale
  spec.java:
  - uid: java.util.Locale
    name: Locale
    fullName: java.util.Locale
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.getDefaultTimeZone*
  name: getDefaultTimeZone
  nameWithType: StdDateFormat.getDefaultTimeZone
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.getDefaultTimeZone
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.withTimeZone*
  name: withTimeZone
  nameWithType: StdDateFormat.withTimeZone
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.withTimeZone
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.withLocale*
  name: withLocale
  nameWithType: StdDateFormat.withLocale
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.withLocale
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.withLenient*
  name: withLenient
  nameWithType: StdDateFormat.withLenient
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.withLenient
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.withColonInTimeZone*
  name: withColonInTimeZone
  nameWithType: StdDateFormat.withColonInTimeZone
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.withColonInTimeZone
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.clone*
  name: clone
  nameWithType: StdDateFormat.clone
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.clone
  package: com.fasterxml.jackson.databind.util
- uid: java.text.DateFormat
  spec.java:
  - uid: java.text.DateFormat
    name: DateFormat
    fullName: java.text.DateFormat
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.getISO8601Format*
  name: getISO8601Format
  nameWithType: StdDateFormat.getISO8601Format
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.getISO8601Format
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.getRFC1123Format*
  name: getRFC1123Format
  nameWithType: StdDateFormat.getRFC1123Format
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.getRFC1123Format
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.getTimeZone*
  name: getTimeZone
  nameWithType: StdDateFormat.getTimeZone
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.getTimeZone
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.setTimeZone*
  name: setTimeZone
  nameWithType: StdDateFormat.setTimeZone
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.setTimeZone
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.setLenient*
  name: setLenient
  nameWithType: StdDateFormat.setLenient
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.setLenient
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.isLenient*
  name: isLenient
  nameWithType: StdDateFormat.isLenient
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.isLenient
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.isColonIncludedInTimeZone*
  name: isColonIncludedInTimeZone
  nameWithType: StdDateFormat.isColonIncludedInTimeZone
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.isColonIncludedInTimeZone
  package: com.fasterxml.jackson.databind.util
- uid: java.text.ParseException
  spec.java:
  - uid: java.text.ParseException
    name: ParseException
    fullName: java.text.ParseException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.util.Date
  spec.java:
  - uid: java.util.Date
    name: Date
    fullName: java.util.Date
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.parse*
  name: parse
  nameWithType: StdDateFormat.parse
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.parse
  package: com.fasterxml.jackson.databind.util
- uid: java.text.ParsePosition
  spec.java:
  - uid: java.text.ParsePosition
    name: ParsePosition
    fullName: java.text.ParsePosition
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._parseDate*
  name: _parseDate
  nameWithType: StdDateFormat._parseDate
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._parseDate
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.StringBuffer
  spec.java:
  - uid: java.lang.StringBuffer
    name: StringBuffer
    fullName: java.lang.StringBuffer
- uid: java.text.FieldPosition
  spec.java:
  - uid: java.text.FieldPosition
    name: FieldPosition
    fullName: java.text.FieldPosition
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.format*
  name: format
  nameWithType: StdDateFormat.format
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.format
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._format*
  name: _format
  nameWithType: StdDateFormat._format
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._format
  package: com.fasterxml.jackson.databind.util
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._formatBCEYear*
  name: _formatBCEYear
  nameWithType: StdDateFormat._formatBCEYear
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._formatBCEYear
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.toString*
  name: toString
  nameWithType: StdDateFormat.toString
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.toString
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.toPattern*
  name: toPattern
  nameWithType: StdDateFormat.toPattern
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.toPattern
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.equals*
  name: equals
  nameWithType: StdDateFormat.equals
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.equals
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.hashCode*
  name: hashCode
  nameWithType: StdDateFormat.hashCode
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.hashCode
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.looksLikeISO8601*
  name: looksLikeISO8601
  nameWithType: StdDateFormat.looksLikeISO8601
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.looksLikeISO8601
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.parseAsISO8601*
  name: parseAsISO8601
  nameWithType: StdDateFormat.parseAsISO8601
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.parseAsISO8601
  package: com.fasterxml.jackson.databind.util
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._parseAsISO8601*
  name: _parseAsISO8601
  nameWithType: StdDateFormat._parseAsISO8601
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._parseAsISO8601
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat.parseAsRFC1123*
  name: parseAsRFC1123
  nameWithType: StdDateFormat.parseAsRFC1123
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.parseAsRFC1123
  package: com.fasterxml.jackson.databind.util
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._clearFormats*
  name: _clearFormats
  nameWithType: StdDateFormat._clearFormats
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._clearFormats
  package: com.fasterxml.jackson.databind.util
- uid: java.util.Calendar
  spec.java:
  - uid: java.util.Calendar
    name: Calendar
    fullName: java.util.Calendar
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._getCalendar*
  name: _getCalendar
  nameWithType: StdDateFormat._getCalendar
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat._getCalendar
  package: com.fasterxml.jackson.databind.util
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.fasterxml.jackson.databind.util.StdDateFormat._equals*
  name: <T>_equals
  nameWithType: StdDateFormat.<T>_equals
  fullName: com.fasterxml.jackson.databind.util.StdDateFormat.<T>_equals
  package: com.fasterxml.jackson.databind.util
- uid: java.util.regex.Pattern
  spec.java:
  - uid: java.util.regex.Pattern
    name: Pattern
    fullName: java.util.regex.Pattern
- uid: java.lang.String[]
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.text.DateFormat.getNumberFormat()
  name: DateFormat.getNumberFormat()
  nameWithType: DateFormat.getNumberFormat()
  fullName: java.text.DateFormat.getNumberFormat()
- uid: java.text.DateFormat.getInstance()
  name: DateFormat.getInstance()
  nameWithType: DateFormat.getInstance()
  fullName: java.text.DateFormat.getInstance()
- uid: java.text.Format.parseObject(java.lang.String)
  name: Format.parseObject(String)
  nameWithType: Format.parseObject(String)
  fullName: java.text.Format.parseObject(java.lang.String)
- uid: java.text.DateFormat.isLenient()
  name: DateFormat.isLenient()
  nameWithType: DateFormat.isLenient()
  fullName: java.text.DateFormat.isLenient()
- uid: java.text.DateFormat.equals(java.lang.Object)
  name: DateFormat.equals(Object)
  nameWithType: DateFormat.equals(Object)
  fullName: java.text.DateFormat.equals(java.lang.Object)
- uid: java.text.DateFormat.hashCode()
  name: DateFormat.hashCode()
  nameWithType: DateFormat.hashCode()
  fullName: java.text.DateFormat.hashCode()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.text.DateFormat.format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)
  name: DateFormat.format(Date,StringBuffer,FieldPosition)
  nameWithType: DateFormat.format(Date,StringBuffer,FieldPosition)
  fullName: java.text.DateFormat.format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)
- uid: java.text.Format.formatToCharacterIterator(java.lang.Object)
  name: Format.formatToCharacterIterator(Object)
  nameWithType: Format.formatToCharacterIterator(Object)
  fullName: java.text.Format.formatToCharacterIterator(java.lang.Object)
- uid: java.text.DateFormat.getCalendar()
  name: DateFormat.getCalendar()
  nameWithType: DateFormat.getCalendar()
  fullName: java.text.DateFormat.getCalendar()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.text.DateFormat.setNumberFormat(java.text.NumberFormat)
  name: DateFormat.setNumberFormat(NumberFormat)
  nameWithType: DateFormat.setNumberFormat(NumberFormat)
  fullName: java.text.DateFormat.setNumberFormat(java.text.NumberFormat)
- uid: java.text.DateFormat.getTimeZone()
  name: DateFormat.getTimeZone()
  nameWithType: DateFormat.getTimeZone()
  fullName: java.text.DateFormat.getTimeZone()
- uid: java.text.DateFormat.format(java.util.Date)
  name: DateFormat.format(Date)
  nameWithType: DateFormat.format(Date)
  fullName: java.text.DateFormat.format(java.util.Date)
- uid: java.text.DateFormat.getDateTimeInstance(int,int)
  name: DateFormat.getDateTimeInstance(int,int)
  nameWithType: DateFormat.getDateTimeInstance(int,int)
  fullName: java.text.DateFormat.getDateTimeInstance(int,int)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.text.DateFormat.getTimeInstance(int,java.util.Locale)
  name: DateFormat.getTimeInstance(int,Locale)
  nameWithType: DateFormat.getTimeInstance(int,Locale)
  fullName: java.text.DateFormat.getTimeInstance(int,java.util.Locale)
- uid: java.text.DateFormat.getDateTimeInstance()
  name: DateFormat.getDateTimeInstance()
  nameWithType: DateFormat.getDateTimeInstance()
  fullName: java.text.DateFormat.getDateTimeInstance()
- uid: java.text.DateFormat.clone()
  name: DateFormat.clone()
  nameWithType: DateFormat.clone()
  fullName: java.text.DateFormat.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.text.DateFormat.getDateInstance(int)
  name: DateFormat.getDateInstance(int)
  nameWithType: DateFormat.getDateInstance(int)
  fullName: java.text.DateFormat.getDateInstance(int)
- uid: java.text.DateFormat.setCalendar(java.util.Calendar)
  name: DateFormat.setCalendar(Calendar)
  nameWithType: DateFormat.setCalendar(Calendar)
  fullName: java.text.DateFormat.setCalendar(java.util.Calendar)
- uid: java.text.DateFormat.getTimeInstance()
  name: DateFormat.getTimeInstance()
  nameWithType: DateFormat.getTimeInstance()
  fullName: java.text.DateFormat.getTimeInstance()
- uid: java.text.DateFormat.getDateInstance(int,java.util.Locale)
  name: DateFormat.getDateInstance(int,Locale)
  nameWithType: DateFormat.getDateInstance(int,Locale)
  fullName: java.text.DateFormat.getDateInstance(int,java.util.Locale)
- uid: java.text.DateFormat.setLenient(boolean)
  name: DateFormat.setLenient(boolean)
  nameWithType: DateFormat.setLenient(boolean)
  fullName: java.text.DateFormat.setLenient(boolean)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.text.Format.format(java.lang.Object)
  name: Format.format(Object)
  nameWithType: Format.format(Object)
  fullName: java.text.Format.format(java.lang.Object)
- uid: java.text.DateFormat.getDateTimeInstance(int,int,java.util.Locale)
  name: DateFormat.getDateTimeInstance(int,int,Locale)
  nameWithType: DateFormat.getDateTimeInstance(int,int,Locale)
  fullName: java.text.DateFormat.getDateTimeInstance(int,int,java.util.Locale)
- uid: java.text.DateFormat.parse(java.lang.String,java.text.ParsePosition)
  name: DateFormat.parse(String,ParsePosition)
  nameWithType: DateFormat.parse(String,ParsePosition)
  fullName: java.text.DateFormat.parse(java.lang.String,java.text.ParsePosition)
- uid: java.text.DateFormat.getDateInstance()
  name: DateFormat.getDateInstance()
  nameWithType: DateFormat.getDateInstance()
  fullName: java.text.DateFormat.getDateInstance()
- uid: java.text.DateFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
  name: DateFormat.format(Object,StringBuffer,FieldPosition)
  nameWithType: DateFormat.format(Object,StringBuffer,FieldPosition)
  fullName: java.text.DateFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
- uid: java.text.DateFormat.getAvailableLocales()
  name: DateFormat.getAvailableLocales()
  nameWithType: DateFormat.getAvailableLocales()
  fullName: java.text.DateFormat.getAvailableLocales()
- uid: java.text.DateFormat.setTimeZone(java.util.TimeZone)
  name: DateFormat.setTimeZone(TimeZone)
  nameWithType: DateFormat.setTimeZone(TimeZone)
  fullName: java.text.DateFormat.setTimeZone(java.util.TimeZone)
- uid: java.text.DateFormat.parseObject(java.lang.String,java.text.ParsePosition)
  name: DateFormat.parseObject(String,ParsePosition)
  nameWithType: DateFormat.parseObject(String,ParsePosition)
  fullName: java.text.DateFormat.parseObject(java.lang.String,java.text.ParsePosition)
- uid: java.text.DateFormat.getTimeInstance(int)
  name: DateFormat.getTimeInstance(int)
  nameWithType: DateFormat.getTimeInstance(int)
  fullName: java.text.DateFormat.getTimeInstance(int)
- uid: java.text.DateFormat.parse(java.lang.String)
  name: DateFormat.parse(String)
  nameWithType: DateFormat.parse(String)
  fullName: java.text.DateFormat.parse(java.lang.String)
