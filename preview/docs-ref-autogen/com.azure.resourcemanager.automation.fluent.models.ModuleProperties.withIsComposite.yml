### YamlMime:JavaMember
uid: "com.azure.resourcemanager.automation.fluent.models.ModuleProperties.withIsComposite*"
fullName: "com.azure.resourcemanager.automation.fluent.models.ModuleProperties.withIsComposite"
name: "withIsComposite"
nameWithType: "ModuleProperties.withIsComposite"
members:
- uid: "com.azure.resourcemanager.automation.fluent.models.ModuleProperties.withIsComposite(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.automation.fluent.models.ModuleProperties.withIsComposite(Boolean isComposite)"
  name: "withIsComposite(Boolean isComposite)"
  nameWithType: "ModuleProperties.withIsComposite(Boolean isComposite)"
  summary: "Set the isComposite property: Gets or sets type of module, if its composite or not."
  parameters:
  - description: "the isComposite value to set."
    name: "isComposite"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ModuleProperties withIsComposite(Boolean isComposite)"
  desc: "Set the isComposite property: Gets or sets type of module, if its composite or not."
  returns:
    description: "the ModuleProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.automation.fluent.models.ModuleProperties?alt=com.azure.resourcemanager.automation.fluent.models.ModuleProperties&text=ModuleProperties\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.automation.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-automation:1.0.0-beta.2
