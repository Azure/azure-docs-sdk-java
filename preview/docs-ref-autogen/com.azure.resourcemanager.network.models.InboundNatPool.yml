### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.network.models.InboundNatPool
  id: InboundNatPool
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models
  children:
  - com.azure.resourcemanager.network.models.InboundNatPool.InboundNatPool()
  - com.azure.resourcemanager.network.models.InboundNatPool.backendPort()
  - com.azure.resourcemanager.network.models.InboundNatPool.enableFloatingIp()
  - com.azure.resourcemanager.network.models.InboundNatPool.enableTcpReset()
  - com.azure.resourcemanager.network.models.InboundNatPool.etag()
  - com.azure.resourcemanager.network.models.InboundNatPool.frontendIpConfiguration()
  - com.azure.resourcemanager.network.models.InboundNatPool.frontendPortRangeEnd()
  - com.azure.resourcemanager.network.models.InboundNatPool.frontendPortRangeStart()
  - com.azure.resourcemanager.network.models.InboundNatPool.idleTimeoutInMinutes()
  - com.azure.resourcemanager.network.models.InboundNatPool.name()
  - com.azure.resourcemanager.network.models.InboundNatPool.protocol()
  - com.azure.resourcemanager.network.models.InboundNatPool.provisioningState()
  - com.azure.resourcemanager.network.models.InboundNatPool.type()
  - com.azure.resourcemanager.network.models.InboundNatPool.validate()
  - com.azure.resourcemanager.network.models.InboundNatPool.withBackendPort(java.lang.Integer)
  - com.azure.resourcemanager.network.models.InboundNatPool.withEnableFloatingIp(java.lang.Boolean)
  - com.azure.resourcemanager.network.models.InboundNatPool.withEnableTcpReset(java.lang.Boolean)
  - com.azure.resourcemanager.network.models.InboundNatPool.withEtag(java.lang.String)
  - com.azure.resourcemanager.network.models.InboundNatPool.withFrontendIpConfiguration(com.azure.core.management.SubResource)
  - com.azure.resourcemanager.network.models.InboundNatPool.withFrontendPortRangeEnd(java.lang.Integer)
  - com.azure.resourcemanager.network.models.InboundNatPool.withFrontendPortRangeStart(java.lang.Integer)
  - com.azure.resourcemanager.network.models.InboundNatPool.withIdleTimeoutInMinutes(java.lang.Integer)
  - com.azure.resourcemanager.network.models.InboundNatPool.withName(java.lang.String)
  - com.azure.resourcemanager.network.models.InboundNatPool.withProtocol(com.azure.resourcemanager.network.models.TransportProtocol)
  - com.azure.resourcemanager.network.models.InboundNatPool.withProvisioningState(java.lang.String)
  langs:
  - java
  name: InboundNatPool
  nameWithType: InboundNatPool
  fullName: com.azure.resourcemanager.network.models.InboundNatPool
  type: Class
  package: com.azure.resourcemanager.network.models
  summary: The InboundNatPool model.
  syntax:
    content: public class InboundNatPool extends SubResource
  inheritance:
  - java.lang.Object
  - com.azure.core.management.SubResource
  inheritedMembers:
  - com.azure.core.management.SubResource.id()
  - com.azure.core.management.SubResource.withId(java.lang.String)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.network.models.InboundNatPool.InboundNatPool()
  id: InboundNatPool()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: InboundNatPool()
  nameWithType: InboundNatPool.InboundNatPool()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.InboundNatPool()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.InboundNatPool*
  type: Constructor
  package: com.azure.resourcemanager.network.models
  syntax:
    content: public InboundNatPool()
- uid: com.azure.resourcemanager.network.models.InboundNatPool.backendPort()
  id: backendPort()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: backendPort()
  nameWithType: InboundNatPool.backendPort()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.backendPort()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.backendPort*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Get the backendPort property: The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.'
  syntax:
    content: public Integer backendPort()
    return:
      type: java.lang.Integer
      description: the backendPort value.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.enableFloatingIp()
  id: enableFloatingIp()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: enableFloatingIp()
  nameWithType: InboundNatPool.enableFloatingIp()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.enableFloatingIp()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.enableFloatingIp*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: "Get the enableFloatingIp property: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."
  syntax:
    content: public Boolean enableFloatingIp()
    return:
      type: java.lang.Boolean
      description: the enableFloatingIp value.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.enableTcpReset()
  id: enableTcpReset()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: enableTcpReset()
  nameWithType: InboundNatPool.enableTcpReset()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.enableTcpReset()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.enableTcpReset*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Get the enableTcpReset property: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.'
  syntax:
    content: public Boolean enableTcpReset()
    return:
      type: java.lang.Boolean
      description: the enableTcpReset value.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.etag()
  id: etag()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: etag()
  nameWithType: InboundNatPool.etag()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.etag()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.etag*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Get the etag property: A unique read-only string that changes whenever the resource is updated.'
  syntax:
    content: public String etag()
    return:
      type: java.lang.String
      description: the etag value.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.frontendIpConfiguration()
  id: frontendIpConfiguration()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: frontendIpConfiguration()
  nameWithType: InboundNatPool.frontendIpConfiguration()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.frontendIpConfiguration()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.frontendIpConfiguration*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Get the frontendIpConfiguration property: A reference to frontend IP addresses.'
  syntax:
    content: public SubResource frontendIpConfiguration()
    return:
      type: com.azure.core.management.SubResource
      description: the frontendIpConfiguration value.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.frontendPortRangeEnd()
  id: frontendPortRangeEnd()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: frontendPortRangeEnd()
  nameWithType: InboundNatPool.frontendPortRangeEnd()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.frontendPortRangeEnd()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.frontendPortRangeEnd*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Get the frontendPortRangeEnd property: The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.'
  syntax:
    content: public Integer frontendPortRangeEnd()
    return:
      type: java.lang.Integer
      description: the frontendPortRangeEnd value.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.frontendPortRangeStart()
  id: frontendPortRangeStart()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: frontendPortRangeStart()
  nameWithType: InboundNatPool.frontendPortRangeStart()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.frontendPortRangeStart()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.frontendPortRangeStart*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Get the frontendPortRangeStart property: The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.'
  syntax:
    content: public Integer frontendPortRangeStart()
    return:
      type: java.lang.Integer
      description: the frontendPortRangeStart value.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.idleTimeoutInMinutes()
  id: idleTimeoutInMinutes()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: idleTimeoutInMinutes()
  nameWithType: InboundNatPool.idleTimeoutInMinutes()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.idleTimeoutInMinutes()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.idleTimeoutInMinutes*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Get the idleTimeoutInMinutes property: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.'
  syntax:
    content: public Integer idleTimeoutInMinutes()
    return:
      type: java.lang.Integer
      description: the idleTimeoutInMinutes value.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.name()
  id: name()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: name()
  nameWithType: InboundNatPool.name()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.name()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.name*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Get the name property: The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.'
  syntax:
    content: public String name()
    return:
      type: java.lang.String
      description: the name value.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.protocol()
  id: protocol()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: protocol()
  nameWithType: InboundNatPool.protocol()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.protocol()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.protocol*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Get the protocol property: The reference to the transport protocol used by the inbound NAT pool.'
  syntax:
    content: public TransportProtocol protocol()
    return:
      type: com.azure.resourcemanager.network.models.TransportProtocol
      description: the protocol value.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.provisioningState()
  id: provisioningState()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: provisioningState()
  nameWithType: InboundNatPool.provisioningState()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.provisioningState()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.provisioningState*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: "Get the provisioningState property: Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
  syntax:
    content: public String provisioningState()
    return:
      type: java.lang.String
      description: the provisioningState value.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.type()
  id: type()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: type()
  nameWithType: InboundNatPool.type()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.type()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.type*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Get the type property: Type of the resource.'
  syntax:
    content: public String type()
    return:
      type: java.lang.String
      description: the type value.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.validate()
  id: validate()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: validate()
  nameWithType: InboundNatPool.validate()
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.validate()
  overload: com.azure.resourcemanager.network.models.InboundNatPool.validate*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withBackendPort(java.lang.Integer)
  id: withBackendPort(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: withBackendPort(Integer backendPort)
  nameWithType: InboundNatPool.withBackendPort(Integer backendPort)
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withBackendPort(Integer backendPort)
  overload: com.azure.resourcemanager.network.models.InboundNatPool.withBackendPort*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Set the backendPort property: The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.'
  syntax:
    content: public InboundNatPool withBackendPort(Integer backendPort)
    parameters:
    - id: backendPort
      type: java.lang.Integer
      description: the backendPort value to set.
    return:
      type: com.azure.resourcemanager.network.models.InboundNatPool
      description: the InboundNatPool object itself.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withEnableFloatingIp(java.lang.Boolean)
  id: withEnableFloatingIp(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: withEnableFloatingIp(Boolean enableFloatingIp)
  nameWithType: InboundNatPool.withEnableFloatingIp(Boolean enableFloatingIp)
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withEnableFloatingIp(Boolean enableFloatingIp)
  overload: com.azure.resourcemanager.network.models.InboundNatPool.withEnableFloatingIp*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: "Set the enableFloatingIp property: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint."
  syntax:
    content: public InboundNatPool withEnableFloatingIp(Boolean enableFloatingIp)
    parameters:
    - id: enableFloatingIp
      type: java.lang.Boolean
      description: the enableFloatingIp value to set.
    return:
      type: com.azure.resourcemanager.network.models.InboundNatPool
      description: the InboundNatPool object itself.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withEnableTcpReset(java.lang.Boolean)
  id: withEnableTcpReset(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: withEnableTcpReset(Boolean enableTcpReset)
  nameWithType: InboundNatPool.withEnableTcpReset(Boolean enableTcpReset)
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withEnableTcpReset(Boolean enableTcpReset)
  overload: com.azure.resourcemanager.network.models.InboundNatPool.withEnableTcpReset*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Set the enableTcpReset property: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.'
  syntax:
    content: public InboundNatPool withEnableTcpReset(Boolean enableTcpReset)
    parameters:
    - id: enableTcpReset
      type: java.lang.Boolean
      description: the enableTcpReset value to set.
    return:
      type: com.azure.resourcemanager.network.models.InboundNatPool
      description: the InboundNatPool object itself.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withEtag(java.lang.String)
  id: withEtag(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: withEtag(String etag)
  nameWithType: InboundNatPool.withEtag(String etag)
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withEtag(String etag)
  overload: com.azure.resourcemanager.network.models.InboundNatPool.withEtag*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Set the etag property: A unique read-only string that changes whenever the resource is updated.'
  syntax:
    content: public InboundNatPool withEtag(String etag)
    parameters:
    - id: etag
      type: java.lang.String
      description: the etag value to set.
    return:
      type: com.azure.resourcemanager.network.models.InboundNatPool
      description: the InboundNatPool object itself.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendIpConfiguration(com.azure.core.management.SubResource)
  id: withFrontendIpConfiguration(com.azure.core.management.SubResource)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: withFrontendIpConfiguration(SubResource frontendIpConfiguration)
  nameWithType: InboundNatPool.withFrontendIpConfiguration(SubResource frontendIpConfiguration)
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendIpConfiguration(SubResource frontendIpConfiguration)
  overload: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendIpConfiguration*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Set the frontendIpConfiguration property: A reference to frontend IP addresses.'
  syntax:
    content: public InboundNatPool withFrontendIpConfiguration(SubResource frontendIpConfiguration)
    parameters:
    - id: frontendIpConfiguration
      type: com.azure.core.management.SubResource
      description: the frontendIpConfiguration value to set.
    return:
      type: com.azure.resourcemanager.network.models.InboundNatPool
      description: the InboundNatPool object itself.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendPortRangeEnd(java.lang.Integer)
  id: withFrontendPortRangeEnd(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: withFrontendPortRangeEnd(Integer frontendPortRangeEnd)
  nameWithType: InboundNatPool.withFrontendPortRangeEnd(Integer frontendPortRangeEnd)
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendPortRangeEnd(Integer frontendPortRangeEnd)
  overload: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendPortRangeEnd*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Set the frontendPortRangeEnd property: The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.'
  syntax:
    content: public InboundNatPool withFrontendPortRangeEnd(Integer frontendPortRangeEnd)
    parameters:
    - id: frontendPortRangeEnd
      type: java.lang.Integer
      description: the frontendPortRangeEnd value to set.
    return:
      type: com.azure.resourcemanager.network.models.InboundNatPool
      description: the InboundNatPool object itself.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendPortRangeStart(java.lang.Integer)
  id: withFrontendPortRangeStart(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: withFrontendPortRangeStart(Integer frontendPortRangeStart)
  nameWithType: InboundNatPool.withFrontendPortRangeStart(Integer frontendPortRangeStart)
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendPortRangeStart(Integer frontendPortRangeStart)
  overload: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendPortRangeStart*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Set the frontendPortRangeStart property: The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.'
  syntax:
    content: public InboundNatPool withFrontendPortRangeStart(Integer frontendPortRangeStart)
    parameters:
    - id: frontendPortRangeStart
      type: java.lang.Integer
      description: the frontendPortRangeStart value to set.
    return:
      type: com.azure.resourcemanager.network.models.InboundNatPool
      description: the InboundNatPool object itself.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withIdleTimeoutInMinutes(java.lang.Integer)
  id: withIdleTimeoutInMinutes(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: withIdleTimeoutInMinutes(Integer idleTimeoutInMinutes)
  nameWithType: InboundNatPool.withIdleTimeoutInMinutes(Integer idleTimeoutInMinutes)
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withIdleTimeoutInMinutes(Integer idleTimeoutInMinutes)
  overload: com.azure.resourcemanager.network.models.InboundNatPool.withIdleTimeoutInMinutes*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Set the idleTimeoutInMinutes property: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.'
  syntax:
    content: public InboundNatPool withIdleTimeoutInMinutes(Integer idleTimeoutInMinutes)
    parameters:
    - id: idleTimeoutInMinutes
      type: java.lang.Integer
      description: the idleTimeoutInMinutes value to set.
    return:
      type: com.azure.resourcemanager.network.models.InboundNatPool
      description: the InboundNatPool object itself.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withName(java.lang.String)
  id: withName(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: withName(String name)
  nameWithType: InboundNatPool.withName(String name)
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withName(String name)
  overload: com.azure.resourcemanager.network.models.InboundNatPool.withName*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Set the name property: The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.'
  syntax:
    content: public InboundNatPool withName(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: the name value to set.
    return:
      type: com.azure.resourcemanager.network.models.InboundNatPool
      description: the InboundNatPool object itself.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withProtocol(com.azure.resourcemanager.network.models.TransportProtocol)
  id: withProtocol(com.azure.resourcemanager.network.models.TransportProtocol)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: withProtocol(TransportProtocol protocol)
  nameWithType: InboundNatPool.withProtocol(TransportProtocol protocol)
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withProtocol(TransportProtocol protocol)
  overload: com.azure.resourcemanager.network.models.InboundNatPool.withProtocol*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: 'Set the protocol property: The reference to the transport protocol used by the inbound NAT pool.'
  syntax:
    content: public InboundNatPool withProtocol(TransportProtocol protocol)
    parameters:
    - id: protocol
      type: com.azure.resourcemanager.network.models.TransportProtocol
      description: the protocol value to set.
    return:
      type: com.azure.resourcemanager.network.models.InboundNatPool
      description: the InboundNatPool object itself.
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withProvisioningState(java.lang.String)
  id: withProvisioningState(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.models.InboundNatPool
  langs:
  - java
  name: withProvisioningState(String provisioningState)
  nameWithType: InboundNatPool.withProvisioningState(String provisioningState)
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withProvisioningState(String provisioningState)
  overload: com.azure.resourcemanager.network.models.InboundNatPool.withProvisioningState*
  type: Method
  package: com.azure.resourcemanager.network.models
  summary: "Set the provisioningState property: Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
  syntax:
    content: public InboundNatPool withProvisioningState(String provisioningState)
    parameters:
    - id: provisioningState
      type: java.lang.String
      description: the provisioningState value to set.
    return:
      type: com.azure.resourcemanager.network.models.InboundNatPool
      description: the InboundNatPool object itself.
references:
- uid: com.azure.resourcemanager.network.models.InboundNatPool.InboundNatPool*
  name: InboundNatPool
  nameWithType: InboundNatPool.InboundNatPool
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.InboundNatPool
  package: com.azure.resourcemanager.network.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.network.models.InboundNatPool.name*
  name: name
  nameWithType: InboundNatPool.name
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.name
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withName*
  name: withName
  nameWithType: InboundNatPool.withName
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withName
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.etag*
  name: etag
  nameWithType: InboundNatPool.etag
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.etag
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withEtag*
  name: withEtag
  nameWithType: InboundNatPool.withEtag
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withEtag
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.type*
  name: type
  nameWithType: InboundNatPool.type
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.type
  package: com.azure.resourcemanager.network.models
- uid: com.azure.core.management.SubResource
  spec.java:
  - uid: com.azure.core.management.SubResource
    name: SubResource
    fullName: com.azure.core.management.SubResource
- uid: com.azure.resourcemanager.network.models.InboundNatPool.frontendIpConfiguration*
  name: frontendIpConfiguration
  nameWithType: InboundNatPool.frontendIpConfiguration
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.frontendIpConfiguration
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendIpConfiguration*
  name: withFrontendIpConfiguration
  nameWithType: InboundNatPool.withFrontendIpConfiguration
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendIpConfiguration
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.TransportProtocol
  name: TransportProtocol
  nameWithType: TransportProtocol
  fullName: com.azure.resourcemanager.network.models.TransportProtocol
- uid: com.azure.resourcemanager.network.models.InboundNatPool.protocol*
  name: protocol
  nameWithType: InboundNatPool.protocol
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.protocol
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withProtocol*
  name: withProtocol
  nameWithType: InboundNatPool.withProtocol
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withProtocol
  package: com.azure.resourcemanager.network.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.resourcemanager.network.models.InboundNatPool.frontendPortRangeStart*
  name: frontendPortRangeStart
  nameWithType: InboundNatPool.frontendPortRangeStart
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.frontendPortRangeStart
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendPortRangeStart*
  name: withFrontendPortRangeStart
  nameWithType: InboundNatPool.withFrontendPortRangeStart
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendPortRangeStart
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.frontendPortRangeEnd*
  name: frontendPortRangeEnd
  nameWithType: InboundNatPool.frontendPortRangeEnd
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.frontendPortRangeEnd
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendPortRangeEnd*
  name: withFrontendPortRangeEnd
  nameWithType: InboundNatPool.withFrontendPortRangeEnd
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withFrontendPortRangeEnd
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.backendPort*
  name: backendPort
  nameWithType: InboundNatPool.backendPort
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.backendPort
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withBackendPort*
  name: withBackendPort
  nameWithType: InboundNatPool.withBackendPort
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withBackendPort
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.idleTimeoutInMinutes*
  name: idleTimeoutInMinutes
  nameWithType: InboundNatPool.idleTimeoutInMinutes
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.idleTimeoutInMinutes
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withIdleTimeoutInMinutes*
  name: withIdleTimeoutInMinutes
  nameWithType: InboundNatPool.withIdleTimeoutInMinutes
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withIdleTimeoutInMinutes
  package: com.azure.resourcemanager.network.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.network.models.InboundNatPool.enableFloatingIp*
  name: enableFloatingIp
  nameWithType: InboundNatPool.enableFloatingIp
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.enableFloatingIp
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withEnableFloatingIp*
  name: withEnableFloatingIp
  nameWithType: InboundNatPool.withEnableFloatingIp
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withEnableFloatingIp
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.enableTcpReset*
  name: enableTcpReset
  nameWithType: InboundNatPool.enableTcpReset
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.enableTcpReset
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withEnableTcpReset*
  name: withEnableTcpReset
  nameWithType: InboundNatPool.withEnableTcpReset
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withEnableTcpReset
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.provisioningState*
  name: provisioningState
  nameWithType: InboundNatPool.provisioningState
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.provisioningState
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.withProvisioningState*
  name: withProvisioningState
  nameWithType: InboundNatPool.withProvisioningState
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.withProvisioningState
  package: com.azure.resourcemanager.network.models
- uid: com.azure.resourcemanager.network.models.InboundNatPool.validate*
  name: validate
  nameWithType: InboundNatPool.validate
  fullName: com.azure.resourcemanager.network.models.InboundNatPool.validate
  package: com.azure.resourcemanager.network.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.core.management.SubResource.withId(java.lang.String)
  name: SubResource.withId(String)
  nameWithType: SubResource.withId(String)
  fullName: com.azure.core.management.SubResource.withId(java.lang.String)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.management.SubResource.id()
  name: SubResource.id()
  nameWithType: SubResource.id()
  fullName: com.azure.core.management.SubResource.id()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
