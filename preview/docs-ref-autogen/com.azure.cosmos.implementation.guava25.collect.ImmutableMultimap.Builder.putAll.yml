### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.putAll"
name: "putAll"
nameWithType: "ImmutableMultimap.Builder<K,V>.putAll"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll(K,V...)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.putAll(K key, V[] values)"
  name: "putAll(K key, V[] values)"
  nameWithType: "ImmutableMultimap.Builder<K,V>.putAll(K key, V[] values)"
  summary: "Stores an array of values with the same key in the built multimap."
  parameters:
  - name: "key"
    type: "<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />"
  - name: "values"
    type: "<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public ImmutableMultimap.Builder<K,V> putAll(K key, V[] values)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder&text=Builder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll(K,java.lang.Iterable<? extends V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.putAll(K key, Iterable<? extends V> values)"
  name: "putAll(K key, Iterable<? extends V> values)"
  nameWithType: "ImmutableMultimap.Builder<K,V>.putAll(K key, Iterable<? extends V> values)"
  summary: "Stores a collection of values with the same key in the built multimap."
  parameters:
  - name: "key"
    type: "<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />"
  - name: "values"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ImmutableMultimap.Builder<K,V> putAll(K key, Iterable<? extends V> values)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder&text=Builder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.putAll(Multimap<? extends K,? extends V> multimap)"
  name: "putAll(Multimap<? extends K,? extends V> multimap)"
  nameWithType: "ImmutableMultimap.Builder<K,V>.putAll(Multimap<? extends K,? extends V> multimap)"
  summary: "Stores another multimap's entries in the built multimap. The generated multimap's key and value orderings correspond to the iteration ordering of the `multimap.asMap()` view, with new keys and values following any existing keys and values."
  parameters:
  - name: "multimap"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Multimap?alt=com.azure.cosmos.implementation.guava25.collect.Multimap&text=Multimap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends K?alt=? extends K&text=? extends K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ImmutableMultimap.Builder<K,V> putAll(Multimap<? extends K,? extends V> multimap)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder&text=Builder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder.putAll(java.lang.Iterable<? extends java.util.Map.Entry<? extends K,? extends V>>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder<K,V>.putAll(Iterable<? extends Map.Entry<? extends K,? extends V>> entries)"
  name: "putAll(Iterable<? extends Map.Entry<? extends K,? extends V>> entries)"
  nameWithType: "ImmutableMultimap.Builder<K,V>.putAll(Iterable<? extends Map.Entry<? extends K,? extends V>> entries)"
  summary: "Adds entries to the built multimap."
  parameters:
  - name: "entries"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends java.util.Map.Entry?alt=? extends java.util.Map.Entry&text=Entry\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends K?alt=? extends K&text=? extends K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public ImmutableMultimap.Builder<K,V> putAll(Iterable<? extends Map.Entry<? extends K,? extends V>> entries)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableMultimap.Builder&text=Builder\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
