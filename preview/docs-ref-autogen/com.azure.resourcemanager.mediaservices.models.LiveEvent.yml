### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent"
fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent"
name: "LiveEvent"
nameWithType: "LiveEvent"
summary: "An immutable client-side representation of Live<wbr>Event."
syntax: "public interface LiveEvent"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.allocate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.allocate()"
  name: "allocate()"
  nameWithType: "LiveEvent.allocate()"
  summary: "Allocate resources for a live event"
  modifiers:
  - "abstract"
  syntax: "public abstract void allocate()"
  desc: "Allocate resources for a live event\n\nA live event is in StandBy state after allocation completes, and is ready to start."
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.allocate(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.allocate(Context context)"
  name: "allocate(Context context)"
  nameWithType: "LiveEvent.allocate(Context context)"
  summary: "Allocate resources for a live event"
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void allocate(Context context)"
  desc: "Allocate resources for a live event\n\nA live event is in StandBy state after allocation completes, and is ready to start."
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.created()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.created()"
  name: "created()"
  nameWithType: "LiveEvent.created()"
  summary: "Gets the created property: The creation time for the live event."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime created()"
  desc: "Gets the created property: The creation time for the live event."
  returns:
    description: "the created value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.crossSiteAccessPolicies()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.crossSiteAccessPolicies()"
  name: "crossSiteAccessPolicies()"
  nameWithType: "LiveEvent.crossSiteAccessPolicies()"
  summary: "Gets the cross<wbr>Site<wbr>Access<wbr>Policies property: Live event cross site access policies."
  modifiers:
  - "abstract"
  syntax: "public abstract CrossSiteAccessPolicies crossSiteAccessPolicies()"
  desc: "Gets the crossSiteAccessPolicies property: Live event cross site access policies."
  returns:
    description: "the crossSiteAccessPolicies value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies?alt=com.azure.resourcemanager.mediaservices.models.CrossSiteAccessPolicies&text=CrossSiteAccessPolicies\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.description()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.description()"
  name: "description()"
  nameWithType: "LiveEvent.description()"
  summary: "Gets the description property: A description for the live event."
  modifiers:
  - "abstract"
  syntax: "public abstract String description()"
  desc: "Gets the description property: A description for the live event."
  returns:
    description: "the description value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.encoding()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.encoding()"
  name: "encoding()"
  nameWithType: "LiveEvent.encoding()"
  summary: "Gets the encoding property: Encoding settings for the live event."
  modifiers:
  - "abstract"
  syntax: "public abstract LiveEventEncoding encoding()"
  desc: "Gets the encoding property: Encoding settings for the live event. It configures whether a live encoder is used for the live event and settings for the live encoder if it is used."
  returns:
    description: "the encoding value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventEncoding?alt=com.azure.resourcemanager.mediaservices.models.LiveEventEncoding&text=LiveEventEncoding\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.hostnamePrefix()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.hostnamePrefix()"
  name: "hostnamePrefix()"
  nameWithType: "LiveEvent.hostnamePrefix()"
  summary: "Gets the hostname<wbr>Prefix property: When use<wbr>Static<wbr>Hostname is set to true, the hostname<wbr>Prefix specifies the first part of the hostname assigned to the live event preview and ingest endpoints."
  modifiers:
  - "abstract"
  syntax: "public abstract String hostnamePrefix()"
  desc: "Gets the hostnamePrefix property: When useStaticHostname is set to true, the hostnamePrefix specifies the first part of the hostname assigned to the live event preview and ingest endpoints. The final hostname would be a combination of this prefix, the media service account name and a short code for the Azure Media Services data center."
  returns:
    description: "the hostnamePrefix value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.id()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.id()"
  name: "id()"
  nameWithType: "LiveEvent.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.innerModel()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.innerModel()"
  name: "innerModel()"
  nameWithType: "LiveEvent.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>mediaservices.<wbr>fluent.<wbr>models.<wbr>Live<wbr>Event<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract LiveEventInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.mediaservices.fluent.models.LiveEventInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.fluent.models.LiveEventInner?alt=com.azure.resourcemanager.mediaservices.fluent.models.LiveEventInner&text=LiveEventInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.input()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.input()"
  name: "input()"
  nameWithType: "LiveEvent.input()"
  summary: "Gets the input property: Live event input settings."
  modifiers:
  - "abstract"
  syntax: "public abstract LiveEventInput input()"
  desc: "Gets the input property: Live event input settings. It defines how the live event receives input from a contribution encoder."
  returns:
    description: "the input value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventInput?alt=com.azure.resourcemanager.mediaservices.models.LiveEventInput&text=LiveEventInput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.lastModified()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.lastModified()"
  name: "lastModified()"
  nameWithType: "LiveEvent.lastModified()"
  summary: "Gets the last<wbr>Modified property: The last modified time of the live event."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime lastModified()"
  desc: "Gets the lastModified property: The last modified time of the live event."
  returns:
    description: "the lastModified value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.location()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.location()"
  name: "location()"
  nameWithType: "LiveEvent.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The geo-location where the resource lives."
  returns:
    description: "the location value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.name()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.name()"
  name: "name()"
  nameWithType: "LiveEvent.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.preview()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.preview()"
  name: "preview()"
  nameWithType: "LiveEvent.preview()"
  summary: "Gets the preview property: Live event preview settings."
  modifiers:
  - "abstract"
  syntax: "public abstract LiveEventPreview preview()"
  desc: "Gets the preview property: Live event preview settings. Preview allows live event producers to preview the live streaming content without creating any live output."
  returns:
    description: "the preview value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventPreview?alt=com.azure.resourcemanager.mediaservices.models.LiveEventPreview&text=LiveEventPreview\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.provisioningState()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.provisioningState()"
  name: "provisioningState()"
  nameWithType: "LiveEvent.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: The provisioning state of the live event."
  modifiers:
  - "abstract"
  syntax: "public abstract String provisioningState()"
  desc: "Gets the provisioningState property: The provisioning state of the live event."
  returns:
    description: "the provisioningState value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.refresh()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.refresh()"
  name: "refresh()"
  nameWithType: "LiveEvent.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract LiveEvent refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEvent?alt=com.azure.resourcemanager.mediaservices.models.LiveEvent&text=LiveEvent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "LiveEvent.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract LiveEvent refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEvent?alt=com.azure.resourcemanager.mediaservices.models.LiveEvent&text=LiveEvent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.region()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.region()"
  name: "region()"
  nameWithType: "LiveEvent.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.regionName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.regionName()"
  name: "regionName()"
  nameWithType: "LiveEvent.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.reset()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.reset()"
  name: "reset()"
  nameWithType: "LiveEvent.reset()"
  summary: "Reset Live Event"
  modifiers:
  - "abstract"
  syntax: "public abstract void reset()"
  desc: "Reset Live Event\n\nResets an existing live event. All live outputs for the live event are deleted and the live event is stopped and will be started again. All assets used by the live outputs and streaming locators created on these assets are unaffected."
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.reset(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.reset(Context context)"
  name: "reset(Context context)"
  nameWithType: "LiveEvent.reset(Context context)"
  summary: "Reset Live Event"
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void reset(Context context)"
  desc: "Reset Live Event\n\nResets an existing live event. All live outputs for the live event are deleted and the live event is stopped and will be started again. All assets used by the live outputs and streaming locators created on these assets are unaffected."
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.resourceGroupName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.resourceGroupName()"
  name: "resourceGroupName()"
  nameWithType: "LiveEvent.resourceGroupName()"
  summary: "Gets the name of the resource group."
  modifiers:
  - "abstract"
  syntax: "public abstract String resourceGroupName()"
  desc: "Gets the name of the resource group."
  returns:
    description: "the name of the resource group."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.resourceState()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.resourceState()"
  name: "resourceState()"
  nameWithType: "LiveEvent.resourceState()"
  summary: "Gets the resource<wbr>State property: The resource state of the live event."
  modifiers:
  - "abstract"
  syntax: "public abstract LiveEventResourceState resourceState()"
  desc: "Gets the resourceState property: The resource state of the live event. See https://go.microsoft.com/fwlink/?linkid=2139012 for more information."
  returns:
    description: "the resourceState value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventResourceState?alt=com.azure.resourcemanager.mediaservices.models.LiveEventResourceState&text=LiveEventResourceState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.start()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.start()"
  name: "start()"
  nameWithType: "LiveEvent.start()"
  summary: "Start Live Event"
  modifiers:
  - "abstract"
  syntax: "public abstract void start()"
  desc: "Start Live Event\n\nA live event in Stopped or StandBy state will be in Running state after the start operation completes."
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.start(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.start(Context context)"
  name: "start(Context context)"
  nameWithType: "LiveEvent.start(Context context)"
  summary: "Start Live Event"
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void start(Context context)"
  desc: "Start Live Event\n\nA live event in Stopped or StandBy state will be in Running state after the start operation completes."
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.stop(com.azure.resourcemanager.mediaservices.models.LiveEventActionInput)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.stop(LiveEventActionInput parameters)"
  name: "stop(LiveEventActionInput parameters)"
  nameWithType: "LiveEvent.stop(LiveEventActionInput parameters)"
  summary: "Stop Live Event"
  modifiers:
  - "abstract"
  parameters:
  - description: "LiveEvent stop parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventActionInput?alt=com.azure.resourcemanager.mediaservices.models.LiveEventActionInput&text=LiveEventActionInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void stop(LiveEventActionInput parameters)"
  desc: "Stop Live Event\n\nStops a running live event."
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.stop(com.azure.resourcemanager.mediaservices.models.LiveEventActionInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.stop(LiveEventActionInput parameters, Context context)"
  name: "stop(LiveEventActionInput parameters, Context context)"
  nameWithType: "LiveEvent.stop(LiveEventActionInput parameters, Context context)"
  summary: "Stop Live Event"
  modifiers:
  - "abstract"
  parameters:
  - description: "LiveEvent stop parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventActionInput?alt=com.azure.resourcemanager.mediaservices.models.LiveEventActionInput&text=LiveEventActionInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void stop(LiveEventActionInput parameters, Context context)"
  desc: "Stop Live Event\n\nStops a running live event."
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.streamOptions()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.streamOptions()"
  name: "streamOptions()"
  nameWithType: "LiveEvent.streamOptions()"
  summary: "Gets the stream<wbr>Options property: The options to use for the Live<wbr>Event."
  modifiers:
  - "abstract"
  syntax: "public abstract List<StreamOptionsFlag> streamOptions()"
  desc: "Gets the streamOptions property: The options to use for the LiveEvent. This value is specified at creation time and cannot be updated. The valid values for the array entry values are 'Default' and 'LowLatency'."
  returns:
    description: "the streamOptions value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamOptionsFlag?alt=com.azure.resourcemanager.mediaservices.models.StreamOptionsFlag&text=StreamOptionsFlag\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.systemData()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.systemData()"
  name: "systemData()"
  nameWithType: "LiveEvent.systemData()"
  summary: "Gets the system<wbr>Data property: The system metadata relating to this resource."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  desc: "Gets the systemData property: The system metadata relating to this resource."
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.tags()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.tags()"
  name: "tags()"
  nameWithType: "LiveEvent.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: Resource tags."
  returns:
    description: "the tags value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.transcriptions()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.transcriptions()"
  name: "transcriptions()"
  nameWithType: "LiveEvent.transcriptions()"
  summary: "Gets the transcriptions property: Live transcription settings for the live event."
  modifiers:
  - "abstract"
  syntax: "public abstract List<LiveEventTranscription> transcriptions()"
  desc: "Gets the transcriptions property: Live transcription settings for the live event. See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature."
  returns:
    description: "the transcriptions value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTranscription?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTranscription&text=LiveEventTranscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.type()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.type()"
  name: "type()"
  nameWithType: "LiveEvent.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.update()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.update()"
  name: "update()"
  nameWithType: "LiveEvent.update()"
  summary: "Begins update for the Live<wbr>Event resource."
  modifiers:
  - "abstract"
  syntax: "public abstract LiveEvent.Update update()"
  desc: "Begins update for the LiveEvent resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEvent.Update?alt=com.azure.resourcemanager.mediaservices.models.LiveEvent.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEvent.useStaticHostname()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEvent.useStaticHostname()"
  name: "useStaticHostname()"
  nameWithType: "LiveEvent.useStaticHostname()"
  summary: "Gets the use<wbr>Static<wbr>Hostname property: Specifies whether a static hostname would be assigned to the live event preview and ingest endpoints."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean useStaticHostname()"
  desc: "Gets the useStaticHostname property: Specifies whether a static hostname would be assigned to the live event preview and ingest endpoints. This value can only be updated if the live event is in Standby state."
  returns:
    description: "the useStaticHostname value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
type: "interface"
desc: "An immutable client-side representation of LiveEvent."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.2.0-beta.1
