### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.copyOf*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.<K,V>copyOf"
name: "<K,V>copyOf"
nameWithType: "ImmutableRangeMap<K,V>.<K,V>copyOf"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap.<K,V>copyOf(com.azure.cosmos.implementation.guava25.collect.RangeMap<K,? extends V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap<K,V>.<K,V>copyOf(RangeMap<K,? extends V> rangeMap)"
  name: "<K,V>copyOf(RangeMap<K,? extends V> rangeMap)"
  nameWithType: "ImmutableRangeMap<K,V>.<K,V>copyOf(RangeMap<K,? extends V> rangeMap)"
  parameters:
  - name: "rangeMap"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.RangeMap?alt=com.azure.cosmos.implementation.guava25.collect.RangeMap&text=RangeMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static ImmutableRangeMap<K,V> <K,V>copyOf(RangeMap<K,? extends V> rangeMap)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap?alt=com.azure.cosmos.implementation.guava25.collect.ImmutableRangeMap&text=ImmutableRangeMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
