### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Throwables.getCauseAs*"
fullName: "com.azure.cosmos.implementation.guava25.base.Throwables.<X>getCauseAs"
name: "<X>getCauseAs"
nameWithType: "Throwables.<X>getCauseAs"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Throwables.<X>getCauseAs(java.lang.Throwable,java.lang.Class<X>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Throwables.<X>getCauseAs(Throwable throwable, Class<X> expectedCauseType)"
  name: "<X>getCauseAs(Throwable throwable, Class<X> expectedCauseType)"
  nameWithType: "Throwables.<X>getCauseAs(Throwable throwable, Class<X> expectedCauseType)"
  summary: "Returns `throwable`'s cause, cast to `expectedCauseType`.\n\nPrefer this method instead of manually casting an exception's cause. For example, `(IOException) e.getCause()` throws a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClassCastException\"></xref> that discards the original exception `e` if the cause is not an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IOException\"></xref>, but `Throwables.getCauseAs(e, IOException.class)` keeps `e` as the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClassCastException\"></xref>'s cause."
  parameters:
  - name: "throwable"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  - name: "expectedCauseType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"X?alt=X&text=X\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static X <X>getCauseAs(Throwable throwable, Class<X> expectedCauseType)"
  returns:
    type: "<xref href=\"X?alt=X&text=X\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
