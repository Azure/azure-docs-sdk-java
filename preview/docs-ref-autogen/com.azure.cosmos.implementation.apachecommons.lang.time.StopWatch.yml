### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch
  id: StopWatch
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.time
  children:
  - com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.StopWatch()
  - com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getNanoTime()
  - com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getStartTime()
  - com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getTime()
  - com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getTime(java.util.concurrent.TimeUnit)
  - com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.isStarted()
  - com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.reset()
  - com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.start()
  - com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.stop()
  - com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.toString()
  langs:
  - java
  name: StopWatch
  nameWithType: StopWatch
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch
  type: Class
  package: com.azure.cosmos.implementation.apachecommons.lang.time
  syntax:
    content: public class StopWatch
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.StopWatch()
  id: StopWatch()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch
  langs:
  - java
  name: StopWatch()
  nameWithType: StopWatch.StopWatch()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.StopWatch()
  overload: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.StopWatch*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.lang.time
  summary: Constructor.
  syntax:
    content: public StopWatch()
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getNanoTime()
  id: getNanoTime()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch
  langs:
  - java
  name: getNanoTime()
  nameWithType: StopWatch.getNanoTime()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getNanoTime()
  overload: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getNanoTime*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.time
  summary: >-
    Get the time on the stopwatch in nanoseconds.


    This is either the time between the start and the moment this method is called, or the amount of time between start and stop.
  syntax:
    content: public long getNanoTime()
    return:
      type: long
      description: the time in nanoseconds
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getStartTime()
  id: getStartTime()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch
  langs:
  - java
  name: getStartTime()
  nameWithType: StopWatch.getStartTime()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getStartTime()
  overload: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getStartTime*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.time
  summary: Returns the time this stopwatch was started.
  syntax:
    content: public long getStartTime()
    return:
      type: long
      description: the time this stopwatch was started
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getTime()
  id: getTime()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch
  langs:
  - java
  name: getTime()
  nameWithType: StopWatch.getTime()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getTime()
  overload: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getTime*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.time
  summary: >-
    Get the time on the stopwatch.


    This is either the time between the start and the moment this method is called, or the amount of time between start and stop.
  syntax:
    content: public long getTime()
    return:
      type: long
      description: the time in milliseconds
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getTime(java.util.concurrent.TimeUnit)
  id: getTime(java.util.concurrent.TimeUnit)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch
  langs:
  - java
  name: getTime(TimeUnit timeUnit)
  nameWithType: StopWatch.getTime(TimeUnit timeUnit)
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getTime(TimeUnit timeUnit)
  overload: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getTime*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.time
  summary: >-
    Get the time on the stopwatch in the specified TimeUnit.


    This is either the time between the start and the moment this method is called, or the amount of time between start and stop. The resulting time will be expressed in the desired TimeUnit with any remainder rounded down. For example, if the specified unit is `TimeUnit.HOURS` and the stopwatch time is 59 minutes, then the result returned will be `0`.
  syntax:
    content: public long getTime(TimeUnit timeUnit)
    parameters:
    - id: timeUnit
      type: java.util.concurrent.TimeUnit
      description: the unit of time, not null
    return:
      type: long
      description: the time in the specified TimeUnit, rounded down
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.isStarted()
  id: isStarted()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch
  langs:
  - java
  name: isStarted()
  nameWithType: StopWatch.isStarted()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.isStarted()
  overload: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.isStarted*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.time
  summary: The method is used to find out if the StopWatch is started. A suspended StopWatch is also started watch.
  syntax:
    content: public boolean isStarted()
    return:
      type: boolean
      description: >-
        boolean
                     If the StopWatch is started.
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.reset()
  id: reset()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch
  langs:
  - java
  name: reset()
  nameWithType: StopWatch.reset()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.reset()
  overload: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.reset*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.time
  summary: >-
    Resets the stopwatch. Stops it if need be.


    This method clears the internal values to allow the object to be reused.
  syntax:
    content: public void reset()
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.start()
  id: start()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch
  langs:
  - java
  name: start()
  nameWithType: StopWatch.start()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.start()
  overload: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.start*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.time
  summary: >-
    Start the stopwatch.


    This method starts a new timing session, clearing any previous values.
  syntax:
    content: public void start()
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.stop()
  id: stop()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch
  langs:
  - java
  name: stop()
  nameWithType: StopWatch.stop()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.stop()
  overload: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.stop*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.time
  summary: >-
    Stop the stopwatch.


    This method ends a new timing session, allowing the time to be retrieved.
  syntax:
    content: public void stop()
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.toString()
  id: toString()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch
  langs:
  - java
  name: toString()
  nameWithType: StopWatch.toString()
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.toString()
  overload: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.toString*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.lang.time
  summary: >-
    Gets a summary of the time that the stopwatch recorded as a string.


    The format used is ISO 8601-like, *hours*:*minutes*:*seconds*.*milliseconds*.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
      description: the time as a String
references:
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.StopWatch*
  name: StopWatch
  nameWithType: StopWatch.StopWatch
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.StopWatch
  package: com.azure.cosmos.implementation.apachecommons.lang.time
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.start*
  name: start
  nameWithType: StopWatch.start
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.start
  package: com.azure.cosmos.implementation.apachecommons.lang.time
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.stop*
  name: stop
  nameWithType: StopWatch.stop
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.stop
  package: com.azure.cosmos.implementation.apachecommons.lang.time
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.reset*
  name: reset
  nameWithType: StopWatch.reset
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.reset
  package: com.azure.cosmos.implementation.apachecommons.lang.time
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getTime*
  name: getTime
  nameWithType: StopWatch.getTime
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getTime
  package: com.azure.cosmos.implementation.apachecommons.lang.time
- uid: java.util.concurrent.TimeUnit
  spec.java:
  - uid: java.util.concurrent.TimeUnit
    name: TimeUnit
    fullName: java.util.concurrent.TimeUnit
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getNanoTime*
  name: getNanoTime
  nameWithType: StopWatch.getNanoTime
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getNanoTime
  package: com.azure.cosmos.implementation.apachecommons.lang.time
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getStartTime*
  name: getStartTime
  nameWithType: StopWatch.getStartTime
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.getStartTime
  package: com.azure.cosmos.implementation.apachecommons.lang.time
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.toString*
  name: toString
  nameWithType: StopWatch.toString
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.toString
  package: com.azure.cosmos.implementation.apachecommons.lang.time
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.isStarted*
  name: isStarted
  nameWithType: StopWatch.isStarted
  fullName: com.azure.cosmos.implementation.apachecommons.lang.time.StopWatch.isStarted
  package: com.azure.cosmos.implementation.apachecommons.lang.time
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
