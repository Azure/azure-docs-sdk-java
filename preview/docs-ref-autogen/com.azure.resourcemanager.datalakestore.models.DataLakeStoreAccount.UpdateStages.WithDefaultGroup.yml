### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.UpdateStages.WithDefaultGroup"
fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.UpdateStages.WithDefaultGroup"
name: "DataLakeStoreAccount.UpdateStages.WithDefaultGroup"
nameWithType: "DataLakeStoreAccount.UpdateStages.WithDefaultGroup"
summary: "The stage of the DataLakeStoreAccount update allowing to specify defaultGroup."
syntax: "public static interface DataLakeStoreAccount.UpdateStages.WithDefaultGroup"
methods:
- uid: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.UpdateStages.WithDefaultGroup.withDefaultGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.UpdateStages.WithDefaultGroup.withDefaultGroup(String defaultGroup)"
  name: "withDefaultGroup(String defaultGroup)"
  nameWithType: "DataLakeStoreAccount.UpdateStages.WithDefaultGroup.withDefaultGroup(String defaultGroup)"
  summary: "Specifies the defaultGroup property: The default owner group for all new folders and files created in the Data Lake Store account.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The default owner group for all new folders and files created in the Data Lake Store\n     account."
    name: "defaultGroup"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataLakeStoreAccount.Update withDefaultGroup(String defaultGroup)"
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.Update?alt=com.azure.resourcemanager.datalakestore.models.DataLakeStoreAccount.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.datalakestore.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.1
