### YamlMime:JavaMember
uid: "com.azure.storage.queue.QueueClientBuilder.processMessageDecodingError*"
fullName: "com.azure.storage.queue.QueueClientBuilder.processMessageDecodingError"
name: "processMessageDecodingError"
nameWithType: "QueueClientBuilder.processMessageDecodingError"
members:
- uid: "com.azure.storage.queue.QueueClientBuilder.processMessageDecodingError(java.util.function.Consumer<com.azure.storage.queue.models.QueueMessageDecodingError>)"
  fullName: "com.azure.storage.queue.QueueClientBuilder.processMessageDecodingError(Consumer<QueueMessageDecodingError> processMessageDecodingErrorHandler)"
  name: "processMessageDecodingError(Consumer<QueueMessageDecodingError> processMessageDecodingErrorHandler)"
  nameWithType: "QueueClientBuilder.processMessageDecodingError(Consumer<QueueMessageDecodingError> processMessageDecodingErrorHandler)"
  summary: "Sets the handler that performs the tasks needed when a message is received or peaked from the queue but cannot be decoded.\n\nSuch message can be received or peaked when queue is expecting certain <xref uid=\"com.azure.storage.queue.QueueMessageEncoding\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueMessageEncoding\"></xref> but there's another producer that is not encoding messages in expected way. I.e. the queue contains messages with different encoding.\n\n<xref uid=\"com.azure.storage.queue.models.QueueMessageDecodingError\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueMessageDecodingError\"></xref> contains <xref uid=\"com.azure.storage.queue.QueueAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueAsyncClient\"></xref> for the queue that has received the message as well as <xref uid=\"com.azure.storage.queue.models.QueueMessageDecodingError.getQueueMessageItem()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueMessageDecodingError#getQueueMessageItem()\"></xref> or <xref uid=\"com.azure.storage.queue.models.QueueMessageDecodingError.getPeekedMessageItem()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueMessageDecodingError#getPeekedMessageItem()\"></xref> with raw body, i.e. no decoding will be attempted so that body can be inspected as has been received from the queue.\n\nThe handler won't attempt to remove the message from the queue. Therefore such handling should be included into handler itself.\n\n**Code Samples**\n\n```java\nString connectionString = \"DefaultEndpointsProtocol=https;AccountName={name};\"\n     + \"AccountKey={key};EndpointSuffix={core.windows.net}\";\n \n Consumer<QueueMessageDecodingError> processMessageDecodingErrorHandler =\n     (queueMessageDecodingFailure) -> {\n         QueueMessageItem queueMessageItem = queueMessageDecodingFailure.getQueueMessageItem();\n         PeekedMessageItem peekedMessageItem = queueMessageDecodingFailure.getPeekedMessageItem();\n         if (queueMessageItem != null) {\n             System.out.printf(\"Received badly encoded message, messageId=%s, messageBody=%s\",\n                 queueMessageItem.getMessageId(),\n                 queueMessageItem.getBody().toString());\n             queueMessageDecodingFailure\n                 .getQueueClient()\n                 .deleteMessage(queueMessageItem.getMessageId(), queueMessageItem.getPopReceipt());\n         } else if (peekedMessageItem != null) {\n             System.out.printf(\"Peeked badly encoded message, messageId=%s, messageBody=%s\",\n                 peekedMessageItem.getMessageId(),\n                 peekedMessageItem.getBody().toString());\n         }\n     };\n \n QueueClient client = new QueueClientBuilder()\n     .connectionString(connectionString)\n     .processMessageDecodingError(processMessageDecodingErrorHandler)\n     .buildClient();\n```"
  parameters:
  - description: "the handler."
    name: "processMessageDecodingErrorHandler"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.queue.models.QueueMessageDecodingError?alt=com.azure.storage.queue.models.QueueMessageDecodingError&text=QueueMessageDecodingError\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public QueueClientBuilder processMessageDecodingError(Consumer<QueueMessageDecodingError> processMessageDecodingErrorHandler)"
  returns:
    description: "the updated QueueClientBuilder object"
    type: "<xref href=\"com.azure.storage.queue.QueueClientBuilder?alt=com.azure.storage.queue.QueueClientBuilder&text=QueueClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.queue"
artifact: com.azure:azure-storage-queue:12.9.0-beta.2
