### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.MappingJsonFactory"
fullName: "com.fasterxml.jackson.databind.MappingJsonFactory"
name: "MappingJsonFactory"
nameWithType: "MappingJsonFactory"
summary: "Sub-class of <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonFactory\"></xref> that will create a proper <xref uid=\"com.fasterxml.jackson.core.ObjectCodec\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectCodec\"></xref> to allow seam-less conversions between JSON content and Java objects (POJOs). The only addition to regular <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonFactory\"></xref> currently is that <xref uid=\"com.fasterxml.jackson.databind.ObjectMapper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectMapper\"></xref> is constructed and passed as the codec to use."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.core.TokenStreamFactory\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(java.lang.Class<?>)"
- "com.fasterxml.jackson.core.JsonFactory._createContext(java.lang.Object,boolean)"
- "com.fasterxml.jackson.core.JsonFactory._createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._createNonBlockingContext(java.lang.Object)"
- "com.fasterxml.jackson.core.JsonFactory._createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._createParser(char[],int,int,com.fasterxml.jackson.core.io.IOContext,boolean)"
- "com.fasterxml.jackson.core.JsonFactory._createParser(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._decorate(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._decorate(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._decorate(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)"
- "com.fasterxml.jackson.core.JsonFactory._getBufferRecycler()"
- "com.fasterxml.jackson.core.JsonFactory.builder()"
- "com.fasterxml.jackson.core.JsonFactory.canHandleBinaryNatively()"
- "com.fasterxml.jackson.core.JsonFactory.canParseAsync()"
- "com.fasterxml.jackson.core.JsonFactory.canUseCharArrays()"
- "com.fasterxml.jackson.core.JsonFactory.canUseSchema(com.fasterxml.jackson.core.FormatSchema)"
- "com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonFactory.Feature,boolean)"
- "com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonGenerator.Feature,boolean)"
- "com.fasterxml.jackson.core.JsonFactory.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)"
- "com.fasterxml.jackson.core.JsonFactory.copy()"
- "com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.DataOutput)"
- "com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.DataOutput,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream)"
- "com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.JsonFactory.createGenerator(java.io.Writer)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonGenerator(java.io.Writer)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[])"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(byte[],int,int)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.File)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.InputStream)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.io.Reader)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.lang.String)"
- "com.fasterxml.jackson.core.JsonFactory.createJsonParser(java.net.URL)"
- "com.fasterxml.jackson.core.JsonFactory.createNonBlockingByteArrayParser()"
- "com.fasterxml.jackson.core.JsonFactory.createParser(byte[])"
- "com.fasterxml.jackson.core.JsonFactory.createParser(byte[],int,int)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(char[])"
- "com.fasterxml.jackson.core.JsonFactory.createParser(char[],int,int)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(java.io.DataInput)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(java.io.File)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(java.io.InputStream)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(java.io.Reader)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)"
- "com.fasterxml.jackson.core.JsonFactory.createParser(java.net.URL)"
- "com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonFactory.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonGenerator.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.disable(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonFactory.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonGenerator.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.enable(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.getCharacterEscapes()"
- "com.fasterxml.jackson.core.JsonFactory.getCodec()"
- "com.fasterxml.jackson.core.JsonFactory.getFormatGeneratorFeatures()"
- "com.fasterxml.jackson.core.JsonFactory.getFormatName()"
- "com.fasterxml.jackson.core.JsonFactory.getFormatParserFeatures()"
- "com.fasterxml.jackson.core.JsonFactory.getFormatReadFeatureType()"
- "com.fasterxml.jackson.core.JsonFactory.getFormatWriteFeatureType()"
- "com.fasterxml.jackson.core.JsonFactory.getGeneratorFeatures()"
- "com.fasterxml.jackson.core.JsonFactory.getInputDecorator()"
- "com.fasterxml.jackson.core.JsonFactory.getOutputDecorator()"
- "com.fasterxml.jackson.core.JsonFactory.getParserFeatures()"
- "com.fasterxml.jackson.core.JsonFactory.getRootValueSeparator()"
- "com.fasterxml.jackson.core.JsonFactory.hasFormat(com.fasterxml.jackson.core.format.InputAccessor)"
- "com.fasterxml.jackson.core.JsonFactory.hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)"
- "com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonFactory.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)"
- "com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)"
- "com.fasterxml.jackson.core.JsonFactory.isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)"
- "com.fasterxml.jackson.core.JsonFactory.readResolve()"
- "com.fasterxml.jackson.core.JsonFactory.rebuild()"
- "com.fasterxml.jackson.core.JsonFactory.requiresCustomCodec()"
- "com.fasterxml.jackson.core.JsonFactory.requiresPropertyOrdering()"
- "com.fasterxml.jackson.core.JsonFactory.setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)"
- "com.fasterxml.jackson.core.JsonFactory.setCodec(com.fasterxml.jackson.core.ObjectCodec)"
- "com.fasterxml.jackson.core.JsonFactory.setInputDecorator(com.fasterxml.jackson.core.io.InputDecorator)"
- "com.fasterxml.jackson.core.JsonFactory.setOutputDecorator(com.fasterxml.jackson.core.io.OutputDecorator)"
- "com.fasterxml.jackson.core.JsonFactory.setRootValueSeparator(java.lang.String)"
- "com.fasterxml.jackson.core.JsonFactory.version()"
- "com.fasterxml.jackson.core.TokenStreamFactory._createDataOutputWrapper(java.io.DataOutput)"
- "com.fasterxml.jackson.core.TokenStreamFactory._optimizedStreamFromURL(java.net.URL)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class MappingJsonFactory extends JsonFactory"
constructors:
- "com.fasterxml.jackson.databind.MappingJsonFactory.MappingJsonFactory()"
- "com.fasterxml.jackson.databind.MappingJsonFactory.MappingJsonFactory(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ObjectMapper)"
- "com.fasterxml.jackson.databind.MappingJsonFactory.MappingJsonFactory(com.fasterxml.jackson.databind.ObjectMapper)"
methods:
- "com.fasterxml.jackson.databind.MappingJsonFactory.copy()"
- "com.fasterxml.jackson.databind.MappingJsonFactory.getCodec()"
- "com.fasterxml.jackson.databind.MappingJsonFactory.getFormatName()"
- "com.fasterxml.jackson.databind.MappingJsonFactory.hasFormat(com.fasterxml.jackson.core.format.InputAccessor)"
type: "class"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
