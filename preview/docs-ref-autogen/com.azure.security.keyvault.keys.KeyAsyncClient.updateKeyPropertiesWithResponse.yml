### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyAsyncClient.updateKeyPropertiesWithResponse*"
fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.updateKeyPropertiesWithResponse"
name: "updateKeyPropertiesWithResponse"
nameWithType: "KeyAsyncClient.updateKeyPropertiesWithResponse"
members:
- uid: "com.azure.security.keyvault.keys.KeyAsyncClient.updateKeyPropertiesWithResponse(com.azure.security.keyvault.keys.models.KeyProperties,com.azure.security.keyvault.keys.models.KeyOperation...)"
  fullName: "com.azure.security.keyvault.keys.KeyAsyncClient.updateKeyPropertiesWithResponse(KeyProperties keyProperties, KeyOperation[] keyOperations)"
  name: "updateKeyPropertiesWithResponse(KeyProperties keyProperties, KeyOperation[] keyOperations)"
  nameWithType: "KeyAsyncClient.updateKeyPropertiesWithResponse(KeyProperties keyProperties, KeyOperation[] keyOperations)"
  summary: "Updates the <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"attributes\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.KeyOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key operations\"></xref> associated with the specified <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>, but not the cryptographic key material of the specified <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> in the key vault. The update operation changes specified <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"attributes\"></xref> of an existing stored <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"attributes\"></xref> that are not specified in the request are left unchanged. The cryptographic key material of a <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> itself cannot be changed. This operation requires the `keys/set` permission.\n\n**Code Samples**\n\nGets latest version of the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>, changes its notBefore time and then updates it in the Azure Key Vault. Subscribes to the call asynchronously and prints out the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"returned key\"></xref> details when a response has been received.\n\n```java\nkeyAsyncClient.getKey(\"keyName\")\n     .subscribe(getKeyResponse -> {\n         //Update the not before time of the key.\n         getKeyResponse.getProperties().setNotBefore(OffsetDateTime.now().plusDays(50));\n         keyAsyncClient.updateKeyPropertiesWithResponse(getKeyResponse.getProperties(), KeyOperation.ENCRYPT,\n                 KeyOperation.DECRYPT)\n             .contextWrite(Context.of(\"key1\", \"value1\", \"key2\", \"value2\"))\n             .subscribe(updateKeyResponse ->\n                 System.out.printf(\"Updated key's \\\"not before time\\\": %s%n\",\n                     updateKeyResponse.getValue().getProperties().getNotBefore().toString()));\n     });\n```"
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.keys.models.KeyProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key properties\"></xref> object with updated properties."
    name: "keyProperties"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyProperties?alt=com.azure.security.keyvault.keys.models.KeyProperties&text=KeyProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "The updated <xref uid=\"com.azure.security.keyvault.keys.models.KeyOperation\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key operations\"></xref> to associate with the key."
    name: "keyOperations"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.KeyOperation?alt=com.azure.security.keyvault.keys.models.KeyOperation&text=KeyOperation\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public Mono<Response<KeyVaultKey>> updateKeyPropertiesWithResponse(KeyProperties keyProperties, KeyOperation[] keyOperations)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the\n <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"updated key\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.4.0-beta.5
