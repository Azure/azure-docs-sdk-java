### YamlMime:JavaType
uid: "com.azure.resourcemanager.search.models.NetworkRuleSet"
fullName: "com.azure.resourcemanager.search.models.NetworkRuleSet"
name: "NetworkRuleSet"
nameWithType: "NetworkRuleSet"
summary: "Network specific rules that determine how the Azure AI Search service may be reached."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **NetworkRuleSet**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.search.models.NetworkRuleSet?alt=com.azure.resourcemanager.search.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.search.models.NetworkRuleSet.NetworkRuleSet()"
  fullName: "com.azure.resourcemanager.search.models.NetworkRuleSet.NetworkRuleSet()"
  name: "NetworkRuleSet()"
  nameWithType: "NetworkRuleSet.NetworkRuleSet()"
  summary: "Creates an instance of Network<wbr>Rule<wbr>Set class."
  syntax: "public NetworkRuleSet()"
  desc: "Creates an instance of NetworkRuleSet class."
methods:
- uid: "com.azure.resourcemanager.search.models.NetworkRuleSet.bypass()"
  fullName: "com.azure.resourcemanager.search.models.NetworkRuleSet.bypass()"
  name: "bypass()"
  nameWithType: "NetworkRuleSet.bypass()"
  summary: "Get the bypass property: Possible origins of inbound traffic that can bypass the rules defined in the 'ip<wbr>Rules' section."
  syntax: "public SearchBypass bypass()"
  desc: "Get the bypass property: Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section."
  returns:
    description: "the bypass value."
    type: "<xref href=\"com.azure.resourcemanager.search.models.SearchBypass?alt=com.azure.resourcemanager.search.models.SearchBypass&text=SearchBypass\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.search.models.NetworkRuleSet.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.search.models.NetworkRuleSet.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "NetworkRuleSet.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Network<wbr>Rule<wbr>Set from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static NetworkRuleSet fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the NetworkRuleSet."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of NetworkRuleSet from the JsonReader."
  returns:
    description: "An instance of NetworkRuleSet if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.search.models.NetworkRuleSet?alt=com.azure.resourcemanager.search.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.search.models.NetworkRuleSet.ipRules()"
  fullName: "com.azure.resourcemanager.search.models.NetworkRuleSet.ipRules()"
  name: "ipRules()"
  nameWithType: "NetworkRuleSet.ipRules()"
  summary: "Get the ip<wbr>Rules property: A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint."
  syntax: "public List<IpRule> ipRules()"
  desc: "Get the ipRules property: A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method."
  returns:
    description: "the ipRules value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.search.models.IpRule?alt=com.azure.resourcemanager.search.models.IpRule&text=IpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.search.models.NetworkRuleSet.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.search.models.NetworkRuleSet.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "NetworkRuleSet.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.search.models.NetworkRuleSet.validate()"
  fullName: "com.azure.resourcemanager.search.models.NetworkRuleSet.validate()"
  name: "validate()"
  nameWithType: "NetworkRuleSet.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.search.models.NetworkRuleSet.withBypass(com.azure.resourcemanager.search.models.SearchBypass)"
  fullName: "com.azure.resourcemanager.search.models.NetworkRuleSet.withBypass(SearchBypass bypass)"
  name: "withBypass(SearchBypass bypass)"
  nameWithType: "NetworkRuleSet.withBypass(SearchBypass bypass)"
  summary: "Set the bypass property: Possible origins of inbound traffic that can bypass the rules defined in the 'ip<wbr>Rules' section."
  parameters:
  - description: "the bypass value to set."
    name: "bypass"
    type: "<xref href=\"com.azure.resourcemanager.search.models.SearchBypass?alt=com.azure.resourcemanager.search.models.SearchBypass&text=SearchBypass\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkRuleSet withBypass(SearchBypass bypass)"
  desc: "Set the bypass property: Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section."
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.azure.resourcemanager.search.models.NetworkRuleSet?alt=com.azure.resourcemanager.search.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.search.models.NetworkRuleSet.withIpRules(java.util.List<com.azure.resourcemanager.search.models.IpRule>)"
  fullName: "com.azure.resourcemanager.search.models.NetworkRuleSet.withIpRules(List<IpRule> ipRules)"
  name: "withIpRules(List<IpRule> ipRules)"
  nameWithType: "NetworkRuleSet.withIpRules(List<IpRule> ipRules)"
  summary: "Set the ip<wbr>Rules property: A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint."
  parameters:
  - description: "the ipRules value to set."
    name: "ipRules"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.search.models.IpRule?alt=com.azure.resourcemanager.search.models.IpRule&text=IpRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public NetworkRuleSet withIpRules(List<IpRule> ipRules)"
  desc: "Set the ipRules property: A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method."
  returns:
    description: "the NetworkRuleSet object itself."
    type: "<xref href=\"com.azure.resourcemanager.search.models.NetworkRuleSet?alt=com.azure.resourcemanager.search.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Network specific rules that determine how the Azure AI Search service may be reached."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.search.models.NetworkRuleSet?alt=com.azure.resourcemanager.search.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.search.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-search:2.50.0-beta.1
