### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Ordering.lexicographical*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Ordering<T>.<S>lexicographical"
name: "<S>lexicographical"
nameWithType: "Ordering<T>.<S>lexicographical"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Ordering.<S>lexicographical()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Ordering<T>.<S>lexicographical()"
  name: "<S>lexicographical()"
  nameWithType: "Ordering<T>.<S>lexicographical()"
  summary: "Returns a new ordering which sorts iterables by comparing corresponding elements pairwise until a nonzero result is found; imposes \"dictionary order\". If the end of one iterable is reached, but not the other, the shorter iterable is considered to be less than the longer one. For example, a lexicographical natural ordering over integers considers `[] < [1] < [1, 1] < [1, 2] < [2]`.\n\nNote that `ordering.lexicographical().reverse()` is not equivalent to `ordering.reverse().lexicographical()` (consider how each would order `[1]` and `[1, 1]`).\n\n**Java 8 users:** Use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Comparators.&lt;T,S&gt;lexicographical(java.util.Comparator&lt;T&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Comparators#lexicographical(Comparator)\"></xref> instead."
  syntax: "public Ordering<Iterable<S>> <S>lexicographical()"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Ordering?alt=com.azure.cosmos.implementation.guava25.collect.Ordering&text=Ordering\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"S?alt=S&text=S\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
