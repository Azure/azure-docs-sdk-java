### YamlMime:JavaType
uid: "com.azure.compute.batch.models.BatchJobManagerTask"
fullName: "com.azure.compute.batch.models.BatchJobManagerTask"
name: "BatchJobManagerTask"
nameWithType: "BatchJobManagerTask"
summary: "Specifies details of a Job Manager Task."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **BatchJobManagerTask**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.BatchJobManagerTask(java.lang.String,java.lang.String)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.BatchJobManagerTask(String id, String commandLine)"
  name: "BatchJobManagerTask(String id, String commandLine)"
  nameWithType: "BatchJobManagerTask.BatchJobManagerTask(String id, String commandLine)"
  summary: "Creates an instance of Batch<wbr>Job<wbr>Manager<wbr>Task class."
  parameters:
  - description: "the id value to set."
    name: "id"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the commandLine value to set."
    name: "commandLine"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public BatchJobManagerTask(String id, String commandLine)"
  desc: "Creates an instance of BatchJobManagerTask class."
methods:
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "BatchJobManagerTask.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Batch<wbr>Job<wbr>Manager<wbr>Task from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static BatchJobManagerTask fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of BatchJobManagerTask from the JsonReader."
  returns:
    description: "An instance of BatchJobManagerTask if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.getApplicationPackageReferences()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.getApplicationPackageReferences()"
  name: "getApplicationPackageReferences()"
  nameWithType: "BatchJobManagerTask.getApplicationPackageReferences()"
  summary: "Get the application<wbr>Package<wbr>References property: A list of Application Packages that the Batch service will deploy to the Compute Node before running the command line.<wbr>Application Packages are downloaded and deployed to a shared directory, not the Task working directory."
  syntax: "public List<BatchApplicationPackageReference> getApplicationPackageReferences()"
  desc: "Get the applicationPackageReferences property: A list of Application Packages that the Batch service will deploy to the Compute Node before running the command line.Application Packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced Application Package is already on the Compute Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Application Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails."
  returns:
    description: "the applicationPackageReferences value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.BatchApplicationPackageReference?alt=com.azure.compute.batch.models.BatchApplicationPackageReference&text=BatchApplicationPackageReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.getAuthenticationTokenSettings()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.getAuthenticationTokenSettings()"
  name: "getAuthenticationTokenSettings()"
  nameWithType: "BatchJobManagerTask.getAuthenticationTokenSettings()"
  summary: "Get the authentication<wbr>Token<wbr>Settings property: The settings for an authentication token that the Task can use to perform Batch service operations."
  syntax: "public AuthenticationTokenSettings getAuthenticationTokenSettings()"
  desc: "Get the authenticationTokenSettings property: The settings for an authentication token that the Task can use to perform Batch service operations. If this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ\\_BATCH\\_AUTHENTICATION\\_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job."
  returns:
    description: "the authenticationTokenSettings value."
    type: "<xref href=\"com.azure.compute.batch.models.AuthenticationTokenSettings?alt=com.azure.compute.batch.models.AuthenticationTokenSettings&text=AuthenticationTokenSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.getCommandLine()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.getCommandLine()"
  name: "getCommandLine()"
  nameWithType: "BatchJobManagerTask.getCommandLine()"
  summary: "Get the command<wbr>Line property: The command line of the Job Manager Task."
  syntax: "public String getCommandLine()"
  desc: "Get the commandLine property: The command line of the Job Manager Task. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
  returns:
    description: "the commandLine value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.getConstraints()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.getConstraints()"
  name: "getConstraints()"
  nameWithType: "BatchJobManagerTask.getConstraints()"
  summary: "Get the constraints property: Constraints that apply to the Job Manager Task."
  syntax: "public BatchTaskConstraints getConstraints()"
  desc: "Get the constraints property: Constraints that apply to the Job Manager Task."
  returns:
    description: "the constraints value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskConstraints?alt=com.azure.compute.batch.models.BatchTaskConstraints&text=BatchTaskConstraints\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.getContainerSettings()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.getContainerSettings()"
  name: "getContainerSettings()"
  nameWithType: "BatchJobManagerTask.getContainerSettings()"
  summary: "Get the container<wbr>Settings property: The settings for the container under which the Job Manager Task runs."
  syntax: "public BatchTaskContainerSettings getContainerSettings()"
  desc: "Get the containerSettings property: The settings for the container under which the Job Manager Task runs. If the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ\\_BATCH\\_NODE\\_ROOT\\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ\\_BATCH\\_NODE\\_ROOT\\_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
  returns:
    description: "the containerSettings value."
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskContainerSettings?alt=com.azure.compute.batch.models.BatchTaskContainerSettings&text=BatchTaskContainerSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.getDisplayName()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.getDisplayName()"
  name: "getDisplayName()"
  nameWithType: "BatchJobManagerTask.getDisplayName()"
  summary: "Get the display<wbr>Name property: The display name of the Job Manager Task."
  syntax: "public String getDisplayName()"
  desc: "Get the displayName property: The display name of the Job Manager Task. It need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the displayName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.getEnvironmentSettings()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.getEnvironmentSettings()"
  name: "getEnvironmentSettings()"
  nameWithType: "BatchJobManagerTask.getEnvironmentSettings()"
  summary: "Get the environment<wbr>Settings property: A list of environment variable settings for the Job Manager Task."
  syntax: "public List<EnvironmentSetting> getEnvironmentSettings()"
  desc: "Get the environmentSettings property: A list of environment variable settings for the Job Manager Task."
  returns:
    description: "the environmentSettings value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.EnvironmentSetting?alt=com.azure.compute.batch.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.getId()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.getId()"
  name: "getId()"
  nameWithType: "BatchJobManagerTask.getId()"
  summary: "Get the id property: A string that uniquely identifies the Job Manager Task within the Job."
  syntax: "public String getId()"
  desc: "Get the id property: A string that uniquely identifies the Job Manager Task within the Job. The ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters."
  returns:
    description: "the id value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.getOutputFiles()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.getOutputFiles()"
  name: "getOutputFiles()"
  nameWithType: "BatchJobManagerTask.getOutputFiles()"
  summary: "Get the output<wbr>Files property: A list of files that the Batch service will upload from the Compute Node after running the command line."
  syntax: "public List<OutputFile> getOutputFiles()"
  desc: "Get the outputFiles property: A list of files that the Batch service will upload from the Compute Node after running the command line. For multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed."
  returns:
    description: "the outputFiles value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.OutputFile?alt=com.azure.compute.batch.models.OutputFile&text=OutputFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.getRequiredSlots()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.getRequiredSlots()"
  name: "getRequiredSlots()"
  nameWithType: "BatchJobManagerTask.getRequiredSlots()"
  summary: "Get the required<wbr>Slots property: The number of scheduling slots that the Task requires to run."
  syntax: "public Integer getRequiredSlots()"
  desc: "Get the requiredSlots property: The number of scheduling slots that the Task requires to run. The default is 1. A Task can only be scheduled to run on a compute node if the node has enough free scheduling slots available. For multi-instance Tasks, this property is not supported and must not be specified."
  returns:
    description: "the requiredSlots value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.getResourceFiles()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.getResourceFiles()"
  name: "getResourceFiles()"
  nameWithType: "BatchJobManagerTask.getResourceFiles()"
  summary: "Get the resource<wbr>Files property: A list of files that the Batch service will download to the Compute Node before running the command line."
  syntax: "public List<ResourceFile> getResourceFiles()"
  desc: "Get the resourceFiles property: A list of files that the Batch service will download to the Compute Node before running the command line. Files listed under this element are located in the Task's working directory. There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers."
  returns:
    description: "the resourceFiles value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.ResourceFile?alt=com.azure.compute.batch.models.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.getUserIdentity()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.getUserIdentity()"
  name: "getUserIdentity()"
  nameWithType: "BatchJobManagerTask.getUserIdentity()"
  summary: "Get the user<wbr>Identity property: The user identity under which the Job Manager Task runs."
  syntax: "public UserIdentity getUserIdentity()"
  desc: "Get the userIdentity property: The user identity under which the Job Manager Task runs. If omitted, the Task runs as a non-administrative user unique to the Task."
  returns:
    description: "the userIdentity value."
    type: "<xref href=\"com.azure.compute.batch.models.UserIdentity?alt=com.azure.compute.batch.models.UserIdentity&text=UserIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.isAllowLowPriorityNode()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.isAllowLowPriorityNode()"
  name: "isAllowLowPriorityNode()"
  nameWithType: "BatchJobManagerTask.isAllowLowPriorityNode()"
  summary: "Get the allow<wbr>Low<wbr>Priority<wbr>Node property: Whether the Job Manager Task may run on a Spot/Low-priority Compute Node."
  syntax: "public Boolean isAllowLowPriorityNode()"
  desc: "Get the allowLowPriorityNode property: Whether the Job Manager Task may run on a Spot/Low-priority Compute Node. The default value is true."
  returns:
    description: "the allowLowPriorityNode value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.isKillJobOnCompletion()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.isKillJobOnCompletion()"
  name: "isKillJobOnCompletion()"
  nameWithType: "BatchJobManagerTask.isKillJobOnCompletion()"
  summary: "Get the kill<wbr>Job<wbr>OnCompletion property: Whether completion of the Job Manager Task signifies completion of the entire Job."
  syntax: "public Boolean isKillJobOnCompletion()"
  desc: "Get the killJobOnCompletion property: Whether completion of the Job Manager Task signifies completion of the entire Job. If true, when the Job Manager Task completes, the Batch service marks the Job as complete. If any Tasks are still running at this time (other than Job Release), those Tasks are terminated. If false, the completion of the Job Manager Task does not affect the Job status. In this case, you should either use the onAllTasksComplete attribute to terminate the Job, or have a client or user terminate the Job explicitly. An example of this is if the Job Manager creates a set of Tasks but then takes no further role in their execution. The default value is true. If you are using the onAllTasksComplete and onTaskFailure attributes to control Job lifetime, and using the Job Manager Task only to create the Tasks for the Job (not to monitor progress), then it is important to set killJobOnCompletion to false."
  returns:
    description: "the killJobOnCompletion value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.isRunExclusive()"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.isRunExclusive()"
  name: "isRunExclusive()"
  nameWithType: "BatchJobManagerTask.isRunExclusive()"
  summary: "Get the run<wbr>Exclusive property: Whether the Job Manager Task requires exclusive use of the Compute Node where it runs."
  syntax: "public Boolean isRunExclusive()"
  desc: "Get the runExclusive property: Whether the Job Manager Task requires exclusive use of the Compute Node where it runs. If true, no other Tasks will run on the same Node for as long as the Job Manager is running. If false, other Tasks can run simultaneously with the Job Manager on a Compute Node. The Job Manager Task counts normally against the Compute Node's concurrent Task limit, so this is only relevant if the Compute Node allows multiple concurrent Tasks. The default value is true."
  returns:
    description: "the runExclusive value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setAllowLowPriorityNode(java.lang.Boolean)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setAllowLowPriorityNode(Boolean allowLowPriorityNode)"
  name: "setAllowLowPriorityNode(Boolean allowLowPriorityNode)"
  nameWithType: "BatchJobManagerTask.setAllowLowPriorityNode(Boolean allowLowPriorityNode)"
  summary: "Set the allow<wbr>Low<wbr>Priority<wbr>Node property: Whether the Job Manager Task may run on a Spot/Low-priority Compute Node."
  parameters:
  - description: "the allowLowPriorityNode value to set."
    name: "allowLowPriorityNode"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public BatchJobManagerTask setAllowLowPriorityNode(Boolean allowLowPriorityNode)"
  desc: "Set the allowLowPriorityNode property: Whether the Job Manager Task may run on a Spot/Low-priority Compute Node. The default value is true."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setApplicationPackageReferences(java.util.List<com.azure.compute.batch.models.BatchApplicationPackageReference>)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setApplicationPackageReferences(List<BatchApplicationPackageReference> applicationPackageReferences)"
  name: "setApplicationPackageReferences(List<BatchApplicationPackageReference> applicationPackageReferences)"
  nameWithType: "BatchJobManagerTask.setApplicationPackageReferences(List<BatchApplicationPackageReference> applicationPackageReferences)"
  summary: "Set the application<wbr>Package<wbr>References property: A list of Application Packages that the Batch service will deploy to the Compute Node before running the command line.<wbr>Application Packages are downloaded and deployed to a shared directory, not the Task working directory."
  parameters:
  - description: "the applicationPackageReferences value to set."
    name: "applicationPackageReferences"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.BatchApplicationPackageReference?alt=com.azure.compute.batch.models.BatchApplicationPackageReference&text=BatchApplicationPackageReference\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BatchJobManagerTask setApplicationPackageReferences(List<BatchApplicationPackageReference> applicationPackageReferences)"
  desc: "Set the applicationPackageReferences property: A list of Application Packages that the Batch service will deploy to the Compute Node before running the command line.Application Packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced Application Package is already on the Compute Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Application Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setAuthenticationTokenSettings(com.azure.compute.batch.models.AuthenticationTokenSettings)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)"
  name: "setAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)"
  nameWithType: "BatchJobManagerTask.setAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)"
  summary: "Set the authentication<wbr>Token<wbr>Settings property: The settings for an authentication token that the Task can use to perform Batch service operations."
  parameters:
  - description: "the authenticationTokenSettings value to set."
    name: "authenticationTokenSettings"
    type: "<xref href=\"com.azure.compute.batch.models.AuthenticationTokenSettings?alt=com.azure.compute.batch.models.AuthenticationTokenSettings&text=AuthenticationTokenSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobManagerTask setAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)"
  desc: "Set the authenticationTokenSettings property: The settings for an authentication token that the Task can use to perform Batch service operations. If this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ\\_BATCH\\_AUTHENTICATION\\_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setConstraints(com.azure.compute.batch.models.BatchTaskConstraints)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setConstraints(BatchTaskConstraints constraints)"
  name: "setConstraints(BatchTaskConstraints constraints)"
  nameWithType: "BatchJobManagerTask.setConstraints(BatchTaskConstraints constraints)"
  summary: "Set the constraints property: Constraints that apply to the Job Manager Task."
  parameters:
  - description: "the constraints value to set."
    name: "constraints"
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskConstraints?alt=com.azure.compute.batch.models.BatchTaskConstraints&text=BatchTaskConstraints\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobManagerTask setConstraints(BatchTaskConstraints constraints)"
  desc: "Set the constraints property: Constraints that apply to the Job Manager Task."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setContainerSettings(com.azure.compute.batch.models.BatchTaskContainerSettings)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setContainerSettings(BatchTaskContainerSettings containerSettings)"
  name: "setContainerSettings(BatchTaskContainerSettings containerSettings)"
  nameWithType: "BatchJobManagerTask.setContainerSettings(BatchTaskContainerSettings containerSettings)"
  summary: "Set the container<wbr>Settings property: The settings for the container under which the Job Manager Task runs."
  parameters:
  - description: "the containerSettings value to set."
    name: "containerSettings"
    type: "<xref href=\"com.azure.compute.batch.models.BatchTaskContainerSettings?alt=com.azure.compute.batch.models.BatchTaskContainerSettings&text=BatchTaskContainerSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobManagerTask setContainerSettings(BatchTaskContainerSettings containerSettings)"
  desc: "Set the containerSettings property: The settings for the container under which the Job Manager Task runs. If the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ\\_BATCH\\_NODE\\_ROOT\\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ\\_BATCH\\_NODE\\_ROOT\\_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setDisplayName(java.lang.String)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setDisplayName(String displayName)"
  name: "setDisplayName(String displayName)"
  nameWithType: "BatchJobManagerTask.setDisplayName(String displayName)"
  summary: "Set the display<wbr>Name property: The display name of the Job Manager Task."
  parameters:
  - description: "the displayName value to set."
    name: "displayName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public BatchJobManagerTask setDisplayName(String displayName)"
  desc: "Set the displayName property: The display name of the Job Manager Task. It need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setEnvironmentSettings(java.util.List<com.azure.compute.batch.models.EnvironmentSetting>)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  name: "setEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  nameWithType: "BatchJobManagerTask.setEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  summary: "Set the environment<wbr>Settings property: A list of environment variable settings for the Job Manager Task."
  parameters:
  - description: "the environmentSettings value to set."
    name: "environmentSettings"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.EnvironmentSetting?alt=com.azure.compute.batch.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BatchJobManagerTask setEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  desc: "Set the environmentSettings property: A list of environment variable settings for the Job Manager Task."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setKillJobOnCompletion(java.lang.Boolean)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setKillJobOnCompletion(Boolean killJobOnCompletion)"
  name: "setKillJobOnCompletion(Boolean killJobOnCompletion)"
  nameWithType: "BatchJobManagerTask.setKillJobOnCompletion(Boolean killJobOnCompletion)"
  summary: "Set the kill<wbr>Job<wbr>OnCompletion property: Whether completion of the Job Manager Task signifies completion of the entire Job."
  parameters:
  - description: "the killJobOnCompletion value to set."
    name: "killJobOnCompletion"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public BatchJobManagerTask setKillJobOnCompletion(Boolean killJobOnCompletion)"
  desc: "Set the killJobOnCompletion property: Whether completion of the Job Manager Task signifies completion of the entire Job. If true, when the Job Manager Task completes, the Batch service marks the Job as complete. If any Tasks are still running at this time (other than Job Release), those Tasks are terminated. If false, the completion of the Job Manager Task does not affect the Job status. In this case, you should either use the onAllTasksComplete attribute to terminate the Job, or have a client or user terminate the Job explicitly. An example of this is if the Job Manager creates a set of Tasks but then takes no further role in their execution. The default value is true. If you are using the onAllTasksComplete and onTaskFailure attributes to control Job lifetime, and using the Job Manager Task only to create the Tasks for the Job (not to monitor progress), then it is important to set killJobOnCompletion to false."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setOutputFiles(java.util.List<com.azure.compute.batch.models.OutputFile>)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setOutputFiles(List<OutputFile> outputFiles)"
  name: "setOutputFiles(List<OutputFile> outputFiles)"
  nameWithType: "BatchJobManagerTask.setOutputFiles(List<OutputFile> outputFiles)"
  summary: "Set the output<wbr>Files property: A list of files that the Batch service will upload from the Compute Node after running the command line."
  parameters:
  - description: "the outputFiles value to set."
    name: "outputFiles"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.OutputFile?alt=com.azure.compute.batch.models.OutputFile&text=OutputFile\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BatchJobManagerTask setOutputFiles(List<OutputFile> outputFiles)"
  desc: "Set the outputFiles property: A list of files that the Batch service will upload from the Compute Node after running the command line. For multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setRequiredSlots(java.lang.Integer)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setRequiredSlots(Integer requiredSlots)"
  name: "setRequiredSlots(Integer requiredSlots)"
  nameWithType: "BatchJobManagerTask.setRequiredSlots(Integer requiredSlots)"
  summary: "Set the required<wbr>Slots property: The number of scheduling slots that the Task requires to run."
  parameters:
  - description: "the requiredSlots value to set."
    name: "requiredSlots"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public BatchJobManagerTask setRequiredSlots(Integer requiredSlots)"
  desc: "Set the requiredSlots property: The number of scheduling slots that the Task requires to run. The default is 1. A Task can only be scheduled to run on a compute node if the node has enough free scheduling slots available. For multi-instance Tasks, this property is not supported and must not be specified."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setResourceFiles(java.util.List<com.azure.compute.batch.models.ResourceFile>)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setResourceFiles(List<ResourceFile> resourceFiles)"
  name: "setResourceFiles(List<ResourceFile> resourceFiles)"
  nameWithType: "BatchJobManagerTask.setResourceFiles(List<ResourceFile> resourceFiles)"
  summary: "Set the resource<wbr>Files property: A list of files that the Batch service will download to the Compute Node before running the command line."
  parameters:
  - description: "the resourceFiles value to set."
    name: "resourceFiles"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.ResourceFile?alt=com.azure.compute.batch.models.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BatchJobManagerTask setResourceFiles(List<ResourceFile> resourceFiles)"
  desc: "Set the resourceFiles property: A list of files that the Batch service will download to the Compute Node before running the command line. Files listed under this element are located in the Task's working directory. There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setRunExclusive(java.lang.Boolean)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setRunExclusive(Boolean runExclusive)"
  name: "setRunExclusive(Boolean runExclusive)"
  nameWithType: "BatchJobManagerTask.setRunExclusive(Boolean runExclusive)"
  summary: "Set the run<wbr>Exclusive property: Whether the Job Manager Task requires exclusive use of the Compute Node where it runs."
  parameters:
  - description: "the runExclusive value to set."
    name: "runExclusive"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public BatchJobManagerTask setRunExclusive(Boolean runExclusive)"
  desc: "Set the runExclusive property: Whether the Job Manager Task requires exclusive use of the Compute Node where it runs. If true, no other Tasks will run on the same Node for as long as the Job Manager is running. If false, other Tasks can run simultaneously with the Job Manager on a Compute Node. The Job Manager Task counts normally against the Compute Node's concurrent Task limit, so this is only relevant if the Compute Node allows multiple concurrent Tasks. The default value is true."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.setUserIdentity(com.azure.compute.batch.models.UserIdentity)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.setUserIdentity(UserIdentity userIdentity)"
  name: "setUserIdentity(UserIdentity userIdentity)"
  nameWithType: "BatchJobManagerTask.setUserIdentity(UserIdentity userIdentity)"
  summary: "Set the user<wbr>Identity property: The user identity under which the Job Manager Task runs."
  parameters:
  - description: "the userIdentity value to set."
    name: "userIdentity"
    type: "<xref href=\"com.azure.compute.batch.models.UserIdentity?alt=com.azure.compute.batch.models.UserIdentity&text=UserIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BatchJobManagerTask setUserIdentity(UserIdentity userIdentity)"
  desc: "Set the userIdentity property: The user identity under which the Job Manager Task runs. If omitted, the Task runs as a non-administrative user unique to the Task."
  returns:
    description: "the BatchJobManagerTask object itself."
    type: "<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.BatchJobManagerTask.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.compute.batch.models.BatchJobManagerTask.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "BatchJobManagerTask.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Specifies details of a Job Manager Task. The Job Manager Task is automatically started when the Job is created. The Batch service tries to schedule the Job Manager Task before any other Tasks in the Job. When shrinking a Pool, the Batch service tries to preserve Nodes where Job Manager Tasks are running for as long as possible (that is, Compute Nodes running 'normal' Tasks are removed before Compute Nodes running Job Manager Tasks). When a Job Manager Task fails and needs to be restarted, the system tries to schedule it at the highest priority. If there are no idle Compute Nodes available, the system may terminate one of the running Tasks in the Pool and return it to the queue in order to make room for the Job Manager Task to restart. Note that a Job Manager Task in one Job does not have priority over Tasks in other Jobs. Across Jobs, only Job level priorities are observed. For example, if a Job Manager in a priority 0 Job needs to be restarted, it will not displace Tasks of a priority 1 Job. Batch will retry Tasks when a recovery operation is triggered on a Node. Examples of recovery operations include (but are not limited to) when an unhealthy Node is rebooted or a Compute Node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all Tasks should be idempotent. This means Tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running Tasks is to use some form of checkpointing."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.BatchJobManagerTask?alt=com.azure.compute.batch.models.BatchJobManagerTask&text=BatchJobManagerTask\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.compute.batch.models"
artifact: com.azure:azure-compute-batch:1.0.0-beta.2
