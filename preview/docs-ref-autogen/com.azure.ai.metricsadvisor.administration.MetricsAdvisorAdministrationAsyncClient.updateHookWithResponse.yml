### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateHookWithResponse*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateHookWithResponse"
name: "updateHookWithResponse"
nameWithType: "MetricsAdvisorAdministrationAsyncClient.updateHookWithResponse"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateHookWithResponse(com.azure.ai.metricsadvisor.models.Hook)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateHookWithResponse(Hook hook)"
  name: "updateHookWithResponse(Hook hook)"
  nameWithType: "MetricsAdvisorAdministrationAsyncClient.updateHookWithResponse(Hook hook)"
  summary: "Update an existing hook.\n\n**Code sample**\n\n```java\nfinal String emailHookId = \"f00853f1-6627-447f-bacf-8dccf2e86fed\";\n metricAdvisorAdministrationAsyncClient.getHookWithResponse(emailHookId)\n     .flatMap(response -> {\n         EmailHook emailHook = (EmailHook) response.getValue();\n         emailHook\n             .removeEmailToAlert(\"alertme{@literal @}alertme.com\")\n             .addEmailToAlert(\"alertme2{@literal @}alertme.com\")\n             .addEmailToAlert(\"alertme3{@literal @}alertme.com\");\n         return metricAdvisorAdministrationAsyncClient.updateHookWithResponse(emailHook);\n     })\n     .subscribe(response -> {\n         System.out.printf(\"Response statusCode: %d%n\", response.getStatusCode());\n         EmailHook emailHook = (EmailHook) response.getValue();\n         System.out.printf(\"Hook Id: %s%n\", emailHook.getId());\n         System.out.printf(\"Hook Name: %s%n\", emailHook.getName());\n         System.out.printf(\"Hook Description: %s%n\", emailHook.getDescription());\n         System.out.printf(\"Hook External Link: %s%n\", emailHook.getExternalLink());\n         System.out.printf(\"Hook Emails: %s%n\", String.join(\",\", emailHook.getEmailsToAlert()));\n     });\n```"
  parameters:
  - description: "The hook to update."
    name: "hook"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.Hook?alt=com.azure.ai.metricsadvisor.models.Hook&text=Hook\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Hook>> updateHookWithResponse(Hook hook)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> of a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the updated <xref uid=\"com.azure.ai.metricsadvisor.models.Hook\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Hook\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.Hook?alt=com.azure.ai.metricsadvisor.models.Hook&text=Hook\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.1
