### YamlMime:JavaType
uid: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup"
fullName: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup"
name: "ConfidentialLedgerBackup"
nameWithType: "ConfidentialLedgerBackup"
summary: "Object representing Backup properties of a Confidential Ledger Resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **ConfidentialLedgerBackup**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup?alt=com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup&text=ConfidentialLedgerBackup\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.ConfidentialLedgerBackup()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.ConfidentialLedgerBackup()"
  name: "ConfidentialLedgerBackup()"
  nameWithType: "ConfidentialLedgerBackup.ConfidentialLedgerBackup()"
  summary: "Creates an instance of Confidential<wbr>Ledger<wbr>Backup class."
  syntax: "public ConfidentialLedgerBackup()"
  desc: "Creates an instance of ConfidentialLedgerBackup class."
methods:
- uid: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "ConfidentialLedgerBackup.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Confidential<wbr>Ledger<wbr>Backup from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ConfidentialLedgerBackup fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads an instance of ConfidentialLedgerBackup from the JsonReader."
  returns:
    description: "An instance of ConfidentialLedgerBackup if the JsonReader was pointing to an instance of it, or null if\n it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup?alt=com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup&text=ConfidentialLedgerBackup\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.restoreRegion()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.restoreRegion()"
  name: "restoreRegion()"
  nameWithType: "ConfidentialLedgerBackup.restoreRegion()"
  summary: "Get the restore<wbr>Region property: The region where the backup of the ledger will eventually be restored to."
  syntax: "public String restoreRegion()"
  desc: "Get the restoreRegion property: The region where the backup of the ledger will eventually be restored to."
  returns:
    description: "the restoreRegion value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "ConfidentialLedgerBackup.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.uri()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.uri()"
  name: "uri()"
  nameWithType: "ConfidentialLedgerBackup.uri()"
  summary: "Get the uri property: SAS URI used to access the backup Fileshare."
  syntax: "public String uri()"
  desc: "Get the uri property: SAS URI used to access the backup Fileshare."
  returns:
    description: "the uri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.validate()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.validate()"
  name: "validate()"
  nameWithType: "ConfidentialLedgerBackup.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.withRestoreRegion(java.lang.String)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.withRestoreRegion(String restoreRegion)"
  name: "withRestoreRegion(String restoreRegion)"
  nameWithType: "ConfidentialLedgerBackup.withRestoreRegion(String restoreRegion)"
  summary: "Set the restore<wbr>Region property: The region where the backup of the ledger will eventually be restored to."
  parameters:
  - description: "the restoreRegion value to set."
    name: "restoreRegion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerBackup withRestoreRegion(String restoreRegion)"
  desc: "Set the restoreRegion property: The region where the backup of the ledger will eventually be restored to."
  returns:
    description: "the ConfidentialLedgerBackup object itself."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup?alt=com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup&text=ConfidentialLedgerBackup\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.withUri(java.lang.String)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup.withUri(String uri)"
  name: "withUri(String uri)"
  nameWithType: "ConfidentialLedgerBackup.withUri(String uri)"
  summary: "Set the uri property: SAS URI used to access the backup Fileshare."
  parameters:
  - description: "the uri value to set."
    name: "uri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ConfidentialLedgerBackup withUri(String uri)"
  desc: "Set the uri property: SAS URI used to access the backup Fileshare."
  returns:
    description: "the ConfidentialLedgerBackup object itself."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup?alt=com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup&text=ConfidentialLedgerBackup\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Object representing Backup properties of a Confidential Ledger Resource."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup?alt=com.azure.resourcemanager.confidentialledger.models.ConfidentialLedgerBackup&text=ConfidentialLedgerBackup\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.confidentialledger.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-confidentialledger:1.0.0-beta.5
