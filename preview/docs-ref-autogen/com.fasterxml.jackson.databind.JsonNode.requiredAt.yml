### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.JsonNode.requiredAt*"
fullName: "com.fasterxml.jackson.databind.JsonNode.requiredAt"
name: "requiredAt"
nameWithType: "JsonNode.requiredAt"
members:
- uid: "com.fasterxml.jackson.databind.JsonNode.requiredAt(com.fasterxml.jackson.core.JsonPointer)"
  fullName: "com.fasterxml.jackson.databind.JsonNode.requiredAt(JsonPointer path)"
  name: "requiredAt(JsonPointer path)"
  nameWithType: "JsonNode.requiredAt(JsonPointer path)"
  summary: "Method is functionally equivalent to `at(path).required()` and can be used to check that there is an actual value node at specified <xref uid=\"com.fasterxml.jackson.core.JsonPointer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonPointer\"></xref> starting from `this` node (but note that value may be explicit JSON null value). If such value node exists `this` is returned to allow chaining; otherwise <xref uid=\"java.lang.IllegalArgumentException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalArgumentException\"></xref> is thrown."
  parameters:
  - name: "path"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonPointer?alt=com.fasterxml.jackson.core.JsonPointer&text=JsonPointer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public final JsonNode requiredAt(JsonPointer path)"
  exceptions:
  - description: "if no value node exists at given <code>JSON Pointer</code> path"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "<code>this</code> node to allow chaining"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.JsonNode.requiredAt(java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.JsonNode.requiredAt(String pathExpr)"
  name: "requiredAt(String pathExpr)"
  nameWithType: "JsonNode.requiredAt(String pathExpr)"
  summary: "Method is functionally equivalent to `at(pathExpr).required()` and can be used to check that there is an actual value node at specified <xref uid=\"com.fasterxml.jackson.core.JsonPointer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonPointer\"></xref> starting from `this` node (but note that value may be explicit JSON null value). If such value node exists `this` is returned to allow chaining; otherwise <xref uid=\"java.lang.IllegalArgumentException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalArgumentException\"></xref> is thrown."
  parameters:
  - name: "pathExpr"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonNode requiredAt(String pathExpr)"
  exceptions:
  - description: "if no value node exists at given <code>JSON Pointer</code> path"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "<code>this</code> node to allow chaining"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonNode?alt=com.fasterxml.jackson.databind.JsonNode&text=JsonNode\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
