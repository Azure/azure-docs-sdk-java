### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing"
fullName: "com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing"
name: "JsonSerialize.Typing"
nameWithType: "JsonSerialize.Typing"
summary: "Enumeration used with <xref uid=\"com.fasterxml.jackson.databind.annotation.JsonSerialize.typing*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonSerialize#typing\"></xref> property to define whether type detection is based on dynamic runtime type (DYNAMIC) or declared type (STATIC)."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum JsonSerialize.Typing extends Enum<JsonSerialize.Typing>"
fields:
- uid: "com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing.DEFAULT_TYPING"
  fullName: "com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing.DEFAULT_TYPING"
  name: "DEFAULT_TYPING"
  nameWithType: "JsonSerialize.Typing.DEFAULT_TYPING"
  summary: "Pseudo-value that is used to indicate \"use whatever is default used at higher level\"."
- uid: "com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing.DYNAMIC"
  fullName: "com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing.DYNAMIC"
  name: "DYNAMIC"
  nameWithType: "JsonSerialize.Typing.DYNAMIC"
  summary: "Value that indicates that the actual dynamic runtime type is to be used."
- uid: "com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing.STATIC"
  fullName: "com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing.STATIC"
  name: "STATIC"
  nameWithType: "JsonSerialize.Typing.STATIC"
  summary: "Value that indicates that the static declared type is to be used."
methods:
- uid: "com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "JsonSerialize.Typing.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JsonSerialize.Typing valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing?alt=com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing&text=Typing\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing.values()"
  fullName: "com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing.values()"
  name: "values()"
  nameWithType: "JsonSerialize.Typing.values()"
  syntax: "public static JsonSerialize.Typing[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing?alt=com.fasterxml.jackson.databind.annotation.JsonSerialize.Typing&text=Typing\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.fasterxml.jackson.databind.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
