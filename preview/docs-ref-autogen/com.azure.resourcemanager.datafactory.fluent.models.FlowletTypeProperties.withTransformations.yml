### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withTransformations*"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withTransformations"
name: "withTransformations"
nameWithType: "FlowletTypeProperties.withTransformations"
members:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withTransformations(java.util.List<com.azure.resourcemanager.datafactory.models.Transformation>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties.withTransformations(List<Transformation> transformations)"
  name: "withTransformations(List<Transformation> transformations)"
  nameWithType: "FlowletTypeProperties.withTransformations(List<Transformation> transformations)"
  summary: "Set the transformations property: List of transformations in Flowlet."
  parameters:
  - description: "the transformations value to set."
    name: "transformations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Transformation?alt=com.azure.resourcemanager.datafactory.models.Transformation&text=Transformation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FlowletTypeProperties withTransformations(List<Transformation> transformations)"
  returns:
    description: "the FlowletTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.FlowletTypeProperties&text=FlowletTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.7
