### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.Deserializers
  id: Deserializers
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser
  children:
  - com.fasterxml.jackson.databind.deser.Deserializers.Base
  - com.fasterxml.jackson.databind.deser.Deserializers.findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.Deserializers.findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.Deserializers.findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.Deserializers.findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.Deserializers.findEnumDeserializer(java.lang.Class<?>,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  - com.fasterxml.jackson.databind.deser.Deserializers.findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.Deserializers.findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.Deserializers.findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.Deserializers.findTreeNodeDeserializer(java.lang.Class<? extends com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  langs:
  - java
  name: Deserializers
  nameWithType: Deserializers
  fullName: com.fasterxml.jackson.databind.deser.Deserializers
  type: Interface
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Interface that defines API for simple extensions that can provide additional deserializers for various types. Access is by a single callback method; instance is to either return a configured <xref uid="com.fasterxml.jackson.databind.JsonDeserializer" data-throw-if-not-resolved="false">JsonDeserializer</xref> for specified type, or null to indicate that it does not support handling of the type. In latter case, further calls can be made for other providers; in former case returned deserializer is used for handling of instances of specified type.


    It is **strongly recommended** that implementations always extend <xref uid="com.fasterxml.jackson.databind.deser.Deserializers.Base" data-throw-if-not-resolved="false">Deserializers.Base</xref> and NOT just implement <xref uid="com.fasterxml.jackson.databind.deser.Deserializers" data-throw-if-not-resolved="false">Deserializers</xref>.
  syntax:
    content: public interface Deserializers
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers
  langs:
  - java
  name: findArrayDeserializer(ArrayType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  nameWithType: Deserializers.findArrayDeserializer(ArrayType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findArrayDeserializer(ArrayType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.findArrayDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to locate serializer for specified array type.


    Deserializer for element type may be passed, if configured explicitly at higher level (by annotations, typically), but usually are not. Type deserializer for element is passed if one is needed based on contextual information (annotations on declared element class; or on field or method type is associated with).
  syntax:
    content: public abstract JsonDeserializer<?> findArrayDeserializer(ArrayType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.type.ArrayType
      description: Type of array instances to deserialize
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
      description: Configuration in effect
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
      description: >-
        Definition of the enumeration type that contains class annotations and
            other information typically needed for building deserializers
    - id: elementTypeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
      description: >-
        If element type needs polymorphic type handling, this is
            the type information deserializer to use; should usually be used as is when constructing
            array deserializer.
    - id: elementDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: >-
        Deserializer to use for elements, if explicitly defined (by using
            annotations, for exmple). May be null, in which case it should be resolved here (or using
            <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer" data-throw-if-not-resolved="false">ResolvableDeserializer</xref> callback)
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: Deserializer to use for the type; or null if this provider does not know how to construct it
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  id: findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers
  langs:
  - java
  name: findBeanDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc)
  nameWithType: Deserializers.findBeanDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findBeanDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.findBeanDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to locate deserializer for specified value type which does not belong to any other category (not an Enum, Collection, Map, Array, reference value or tree node)
  syntax:
    content: public abstract JsonDeserializer<?> findBeanDeserializer(JavaType type, DeserializationConfig config, BeanDescription beanDesc)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
      description: Bean type to deserialize
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
      description: Configuration in effect
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
      description: >-
        Definition of the enumeration type that contains class annotations and
            other information typically needed for building deserializers
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: Deserializer to use for the type; or null if this provider does not know how to construct it
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers
  langs:
  - java
  name: findCollectionDeserializer(CollectionType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  nameWithType: Deserializers.findCollectionDeserializer(CollectionType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findCollectionDeserializer(CollectionType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.findCollectionDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to locate serializer for specified <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> (List, Set etc) type.


    Deserializer for element type may be passed, if configured explicitly at higher level (by annotations, typically), but usually are not. Type deserializer for element is passed if one is needed based on contextual information (annotations on declared element class; or on field or method type is associated with).
  syntax:
    content: public abstract JsonDeserializer<?> findCollectionDeserializer(CollectionType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.type.CollectionType
      description: Type of collection instances to deserialize
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
      description: Configuration in effect
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
      description: >-
        Definition of the enumeration type that contains class annotations and
            other information typically needed for building deserializers
    - id: elementTypeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
      description: >-
        If element type needs polymorphic type handling, this is
            the type information deserializer to use; should usually be used as is when constructing
            array deserializer.
    - id: elementDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: >-
        Deserializer to use for elements, if explicitly defined (by using
            annotations, for exmple). May be null, in which case it should be resolved here (or using
            <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer" data-throw-if-not-resolved="false">ResolvableDeserializer</xref> callback)
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: Deserializer to use for the type; or null if this provider does not know how to construct it
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers
  langs:
  - java
  name: findCollectionLikeDeserializer(CollectionLikeType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  nameWithType: Deserializers.findCollectionLikeDeserializer(CollectionLikeType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findCollectionLikeDeserializer(CollectionLikeType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.findCollectionLikeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to locate serializer for specified "Collection-like" type (one that acts like <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> but does not implement it).


    Deserializer for element type may be passed, if configured explicitly at higher level (by annotations, typically), but usually are not. Type deserializer for element is passed if one is needed based on contextual information (annotations on declared element class; or on field or method type is associated with).
  syntax:
    content: public abstract JsonDeserializer<?> findCollectionLikeDeserializer(CollectionLikeType type, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.type.CollectionLikeType
      description: Type of instances to deserialize
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
      description: Configuration in effect
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
      description: >-
        Definition of the enumeration type that contains class annotations and
            other information typically needed for building deserializers
    - id: elementTypeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
      description: >-
        If element type needs polymorphic type handling, this is
            the type information deserializer to use; should usually be used as is when constructing
            array deserializer.
    - id: elementDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: >-
        Deserializer to use for elements, if explicitly defined (by using
            annotations, for exmple). May be null, in which case it should be resolved here (or using
            <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer" data-throw-if-not-resolved="false">ResolvableDeserializer</xref> callback)
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: Deserializer to use for the type; or null if this provider does not know how to construct it
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findEnumDeserializer(java.lang.Class<?>,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  id: findEnumDeserializer(java.lang.Class<?>,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers
  langs:
  - java
  name: findEnumDeserializer(Class<?> type, DeserializationConfig config, BeanDescription beanDesc)
  nameWithType: Deserializers.findEnumDeserializer(Class<?> type, DeserializationConfig config, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findEnumDeserializer(Class<?> type, DeserializationConfig config, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.findEnumDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to locate deserializer for specified <xref uid="java.lang.Enum" data-throw-if-not-resolved="false">java.lang.Enum</xref> type.
  syntax:
    content: public abstract JsonDeserializer<?> findEnumDeserializer(Class<?> type, DeserializationConfig config, BeanDescription beanDesc)
    parameters:
    - id: type
      type: java.lang.Class<?>
      description: Type of <xref uid="java.lang.Enum" data-throw-if-not-resolved="false">java.lang.Enum</xref> instances to deserialize
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
      description: Configuration in effect
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
      description: >-
        Definition of the enumeration type that contains class annotations and
            other information typically needed for building deserializers
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: Deserializer to use for the type; or null if this provider does not know how to construct it
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers
  langs:
  - java
  name: findMapDeserializer(MapType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  nameWithType: Deserializers.findMapDeserializer(MapType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findMapDeserializer(MapType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.findMapDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to locate deserializer for specified <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> type.


    Deserializer for element type may be passed, if configured explicitly at higher level (by annotations, typically), but usually are not. Type deserializer for element is passed if one is needed based on contextual information (annotations on declared element class; or on field or method type is associated with).


    Similarly, a <xref uid="com.fasterxml.jackson.databind.KeyDeserializer" data-throw-if-not-resolved="false">KeyDeserializer</xref> may be passed, but this is only done if there is a specific configuration override (annotations) to indicate instance to use. Otherwise null is passed, and key deserializer needs to be obtained later during resolution (using <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve*" data-throw-if-not-resolved="false">ResolvableDeserializer#resolve</xref>).
  syntax:
    content: public abstract JsonDeserializer<?> findMapDeserializer(MapType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.type.MapType
      description: Type of <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> instances to deserialize
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
      description: Configuration in effect
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
      description: >-
        Definition of the enumeration type that contains class annotations and
            other information typically needed for building deserializers
    - id: keyDeserializer
      type: com.fasterxml.jackson.databind.KeyDeserializer
      description: >-
        Key deserializer use, if it is defined via annotations or other configuration;
            null if default key deserializer for key type can be used.
    - id: elementTypeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
      description: >-
        If element type needs polymorphic type handling, this is
            the type information deserializer to use; should usually be used as is when constructing
            array deserializer.
    - id: elementDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: >-
        Deserializer to use for elements, if explicitly defined (by using
            annotations, for exmple). May be null, in which case it should be resolved here (or using
            <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer" data-throw-if-not-resolved="false">ResolvableDeserializer</xref> callback)
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: Deserializer to use for the type; or null if this provider does not know how to construct it
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers
  langs:
  - java
  name: findMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  nameWithType: Deserializers.findMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.findMapLikeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called to locate serializer for specified "Map-like" type (one that acts like <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> but does not implement it).


    Deserializer for element type may be passed, if configured explicitly at higher level (by annotations, typically), but usually are not. Type deserializer for element is passed if one is needed based on contextual information (annotations on declared element class; or on field or method type is associated with).


    Similarly, a <xref uid="com.fasterxml.jackson.databind.KeyDeserializer" data-throw-if-not-resolved="false">KeyDeserializer</xref> may be passed, but this is only done if there is a specific configuration override (annotations) to indicate instance to use. Otherwise null is passed, and key deserializer needs to be obtained later during resolution (using <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer.resolve*" data-throw-if-not-resolved="false">ResolvableDeserializer#resolve</xref>).
  syntax:
    content: public abstract JsonDeserializer<?> findMapLikeDeserializer(MapLikeType type, DeserializationConfig config, BeanDescription beanDesc, KeyDeserializer keyDeserializer, TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.type.MapLikeType
      description: Type of <xref uid="java.util.Map" data-throw-if-not-resolved="false">java.util.Map</xref> instances to deserialize
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
      description: Configuration in effect
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
      description: >-
        Definition of the enumeration type that contains class annotations and
            other information typically needed for building deserializers
    - id: keyDeserializer
      type: com.fasterxml.jackson.databind.KeyDeserializer
      description: >-
        Key deserializer use, if it is defined via annotations or other configuration;
            null if default key deserializer for key type can be used.
    - id: elementTypeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
      description: >-
        If element type needs polymorphic type handling, this is
            the type information deserializer to use; should usually be used as is when constructing
            array deserializer.
    - id: elementDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: >-
        Deserializer to use for elements, if explicitly defined (by using
            annotations, for exmple). May be null, in which case it should be resolved here (or using
            <xref uid="com.fasterxml.jackson.databind.deser.ResolvableDeserializer" data-throw-if-not-resolved="false">ResolvableDeserializer</xref> callback)
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: Deserializer to use for the type; or null if this provider does not know how to construct it
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: findReferenceDeserializer(com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers
  langs:
  - java
  name: findReferenceDeserializer(ReferenceType refType, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer)
  nameWithType: Deserializers.findReferenceDeserializer(ReferenceType refType, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findReferenceDeserializer(ReferenceType refType, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.findReferenceDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to locate deserializer for value that is of referential type,
  syntax:
    content: public abstract JsonDeserializer<?> findReferenceDeserializer(ReferenceType refType, DeserializationConfig config, BeanDescription beanDesc, TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer)
    parameters:
    - id: refType
      type: com.fasterxml.jackson.databind.type.ReferenceType
      description: Specific referential type to deserialize
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
      description: Configuration in effect
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
      description: >-
        Definition of the reference type that contains class annotations and
            other information typically needed for building deserializers
    - id: contentTypeDeserializer
      type: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
      description: Possible type deserializer for referenced value
    - id: contentDeserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: >-
        Value deserializer to use for referenced value, if indicated
            by property annotation
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: Deserializer to use for the type; or null if this provider does not know how to construct it
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findTreeNodeDeserializer(java.lang.Class<? extends com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  id: findTreeNodeDeserializer(java.lang.Class<? extends com.fasterxml.jackson.databind.JsonNode>,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.Deserializers
  langs:
  - java
  name: findTreeNodeDeserializer(Class<? extends JsonNode> nodeType, DeserializationConfig config, BeanDescription beanDesc)
  nameWithType: Deserializers.findTreeNodeDeserializer(Class<? extends JsonNode> nodeType, DeserializationConfig config, BeanDescription beanDesc)
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findTreeNodeDeserializer(Class<? extends JsonNode> nodeType, DeserializationConfig config, BeanDescription beanDesc)
  overload: com.fasterxml.jackson.databind.deser.Deserializers.findTreeNodeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called to locate deserializer for specified JSON tree node type.
  syntax:
    content: public abstract JsonDeserializer<?> findTreeNodeDeserializer(Class<? extends JsonNode> nodeType, DeserializationConfig config, BeanDescription beanDesc)
    parameters:
    - id: nodeType
      type: java.lang.Class<? extends com.fasterxml.jackson.databind.JsonNode>
      description: >-
        Specific type of JSON tree nodes to deserialize
          (subtype of <xref uid="com.fasterxml.jackson.databind.JsonNode" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.JsonNode</xref>)
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
      description: Configuration in effect
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: Deserializer to use for the type; or null if this provider does not know how to construct it
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
references:
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findEnumDeserializer*
  name: findEnumDeserializer
  nameWithType: Deserializers.findEnumDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findEnumDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: java.lang.Class<? extends com.fasterxml.jackson.databind.JsonNode>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends com.fasterxml.jackson.databind.JsonNode'
    name: JsonNode
    fullName: '? extends com.fasterxml.jackson.databind.JsonNode'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findTreeNodeDeserializer*
  name: findTreeNodeDeserializer
  nameWithType: Deserializers.findTreeNodeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findTreeNodeDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findBeanDeserializer*
  name: findBeanDeserializer
  nameWithType: Deserializers.findBeanDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findBeanDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.ReferenceType
  name: ReferenceType
  nameWithType: ReferenceType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType
- uid: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
  name: TypeDeserializer
  nameWithType: TypeDeserializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeDeserializer
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findReferenceDeserializer*
  name: findReferenceDeserializer
  nameWithType: Deserializers.findReferenceDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findReferenceDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.ArrayType
  name: ArrayType
  nameWithType: ArrayType
  fullName: com.fasterxml.jackson.databind.type.ArrayType
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findArrayDeserializer*
  name: findArrayDeserializer
  nameWithType: Deserializers.findArrayDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findArrayDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.CollectionType
  name: CollectionType
  nameWithType: CollectionType
  fullName: com.fasterxml.jackson.databind.type.CollectionType
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findCollectionDeserializer*
  name: findCollectionDeserializer
  nameWithType: Deserializers.findCollectionDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findCollectionDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.CollectionLikeType
  name: CollectionLikeType
  nameWithType: CollectionLikeType
  fullName: com.fasterxml.jackson.databind.type.CollectionLikeType
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findCollectionLikeDeserializer*
  name: findCollectionLikeDeserializer
  nameWithType: Deserializers.findCollectionLikeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findCollectionLikeDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.MapType
  name: MapType
  nameWithType: MapType
  fullName: com.fasterxml.jackson.databind.type.MapType
- uid: com.fasterxml.jackson.databind.KeyDeserializer
  name: KeyDeserializer
  nameWithType: KeyDeserializer
  fullName: com.fasterxml.jackson.databind.KeyDeserializer
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findMapDeserializer*
  name: findMapDeserializer
  nameWithType: Deserializers.findMapDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findMapDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.MapLikeType
  name: MapLikeType
  nameWithType: MapLikeType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.deser.Deserializers.findMapLikeDeserializer*
  name: findMapLikeDeserializer
  nameWithType: Deserializers.findMapLikeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.findMapLikeDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.Deserializers.Base
  name: Deserializers.Base
  nameWithType: Deserializers.Base
  fullName: com.fasterxml.jackson.databind.deser.Deserializers.Base
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: '? extends com.fasterxml.jackson.databind.JsonNode'
  name: '? extends JsonNode'
  nameWithType: '? extends JsonNode'
  fullName: '? extends com.fasterxml.jackson.databind.JsonNode'
