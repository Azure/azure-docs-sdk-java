### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp.request*"
fullName: "com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp.request"
name: "request"
nameWithType: "ContractApiHttp.request"
members:
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp.request(com.microsoft.azure.sdk.iot.deps.transport.http.HttpMethod,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp.request(HttpMethod httpMethod, String path, Map<String,String> headerParameters, String payload)"
  name: "request(HttpMethod httpMethod, String path, Map<String,String> headerParameters, String payload)"
  nameWithType: "ContractApiHttp.request(HttpMethod httpMethod, String path, Map<String,String> headerParameters, String payload)"
  summary: "This function sends a raw information to the Device Provisioning Service service using http protocol.\n\nThe purpose of this function is be the base communication between the controllers and the Service, and should be used only if you have full understanding of the Device Provisioning Service rest APIs. We highly recommend that you uses the APis under **<xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ProvisioningServiceClient\"></xref>** instead of directly access the rest API using this class."
  parameters:
  - description: "is the http verb in the request (GET, POST, PUT, DELETE, PATCH)."
    name: "httpMethod"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.http.HttpMethod?alt=com.microsoft.azure.sdk.iot.deps.transport.http.HttpMethod&text=HttpMethod\" data-throw-if-not-resolved=\"False\" />"
  - description: "is the path to the resource in the service that will compose the URL."
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "is a list of pairs key values that contains optional parameters in the http header."
    name: "headerParameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "is the body of the message."
    name: "payload"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public synchronized HttpResponse request(HttpMethod httpMethod, String path, Map<String,String> headerParameters, String payload)"
  exceptions:
  - description: "if the Service Client failed to exchange http messages with the Provisioning Service."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException?alt=com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException&text=ProvisioningServiceClientException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "the <code>HttpResponse</code> that contains the response of the request."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.http.HttpResponse?alt=com.microsoft.azure.sdk.iot.deps.transport.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.provisioning.service.contract"
artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
