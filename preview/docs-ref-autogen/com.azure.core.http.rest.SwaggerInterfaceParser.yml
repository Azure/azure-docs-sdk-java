### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.rest.SwaggerInterfaceParser"
  id: "SwaggerInterfaceParser"
  parent: "com.azure.core.http.rest"
  children:
  - "com.azure.core.http.rest.SwaggerInterfaceParser.SwaggerInterfaceParser(java.lang.Class<?>,com.azure.core.util.serializer.SerializerAdapter)"
  - "com.azure.core.http.rest.SwaggerInterfaceParser.SwaggerInterfaceParser(java.lang.Class<?>,com.azure.core.util.serializer.SerializerAdapter,java.lang.String)"
  - "com.azure.core.http.rest.SwaggerInterfaceParser.getHost()"
  - "com.azure.core.http.rest.SwaggerInterfaceParser.getMethodParser(java.lang.reflect.Method)"
  - "com.azure.core.http.rest.SwaggerInterfaceParser.getServiceName()"
  langs:
  - "java"
  name: "SwaggerInterfaceParser"
  nameWithType: "SwaggerInterfaceParser"
  fullName: "com.azure.core.http.rest.SwaggerInterfaceParser"
  type: "Class"
  package: "com.azure.core.http.rest"
  summary: "The type responsible for creating individual Swagger interface method parsers from a Swagger interface."
  syntax:
    content: " class SwaggerInterfaceParser"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.rest.SwaggerInterfaceParser.SwaggerInterfaceParser(java.lang.Class<?>,com.azure.core.util.serializer.SerializerAdapter)"
  id: "SwaggerInterfaceParser(java.lang.Class<?>,com.azure.core.util.serializer.SerializerAdapter)"
  parent: "com.azure.core.http.rest.SwaggerInterfaceParser"
  langs:
  - "java"
  name: "SwaggerInterfaceParser(Class<?> swaggerInterface, SerializerAdapter serializer)"
  nameWithType: "SwaggerInterfaceParser.SwaggerInterfaceParser(Class<?> swaggerInterface, SerializerAdapter serializer)"
  fullName: "com.azure.core.http.rest.SwaggerInterfaceParser.SwaggerInterfaceParser(Class<?> swaggerInterface, SerializerAdapter serializer)"
  overload: "com.azure.core.http.rest.SwaggerInterfaceParser.SwaggerInterfaceParser*"
  type: "Constructor"
  package: "com.azure.core.http.rest"
  summary: "Create a SwaggerInterfaceParser object with the provided fully qualified interface name."
  syntax:
    content: " SwaggerInterfaceParser(Class<?> swaggerInterface, SerializerAdapter serializer)"
    parameters:
    - id: "swaggerInterface"
      type: "java.lang.Class<?>"
      description: "The interface that will be parsed."
    - id: "serializer"
      type: "com.azure.core.util.serializer.SerializerAdapter"
      description: "The serializer that will be used to serialize non-String header values and query values."
- uid: "com.azure.core.http.rest.SwaggerInterfaceParser.SwaggerInterfaceParser(java.lang.Class<?>,com.azure.core.util.serializer.SerializerAdapter,java.lang.String)"
  id: "SwaggerInterfaceParser(java.lang.Class<?>,com.azure.core.util.serializer.SerializerAdapter,java.lang.String)"
  parent: "com.azure.core.http.rest.SwaggerInterfaceParser"
  langs:
  - "java"
  name: "SwaggerInterfaceParser(Class<?> swaggerInterface, SerializerAdapter serializer, String host)"
  nameWithType: "SwaggerInterfaceParser.SwaggerInterfaceParser(Class<?> swaggerInterface, SerializerAdapter serializer, String host)"
  fullName: "com.azure.core.http.rest.SwaggerInterfaceParser.SwaggerInterfaceParser(Class<?> swaggerInterface, SerializerAdapter serializer, String host)"
  overload: "com.azure.core.http.rest.SwaggerInterfaceParser.SwaggerInterfaceParser*"
  type: "Constructor"
  package: "com.azure.core.http.rest"
  summary: "Create a SwaggerInterfaceParser object with the provided fully qualified interface name."
  syntax:
    content: " SwaggerInterfaceParser(Class<?> swaggerInterface, SerializerAdapter serializer, String host)"
    parameters:
    - id: "swaggerInterface"
      type: "java.lang.Class<?>"
      description: "The interface that will be parsed."
    - id: "serializer"
      type: "com.azure.core.util.serializer.SerializerAdapter"
      description: "The serializer that will be used to serialize non-String header values and query values."
    - id: "host"
      type: "java.lang.String"
      description: "The host of URLs that this Swagger interface targets."
- uid: "com.azure.core.http.rest.SwaggerInterfaceParser.getHost()"
  id: "getHost()"
  parent: "com.azure.core.http.rest.SwaggerInterfaceParser"
  langs:
  - "java"
  name: "getHost()"
  nameWithType: "SwaggerInterfaceParser.getHost()"
  fullName: "com.azure.core.http.rest.SwaggerInterfaceParser.getHost()"
  overload: "com.azure.core.http.rest.SwaggerInterfaceParser.getHost*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the desired host that the provided Swagger interface will target with its REST API calls. This value is retrieved from the @Host annotation placed on the Swagger interface."
  syntax:
    content: " String getHost()"
    return:
      type: "java.lang.String"
      description: "The value of the @Host annotation."
- uid: "com.azure.core.http.rest.SwaggerInterfaceParser.getMethodParser(java.lang.reflect.Method)"
  id: "getMethodParser(java.lang.reflect.Method)"
  parent: "com.azure.core.http.rest.SwaggerInterfaceParser"
  langs:
  - "java"
  name: "getMethodParser(Method swaggerMethod)"
  nameWithType: "SwaggerInterfaceParser.getMethodParser(Method swaggerMethod)"
  fullName: "com.azure.core.http.rest.SwaggerInterfaceParser.getMethodParser(Method swaggerMethod)"
  overload: "com.azure.core.http.rest.SwaggerInterfaceParser.getMethodParser*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the method parser that is associated with the provided swaggerMethod. The method parser can be used to get details about the Swagger REST API call."
  syntax:
    content: " SwaggerMethodParser getMethodParser(Method swaggerMethod)"
    parameters:
    - id: "swaggerMethod"
      type: "java.lang.reflect.Method"
      description: "the method to generate a parser for"
    return:
      type: "com.azure.core.http.rest.SwaggerMethodParser"
      description: "the SwaggerMethodParser associated with the provided swaggerMethod"
- uid: "com.azure.core.http.rest.SwaggerInterfaceParser.getServiceName()"
  id: "getServiceName()"
  parent: "com.azure.core.http.rest.SwaggerInterfaceParser"
  langs:
  - "java"
  name: "getServiceName()"
  nameWithType: "SwaggerInterfaceParser.getServiceName()"
  fullName: "com.azure.core.http.rest.SwaggerInterfaceParser.getServiceName()"
  overload: "com.azure.core.http.rest.SwaggerInterfaceParser.getServiceName*"
  type: "Method"
  package: "com.azure.core.http.rest"
  syntax:
    content: " String getServiceName()"
    return:
      type: "java.lang.String"
references:
- uid: "java.lang.Class<?>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.util.serializer.SerializerAdapter"
  name: "SerializerAdapter"
  nameWithType: "SerializerAdapter"
  fullName: "com.azure.core.util.serializer.SerializerAdapter"
- uid: "com.azure.core.http.rest.SwaggerInterfaceParser.SwaggerInterfaceParser*"
  name: "SwaggerInterfaceParser"
  nameWithType: "SwaggerInterfaceParser.SwaggerInterfaceParser"
  fullName: "com.azure.core.http.rest.SwaggerInterfaceParser.SwaggerInterfaceParser"
  package: "com.azure.core.http.rest"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.reflect.Method"
  spec.java:
  - uid: "java.lang.reflect.Method"
    name: "Method"
    fullName: "java.lang.reflect.Method"
- uid: "com.azure.core.http.rest.SwaggerMethodParser"
  name: "SwaggerMethodParser"
  nameWithType: "SwaggerMethodParser"
  fullName: "com.azure.core.http.rest.SwaggerMethodParser"
- uid: "com.azure.core.http.rest.SwaggerInterfaceParser.getMethodParser*"
  name: "getMethodParser"
  nameWithType: "SwaggerInterfaceParser.getMethodParser"
  fullName: "com.azure.core.http.rest.SwaggerInterfaceParser.getMethodParser"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.SwaggerInterfaceParser.getHost*"
  name: "getHost"
  nameWithType: "SwaggerInterfaceParser.getHost"
  fullName: "com.azure.core.http.rest.SwaggerInterfaceParser.getHost"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.SwaggerInterfaceParser.getServiceName*"
  name: "getServiceName"
  nameWithType: "SwaggerInterfaceParser.getServiceName"
  fullName: "com.azure.core.http.rest.SwaggerInterfaceParser.getServiceName"
  package: "com.azure.core.http.rest"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
