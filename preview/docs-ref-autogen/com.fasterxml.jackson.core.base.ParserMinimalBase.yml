### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase
  id: ParserMinimalBase
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base
  children:
  - com.fasterxml.jackson.core.base.ParserMinimalBase.BD_MAX_INT
  - com.fasterxml.jackson.core.base.ParserMinimalBase.BD_MAX_LONG
  - com.fasterxml.jackson.core.base.ParserMinimalBase.BD_MIN_INT
  - com.fasterxml.jackson.core.base.ParserMinimalBase.BD_MIN_LONG
  - com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MAX_INT
  - com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MAX_LONG
  - com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MIN_INT
  - com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MIN_LONG
  - com.fasterxml.jackson.core.base.ParserMinimalBase.CHAR_NULL
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_0
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_9
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_APOS
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_ASTERISK
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_BACKSLASH
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_COLON
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_COMMA
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_CR
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_E
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_HASH
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LBRACKET
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LCURLY
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LF
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_MINUS
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_PERIOD
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_PLUS
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_QUOTE
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_RBRACKET
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_RCURLY
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_SLASH
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_SPACE
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_TAB
  - com.fasterxml.jackson.core.base.ParserMinimalBase.INT_e
  - com.fasterxml.jackson.core.base.ParserMinimalBase.MAX_ERROR_TOKEN_LENGTH
  - com.fasterxml.jackson.core.base.ParserMinimalBase.MAX_INT_D
  - com.fasterxml.jackson.core.base.ParserMinimalBase.MAX_INT_L
  - com.fasterxml.jackson.core.base.ParserMinimalBase.MAX_LONG_D
  - com.fasterxml.jackson.core.base.ParserMinimalBase.MIN_INT_D
  - com.fasterxml.jackson.core.base.ParserMinimalBase.MIN_INT_L
  - com.fasterxml.jackson.core.base.ParserMinimalBase.MIN_LONG_D
  - com.fasterxml.jackson.core.base.ParserMinimalBase.NO_BYTES
  - com.fasterxml.jackson.core.base.ParserMinimalBase.NO_INTS
  - com.fasterxml.jackson.core.base.ParserMinimalBase.NR_BIGDECIMAL
  - com.fasterxml.jackson.core.base.ParserMinimalBase.NR_BIGINT
  - com.fasterxml.jackson.core.base.ParserMinimalBase.NR_DOUBLE
  - com.fasterxml.jackson.core.base.ParserMinimalBase.NR_FLOAT
  - com.fasterxml.jackson.core.base.ParserMinimalBase.NR_INT
  - com.fasterxml.jackson.core.base.ParserMinimalBase.NR_LONG
  - com.fasterxml.jackson.core.base.ParserMinimalBase.NR_UNKNOWN
  - com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[])
  - com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._currToken
  - com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._handleEOF()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._lastClearedToken
  - com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()
  - com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.close()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentName()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getParsingContext()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getText()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasTextCharacters()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.isClosed()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.overrideCurrentName(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int,java.lang.String)
  - com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()
  langs:
  - java
  name: ParserMinimalBase
  nameWithType: ParserMinimalBase
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase
  type: Class
  package: com.fasterxml.jackson.core.base
  summary: >-
    Intermediate base class used by all Jackson <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> implementations, but does not add any additional fields that depend on particular method of obtaining input.


    Note that 'minimal' here mostly refers to minimal number of fields (size) and functionality that is specific to certain types of parser implementations; but not necessarily to number of methods.
  syntax:
    content: public abstract class ParserMinimalBase extends JsonParser
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.JsonParser
  inheritedMembers:
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
  - com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
  - com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
  - com.fasterxml.jackson.core.JsonParser._codec()
  - com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
  - com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
  - com.fasterxml.jackson.core.JsonParser.canParseAsync()
  - com.fasterxml.jackson.core.JsonParser.canReadObjectId()
  - com.fasterxml.jackson.core.JsonParser.canReadTypeId()
  - com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.JsonParser.clearCurrentToken()
  - com.fasterxml.jackson.core.JsonParser.close()
  - com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  - com.fasterxml.jackson.core.JsonParser.currentName()
  - com.fasterxml.jackson.core.JsonParser.currentToken()
  - com.fasterxml.jackson.core.JsonParser.currentTokenId()
  - com.fasterxml.jackson.core.JsonParser.disable(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.JsonParser.enable(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.JsonParser.finishToken()
  - com.fasterxml.jackson.core.JsonParser.getBigIntegerValue()
  - com.fasterxml.jackson.core.JsonParser.getBinaryValue()
  - com.fasterxml.jackson.core.JsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.core.JsonParser.getBooleanValue()
  - com.fasterxml.jackson.core.JsonParser.getByteValue()
  - com.fasterxml.jackson.core.JsonParser.getCodec()
  - com.fasterxml.jackson.core.JsonParser.getCurrentLocation()
  - com.fasterxml.jackson.core.JsonParser.getCurrentName()
  - com.fasterxml.jackson.core.JsonParser.getCurrentToken()
  - com.fasterxml.jackson.core.JsonParser.getCurrentTokenId()
  - com.fasterxml.jackson.core.JsonParser.getCurrentValue()
  - com.fasterxml.jackson.core.JsonParser.getDecimalValue()
  - com.fasterxml.jackson.core.JsonParser.getDoubleValue()
  - com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()
  - com.fasterxml.jackson.core.JsonParser.getFeatureMask()
  - com.fasterxml.jackson.core.JsonParser.getFloatValue()
  - com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
  - com.fasterxml.jackson.core.JsonParser.getInputSource()
  - com.fasterxml.jackson.core.JsonParser.getIntValue()
  - com.fasterxml.jackson.core.JsonParser.getLastClearedToken()
  - com.fasterxml.jackson.core.JsonParser.getLongValue()
  - com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
  - com.fasterxml.jackson.core.JsonParser.getNumberType()
  - com.fasterxml.jackson.core.JsonParser.getNumberValue()
  - com.fasterxml.jackson.core.JsonParser.getObjectId()
  - com.fasterxml.jackson.core.JsonParser.getParsingContext()
  - com.fasterxml.jackson.core.JsonParser.getSchema()
  - com.fasterxml.jackson.core.JsonParser.getShortValue()
  - com.fasterxml.jackson.core.JsonParser.getText()
  - com.fasterxml.jackson.core.JsonParser.getText(java.io.Writer)
  - com.fasterxml.jackson.core.JsonParser.getTextCharacters()
  - com.fasterxml.jackson.core.JsonParser.getTextLength()
  - com.fasterxml.jackson.core.JsonParser.getTextOffset()
  - com.fasterxml.jackson.core.JsonParser.getTokenLocation()
  - com.fasterxml.jackson.core.JsonParser.getTypeId()
  - com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()
  - com.fasterxml.jackson.core.JsonParser.getValueAsBoolean(boolean)
  - com.fasterxml.jackson.core.JsonParser.getValueAsDouble()
  - com.fasterxml.jackson.core.JsonParser.getValueAsDouble(double)
  - com.fasterxml.jackson.core.JsonParser.getValueAsInt()
  - com.fasterxml.jackson.core.JsonParser.getValueAsInt(int)
  - com.fasterxml.jackson.core.JsonParser.getValueAsLong()
  - com.fasterxml.jackson.core.JsonParser.getValueAsLong(long)
  - com.fasterxml.jackson.core.JsonParser.getValueAsString()
  - com.fasterxml.jackson.core.JsonParser.getValueAsString(java.lang.String)
  - com.fasterxml.jackson.core.JsonParser.hasCurrentToken()
  - com.fasterxml.jackson.core.JsonParser.hasTextCharacters()
  - com.fasterxml.jackson.core.JsonParser.hasToken(com.fasterxml.jackson.core.JsonToken)
  - com.fasterxml.jackson.core.JsonParser.hasTokenId(int)
  - com.fasterxml.jackson.core.JsonParser.isClosed()
  - com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  - com.fasterxml.jackson.core.JsonParser.isExpectedStartArrayToken()
  - com.fasterxml.jackson.core.JsonParser.isExpectedStartObjectToken()
  - com.fasterxml.jackson.core.JsonParser.isNaN()
  - com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
  - com.fasterxml.jackson.core.JsonParser.nextFieldName()
  - com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
  - com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
  - com.fasterxml.jackson.core.JsonParser.nextTextValue()
  - com.fasterxml.jackson.core.JsonParser.nextToken()
  - com.fasterxml.jackson.core.JsonParser.nextValue()
  - com.fasterxml.jackson.core.JsonParser.overrideCurrentName(java.lang.String)
  - com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)
  - com.fasterxml.jackson.core.JsonParser.overrideStdFeatures(int,int)
  - com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  - com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
  - com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)
  - com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
  - com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()
  - com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  - com.fasterxml.jackson.core.JsonParser.setCurrentValue(java.lang.Object)
  - com.fasterxml.jackson.core.JsonParser.setFeatureMask(int)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
  - com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
  - com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.core.JsonParser.skipChildren()
  - com.fasterxml.jackson.core.JsonParser.version()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.BD_MAX_INT
  id: BD_MAX_INT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: BD_MAX_INT
  nameWithType: ParserMinimalBase.BD_MAX_INT
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.BD_MAX_INT
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final BigDecimal BD_MAX_INT
    return:
      type: java.math.BigDecimal
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.BD_MAX_LONG
  id: BD_MAX_LONG
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: BD_MAX_LONG
  nameWithType: ParserMinimalBase.BD_MAX_LONG
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.BD_MAX_LONG
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final BigDecimal BD_MAX_LONG
    return:
      type: java.math.BigDecimal
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.BD_MIN_INT
  id: BD_MIN_INT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: BD_MIN_INT
  nameWithType: ParserMinimalBase.BD_MIN_INT
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.BD_MIN_INT
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final BigDecimal BD_MIN_INT
    return:
      type: java.math.BigDecimal
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.BD_MIN_LONG
  id: BD_MIN_LONG
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: BD_MIN_LONG
  nameWithType: ParserMinimalBase.BD_MIN_LONG
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.BD_MIN_LONG
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final BigDecimal BD_MIN_LONG
    return:
      type: java.math.BigDecimal
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MAX_INT
  id: BI_MAX_INT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: BI_MAX_INT
  nameWithType: ParserMinimalBase.BI_MAX_INT
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MAX_INT
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final BigInteger BI_MAX_INT
    return:
      type: java.math.BigInteger
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MAX_LONG
  id: BI_MAX_LONG
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: BI_MAX_LONG
  nameWithType: ParserMinimalBase.BI_MAX_LONG
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MAX_LONG
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final BigInteger BI_MAX_LONG
    return:
      type: java.math.BigInteger
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MIN_INT
  id: BI_MIN_INT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: BI_MIN_INT
  nameWithType: ParserMinimalBase.BI_MIN_INT
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MIN_INT
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final BigInteger BI_MIN_INT
    return:
      type: java.math.BigInteger
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MIN_LONG
  id: BI_MIN_LONG
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: BI_MIN_LONG
  nameWithType: ParserMinimalBase.BI_MIN_LONG
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.BI_MIN_LONG
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final BigInteger BI_MIN_LONG
    return:
      type: java.math.BigInteger
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.CHAR_NULL
  id: CHAR_NULL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: CHAR_NULL
  nameWithType: ParserMinimalBase.CHAR_NULL
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.CHAR_NULL
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final char CHAR_NULL
    return:
      type: char
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_0
  id: INT_0
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_0
  nameWithType: ParserMinimalBase.INT_0
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_0
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_0
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_9
  id: INT_9
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_9
  nameWithType: ParserMinimalBase.INT_9
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_9
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_9
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_APOS
  id: INT_APOS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_APOS
  nameWithType: ParserMinimalBase.INT_APOS
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_APOS
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_APOS
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_ASTERISK
  id: INT_ASTERISK
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_ASTERISK
  nameWithType: ParserMinimalBase.INT_ASTERISK
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_ASTERISK
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_ASTERISK
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_BACKSLASH
  id: INT_BACKSLASH
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_BACKSLASH
  nameWithType: ParserMinimalBase.INT_BACKSLASH
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_BACKSLASH
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_BACKSLASH
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_COLON
  id: INT_COLON
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_COLON
  nameWithType: ParserMinimalBase.INT_COLON
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_COLON
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_COLON
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_COMMA
  id: INT_COMMA
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_COMMA
  nameWithType: ParserMinimalBase.INT_COMMA
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_COMMA
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_COMMA
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_CR
  id: INT_CR
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_CR
  nameWithType: ParserMinimalBase.INT_CR
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_CR
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_CR
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_E
  id: INT_E
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_E
  nameWithType: ParserMinimalBase.INT_E
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_E
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_E
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_HASH
  id: INT_HASH
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_HASH
  nameWithType: ParserMinimalBase.INT_HASH
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_HASH
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_HASH
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LBRACKET
  id: INT_LBRACKET
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_LBRACKET
  nameWithType: ParserMinimalBase.INT_LBRACKET
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LBRACKET
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_LBRACKET
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LCURLY
  id: INT_LCURLY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_LCURLY
  nameWithType: ParserMinimalBase.INT_LCURLY
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LCURLY
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_LCURLY
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LF
  id: INT_LF
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_LF
  nameWithType: ParserMinimalBase.INT_LF
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_LF
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_LF
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_MINUS
  id: INT_MINUS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_MINUS
  nameWithType: ParserMinimalBase.INT_MINUS
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_MINUS
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_MINUS
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_PERIOD
  id: INT_PERIOD
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_PERIOD
  nameWithType: ParserMinimalBase.INT_PERIOD
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_PERIOD
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_PERIOD
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_PLUS
  id: INT_PLUS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_PLUS
  nameWithType: ParserMinimalBase.INT_PLUS
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_PLUS
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_PLUS
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_QUOTE
  id: INT_QUOTE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_QUOTE
  nameWithType: ParserMinimalBase.INT_QUOTE
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_QUOTE
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_QUOTE
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_RBRACKET
  id: INT_RBRACKET
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_RBRACKET
  nameWithType: ParserMinimalBase.INT_RBRACKET
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_RBRACKET
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_RBRACKET
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_RCURLY
  id: INT_RCURLY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_RCURLY
  nameWithType: ParserMinimalBase.INT_RCURLY
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_RCURLY
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_RCURLY
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_SLASH
  id: INT_SLASH
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_SLASH
  nameWithType: ParserMinimalBase.INT_SLASH
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_SLASH
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_SLASH
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_SPACE
  id: INT_SPACE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_SPACE
  nameWithType: ParserMinimalBase.INT_SPACE
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_SPACE
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_SPACE
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_TAB
  id: INT_TAB
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_TAB
  nameWithType: ParserMinimalBase.INT_TAB
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_TAB
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_TAB
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_e
  id: INT_e
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: INT_e
  nameWithType: ParserMinimalBase.INT_e
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.INT_e
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int INT_e
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.MAX_ERROR_TOKEN_LENGTH
  id: MAX_ERROR_TOKEN_LENGTH
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: MAX_ERROR_TOKEN_LENGTH
  nameWithType: ParserMinimalBase.MAX_ERROR_TOKEN_LENGTH
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.MAX_ERROR_TOKEN_LENGTH
  type: Field
  package: com.fasterxml.jackson.core.base
  summary: Maximum number of characters to include in token reported as part of error messages.
  syntax:
    content: protected static final int MAX_ERROR_TOKEN_LENGTH
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.MAX_INT_D
  id: MAX_INT_D
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: MAX_INT_D
  nameWithType: ParserMinimalBase.MAX_INT_D
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.MAX_INT_D
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final double MAX_INT_D
    return:
      type: double
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.MAX_INT_L
  id: MAX_INT_L
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: MAX_INT_L
  nameWithType: ParserMinimalBase.MAX_INT_L
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.MAX_INT_L
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final long MAX_INT_L
    return:
      type: long
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.MAX_LONG_D
  id: MAX_LONG_D
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: MAX_LONG_D
  nameWithType: ParserMinimalBase.MAX_LONG_D
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.MAX_LONG_D
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final double MAX_LONG_D
    return:
      type: double
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.MIN_INT_D
  id: MIN_INT_D
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: MIN_INT_D
  nameWithType: ParserMinimalBase.MIN_INT_D
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.MIN_INT_D
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final double MIN_INT_D
    return:
      type: double
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.MIN_INT_L
  id: MIN_INT_L
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: MIN_INT_L
  nameWithType: ParserMinimalBase.MIN_INT_L
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.MIN_INT_L
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final long MIN_INT_L
    return:
      type: long
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.MIN_LONG_D
  id: MIN_LONG_D
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: MIN_LONG_D
  nameWithType: ParserMinimalBase.MIN_LONG_D
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.MIN_LONG_D
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final double MIN_LONG_D
    return:
      type: double
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.NO_BYTES
  id: NO_BYTES
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: NO_BYTES
  nameWithType: ParserMinimalBase.NO_BYTES
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.NO_BYTES
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final byte[] NO_BYTES
    return:
      type: byte[]
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.NO_INTS
  id: NO_INTS
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: NO_INTS
  nameWithType: ParserMinimalBase.NO_INTS
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.NO_INTS
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int[] NO_INTS
    return:
      type: int[]
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_BIGDECIMAL
  id: NR_BIGDECIMAL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: NR_BIGDECIMAL
  nameWithType: ParserMinimalBase.NR_BIGDECIMAL
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_BIGDECIMAL
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int NR_BIGDECIMAL
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_BIGINT
  id: NR_BIGINT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: NR_BIGINT
  nameWithType: ParserMinimalBase.NR_BIGINT
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_BIGINT
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int NR_BIGINT
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_DOUBLE
  id: NR_DOUBLE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: NR_DOUBLE
  nameWithType: ParserMinimalBase.NR_DOUBLE
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_DOUBLE
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int NR_DOUBLE
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_FLOAT
  id: NR_FLOAT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: NR_FLOAT
  nameWithType: ParserMinimalBase.NR_FLOAT
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_FLOAT
  type: Field
  package: com.fasterxml.jackson.core.base
  summary: NOTE! Not used by JSON implementation but used by many of binary codecs
  syntax:
    content: protected static final int NR_FLOAT
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_INT
  id: NR_INT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: NR_INT
  nameWithType: ParserMinimalBase.NR_INT
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_INT
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int NR_INT
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_LONG
  id: NR_LONG
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: NR_LONG
  nameWithType: ParserMinimalBase.NR_LONG
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_LONG
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int NR_LONG
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_UNKNOWN
  id: NR_UNKNOWN
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: NR_UNKNOWN
  nameWithType: ParserMinimalBase.NR_UNKNOWN
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.NR_UNKNOWN
  type: Field
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final int NR_UNKNOWN
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase()
  id: ParserMinimalBase()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: ParserMinimalBase()
  nameWithType: ParserMinimalBase.ParserMinimalBase()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase*
  type: Constructor
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected ParserMinimalBase()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase(int)
  id: ParserMinimalBase(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: ParserMinimalBase(int features)
  nameWithType: ParserMinimalBase.ParserMinimalBase(int features)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase(int features)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase*
  type: Constructor
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected ParserMinimalBase(int features)
    parameters:
    - id: features
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[])
  id: _ascii(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _ascii(byte[] b)
  nameWithType: ParserMinimalBase._ascii(byte[] b)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._ascii(byte[] b)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._ascii*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static String _ascii(byte[] b)
    parameters:
    - id: b
      type: byte[]
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(java.lang.String)
  id: _asciiBytes(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _asciiBytes(String str)
  nameWithType: ParserMinimalBase._asciiBytes(String str)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes(String str)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static byte[] _asciiBytes(String str)
    parameters:
    - id: str
      type: java.lang.String
    return:
      type: byte[]
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(java.lang.String,java.lang.Throwable)
  id: _constructError(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _constructError(String msg, Throwable t)
  nameWithType: ParserMinimalBase._constructError(String msg, Throwable t)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._constructError(String msg, Throwable t)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._constructError*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected final JsonParseException _constructError(String msg, Throwable t)
    parameters:
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
    return:
      type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._currToken
  id: _currToken
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _currToken
  nameWithType: ParserMinimalBase._currToken
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._currToken
  type: Field
  package: com.fasterxml.jackson.core.base
  summary: Last token retrieved via <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken*" data-throw-if-not-resolved="false">#nextToken</xref>, if any. Null before the first call to `nextToken()`, as well as if token has been explicitly cleared
  syntax:
    content: protected JsonToken _currToken
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
  id: _decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _decodeBase64(String str, ByteArrayBuilder builder, Base64Variant b64variant)
  nameWithType: ParserMinimalBase._decodeBase64(String str, ByteArrayBuilder builder, Base64Variant b64variant)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(String str, ByteArrayBuilder builder, Base64Variant b64variant)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Helper method that can be used for base64 decoding in cases where encoded content has already been read as a String.
  syntax:
    content: protected void _decodeBase64(String str, ByteArrayBuilder builder, Base64Variant b64variant)
    parameters:
    - id: str
      type: java.lang.String
    - id: builder
      type: com.fasterxml.jackson.core.util.ByteArrayBuilder
    - id: b64variant
      type: com.fasterxml.jackson.core.Base64Variant
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int)
  id: _getCharDesc(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _getCharDesc(int ch)
  nameWithType: ParserMinimalBase._getCharDesc(int ch)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc(int ch)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected static final String _getCharDesc(int ch)
    parameters:
    - id: ch
      type: int
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._handleEOF()
  id: _handleEOF()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _handleEOF()
  nameWithType: ParserMinimalBase._handleEOF()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._handleEOF()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._handleEOF*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method sub-classes need to implement
  syntax:
    content: protected abstract void _handleEOF()
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(java.lang.String)
  id: _hasTextualNull(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _hasTextualNull(String value)
  nameWithType: ParserMinimalBase._hasTextualNull(String value)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull(String value)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Helper method used to determine whether we are currently pointing to a String value of "null" (NOT a null token); and, if so, that parser is to recognize and return it similar to if it was real null token.
  syntax:
    content: protected boolean _hasTextualNull(String value)
    parameters:
    - id: value
      type: java.lang.String
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._lastClearedToken
  id: _lastClearedToken
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _lastClearedToken
  nameWithType: ParserMinimalBase._lastClearedToken
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._lastClearedToken
  type: Field
  package: com.fasterxml.jackson.core.base
  summary: 'Last cleared token, if any: that is, value that was in effect when <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken*" data-throw-if-not-resolved="false">#clearCurrentToken</xref> was called.'
  syntax:
    content: protected JsonToken _lastClearedToken
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(java.lang.String)
  id: _longIntegerDesc(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _longIntegerDesc(String rawNum)
  nameWithType: ParserMinimalBase._longIntegerDesc(String rawNum)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc(String rawNum)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected String _longIntegerDesc(String rawNum)
    parameters:
    - id: rawNum
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(java.lang.String)
  id: _longNumberDesc(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _longNumberDesc(String rawNum)
  nameWithType: ParserMinimalBase._longNumberDesc(String rawNum)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc(String rawNum)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected String _longNumberDesc(String rawNum)
    parameters:
    - id: rawNum
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String)
  id: _reportError(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _reportError(String msg)
  nameWithType: ParserMinimalBase._reportError(String msg)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(String msg)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected final void _reportError(String msg)
    parameters:
    - id: msg
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object)
  id: _reportError(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _reportError(String msg, Object arg)
  nameWithType: ParserMinimalBase._reportError(String msg, Object arg)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(String msg, Object arg)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected final void _reportError(String msg, Object arg)
    parameters:
    - id: msg
      type: java.lang.String
    - id: arg
      type: java.lang.Object
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(java.lang.String,java.lang.Object,java.lang.Object)
  id: _reportError(java.lang.String,java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _reportError(String msg, Object arg1, Object arg2)
  nameWithType: ParserMinimalBase._reportError(String msg, Object arg1, Object arg2)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(String msg, Object arg1, Object arg2)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected final void _reportError(String msg, Object arg1, Object arg2)
    parameters:
    - id: msg
      type: java.lang.String
    - id: arg1
      type: java.lang.Object
    - id: arg2
      type: java.lang.Object
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)
  id: _reportInputCoercion(java.lang.String,com.fasterxml.jackson.core.JsonToken,java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _reportInputCoercion(String msg, JsonToken inputType, Class<?> targetType)
  nameWithType: ParserMinimalBase._reportInputCoercion(String msg, JsonToken inputType, Class<?> targetType)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion(String msg, JsonToken inputType, Class<?> targetType)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void _reportInputCoercion(String msg, JsonToken inputType, Class<?> targetType)
    parameters:
    - id: msg
      type: java.lang.String
    - id: inputType
      type: com.fasterxml.jackson.core.JsonToken
    - id: targetType
      type: java.lang.Class<?>
  exceptions:
  - type: com.fasterxml.jackson.core.exc.InputCoercionException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()
  id: _reportInvalidEOF()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _reportInvalidEOF()
  nameWithType: ParserMinimalBase._reportInvalidEOF()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void _reportInvalidEOF()
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String)
  id: _reportInvalidEOF(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _reportInvalidEOF(String msg)
  nameWithType: ParserMinimalBase._reportInvalidEOF(String msg)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(String msg)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void _reportInvalidEOF(String msg)
    parameters:
    - id: msg
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  id: _reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _reportInvalidEOF(String msg, JsonToken currToken)
  nameWithType: ParserMinimalBase._reportInvalidEOF(String msg, JsonToken currToken)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(String msg, JsonToken currToken)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void _reportInvalidEOF(String msg, JsonToken currToken)
    parameters:
    - id: msg
      type: java.lang.String
    - id: currToken
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()
  id: _reportInvalidEOFInValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _reportInvalidEOFInValue()
  nameWithType: ParserMinimalBase._reportInvalidEOFInValue()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void _reportInvalidEOFInValue()
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
  id: _reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _reportInvalidEOFInValue(JsonToken type)
  nameWithType: ParserMinimalBase._reportInvalidEOFInValue(JsonToken type)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(JsonToken type)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void _reportInvalidEOFInValue(JsonToken type)
    parameters:
    - id: type
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int)
  id: _reportMissingRootWS(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _reportMissingRootWS(int ch)
  nameWithType: ParserMinimalBase._reportMissingRootWS(int ch)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS(int ch)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void _reportMissingRootWS(int ch)
    parameters:
    - id: ch
      type: int
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,java.lang.String)
  id: _reportUnexpectedChar(int,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _reportUnexpectedChar(int ch, String comment)
  nameWithType: ParserMinimalBase._reportUnexpectedChar(int ch, String comment)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int ch, String comment)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void _reportUnexpectedChar(int ch, String comment)
    parameters:
    - id: ch
      type: int
    - id: comment
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()
  id: _throwInternal()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _throwInternal()
  nameWithType: ParserMinimalBase._throwInternal()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected final void _throwInternal()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int)
  id: _throwInvalidSpace(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _throwInvalidSpace(int i)
  nameWithType: ParserMinimalBase._throwInvalidSpace(int i)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(int i)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void _throwInvalidSpace(int i)
    parameters:
    - id: i
      type: int
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(java.lang.String,java.lang.Throwable)
  id: _wrapError(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: _wrapError(String msg, Throwable t)
  nameWithType: ParserMinimalBase._wrapError(String msg, Throwable t)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError(String msg, Throwable t)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected final void _wrapError(String msg, Throwable t)
    parameters:
    - id: msg
      type: java.lang.String
    - id: t
      type: java.lang.Throwable
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()
  id: clearCurrentToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: clearCurrentToken()
  nameWithType: ParserMinimalBase.clearCurrentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method called to "consume" the current token by effectively removing it so that <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken*" data-throw-if-not-resolved="false">#hasCurrentToken</xref> returns false, and <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken*" data-throw-if-not-resolved="false">#getCurrentToken</xref> null). Cleared token value can still be accessed by calling <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken*" data-throw-if-not-resolved="false">#getLastClearedToken</xref> (if absolutely needed), but usually isn't.


    Method was added to be used by the optional data binder, since it has to be able to consume last token used for binding (so that it will not be used again).
  syntax:
    content: public void clearCurrentToken()
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.close()
  id: close()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: close()
  nameWithType: ParserMinimalBase.close()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.close()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.close*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Closes the parser so that no further iteration or data access can be made; will also close the underlying input source if parser either **owns** the input source, or feature <xref uid="" data-throw-if-not-resolved="false">Feature#AUTO_CLOSE_SOURCE</xref> is enabled. Whether parser owns the input source depends on factory method that was used to construct instance (so check <xref uid="com.fasterxml.jackson.core.JsonFactory" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.JsonFactory</xref> for details, but the general idea is that if caller passes in closable resource (such as <xref uid="java.io.InputStream" data-throw-if-not-resolved="false">InputStream</xref> or <xref uid="java.io.Reader" data-throw-if-not-resolved="false">Reader</xref>) parser does NOT own the source; but if it passes a reference (such as <xref uid="java.io.File" data-throw-if-not-resolved="false">java.io.File</xref> or <xref uid="java.net.URL" data-throw-if-not-resolved="false">java.net.URL</xref> and creates stream or reader it does own them.
  syntax:
    content: public abstract void close()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()
  id: currentToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: currentToken()
  nameWithType: ParserMinimalBase.currentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Accessor to find which token parser currently points to, if any; null will be returned if none. If return value is non-null, data associated with the token is available via other accessor methods.
  syntax:
    content: public JsonToken currentToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()
  id: currentTokenId()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: currentTokenId()
  nameWithType: ParserMinimalBase.currentTokenId()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method similar to <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()" data-throw-if-not-resolved="false">#getCurrentToken()</xref> but that returns an `int` instead of <xref uid="com.fasterxml.jackson.core.JsonToken" data-throw-if-not-resolved="false">JsonToken</xref> (enum value).


    Use of int directly is typically more efficient on switch statements, so this method may be useful when building low-overhead codecs. Note, however, that effect may not be big enough to matter: make sure to profile performance before deciding to use this method.
  syntax:
    content: public int currentTokenId()
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  id: getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getBinaryValue(Base64Variant b64variant)
  nameWithType: ParserMinimalBase.getBinaryValue(Base64Variant b64variant)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getBinaryValue(Base64Variant b64variant)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getBinaryValue*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method that can be used to read (and consume -- results may not be accessible using other methods after the call) base64-encoded binary data included in the current textual JSON value. It works similar to getting String value via <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getText*" data-throw-if-not-resolved="false">#getText</xref> and decoding result (except for decoding part), but should be significantly more performant.


    Note that non-decoded textual contents of the current token are not guaranteed to be accessible after this method is called. Current implementation, for example, clears up textual content during decoding. Decoded binary content, however, will be retained until parser is advanced to the next event.
  syntax:
    content: public abstract byte[] getBinaryValue(Base64Variant b64variant)
    parameters:
    - id: b64variant
      type: com.fasterxml.jackson.core.Base64Variant
    return:
      type: byte[]
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentName()
  id: getCurrentName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getCurrentName()
  nameWithType: ParserMinimalBase.getCurrentName()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentName()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentName*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: 'Method that can be called to get the name associated with the current token: for <xref uid="com.fasterxml.jackson.core.JsonToken.FIELD_NAME" data-throw-if-not-resolved="false">JsonToken#FIELD_NAME</xref>s it will be the same as what <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getText*" data-throw-if-not-resolved="false">#getText</xref> returns; for field values it will be preceding field name; and for others (array values, root-level values) null.'
  syntax:
    content: public abstract String getCurrentName()
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()
  id: getCurrentToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getCurrentToken()
  nameWithType: ParserMinimalBase.getCurrentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Alias for <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken()" data-throw-if-not-resolved="false">#currentToken()</xref>, will be deprecated in Jackson 2.9
  syntax:
    content: public JsonToken getCurrentToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()
  id: getCurrentTokenId()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getCurrentTokenId()
  nameWithType: ParserMinimalBase.getCurrentTokenId()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Alias for <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId()" data-throw-if-not-resolved="false">#currentTokenId()</xref>, will be deprecated in Jackson 2.9
  syntax:
    content: public int getCurrentTokenId()
    return:
      type: int
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()
  id: getLastClearedToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getLastClearedToken()
  nameWithType: ParserMinimalBase.getLastClearedToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method that can be called to get the last token that was cleared using <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken*" data-throw-if-not-resolved="false">#clearCurrentToken</xref>. This is not necessarily the latest token read. Will return null if no tokens have been cleared, or if parser has been closed.
  syntax:
    content: public JsonToken getLastClearedToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getParsingContext()
  id: getParsingContext()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getParsingContext()
  nameWithType: ParserMinimalBase.getParsingContext()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getParsingContext()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getParsingContext*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: 'Method that can be used to access current parsing context reader is in. There are 3 different types: root, array and object contexts, with slightly different available information. Contexts are hierarchically nested, and can be used for example for figuring out part of the input document that correspond to specific array or object (for highlighting purposes, or error reporting). Contexts can also be used for simple xpath-like matching of input, if so desired.'
  syntax:
    content: public abstract JsonStreamContext getParsingContext()
    return:
      type: com.fasterxml.jackson.core.JsonStreamContext
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getText()
  id: getText()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getText()
  nameWithType: ParserMinimalBase.getText()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getText()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getText*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method for accessing textual representation of the current token; if no current token (before first call to <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken*" data-throw-if-not-resolved="false">#nextToken</xref>, or after encountering end-of-input), returns null. Method can be called for any token type.
  syntax:
    content: public abstract String getText()
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()
  id: getTextCharacters()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getTextCharacters()
  nameWithType: ParserMinimalBase.getTextCharacters()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method similar to <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getText*" data-throw-if-not-resolved="false">#getText</xref>, but that will return underlying (unmodifiable) character array that contains textual value, instead of constructing a String object to contain this information. Note, however, that:

     *  Textual contents are not guaranteed to start at index 0 (rather, call <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset*" data-throw-if-not-resolved="false">#getTextOffset</xref>) to know the actual offset
     *  Length of textual contents may be less than the length of returned buffer: call <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength*" data-throw-if-not-resolved="false">#getTextLength</xref> for actual length of returned content.

    Note that caller **MUST NOT** modify the returned character array in any way -- doing so may corrupt current parser state and render parser instance useless.


    The only reason to call this method (over <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getText*" data-throw-if-not-resolved="false">#getText</xref>) is to avoid construction of a String object (which will make a copy of contents).
  syntax:
    content: public abstract char[] getTextCharacters()
    return:
      type: char[]
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()
  id: getTextLength()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getTextLength()
  nameWithType: ParserMinimalBase.getTextLength()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Accessor used with <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters*" data-throw-if-not-resolved="false">#getTextCharacters</xref>, to know length of String stored in returned buffer.
  syntax:
    content: public abstract int getTextLength()
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()
  id: getTextOffset()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getTextOffset()
  nameWithType: ParserMinimalBase.getTextOffset()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Accessor used with <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters*" data-throw-if-not-resolved="false">#getTextCharacters</xref>, to know offset of the first text content character within buffer.
  syntax:
    content: public abstract int getTextOffset()
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean)
  id: getValueAsBoolean(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getValueAsBoolean(boolean defaultValue)
  nameWithType: ParserMinimalBase.getValueAsBoolean(boolean defaultValue)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean defaultValue)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method that will try to convert value of current token to a **boolean**. JSON booleans map naturally; integer numbers other than 0 map to true, and 0 maps to false and Strings 'true' and 'false' map to corresponding values.


    If representation can not be converted to a boolean value (including structured types like Objects and Arrays), specified **def** will be returned; no exceptions are thrown.
  syntax:
    content: public boolean getValueAsBoolean(boolean defaultValue)
    parameters:
    - id: defaultValue
      type: boolean
    return:
      type: boolean
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double)
  id: getValueAsDouble(double)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getValueAsDouble(double defaultValue)
  nameWithType: ParserMinimalBase.getValueAsDouble(double defaultValue)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double defaultValue)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method that will try to convert value of current token to a Java **double**. Numbers are coerced using default Java rules; booleans convert to 0.0 (false) and 1.0 (true), and Strings are parsed using default Java language floating point parsing rules.


    If representation can not be converted to a double (including structured types like Objects and Arrays), specified **def** will be returned; no exceptions are thrown.
  syntax:
    content: public double getValueAsDouble(double defaultValue)
    parameters:
    - id: defaultValue
      type: double
    return:
      type: double
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()
  id: getValueAsInt()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getValueAsInt()
  nameWithType: ParserMinimalBase.getValueAsInt()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method that will try to convert value of current token to a **int**. Numbers are coerced using default Java rules; booleans convert to 0 (false) and 1 (true), and Strings are parsed using default Java language integer parsing rules.


    If representation can not be converted to an int (including structured type markers like start/end Object/Array) default value of **0** will be returned; no exceptions are thrown.
  syntax:
    content: public int getValueAsInt()
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int)
  id: getValueAsInt(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getValueAsInt(int defaultValue)
  nameWithType: ParserMinimalBase.getValueAsInt(int defaultValue)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int defaultValue)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method that will try to convert value of current token to a **int**. Numbers are coerced using default Java rules; booleans convert to 0 (false) and 1 (true), and Strings are parsed using default Java language integer parsing rules.


    If representation can not be converted to an int (including structured type markers like start/end Object/Array) specified **def** will be returned; no exceptions are thrown.
  syntax:
    content: public int getValueAsInt(int defaultValue)
    parameters:
    - id: defaultValue
      type: int
    return:
      type: int
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()
  id: getValueAsLong()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getValueAsLong()
  nameWithType: ParserMinimalBase.getValueAsLong()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method that will try to convert value of current token to a **long**. Numbers are coerced using default Java rules; booleans convert to 0 (false) and 1 (true), and Strings are parsed using default Java language integer parsing rules.


    If representation can not be converted to a long (including structured type markers like start/end Object/Array) default value of **0L** will be returned; no exceptions are thrown.
  syntax:
    content: public long getValueAsLong()
    return:
      type: long
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long)
  id: getValueAsLong(long)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getValueAsLong(long defaultValue)
  nameWithType: ParserMinimalBase.getValueAsLong(long defaultValue)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long defaultValue)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method that will try to convert value of current token to a **long**. Numbers are coerced using default Java rules; booleans convert to 0 (false) and 1 (true), and Strings are parsed using default Java language integer parsing rules.


    If representation can not be converted to a long (including structured type markers like start/end Object/Array) specified **def** will be returned; no exceptions are thrown.
  syntax:
    content: public long getValueAsLong(long defaultValue)
    parameters:
    - id: defaultValue
      type: long
    return:
      type: long
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString()
  id: getValueAsString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getValueAsString()
  nameWithType: ParserMinimalBase.getValueAsString()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method that will try to convert value of current token to a <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref>. JSON Strings map naturally; scalar values get converted to their textual representation. If representation can not be converted to a String value (including structured types like Objects and Arrays and null token), default value of **null** will be returned; no exceptions are thrown.
  syntax:
    content: public String getValueAsString()
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(java.lang.String)
  id: getValueAsString(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: getValueAsString(String defaultValue)
  nameWithType: ParserMinimalBase.getValueAsString(String defaultValue)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(String defaultValue)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method that will try to convert value of current token to a <xref uid="java.lang.String" data-throw-if-not-resolved="false">java.lang.String</xref>. JSON Strings map naturally; scalar values get converted to their textual representation. If representation can not be converted to a String value (including structured types like Objects and Arrays and null token), specified default value will be returned; no exceptions are thrown.
  syntax:
    content: public String getValueAsString(String defaultValue)
    parameters:
    - id: defaultValue
      type: java.lang.String
    return:
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()
  id: hasCurrentToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: hasCurrentToken()
  nameWithType: ParserMinimalBase.hasCurrentToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method for checking whether parser currently points to a token (and data for that token is available). Equivalent to check for `parser.getCurrentToken() != null`.
  syntax:
    content: public boolean hasCurrentToken()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTextCharacters()
  id: hasTextCharacters()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: hasTextCharacters()
  nameWithType: ParserMinimalBase.hasTextCharacters()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTextCharacters()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTextCharacters*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method that can be used to determine whether calling of <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters*" data-throw-if-not-resolved="false">#getTextCharacters</xref> would be the most efficient way to access textual content for the event parser currently points to.


    Default implementation simply returns false since only actual implementation class has knowledge of its internal buffering state. Implementations are strongly encouraged to properly override this method, to allow efficient copying of content by other code.
  syntax:
    content: public abstract boolean hasTextCharacters()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(com.fasterxml.jackson.core.JsonToken)
  id: hasToken(com.fasterxml.jackson.core.JsonToken)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: hasToken(JsonToken t)
  nameWithType: ParserMinimalBase.hasToken(JsonToken t)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(JsonToken t)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method that is functionally equivalent to: `return currentToken() == t` but may be more efficiently implemented.


    Note that no traversal or conversion is performed; so in some cases calling method like <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()" data-throw-if-not-resolved="false">#isExpectedStartArrayToken()</xref> is necessary instead.
  syntax:
    content: public boolean hasToken(JsonToken t)
    parameters:
    - id: t
      type: com.fasterxml.jackson.core.JsonToken
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int)
  id: hasTokenId(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: hasTokenId(int id)
  nameWithType: ParserMinimalBase.hasTokenId(int id)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int id)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method that is functionally equivalent to: `return currentTokenId() == id` but may be more efficiently implemented.


    Note that no traversal or conversion is performed; so in some cases calling method like <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()" data-throw-if-not-resolved="false">#isExpectedStartArrayToken()</xref> is necessary instead.
  syntax:
    content: public boolean hasTokenId(int id)
    parameters:
    - id: id
      type: int
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.isClosed()
  id: isClosed()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: isClosed()
  nameWithType: ParserMinimalBase.isClosed()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.isClosed()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.isClosed*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method that can be called to determine whether this parser is closed or not. If it is closed, no new tokens can be retrieved by calling <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken*" data-throw-if-not-resolved="false">#nextToken</xref> (and the underlying stream may be closed). Closing may be due to an explicit call to <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.close*" data-throw-if-not-resolved="false">#close</xref> or because parser has encountered end of input.
  syntax:
    content: public abstract boolean isClosed()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()
  id: isExpectedStartArrayToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: isExpectedStartArrayToken()
  nameWithType: ParserMinimalBase.isExpectedStartArrayToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Specialized accessor that can be used to verify that the current token indicates start array (usually meaning that current token is <xref uid="com.fasterxml.jackson.core.JsonToken.START_ARRAY" data-throw-if-not-resolved="false">JsonToken#START_ARRAY</xref>) when start array is expected. For some specialized parsers this can return true for other cases as well; this is usually done to emulate arrays in cases underlying format is ambiguous (XML, for example, has no format-level difference between Objects and Arrays; it just has elements).


    Default implementation is equivalent to:


    ```java

    currentToken() == JsonToken.START_ARRAY

    ```


    but may be overridden by custom parser implementations.
  syntax:
    content: public boolean isExpectedStartArrayToken()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()
  id: isExpectedStartObjectToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: isExpectedStartObjectToken()
  nameWithType: ParserMinimalBase.isExpectedStartObjectToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Similar to <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken()" data-throw-if-not-resolved="false">#isExpectedStartArrayToken()</xref>, but checks whether stream currently points to <xref uid="com.fasterxml.jackson.core.JsonToken.START_OBJECT" data-throw-if-not-resolved="false">JsonToken#START_OBJECT</xref>.
  syntax:
    content: public boolean isExpectedStartObjectToken()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()
  id: nextToken()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: nextToken()
  nameWithType: ParserMinimalBase.nextToken()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Main iteration method, which will advance stream enough to determine type of the next token, if any. If none remaining (stream has no content other than possible white space before ending), null will be returned.
  syntax:
    content: public abstract JsonToken nextToken()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()
  id: nextValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: nextValue()
  nameWithType: ParserMinimalBase.nextValue()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Iteration method that will advance stream enough to determine type of the next token that is a value type (including JSON Array and Object start/end markers). Or put another way, nextToken() will be called once, and if <xref uid="com.fasterxml.jackson.core.JsonToken.FIELD_NAME" data-throw-if-not-resolved="false">JsonToken#FIELD_NAME</xref> is returned, another time to get the value for the field. Method is most useful for iterating over value entries of JSON objects; field name will still be available by calling <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentName*" data-throw-if-not-resolved="false">#getCurrentName</xref> when parser points to the value.
  syntax:
    content: public JsonToken nextValue()
    return:
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.overrideCurrentName(java.lang.String)
  id: overrideCurrentName(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: overrideCurrentName(String name)
  nameWithType: ParserMinimalBase.overrideCurrentName(String name)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.overrideCurrentName(String name)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.overrideCurrentName*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: >-
    Method that can be used to change what is considered to be the current (field) name. May be needed to support non-JSON data formats or unusual binding conventions; not needed for typical processing.


    Note that use of this method should only be done as sort of last resort, as it is a work-around for regular operation.
  syntax:
    content: public abstract void overrideCurrentName(String name)
    parameters:
    - id: name
      type: java.lang.String
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(java.lang.String)
  id: reportInvalidNumber(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: reportInvalidNumber(String msg)
  nameWithType: ParserMinimalBase.reportInvalidNumber(String msg)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(String msg)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method called to throw an exception for input token that looks like a number based on first character(s), but is not valid according to rules of format. In case of JSON this also includes invalid forms like positive sign and leading zeroes.
  syntax:
    content: protected void reportInvalidNumber(String msg)
    parameters:
    - id: msg
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()
  id: reportOverflowInt()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: reportOverflowInt()
  nameWithType: ParserMinimalBase.reportOverflowInt()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method called to throw an exception for integral (not floating point) input token with value outside of Java signed 32-bit range when requested as <xref uid="int" data-throw-if-not-resolved="false">int</xref>. Result will be <xref uid="com.fasterxml.jackson.core.exc.InputCoercionException" data-throw-if-not-resolved="false">InputCoercionException</xref> being thrown.
  syntax:
    content: protected void reportOverflowInt()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String)
  id: reportOverflowInt(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: reportOverflowInt(String numDesc)
  nameWithType: ParserMinimalBase.reportOverflowInt(String numDesc)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(String numDesc)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void reportOverflowInt(String numDesc)
    parameters:
    - id: numDesc
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  id: reportOverflowInt(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: reportOverflowInt(String numDesc, JsonToken inputType)
  nameWithType: ParserMinimalBase.reportOverflowInt(String numDesc, JsonToken inputType)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt(String numDesc, JsonToken inputType)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void reportOverflowInt(String numDesc, JsonToken inputType)
    parameters:
    - id: numDesc
      type: java.lang.String
    - id: inputType
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()
  id: reportOverflowLong()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: reportOverflowLong()
  nameWithType: ParserMinimalBase.reportOverflowLong()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method called to throw an exception for integral (not floating point) input token with value outside of Java signed 64-bit range when requested as <xref uid="long" data-throw-if-not-resolved="false">long</xref>. Result will be <xref uid="com.fasterxml.jackson.core.exc.InputCoercionException" data-throw-if-not-resolved="false">InputCoercionException</xref> being thrown.
  syntax:
    content: protected void reportOverflowLong()
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String)
  id: reportOverflowLong(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: reportOverflowLong(String numDesc)
  nameWithType: ParserMinimalBase.reportOverflowLong(String numDesc)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(String numDesc)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void reportOverflowLong(String numDesc)
    parameters:
    - id: numDesc
      type: java.lang.String
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  id: reportOverflowLong(java.lang.String,com.fasterxml.jackson.core.JsonToken)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: reportOverflowLong(String numDesc, JsonToken inputType)
  nameWithType: ParserMinimalBase.reportOverflowLong(String numDesc, JsonToken inputType)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(String numDesc, JsonToken inputType)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void reportOverflowLong(String numDesc, JsonToken inputType)
    parameters:
    - id: numDesc
      type: java.lang.String
    - id: inputType
      type: com.fasterxml.jackson.core.JsonToken
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int,java.lang.String)
  id: reportUnexpectedNumberChar(int,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: reportUnexpectedNumberChar(int ch, String comment)
  nameWithType: ParserMinimalBase.reportUnexpectedNumberChar(int ch, String comment)
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar(int ch, String comment)
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar*
  type: Method
  package: com.fasterxml.jackson.core.base
  syntax:
    content: protected void reportUnexpectedNumberChar(int ch, String comment)
    parameters:
    - id: ch
      type: int
    - id: comment
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()
  id: skipChildren()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.base.ParserMinimalBase
  langs:
  - java
  name: skipChildren()
  nameWithType: ParserMinimalBase.skipChildren()
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren()
  overload: com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren*
  type: Method
  package: com.fasterxml.jackson.core.base
  summary: Method that will skip all child tokens of an array or object token that the parser currently points to, iff stream points to <xref uid="com.fasterxml.jackson.core.JsonToken.START_OBJECT" data-throw-if-not-resolved="false">JsonToken#START_OBJECT</xref> or <xref uid="com.fasterxml.jackson.core.JsonToken.START_ARRAY" data-throw-if-not-resolved="false">JsonToken#START_ARRAY</xref>. If not, it will do nothing. After skipping, stream will point to **matching** <xref uid="com.fasterxml.jackson.core.JsonToken.END_OBJECT" data-throw-if-not-resolved="false">JsonToken#END_OBJECT</xref> or <xref uid="com.fasterxml.jackson.core.JsonToken.END_ARRAY" data-throw-if-not-resolved="false">JsonToken#END_ARRAY</xref> (possibly skipping nested pairs of START/END OBJECT/ARRAY tokens as well as value tokens). The idea is that after calling this method, application will call <xref uid="com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken*" data-throw-if-not-resolved="false">#nextToken</xref> to point to the next available token, if any.
  syntax:
    content: public JsonParser skipChildren()
    return:
      type: com.fasterxml.jackson.core.JsonParser
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase*
  name: ParserMinimalBase
  nameWithType: ParserMinimalBase.ParserMinimalBase
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.ParserMinimalBase
  package: com.fasterxml.jackson.core.base
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonToken
  name: JsonToken
  nameWithType: JsonToken
  fullName: com.fasterxml.jackson.core.JsonToken
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken*
  name: nextToken
  nameWithType: ParserMinimalBase.nextToken
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.nextToken
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken*
  name: currentToken
  nameWithType: ParserMinimalBase.currentToken
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.currentToken
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId*
  name: currentTokenId
  nameWithType: ParserMinimalBase.currentTokenId
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken*
  name: getCurrentToken
  nameWithType: ParserMinimalBase.getCurrentToken
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentToken
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId*
  name: getCurrentTokenId
  nameWithType: ParserMinimalBase.getCurrentTokenId
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId
  package: com.fasterxml.jackson.core.base
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken*
  name: hasCurrentToken
  nameWithType: ParserMinimalBase.hasCurrentToken
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId*
  name: hasTokenId
  nameWithType: ParserMinimalBase.hasTokenId
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken*
  name: hasToken
  nameWithType: ParserMinimalBase.hasToken
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken*
  name: isExpectedStartArrayToken
  nameWithType: ParserMinimalBase.isExpectedStartArrayToken
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken*
  name: isExpectedStartObjectToken
  nameWithType: ParserMinimalBase.isExpectedStartObjectToken
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue*
  name: nextValue
  nameWithType: ParserMinimalBase.nextValue
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren*
  name: skipChildren
  nameWithType: ParserMinimalBase.skipChildren
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.JsonParseException
  name: JsonParseException
  nameWithType: JsonParseException
  fullName: com.fasterxml.jackson.core.JsonParseException
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._handleEOF*
  name: _handleEOF
  nameWithType: ParserMinimalBase._handleEOF
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._handleEOF
  package: com.fasterxml.jackson.core.base
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentName*
  name: getCurrentName
  nameWithType: ParserMinimalBase.getCurrentName
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentName
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.close*
  name: close
  nameWithType: ParserMinimalBase.close
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.close
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.isClosed*
  name: isClosed
  nameWithType: ParserMinimalBase.isClosed
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.isClosed
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.JsonStreamContext
  name: JsonStreamContext
  nameWithType: JsonStreamContext
  fullName: com.fasterxml.jackson.core.JsonStreamContext
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getParsingContext*
  name: getParsingContext
  nameWithType: ParserMinimalBase.getParsingContext
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getParsingContext
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken*
  name: clearCurrentToken
  nameWithType: ParserMinimalBase.clearCurrentToken
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken*
  name: getLastClearedToken
  nameWithType: ParserMinimalBase.getLastClearedToken
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getLastClearedToken
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.overrideCurrentName*
  name: overrideCurrentName
  nameWithType: ParserMinimalBase.overrideCurrentName
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.overrideCurrentName
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getText*
  name: getText
  nameWithType: ParserMinimalBase.getText
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getText
  package: com.fasterxml.jackson.core.base
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters*
  name: getTextCharacters
  nameWithType: ParserMinimalBase.getTextCharacters
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextCharacters
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTextCharacters*
  name: hasTextCharacters
  nameWithType: ParserMinimalBase.hasTextCharacters
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.hasTextCharacters
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength*
  name: getTextLength
  nameWithType: ParserMinimalBase.getTextLength
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextLength
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset*
  name: getTextOffset
  nameWithType: ParserMinimalBase.getTextOffset
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getTextOffset
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.Base64Variant
  name: Base64Variant
  nameWithType: Base64Variant
  fullName: com.fasterxml.jackson.core.Base64Variant
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getBinaryValue*
  name: getBinaryValue
  nameWithType: ParserMinimalBase.getBinaryValue
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getBinaryValue
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean*
  name: getValueAsBoolean
  nameWithType: ParserMinimalBase.getValueAsBoolean
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt*
  name: getValueAsInt
  nameWithType: ParserMinimalBase.getValueAsInt
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt
  package: com.fasterxml.jackson.core.base
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong*
  name: getValueAsLong
  nameWithType: ParserMinimalBase.getValueAsLong
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong
  package: com.fasterxml.jackson.core.base
- uid: double
  spec.java:
  - uid: double
    name: double
    fullName: double
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble*
  name: getValueAsDouble
  nameWithType: ParserMinimalBase.getValueAsDouble
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString*
  name: getValueAsString
  nameWithType: ParserMinimalBase.getValueAsString
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.util.ByteArrayBuilder
  name: ByteArrayBuilder
  nameWithType: ByteArrayBuilder
  fullName: com.fasterxml.jackson.core.util.ByteArrayBuilder
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64*
  name: _decodeBase64
  nameWithType: ParserMinimalBase._decodeBase64
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull*
  name: _hasTextualNull
  nameWithType: ParserMinimalBase._hasTextualNull
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._hasTextualNull
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar*
  name: reportUnexpectedNumberChar
  nameWithType: ParserMinimalBase.reportUnexpectedNumberChar
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportUnexpectedNumberChar
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber*
  name: reportInvalidNumber
  nameWithType: ParserMinimalBase.reportInvalidNumber
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt*
  name: reportOverflowInt
  nameWithType: ParserMinimalBase.reportOverflowInt
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowInt
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong*
  name: reportOverflowLong
  nameWithType: ParserMinimalBase.reportOverflowLong
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.exc.InputCoercionException
  name: InputCoercionException
  nameWithType: InputCoercionException
  fullName: com.fasterxml.jackson.core.exc.InputCoercionException
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion*
  name: _reportInputCoercion
  nameWithType: ParserMinimalBase._reportInputCoercion
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInputCoercion
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc*
  name: _longIntegerDesc
  nameWithType: ParserMinimalBase._longIntegerDesc
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._longIntegerDesc
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc*
  name: _longNumberDesc
  nameWithType: ParserMinimalBase._longNumberDesc
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._longNumberDesc
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar*
  name: _reportUnexpectedChar
  nameWithType: ParserMinimalBase._reportUnexpectedChar
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF*
  name: _reportInvalidEOF
  nameWithType: ParserMinimalBase._reportInvalidEOF
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue*
  name: _reportInvalidEOFInValue
  nameWithType: ParserMinimalBase._reportInvalidEOFInValue
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS*
  name: _reportMissingRootWS
  nameWithType: ParserMinimalBase._reportMissingRootWS
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportMissingRootWS
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace*
  name: _throwInvalidSpace
  nameWithType: ParserMinimalBase._throwInvalidSpace
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc*
  name: _getCharDesc
  nameWithType: ParserMinimalBase._getCharDesc
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._getCharDesc
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError*
  name: _reportError
  nameWithType: ParserMinimalBase._reportError
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._reportError
  package: com.fasterxml.jackson.core.base
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError*
  name: _wrapError
  nameWithType: ParserMinimalBase._wrapError
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._wrapError
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal*
  name: _throwInternal
  nameWithType: ParserMinimalBase._throwInternal
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._throwInternal
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._constructError*
  name: _constructError
  nameWithType: ParserMinimalBase._constructError
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._constructError
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes*
  name: _asciiBytes
  nameWithType: ParserMinimalBase._asciiBytes
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._asciiBytes
  package: com.fasterxml.jackson.core.base
- uid: com.fasterxml.jackson.core.base.ParserMinimalBase._ascii*
  name: _ascii
  nameWithType: ParserMinimalBase._ascii
  fullName: com.fasterxml.jackson.core.base.ParserMinimalBase._ascii
  package: com.fasterxml.jackson.core.base
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: int[]
  spec.java:
  - uid: int
    name: int
    fullName: int
  - name: '[]'
    fullName: '[]'
- uid: java.math.BigInteger
  spec.java:
  - uid: java.math.BigInteger
    name: BigInteger
    fullName: java.math.BigInteger
- uid: java.math.BigDecimal
  spec.java:
  - uid: java.math.BigDecimal
    name: BigDecimal
    fullName: java.math.BigDecimal
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.core.JsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
  name: JsonParser.getBinaryValue(Base64Variant)
  nameWithType: JsonParser.getBinaryValue(Base64Variant)
  fullName: com.fasterxml.jackson.core.JsonParser.getBinaryValue(com.fasterxml.jackson.core.Base64Variant)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.JsonParser.getParsingContext()
  name: JsonParser.getParsingContext()
  nameWithType: JsonParser.getParsingContext()
  fullName: com.fasterxml.jackson.core.JsonParser.getParsingContext()
- uid: com.fasterxml.jackson.core.JsonParser.canReadTypeId()
  name: JsonParser.canReadTypeId()
  nameWithType: JsonParser.canReadTypeId()
  fullName: com.fasterxml.jackson.core.JsonParser.canReadTypeId()
- uid: com.fasterxml.jackson.core.JsonParser.nextValue()
  name: JsonParser.nextValue()
  nameWithType: JsonParser.nextValue()
  fullName: com.fasterxml.jackson.core.JsonParser.nextValue()
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsDouble(double)
  name: JsonParser.getValueAsDouble(double)
  nameWithType: JsonParser.getValueAsDouble(double)
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsDouble(double)
- uid: com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
  name: JsonParser.readBinaryValue(OutputStream)
  nameWithType: JsonParser.readBinaryValue(OutputStream)
  fullName: com.fasterxml.jackson.core.JsonParser.readBinaryValue(java.io.OutputStream)
- uid: com.fasterxml.jackson.core.JsonParser.getNumberType()
  name: JsonParser.getNumberType()
  nameWithType: JsonParser.getNumberType()
  fullName: com.fasterxml.jackson.core.JsonParser.getNumberType()
- uid: com.fasterxml.jackson.core.JsonParser.getObjectId()
  name: JsonParser.getObjectId()
  nameWithType: JsonParser.getObjectId()
  fullName: com.fasterxml.jackson.core.JsonParser.getObjectId()
- uid: com.fasterxml.jackson.core.JsonParser.canParseAsync()
  name: JsonParser.canParseAsync()
  nameWithType: JsonParser.canParseAsync()
  fullName: com.fasterxml.jackson.core.JsonParser.canParseAsync()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.JsonParser.getCurrentToken()
  name: JsonParser.getCurrentToken()
  nameWithType: JsonParser.getCurrentToken()
  fullName: com.fasterxml.jackson.core.JsonParser.getCurrentToken()
- uid: com.fasterxml.jackson.core.JsonParser.getIntValue()
  name: JsonParser.getIntValue()
  nameWithType: JsonParser.getIntValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getIntValue()
- uid: com.fasterxml.jackson.core.JsonParser.hasTokenId(int)
  name: JsonParser.hasTokenId(int)
  nameWithType: JsonParser.hasTokenId(int)
  fullName: com.fasterxml.jackson.core.JsonParser.hasTokenId(int)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.core.JsonParser.isClosed()
  name: JsonParser.isClosed()
  nameWithType: JsonParser.isClosed()
  fullName: com.fasterxml.jackson.core.JsonParser.isClosed()
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsString()
  name: JsonParser.getValueAsString()
  nameWithType: JsonParser.getValueAsString()
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsString()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.core.JsonParser.getBooleanValue()
  name: JsonParser.getBooleanValue()
  nameWithType: JsonParser.getBooleanValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getBooleanValue()
- uid: com.fasterxml.jackson.core.JsonParser.getBinaryValue()
  name: JsonParser.getBinaryValue()
  nameWithType: JsonParser.getBinaryValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getBinaryValue()
- uid: com.fasterxml.jackson.core.JsonParser.canReadObjectId()
  name: JsonParser.canReadObjectId()
  nameWithType: JsonParser.canReadObjectId()
  fullName: com.fasterxml.jackson.core.JsonParser.canReadObjectId()
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
  name: JsonParser.setRequestPayloadOnError(String)
  nameWithType: JsonParser.setRequestPayloadOnError(String)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsString(java.lang.String)
  name: JsonParser.getValueAsString(String)
  nameWithType: JsonParser.getValueAsString(String)
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsString(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
  name: JsonParser.isEnabled(StreamReadFeature)
  nameWithType: JsonParser.isEnabled(StreamReadFeature)
  fullName: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
- uid: com.fasterxml.jackson.core.JsonParser.getText()
  name: JsonParser.getText()
  nameWithType: JsonParser.getText()
  fullName: com.fasterxml.jackson.core.JsonParser.getText()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
  name: JsonParser.<T>readValueAs(TypeReference<?>)
  nameWithType: JsonParser.<T>readValueAs(TypeReference<?>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(com.fasterxml.jackson.core.type.TypeReference<?>)
- uid: com.fasterxml.jackson.core.JsonParser.getInputSource()
  name: JsonParser.getInputSource()
  nameWithType: JsonParser.getInputSource()
  fullName: com.fasterxml.jackson.core.JsonParser.getInputSource()
- uid: com.fasterxml.jackson.core.JsonParser.disable(com.fasterxml.jackson.core.JsonParser.Feature)
  name: JsonParser.disable(JsonParser.Feature)
  nameWithType: JsonParser.disable(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.JsonParser.disable(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
  name: JsonParser.<T>readValuesAs(Class<T>)
  nameWithType: JsonParser.<T>readValuesAs(Class<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(java.lang.Class<T>)
- uid: com.fasterxml.jackson.core.JsonParser.getCurrentName()
  name: JsonParser.getCurrentName()
  nameWithType: JsonParser.getCurrentName()
  fullName: com.fasterxml.jackson.core.JsonParser.getCurrentName()
- uid: com.fasterxml.jackson.core.JsonParser.getCodec()
  name: JsonParser.getCodec()
  nameWithType: JsonParser.getCodec()
  fullName: com.fasterxml.jackson.core.JsonParser.getCodec()
- uid: com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)
  name: JsonParser.setCodec(ObjectCodec)
  nameWithType: JsonParser.setCodec(ObjectCodec)
  fullName: com.fasterxml.jackson.core.JsonParser.setCodec(com.fasterxml.jackson.core.ObjectCodec)
- uid: com.fasterxml.jackson.core.JsonParser.getCurrentLocation()
  name: JsonParser.getCurrentLocation()
  nameWithType: JsonParser.getCurrentLocation()
  fullName: com.fasterxml.jackson.core.JsonParser.getCurrentLocation()
- uid: com.fasterxml.jackson.core.JsonParser.currentName()
  name: JsonParser.currentName()
  nameWithType: JsonParser.currentName()
  fullName: com.fasterxml.jackson.core.JsonParser.currentName()
- uid: com.fasterxml.jackson.core.JsonParser.getTextCharacters()
  name: JsonParser.getTextCharacters()
  nameWithType: JsonParser.getTextCharacters()
  fullName: com.fasterxml.jackson.core.JsonParser.getTextCharacters()
- uid: com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()
  name: JsonParser.requiresCustomCodec()
  nameWithType: JsonParser.requiresCustomCodec()
  fullName: com.fasterxml.jackson.core.JsonParser.requiresCustomCodec()
- uid: com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
  name: JsonParser._reportUnsupportedOperation()
  nameWithType: JsonParser._reportUnsupportedOperation()
  fullName: com.fasterxml.jackson.core.JsonParser._reportUnsupportedOperation()
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsDouble()
  name: JsonParser.getValueAsDouble()
  nameWithType: JsonParser.getValueAsDouble()
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsDouble()
- uid: com.fasterxml.jackson.core.JsonParser.hasTextCharacters()
  name: JsonParser.hasTextCharacters()
  nameWithType: JsonParser.hasTextCharacters()
  fullName: com.fasterxml.jackson.core.JsonParser.hasTextCharacters()
- uid: com.fasterxml.jackson.core.JsonParser.hasToken(com.fasterxml.jackson.core.JsonToken)
  name: JsonParser.hasToken(JsonToken)
  nameWithType: JsonParser.hasToken(JsonToken)
  fullName: com.fasterxml.jackson.core.JsonParser.hasToken(com.fasterxml.jackson.core.JsonToken)
- uid: com.fasterxml.jackson.core.JsonParser.overrideCurrentName(java.lang.String)
  name: JsonParser.overrideCurrentName(String)
  nameWithType: JsonParser.overrideCurrentName(String)
  fullName: com.fasterxml.jackson.core.JsonParser.overrideCurrentName(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.nextToken()
  name: JsonParser.nextToken()
  nameWithType: JsonParser.nextToken()
  fullName: com.fasterxml.jackson.core.JsonParser.nextToken()
- uid: com.fasterxml.jackson.core.JsonParser.close()
  name: JsonParser.close()
  nameWithType: JsonParser.close()
  fullName: com.fasterxml.jackson.core.JsonParser.close()
- uid: com.fasterxml.jackson.core.JsonParser.getDoubleValue()
  name: JsonParser.getDoubleValue()
  nameWithType: JsonParser.getDoubleValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getDoubleValue()
- uid: com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
  name: JsonParser.nextBooleanValue()
  nameWithType: JsonParser.nextBooleanValue()
  fullName: com.fasterxml.jackson.core.JsonParser.nextBooleanValue()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
  name: JsonParser.<T>readValueAsTree()
  nameWithType: JsonParser.<T>readValueAsTree()
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAsTree()
- uid: com.fasterxml.jackson.core.JsonParser.getTypeId()
  name: JsonParser.getTypeId()
  nameWithType: JsonParser.getTypeId()
  fullName: com.fasterxml.jackson.core.JsonParser.getTypeId()
- uid: com.fasterxml.jackson.core.JsonParser.isExpectedStartArrayToken()
  name: JsonParser.isExpectedStartArrayToken()
  nameWithType: JsonParser.isExpectedStartArrayToken()
  fullName: com.fasterxml.jackson.core.JsonParser.isExpectedStartArrayToken()
- uid: com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()
  name: JsonParser.getEmbeddedObject()
  nameWithType: JsonParser.getEmbeddedObject()
  fullName: com.fasterxml.jackson.core.JsonParser.getEmbeddedObject()
- uid: com.fasterxml.jackson.core.JsonParser.version()
  name: JsonParser.version()
  nameWithType: JsonParser.version()
  fullName: com.fasterxml.jackson.core.JsonParser.version()
- uid: com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
  name: JsonParser.nextIntValue(int)
  nameWithType: JsonParser.nextIntValue(int)
  fullName: com.fasterxml.jackson.core.JsonParser.nextIntValue(int)
- uid: com.fasterxml.jackson.core.JsonParser.overrideStdFeatures(int,int)
  name: JsonParser.overrideStdFeatures(int,int)
  nameWithType: JsonParser.overrideStdFeatures(int,int)
  fullName: com.fasterxml.jackson.core.JsonParser.overrideStdFeatures(int,int)
- uid: com.fasterxml.jackson.core.JsonParser.setFeatureMask(int)
  name: JsonParser.setFeatureMask(int)
  nameWithType: JsonParser.setFeatureMask(int)
  fullName: com.fasterxml.jackson.core.JsonParser.setFeatureMask(int)
- uid: com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonParser.canUseSchema(FormatSchema)
  nameWithType: JsonParser.canUseSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.JsonParser.canUseSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
  name: JsonParser.<T>readValueAs(Class<T>)
  nameWithType: JsonParser.<T>readValueAs(Class<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValueAs(java.lang.Class<T>)
- uid: com.fasterxml.jackson.core.JsonParser.getCurrentValue()
  name: JsonParser.getCurrentValue()
  nameWithType: JsonParser.getCurrentValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getCurrentValue()
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
  name: JsonParser.setRequestPayloadOnError(RequestPayload)
  nameWithType: JsonParser.setRequestPayloadOnError(RequestPayload)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(com.fasterxml.jackson.core.util.RequestPayload)
- uid: com.fasterxml.jackson.core.JsonParser.isExpectedStartObjectToken()
  name: JsonParser.isExpectedStartObjectToken()
  nameWithType: JsonParser.isExpectedStartObjectToken()
  fullName: com.fasterxml.jackson.core.JsonParser.isExpectedStartObjectToken()
- uid: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)
  name: JsonParser.releaseBuffered(OutputStream)
  nameWithType: JsonParser.releaseBuffered(OutputStream)
  fullName: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.OutputStream)
- uid: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  name: JsonParser.isEnabled(JsonParser.Feature)
  nameWithType: JsonParser.isEnabled(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.JsonParser.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.JsonParser.currentTokenId()
  name: JsonParser.currentTokenId()
  nameWithType: JsonParser.currentTokenId()
  fullName: com.fasterxml.jackson.core.JsonParser.currentTokenId()
- uid: com.fasterxml.jackson.core.JsonParser.getText(java.io.Writer)
  name: JsonParser.getText(Writer)
  nameWithType: JsonParser.getText(Writer)
  fullName: com.fasterxml.jackson.core.JsonParser.getText(java.io.Writer)
- uid: com.fasterxml.jackson.core.JsonParser.currentToken()
  name: JsonParser.currentToken()
  nameWithType: JsonParser.currentToken()
  fullName: com.fasterxml.jackson.core.JsonParser.currentToken()
- uid: com.fasterxml.jackson.core.JsonParser.nextFieldName()
  name: JsonParser.nextFieldName()
  nameWithType: JsonParser.nextFieldName()
  fullName: com.fasterxml.jackson.core.JsonParser.nextFieldName()
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsInt()
  name: JsonParser.getValueAsInt()
  nameWithType: JsonParser.getValueAsInt()
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsInt()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.core.JsonParser.getCurrentTokenId()
  name: JsonParser.getCurrentTokenId()
  nameWithType: JsonParser.getCurrentTokenId()
  fullName: com.fasterxml.jackson.core.JsonParser.getCurrentTokenId()
- uid: com.fasterxml.jackson.core.JsonParser._codec()
  name: JsonParser._codec()
  nameWithType: JsonParser._codec()
  fullName: com.fasterxml.jackson.core.JsonParser._codec()
- uid: com.fasterxml.jackson.core.JsonParser.nextTextValue()
  name: JsonParser.nextTextValue()
  nameWithType: JsonParser.nextTextValue()
  fullName: com.fasterxml.jackson.core.JsonParser.nextTextValue()
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsInt(int)
  name: JsonParser.getValueAsInt(int)
  nameWithType: JsonParser.getValueAsInt(int)
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsInt(int)
- uid: com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
  name: JsonParser.readBinaryValue(Base64Variant,OutputStream)
  nameWithType: JsonParser.readBinaryValue(Base64Variant,OutputStream)
  fullName: com.fasterxml.jackson.core.JsonParser.readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)
- uid: com.fasterxml.jackson.core.JsonParser.getBigIntegerValue()
  name: JsonParser.getBigIntegerValue()
  nameWithType: JsonParser.getBigIntegerValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getBigIntegerValue()
- uid: com.fasterxml.jackson.core.JsonParser.finishToken()
  name: JsonParser.finishToken()
  nameWithType: JsonParser.finishToken()
  fullName: com.fasterxml.jackson.core.JsonParser.finishToken()
- uid: com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
  name: JsonParser.nextLongValue(long)
  nameWithType: JsonParser.nextLongValue(long)
  fullName: com.fasterxml.jackson.core.JsonParser.nextLongValue(long)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonParser.getByteValue()
  name: JsonParser.getByteValue()
  nameWithType: JsonParser.getByteValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getByteValue()
- uid: com.fasterxml.jackson.core.JsonParser.clearCurrentToken()
  name: JsonParser.clearCurrentToken()
  nameWithType: JsonParser.clearCurrentToken()
  fullName: com.fasterxml.jackson.core.JsonParser.clearCurrentToken()
- uid: com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
  name: JsonParser.getNonBlockingInputFeeder()
  nameWithType: JsonParser.getNonBlockingInputFeeder()
  fullName: com.fasterxml.jackson.core.JsonParser.getNonBlockingInputFeeder()
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.core.JsonParser.isNaN()
  name: JsonParser.isNaN()
  nameWithType: JsonParser.isNaN()
  fullName: com.fasterxml.jackson.core.JsonParser.isNaN()
- uid: com.fasterxml.jackson.core.JsonParser.getNumberValue()
  name: JsonParser.getNumberValue()
  nameWithType: JsonParser.getNumberValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getNumberValue()
- uid: com.fasterxml.jackson.core.JsonParser.getSchema()
  name: JsonParser.getSchema()
  nameWithType: JsonParser.getSchema()
  fullName: com.fasterxml.jackson.core.JsonParser.getSchema()
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsLong(long)
  name: JsonParser.getValueAsLong(long)
  nameWithType: JsonParser.getValueAsLong(long)
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsLong(long)
- uid: com.fasterxml.jackson.core.JsonParser.hasCurrentToken()
  name: JsonParser.hasCurrentToken()
  nameWithType: JsonParser.hasCurrentToken()
  fullName: com.fasterxml.jackson.core.JsonParser.hasCurrentToken()
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsLong()
  name: JsonParser.getValueAsLong()
  nameWithType: JsonParser.getValueAsLong()
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsLong()
- uid: com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
  name: JsonParser.configure(JsonParser.Feature,boolean)
  nameWithType: JsonParser.configure(JsonParser.Feature,boolean)
  fullName: com.fasterxml.jackson.core.JsonParser.configure(com.fasterxml.jackson.core.JsonParser.Feature,boolean)
- uid: com.fasterxml.jackson.core.JsonParser.getTextOffset()
  name: JsonParser.getTextOffset()
  nameWithType: JsonParser.getTextOffset()
  fullName: com.fasterxml.jackson.core.JsonParser.getTextOffset()
- uid: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
  name: JsonParser.<T>readValuesAs(TypeReference<T>)
  nameWithType: JsonParser.<T>readValuesAs(TypeReference<T>)
  fullName: com.fasterxml.jackson.core.JsonParser.<T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference<T>)
- uid: com.fasterxml.jackson.core.JsonParser.getFloatValue()
  name: JsonParser.getFloatValue()
  nameWithType: JsonParser.getFloatValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getFloatValue()
- uid: com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)
  name: JsonParser.overrideFormatFeatures(int,int)
  nameWithType: JsonParser.overrideFormatFeatures(int,int)
  fullName: com.fasterxml.jackson.core.JsonParser.overrideFormatFeatures(int,int)
- uid: com.fasterxml.jackson.core.JsonParser.getLongValue()
  name: JsonParser.getLongValue()
  nameWithType: JsonParser.getLongValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getLongValue()
- uid: com.fasterxml.jackson.core.JsonParser.getFeatureMask()
  name: JsonParser.getFeatureMask()
  nameWithType: JsonParser.getFeatureMask()
  fullName: com.fasterxml.jackson.core.JsonParser.getFeatureMask()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.core.JsonParser.enable(com.fasterxml.jackson.core.JsonParser.Feature)
  name: JsonParser.enable(JsonParser.Feature)
  nameWithType: JsonParser.enable(JsonParser.Feature)
  fullName: com.fasterxml.jackson.core.JsonParser.enable(com.fasterxml.jackson.core.JsonParser.Feature)
- uid: com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)
  name: JsonParser.setSchema(FormatSchema)
  nameWithType: JsonParser.setSchema(FormatSchema)
  fullName: com.fasterxml.jackson.core.JsonParser.setSchema(com.fasterxml.jackson.core.FormatSchema)
- uid: com.fasterxml.jackson.core.JsonParser.setCurrentValue(java.lang.Object)
  name: JsonParser.setCurrentValue(Object)
  nameWithType: JsonParser.setCurrentValue(Object)
  fullName: com.fasterxml.jackson.core.JsonParser.setCurrentValue(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()
  name: JsonParser.getValueAsBoolean()
  nameWithType: JsonParser.getValueAsBoolean()
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsBoolean()
- uid: com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
  name: JsonParser.nextFieldName(SerializableString)
  nameWithType: JsonParser.nextFieldName(SerializableString)
  fullName: com.fasterxml.jackson.core.JsonParser.nextFieldName(com.fasterxml.jackson.core.SerializableString)
- uid: com.fasterxml.jackson.core.JsonParser.skipChildren()
  name: JsonParser.skipChildren()
  nameWithType: JsonParser.skipChildren()
  fullName: com.fasterxml.jackson.core.JsonParser.skipChildren()
- uid: com.fasterxml.jackson.core.JsonParser.getValueAsBoolean(boolean)
  name: JsonParser.getValueAsBoolean(boolean)
  nameWithType: JsonParser.getValueAsBoolean(boolean)
  fullName: com.fasterxml.jackson.core.JsonParser.getValueAsBoolean(boolean)
- uid: com.fasterxml.jackson.core.JsonParser.getLastClearedToken()
  name: JsonParser.getLastClearedToken()
  nameWithType: JsonParser.getLastClearedToken()
  fullName: com.fasterxml.jackson.core.JsonParser.getLastClearedToken()
- uid: com.fasterxml.jackson.core.JsonParser.getShortValue()
  name: JsonParser.getShortValue()
  nameWithType: JsonParser.getShortValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getShortValue()
- uid: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
  name: JsonParser.setRequestPayloadOnError(byte[],String)
  nameWithType: JsonParser.setRequestPayloadOnError(byte[],String)
  fullName: com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getTokenLocation()
  name: JsonParser.getTokenLocation()
  nameWithType: JsonParser.getTokenLocation()
  fullName: com.fasterxml.jackson.core.JsonParser.getTokenLocation()
- uid: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
  name: JsonParser.releaseBuffered(Writer)
  nameWithType: JsonParser.releaseBuffered(Writer)
  fullName: com.fasterxml.jackson.core.JsonParser.releaseBuffered(java.io.Writer)
- uid: com.fasterxml.jackson.core.JsonParser.getDecimalValue()
  name: JsonParser.getDecimalValue()
  nameWithType: JsonParser.getDecimalValue()
  fullName: com.fasterxml.jackson.core.JsonParser.getDecimalValue()
- uid: com.fasterxml.jackson.core.JsonParser.getTextLength()
  name: JsonParser.getTextLength()
  nameWithType: JsonParser.getTextLength()
  fullName: com.fasterxml.jackson.core.JsonParser.getTextLength()
- uid: com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
  name: JsonParser._constructError(String)
  nameWithType: JsonParser._constructError(String)
  fullName: com.fasterxml.jackson.core.JsonParser._constructError(java.lang.String)
- uid: com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
  name: JsonParser.getFormatFeatures()
  nameWithType: JsonParser.getFormatFeatures()
  fullName: com.fasterxml.jackson.core.JsonParser.getFormatFeatures()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.core.JsonParser.
  name: JsonParser.
  nameWithType: JsonParser.
  fullName: com.fasterxml.jackson.core.JsonParser.
- uid: T>readValueAs(com.fasterxml.jackson.core.type.TypeReference
  name: T>readValueAs(TypeReference
  nameWithType: T>readValueAs(TypeReference
  fullName: T>readValueAs(com.fasterxml.jackson.core.type.TypeReference
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: T>readValuesAs(java.lang.Class
  name: T>readValuesAs(Class
  nameWithType: T>readValuesAs(Class
  fullName: T>readValuesAs(java.lang.Class
- uid: T>)
  name: T>)
  nameWithType: T>)
  fullName: T>)
- uid: T>readValueAsTree()
  name: T>readValueAsTree()
  nameWithType: T>readValueAsTree()
  fullName: T>readValueAsTree()
- uid: T>readValueAs(java.lang.Class
  name: T>readValueAs(Class
  nameWithType: T>readValueAs(Class
  fullName: T>readValueAs(java.lang.Class
- uid: T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference
  name: T>readValuesAs(TypeReference
  nameWithType: T>readValuesAs(TypeReference
  fullName: T>readValuesAs(com.fasterxml.jackson.core.type.TypeReference
