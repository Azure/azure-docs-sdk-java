### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder"
  id: "RntbdContextRequestEncoder"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  children:
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.RntbdContextRequestEncoder()"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.acceptOutboundMessage(java.lang.Object)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf)"
  langs:
  - "java"
  name: "RntbdContextRequestEncoder"
  nameWithType: "RntbdContextRequestEncoder"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder"
  type: "Class"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: "final class RntbdContextRequestEncoder extends MessageToByteEncoder"
  inheritance:
  - "java.lang.Object"
  - "io.netty.channel.ChannelHandlerAdapter"
  - "io.netty.channel.ChannelOutboundHandlerAdapter"
  - "io.netty.handler.codec.MessageToByteEncoder"
  inheritedMembers:
  - "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable()"
  - "io.netty.channel.ChannelHandlerAdapter.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
  - "io.netty.channel.ChannelHandlerAdapter.handlerAdded(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.channel.ChannelHandlerAdapter.handlerRemoved(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.channel.ChannelHandlerAdapter.isSharable()"
  - "io.netty.channel.ChannelOutboundHandlerAdapter.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  - "io.netty.channel.ChannelOutboundHandlerAdapter.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  - "io.netty.channel.ChannelOutboundHandlerAdapter.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  - "io.netty.channel.ChannelOutboundHandlerAdapter.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  - "io.netty.channel.ChannelOutboundHandlerAdapter.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  - "io.netty.channel.ChannelOutboundHandlerAdapter.flush(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.channel.ChannelOutboundHandlerAdapter.read(io.netty.channel.ChannelHandlerContext)"
  - "io.netty.handler.codec.MessageToByteEncoder.acceptOutboundMessage(java.lang.Object)"
  - "io.netty.handler.codec.MessageToByteEncoder.allocateBuffer(io.netty.channel.ChannelHandlerContext,I,boolean)"
  - "io.netty.handler.codec.MessageToByteEncoder.encode(io.netty.channel.ChannelHandlerContext,I,io.netty.buffer.ByteBuf)"
  - "io.netty.handler.codec.MessageToByteEncoder.isPreferDirect()"
  - "io.netty.handler.codec.MessageToByteEncoder.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.RntbdContextRequestEncoder()"
  id: "RntbdContextRequestEncoder()"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder"
  langs:
  - "java"
  name: "RntbdContextRequestEncoder()"
  nameWithType: "RntbdContextRequestEncoder.RntbdContextRequestEncoder()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.RntbdContextRequestEncoder()"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.RntbdContextRequestEncoder*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: " RntbdContextRequestEncoder()"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.acceptOutboundMessage(java.lang.Object)"
  id: "acceptOutboundMessage(java.lang.Object)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder"
  langs:
  - "java"
  name: "acceptOutboundMessage(Object message)"
  nameWithType: "RntbdContextRequestEncoder.acceptOutboundMessage(Object message)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.acceptOutboundMessage(Object message)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.acceptOutboundMessage*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Returns `true` if the given message is an @\\{link RntbdContextRequest\\} instance\n\nIf `false` this message should be passed to the next @\\{link ChannelOutboundHandler\\} in the pipeline."
  syntax:
    content: "public boolean acceptOutboundMessage(Object message)"
    parameters:
    - id: "message"
      type: "java.lang.Object"
      description: "the message to encode"
    return:
      type: "boolean"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf)"
  id: "encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.buffer.ByteBuf)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder"
  langs:
  - "java"
  name: "encode(ChannelHandlerContext context, Object message, ByteBuf out)"
  nameWithType: "RntbdContextRequestEncoder.encode(ChannelHandlerContext context, Object message, ByteBuf out)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.encode(ChannelHandlerContext context, Object message, ByteBuf out)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.encode*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Encode an @\\{link RntbdContextRequest\\} message into a <xref uid=\"io.netty.buffer.ByteBuf\" data-throw-if-not-resolved=\"false\">ByteBuf</xref>\n\nThis method will be called for each written message that can be handled by this encoder."
  syntax:
    content: "protected void encode(ChannelHandlerContext context, Object message, ByteBuf out)"
    parameters:
    - id: "context"
      type: "io.netty.channel.ChannelHandlerContext"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ChannelHandlerContext</xref> which this <xref uid=\"io.netty.handler.codec.MessageToByteEncoder\" data-throw-if-not-resolved=\"false\">MessageToByteEncoder</xref> belongs to"
    - id: "message"
      type: "java.lang.Object"
      description: "the message to encode"
    - id: "out"
      type: "io.netty.buffer.ByteBuf"
      description: "the <xref uid=\"io.netty.buffer.ByteBuf\" data-throw-if-not-resolved=\"false\">ByteBuf</xref> into which the encoded message will be written"
  exceptions:
  - type: "java.lang.IllegalStateException"
    description: "is thrown if an error occurs"
references:
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.RntbdContextRequestEncoder*"
  name: "RntbdContextRequestEncoder"
  nameWithType: "RntbdContextRequestEncoder.RntbdContextRequestEncoder"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.RntbdContextRequestEncoder"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.acceptOutboundMessage*"
  name: "acceptOutboundMessage"
  nameWithType: "RntbdContextRequestEncoder.acceptOutboundMessage"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.acceptOutboundMessage"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "java.lang.IllegalStateException"
  spec.java:
  - uid: "java.lang.IllegalStateException"
    name: "IllegalStateException"
    fullName: "java.lang.IllegalStateException"
- uid: "io.netty.channel.ChannelHandlerContext"
  spec.java:
  - uid: "io.netty.channel.ChannelHandlerContext"
    name: "ChannelHandlerContext"
    fullName: "io.netty.channel.ChannelHandlerContext"
- uid: "io.netty.buffer.ByteBuf"
  spec.java:
  - uid: "io.netty.buffer.ByteBuf"
    name: "ByteBuf"
    fullName: "io.netty.buffer.ByteBuf"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.encode*"
  name: "encode"
  nameWithType: "RntbdContextRequestEncoder.encode"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdContextRequestEncoder.encode"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "io.netty.handler.codec.MessageToByteEncoder"
  name: "MessageToByteEncoder"
  nameWithType: "MessageToByteEncoder"
  fullName: "io.netty.handler.codec.MessageToByteEncoder"
- uid: "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable()"
  name: "ChannelHandlerAdapter.ensureNotSharable()"
  nameWithType: "ChannelHandlerAdapter.ensureNotSharable()"
  fullName: "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "io.netty.channel.ChannelOutboundHandlerAdapter.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  name: "ChannelOutboundHandlerAdapter.connect(ChannelHandlerContext,SocketAddress,SocketAddress,ChannelPromise)"
  nameWithType: "ChannelOutboundHandlerAdapter.connect(ChannelHandlerContext,SocketAddress,SocketAddress,ChannelPromise)"
  fullName: "io.netty.channel.ChannelOutboundHandlerAdapter.connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
- uid: "io.netty.channel.ChannelHandlerAdapter.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
  name: "ChannelHandlerAdapter.exceptionCaught(ChannelHandlerContext,Throwable)"
  nameWithType: "ChannelHandlerAdapter.exceptionCaught(ChannelHandlerContext,Throwable)"
  fullName: "io.netty.channel.ChannelHandlerAdapter.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
- uid: "io.netty.channel.ChannelHandlerAdapter.isSharable()"
  name: "ChannelHandlerAdapter.isSharable()"
  nameWithType: "ChannelHandlerAdapter.isSharable()"
  fullName: "io.netty.channel.ChannelHandlerAdapter.isSharable()"
- uid: "io.netty.handler.codec.MessageToByteEncoder.acceptOutboundMessage(java.lang.Object)"
  name: "MessageToByteEncoder.acceptOutboundMessage(Object)"
  nameWithType: "MessageToByteEncoder.acceptOutboundMessage(Object)"
  fullName: "io.netty.handler.codec.MessageToByteEncoder.acceptOutboundMessage(java.lang.Object)"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "io.netty.handler.codec.MessageToByteEncoder.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
  name: "MessageToByteEncoder.write(ChannelHandlerContext,Object,ChannelPromise)"
  nameWithType: "MessageToByteEncoder.write(ChannelHandlerContext,Object,ChannelPromise)"
  fullName: "io.netty.handler.codec.MessageToByteEncoder.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "io.netty.channel.ChannelOutboundHandlerAdapter.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  name: "ChannelOutboundHandlerAdapter.deregister(ChannelHandlerContext,ChannelPromise)"
  nameWithType: "ChannelOutboundHandlerAdapter.deregister(ChannelHandlerContext,ChannelPromise)"
  fullName: "io.netty.channel.ChannelOutboundHandlerAdapter.deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "io.netty.channel.ChannelHandlerAdapter.handlerRemoved(io.netty.channel.ChannelHandlerContext)"
  name: "ChannelHandlerAdapter.handlerRemoved(ChannelHandlerContext)"
  nameWithType: "ChannelHandlerAdapter.handlerRemoved(ChannelHandlerContext)"
  fullName: "io.netty.channel.ChannelHandlerAdapter.handlerRemoved(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.handler.codec.MessageToByteEncoder.allocateBuffer(io.netty.channel.ChannelHandlerContext,I,boolean)"
  name: "MessageToByteEncoder.allocateBuffer(ChannelHandlerContext,I,boolean)"
  nameWithType: "MessageToByteEncoder.allocateBuffer(ChannelHandlerContext,I,boolean)"
  fullName: "io.netty.handler.codec.MessageToByteEncoder.allocateBuffer(io.netty.channel.ChannelHandlerContext,I,boolean)"
- uid: "io.netty.channel.ChannelOutboundHandlerAdapter.read(io.netty.channel.ChannelHandlerContext)"
  name: "ChannelOutboundHandlerAdapter.read(ChannelHandlerContext)"
  nameWithType: "ChannelOutboundHandlerAdapter.read(ChannelHandlerContext)"
  fullName: "io.netty.channel.ChannelOutboundHandlerAdapter.read(io.netty.channel.ChannelHandlerContext)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "io.netty.channel.ChannelOutboundHandlerAdapter.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  name: "ChannelOutboundHandlerAdapter.close(ChannelHandlerContext,ChannelPromise)"
  nameWithType: "ChannelOutboundHandlerAdapter.close(ChannelHandlerContext,ChannelPromise)"
  fullName: "io.netty.channel.ChannelOutboundHandlerAdapter.close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- uid: "io.netty.channel.ChannelOutboundHandlerAdapter.flush(io.netty.channel.ChannelHandlerContext)"
  name: "ChannelOutboundHandlerAdapter.flush(ChannelHandlerContext)"
  nameWithType: "ChannelOutboundHandlerAdapter.flush(ChannelHandlerContext)"
  fullName: "io.netty.channel.ChannelOutboundHandlerAdapter.flush(io.netty.channel.ChannelHandlerContext)"
- uid: "io.netty.channel.ChannelOutboundHandlerAdapter.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
  name: "ChannelOutboundHandlerAdapter.bind(ChannelHandlerContext,SocketAddress,ChannelPromise)"
  nameWithType: "ChannelOutboundHandlerAdapter.bind(ChannelHandlerContext,SocketAddress,ChannelPromise)"
  fullName: "io.netty.channel.ChannelOutboundHandlerAdapter.bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)"
- uid: "io.netty.handler.codec.MessageToByteEncoder.isPreferDirect()"
  name: "MessageToByteEncoder.isPreferDirect()"
  nameWithType: "MessageToByteEncoder.isPreferDirect()"
  fullName: "io.netty.handler.codec.MessageToByteEncoder.isPreferDirect()"
- uid: "io.netty.channel.ChannelOutboundHandlerAdapter.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
  name: "ChannelOutboundHandlerAdapter.disconnect(ChannelHandlerContext,ChannelPromise)"
  nameWithType: "ChannelOutboundHandlerAdapter.disconnect(ChannelHandlerContext,ChannelPromise)"
  fullName: "io.netty.channel.ChannelOutboundHandlerAdapter.disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)"
- uid: "io.netty.handler.codec.MessageToByteEncoder.encode(io.netty.channel.ChannelHandlerContext,I,io.netty.buffer.ByteBuf)"
  name: "MessageToByteEncoder.encode(ChannelHandlerContext,I,ByteBuf)"
  nameWithType: "MessageToByteEncoder.encode(ChannelHandlerContext,I,ByteBuf)"
  fullName: "io.netty.handler.codec.MessageToByteEncoder.encode(io.netty.channel.ChannelHandlerContext,I,io.netty.buffer.ByteBuf)"
- uid: "io.netty.channel.ChannelHandlerAdapter.handlerAdded(io.netty.channel.ChannelHandlerContext)"
  name: "ChannelHandlerAdapter.handlerAdded(ChannelHandlerContext)"
  nameWithType: "ChannelHandlerAdapter.handlerAdded(ChannelHandlerContext)"
  fullName: "io.netty.channel.ChannelHandlerAdapter.handlerAdded(io.netty.channel.ChannelHandlerContext)"
