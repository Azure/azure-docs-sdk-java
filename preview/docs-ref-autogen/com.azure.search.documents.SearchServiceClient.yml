### YamlMime:ManagedReference
items:
- uid: "com.azure.search.documents.SearchServiceClient"
  id: "SearchServiceClient"
  parent: "com.azure.search.documents"
  children:
  - "com.azure.search.documents.SearchServiceClient.SearchServiceClient(com.azure.search.documents.SearchServiceAsyncClient)"
  - "com.azure.search.documents.SearchServiceClient.analyzeText(java.lang.String,com.azure.search.documents.models.AnalyzeRequest)"
  - "com.azure.search.documents.SearchServiceClient.analyzeText(java.lang.String,com.azure.search.documents.models.AnalyzeRequest,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.createDataSource(com.azure.search.documents.models.DataSource)"
  - "com.azure.search.documents.SearchServiceClient.createDataSourceWithResponse(com.azure.search.documents.models.DataSource,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.createIndex(com.azure.search.documents.models.Index)"
  - "com.azure.search.documents.SearchServiceClient.createIndexWithResponse(com.azure.search.documents.models.Index,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.createIndexer(com.azure.search.documents.models.Indexer)"
  - "com.azure.search.documents.SearchServiceClient.createIndexerWithResponse(com.azure.search.documents.models.Indexer,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.createOrUpdateDataSource(com.azure.search.documents.models.DataSource)"
  - "com.azure.search.documents.SearchServiceClient.createOrUpdateDataSourceWithResponse(com.azure.search.documents.models.DataSource,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.createOrUpdateIndex(com.azure.search.documents.models.Index)"
  - "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexWithResponse(com.azure.search.documents.models.Index,boolean,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexer(com.azure.search.documents.models.Indexer)"
  - "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexerWithResponse(com.azure.search.documents.models.Indexer,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.createOrUpdateSkillset(com.azure.search.documents.models.Skillset)"
  - "com.azure.search.documents.SearchServiceClient.createOrUpdateSkillsetWithResponse(com.azure.search.documents.models.Skillset,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.createOrUpdateSynonymMap(com.azure.search.documents.models.SynonymMap)"
  - "com.azure.search.documents.SearchServiceClient.createOrUpdateSynonymMapWithResponse(com.azure.search.documents.models.SynonymMap,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.createSkillset(com.azure.search.documents.models.Skillset)"
  - "com.azure.search.documents.SearchServiceClient.createSkillsetWithResponse(com.azure.search.documents.models.Skillset,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.createSynonymMap(com.azure.search.documents.models.SynonymMap)"
  - "com.azure.search.documents.SearchServiceClient.createSynonymMapWithResponse(com.azure.search.documents.models.SynonymMap,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.deleteDataSource(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.deleteDataSourceWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.deleteIndex(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.deleteIndexWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.deleteIndexer(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.deleteIndexerWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.deleteSkillset(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.deleteSkillsetWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.deleteSynonymMap(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.deleteSynonymMapWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.getDataSource(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.getDataSourceWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.getEndpoint()"
  - "com.azure.search.documents.SearchServiceClient.getHttpPipeline()"
  - "com.azure.search.documents.SearchServiceClient.getIndex(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.getIndexClient(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.getIndexStatistics(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.getIndexStatisticsWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.getIndexWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.getIndexer(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.getIndexerStatus(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.getIndexerStatusWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.getIndexerWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.getServiceStatistics()"
  - "com.azure.search.documents.SearchServiceClient.getServiceStatisticsWithResponse(com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.getServiceVersion()"
  - "com.azure.search.documents.SearchServiceClient.getSkillset(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.getSkillsetWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.getSynonymMap(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.getSynonymMapWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.listDataSources()"
  - "com.azure.search.documents.SearchServiceClient.listDataSources(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.listIndexers()"
  - "com.azure.search.documents.SearchServiceClient.listIndexers(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.listIndexes()"
  - "com.azure.search.documents.SearchServiceClient.listIndexes(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.listSkillsets()"
  - "com.azure.search.documents.SearchServiceClient.listSkillsets(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.listSynonymMaps()"
  - "com.azure.search.documents.SearchServiceClient.listSynonymMaps(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.resetIndexer(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.resetIndexerWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  - "com.azure.search.documents.SearchServiceClient.runIndexer(java.lang.String)"
  - "com.azure.search.documents.SearchServiceClient.runIndexerWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "SearchServiceClient"
  nameWithType: "SearchServiceClient"
  fullName: "com.azure.search.documents.SearchServiceClient"
  type: "Class"
  package: "com.azure.search.documents"
  summary: "Synchronous Client to manage and query indexes, as well as manage other resources, on a Cognitive Search service"
  syntax:
    content: "public final class SearchServiceClient"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.search.documents.SearchServiceClient.SearchServiceClient(com.azure.search.documents.SearchServiceAsyncClient)"
  id: "SearchServiceClient(com.azure.search.documents.SearchServiceAsyncClient)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "SearchServiceClient(SearchServiceAsyncClient searchServiceAsyncClient)"
  nameWithType: "SearchServiceClient.SearchServiceClient(SearchServiceAsyncClient searchServiceAsyncClient)"
  fullName: "com.azure.search.documents.SearchServiceClient.SearchServiceClient(SearchServiceAsyncClient searchServiceAsyncClient)"
  overload: "com.azure.search.documents.SearchServiceClient.SearchServiceClient*"
  type: "Constructor"
  package: "com.azure.search.documents"
  syntax:
    content: " SearchServiceClient(SearchServiceAsyncClient searchServiceAsyncClient)"
    parameters:
    - id: "searchServiceAsyncClient"
      type: "com.azure.search.documents.SearchServiceAsyncClient"
- uid: "com.azure.search.documents.SearchServiceClient.analyzeText(java.lang.String,com.azure.search.documents.models.AnalyzeRequest)"
  id: "analyzeText(java.lang.String,com.azure.search.documents.models.AnalyzeRequest)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "analyzeText(String indexName, AnalyzeRequest analyzeRequest)"
  nameWithType: "SearchServiceClient.analyzeText(String indexName, AnalyzeRequest analyzeRequest)"
  fullName: "com.azure.search.documents.SearchServiceClient.analyzeText(String indexName, AnalyzeRequest analyzeRequest)"
  overload: "com.azure.search.documents.SearchServiceClient.analyzeText*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Shows how an analyzer breaks text into tokens."
  syntax:
    content: "public PagedIterable<TokenInfo> analyzeText(String indexName, AnalyzeRequest analyzeRequest)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
      description: "the name of the index for which to test an analyzer"
    - id: "analyzeRequest"
      type: "com.azure.search.documents.models.AnalyzeRequest"
      description: "the text and analyzer or analysis components to test"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.TokenInfo>"
      description: "analyze result."
- uid: "com.azure.search.documents.SearchServiceClient.analyzeText(java.lang.String,com.azure.search.documents.models.AnalyzeRequest,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "analyzeText(java.lang.String,com.azure.search.documents.models.AnalyzeRequest,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "analyzeText(String indexName, AnalyzeRequest analyzeRequest, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.analyzeText(String indexName, AnalyzeRequest analyzeRequest, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.analyzeText(String indexName, AnalyzeRequest analyzeRequest, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.analyzeText*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Shows how an analyzer breaks text into tokens."
  syntax:
    content: "public PagedIterable<TokenInfo> analyzeText(String indexName, AnalyzeRequest analyzeRequest, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
      description: "the name of the index for which to test an analyzer"
    - id: "analyzeRequest"
      type: "com.azure.search.documents.models.AnalyzeRequest"
      description: "the text and analyzer or analysis components to test"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.TokenInfo>"
      description: "analyze result."
- uid: "com.azure.search.documents.SearchServiceClient.createDataSource(com.azure.search.documents.models.DataSource)"
  id: "createDataSource(com.azure.search.documents.models.DataSource)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createDataSource(DataSource dataSource)"
  nameWithType: "SearchServiceClient.createDataSource(DataSource dataSource)"
  fullName: "com.azure.search.documents.SearchServiceClient.createDataSource(DataSource dataSource)"
  overload: "com.azure.search.documents.SearchServiceClient.createDataSource*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search data source"
  syntax:
    content: "public DataSource createDataSource(DataSource dataSource)"
    parameters:
    - id: "dataSource"
      type: "com.azure.search.documents.models.DataSource"
      description: "The definition of the data source to create"
    return:
      type: "com.azure.search.documents.models.DataSource"
      description: "the data source that was created."
- uid: "com.azure.search.documents.SearchServiceClient.createDataSourceWithResponse(com.azure.search.documents.models.DataSource,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "createDataSourceWithResponse(com.azure.search.documents.models.DataSource,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createDataSourceWithResponse(DataSource dataSource, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createDataSourceWithResponse(DataSource dataSource, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.createDataSourceWithResponse(DataSource dataSource, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.createDataSourceWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search data source"
  syntax:
    content: "public Response<DataSource> createDataSourceWithResponse(DataSource dataSource, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "dataSource"
      type: "com.azure.search.documents.models.DataSource"
      description: "the definition of the data source to create doesn't match specified values"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.DataSource>"
      description: "a response containing data source that was created."
- uid: "com.azure.search.documents.SearchServiceClient.createIndex(com.azure.search.documents.models.Index)"
  id: "createIndex(com.azure.search.documents.models.Index)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createIndex(Index index)"
  nameWithType: "SearchServiceClient.createIndex(Index index)"
  fullName: "com.azure.search.documents.SearchServiceClient.createIndex(Index index)"
  overload: "com.azure.search.documents.SearchServiceClient.createIndex*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search index"
  syntax:
    content: "public Index createIndex(Index index)"
    parameters:
    - id: "index"
      type: "com.azure.search.documents.models.Index"
      description: "definition of the index to create"
    return:
      type: "com.azure.search.documents.models.Index"
      description: "the created Index."
- uid: "com.azure.search.documents.SearchServiceClient.createIndexWithResponse(com.azure.search.documents.models.Index,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "createIndexWithResponse(com.azure.search.documents.models.Index,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createIndexWithResponse(Index index, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createIndexWithResponse(Index index, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.createIndexWithResponse(Index index, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.createIndexWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search index"
  syntax:
    content: "public Response<Index> createIndexWithResponse(Index index, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "index"
      type: "com.azure.search.documents.models.Index"
      description: "definition of the index to create"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.Index>"
      description: "a response containing the created Index."
- uid: "com.azure.search.documents.SearchServiceClient.createIndexer(com.azure.search.documents.models.Indexer)"
  id: "createIndexer(com.azure.search.documents.models.Indexer)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createIndexer(Indexer indexer)"
  nameWithType: "SearchServiceClient.createIndexer(Indexer indexer)"
  fullName: "com.azure.search.documents.SearchServiceClient.createIndexer(Indexer indexer)"
  overload: "com.azure.search.documents.SearchServiceClient.createIndexer*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search indexer."
  syntax:
    content: "public Indexer createIndexer(Indexer indexer)"
    parameters:
    - id: "indexer"
      type: "com.azure.search.documents.models.Indexer"
      description: "definition of the indexer to create."
    return:
      type: "com.azure.search.documents.models.Indexer"
      description: "the created Indexer."
- uid: "com.azure.search.documents.SearchServiceClient.createIndexerWithResponse(com.azure.search.documents.models.Indexer,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "createIndexerWithResponse(com.azure.search.documents.models.Indexer,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createIndexerWithResponse(Indexer indexer, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createIndexerWithResponse(Indexer indexer, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.createIndexerWithResponse(Indexer indexer, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.createIndexerWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search indexer."
  syntax:
    content: "public Response<Indexer> createIndexerWithResponse(Indexer indexer, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "indexer"
      type: "com.azure.search.documents.models.Indexer"
      description: "definition of the indexer to create"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.Indexer>"
      description: "a response containing the created Indexer."
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateDataSource(com.azure.search.documents.models.DataSource)"
  id: "createOrUpdateDataSource(com.azure.search.documents.models.DataSource)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createOrUpdateDataSource(DataSource dataSource)"
  nameWithType: "SearchServiceClient.createOrUpdateDataSource(DataSource dataSource)"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateDataSource(DataSource dataSource)"
  overload: "com.azure.search.documents.SearchServiceClient.createOrUpdateDataSource*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search data source or updates a data source if it already exists"
  syntax:
    content: "public DataSource createOrUpdateDataSource(DataSource dataSource)"
    parameters:
    - id: "dataSource"
      type: "com.azure.search.documents.models.DataSource"
      description: "The definition of the data source to create or update."
    return:
      type: "com.azure.search.documents.models.DataSource"
      description: "the data source that was created or updated."
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateDataSourceWithResponse(com.azure.search.documents.models.DataSource,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "createOrUpdateDataSourceWithResponse(com.azure.search.documents.models.DataSource,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createOrUpdateDataSourceWithResponse(DataSource dataSource, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createOrUpdateDataSourceWithResponse(DataSource dataSource, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateDataSourceWithResponse(DataSource dataSource, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.createOrUpdateDataSourceWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search data source or updates a data source if it already exists."
  syntax:
    content: "public Response<DataSource> createOrUpdateDataSourceWithResponse(DataSource dataSource, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "dataSource"
      type: "com.azure.search.documents.models.DataSource"
      description: "the definition of the data source to create or update"
    - id: "accessCondition"
      type: "com.azure.core.http.MatchConditions"
      description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.DataSource>"
      description: "a response containing data source that was created or updated."
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndex(com.azure.search.documents.models.Index)"
  id: "createOrUpdateIndex(com.azure.search.documents.models.Index)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createOrUpdateIndex(Index index)"
  nameWithType: "SearchServiceClient.createOrUpdateIndex(Index index)"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndex(Index index)"
  overload: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndex*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search index or updates an index if it already exists."
  syntax:
    content: "public Index createOrUpdateIndex(Index index)"
    parameters:
    - id: "index"
      type: "com.azure.search.documents.models.Index"
      description: "the definition of the index to create or update"
    return:
      type: "com.azure.search.documents.models.Index"
      description: "the index that was created or updated."
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexWithResponse(com.azure.search.documents.models.Index,boolean,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "createOrUpdateIndexWithResponse(com.azure.search.documents.models.Index,boolean,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createOrUpdateIndexWithResponse(Index index, boolean allowIndexDowntime, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createOrUpdateIndexWithResponse(Index index, boolean allowIndexDowntime, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexWithResponse(Index index, boolean allowIndexDowntime, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search index or updates an index if it already exists."
  syntax:
    content: "public Response<Index> createOrUpdateIndexWithResponse(Index index, boolean allowIndexDowntime, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "index"
      type: "com.azure.search.documents.models.Index"
      description: "the definition of the index to create or update"
    - id: "allowIndexDowntime"
      type: "boolean"
      description: "allows new analyzers, tokenizers, token filters, or char filters to be added to an\n index by taking the index offline for at least a few seconds. This temporarily causes indexing and query requests\n to fail. Performance and write availability of the index can be impaired for several minutes after the index is\n updated, or longer for very large indexes."
    - id: "accessCondition"
      type: "com.azure.core.http.MatchConditions"
      description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.Index>"
      description: "a response containing the Index that was created or updated."
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexer(com.azure.search.documents.models.Indexer)"
  id: "createOrUpdateIndexer(com.azure.search.documents.models.Indexer)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createOrUpdateIndexer(Indexer indexer)"
  nameWithType: "SearchServiceClient.createOrUpdateIndexer(Indexer indexer)"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexer(Indexer indexer)"
  overload: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexer*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search indexer or updates an indexer if it already exists."
  syntax:
    content: "public Indexer createOrUpdateIndexer(Indexer indexer)"
    parameters:
    - id: "indexer"
      type: "com.azure.search.documents.models.Indexer"
      description: "The definition of the indexer to create or update."
    return:
      type: "com.azure.search.documents.models.Indexer"
      description: "a response containing the created Indexer."
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexerWithResponse(com.azure.search.documents.models.Indexer,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "createOrUpdateIndexerWithResponse(com.azure.search.documents.models.Indexer,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createOrUpdateIndexerWithResponse(Indexer indexer, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createOrUpdateIndexerWithResponse(Indexer indexer, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexerWithResponse(Indexer indexer, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexerWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search indexer or updates an indexer if it already exists."
  syntax:
    content: "public Response<Indexer> createOrUpdateIndexerWithResponse(Indexer indexer, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "indexer"
      type: "com.azure.search.documents.models.Indexer"
      description: "The definition of the indexer to create or update."
    - id: "accessCondition"
      type: "com.azure.core.http.MatchConditions"
      description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.Indexer>"
      description: "A response object containing the Indexer."
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateSkillset(com.azure.search.documents.models.Skillset)"
  id: "createOrUpdateSkillset(com.azure.search.documents.models.Skillset)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createOrUpdateSkillset(Skillset skillset)"
  nameWithType: "SearchServiceClient.createOrUpdateSkillset(Skillset skillset)"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateSkillset(Skillset skillset)"
  overload: "com.azure.search.documents.SearchServiceClient.createOrUpdateSkillset*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search skillset or updates a skillset if it already exists."
  syntax:
    content: "public Skillset createOrUpdateSkillset(Skillset skillset)"
    parameters:
    - id: "skillset"
      type: "com.azure.search.documents.models.Skillset"
      description: "the definition of the skillset to create or update"
    return:
      type: "com.azure.search.documents.models.Skillset"
      description: "the skillset that was created or updated."
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateSkillsetWithResponse(com.azure.search.documents.models.Skillset,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "createOrUpdateSkillsetWithResponse(com.azure.search.documents.models.Skillset,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createOrUpdateSkillsetWithResponse(Skillset skillset, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createOrUpdateSkillsetWithResponse(Skillset skillset, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateSkillsetWithResponse(Skillset skillset, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.createOrUpdateSkillsetWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search skillset or updates a skillset if it already exists."
  syntax:
    content: "public Response<Skillset> createOrUpdateSkillsetWithResponse(Skillset skillset, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "skillset"
      type: "com.azure.search.documents.models.Skillset"
      description: "the definition of the skillset to create or update"
    - id: "accessCondition"
      type: "com.azure.core.http.MatchConditions"
      description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.Skillset>"
      description: "a response containing the skillset that was created or updated."
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateSynonymMap(com.azure.search.documents.models.SynonymMap)"
  id: "createOrUpdateSynonymMap(com.azure.search.documents.models.SynonymMap)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createOrUpdateSynonymMap(SynonymMap synonymMap)"
  nameWithType: "SearchServiceClient.createOrUpdateSynonymMap(SynonymMap synonymMap)"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateSynonymMap(SynonymMap synonymMap)"
  overload: "com.azure.search.documents.SearchServiceClient.createOrUpdateSynonymMap*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search synonym map or updates a synonym map if it already exists."
  syntax:
    content: "public SynonymMap createOrUpdateSynonymMap(SynonymMap synonymMap)"
    parameters:
    - id: "synonymMap"
      type: "com.azure.search.documents.models.SynonymMap"
      description: "the definition of the synonym map to create or update"
    return:
      type: "com.azure.search.documents.models.SynonymMap"
      description: "the synonym map that was created or updated."
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateSynonymMapWithResponse(com.azure.search.documents.models.SynonymMap,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "createOrUpdateSynonymMapWithResponse(com.azure.search.documents.models.SynonymMap,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createOrUpdateSynonymMapWithResponse(SynonymMap synonymMap, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createOrUpdateSynonymMapWithResponse(SynonymMap synonymMap, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateSynonymMapWithResponse(SynonymMap synonymMap, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.createOrUpdateSynonymMapWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search synonym map or updates a synonym map if it already exists."
  syntax:
    content: "public Response<SynonymMap> createOrUpdateSynonymMapWithResponse(SynonymMap synonymMap, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "synonymMap"
      type: "com.azure.search.documents.models.SynonymMap"
      description: "the definition of the synonym map to create or update"
    - id: "accessCondition"
      type: "com.azure.core.http.MatchConditions"
      description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.SynonymMap>"
      description: "a response containing the synonym map that was created or updated."
- uid: "com.azure.search.documents.SearchServiceClient.createSkillset(com.azure.search.documents.models.Skillset)"
  id: "createSkillset(com.azure.search.documents.models.Skillset)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createSkillset(Skillset skillset)"
  nameWithType: "SearchServiceClient.createSkillset(Skillset skillset)"
  fullName: "com.azure.search.documents.SearchServiceClient.createSkillset(Skillset skillset)"
  overload: "com.azure.search.documents.SearchServiceClient.createSkillset*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new skillset in an Azure Cognitive Search service."
  syntax:
    content: "public Skillset createSkillset(Skillset skillset)"
    parameters:
    - id: "skillset"
      type: "com.azure.search.documents.models.Skillset"
      description: "definition of the skillset containing one or more cognitive skills"
    return:
      type: "com.azure.search.documents.models.Skillset"
      description: "the created Skillset."
- uid: "com.azure.search.documents.SearchServiceClient.createSkillsetWithResponse(com.azure.search.documents.models.Skillset,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "createSkillsetWithResponse(com.azure.search.documents.models.Skillset,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createSkillsetWithResponse(Skillset skillset, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createSkillsetWithResponse(Skillset skillset, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.createSkillsetWithResponse(Skillset skillset, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.createSkillsetWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new skillset in an Azure Cognitive Search service."
  syntax:
    content: "public Response<Skillset> createSkillsetWithResponse(Skillset skillset, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "skillset"
      type: "com.azure.search.documents.models.Skillset"
      description: "definition of the skillset containing one or more cognitive skills"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.Skillset>"
      description: "a response containing the created Skillset."
- uid: "com.azure.search.documents.SearchServiceClient.createSynonymMap(com.azure.search.documents.models.SynonymMap)"
  id: "createSynonymMap(com.azure.search.documents.models.SynonymMap)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createSynonymMap(SynonymMap synonymMap)"
  nameWithType: "SearchServiceClient.createSynonymMap(SynonymMap synonymMap)"
  fullName: "com.azure.search.documents.SearchServiceClient.createSynonymMap(SynonymMap synonymMap)"
  overload: "com.azure.search.documents.SearchServiceClient.createSynonymMap*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search synonym map."
  syntax:
    content: "public SynonymMap createSynonymMap(SynonymMap synonymMap)"
    parameters:
    - id: "synonymMap"
      type: "com.azure.search.documents.models.SynonymMap"
      description: "the definition of the synonym map to create"
    return:
      type: "com.azure.search.documents.models.SynonymMap"
      description: "the created <xref uid=\"com.azure.search.documents.models.SynonymMap\" data-throw-if-not-resolved=\"false\">SynonymMap</xref>."
- uid: "com.azure.search.documents.SearchServiceClient.createSynonymMapWithResponse(com.azure.search.documents.models.SynonymMap,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "createSynonymMapWithResponse(com.azure.search.documents.models.SynonymMap,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "createSynonymMapWithResponse(SynonymMap synonymMap, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createSynonymMapWithResponse(SynonymMap synonymMap, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.createSynonymMapWithResponse(SynonymMap synonymMap, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.createSynonymMapWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Creates a new Azure Cognitive Search synonym map."
  syntax:
    content: "public Response<SynonymMap> createSynonymMapWithResponse(SynonymMap synonymMap, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "synonymMap"
      type: "com.azure.search.documents.models.SynonymMap"
      description: "the definition of the synonym map to create"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.SynonymMap>"
      description: "a response containing the created SynonymMap."
- uid: "com.azure.search.documents.SearchServiceClient.deleteDataSource(java.lang.String)"
  id: "deleteDataSource(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "deleteDataSource(String dataSourceName)"
  nameWithType: "SearchServiceClient.deleteDataSource(String dataSourceName)"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteDataSource(String dataSourceName)"
  overload: "com.azure.search.documents.SearchServiceClient.deleteDataSource*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Delete a DataSource"
  syntax:
    content: "public void deleteDataSource(String dataSourceName)"
    parameters:
    - id: "dataSourceName"
      type: "java.lang.String"
      description: "the name of the data source to be deleted"
- uid: "com.azure.search.documents.SearchServiceClient.deleteDataSourceWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "deleteDataSourceWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "deleteDataSourceWithResponse(String dataSourceName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.deleteDataSourceWithResponse(String dataSourceName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteDataSourceWithResponse(String dataSourceName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.deleteDataSourceWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Delete a DataSource with Response"
  syntax:
    content: "public Response<Void> deleteDataSourceWithResponse(String dataSourceName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "dataSourceName"
      type: "java.lang.String"
      description: "the name of the data source to be deleted"
    - id: "accessCondition"
      type: "com.azure.core.http.MatchConditions"
      description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "an empty response"
- uid: "com.azure.search.documents.SearchServiceClient.deleteIndex(java.lang.String)"
  id: "deleteIndex(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "deleteIndex(String indexName)"
  nameWithType: "SearchServiceClient.deleteIndex(String indexName)"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteIndex(String indexName)"
  overload: "com.azure.search.documents.SearchServiceClient.deleteIndex*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Deletes an Azure Cognitive Search index and all the documents it contains."
  syntax:
    content: "public void deleteIndex(String indexName)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
      description: "the name of the index to delete"
- uid: "com.azure.search.documents.SearchServiceClient.deleteIndexWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "deleteIndexWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "deleteIndexWithResponse(String indexName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.deleteIndexWithResponse(String indexName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteIndexWithResponse(String indexName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.deleteIndexWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Deletes an Azure Cognitive Search index and all the documents it contains."
  syntax:
    content: "public Response<Void> deleteIndexWithResponse(String indexName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
      description: "the name of the index to delete"
    - id: "accessCondition"
      type: "com.azure.core.http.MatchConditions"
      description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the Http pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "a response signalling completion."
- uid: "com.azure.search.documents.SearchServiceClient.deleteIndexer(java.lang.String)"
  id: "deleteIndexer(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "deleteIndexer(String indexerName)"
  nameWithType: "SearchServiceClient.deleteIndexer(String indexerName)"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteIndexer(String indexerName)"
  overload: "com.azure.search.documents.SearchServiceClient.deleteIndexer*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Deletes an Azure Cognitive Search indexer."
  syntax:
    content: "public void deleteIndexer(String indexerName)"
    parameters:
    - id: "indexerName"
      type: "java.lang.String"
      description: "the name of the indexer to delete"
- uid: "com.azure.search.documents.SearchServiceClient.deleteIndexerWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "deleteIndexerWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "deleteIndexerWithResponse(String indexerName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.deleteIndexerWithResponse(String indexerName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteIndexerWithResponse(String indexerName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.deleteIndexerWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Deletes an Azure Cognitive Search indexer."
  syntax:
    content: "public Response<Void> deleteIndexerWithResponse(String indexerName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "indexerName"
      type: "java.lang.String"
      description: "the name of the indexer to delete"
    - id: "accessCondition"
      type: "com.azure.core.http.MatchConditions"
      description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "the context"
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "a response signalling completion."
- uid: "com.azure.search.documents.SearchServiceClient.deleteSkillset(java.lang.String)"
  id: "deleteSkillset(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "deleteSkillset(String skillsetName)"
  nameWithType: "SearchServiceClient.deleteSkillset(String skillsetName)"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteSkillset(String skillsetName)"
  overload: "com.azure.search.documents.SearchServiceClient.deleteSkillset*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Deletes a cognitive skillset in an Azure Cognitive Search service."
  syntax:
    content: "public void deleteSkillset(String skillsetName)"
    parameters:
    - id: "skillsetName"
      type: "java.lang.String"
      description: "the name of the skillset to delete"
- uid: "com.azure.search.documents.SearchServiceClient.deleteSkillsetWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "deleteSkillsetWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "deleteSkillsetWithResponse(String skillsetName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.deleteSkillsetWithResponse(String skillsetName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteSkillsetWithResponse(String skillsetName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.deleteSkillsetWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Deletes a cognitive skillset in an Azure Cognitive Search service."
  syntax:
    content: "public Response<Void> deleteSkillsetWithResponse(String skillsetName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "skillsetName"
      type: "java.lang.String"
      description: "the name of the skillset to delete"
    - id: "accessCondition"
      type: "com.azure.core.http.MatchConditions"
      description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "a response signalling completion."
- uid: "com.azure.search.documents.SearchServiceClient.deleteSynonymMap(java.lang.String)"
  id: "deleteSynonymMap(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "deleteSynonymMap(String synonymMapName)"
  nameWithType: "SearchServiceClient.deleteSynonymMap(String synonymMapName)"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteSynonymMap(String synonymMapName)"
  overload: "com.azure.search.documents.SearchServiceClient.deleteSynonymMap*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Deletes an Azure Cognitive Search synonym map."
  syntax:
    content: "public void deleteSynonymMap(String synonymMapName)"
    parameters:
    - id: "synonymMapName"
      type: "java.lang.String"
      description: "the name of the synonym map to delete"
- uid: "com.azure.search.documents.SearchServiceClient.deleteSynonymMapWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "deleteSynonymMapWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "deleteSynonymMapWithResponse(String synonymMapName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.deleteSynonymMapWithResponse(String synonymMapName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteSynonymMapWithResponse(String synonymMapName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.deleteSynonymMapWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Deletes an Azure Cognitive Search synonym map."
  syntax:
    content: "public Response<Void> deleteSynonymMapWithResponse(String synonymMapName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "synonymMapName"
      type: "java.lang.String"
      description: "the name of the synonym map to delete"
    - id: "accessCondition"
      type: "com.azure.core.http.MatchConditions"
      description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the Http pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "a response signalling completion."
- uid: "com.azure.search.documents.SearchServiceClient.getDataSource(java.lang.String)"
  id: "getDataSource(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getDataSource(String dataSourceName)"
  nameWithType: "SearchServiceClient.getDataSource(String dataSourceName)"
  fullName: "com.azure.search.documents.SearchServiceClient.getDataSource(String dataSourceName)"
  overload: "com.azure.search.documents.SearchServiceClient.getDataSource*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Retrieves a DataSource from an Azure Cognitive Search service."
  syntax:
    content: "public DataSource getDataSource(String dataSourceName)"
    parameters:
    - id: "dataSourceName"
      type: "java.lang.String"
      description: "the name of the data source to retrieve"
    return:
      type: "com.azure.search.documents.models.DataSource"
      description: "the DataSource."
- uid: "com.azure.search.documents.SearchServiceClient.getDataSourceWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "getDataSourceWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getDataSourceWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getDataSourceWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.getDataSourceWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.getDataSourceWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Retrieves a DataSource from an Azure Cognitive Search service."
  syntax:
    content: "public Response<DataSource> getDataSourceWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "dataSourceName"
      type: "java.lang.String"
      description: "the name of the data source to retrieve"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.DataSource>"
      description: "a response containing the DataSource."
- uid: "com.azure.search.documents.SearchServiceClient.getEndpoint()"
  id: "getEndpoint()"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getEndpoint()"
  nameWithType: "SearchServiceClient.getEndpoint()"
  fullName: "com.azure.search.documents.SearchServiceClient.getEndpoint()"
  overload: "com.azure.search.documents.SearchServiceClient.getEndpoint*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Gets the endpoint for the Azure Cognitive Search service."
  syntax:
    content: "public String getEndpoint()"
    return:
      type: "java.lang.String"
      description: "the endpoint value."
- uid: "com.azure.search.documents.SearchServiceClient.getHttpPipeline()"
  id: "getHttpPipeline()"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getHttpPipeline()"
  nameWithType: "SearchServiceClient.getHttpPipeline()"
  fullName: "com.azure.search.documents.SearchServiceClient.getHttpPipeline()"
  overload: "com.azure.search.documents.SearchServiceClient.getHttpPipeline*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Gets the <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpPipeline</xref> powering this client."
  syntax:
    content: " HttpPipeline getHttpPipeline()"
    return:
      type: "com.azure.core.http.HttpPipeline"
      description: "the pipeline."
- uid: "com.azure.search.documents.SearchServiceClient.getIndex(java.lang.String)"
  id: "getIndex(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getIndex(String indexName)"
  nameWithType: "SearchServiceClient.getIndex(String indexName)"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndex(String indexName)"
  overload: "com.azure.search.documents.SearchServiceClient.getIndex*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Retrieves an index definition from the Azure Cognitive Search."
  syntax:
    content: "public Index getIndex(String indexName)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
      description: "the name of the index to retrieve"
    return:
      type: "com.azure.search.documents.models.Index"
      description: "the Index."
- uid: "com.azure.search.documents.SearchServiceClient.getIndexClient(java.lang.String)"
  id: "getIndexClient(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getIndexClient(String indexName)"
  nameWithType: "SearchServiceClient.getIndexClient(String indexName)"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexClient(String indexName)"
  overload: "com.azure.search.documents.SearchServiceClient.getIndexClient*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Initializes a new <xref uid=\"com.azure.search.documents.SearchIndexClient\" data-throw-if-not-resolved=\"false\">SearchIndexClient</xref> using the given Index name and the same configuration as the SearchServiceClient."
  syntax:
    content: "public SearchIndexClient getIndexClient(String indexName)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
      description: "the name of the Index for the client"
    return:
      type: "com.azure.search.documents.SearchIndexClient"
      description: "a <xref uid=\"com.azure.search.documents.SearchIndexClient\" data-throw-if-not-resolved=\"false\">SearchIndexClient</xref> created from the service client configuration"
- uid: "com.azure.search.documents.SearchServiceClient.getIndexStatistics(java.lang.String)"
  id: "getIndexStatistics(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getIndexStatistics(String indexName)"
  nameWithType: "SearchServiceClient.getIndexStatistics(String indexName)"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexStatistics(String indexName)"
  overload: "com.azure.search.documents.SearchServiceClient.getIndexStatistics*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Returns statistics for the given index, including a document count and storage usage."
  syntax:
    content: "public GetIndexStatisticsResult getIndexStatistics(String indexName)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
      description: "the name of the index for which to retrieve statistics"
    return:
      type: "com.azure.search.documents.models.GetIndexStatisticsResult"
      description: "the index statistics result."
- uid: "com.azure.search.documents.SearchServiceClient.getIndexStatisticsWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "getIndexStatisticsWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getIndexStatisticsWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getIndexStatisticsWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexStatisticsWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.getIndexStatisticsWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Returns statistics for the given index, including a document count and storage usage."
  syntax:
    content: "public Response<GetIndexStatisticsResult> getIndexStatisticsWithResponse(String indexName, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
      description: "the name of the index for which to retrieve statistics"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.GetIndexStatisticsResult>"
      description: "a response containing the index statistics result."
- uid: "com.azure.search.documents.SearchServiceClient.getIndexWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "getIndexWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getIndexWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getIndexWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.getIndexWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Retrieves an index definition from the Azure Cognitive Search."
  syntax:
    content: "public Response<Index> getIndexWithResponse(String indexName, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
      description: "the name of the index to retrieve"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.Index>"
      description: "a response containing the Index."
- uid: "com.azure.search.documents.SearchServiceClient.getIndexer(java.lang.String)"
  id: "getIndexer(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getIndexer(String indexerName)"
  nameWithType: "SearchServiceClient.getIndexer(String indexerName)"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexer(String indexerName)"
  overload: "com.azure.search.documents.SearchServiceClient.getIndexer*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Retrieves an indexer definition."
  syntax:
    content: "public Indexer getIndexer(String indexerName)"
    parameters:
    - id: "indexerName"
      type: "java.lang.String"
      description: "the name of the indexer to retrieve"
    return:
      type: "com.azure.search.documents.models.Indexer"
      description: "the indexer."
- uid: "com.azure.search.documents.SearchServiceClient.getIndexerStatus(java.lang.String)"
  id: "getIndexerStatus(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getIndexerStatus(String indexerName)"
  nameWithType: "SearchServiceClient.getIndexerStatus(String indexerName)"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexerStatus(String indexerName)"
  overload: "com.azure.search.documents.SearchServiceClient.getIndexerStatus*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Returns the current status and execution history of an indexer."
  syntax:
    content: "public IndexerExecutionInfo getIndexerStatus(String indexerName)"
    parameters:
    - id: "indexerName"
      type: "java.lang.String"
      description: "the name of the indexer for which to retrieve status"
    return:
      type: "com.azure.search.documents.models.IndexerExecutionInfo"
      description: "a response with the indexer execution info."
- uid: "com.azure.search.documents.SearchServiceClient.getIndexerStatusWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "getIndexerStatusWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getIndexerStatusWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getIndexerStatusWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexerStatusWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.getIndexerStatusWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Returns the current status and execution history of an indexer."
  syntax:
    content: "public Response<IndexerExecutionInfo> getIndexerStatusWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "indexerName"
      type: "java.lang.String"
      description: "the name of the indexer for which to retrieve status"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.IndexerExecutionInfo>"
      description: "a response with the indexer execution info."
- uid: "com.azure.search.documents.SearchServiceClient.getIndexerWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "getIndexerWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.getIndexerWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Retrieves an indexer definition."
  syntax:
    content: "public Response<Indexer> getIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "indexerName"
      type: "java.lang.String"
      description: "the name of the indexer to retrieve"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.Indexer>"
      description: "a response containing the indexer."
- uid: "com.azure.search.documents.SearchServiceClient.getServiceStatistics()"
  id: "getServiceStatistics()"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getServiceStatistics()"
  nameWithType: "SearchServiceClient.getServiceStatistics()"
  fullName: "com.azure.search.documents.SearchServiceClient.getServiceStatistics()"
  overload: "com.azure.search.documents.SearchServiceClient.getServiceStatistics*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Returns service level statistics for a search service, including service counters and limits."
  syntax:
    content: "public ServiceStatistics getServiceStatistics()"
    return:
      type: "com.azure.search.documents.models.ServiceStatistics"
      description: "the search service statistics result."
- uid: "com.azure.search.documents.SearchServiceClient.getServiceStatisticsWithResponse(com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "getServiceStatisticsWithResponse(com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getServiceStatisticsWithResponse(RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getServiceStatisticsWithResponse(RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.getServiceStatisticsWithResponse(RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.getServiceStatisticsWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Returns service level statistics for a search service, including service counters and limits."
  syntax:
    content: "public Response<ServiceStatistics> getServiceStatisticsWithResponse(RequestOptions requestOptions, Context context)"
    parameters:
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.ServiceStatistics>"
      description: "the search service statistics result."
- uid: "com.azure.search.documents.SearchServiceClient.getServiceVersion()"
  id: "getServiceVersion()"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getServiceVersion()"
  nameWithType: "SearchServiceClient.getServiceVersion()"
  fullName: "com.azure.search.documents.SearchServiceClient.getServiceVersion()"
  overload: "com.azure.search.documents.SearchServiceClient.getServiceVersion*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Gets search service version."
  syntax:
    content: "public SearchServiceVersion getServiceVersion()"
    return:
      type: "com.azure.search.documents.SearchServiceVersion"
      description: "the search service version value."
- uid: "com.azure.search.documents.SearchServiceClient.getSkillset(java.lang.String)"
  id: "getSkillset(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getSkillset(String skillsetName)"
  nameWithType: "SearchServiceClient.getSkillset(String skillsetName)"
  fullName: "com.azure.search.documents.SearchServiceClient.getSkillset(String skillsetName)"
  overload: "com.azure.search.documents.SearchServiceClient.getSkillset*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Retrieves a skillset definition."
  syntax:
    content: "public Skillset getSkillset(String skillsetName)"
    parameters:
    - id: "skillsetName"
      type: "java.lang.String"
      description: "the name of the skillset to retrieve"
    return:
      type: "com.azure.search.documents.models.Skillset"
      description: "the Skillset."
- uid: "com.azure.search.documents.SearchServiceClient.getSkillsetWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "getSkillsetWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getSkillsetWithResponse(String skillsetName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getSkillsetWithResponse(String skillsetName, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.getSkillsetWithResponse(String skillsetName, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.getSkillsetWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Retrieves a skillset definition."
  syntax:
    content: "public Response<Skillset> getSkillsetWithResponse(String skillsetName, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "skillsetName"
      type: "java.lang.String"
      description: "the name of the skillset to retrieve"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.Skillset>"
      description: "a response containing the Skillset."
- uid: "com.azure.search.documents.SearchServiceClient.getSynonymMap(java.lang.String)"
  id: "getSynonymMap(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getSynonymMap(String synonymMapName)"
  nameWithType: "SearchServiceClient.getSynonymMap(String synonymMapName)"
  fullName: "com.azure.search.documents.SearchServiceClient.getSynonymMap(String synonymMapName)"
  overload: "com.azure.search.documents.SearchServiceClient.getSynonymMap*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Retrieves a synonym map definition."
  syntax:
    content: "public SynonymMap getSynonymMap(String synonymMapName)"
    parameters:
    - id: "synonymMapName"
      type: "java.lang.String"
      description: "name of the synonym map to retrieve"
    return:
      type: "com.azure.search.documents.models.SynonymMap"
      description: "the <xref uid=\"com.azure.search.documents.models.SynonymMap\" data-throw-if-not-resolved=\"false\">SynonymMap</xref> definition"
- uid: "com.azure.search.documents.SearchServiceClient.getSynonymMapWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "getSynonymMapWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "getSynonymMapWithResponse(String synonymMapName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getSynonymMapWithResponse(String synonymMapName, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.getSynonymMapWithResponse(String synonymMapName, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.getSynonymMapWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Retrieves a synonym map definition."
  syntax:
    content: "public Response<SynonymMap> getSynonymMapWithResponse(String synonymMapName, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "synonymMapName"
      type: "java.lang.String"
      description: "name of the synonym map to retrieve"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "a context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<com.azure.search.documents.models.SynonymMap>"
      description: "a response containing the SynonymMap."
- uid: "com.azure.search.documents.SearchServiceClient.listDataSources()"
  id: "listDataSources()"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "listDataSources()"
  nameWithType: "SearchServiceClient.listDataSources()"
  fullName: "com.azure.search.documents.SearchServiceClient.listDataSources()"
  overload: "com.azure.search.documents.SearchServiceClient.listDataSources*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "List all DataSources from an Azure Cognitive Search service."
  syntax:
    content: "public PagedIterable<DataSource> listDataSources()"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.DataSource>"
      description: "a list of DataSources"
- uid: "com.azure.search.documents.SearchServiceClient.listDataSources(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "listDataSources(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "listDataSources(String select, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.listDataSources(String select, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.listDataSources(String select, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.listDataSources*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "List all DataSources from an Azure Cognitive Search service."
  syntax:
    content: "public PagedIterable<DataSource> listDataSources(String select, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "select"
      type: "java.lang.String"
      description: "Selects which top-level properties of DataSource definitions to retrieve. Specified as a\n comma-separated list of JSON property names, or '*' for all properties. The default is all properties."
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "Additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the HTTP pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.DataSource>"
      description: "a response containing the list of DataSources."
- uid: "com.azure.search.documents.SearchServiceClient.listIndexers()"
  id: "listIndexers()"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "listIndexers()"
  nameWithType: "SearchServiceClient.listIndexers()"
  fullName: "com.azure.search.documents.SearchServiceClient.listIndexers()"
  overload: "com.azure.search.documents.SearchServiceClient.listIndexers*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Lists all indexers available for an Azure Cognitive Search service."
  syntax:
    content: "public PagedIterable<Indexer> listIndexers()"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.Indexer>"
      description: "all Indexers from the Search service."
- uid: "com.azure.search.documents.SearchServiceClient.listIndexers(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "listIndexers(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "listIndexers(String select, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.listIndexers(String select, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.listIndexers(String select, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.listIndexers*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Lists all indexers available for an Azure Cognitive Search service."
  syntax:
    content: "public PagedIterable<Indexer> listIndexers(String select, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "select"
      type: "java.lang.String"
      description: "Selects which top-level properties of the indexers to retrieve. Specified as a comma-separated list\n of JSON property names, or '*' for all properties. The default is all properties."
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.Indexer>"
      description: "all Indexers from the Search service."
- uid: "com.azure.search.documents.SearchServiceClient.listIndexes()"
  id: "listIndexes()"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "listIndexes()"
  nameWithType: "SearchServiceClient.listIndexes()"
  fullName: "com.azure.search.documents.SearchServiceClient.listIndexes()"
  overload: "com.azure.search.documents.SearchServiceClient.listIndexes*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Lists all indexes available for an Azure Cognitive Search service."
  syntax:
    content: "public PagedIterable<Index> listIndexes()"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.Index>"
      description: "the list of indexes."
- uid: "com.azure.search.documents.SearchServiceClient.listIndexes(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "listIndexes(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "listIndexes(String select, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.listIndexes(String select, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.listIndexes(String select, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.listIndexes*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Lists all indexes available for an Azure Cognitive Search service."
  syntax:
    content: "public PagedIterable<Index> listIndexes(String select, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "select"
      type: "java.lang.String"
      description: "selects which top-level properties of the index definitions to retrieve. Specified as a\n comma-separated list of JSON property names, or '*' for all properties. The default is all properties"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.Index>"
      description: "the list of indexes."
- uid: "com.azure.search.documents.SearchServiceClient.listSkillsets()"
  id: "listSkillsets()"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "listSkillsets()"
  nameWithType: "SearchServiceClient.listSkillsets()"
  fullName: "com.azure.search.documents.SearchServiceClient.listSkillsets()"
  overload: "com.azure.search.documents.SearchServiceClient.listSkillsets*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Lists all skillsets available for an Azure Cognitive Search service."
  syntax:
    content: "public PagedIterable<Skillset> listSkillsets()"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.Skillset>"
      description: "the list of skillsets."
- uid: "com.azure.search.documents.SearchServiceClient.listSkillsets(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "listSkillsets(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "listSkillsets(String select, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.listSkillsets(String select, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.listSkillsets(String select, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.listSkillsets*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Lists all skillsets available for an Azure Cognitive Search service."
  syntax:
    content: "public PagedIterable<Skillset> listSkillsets(String select, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "select"
      type: "java.lang.String"
      description: "selects which top-level properties of the skillset definitions to retrieve. Specified as a\n comma-separated list of JSON property names, or '*' for all properties. The default is all properties"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.Skillset>"
      description: "the list of skillsets."
- uid: "com.azure.search.documents.SearchServiceClient.listSynonymMaps()"
  id: "listSynonymMaps()"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "listSynonymMaps()"
  nameWithType: "SearchServiceClient.listSynonymMaps()"
  fullName: "com.azure.search.documents.SearchServiceClient.listSynonymMaps()"
  overload: "com.azure.search.documents.SearchServiceClient.listSynonymMaps*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Lists all synonym maps available for an Azure Cognitive Search service."
  syntax:
    content: "public PagedIterable<SynonymMap> listSynonymMaps()"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.SynonymMap>"
      description: "the list of synonym maps."
- uid: "com.azure.search.documents.SearchServiceClient.listSynonymMaps(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "listSynonymMaps(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "listSynonymMaps(String select, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.listSynonymMaps(String select, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.listSynonymMaps(String select, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.listSynonymMaps*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Lists all synonym maps available for an Azure Cognitive Search service."
  syntax:
    content: "public PagedIterable<SynonymMap> listSynonymMaps(String select, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "select"
      type: "java.lang.String"
      description: "selects which top-level properties of the index definitions to retrieve. Specified as a\n comma-separated list of JSON property names, or '*' for all properties. The default is all properties"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.SynonymMap>"
      description: "the list of synonym maps."
- uid: "com.azure.search.documents.SearchServiceClient.resetIndexer(java.lang.String)"
  id: "resetIndexer(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "resetIndexer(String indexerName)"
  nameWithType: "SearchServiceClient.resetIndexer(String indexerName)"
  fullName: "com.azure.search.documents.SearchServiceClient.resetIndexer(String indexerName)"
  overload: "com.azure.search.documents.SearchServiceClient.resetIndexer*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Resets the change tracking state associated with an indexer."
  syntax:
    content: "public void resetIndexer(String indexerName)"
    parameters:
    - id: "indexerName"
      type: "java.lang.String"
      description: "the name of the indexer to reset"
- uid: "com.azure.search.documents.SearchServiceClient.resetIndexerWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "resetIndexerWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "resetIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.resetIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.resetIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.resetIndexerWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Resets the change tracking state associated with an indexer."
  syntax:
    content: "public Response<Void> resetIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "indexerName"
      type: "java.lang.String"
      description: "the name of the indexer to reset"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "a response signalling completion."
- uid: "com.azure.search.documents.SearchServiceClient.runIndexer(java.lang.String)"
  id: "runIndexer(java.lang.String)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "runIndexer(String indexerName)"
  nameWithType: "SearchServiceClient.runIndexer(String indexerName)"
  fullName: "com.azure.search.documents.SearchServiceClient.runIndexer(String indexerName)"
  overload: "com.azure.search.documents.SearchServiceClient.runIndexer*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Runs an indexer on-demand."
  syntax:
    content: "public void runIndexer(String indexerName)"
    parameters:
    - id: "indexerName"
      type: "java.lang.String"
      description: "the name of the indexer to run"
- uid: "com.azure.search.documents.SearchServiceClient.runIndexerWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  id: "runIndexerWithResponse(java.lang.String,com.azure.search.documents.models.RequestOptions,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.SearchServiceClient"
  langs:
  - "java"
  name: "runIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.runIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  fullName: "com.azure.search.documents.SearchServiceClient.runIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  overload: "com.azure.search.documents.SearchServiceClient.runIndexerWithResponse*"
  type: "Method"
  package: "com.azure.search.documents"
  summary: "Runs an indexer on-demand."
  syntax:
    content: "public Response<Void> runIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
    parameters:
    - id: "indexerName"
      type: "java.lang.String"
      description: "the name of the indexer to run"
    - id: "requestOptions"
      type: "com.azure.search.documents.models.RequestOptions"
      description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "additional context that is passed through the HTTP pipeline during the service call"
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "a response signalling completion."
references:
- uid: "com.azure.search.documents.SearchServiceAsyncClient"
  name: "SearchServiceAsyncClient"
  nameWithType: "SearchServiceAsyncClient"
  fullName: "com.azure.search.documents.SearchServiceAsyncClient"
- uid: "com.azure.search.documents.SearchServiceClient.SearchServiceClient*"
  name: "SearchServiceClient"
  nameWithType: "SearchServiceClient.SearchServiceClient"
  fullName: "com.azure.search.documents.SearchServiceClient.SearchServiceClient"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.HttpPipeline"
  spec.java:
  - uid: "com.azure.core.http.HttpPipeline"
    name: "HttpPipeline"
    fullName: "com.azure.core.http.HttpPipeline"
- uid: "com.azure.search.documents.SearchServiceClient.getHttpPipeline*"
  name: "getHttpPipeline"
  nameWithType: "SearchServiceClient.getHttpPipeline"
  fullName: "com.azure.search.documents.SearchServiceClient.getHttpPipeline"
  package: "com.azure.search.documents"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.search.documents.SearchIndexClient"
  name: "SearchIndexClient"
  nameWithType: "SearchIndexClient"
  fullName: "com.azure.search.documents.SearchIndexClient"
- uid: "com.azure.search.documents.SearchServiceClient.getIndexClient*"
  name: "getIndexClient"
  nameWithType: "SearchServiceClient.getIndexClient"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexClient"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceVersion"
  name: "SearchServiceVersion"
  nameWithType: "SearchServiceVersion"
  fullName: "com.azure.search.documents.SearchServiceVersion"
- uid: "com.azure.search.documents.SearchServiceClient.getServiceVersion*"
  name: "getServiceVersion"
  nameWithType: "SearchServiceClient.getServiceVersion"
  fullName: "com.azure.search.documents.SearchServiceClient.getServiceVersion"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.getEndpoint*"
  name: "getEndpoint"
  nameWithType: "SearchServiceClient.getEndpoint"
  fullName: "com.azure.search.documents.SearchServiceClient.getEndpoint"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.models.DataSource"
  name: "DataSource"
  nameWithType: "DataSource"
  fullName: "com.azure.search.documents.models.DataSource"
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateDataSource*"
  name: "createOrUpdateDataSource"
  nameWithType: "SearchServiceClient.createOrUpdateDataSource"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateDataSource"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.MatchConditions"
  spec.java:
  - uid: "com.azure.core.http.MatchConditions"
    name: "MatchConditions"
    fullName: "com.azure.core.http.MatchConditions"
- uid: "com.azure.search.documents.models.RequestOptions"
  name: "RequestOptions"
  nameWithType: "RequestOptions"
  fullName: "com.azure.search.documents.models.RequestOptions"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "com.azure.core.http.rest.Response<com.azure.search.documents.models.DataSource>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.DataSource"
    name: "DataSource"
    fullName: "com.azure.search.documents.models.DataSource"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateDataSourceWithResponse*"
  name: "createOrUpdateDataSourceWithResponse"
  nameWithType: "SearchServiceClient.createOrUpdateDataSourceWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateDataSourceWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.createDataSource*"
  name: "createDataSource"
  nameWithType: "SearchServiceClient.createDataSource"
  fullName: "com.azure.search.documents.SearchServiceClient.createDataSource"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.createDataSourceWithResponse*"
  name: "createDataSourceWithResponse"
  nameWithType: "SearchServiceClient.createDataSourceWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.createDataSourceWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.getDataSource*"
  name: "getDataSource"
  nameWithType: "SearchServiceClient.getDataSource"
  fullName: "com.azure.search.documents.SearchServiceClient.getDataSource"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.getDataSourceWithResponse*"
  name: "getDataSourceWithResponse"
  nameWithType: "SearchServiceClient.getDataSourceWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.getDataSourceWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.DataSource>"
  spec.java:
  - uid: "com.azure.core.http.rest.PagedIterable"
    name: "PagedIterable"
    fullName: "com.azure.core.http.rest.PagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.DataSource"
    name: "DataSource"
    fullName: "com.azure.search.documents.models.DataSource"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.listDataSources*"
  name: "listDataSources"
  nameWithType: "SearchServiceClient.listDataSources"
  fullName: "com.azure.search.documents.SearchServiceClient.listDataSources"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.deleteDataSource*"
  name: "deleteDataSource"
  nameWithType: "SearchServiceClient.deleteDataSource"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteDataSource"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.Response<java.lang.Void>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.deleteDataSourceWithResponse*"
  name: "deleteDataSourceWithResponse"
  nameWithType: "SearchServiceClient.deleteDataSourceWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteDataSourceWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.models.Indexer"
  name: "Indexer"
  nameWithType: "Indexer"
  fullName: "com.azure.search.documents.models.Indexer"
- uid: "com.azure.search.documents.SearchServiceClient.createIndexer*"
  name: "createIndexer"
  nameWithType: "SearchServiceClient.createIndexer"
  fullName: "com.azure.search.documents.SearchServiceClient.createIndexer"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.Response<com.azure.search.documents.models.Indexer>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.Indexer"
    name: "Indexer"
    fullName: "com.azure.search.documents.models.Indexer"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.createIndexerWithResponse*"
  name: "createIndexerWithResponse"
  nameWithType: "SearchServiceClient.createIndexerWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.createIndexerWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexer*"
  name: "createOrUpdateIndexer"
  nameWithType: "SearchServiceClient.createOrUpdateIndexer"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexer"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexerWithResponse*"
  name: "createOrUpdateIndexerWithResponse"
  nameWithType: "SearchServiceClient.createOrUpdateIndexerWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexerWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.Indexer>"
  spec.java:
  - uid: "com.azure.core.http.rest.PagedIterable"
    name: "PagedIterable"
    fullName: "com.azure.core.http.rest.PagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.Indexer"
    name: "Indexer"
    fullName: "com.azure.search.documents.models.Indexer"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.listIndexers*"
  name: "listIndexers"
  nameWithType: "SearchServiceClient.listIndexers"
  fullName: "com.azure.search.documents.SearchServiceClient.listIndexers"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.getIndexer*"
  name: "getIndexer"
  nameWithType: "SearchServiceClient.getIndexer"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexer"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.getIndexerWithResponse*"
  name: "getIndexerWithResponse"
  nameWithType: "SearchServiceClient.getIndexerWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexerWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.deleteIndexer*"
  name: "deleteIndexer"
  nameWithType: "SearchServiceClient.deleteIndexer"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteIndexer"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.deleteIndexerWithResponse*"
  name: "deleteIndexerWithResponse"
  nameWithType: "SearchServiceClient.deleteIndexerWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteIndexerWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.resetIndexer*"
  name: "resetIndexer"
  nameWithType: "SearchServiceClient.resetIndexer"
  fullName: "com.azure.search.documents.SearchServiceClient.resetIndexer"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.resetIndexerWithResponse*"
  name: "resetIndexerWithResponse"
  nameWithType: "SearchServiceClient.resetIndexerWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.resetIndexerWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.runIndexer*"
  name: "runIndexer"
  nameWithType: "SearchServiceClient.runIndexer"
  fullName: "com.azure.search.documents.SearchServiceClient.runIndexer"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.runIndexerWithResponse*"
  name: "runIndexerWithResponse"
  nameWithType: "SearchServiceClient.runIndexerWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.runIndexerWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.models.IndexerExecutionInfo"
  name: "IndexerExecutionInfo"
  nameWithType: "IndexerExecutionInfo"
  fullName: "com.azure.search.documents.models.IndexerExecutionInfo"
- uid: "com.azure.search.documents.SearchServiceClient.getIndexerStatus*"
  name: "getIndexerStatus"
  nameWithType: "SearchServiceClient.getIndexerStatus"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexerStatus"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.Response<com.azure.search.documents.models.IndexerExecutionInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.IndexerExecutionInfo"
    name: "IndexerExecutionInfo"
    fullName: "com.azure.search.documents.models.IndexerExecutionInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.getIndexerStatusWithResponse*"
  name: "getIndexerStatusWithResponse"
  nameWithType: "SearchServiceClient.getIndexerStatusWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexerStatusWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.models.Index"
  name: "Index"
  nameWithType: "Index"
  fullName: "com.azure.search.documents.models.Index"
- uid: "com.azure.search.documents.SearchServiceClient.createIndex*"
  name: "createIndex"
  nameWithType: "SearchServiceClient.createIndex"
  fullName: "com.azure.search.documents.SearchServiceClient.createIndex"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.Response<com.azure.search.documents.models.Index>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.Index"
    name: "Index"
    fullName: "com.azure.search.documents.models.Index"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.createIndexWithResponse*"
  name: "createIndexWithResponse"
  nameWithType: "SearchServiceClient.createIndexWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.createIndexWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.getIndex*"
  name: "getIndex"
  nameWithType: "SearchServiceClient.getIndex"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndex"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.getIndexWithResponse*"
  name: "getIndexWithResponse"
  nameWithType: "SearchServiceClient.getIndexWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.models.GetIndexStatisticsResult"
  name: "GetIndexStatisticsResult"
  nameWithType: "GetIndexStatisticsResult"
  fullName: "com.azure.search.documents.models.GetIndexStatisticsResult"
- uid: "com.azure.search.documents.SearchServiceClient.getIndexStatistics*"
  name: "getIndexStatistics"
  nameWithType: "SearchServiceClient.getIndexStatistics"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexStatistics"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.Response<com.azure.search.documents.models.GetIndexStatisticsResult>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.GetIndexStatisticsResult"
    name: "GetIndexStatisticsResult"
    fullName: "com.azure.search.documents.models.GetIndexStatisticsResult"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.getIndexStatisticsWithResponse*"
  name: "getIndexStatisticsWithResponse"
  nameWithType: "SearchServiceClient.getIndexStatisticsWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.getIndexStatisticsWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.Index>"
  spec.java:
  - uid: "com.azure.core.http.rest.PagedIterable"
    name: "PagedIterable"
    fullName: "com.azure.core.http.rest.PagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.Index"
    name: "Index"
    fullName: "com.azure.search.documents.models.Index"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.listIndexes*"
  name: "listIndexes"
  nameWithType: "SearchServiceClient.listIndexes"
  fullName: "com.azure.search.documents.SearchServiceClient.listIndexes"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndex*"
  name: "createOrUpdateIndex"
  nameWithType: "SearchServiceClient.createOrUpdateIndex"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndex"
  package: "com.azure.search.documents"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexWithResponse*"
  name: "createOrUpdateIndexWithResponse"
  nameWithType: "SearchServiceClient.createOrUpdateIndexWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateIndexWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.deleteIndex*"
  name: "deleteIndex"
  nameWithType: "SearchServiceClient.deleteIndex"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteIndex"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.deleteIndexWithResponse*"
  name: "deleteIndexWithResponse"
  nameWithType: "SearchServiceClient.deleteIndexWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteIndexWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.models.AnalyzeRequest"
  name: "AnalyzeRequest"
  nameWithType: "AnalyzeRequest"
  fullName: "com.azure.search.documents.models.AnalyzeRequest"
- uid: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.TokenInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.PagedIterable"
    name: "PagedIterable"
    fullName: "com.azure.core.http.rest.PagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.TokenInfo"
    name: "TokenInfo"
    fullName: "com.azure.search.documents.models.TokenInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.analyzeText*"
  name: "analyzeText"
  nameWithType: "SearchServiceClient.analyzeText"
  fullName: "com.azure.search.documents.SearchServiceClient.analyzeText"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.models.Skillset"
  name: "Skillset"
  nameWithType: "Skillset"
  fullName: "com.azure.search.documents.models.Skillset"
- uid: "com.azure.search.documents.SearchServiceClient.createSkillset*"
  name: "createSkillset"
  nameWithType: "SearchServiceClient.createSkillset"
  fullName: "com.azure.search.documents.SearchServiceClient.createSkillset"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.Response<com.azure.search.documents.models.Skillset>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.Skillset"
    name: "Skillset"
    fullName: "com.azure.search.documents.models.Skillset"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.createSkillsetWithResponse*"
  name: "createSkillsetWithResponse"
  nameWithType: "SearchServiceClient.createSkillsetWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.createSkillsetWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.getSkillset*"
  name: "getSkillset"
  nameWithType: "SearchServiceClient.getSkillset"
  fullName: "com.azure.search.documents.SearchServiceClient.getSkillset"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.getSkillsetWithResponse*"
  name: "getSkillsetWithResponse"
  nameWithType: "SearchServiceClient.getSkillsetWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.getSkillsetWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.Skillset>"
  spec.java:
  - uid: "com.azure.core.http.rest.PagedIterable"
    name: "PagedIterable"
    fullName: "com.azure.core.http.rest.PagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.Skillset"
    name: "Skillset"
    fullName: "com.azure.search.documents.models.Skillset"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.listSkillsets*"
  name: "listSkillsets"
  nameWithType: "SearchServiceClient.listSkillsets"
  fullName: "com.azure.search.documents.SearchServiceClient.listSkillsets"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateSkillset*"
  name: "createOrUpdateSkillset"
  nameWithType: "SearchServiceClient.createOrUpdateSkillset"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateSkillset"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateSkillsetWithResponse*"
  name: "createOrUpdateSkillsetWithResponse"
  nameWithType: "SearchServiceClient.createOrUpdateSkillsetWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateSkillsetWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.deleteSkillset*"
  name: "deleteSkillset"
  nameWithType: "SearchServiceClient.deleteSkillset"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteSkillset"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.deleteSkillsetWithResponse*"
  name: "deleteSkillsetWithResponse"
  nameWithType: "SearchServiceClient.deleteSkillsetWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteSkillsetWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.models.SynonymMap"
  name: "SynonymMap"
  nameWithType: "SynonymMap"
  fullName: "com.azure.search.documents.models.SynonymMap"
- uid: "com.azure.search.documents.SearchServiceClient.createSynonymMap*"
  name: "createSynonymMap"
  nameWithType: "SearchServiceClient.createSynonymMap"
  fullName: "com.azure.search.documents.SearchServiceClient.createSynonymMap"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.Response<com.azure.search.documents.models.SynonymMap>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.SynonymMap"
    name: "SynonymMap"
    fullName: "com.azure.search.documents.models.SynonymMap"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.createSynonymMapWithResponse*"
  name: "createSynonymMapWithResponse"
  nameWithType: "SearchServiceClient.createSynonymMapWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.createSynonymMapWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.getSynonymMap*"
  name: "getSynonymMap"
  nameWithType: "SearchServiceClient.getSynonymMap"
  fullName: "com.azure.search.documents.SearchServiceClient.getSynonymMap"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.getSynonymMapWithResponse*"
  name: "getSynonymMapWithResponse"
  nameWithType: "SearchServiceClient.getSynonymMapWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.getSynonymMapWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.PagedIterable<com.azure.search.documents.models.SynonymMap>"
  spec.java:
  - uid: "com.azure.core.http.rest.PagedIterable"
    name: "PagedIterable"
    fullName: "com.azure.core.http.rest.PagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.SynonymMap"
    name: "SynonymMap"
    fullName: "com.azure.search.documents.models.SynonymMap"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.listSynonymMaps*"
  name: "listSynonymMaps"
  nameWithType: "SearchServiceClient.listSynonymMaps"
  fullName: "com.azure.search.documents.SearchServiceClient.listSynonymMaps"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateSynonymMap*"
  name: "createOrUpdateSynonymMap"
  nameWithType: "SearchServiceClient.createOrUpdateSynonymMap"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateSynonymMap"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.createOrUpdateSynonymMapWithResponse*"
  name: "createOrUpdateSynonymMapWithResponse"
  nameWithType: "SearchServiceClient.createOrUpdateSynonymMapWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.createOrUpdateSynonymMapWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.deleteSynonymMap*"
  name: "deleteSynonymMap"
  nameWithType: "SearchServiceClient.deleteSynonymMap"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteSynonymMap"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.SearchServiceClient.deleteSynonymMapWithResponse*"
  name: "deleteSynonymMapWithResponse"
  nameWithType: "SearchServiceClient.deleteSynonymMapWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.deleteSynonymMapWithResponse"
  package: "com.azure.search.documents"
- uid: "com.azure.search.documents.models.ServiceStatistics"
  name: "ServiceStatistics"
  nameWithType: "ServiceStatistics"
  fullName: "com.azure.search.documents.models.ServiceStatistics"
- uid: "com.azure.search.documents.SearchServiceClient.getServiceStatistics*"
  name: "getServiceStatistics"
  nameWithType: "SearchServiceClient.getServiceStatistics"
  fullName: "com.azure.search.documents.SearchServiceClient.getServiceStatistics"
  package: "com.azure.search.documents"
- uid: "com.azure.core.http.rest.Response<com.azure.search.documents.models.ServiceStatistics>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.ServiceStatistics"
    name: "ServiceStatistics"
    fullName: "com.azure.search.documents.models.ServiceStatistics"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.SearchServiceClient.getServiceStatisticsWithResponse*"
  name: "getServiceStatisticsWithResponse"
  nameWithType: "SearchServiceClient.getServiceStatisticsWithResponse"
  fullName: "com.azure.search.documents.SearchServiceClient.getServiceStatisticsWithResponse"
  package: "com.azure.search.documents"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.http.rest.Response"
  name: "Response"
  nameWithType: "Response"
  fullName: "com.azure.core.http.rest.Response"
- uid: "com.azure.core.http.rest.PagedIterable"
  name: "PagedIterable"
  nameWithType: "PagedIterable"
  fullName: "com.azure.core.http.rest.PagedIterable"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "com.azure.search.documents.models.TokenInfo"
  name: "TokenInfo"
  nameWithType: "TokenInfo"
  fullName: "com.azure.search.documents.models.TokenInfo"
