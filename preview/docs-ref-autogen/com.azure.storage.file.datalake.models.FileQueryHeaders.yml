### YamlMime:JavaType
uid: "com.azure.storage.file.datalake.models.FileQueryHeaders"
fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders"
name: "FileQueryHeaders"
nameWithType: "FileQueryHeaders"
summary: "Defines headers for Read operation."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FileQueryHeaders"
constructors:
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.FileQueryHeaders()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.FileQueryHeaders()"
  name: "FileQueryHeaders()"
  nameWithType: "FileQueryHeaders.FileQueryHeaders()"
  syntax: "public FileQueryHeaders()"
methods:
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getAcceptRanges()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getAcceptRanges()"
  name: "getAcceptRanges()"
  nameWithType: "FileQueryHeaders.getAcceptRanges()"
  summary: "Get the acceptRanges property: Indicates that the service supports requests for partial file content."
  syntax: "public String getAcceptRanges()"
  returns:
    description: "the acceptRanges value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCacheControl()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCacheControl()"
  name: "getCacheControl()"
  nameWithType: "FileQueryHeaders.getCacheControl()"
  summary: "Get the cacheControl property: This header is returned if it was previously specified for the file."
  syntax: "public String getCacheControl()"
  returns:
    description: "the cacheControl value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getClientRequestId()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getClientRequestId()"
  name: "getClientRequestId()"
  nameWithType: "FileQueryHeaders.getClientRequestId()"
  summary: "Get the clientRequestId property: If a client request id header is sent in the request, this header will be present in the response with the same value."
  syntax: "public String getClientRequestId()"
  returns:
    description: "the clientRequestId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentCrc64()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentCrc64()"
  name: "getContentCrc64()"
  nameWithType: "FileQueryHeaders.getContentCrc64()"
  summary: "Get the contentCrc64 property: If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to true, then the request returns a crc64 for the range, as long as the range size is less than or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is specified in the same request, it will fail with 400(Bad Request)."
  syntax: "public byte[] getContentCrc64()"
  returns:
    description: "the contentCrc64 value."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentDisposition()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentDisposition()"
  name: "getContentDisposition()"
  nameWithType: "FileQueryHeaders.getContentDisposition()"
  summary: "Get the contentDisposition property: This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the file name specified."
  syntax: "public String getContentDisposition()"
  returns:
    description: "the contentDisposition value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentEncoding()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentEncoding()"
  name: "getContentEncoding()"
  nameWithType: "FileQueryHeaders.getContentEncoding()"
  summary: "Get the contentEncoding property: This header returns the value that was specified for the Content-Encoding request header."
  syntax: "public String getContentEncoding()"
  returns:
    description: "the contentEncoding value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentLanguage()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentLanguage()"
  name: "getContentLanguage()"
  nameWithType: "FileQueryHeaders.getContentLanguage()"
  summary: "Get the contentLanguage property: This header returns the value that was specified for the Content-Language request header."
  syntax: "public String getContentLanguage()"
  returns:
    description: "the contentLanguage value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentLength()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentLength()"
  name: "getContentLength()"
  nameWithType: "FileQueryHeaders.getContentLength()"
  summary: "Get the contentLength property: The number of bytes present in the response body."
  syntax: "public Long getContentLength()"
  returns:
    description: "the contentLength value."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentMd5()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentMd5()"
  name: "getContentMd5()"
  nameWithType: "FileQueryHeaders.getContentMd5()"
  summary: "Get the contentMd5 property: If the file has an MD5 hash and this operation is to read the full file, this response header is returned so that the client can check for message content integrity."
  syntax: "public byte[] getContentMd5()"
  returns:
    description: "the contentMd5 value."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentRange()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentRange()"
  name: "getContentRange()"
  nameWithType: "FileQueryHeaders.getContentRange()"
  summary: "Get the contentRange property: Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the 'Range' request header."
  syntax: "public String getContentRange()"
  returns:
    description: "the contentRange value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentType()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getContentType()"
  name: "getContentType()"
  nameWithType: "FileQueryHeaders.getContentType()"
  summary: "Get the contentType property: The media type of the body of the response. For Download Blob this is 'application/octet-stream'."
  syntax: "public String getContentType()"
  returns:
    description: "the contentType value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCopyCompletionTime()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCopyCompletionTime()"
  name: "getCopyCompletionTime()"
  nameWithType: "FileQueryHeaders.getCopyCompletionTime()"
  summary: "Get the copyCompletionTime property: Conclusion time of the last attempted Copy Blob operation where this file was the destination file. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this file has never been the destination in a Copy Blob operation, or if this file has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
  syntax: "public OffsetDateTime getCopyCompletionTime()"
  returns:
    description: "the copyCompletionTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCopyId()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCopyId()"
  name: "getCopyId()"
  nameWithType: "FileQueryHeaders.getCopyId()"
  summary: "Get the copyId property: String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy."
  syntax: "public String getCopyId()"
  returns:
    description: "the copyId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCopyProgress()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCopyProgress()"
  name: "getCopyProgress()"
  nameWithType: "FileQueryHeaders.getCopyProgress()"
  summary: "Get the copyProgress property: Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this file was the destination file. Can show between 0 and Content-Length bytes copied. This header does not appear if this file has never been the destination in a Copy Blob operation, or if this file has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
  syntax: "public String getCopyProgress()"
  returns:
    description: "the copyProgress value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCopySource()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCopySource()"
  name: "getCopySource()"
  nameWithType: "FileQueryHeaders.getCopySource()"
  summary: "Get the copySource property: URL up to 2 KB in length that specifies the source file or file used in the last attempted Copy Blob operation where this file was the destination file. This header does not appear if this file has never been the destination in a Copy Blob operation, or if this file has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
  syntax: "public String getCopySource()"
  returns:
    description: "the copySource value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCopyStatus()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCopyStatus()"
  name: "getCopyStatus()"
  nameWithType: "FileQueryHeaders.getCopyStatus()"
  summary: "Get the copyStatus property: State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending', 'success', 'aborted', 'failed'."
  syntax: "public CopyStatusType getCopyStatus()"
  returns:
    description: "the copyStatus value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.CopyStatusType?alt=com.azure.storage.file.datalake.models.CopyStatusType&text=CopyStatusType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCopyStatusDescription()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getCopyStatusDescription()"
  name: "getCopyStatusDescription()"
  nameWithType: "FileQueryHeaders.getCopyStatusDescription()"
  summary: "Get the copyStatusDescription property: Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this file has never been the destination in a Copy Blob operation, or if this file has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
  syntax: "public String getCopyStatusDescription()"
  returns:
    description: "the copyStatusDescription value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getDateProperty()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getDateProperty()"
  name: "getDateProperty()"
  nameWithType: "FileQueryHeaders.getDateProperty()"
  summary: "Get the dateProperty property: UTC date/time value generated by the service that indicates the time at which the response was initiated."
  syntax: "public OffsetDateTime getDateProperty()"
  returns:
    description: "the dateProperty value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getETag()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getETag()"
  name: "getETag()"
  nameWithType: "FileQueryHeaders.getETag()"
  summary: "Get the eTag property: The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes."
  syntax: "public String getETag()"
  returns:
    description: "the eTag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getEncryptionKeySha256()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getEncryptionKeySha256()"
  name: "getEncryptionKeySha256()"
  nameWithType: "FileQueryHeaders.getEncryptionKeySha256()"
  summary: "Get the encryptionKeySha256 property: The SHA-256 hash of the encryption key used to encrypt the file. This header is only returned when the file was encrypted with a customer-provided key."
  syntax: "public String getEncryptionKeySha256()"
  returns:
    description: "the encryptionKeySha256 value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getErrorCode()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getErrorCode()"
  name: "getErrorCode()"
  nameWithType: "FileQueryHeaders.getErrorCode()"
  summary: "Get the errorCode property: The errorCode property."
  syntax: "public String getErrorCode()"
  returns:
    description: "the errorCode value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getFileContentMd5()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getFileContentMd5()"
  name: "getFileContentMd5()"
  nameWithType: "FileQueryHeaders.getFileContentMd5()"
  summary: "Get the fileContentMD5 property: If the file has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole file's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range."
  syntax: "public byte[] getFileContentMd5()"
  returns:
    description: "the fileContentMD5 value."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getLastModified()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getLastModified()"
  name: "getLastModified()"
  nameWithType: "FileQueryHeaders.getLastModified()"
  summary: "Get the lastModified property: Returns the date and time the container was last modified. Any operation that modifies the file, including an update of the file's metadata or properties, changes the last-modified time of the file."
  syntax: "public OffsetDateTime getLastModified()"
  returns:
    description: "the lastModified value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getLeaseDuration()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getLeaseDuration()"
  name: "getLeaseDuration()"
  nameWithType: "FileQueryHeaders.getLeaseDuration()"
  summary: "Get the leaseDuration property: When a file is leased, specifies whether the lease is of infinite or fixed duration. Possible values include: 'infinite', 'fixed'."
  syntax: "public LeaseDurationType getLeaseDuration()"
  returns:
    description: "the leaseDuration value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseDurationType?alt=com.azure.storage.file.datalake.models.LeaseDurationType&text=LeaseDurationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getLeaseState()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getLeaseState()"
  name: "getLeaseState()"
  nameWithType: "FileQueryHeaders.getLeaseState()"
  summary: "Get the leaseState property: Lease state of the file. Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'."
  syntax: "public LeaseStateType getLeaseState()"
  returns:
    description: "the leaseState value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseStateType?alt=com.azure.storage.file.datalake.models.LeaseStateType&text=LeaseStateType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getLeaseStatus()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getLeaseStatus()"
  name: "getLeaseStatus()"
  nameWithType: "FileQueryHeaders.getLeaseStatus()"
  summary: "Get the leaseStatus property: The current lease status of the file. Possible values include: 'locked', 'unlocked'."
  syntax: "public LeaseStatusType getLeaseStatus()"
  returns:
    description: "the leaseStatus value."
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseStatusType?alt=com.azure.storage.file.datalake.models.LeaseStatusType&text=LeaseStatusType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getMetadata()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getMetadata()"
  name: "getMetadata()"
  nameWithType: "FileQueryHeaders.getMetadata()"
  summary: "Get the metadata property: The metadata property."
  syntax: "public Map<String,String> getMetadata()"
  returns:
    description: "the metadata value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getRequestId()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getRequestId()"
  name: "getRequestId()"
  nameWithType: "FileQueryHeaders.getRequestId()"
  summary: "Get the requestId property: This header uniquely identifies the request that was made and can be used for troubleshooting the request."
  syntax: "public String getRequestId()"
  returns:
    description: "the requestId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.getVersion()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.getVersion()"
  name: "getVersion()"
  nameWithType: "FileQueryHeaders.getVersion()"
  summary: "Get the version property: Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
  syntax: "public String getVersion()"
  returns:
    description: "the version value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.isServerEncrypted()"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.isServerEncrypted()"
  name: "isServerEncrypted()"
  nameWithType: "FileQueryHeaders.isServerEncrypted()"
  summary: "Get the isServerEncrypted property: The value of this header is set to true if the file data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the file is unencrypted, or if only parts of the file/application metadata are encrypted)."
  syntax: "public Boolean isServerEncrypted()"
  returns:
    description: "the isServerEncrypted value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setAcceptRanges(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setAcceptRanges(String acceptRanges)"
  name: "setAcceptRanges(String acceptRanges)"
  nameWithType: "FileQueryHeaders.setAcceptRanges(String acceptRanges)"
  summary: "Set the acceptRanges property: Indicates that the service supports requests for partial file content."
  parameters:
  - description: "the acceptRanges value to set."
    name: "acceptRanges"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setAcceptRanges(String acceptRanges)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCacheControl(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCacheControl(String cacheControl)"
  name: "setCacheControl(String cacheControl)"
  nameWithType: "FileQueryHeaders.setCacheControl(String cacheControl)"
  summary: "Set the cacheControl property: This header is returned if it was previously specified for the file."
  parameters:
  - description: "the cacheControl value to set."
    name: "cacheControl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setCacheControl(String cacheControl)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setClientRequestId(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setClientRequestId(String clientRequestId)"
  name: "setClientRequestId(String clientRequestId)"
  nameWithType: "FileQueryHeaders.setClientRequestId(String clientRequestId)"
  summary: "Set the clientRequestId property: If a client request id header is sent in the request, this header will be present in the response with the same value."
  parameters:
  - description: "the clientRequestId value to set."
    name: "clientRequestId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setClientRequestId(String clientRequestId)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentCrc64(byte[])"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentCrc64(byte[] contentCrc64)"
  name: "setContentCrc64(byte[] contentCrc64)"
  nameWithType: "FileQueryHeaders.setContentCrc64(byte[] contentCrc64)"
  summary: "Set the contentCrc64 property: If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to true, then the request returns a crc64 for the range, as long as the range size is less than or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is specified in the same request, it will fail with 400(Bad Request)."
  parameters:
  - description: "the contentCrc64 value to set."
    name: "contentCrc64"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public FileQueryHeaders setContentCrc64(byte[] contentCrc64)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentDisposition(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentDisposition(String contentDisposition)"
  name: "setContentDisposition(String contentDisposition)"
  nameWithType: "FileQueryHeaders.setContentDisposition(String contentDisposition)"
  summary: "Set the contentDisposition property: This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the file name specified."
  parameters:
  - description: "the contentDisposition value to set."
    name: "contentDisposition"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setContentDisposition(String contentDisposition)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentEncoding(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentEncoding(String contentEncoding)"
  name: "setContentEncoding(String contentEncoding)"
  nameWithType: "FileQueryHeaders.setContentEncoding(String contentEncoding)"
  summary: "Set the contentEncoding property: This header returns the value that was specified for the Content-Encoding request header."
  parameters:
  - description: "the contentEncoding value to set."
    name: "contentEncoding"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setContentEncoding(String contentEncoding)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentLanguage(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentLanguage(String contentLanguage)"
  name: "setContentLanguage(String contentLanguage)"
  nameWithType: "FileQueryHeaders.setContentLanguage(String contentLanguage)"
  summary: "Set the contentLanguage property: This header returns the value that was specified for the Content-Language request header."
  parameters:
  - description: "the contentLanguage value to set."
    name: "contentLanguage"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setContentLanguage(String contentLanguage)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentLength(java.lang.Long)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentLength(Long contentLength)"
  name: "setContentLength(Long contentLength)"
  nameWithType: "FileQueryHeaders.setContentLength(Long contentLength)"
  summary: "Set the contentLength property: The number of bytes present in the response body."
  parameters:
  - description: "the contentLength value to set."
    name: "contentLength"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setContentLength(Long contentLength)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentMd5(byte[])"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentMd5(byte[] contentMd5)"
  name: "setContentMd5(byte[] contentMd5)"
  nameWithType: "FileQueryHeaders.setContentMd5(byte[] contentMd5)"
  summary: "Set the contentMd5 property: If the file has an MD5 hash and this operation is to read the full file, this response header is returned so that the client can check for message content integrity."
  parameters:
  - description: "the contentMd5 value to set."
    name: "contentMd5"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public FileQueryHeaders setContentMd5(byte[] contentMd5)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentRange(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentRange(String contentRange)"
  name: "setContentRange(String contentRange)"
  nameWithType: "FileQueryHeaders.setContentRange(String contentRange)"
  summary: "Set the contentRange property: Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the 'Range' request header."
  parameters:
  - description: "the contentRange value to set."
    name: "contentRange"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setContentRange(String contentRange)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentType(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setContentType(String contentType)"
  name: "setContentType(String contentType)"
  nameWithType: "FileQueryHeaders.setContentType(String contentType)"
  summary: "Set the contentType property: The media type of the body of the response. For Download Blob this is 'application/octet-stream'."
  parameters:
  - description: "the contentType value to set."
    name: "contentType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setContentType(String contentType)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCopyCompletionTime(java.time.OffsetDateTime)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCopyCompletionTime(OffsetDateTime copyCompletionTime)"
  name: "setCopyCompletionTime(OffsetDateTime copyCompletionTime)"
  nameWithType: "FileQueryHeaders.setCopyCompletionTime(OffsetDateTime copyCompletionTime)"
  summary: "Set the copyCompletionTime property: Conclusion time of the last attempted Copy Blob operation where this file was the destination file. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this file has never been the destination in a Copy Blob operation, or if this file has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
  parameters:
  - description: "the copyCompletionTime value to set."
    name: "copyCompletionTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setCopyCompletionTime(OffsetDateTime copyCompletionTime)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCopyId(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCopyId(String copyId)"
  name: "setCopyId(String copyId)"
  nameWithType: "FileQueryHeaders.setCopyId(String copyId)"
  summary: "Set the copyId property: String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy."
  parameters:
  - description: "the copyId value to set."
    name: "copyId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setCopyId(String copyId)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCopyProgress(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCopyProgress(String copyProgress)"
  name: "setCopyProgress(String copyProgress)"
  nameWithType: "FileQueryHeaders.setCopyProgress(String copyProgress)"
  summary: "Set the copyProgress property: Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this file was the destination file. Can show between 0 and Content-Length bytes copied. This header does not appear if this file has never been the destination in a Copy Blob operation, or if this file has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
  parameters:
  - description: "the copyProgress value to set."
    name: "copyProgress"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setCopyProgress(String copyProgress)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCopySource(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCopySource(String copySource)"
  name: "setCopySource(String copySource)"
  nameWithType: "FileQueryHeaders.setCopySource(String copySource)"
  summary: "Set the copySource property: URL up to 2 KB in length that specifies the source file or file used in the last attempted Copy Blob operation where this file was the destination file. This header does not appear if this file has never been the destination in a Copy Blob operation, or if this file has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
  parameters:
  - description: "the copySource value to set."
    name: "copySource"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setCopySource(String copySource)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCopyStatus(com.azure.storage.file.datalake.models.CopyStatusType)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCopyStatus(CopyStatusType copyStatus)"
  name: "setCopyStatus(CopyStatusType copyStatus)"
  nameWithType: "FileQueryHeaders.setCopyStatus(CopyStatusType copyStatus)"
  summary: "Set the copyStatus property: State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending', 'success', 'aborted', 'failed'."
  parameters:
  - description: "the copyStatus value to set."
    name: "copyStatus"
    type: "<xref href=\"com.azure.storage.file.datalake.models.CopyStatusType?alt=com.azure.storage.file.datalake.models.CopyStatusType&text=CopyStatusType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setCopyStatus(CopyStatusType copyStatus)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCopyStatusDescription(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setCopyStatusDescription(String copyStatusDescription)"
  name: "setCopyStatusDescription(String copyStatusDescription)"
  nameWithType: "FileQueryHeaders.setCopyStatusDescription(String copyStatusDescription)"
  summary: "Set the copyStatusDescription property: Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this file has never been the destination in a Copy Blob operation, or if this file has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
  parameters:
  - description: "the copyStatusDescription value to set."
    name: "copyStatusDescription"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setCopyStatusDescription(String copyStatusDescription)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setDateProperty(java.time.OffsetDateTime)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setDateProperty(OffsetDateTime dateProperty)"
  name: "setDateProperty(OffsetDateTime dateProperty)"
  nameWithType: "FileQueryHeaders.setDateProperty(OffsetDateTime dateProperty)"
  summary: "Set the dateProperty property: UTC date/time value generated by the service that indicates the time at which the response was initiated."
  parameters:
  - description: "the dateProperty value to set."
    name: "dateProperty"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setDateProperty(OffsetDateTime dateProperty)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setETag(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setETag(String eTag)"
  name: "setETag(String eTag)"
  nameWithType: "FileQueryHeaders.setETag(String eTag)"
  summary: "Set the eTag property: The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes."
  parameters:
  - description: "the eTag value to set."
    name: "eTag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setETag(String eTag)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setEncryptionKeySha256(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setEncryptionKeySha256(String encryptionKeySha256)"
  name: "setEncryptionKeySha256(String encryptionKeySha256)"
  nameWithType: "FileQueryHeaders.setEncryptionKeySha256(String encryptionKeySha256)"
  summary: "Set the encryptionKeySha256 property: The SHA-256 hash of the encryption key used to encrypt the file. This header is only returned when the file was encrypted with a customer-provided key."
  parameters:
  - description: "the encryptionKeySha256 value to set."
    name: "encryptionKeySha256"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setEncryptionKeySha256(String encryptionKeySha256)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setErrorCode(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setErrorCode(String errorCode)"
  name: "setErrorCode(String errorCode)"
  nameWithType: "FileQueryHeaders.setErrorCode(String errorCode)"
  summary: "Set the errorCode property: The errorCode property."
  parameters:
  - description: "the errorCode value to set."
    name: "errorCode"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setErrorCode(String errorCode)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setFileContentMd5(byte[])"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setFileContentMd5(byte[] fileContentMd5)"
  name: "setFileContentMd5(byte[] fileContentMd5)"
  nameWithType: "FileQueryHeaders.setFileContentMd5(byte[] fileContentMd5)"
  summary: "Set the fileContentMD5 property: If the file has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole file's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range."
  parameters:
  - description: "the fileContentMD5 value to set."
    name: "fileContentMd5"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public FileQueryHeaders setFileContentMd5(byte[] fileContentMd5)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setLastModified(java.time.OffsetDateTime)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setLastModified(OffsetDateTime lastModified)"
  name: "setLastModified(OffsetDateTime lastModified)"
  nameWithType: "FileQueryHeaders.setLastModified(OffsetDateTime lastModified)"
  summary: "Set the lastModified property: Returns the date and time the container was last modified. Any operation that modifies the file, including an update of the file's metadata or properties, changes the last-modified time of the file."
  parameters:
  - description: "the lastModified value to set."
    name: "lastModified"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setLastModified(OffsetDateTime lastModified)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setLeaseDuration(com.azure.storage.file.datalake.models.LeaseDurationType)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setLeaseDuration(LeaseDurationType leaseDuration)"
  name: "setLeaseDuration(LeaseDurationType leaseDuration)"
  nameWithType: "FileQueryHeaders.setLeaseDuration(LeaseDurationType leaseDuration)"
  summary: "Set the leaseDuration property: When a file is leased, specifies whether the lease is of infinite or fixed duration. Possible values include: 'infinite', 'fixed'."
  parameters:
  - description: "the leaseDuration value to set."
    name: "leaseDuration"
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseDurationType?alt=com.azure.storage.file.datalake.models.LeaseDurationType&text=LeaseDurationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setLeaseDuration(LeaseDurationType leaseDuration)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setLeaseState(com.azure.storage.file.datalake.models.LeaseStateType)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setLeaseState(LeaseStateType leaseState)"
  name: "setLeaseState(LeaseStateType leaseState)"
  nameWithType: "FileQueryHeaders.setLeaseState(LeaseStateType leaseState)"
  summary: "Set the leaseState property: Lease state of the file. Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'."
  parameters:
  - description: "the leaseState value to set."
    name: "leaseState"
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseStateType?alt=com.azure.storage.file.datalake.models.LeaseStateType&text=LeaseStateType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setLeaseState(LeaseStateType leaseState)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setLeaseStatus(com.azure.storage.file.datalake.models.LeaseStatusType)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setLeaseStatus(LeaseStatusType leaseStatus)"
  name: "setLeaseStatus(LeaseStatusType leaseStatus)"
  nameWithType: "FileQueryHeaders.setLeaseStatus(LeaseStatusType leaseStatus)"
  summary: "Set the leaseStatus property: The current lease status of the file. Possible values include: 'locked', 'unlocked'."
  parameters:
  - description: "the leaseStatus value to set."
    name: "leaseStatus"
    type: "<xref href=\"com.azure.storage.file.datalake.models.LeaseStatusType?alt=com.azure.storage.file.datalake.models.LeaseStatusType&text=LeaseStatusType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setLeaseStatus(LeaseStatusType leaseStatus)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setMetadata(Map<String,String> metadata)"
  name: "setMetadata(Map<String,String> metadata)"
  nameWithType: "FileQueryHeaders.setMetadata(Map<String,String> metadata)"
  summary: "Set the metadata property: The metadata property."
  parameters:
  - description: "the metadata value to set."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public FileQueryHeaders setMetadata(Map<String,String> metadata)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setRequestId(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setRequestId(String requestId)"
  name: "setRequestId(String requestId)"
  nameWithType: "FileQueryHeaders.setRequestId(String requestId)"
  summary: "Set the requestId property: This header uniquely identifies the request that was made and can be used for troubleshooting the request."
  parameters:
  - description: "the requestId value to set."
    name: "requestId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setRequestId(String requestId)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setServerEncrypted(java.lang.Boolean)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setServerEncrypted(Boolean serverEncrypted)"
  name: "setServerEncrypted(Boolean serverEncrypted)"
  nameWithType: "FileQueryHeaders.setServerEncrypted(Boolean serverEncrypted)"
  summary: "Set the isServerEncrypted property: The value of this header is set to true if the file data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the file is unencrypted, or if only parts of the file/application metadata are encrypted)."
  parameters:
  - description: "the isServerEncrypted value to set."
    name: "serverEncrypted"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setServerEncrypted(Boolean serverEncrypted)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.models.FileQueryHeaders.setVersion(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.models.FileQueryHeaders.setVersion(String version)"
  name: "setVersion(String version)"
  nameWithType: "FileQueryHeaders.setVersion(String version)"
  summary: "Set the version property: Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
  parameters:
  - description: "the version value to set."
    name: "version"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FileQueryHeaders setVersion(String version)"
  returns:
    description: "the FileQueryHeaders object itself."
    type: "<xref href=\"com.azure.storage.file.datalake.models.FileQueryHeaders?alt=com.azure.storage.file.datalake.models.FileQueryHeaders&text=FileQueryHeaders\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.storage.file.datalake.models"
artifact: com.azure:azure-storage-file-datalake:12.11.0-beta.1
