### YamlMime:JavaType
uid: "com.azure.search.documents.models.VectorQuery"
fullName: "com.azure.search.documents.models.VectorQuery"
name: "VectorQuery"
nameWithType: "VectorQuery"
summary: "The query parameters for vector and hybrid search queries."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **VectorQuery**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.models.VectorQuery?alt=com.azure.search.documents.models.VectorQuery&text=VectorQuery\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.search.documents.models.VectorQuery.VectorQuery()"
  fullName: "com.azure.search.documents.models.VectorQuery.VectorQuery()"
  name: "VectorQuery()"
  nameWithType: "VectorQuery.VectorQuery()"
  summary: "Creates an instance of Vector<wbr>Query class."
  syntax: "public VectorQuery()"
  desc: "Creates an instance of VectorQuery class."
methods:
- uid: "com.azure.search.documents.models.VectorQuery.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.search.documents.models.VectorQuery.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "VectorQuery.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Vector<wbr>Query from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static VectorQuery fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the VectorQuery."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of VectorQuery from the JsonReader."
  returns:
    description: "An instance of VectorQuery if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.search.documents.models.VectorQuery?alt=com.azure.search.documents.models.VectorQuery&text=VectorQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorQuery.getFields()"
  fullName: "com.azure.search.documents.models.VectorQuery.getFields()"
  name: "getFields()"
  nameWithType: "VectorQuery.getFields()"
  summary: "Get the fields property: Vector Fields of type Collection(Edm.<wbr>Single) to be included in the vector searched."
  syntax: "public String getFields()"
  desc: "Get the fields property: Vector Fields of type Collection(Edm.Single) to be included in the vector searched."
  returns:
    description: "the fields value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.documents.models.VectorQuery.getFilterOverride()"
  fullName: "com.azure.search.documents.models.VectorQuery.getFilterOverride()"
  name: "getFilterOverride()"
  nameWithType: "VectorQuery.getFilterOverride()"
  summary: "Get the filter<wbr>Override property: The OData filter expression to apply to this specific vector query."
  syntax: "public String getFilterOverride()"
  desc: "Get the filterOverride property: The OData filter expression to apply to this specific vector query. If no filter expression is defined at the vector level, the expression defined in the top level filter parameter is used instead."
  returns:
    description: "the filterOverride value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.documents.models.VectorQuery.getKNearestNeighborsCount()"
  fullName: "com.azure.search.documents.models.VectorQuery.getKNearestNeighborsCount()"
  name: "getKNearestNeighborsCount()"
  nameWithType: "VectorQuery.getKNearestNeighborsCount()"
  summary: "Get the k<wbr>Nearest<wbr>Neighbors<wbr>Count property: Number of nearest neighbors to return as top hits."
  syntax: "public Integer getKNearestNeighborsCount()"
  desc: "Get the kNearestNeighborsCount property: Number of nearest neighbors to return as top hits."
  returns:
    description: "the kNearestNeighborsCount value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.search.documents.models.VectorQuery.getKind()"
  fullName: "com.azure.search.documents.models.VectorQuery.getKind()"
  name: "getKind()"
  nameWithType: "VectorQuery.getKind()"
  summary: "Get the kind property: The kind of vector query being performed."
  syntax: "public VectorQueryKind getKind()"
  desc: "Get the kind property: The kind of vector query being performed."
  returns:
    description: "the kind value."
    type: "<xref href=\"com.azure.search.documents.models.VectorQueryKind?alt=com.azure.search.documents.models.VectorQueryKind&text=VectorQueryKind\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorQuery.getOversampling()"
  fullName: "com.azure.search.documents.models.VectorQuery.getOversampling()"
  name: "getOversampling()"
  nameWithType: "VectorQuery.getOversampling()"
  summary: "Get the oversampling property: Oversampling factor."
  syntax: "public Double getOversampling()"
  desc: "Get the oversampling property: Oversampling factor. Minimum value is 1. It overrides the 'defaultOversampling' parameter configured in the index definition. It can be set only when 'rerankWithOriginalVectors' is true. This parameter is only permitted when a compression method is used on the underlying vector field."
  returns:
    description: "the oversampling value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html\">Double</a>"
- uid: "com.azure.search.documents.models.VectorQuery.getThreshold()"
  fullName: "com.azure.search.documents.models.VectorQuery.getThreshold()"
  name: "getThreshold()"
  nameWithType: "VectorQuery.getThreshold()"
  summary: "Get the threshold property: The threshold used for vector queries."
  syntax: "public VectorThreshold getThreshold()"
  desc: "Get the threshold property: The threshold used for vector queries. Note this can only be set if all 'fields' use the same similarity metric."
  returns:
    description: "the threshold value."
    type: "<xref href=\"com.azure.search.documents.models.VectorThreshold?alt=com.azure.search.documents.models.VectorThreshold&text=VectorThreshold\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorQuery.getWeight()"
  fullName: "com.azure.search.documents.models.VectorQuery.getWeight()"
  name: "getWeight()"
  nameWithType: "VectorQuery.getWeight()"
  summary: "Get the weight property: Relative weight of the vector query when compared to other vector query and/or the text query within the same search request."
  syntax: "public Float getWeight()"
  desc: "Get the weight property: Relative weight of the vector query when compared to other vector query and/or the text query within the same search request. This value is used when combining the results of multiple ranking lists produced by the different vector queries and/or the results retrieved through the text query. The higher the weight, the higher the documents that matched that query will be in the final ranking. Default is 1.0 and the value needs to be a positive number larger than zero."
  returns:
    description: "the weight value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Float.html\">Float</a>"
- uid: "com.azure.search.documents.models.VectorQuery.isExhaustive()"
  fullName: "com.azure.search.documents.models.VectorQuery.isExhaustive()"
  name: "isExhaustive()"
  nameWithType: "VectorQuery.isExhaustive()"
  summary: "Get the exhaustive property: When true, triggers an exhaustive k-nearest neighbor search across all vectors within the vector index."
  syntax: "public Boolean isExhaustive()"
  desc: "Get the exhaustive property: When true, triggers an exhaustive k-nearest neighbor search across all vectors within the vector index. Useful for scenarios where exact matches are critical, such as determining ground truth values."
  returns:
    description: "the exhaustive value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.search.documents.models.VectorQuery.setExhaustive(java.lang.Boolean)"
  fullName: "com.azure.search.documents.models.VectorQuery.setExhaustive(Boolean exhaustive)"
  name: "setExhaustive(Boolean exhaustive)"
  nameWithType: "VectorQuery.setExhaustive(Boolean exhaustive)"
  summary: "Set the exhaustive property: When true, triggers an exhaustive k-nearest neighbor search across all vectors within the vector index."
  parameters:
  - description: "the exhaustive value to set."
    name: "exhaustive"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public VectorQuery setExhaustive(Boolean exhaustive)"
  desc: "Set the exhaustive property: When true, triggers an exhaustive k-nearest neighbor search across all vectors within the vector index. Useful for scenarios where exact matches are critical, such as determining ground truth values."
  returns:
    description: "the VectorQuery object itself."
    type: "<xref href=\"com.azure.search.documents.models.VectorQuery?alt=com.azure.search.documents.models.VectorQuery&text=VectorQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorQuery.setFields(java.lang.String...)"
  fullName: "com.azure.search.documents.models.VectorQuery.setFields(String[] fields)"
  name: "setFields(String[] fields)"
  nameWithType: "VectorQuery.setFields(String[] fields)"
  summary: "Set the fields property: Vector Fields of type Collection(Edm.<wbr>Single) to be included in the vector searched."
  parameters:
  - description: "the fields value to set."
    name: "fields"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>[]"
  syntax: "public VectorQuery setFields(String[] fields)"
  desc: "Set the fields property: Vector Fields of type Collection(Edm.Single) to be included in the vector searched."
  returns:
    description: "the VectorQuery object itself."
    type: "<xref href=\"com.azure.search.documents.models.VectorQuery?alt=com.azure.search.documents.models.VectorQuery&text=VectorQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorQuery.setFilterOverride(java.lang.String)"
  fullName: "com.azure.search.documents.models.VectorQuery.setFilterOverride(String filterOverride)"
  name: "setFilterOverride(String filterOverride)"
  nameWithType: "VectorQuery.setFilterOverride(String filterOverride)"
  summary: "Set the filter<wbr>Override property: The OData filter expression to apply to this specific vector query."
  parameters:
  - description: "the filterOverride value to set."
    name: "filterOverride"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public VectorQuery setFilterOverride(String filterOverride)"
  desc: "Set the filterOverride property: The OData filter expression to apply to this specific vector query. If no filter expression is defined at the vector level, the expression defined in the top level filter parameter is used instead."
  returns:
    description: "the VectorQuery object itself."
    type: "<xref href=\"com.azure.search.documents.models.VectorQuery?alt=com.azure.search.documents.models.VectorQuery&text=VectorQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorQuery.setKNearestNeighborsCount(java.lang.Integer)"
  fullName: "com.azure.search.documents.models.VectorQuery.setKNearestNeighborsCount(Integer kNearestNeighborsCount)"
  name: "setKNearestNeighborsCount(Integer kNearestNeighborsCount)"
  nameWithType: "VectorQuery.setKNearestNeighborsCount(Integer kNearestNeighborsCount)"
  summary: "Set the k<wbr>Nearest<wbr>Neighbors<wbr>Count property: Number of nearest neighbors to return as top hits."
  parameters:
  - description: "the kNearestNeighborsCount value to set."
    name: "kNearestNeighborsCount"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public VectorQuery setKNearestNeighborsCount(Integer kNearestNeighborsCount)"
  desc: "Set the kNearestNeighborsCount property: Number of nearest neighbors to return as top hits."
  returns:
    description: "the VectorQuery object itself."
    type: "<xref href=\"com.azure.search.documents.models.VectorQuery?alt=com.azure.search.documents.models.VectorQuery&text=VectorQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorQuery.setOversampling(java.lang.Double)"
  fullName: "com.azure.search.documents.models.VectorQuery.setOversampling(Double oversampling)"
  name: "setOversampling(Double oversampling)"
  nameWithType: "VectorQuery.setOversampling(Double oversampling)"
  summary: "Set the oversampling property: Oversampling factor."
  parameters:
  - description: "the oversampling value to set."
    name: "oversampling"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html\">Double</a>"
  syntax: "public VectorQuery setOversampling(Double oversampling)"
  desc: "Set the oversampling property: Oversampling factor. Minimum value is 1. It overrides the 'defaultOversampling' parameter configured in the index definition. It can be set only when 'rerankWithOriginalVectors' is true. This parameter is only permitted when a compression method is used on the underlying vector field."
  returns:
    description: "the VectorQuery object itself."
    type: "<xref href=\"com.azure.search.documents.models.VectorQuery?alt=com.azure.search.documents.models.VectorQuery&text=VectorQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorQuery.setThreshold(com.azure.search.documents.models.VectorThreshold)"
  fullName: "com.azure.search.documents.models.VectorQuery.setThreshold(VectorThreshold threshold)"
  name: "setThreshold(VectorThreshold threshold)"
  nameWithType: "VectorQuery.setThreshold(VectorThreshold threshold)"
  summary: "Set the threshold property: The threshold used for vector queries."
  parameters:
  - description: "the threshold value to set."
    name: "threshold"
    type: "<xref href=\"com.azure.search.documents.models.VectorThreshold?alt=com.azure.search.documents.models.VectorThreshold&text=VectorThreshold\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VectorQuery setThreshold(VectorThreshold threshold)"
  desc: "Set the threshold property: The threshold used for vector queries. Note this can only be set if all 'fields' use the same similarity metric."
  returns:
    description: "the VectorQuery object itself."
    type: "<xref href=\"com.azure.search.documents.models.VectorQuery?alt=com.azure.search.documents.models.VectorQuery&text=VectorQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorQuery.setWeight(java.lang.Float)"
  fullName: "com.azure.search.documents.models.VectorQuery.setWeight(Float weight)"
  name: "setWeight(Float weight)"
  nameWithType: "VectorQuery.setWeight(Float weight)"
  summary: "Set the weight property: Relative weight of the vector query when compared to other vector query and/or the text query within the same search request."
  parameters:
  - description: "the weight value to set."
    name: "weight"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Float.html\">Float</a>"
  syntax: "public VectorQuery setWeight(Float weight)"
  desc: "Set the weight property: Relative weight of the vector query when compared to other vector query and/or the text query within the same search request. This value is used when combining the results of multiple ranking lists produced by the different vector queries and/or the results retrieved through the text query. The higher the weight, the higher the documents that matched that query will be in the final ranking. Default is 1.0 and the value needs to be a positive number larger than zero."
  returns:
    description: "the VectorQuery object itself."
    type: "<xref href=\"com.azure.search.documents.models.VectorQuery?alt=com.azure.search.documents.models.VectorQuery&text=VectorQuery\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.models.VectorQuery.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.search.documents.models.VectorQuery.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "VectorQuery.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The query parameters for vector and hybrid search queries."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.models.VectorQuery?alt=com.azure.search.documents.models.VectorQuery&text=VectorQuery\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.search.documents.models"
artifact: com.azure:azure-search-documents:11.8.0-beta.1
