### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.implementation.FactoryImpl"
fullName: "com.azure.resourcemanager.datafactory.implementation.FactoryImpl"
name: "FactoryImpl"
nameWithType: "FactoryImpl"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FactoryImpl implements Factory, Factory.Definition, Factory.Update"
methods:
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.additionalProperties()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.apply()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.apply(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.create()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.create(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.createTime()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.encryption()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.etag()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.getDataPlaneAccess(com.azure.resourcemanager.datafactory.models.UserAccessPolicy)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.getDataPlaneAccessWithResponse(com.azure.resourcemanager.datafactory.models.UserAccessPolicy,com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.getGitHubAccessToken(com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.getGitHubAccessTokenWithResponse(com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest,com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.globalParameters()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.id()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.identity()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.innerModel()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.location()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.name()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.provisioningState()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.publicNetworkAccess()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.refresh()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.refresh(com.azure.core.util.Context)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.region()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.regionName()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.repoConfiguration()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.tags()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.type()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.update()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.version()"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.withEncryption(com.azure.resourcemanager.datafactory.models.EncryptionConfiguration)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.withExistingResourceGroup(java.lang.String)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.withGlobalParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.GlobalParameterSpecification>)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.withIdentity(com.azure.resourcemanager.datafactory.models.FactoryIdentity)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.withIfMatch(java.lang.String)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.withPublicNetworkAccess(com.azure.resourcemanager.datafactory.models.PublicNetworkAccess)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.withRegion(com.azure.core.management.Region)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.withRegion(java.lang.String)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.withRepoConfiguration(com.azure.resourcemanager.datafactory.models.FactoryRepoConfiguration)"
- "com.azure.resourcemanager.datafactory.implementation.FactoryImpl.withTags(java.util.Map<java.lang.String,java.lang.String>)"
type: "class"
implements:
- "<xref href=\"com.azure.resourcemanager.datafactory.models.Factory.Definition?alt=com.azure.resourcemanager.datafactory.models.Factory.Definition&text=Definition\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.Factory.Update?alt=com.azure.resourcemanager.datafactory.models.Factory.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.resourcemanager.datafactory.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.1
