### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.changefeed.Lease
  id: Lease
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed
  children:
  - com.azure.cosmos.implementation.changefeed.Lease.getConcurrencyToken()
  - com.azure.cosmos.implementation.changefeed.Lease.getContinuationToken()
  - com.azure.cosmos.implementation.changefeed.Lease.getId()
  - com.azure.cosmos.implementation.changefeed.Lease.getLeaseToken()
  - com.azure.cosmos.implementation.changefeed.Lease.getOwner()
  - com.azure.cosmos.implementation.changefeed.Lease.getProperties()
  - com.azure.cosmos.implementation.changefeed.Lease.getTimestamp()
  - com.azure.cosmos.implementation.changefeed.Lease.setConcurrencyToken(java.lang.String)
  - com.azure.cosmos.implementation.changefeed.Lease.setContinuationToken(java.lang.String)
  - com.azure.cosmos.implementation.changefeed.Lease.setId(java.lang.String)
  - com.azure.cosmos.implementation.changefeed.Lease.setOwner(java.lang.String)
  - com.azure.cosmos.implementation.changefeed.Lease.setProperties(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.cosmos.implementation.changefeed.Lease.setServiceItemLease(com.azure.cosmos.implementation.changefeed.Lease)
  - com.azure.cosmos.implementation.changefeed.Lease.setTimestamp(java.time.Instant)
  langs:
  - java
  name: Lease
  nameWithType: Lease
  fullName: com.azure.cosmos.implementation.changefeed.Lease
  type: Interface
  package: com.azure.cosmos.implementation.changefeed
  summary: >-
    Represents a lease that is persisted as a document in the lease collection.


    Leases are used to: Keep track of the <xref uid="com.azure.cosmos.ChangeFeedProcessor" data-throw-if-not-resolved="false">ChangeFeedProcessor</xref> progress for a particular Partition Key RANGE. Distribute load between different instances of <xref uid="com.azure.cosmos.ChangeFeedProcessor" data-throw-if-not-resolved="false">ChangeFeedProcessor</xref>. Ensure reliable recovery for cases when an instance of <xref uid="com.azure.cosmos.ChangeFeedProcessor" data-throw-if-not-resolved="false">ChangeFeedProcessor</xref> gets disconnected, hangs or crashes.
  syntax:
    content: public interface Lease
- uid: com.azure.cosmos.implementation.changefeed.Lease.getConcurrencyToken()
  id: getConcurrencyToken()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: getConcurrencyToken()
  nameWithType: Lease.getConcurrencyToken()
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getConcurrencyToken()
  overload: com.azure.cosmos.implementation.changefeed.Lease.getConcurrencyToken*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Gets the concurrency token.
  syntax:
    content: public abstract String getConcurrencyToken()
    return:
      type: java.lang.String
      description: the concurrency token.
- uid: com.azure.cosmos.implementation.changefeed.Lease.getContinuationToken()
  id: getContinuationToken()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: getContinuationToken()
  nameWithType: Lease.getContinuationToken()
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getContinuationToken()
  overload: com.azure.cosmos.implementation.changefeed.Lease.getContinuationToken*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Gets the continuation token used to determine the last processed point of the Change Feed.
  syntax:
    content: public abstract String getContinuationToken()
    return:
      type: java.lang.String
      description: the continuation token used to determine the last processed point of the Change Feed.
- uid: com.azure.cosmos.implementation.changefeed.Lease.getId()
  id: getId()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: getId()
  nameWithType: Lease.getId()
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getId()
  overload: com.azure.cosmos.implementation.changefeed.Lease.getId*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Gets the lease ID.
  syntax:
    content: public abstract String getId()
    return:
      type: java.lang.String
      description: the lease ID.
- uid: com.azure.cosmos.implementation.changefeed.Lease.getLeaseToken()
  id: getLeaseToken()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: getLeaseToken()
  nameWithType: Lease.getLeaseToken()
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getLeaseToken()
  overload: com.azure.cosmos.implementation.changefeed.Lease.getLeaseToken*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Gets the partition associated with the lease.
  syntax:
    content: public abstract String getLeaseToken()
    return:
      type: java.lang.String
      description: the partition associated with the lease.
- uid: com.azure.cosmos.implementation.changefeed.Lease.getOwner()
  id: getOwner()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: getOwner()
  nameWithType: Lease.getOwner()
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getOwner()
  overload: com.azure.cosmos.implementation.changefeed.Lease.getOwner*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: >-
    Gets the host name owner of the lease.


    The Owner keeps track which <xref uid="com.azure.cosmos.ChangeFeedProcessor" data-throw-if-not-resolved="false">ChangeFeedProcessor</xref> is currently processing that Partition Key RANGE.
  syntax:
    content: public abstract String getOwner()
    return:
      type: java.lang.String
      description: the host name owner of the lease.
- uid: com.azure.cosmos.implementation.changefeed.Lease.getProperties()
  id: getProperties()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: getProperties()
  nameWithType: Lease.getProperties()
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getProperties()
  overload: com.azure.cosmos.implementation.changefeed.Lease.getProperties*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Gets the custom lease item which can be managed from <xref uid="com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy" data-throw-if-not-resolved="false">PartitionLoadBalancingStrategy</xref>.
  syntax:
    content: public abstract Map<String,String> getProperties()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the custom lease item.
- uid: com.azure.cosmos.implementation.changefeed.Lease.getTimestamp()
  id: getTimestamp()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: getTimestamp()
  nameWithType: Lease.getTimestamp()
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getTimestamp()
  overload: com.azure.cosmos.implementation.changefeed.Lease.getTimestamp*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Gets the timestamp of the lease.
  syntax:
    content: public abstract String getTimestamp()
    return:
      type: java.lang.String
      description: the timestamp of the lease.
- uid: com.azure.cosmos.implementation.changefeed.Lease.setConcurrencyToken(java.lang.String)
  id: setConcurrencyToken(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: setConcurrencyToken(String concurrencyToken)
  nameWithType: Lease.setConcurrencyToken(String concurrencyToken)
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setConcurrencyToken(String concurrencyToken)
  overload: com.azure.cosmos.implementation.changefeed.Lease.setConcurrencyToken*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Sets the concurrency token.
  syntax:
    content: public abstract void setConcurrencyToken(String concurrencyToken)
    parameters:
    - id: concurrencyToken
      type: java.lang.String
      description: the concurrency token.
- uid: com.azure.cosmos.implementation.changefeed.Lease.setContinuationToken(java.lang.String)
  id: setContinuationToken(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: setContinuationToken(String continuationToken)
  nameWithType: Lease.setContinuationToken(String continuationToken)
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setContinuationToken(String continuationToken)
  overload: com.azure.cosmos.implementation.changefeed.Lease.setContinuationToken*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Sets the continuation token used to determine the last processed point of the Change Feed.
  syntax:
    content: public abstract void setContinuationToken(String continuationToken)
    parameters:
    - id: continuationToken
      type: java.lang.String
      description: the continuation token used to determine the last processed point of the Change Feed.
- uid: com.azure.cosmos.implementation.changefeed.Lease.setId(java.lang.String)
  id: setId(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: setId(String id)
  nameWithType: Lease.setId(String id)
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setId(String id)
  overload: com.azure.cosmos.implementation.changefeed.Lease.setId*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Sets the lease ID.
  syntax:
    content: public abstract void setId(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the lease ID.
- uid: com.azure.cosmos.implementation.changefeed.Lease.setOwner(java.lang.String)
  id: setOwner(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: setOwner(String owner)
  nameWithType: Lease.setOwner(String owner)
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setOwner(String owner)
  overload: com.azure.cosmos.implementation.changefeed.Lease.setOwner*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: >-
    Sets the host name owner of the lease.


    The Owner keeps track which <xref uid="com.azure.cosmos.ChangeFeedProcessor" data-throw-if-not-resolved="false">ChangeFeedProcessor</xref> is currently processing that Partition Key RANGE.
  syntax:
    content: public abstract void setOwner(String owner)
    parameters:
    - id: owner
      type: java.lang.String
      description: the host name owner of the lease.
- uid: com.azure.cosmos.implementation.changefeed.Lease.setProperties(java.util.Map<java.lang.String,java.lang.String>)
  id: setProperties(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: setProperties(Map<String,String> properties)
  nameWithType: Lease.setProperties(Map<String,String> properties)
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setProperties(Map<String,String> properties)
  overload: com.azure.cosmos.implementation.changefeed.Lease.setProperties*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Sets the custom lease item which can be managed from <xref uid="com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy" data-throw-if-not-resolved="false">PartitionLoadBalancingStrategy</xref>.
  syntax:
    content: public abstract void setProperties(Map<String,String> properties)
    parameters:
    - id: properties
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the custom lease item.
- uid: com.azure.cosmos.implementation.changefeed.Lease.setServiceItemLease(com.azure.cosmos.implementation.changefeed.Lease)
  id: setServiceItemLease(com.azure.cosmos.implementation.changefeed.Lease)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: setServiceItemLease(Lease lease)
  nameWithType: Lease.setServiceItemLease(Lease lease)
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setServiceItemLease(Lease lease)
  overload: com.azure.cosmos.implementation.changefeed.Lease.setServiceItemLease*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: Sets the lease properties.
  syntax:
    content: public abstract void setServiceItemLease(Lease lease)
    parameters:
    - id: lease
      type: com.azure.cosmos.implementation.changefeed.Lease
      description: the input representation of a lease document.
- uid: com.azure.cosmos.implementation.changefeed.Lease.setTimestamp(java.time.Instant)
  id: setTimestamp(java.time.Instant)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.changefeed.Lease
  langs:
  - java
  name: setTimestamp(Instant timestamp)
  nameWithType: Lease.setTimestamp(Instant timestamp)
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setTimestamp(Instant timestamp)
  overload: com.azure.cosmos.implementation.changefeed.Lease.setTimestamp*
  type: Method
  package: com.azure.cosmos.implementation.changefeed
  summary: >-
    Sets the timestamp of the lease.


    The timestamp is used to determine lease expiration.
  syntax:
    content: public abstract void setTimestamp(Instant timestamp)
    parameters:
    - id: timestamp
      type: java.time.Instant
      description: the timestamp of the lease.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.changefeed.Lease.getLeaseToken*
  name: getLeaseToken
  nameWithType: Lease.getLeaseToken
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getLeaseToken
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.Lease.getOwner*
  name: getOwner
  nameWithType: Lease.getOwner
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getOwner
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.Lease.getTimestamp*
  name: getTimestamp
  nameWithType: Lease.getTimestamp
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getTimestamp
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.Lease.getContinuationToken*
  name: getContinuationToken
  nameWithType: Lease.getContinuationToken
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getContinuationToken
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.Lease.setContinuationToken*
  name: setContinuationToken
  nameWithType: Lease.setContinuationToken
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setContinuationToken
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.Lease.getId*
  name: getId
  nameWithType: Lease.getId
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getId
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.Lease.getConcurrencyToken*
  name: getConcurrencyToken
  nameWithType: Lease.getConcurrencyToken
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getConcurrencyToken
  package: com.azure.cosmos.implementation.changefeed
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.changefeed.Lease.getProperties*
  name: getProperties
  nameWithType: Lease.getProperties
  fullName: com.azure.cosmos.implementation.changefeed.Lease.getProperties
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.Lease.setOwner*
  name: setOwner
  nameWithType: Lease.setOwner
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setOwner
  package: com.azure.cosmos.implementation.changefeed
- uid: java.time.Instant
  spec.java:
  - uid: java.time.Instant
    name: Instant
    fullName: java.time.Instant
- uid: com.azure.cosmos.implementation.changefeed.Lease.setTimestamp*
  name: setTimestamp
  nameWithType: Lease.setTimestamp
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setTimestamp
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.Lease.setId*
  name: setId
  nameWithType: Lease.setId
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setId
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.Lease.setConcurrencyToken*
  name: setConcurrencyToken
  nameWithType: Lease.setConcurrencyToken
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setConcurrencyToken
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.Lease.setProperties*
  name: setProperties
  nameWithType: Lease.setProperties
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setProperties
  package: com.azure.cosmos.implementation.changefeed
- uid: com.azure.cosmos.implementation.changefeed.Lease.setServiceItemLease*
  name: setServiceItemLease
  nameWithType: Lease.setServiceItemLease
  fullName: com.azure.cosmos.implementation.changefeed.Lease.setServiceItemLease
  package: com.azure.cosmos.implementation.changefeed
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
