### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient"
fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient"
name: "NotebookAsyncClient"
nameWithType: "NotebookAsyncClient"
summary: "Initializes a new instance of the asynchronous Artifacts<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class NotebookAsyncClient"
methods:
- uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.createOrUpdateNotebook(java.lang.String,com.azure.analytics.synapse.artifacts.models.NotebookResource)"
  fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.createOrUpdateNotebook(String notebookName, NotebookResource notebook)"
  name: "createOrUpdateNotebook(String notebookName, NotebookResource notebook)"
  nameWithType: "NotebookAsyncClient.createOrUpdateNotebook(String notebookName, NotebookResource notebook)"
  summary: "Creates or updates a Note Book."
  parameters:
  - description: "The notebook name."
    name: "notebookName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Note book resource definition."
    name: "notebook"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookResource?alt=com.azure.analytics.synapse.artifacts.models.NotebookResource&text=NotebookResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<NotebookResource> createOrUpdateNotebook(String notebookName, NotebookResource notebook)"
  desc: "Creates or updates a Note Book."
  returns:
    description: "notebook resource type on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookResource?alt=com.azure.analytics.synapse.artifacts.models.NotebookResource&text=NotebookResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.createOrUpdateNotebook(java.lang.String,com.azure.analytics.synapse.artifacts.models.NotebookResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.createOrUpdateNotebook(String notebookName, NotebookResource notebook, String ifMatch)"
  name: "createOrUpdateNotebook(String notebookName, NotebookResource notebook, String ifMatch)"
  nameWithType: "NotebookAsyncClient.createOrUpdateNotebook(String notebookName, NotebookResource notebook, String ifMatch)"
  summary: "Creates or updates a Note Book."
  parameters:
  - description: "The notebook name."
    name: "notebookName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Note book resource definition."
    name: "notebook"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookResource?alt=com.azure.analytics.synapse.artifacts.models.NotebookResource&text=NotebookResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Note book entity. Should only be specified for update, for which it should match\n     existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<NotebookResource> createOrUpdateNotebook(String notebookName, NotebookResource notebook, String ifMatch)"
  desc: "Creates or updates a Note Book."
  returns:
    description: "notebook resource type on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookResource?alt=com.azure.analytics.synapse.artifacts.models.NotebookResource&text=NotebookResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.createOrUpdateNotebookWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.NotebookResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.createOrUpdateNotebookWithResponse(String notebookName, NotebookResource notebook, String ifMatch)"
  name: "createOrUpdateNotebookWithResponse(String notebookName, NotebookResource notebook, String ifMatch)"
  nameWithType: "NotebookAsyncClient.createOrUpdateNotebookWithResponse(String notebookName, NotebookResource notebook, String ifMatch)"
  summary: "Creates or updates a Note Book."
  parameters:
  - description: "The notebook name."
    name: "notebookName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Note book resource definition."
    name: "notebook"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookResource?alt=com.azure.analytics.synapse.artifacts.models.NotebookResource&text=NotebookResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Note book entity. Should only be specified for update, for which it should match\n     existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<NotebookResource>> createOrUpdateNotebookWithResponse(String notebookName, NotebookResource notebook, String ifMatch)"
  desc: "Creates or updates a Note Book."
  returns:
    description: "notebook resource type along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookResource?alt=com.azure.analytics.synapse.artifacts.models.NotebookResource&text=NotebookResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.deleteNotebook(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.deleteNotebook(String notebookName)"
  name: "deleteNotebook(String notebookName)"
  nameWithType: "NotebookAsyncClient.deleteNotebook(String notebookName)"
  summary: "Deletes a Note book."
  parameters:
  - description: "The notebook name."
    name: "notebookName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> deleteNotebook(String notebookName)"
  desc: "Deletes a Note book."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.deleteNotebookWithResponse(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.deleteNotebookWithResponse(String notebookName)"
  name: "deleteNotebookWithResponse(String notebookName)"
  nameWithType: "NotebookAsyncClient.deleteNotebookWithResponse(String notebookName)"
  summary: "Deletes a Note book."
  parameters:
  - description: "The notebook name."
    name: "notebookName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteNotebookWithResponse(String notebookName)"
  desc: "Deletes a Note book."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.getNotebook(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.getNotebook(String notebookName)"
  name: "getNotebook(String notebookName)"
  nameWithType: "NotebookAsyncClient.getNotebook(String notebookName)"
  summary: "Gets a Note Book."
  parameters:
  - description: "The notebook name."
    name: "notebookName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<NotebookResource> getNotebook(String notebookName)"
  desc: "Gets a Note Book."
  returns:
    description: "a Note Book on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookResource?alt=com.azure.analytics.synapse.artifacts.models.NotebookResource&text=NotebookResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.getNotebook(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.getNotebook(String notebookName, String ifNoneMatch)"
  name: "getNotebook(String notebookName, String ifNoneMatch)"
  nameWithType: "NotebookAsyncClient.getNotebook(String notebookName, String ifNoneMatch)"
  summary: "Gets a Note Book."
  parameters:
  - description: "The notebook name."
    name: "notebookName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Notebook entity. Should only be specified for get. If the ETag matches the\n     existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<NotebookResource> getNotebook(String notebookName, String ifNoneMatch)"
  desc: "Gets a Note Book."
  returns:
    description: "a Note Book on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookResource?alt=com.azure.analytics.synapse.artifacts.models.NotebookResource&text=NotebookResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.getNotebookSummaryByWorkSpace()"
  fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.getNotebookSummaryByWorkSpace()"
  name: "getNotebookSummaryByWorkSpace()"
  nameWithType: "NotebookAsyncClient.getNotebookSummaryByWorkSpace()"
  summary: "Lists a summary of Notebooks."
  syntax: "public PagedFlux<NotebookResource> getNotebookSummaryByWorkSpace()"
  desc: "Lists a summary of Notebooks."
  returns:
    description: "a list of Notebook resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookResource?alt=com.azure.analytics.synapse.artifacts.models.NotebookResource&text=NotebookResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.getNotebookWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.getNotebookWithResponse(String notebookName, String ifNoneMatch)"
  name: "getNotebookWithResponse(String notebookName, String ifNoneMatch)"
  nameWithType: "NotebookAsyncClient.getNotebookWithResponse(String notebookName, String ifNoneMatch)"
  summary: "Gets a Note Book."
  parameters:
  - description: "The notebook name."
    name: "notebookName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Notebook entity. Should only be specified for get. If the ETag matches the\n     existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<NotebookResource>> getNotebookWithResponse(String notebookName, String ifNoneMatch)"
  desc: "Gets a Note Book."
  returns:
    description: "a Note Book along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookResource?alt=com.azure.analytics.synapse.artifacts.models.NotebookResource&text=NotebookResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.getNotebooksByWorkspace()"
  fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.getNotebooksByWorkspace()"
  name: "getNotebooksByWorkspace()"
  nameWithType: "NotebookAsyncClient.getNotebooksByWorkspace()"
  summary: "Lists Notebooks."
  syntax: "public PagedFlux<NotebookResource> getNotebooksByWorkspace()"
  desc: "Lists Notebooks."
  returns:
    description: "a list of Notebook resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.NotebookResource?alt=com.azure.analytics.synapse.artifacts.models.NotebookResource&text=NotebookResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.renameNotebook(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.renameNotebook(String notebookName, ArtifactRenameRequest request)"
  name: "renameNotebook(String notebookName, ArtifactRenameRequest request)"
  nameWithType: "NotebookAsyncClient.renameNotebook(String notebookName, ArtifactRenameRequest request)"
  summary: "Renames a notebook."
  parameters:
  - description: "The notebook name."
    name: "notebookName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> renameNotebook(String notebookName, ArtifactRenameRequest request)"
  desc: "Renames a notebook."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.renameNotebookWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.NotebookAsyncClient.renameNotebookWithResponse(String notebookName, ArtifactRenameRequest request)"
  name: "renameNotebookWithResponse(String notebookName, ArtifactRenameRequest request)"
  nameWithType: "NotebookAsyncClient.renameNotebookWithResponse(String notebookName, ArtifactRenameRequest request)"
  summary: "Renames a notebook."
  parameters:
  - description: "The notebook name."
    name: "notebookName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> renameNotebookWithResponse(String notebookName, ArtifactRenameRequest request)"
  desc: "Renames a notebook."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ArtifactsClient type."
metadata: {}
package: "com.azure.analytics.synapse.artifacts"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
