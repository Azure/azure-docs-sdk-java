### YamlMime:JavaType
uid: "com.azure.core.tracing.opentelemetry.OpenTelemetryHttpPolicy"
fullName: "com.azure.core.tracing.opentelemetry.OpenTelemetryHttpPolicy"
name: "OpenTelemetryHttpPolicy"
nameWithType: "OpenTelemetryHttpPolicy"
summary: "Pipeline policy that creates an Open<wbr>Telemetry span which traces the service request."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **OpenTelemetryHttpPolicy**</br> implements <xref href=\"com.azure.core.http.policy.AfterRetryPolicyProvider?alt=com.azure.core.http.policy.AfterRetryPolicyProvider&text=AfterRetryPolicyProvider\" data-throw-if-not-resolved=\"False\" />, <xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.core.tracing.opentelemetry.OpenTelemetryHttpPolicy.OpenTelemetryHttpPolicy()"
  fullName: "com.azure.core.tracing.opentelemetry.OpenTelemetryHttpPolicy.OpenTelemetryHttpPolicy()"
  name: "OpenTelemetryHttpPolicy()"
  nameWithType: "OpenTelemetryHttpPolicy.OpenTelemetryHttpPolicy()"
  summary: "Creates new Open<wbr>Telemetry <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipelinePolicy\"></xref> with default <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"global tracer\"></xref>"
  syntax: "public OpenTelemetryHttpPolicy()"
  desc: "Creates new OpenTelemetry <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipelinePolicy\"></xref> with default <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"global tracer\"></xref>"
methods:
- uid: "com.azure.core.tracing.opentelemetry.OpenTelemetryHttpPolicy.create()"
  fullName: "com.azure.core.tracing.opentelemetry.OpenTelemetryHttpPolicy.create()"
  name: "create()"
  nameWithType: "OpenTelemetryHttpPolicy.create()"
  syntax: "public HttpPipelinePolicy create()"
  returns:
    description: "a OpenTelemetry HTTP policy."
    type: "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.tracing.opentelemetry.OpenTelemetryHttpPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  fullName: "com.azure.core.tracing.opentelemetry.OpenTelemetryHttpPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  name: "process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  nameWithType: "OpenTelemetryHttpPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "next"
    type: "<xref href=\"com.azure.core.http.HttpPipelineNextPolicy?alt=com.azure.core.http.HttpPipelineNextPolicy&text=HttpPipelineNextPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  returns:
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Pipeline policy that creates an OpenTelemetry span which traces the service request."
implements:
- "<xref href=\"com.azure.core.http.policy.AfterRetryPolicyProvider?alt=com.azure.core.http.policy.AfterRetryPolicyProvider&text=AfterRetryPolicyProvider\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.tracing.opentelemetry"
artifact: com.azure:azure-core-tracing-opentelemetry:1.0.0-beta.30
