### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloat*"
fullName: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloat"
name: "_startFloat"
nameWithType: "NonBlockingJsonParser._startFloat"
members:
- uid: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloat(char[],int,int)"
  fullName: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParser._startFloat(char[] outBuf, int outPtr, int ch)"
  name: "_startFloat(char[] outBuf, int outPtr, int ch)"
  nameWithType: "NonBlockingJsonParser._startFloat(char[] outBuf, int outPtr, int ch)"
  parameters:
  - name: "outBuf"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "outPtr"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - name: "ch"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected JsonToken _startFloat(char[] outBuf, int outPtr, int ch)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.JsonToken?alt=com.fasterxml.jackson.core.JsonToken&text=JsonToken\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json.async"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
