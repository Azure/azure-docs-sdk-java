### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty"
fullName: "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty"
name: "BasicCosmosPersistentProperty"
nameWithType: "BasicCosmosPersistentProperty"
summary: "Special <xref uid=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPersistentProperty\"></xref> that takes annotations at a property into account."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.mapping.model.AbstractPersistentProperty\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.mapping.model.AnnotationBasedPersistentProperty\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.createAssociation()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.equals(java.lang.Object)"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getActualType()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getAssociation()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getComponentType()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getField()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getGetter()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getMapValueType()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getName()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getOwner()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getPersistentEntityTypes()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getProperty()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getRawType()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getSetter()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getType()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getTypeInformation()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.getWither()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.hashCode()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.isArray()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.isCollectionLike()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.isEntity()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.isImmutable()"
- "org.springframework.data.mapping.model.AbstractPersistentProperty.isMap()"
- "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.<A>findAnnotation(java.lang.Class<A>)"
- "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.<A>findPropertyOrOwnerAnnotation(java.lang.Class<A>)"
- "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.getAssociationTargetType()"
- "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.getSpelExpression()"
- "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAnnotationPresent(java.lang.Class<? extends java.lang.annotation.Annotation>)"
- "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isAssociation()"
- "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isIdProperty()"
- "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isTransient()"
- "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isVersionProperty()"
- "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.isWritable()"
- "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.toString()"
- "org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.usePropertyAccess()"
syntax: "public class BasicCosmosPersistentProperty extends AnnotationBasedPersistentProperty<CosmosPersistentProperty> implements CosmosPersistentProperty"
constructors:
- "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.BasicCosmosPersistentProperty(org.springframework.data.mapping.model.Property,com.azure.spring.data.cosmos.core.mapping.CosmosPersistentEntity<?>,org.springframework.data.mapping.model.SimpleTypeHolder)"
methods:
- "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.createAssociation()"
- "com.azure.spring.data.cosmos.core.mapping.BasicCosmosPersistentProperty.isIdProperty()"
type: "class"
implements:
- "<xref href=\"com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty?alt=com.azure.spring.data.cosmos.core.mapping.CosmosPersistentProperty&text=CosmosPersistentProperty\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.spring.data.cosmos.core.mapping"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
