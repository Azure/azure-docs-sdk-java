### YamlMime:ManagedReference
items:
- uid: org.apache.commons.codec.Charsets
  id: Charsets
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec
  children:
  - org.apache.commons.codec.Charsets.Charsets()
  - org.apache.commons.codec.Charsets.ISO_8859_1
  - org.apache.commons.codec.Charsets.US_ASCII
  - org.apache.commons.codec.Charsets.UTF_16
  - org.apache.commons.codec.Charsets.UTF_16BE
  - org.apache.commons.codec.Charsets.UTF_16LE
  - org.apache.commons.codec.Charsets.UTF_8
  - org.apache.commons.codec.Charsets.toCharset(java.lang.String)
  - org.apache.commons.codec.Charsets.toCharset(java.nio.charset.Charset)
  langs:
  - java
  name: Charsets
  nameWithType: Charsets
  fullName: org.apache.commons.codec.Charsets
  type: Class
  package: org.apache.commons.codec
  summary: "Charsets required of every implementation of the Java platform. From the Java documentation [Standard charsets][]:\n\nEvery implementation of the Java platform is required to support the following character encodings. Consult the release documentation for your implementation to see if any other encodings are supported. Consult the release documentation for your implementation to see if any other encodings are supported. \n\n *  `US-ASCII`\n    \n    Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the Unicode character set.\n *  `ISO-8859-1`\n    \n    ISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.\n *  `UTF-8`\n    \n    Eight-bit Unicode Transformation Format.\n *  `UTF-16BE`\n    \n    Sixteen-bit Unicode Transformation Format, big-endian byte order.\n *  `UTF-16LE`\n    \n    Sixteen-bit Unicode Transformation Format, little-endian byte order.\n *  `UTF-16`\n    \n    Sixteen-bit Unicode Transformation Format, byte order specified by a mandatory initial byte-order mark (either order accepted on input, big-endian used on output.)\n\nThis perhaps would best belong in the Commons Lang project. Even if a similar class is defined in Commons Lang, it is not foreseen that Commons Codec would be made to depend on Commons Lang.\n\nThis class is immutable and thread-safe.\n\n\n[Standard charsets]: http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html"
  syntax:
    content: public class Charsets
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.commons.codec.Charsets.Charsets()
  id: Charsets()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.Charsets
  langs:
  - java
  name: Charsets()
  nameWithType: Charsets.Charsets()
  fullName: org.apache.commons.codec.Charsets.Charsets()
  overload: org.apache.commons.codec.Charsets.Charsets*
  type: Constructor
  package: org.apache.commons.codec
  syntax:
    content: public Charsets()
- uid: org.apache.commons.codec.Charsets.ISO_8859_1
  id: ISO_8859_1
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.Charsets
  langs:
  - java
  name: ISO_8859_1
  nameWithType: Charsets.ISO_8859_1
  fullName: org.apache.commons.codec.Charsets.ISO_8859_1
  type: Field
  package: org.apache.commons.codec
  summary: >-
    CharEncodingISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1.


    Every implementation of the Java platform is required to support this character encoding.


    On Java 7 or later, use <xref uid="" data-throw-if-not-resolved="false">java.nio.charset.StandardCharsets#ISO_8859_1</xref> instead.
  syntax:
    content: public static final Charset ISO_8859_1
    return:
      type: java.nio.charset.Charset
- uid: org.apache.commons.codec.Charsets.US_ASCII
  id: US_ASCII
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.Charsets
  langs:
  - java
  name: US_ASCII
  nameWithType: Charsets.US_ASCII
  fullName: org.apache.commons.codec.Charsets.US_ASCII
  type: Field
  package: org.apache.commons.codec
  summary: >-
    Seven-bit ASCII, also known as ISO646-US, also known as the Basic Latin block of the Unicode character set.


    Every implementation of the Java platform is required to support this character encoding.


    On Java 7 or later, use <xref uid="" data-throw-if-not-resolved="false">java.nio.charset.StandardCharsets#ISO_8859_1</xref> instead.
  syntax:
    content: public static final Charset US_ASCII
    return:
      type: java.nio.charset.Charset
- uid: org.apache.commons.codec.Charsets.UTF_16
  id: UTF_16
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.Charsets
  langs:
  - java
  name: UTF_16
  nameWithType: Charsets.UTF_16
  fullName: org.apache.commons.codec.Charsets.UTF_16
  type: Field
  package: org.apache.commons.codec
  summary: >-
    Sixteen-bit Unicode Transformation Format, The byte order specified by a mandatory initial byte-order mark (either order accepted on input, big-endian used on output)


    Every implementation of the Java platform is required to support this character encoding.


    On Java 7 or later, use <xref uid="" data-throw-if-not-resolved="false">java.nio.charset.StandardCharsets#ISO_8859_1</xref> instead.
  syntax:
    content: public static final Charset UTF_16
    return:
      type: java.nio.charset.Charset
- uid: org.apache.commons.codec.Charsets.UTF_16BE
  id: UTF_16BE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.Charsets
  langs:
  - java
  name: UTF_16BE
  nameWithType: Charsets.UTF_16BE
  fullName: org.apache.commons.codec.Charsets.UTF_16BE
  type: Field
  package: org.apache.commons.codec
  summary: >-
    Sixteen-bit Unicode Transformation Format, big-endian byte order.


    Every implementation of the Java platform is required to support this character encoding.


    On Java 7 or later, use <xref uid="" data-throw-if-not-resolved="false">java.nio.charset.StandardCharsets#ISO_8859_1</xref> instead.
  syntax:
    content: public static final Charset UTF_16BE
    return:
      type: java.nio.charset.Charset
- uid: org.apache.commons.codec.Charsets.UTF_16LE
  id: UTF_16LE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.Charsets
  langs:
  - java
  name: UTF_16LE
  nameWithType: Charsets.UTF_16LE
  fullName: org.apache.commons.codec.Charsets.UTF_16LE
  type: Field
  package: org.apache.commons.codec
  summary: >-
    Sixteen-bit Unicode Transformation Format, little-endian byte order.


    Every implementation of the Java platform is required to support this character encoding.


    On Java 7 or later, use <xref uid="" data-throw-if-not-resolved="false">java.nio.charset.StandardCharsets#ISO_8859_1</xref> instead.
  syntax:
    content: public static final Charset UTF_16LE
    return:
      type: java.nio.charset.Charset
- uid: org.apache.commons.codec.Charsets.UTF_8
  id: UTF_8
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.Charsets
  langs:
  - java
  name: UTF_8
  nameWithType: Charsets.UTF_8
  fullName: org.apache.commons.codec.Charsets.UTF_8
  type: Field
  package: org.apache.commons.codec
  summary: >-
    Eight-bit Unicode Transformation Format.


    Every implementation of the Java platform is required to support this character encoding.


    On Java 7 or later, use <xref uid="" data-throw-if-not-resolved="false">java.nio.charset.StandardCharsets#ISO_8859_1</xref> instead.
  syntax:
    content: public static final Charset UTF_8
    return:
      type: java.nio.charset.Charset
- uid: org.apache.commons.codec.Charsets.toCharset(java.lang.String)
  id: toCharset(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.Charsets
  langs:
  - java
  name: toCharset(String charset)
  nameWithType: Charsets.toCharset(String charset)
  fullName: org.apache.commons.codec.Charsets.toCharset(String charset)
  overload: org.apache.commons.codec.Charsets.toCharset*
  type: Method
  package: org.apache.commons.codec
  summary: Returns a Charset for the named charset. If the name is null, return the default Charset.
  syntax:
    content: public static Charset toCharset(String charset)
    parameters:
    - id: charset
      type: java.lang.String
      description: The name of the requested charset, may be null.
    return:
      type: java.nio.charset.Charset
      description: a Charset for the named charset
- uid: org.apache.commons.codec.Charsets.toCharset(java.nio.charset.Charset)
  id: toCharset(java.nio.charset.Charset)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.Charsets
  langs:
  - java
  name: toCharset(Charset charset)
  nameWithType: Charsets.toCharset(Charset charset)
  fullName: org.apache.commons.codec.Charsets.toCharset(Charset charset)
  overload: org.apache.commons.codec.Charsets.toCharset*
  type: Method
  package: org.apache.commons.codec
  summary: Returns the given Charset or the default Charset if the given Charset is null.
  syntax:
    content: public static Charset toCharset(Charset charset)
    parameters:
    - id: charset
      type: java.nio.charset.Charset
      description: A charset or null.
    return:
      type: java.nio.charset.Charset
      description: the given Charset or the default Charset if the given Charset is null
references:
- uid: org.apache.commons.codec.Charsets.Charsets*
  name: Charsets
  nameWithType: Charsets.Charsets
  fullName: org.apache.commons.codec.Charsets.Charsets
  package: org.apache.commons.codec
- uid: java.nio.charset.Charset
  spec.java:
  - uid: java.nio.charset.Charset
    name: Charset
    fullName: java.nio.charset.Charset
- uid: org.apache.commons.codec.Charsets.toCharset*
  name: toCharset
  nameWithType: Charsets.toCharset
  fullName: org.apache.commons.codec.Charsets.toCharset
  package: org.apache.commons.codec
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
