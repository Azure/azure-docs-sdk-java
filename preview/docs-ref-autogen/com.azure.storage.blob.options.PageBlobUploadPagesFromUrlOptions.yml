### YamlMime:JavaType
uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions"
fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions"
name: "PageBlobUploadPagesFromUrlOptions"
nameWithType: "PageBlobUploadPagesFromUrlOptions"
summary: "Extended options that may be passed when uploading a page range from a source URL."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PageBlobUploadPagesFromUrlOptions"
constructors:
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.PageBlobUploadPagesFromUrlOptions(com.azure.storage.blob.models.PageRange,java.lang.String)"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.PageBlobUploadPagesFromUrlOptions(PageRange range, String sourceUrl)"
  name: "PageBlobUploadPagesFromUrlOptions(PageRange range, String sourceUrl)"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.PageBlobUploadPagesFromUrlOptions(PageRange range, String sourceUrl)"
  parameters:
  - description: "The destination page range. Pages must be aligned to 512 byte blocks."
    name: "range"
    type: "<xref href=\"com.azure.storage.blob.models.PageRange?alt=com.azure.storage.blob.models.PageRange&text=PageRange\" data-throw-if-not-resolved=\"False\" />"
  - description: "The source URL to copy from. URLs outside of Azure may only be copied to block blobs."
    name: "sourceUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PageBlobUploadPagesFromUrlOptions(PageRange range, String sourceUrl)"
methods:
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getDestinationRequestConditions()"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getDestinationRequestConditions()"
  name: "getDestinationRequestConditions()"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.getDestinationRequestConditions()"
  syntax: "public PageBlobRequestConditions getDestinationRequestConditions()"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.PageBlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobRequestConditions\"></xref> for writing to destination."
    type: "<xref href=\"com.azure.storage.blob.models.PageBlobRequestConditions?alt=com.azure.storage.blob.models.PageBlobRequestConditions&text=PageBlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getRange()"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getRange()"
  name: "getRange()"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.getRange()"
  syntax: "public PageRange getRange()"
  returns:
    description: "The destination page range."
    type: "<xref href=\"com.azure.storage.blob.models.PageRange?alt=com.azure.storage.blob.models.PageRange&text=PageRange\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getSourceAuthorization()"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getSourceAuthorization()"
  name: "getSourceAuthorization()"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.getSourceAuthorization()"
  syntax: "public HttpAuthorization getSourceAuthorization()"
  returns:
    description: "auth header for accessing source content."
    type: "<xref href=\"com.azure.core.http.HttpAuthorization?alt=com.azure.core.http.HttpAuthorization&text=HttpAuthorization\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getSourceContentMd5()"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getSourceContentMd5()"
  name: "getSourceContentMd5()"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.getSourceContentMd5()"
  syntax: "public byte[] getSourceContentMd5()"
  returns:
    description: "Content MD5 of source content to copy."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getSourceOffset()"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getSourceOffset()"
  name: "getSourceOffset()"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.getSourceOffset()"
  syntax: "public Long getSourceOffset()"
  returns:
    description: "Offset at source to copy from."
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getSourceRequestConditions()"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getSourceRequestConditions()"
  name: "getSourceRequestConditions()"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.getSourceRequestConditions()"
  syntax: "public BlobRequestConditions getSourceRequestConditions()"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref> for accessing source content."
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getSourceUrl()"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.getSourceUrl()"
  name: "getSourceUrl()"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.getSourceUrl()"
  syntax: "public String getSourceUrl()"
  returns:
    description: "the source URL to copy from."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.setDestinationRequestConditions(com.azure.storage.blob.models.PageBlobRequestConditions)"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.setDestinationRequestConditions(PageBlobRequestConditions destinationRequestConditions)"
  name: "setDestinationRequestConditions(PageBlobRequestConditions destinationRequestConditions)"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.setDestinationRequestConditions(PageBlobRequestConditions destinationRequestConditions)"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.PageBlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PageBlobRequestConditions\"></xref> for writing to destination."
    name: "destinationRequestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.PageBlobRequestConditions?alt=com.azure.storage.blob.models.PageBlobRequestConditions&text=PageBlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PageBlobUploadPagesFromUrlOptions setDestinationRequestConditions(PageBlobRequestConditions destinationRequestConditions)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions?alt=com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions&text=PageBlobUploadPagesFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.setSourceAuthorization(com.azure.core.http.HttpAuthorization)"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.setSourceAuthorization(HttpAuthorization sourceAuthorization)"
  name: "setSourceAuthorization(HttpAuthorization sourceAuthorization)"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.setSourceAuthorization(HttpAuthorization sourceAuthorization)"
  summary: "Sets \"Authorization\" header for accessing source URL."
  parameters:
  - description: "auth header for accessing source content."
    name: "sourceAuthorization"
    type: "<xref href=\"com.azure.core.http.HttpAuthorization?alt=com.azure.core.http.HttpAuthorization&text=HttpAuthorization\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PageBlobUploadPagesFromUrlOptions setSourceAuthorization(HttpAuthorization sourceAuthorization)"
  desc: "Sets \"Authorization\" header for accessing source URL. Currently only \"Bearer\" authentication is accepted by Storage."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions?alt=com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions&text=PageBlobUploadPagesFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.setSourceContentMd5(byte[])"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.setSourceContentMd5(byte[] sourceContentMd5)"
  name: "setSourceContentMd5(byte[] sourceContentMd5)"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.setSourceContentMd5(byte[] sourceContentMd5)"
  parameters:
  - description: "Content MD5 of source content to copy."
    name: "sourceContentMd5"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public PageBlobUploadPagesFromUrlOptions setSourceContentMd5(byte[] sourceContentMd5)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions?alt=com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions&text=PageBlobUploadPagesFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.setSourceOffset(java.lang.Long)"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.setSourceOffset(Long sourceOffset)"
  name: "setSourceOffset(Long sourceOffset)"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.setSourceOffset(Long sourceOffset)"
  parameters:
  - description: "Offset at source to copy from."
    name: "sourceOffset"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PageBlobUploadPagesFromUrlOptions setSourceOffset(Long sourceOffset)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions?alt=com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions&text=PageBlobUploadPagesFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.setSourceRequestConditions(com.azure.storage.blob.models.BlobRequestConditions)"
  fullName: "com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions.setSourceRequestConditions(BlobRequestConditions sourceRequestConditions)"
  name: "setSourceRequestConditions(BlobRequestConditions sourceRequestConditions)"
  nameWithType: "PageBlobUploadPagesFromUrlOptions.setSourceRequestConditions(BlobRequestConditions sourceRequestConditions)"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref> for accessing source content."
    name: "sourceRequestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PageBlobUploadPagesFromUrlOptions setSourceRequestConditions(BlobRequestConditions sourceRequestConditions)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions?alt=com.azure.storage.blob.options.PageBlobUploadPagesFromUrlOptions&text=PageBlobUploadPagesFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Extended options that may be passed when uploading a page range from a source URL."
metadata: {}
package: "com.azure.storage.blob.options"
artifact: com.azure:azure-storage-blob:12.18.0-beta.1
