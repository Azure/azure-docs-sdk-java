### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Maps.newLinkedHashMap*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Maps.<K,V>newLinkedHashMap"
name: "<K,V>newLinkedHashMap"
nameWithType: "Maps.<K,V>newLinkedHashMap"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Maps.<K,V>newLinkedHashMap()"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Maps.<K,V>newLinkedHashMap()"
  name: "<K,V>newLinkedHashMap()"
  nameWithType: "Maps.<K,V>newLinkedHashMap()"
  summary: "Creates a *mutable*, empty, insertion-ordered `LinkedHashMap` instance.\n\n**Note:** if mutability is not required, use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableMap.&lt;K,V&gt;of()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ImmutableMap#of()\"></xref> instead.\n\n**Note for Java 7 and later:** this method is now unnecessary and should be treated as deprecated. Instead, use the `LinkedHashMap` constructor directly, taking advantage of the new [\"diamond\" syntax][diamond_ syntax].\n\n\n[diamond_ syntax]: http://goo.gl/iz2Wi"
  syntax: "public static LinkedHashMap<K,V> <K,V>newLinkedHashMap()"
  returns:
    description: "a new, empty <code>LinkedHashMap</code>"
    type: "<xref href=\"java.util.LinkedHashMap?alt=java.util.LinkedHashMap&text=LinkedHashMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.Maps.<K,V>newLinkedHashMap(java.util.Map<? extends K,? extends V>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Maps.<K,V>newLinkedHashMap(Map<? extends K,? extends V> map)"
  name: "<K,V>newLinkedHashMap(Map<? extends K,? extends V> map)"
  nameWithType: "Maps.<K,V>newLinkedHashMap(Map<? extends K,? extends V> map)"
  summary: "Creates a *mutable*, insertion-ordered `LinkedHashMap` instance with the same mappings as the specified map.\n\n**Note:** if mutability is not required, use <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ImmutableMap.&lt;K,V&gt;copyOf(java.util.Map&lt;? extends K,? extends V&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ImmutableMap#copyOf(Map)\"></xref> instead.\n\n**Note for Java 7 and later:** this method is now unnecessary and should be treated as deprecated. Instead, use the `LinkedHashMap` constructor directly, taking advantage of the new [\"diamond\" syntax][diamond_ syntax].\n\n\n[diamond_ syntax]: http://goo.gl/iz2Wi"
  parameters:
  - description: "the mappings to be placed in the new map"
    name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? extends K?alt=? extends K&text=? extends K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"? extends V?alt=? extends V&text=? extends V\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static LinkedHashMap<K,V> <K,V>newLinkedHashMap(Map<? extends K,? extends V> map)"
  returns:
    description: "a new, <code>LinkedHashMap</code> initialized with the mappings from <code>map</code>"
    type: "<xref href=\"java.util.LinkedHashMap?alt=java.util.LinkedHashMap&text=LinkedHashMap\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />,<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
