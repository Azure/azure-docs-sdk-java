### YamlMime:JavaType
uid: "com.azure.maps.weather.models.WeatherValueYearMaxMinAvg"
fullName: "com.azure.maps.weather.models.WeatherValueYearMaxMinAvg"
name: "WeatherValueYearMaxMinAvg"
nameWithType: "WeatherValueYearMaxMinAvg"
summary: "Returned temperature values."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **WeatherValueYearMaxMinAvg**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.models.WeatherValueYearMaxMinAvg?alt=com.azure.maps.weather.models.WeatherValueYearMaxMinAvg&text=WeatherValueYearMaxMinAvg\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.maps.weather.models.WeatherValueYearMaxMinAvg.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.maps.weather.models.WeatherValueYearMaxMinAvg.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "WeatherValueYearMaxMinAvg.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Weather<wbr>Value<wbr>Year<wbr>Max<wbr>Min<wbr>Avg from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static WeatherValueYearMaxMinAvg fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the WeatherValueYearMaxMinAvg."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of WeatherValueYearMaxMinAvg from the JsonReader."
  returns:
    description: "An instance of WeatherValueYearMaxMinAvg if the JsonReader was pointing to an instance of it, or null if\n it was pointing to JSON null."
    type: "<xref href=\"com.azure.maps.weather.models.WeatherValueYearMaxMinAvg?alt=com.azure.maps.weather.models.WeatherValueYearMaxMinAvg&text=WeatherValueYearMaxMinAvg\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.WeatherValueYearMaxMinAvg.getAverage()"
  fullName: "com.azure.maps.weather.models.WeatherValueYearMaxMinAvg.getAverage()"
  name: "getAverage()"
  nameWithType: "WeatherValueYearMaxMinAvg.getAverage()"
  summary: "Get the average property: Average temperature for the time period."
  syntax: "public WeatherUnitDetails getAverage()"
  desc: "Get the average property: Average temperature for the time period."
  returns:
    description: "the average value."
    type: "<xref href=\"com.azure.maps.weather.models.WeatherUnitDetails?alt=com.azure.maps.weather.models.WeatherUnitDetails&text=WeatherUnitDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.WeatherValueYearMaxMinAvg.getMaximum()"
  fullName: "com.azure.maps.weather.models.WeatherValueYearMaxMinAvg.getMaximum()"
  name: "getMaximum()"
  nameWithType: "WeatherValueYearMaxMinAvg.getMaximum()"
  summary: "Get the maximum property: Maximum temperature for the time period."
  syntax: "public WeatherValueYear getMaximum()"
  desc: "Get the maximum property: Maximum temperature for the time period."
  returns:
    description: "the maximum value."
    type: "<xref href=\"com.azure.maps.weather.models.WeatherValueYear?alt=com.azure.maps.weather.models.WeatherValueYear&text=WeatherValueYear\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.WeatherValueYearMaxMinAvg.getMinimum()"
  fullName: "com.azure.maps.weather.models.WeatherValueYearMaxMinAvg.getMinimum()"
  name: "getMinimum()"
  nameWithType: "WeatherValueYearMaxMinAvg.getMinimum()"
  summary: "Get the minimum property: Minimum temperature for the time period."
  syntax: "public WeatherValueYear getMinimum()"
  desc: "Get the minimum property: Minimum temperature for the time period."
  returns:
    description: "the minimum value."
    type: "<xref href=\"com.azure.maps.weather.models.WeatherValueYear?alt=com.azure.maps.weather.models.WeatherValueYear&text=WeatherValueYear\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.WeatherValueYearMaxMinAvg.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.maps.weather.models.WeatherValueYearMaxMinAvg.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "WeatherValueYearMaxMinAvg.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Returned temperature values."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.models.WeatherValueYearMaxMinAvg?alt=com.azure.maps.weather.models.WeatherValueYearMaxMinAvg&text=WeatherValueYearMaxMinAvg\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.maps.weather.models"
artifact: com.azure:azure-maps-weather:1.0.0-beta.2
