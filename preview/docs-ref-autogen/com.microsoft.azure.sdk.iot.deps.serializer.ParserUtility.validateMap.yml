### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMap*"
fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMap"
name: "validateMap"
nameWithType: "ParserUtility.validateMap"
members:
- uid: "com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMap(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMap(Map<String,Object> map)"
  name: "validateMap(Map<String,Object> map)"
  nameWithType: "ParserUtility.validateMap(Map<String,Object> map)"
  summary: "Helper to validate if the provided map in terms of maximum levels and optionally if the keys ar not metadata."
  parameters:
  - description: "the <code>Map</code> to be validate. It can be <code>null</code>, and it will succeed in this case."
    name: "map"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static void validateMap(Map<String,Object> map)"
  exceptions:
  - description: "If the Map contains more than maxLevel levels or do not allow metadata\n                                  but contains metadata key."
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.deps.serializer"
artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
