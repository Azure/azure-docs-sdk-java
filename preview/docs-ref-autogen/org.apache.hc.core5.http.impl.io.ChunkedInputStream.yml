### YamlMime:JavaType
uid: "org.apache.hc.core5.http.impl.io.ChunkedInputStream"
fullName: "org.apache.hc.core5.http.impl.io.ChunkedInputStream"
name: "ChunkedInputStream"
nameWithType: "ChunkedInputStream"
summary: "Implements chunked transfer coding. The content is received in small chunks. Entities transferred using this input stream can be of unlimited length. After the stream is read to the end, it provides access to the trailers, if any.\n\nNote that this class NEVER closes the underlying stream, even when close gets called. Instead, it will read until the \"end\" of its chunking on close, which allows for the seamless execution of subsequent HTTP 1.1 requests, while not requiring the client to remember to read the entire contents of the response."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.InputStream\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.io.InputStream.available()"
- "java.io.InputStream.close()"
- "java.io.InputStream.mark(int)"
- "java.io.InputStream.markSupported()"
- "java.io.InputStream.nullInputStream()"
- "java.io.InputStream.read()"
- "java.io.InputStream.read(byte[])"
- "java.io.InputStream.read(byte[],int,int)"
- "java.io.InputStream.readAllBytes()"
- "java.io.InputStream.readNBytes(byte[],int,int)"
- "java.io.InputStream.readNBytes(int)"
- "java.io.InputStream.reset()"
- "java.io.InputStream.skip(long)"
- "java.io.InputStream.transferTo(java.io.OutputStream)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ChunkedInputStream extends InputStream"
constructors:
- "org.apache.hc.core5.http.impl.io.ChunkedInputStream.ChunkedInputStream(org.apache.hc.core5.http.io.SessionInputBuffer,java.io.InputStream)"
- "org.apache.hc.core5.http.impl.io.ChunkedInputStream.ChunkedInputStream(org.apache.hc.core5.http.io.SessionInputBuffer,java.io.InputStream,org.apache.hc.core5.http.config.Http1Config)"
methods:
- "org.apache.hc.core5.http.impl.io.ChunkedInputStream.available()"
- "org.apache.hc.core5.http.impl.io.ChunkedInputStream.close()"
- "org.apache.hc.core5.http.impl.io.ChunkedInputStream.getFooters()"
- "org.apache.hc.core5.http.impl.io.ChunkedInputStream.read()"
- "org.apache.hc.core5.http.impl.io.ChunkedInputStream.read(byte[])"
- "org.apache.hc.core5.http.impl.io.ChunkedInputStream.read(byte[],int,int)"
type: "class"
metadata: {}
package: "org.apache.hc.core5.http.impl.io"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
