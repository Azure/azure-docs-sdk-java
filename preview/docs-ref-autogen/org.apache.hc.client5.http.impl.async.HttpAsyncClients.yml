### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  id: HttpAsyncClients
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async
  children:
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createDefault()
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Default()
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal()
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config)
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.reactor.IOReactorConfig)
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.reactor.IOReactorConfig,org.apache.hc.client5.http.DnsResolver,org.apache.hc.core5.http.nio.ssl.TlsStrategy)
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.reactor.IOReactorConfig,org.apache.hc.core5.http.nio.ssl.TlsStrategy)
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2System()
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal()
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal(org.apache.hc.client5.http.nio.AsyncClientConnectionManager)
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal(org.apache.hc.core5.http2.HttpVersionPolicy,org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.http.config.Http1Config,org.apache.hc.core5.reactor.IOReactorConfig)
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal(org.apache.hc.core5.http2.HttpVersionPolicy,org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.http.config.Http1Config,org.apache.hc.core5.reactor.IOReactorConfig,org.apache.hc.client5.http.nio.AsyncClientConnectionManager)
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.http.config.Http1Config)
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.createSystem()
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.custom()
  - org.apache.hc.client5.http.impl.async.HttpAsyncClients.customHttp2()
  langs:
  - java
  name: HttpAsyncClients
  nameWithType: HttpAsyncClients
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  type: Class
  package: org.apache.hc.client5.http.impl.async
  summary: Factory methods for <xref uid="org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient" data-throw-if-not-resolved="false">CloseableHttpAsyncClient</xref> instances.
  syntax:
    content: public final class HttpAsyncClients
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.HttpAsyncClients()
  id: HttpAsyncClients()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: HttpAsyncClients()
  nameWithType: HttpAsyncClients.HttpAsyncClients()
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.HttpAsyncClients()
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.HttpAsyncClients*
  type: Constructor
  package: org.apache.hc.client5.http.impl.async
  syntax:
    content: private HttpAsyncClients()
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createDefault()
  id: createDefault()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createDefault()
  nameWithType: HttpAsyncClients.createDefault()
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createDefault()
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createDefault*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates <xref uid="org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient" data-throw-if-not-resolved="false">CloseableHttpAsyncClient</xref> instance with default configuration.
  syntax:
    content: public static CloseableHttpAsyncClient createDefault()
    return:
      type: org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Default()
  id: createHttp2Default()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createHttp2Default()
  nameWithType: HttpAsyncClients.createHttp2Default()
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Default()
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Default*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates HTTP/2 <xref uid="org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient" data-throw-if-not-resolved="false">CloseableHttpAsyncClient</xref> instance with default configuration optimized for HTTP/2 protocol and message multiplexing.
  syntax:
    content: public static CloseableHttpAsyncClient createHttp2Default()
    return:
      type: org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal()
  id: createHttp2Minimal()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createHttp2Minimal()
  nameWithType: HttpAsyncClients.createHttp2Minimal()
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal()
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates <xref uid="org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient" data-throw-if-not-resolved="false">MinimalH2AsyncClient</xref> instance optimized for HTTP/2 multiplexing message transport without advanced HTTP protocol functionality.
  syntax:
    content: public static MinimalH2AsyncClient createHttp2Minimal()
    return:
      type: org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config)
  id: createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createHttp2Minimal(H2Config h2Config)
  nameWithType: HttpAsyncClients.createHttp2Minimal(H2Config h2Config)
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(H2Config h2Config)
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates <xref uid="org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient" data-throw-if-not-resolved="false">MinimalH2AsyncClient</xref> instance optimized for HTTP/2 multiplexing message transport without advanced HTTP protocol functionality.
  syntax:
    content: public static MinimalH2AsyncClient createHttp2Minimal(H2Config h2Config)
    parameters:
    - id: h2Config
      type: org.apache.hc.core5.http2.config.H2Config
    return:
      type: org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.reactor.IOReactorConfig)
  id: createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.reactor.IOReactorConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig)
  nameWithType: HttpAsyncClients.createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig)
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig)
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates <xref uid="org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient" data-throw-if-not-resolved="false">MinimalH2AsyncClient</xref> instance optimized for HTTP/2 multiplexing message transport without advanced HTTP protocol functionality.
  syntax:
    content: public static MinimalH2AsyncClient createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig)
    parameters:
    - id: h2Config
      type: org.apache.hc.core5.http2.config.H2Config
    - id: ioReactorConfig
      type: org.apache.hc.core5.reactor.IOReactorConfig
    return:
      type: org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.reactor.IOReactorConfig,org.apache.hc.client5.http.DnsResolver,org.apache.hc.core5.http.nio.ssl.TlsStrategy)
  id: createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.reactor.IOReactorConfig,org.apache.hc.client5.http.DnsResolver,org.apache.hc.core5.http.nio.ssl.TlsStrategy)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, DnsResolver dnsResolver, TlsStrategy tlsStrategy)
  nameWithType: HttpAsyncClients.createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, DnsResolver dnsResolver, TlsStrategy tlsStrategy)
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, DnsResolver dnsResolver, TlsStrategy tlsStrategy)
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates <xref uid="org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient" data-throw-if-not-resolved="false">MinimalH2AsyncClient</xref> instance optimized for HTTP/2 multiplexing message transport without advanced HTTP protocol functionality.
  syntax:
    content: public static MinimalH2AsyncClient createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, DnsResolver dnsResolver, TlsStrategy tlsStrategy)
    parameters:
    - id: h2Config
      type: org.apache.hc.core5.http2.config.H2Config
    - id: ioReactorConfig
      type: org.apache.hc.core5.reactor.IOReactorConfig
    - id: dnsResolver
      type: org.apache.hc.client5.http.DnsResolver
    - id: tlsStrategy
      type: org.apache.hc.core5.http.nio.ssl.TlsStrategy
    return:
      type: org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.reactor.IOReactorConfig,org.apache.hc.core5.http.nio.ssl.TlsStrategy)
  id: createHttp2Minimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.reactor.IOReactorConfig,org.apache.hc.core5.http.nio.ssl.TlsStrategy)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, TlsStrategy tlsStrategy)
  nameWithType: HttpAsyncClients.createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, TlsStrategy tlsStrategy)
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, TlsStrategy tlsStrategy)
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates <xref uid="org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient" data-throw-if-not-resolved="false">MinimalH2AsyncClient</xref> instance optimized for HTTP/2 multiplexing message transport without advanced HTTP protocol functionality.
  syntax:
    content: public static MinimalH2AsyncClient createHttp2Minimal(H2Config h2Config, IOReactorConfig ioReactorConfig, TlsStrategy tlsStrategy)
    parameters:
    - id: h2Config
      type: org.apache.hc.core5.http2.config.H2Config
    - id: ioReactorConfig
      type: org.apache.hc.core5.reactor.IOReactorConfig
    - id: tlsStrategy
      type: org.apache.hc.core5.http.nio.ssl.TlsStrategy
    return:
      type: org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2System()
  id: createHttp2System()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createHttp2System()
  nameWithType: HttpAsyncClients.createHttp2System()
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2System()
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2System*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates HTTP/2 <xref uid="org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient" data-throw-if-not-resolved="false">CloseableHttpAsyncClient</xref> instance with default configuration and system properties optimized for HTTP/2 protocol and message multiplexing.
  syntax:
    content: public static CloseableHttpAsyncClient createHttp2System()
    return:
      type: org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal()
  id: createMinimal()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createMinimal()
  nameWithType: HttpAsyncClients.createMinimal()
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal()
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates <xref uid="org.apache.hc.client5.http.impl.async.MinimalHttpAsyncClient" data-throw-if-not-resolved="false">MinimalHttpAsyncClient</xref> instance optimized for HTTP/1.1 and HTTP/2 message transport without advanced HTTP protocol functionality.
  syntax:
    content: public static MinimalHttpAsyncClient createMinimal()
    return:
      type: org.apache.hc.client5.http.impl.async.MinimalHttpAsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal(org.apache.hc.client5.http.nio.AsyncClientConnectionManager)
  id: createMinimal(org.apache.hc.client5.http.nio.AsyncClientConnectionManager)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createMinimal(AsyncClientConnectionManager connManager)
  nameWithType: HttpAsyncClients.createMinimal(AsyncClientConnectionManager connManager)
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal(AsyncClientConnectionManager connManager)
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates <xref uid="org.apache.hc.client5.http.impl.async.MinimalHttpAsyncClient" data-throw-if-not-resolved="false">MinimalHttpAsyncClient</xref> instance optimized for HTTP/1.1 and HTTP/2 message transport without advanced HTTP protocol functionality.
  syntax:
    content: public static MinimalHttpAsyncClient createMinimal(AsyncClientConnectionManager connManager)
    parameters:
    - id: connManager
      type: org.apache.hc.client5.http.nio.AsyncClientConnectionManager
    return:
      type: org.apache.hc.client5.http.impl.async.MinimalHttpAsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal(org.apache.hc.core5.http2.HttpVersionPolicy,org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.http.config.Http1Config,org.apache.hc.core5.reactor.IOReactorConfig)
  id: createMinimal(org.apache.hc.core5.http2.HttpVersionPolicy,org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.http.config.Http1Config,org.apache.hc.core5.reactor.IOReactorConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createMinimal(HttpVersionPolicy versionPolicy, H2Config h2Config, Http1Config h1Config, IOReactorConfig ioReactorConfig)
  nameWithType: HttpAsyncClients.createMinimal(HttpVersionPolicy versionPolicy, H2Config h2Config, Http1Config h1Config, IOReactorConfig ioReactorConfig)
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal(HttpVersionPolicy versionPolicy, H2Config h2Config, Http1Config h1Config, IOReactorConfig ioReactorConfig)
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates <xref uid="org.apache.hc.client5.http.impl.async.MinimalHttpAsyncClient" data-throw-if-not-resolved="false">MinimalHttpAsyncClient</xref> instance optimized for HTTP/1.1 and HTTP/2 message transport without advanced HTTP protocol functionality.
  syntax:
    content: public static MinimalHttpAsyncClient createMinimal(HttpVersionPolicy versionPolicy, H2Config h2Config, Http1Config h1Config, IOReactorConfig ioReactorConfig)
    parameters:
    - id: versionPolicy
      type: org.apache.hc.core5.http2.HttpVersionPolicy
    - id: h2Config
      type: org.apache.hc.core5.http2.config.H2Config
    - id: h1Config
      type: org.apache.hc.core5.http.config.Http1Config
    - id: ioReactorConfig
      type: org.apache.hc.core5.reactor.IOReactorConfig
    return:
      type: org.apache.hc.client5.http.impl.async.MinimalHttpAsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal(org.apache.hc.core5.http2.HttpVersionPolicy,org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.http.config.Http1Config,org.apache.hc.core5.reactor.IOReactorConfig,org.apache.hc.client5.http.nio.AsyncClientConnectionManager)
  id: createMinimal(org.apache.hc.core5.http2.HttpVersionPolicy,org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.http.config.Http1Config,org.apache.hc.core5.reactor.IOReactorConfig,org.apache.hc.client5.http.nio.AsyncClientConnectionManager)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createMinimal(HttpVersionPolicy versionPolicy, H2Config h2Config, Http1Config h1Config, IOReactorConfig ioReactorConfig, AsyncClientConnectionManager connmgr)
  nameWithType: HttpAsyncClients.createMinimal(HttpVersionPolicy versionPolicy, H2Config h2Config, Http1Config h1Config, IOReactorConfig ioReactorConfig, AsyncClientConnectionManager connmgr)
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal(HttpVersionPolicy versionPolicy, H2Config h2Config, Http1Config h1Config, IOReactorConfig ioReactorConfig, AsyncClientConnectionManager connmgr)
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates <xref uid="org.apache.hc.client5.http.impl.async.MinimalHttpAsyncClient" data-throw-if-not-resolved="false">MinimalHttpAsyncClient</xref> instance optimized for HTTP/1.1 and HTTP/2 message transport without advanced HTTP protocol functionality.
  syntax:
    content: public static MinimalHttpAsyncClient createMinimal(HttpVersionPolicy versionPolicy, H2Config h2Config, Http1Config h1Config, IOReactorConfig ioReactorConfig, AsyncClientConnectionManager connmgr)
    parameters:
    - id: versionPolicy
      type: org.apache.hc.core5.http2.HttpVersionPolicy
    - id: h2Config
      type: org.apache.hc.core5.http2.config.H2Config
    - id: h1Config
      type: org.apache.hc.core5.http.config.Http1Config
    - id: ioReactorConfig
      type: org.apache.hc.core5.reactor.IOReactorConfig
    - id: connmgr
      type: org.apache.hc.client5.http.nio.AsyncClientConnectionManager
    return:
      type: org.apache.hc.client5.http.impl.async.MinimalHttpAsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.http.config.Http1Config)
  id: createMinimal(org.apache.hc.core5.http2.config.H2Config,org.apache.hc.core5.http.config.Http1Config)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createMinimal(H2Config h2Config, Http1Config h1Config)
  nameWithType: HttpAsyncClients.createMinimal(H2Config h2Config, Http1Config h1Config)
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal(H2Config h2Config, Http1Config h1Config)
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates <xref uid="org.apache.hc.client5.http.impl.async.MinimalHttpAsyncClient" data-throw-if-not-resolved="false">MinimalHttpAsyncClient</xref> instance optimized for HTTP/1.1 and HTTP/2 message transport without advanced HTTP protocol functionality.
  syntax:
    content: public static MinimalHttpAsyncClient createMinimal(H2Config h2Config, Http1Config h1Config)
    parameters:
    - id: h2Config
      type: org.apache.hc.core5.http2.config.H2Config
    - id: h1Config
      type: org.apache.hc.core5.http.config.Http1Config
    return:
      type: org.apache.hc.client5.http.impl.async.MinimalHttpAsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createSystem()
  id: createSystem()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: createSystem()
  nameWithType: HttpAsyncClients.createSystem()
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createSystem()
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createSystem*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates <xref uid="org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient" data-throw-if-not-resolved="false">CloseableHttpAsyncClient</xref> instance with default configuration and system properties.
  syntax:
    content: public static CloseableHttpAsyncClient createSystem()
    return:
      type: org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.custom()
  id: custom()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: custom()
  nameWithType: HttpAsyncClients.custom()
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.custom()
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.custom*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates builder object for construction of custom <xref uid="org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient" data-throw-if-not-resolved="false">CloseableHttpAsyncClient</xref> instances.
  syntax:
    content: public static HttpAsyncClientBuilder custom()
    return:
      type: org.apache.hc.client5.http.impl.async.HttpAsyncClientBuilder
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.customHttp2()
  id: customHttp2()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.async.HttpAsyncClients
  langs:
  - java
  name: customHttp2()
  nameWithType: HttpAsyncClients.customHttp2()
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.customHttp2()
  overload: org.apache.hc.client5.http.impl.async.HttpAsyncClients.customHttp2*
  type: Method
  package: org.apache.hc.client5.http.impl.async
  summary: Creates builder object for construction of custom HTTP/2 <xref uid="org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient" data-throw-if-not-resolved="false">CloseableHttpAsyncClient</xref> instances optimized for HTTP/2 protocol and message multiplexing
  syntax:
    content: public static H2AsyncClientBuilder customHttp2()
    return:
      type: org.apache.hc.client5.http.impl.async.H2AsyncClientBuilder
references:
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.HttpAsyncClients*
  name: HttpAsyncClients
  nameWithType: HttpAsyncClients.HttpAsyncClients
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.HttpAsyncClients
  package: org.apache.hc.client5.http.impl.async
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClientBuilder
  name: HttpAsyncClientBuilder
  nameWithType: HttpAsyncClientBuilder
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClientBuilder
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.custom*
  name: custom
  nameWithType: HttpAsyncClients.custom
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.custom
  package: org.apache.hc.client5.http.impl.async
- uid: org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient
  name: CloseableHttpAsyncClient
  nameWithType: CloseableHttpAsyncClient
  fullName: org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createDefault*
  name: createDefault
  nameWithType: HttpAsyncClients.createDefault
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createDefault
  package: org.apache.hc.client5.http.impl.async
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createSystem*
  name: createSystem
  nameWithType: HttpAsyncClients.createSystem
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createSystem
  package: org.apache.hc.client5.http.impl.async
- uid: org.apache.hc.client5.http.impl.async.H2AsyncClientBuilder
  name: H2AsyncClientBuilder
  nameWithType: H2AsyncClientBuilder
  fullName: org.apache.hc.client5.http.impl.async.H2AsyncClientBuilder
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.customHttp2*
  name: customHttp2
  nameWithType: HttpAsyncClients.customHttp2
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.customHttp2
  package: org.apache.hc.client5.http.impl.async
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Default*
  name: createHttp2Default
  nameWithType: HttpAsyncClients.createHttp2Default
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Default
  package: org.apache.hc.client5.http.impl.async
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2System*
  name: createHttp2System
  nameWithType: HttpAsyncClients.createHttp2System
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2System
  package: org.apache.hc.client5.http.impl.async
- uid: org.apache.hc.core5.http2.HttpVersionPolicy
  name: HttpVersionPolicy
  nameWithType: HttpVersionPolicy
  fullName: org.apache.hc.core5.http2.HttpVersionPolicy
- uid: org.apache.hc.core5.http2.config.H2Config
  name: H2Config
  nameWithType: H2Config
  fullName: org.apache.hc.core5.http2.config.H2Config
- uid: org.apache.hc.core5.http.config.Http1Config
  name: Http1Config
  nameWithType: Http1Config
  fullName: org.apache.hc.core5.http.config.Http1Config
- uid: org.apache.hc.core5.reactor.IOReactorConfig
  name: IOReactorConfig
  nameWithType: IOReactorConfig
  fullName: org.apache.hc.core5.reactor.IOReactorConfig
- uid: org.apache.hc.client5.http.nio.AsyncClientConnectionManager
  name: AsyncClientConnectionManager
  nameWithType: AsyncClientConnectionManager
  fullName: org.apache.hc.client5.http.nio.AsyncClientConnectionManager
- uid: org.apache.hc.client5.http.impl.async.MinimalHttpAsyncClient
  name: MinimalHttpAsyncClient
  nameWithType: MinimalHttpAsyncClient
  fullName: org.apache.hc.client5.http.impl.async.MinimalHttpAsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal*
  name: createMinimal
  nameWithType: HttpAsyncClients.createMinimal
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createMinimal
  package: org.apache.hc.client5.http.impl.async
- uid: org.apache.hc.client5.http.DnsResolver
  name: DnsResolver
  nameWithType: DnsResolver
  fullName: org.apache.hc.client5.http.DnsResolver
- uid: org.apache.hc.core5.http.nio.ssl.TlsStrategy
  name: TlsStrategy
  nameWithType: TlsStrategy
  fullName: org.apache.hc.core5.http.nio.ssl.TlsStrategy
- uid: org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient
  name: MinimalH2AsyncClient
  nameWithType: MinimalH2AsyncClient
  fullName: org.apache.hc.client5.http.impl.async.MinimalH2AsyncClient
- uid: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal*
  name: createHttp2Minimal
  nameWithType: HttpAsyncClients.createHttp2Minimal
  fullName: org.apache.hc.client5.http.impl.async.HttpAsyncClients.createHttp2Minimal
  package: org.apache.hc.client5.http.impl.async
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
