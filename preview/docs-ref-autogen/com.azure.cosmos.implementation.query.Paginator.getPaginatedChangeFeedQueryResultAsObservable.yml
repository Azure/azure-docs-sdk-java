### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.query.Paginator.getPaginatedChangeFeedQueryResultAsObservable*"
fullName: "com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedChangeFeedQueryResultAsObservable"
name: "<T>getPaginatedChangeFeedQueryResultAsObservable"
nameWithType: "Paginator.<T>getPaginatedChangeFeedQueryResultAsObservable"
members:
- uid: "com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedChangeFeedQueryResultAsObservable(com.azure.cosmos.implementation.ChangeFeedOptions,java.util.function.BiFunction<java.lang.String,java.lang.Integer,com.azure.cosmos.implementation.RxDocumentServiceRequest>,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>>,java.lang.Class<T>,int)"
  fullName: "com.azure.cosmos.implementation.query.Paginator.<T>getPaginatedChangeFeedQueryResultAsObservable(ChangeFeedOptions feedOptions, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int maxPageSize)"
  name: "<T>getPaginatedChangeFeedQueryResultAsObservable(ChangeFeedOptions feedOptions, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int maxPageSize)"
  nameWithType: "Paginator.<T>getPaginatedChangeFeedQueryResultAsObservable(ChangeFeedOptions feedOptions, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int maxPageSize)"
  parameters:
  - name: "feedOptions"
    type: "<xref href=\"com.azure.cosmos.implementation.ChangeFeedOptions?alt=com.azure.cosmos.implementation.ChangeFeedOptions&text=ChangeFeedOptions\" data-throw-if-not-resolved=\"False\" />"
  - name: "createRequestFunc"
    type: "<xref href=\"java.util.function.BiFunction?alt=java.util.function.BiFunction&text=BiFunction\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "executeFunc"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />,<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;&gt;"
  - name: "resourceType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "maxPageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Flux<FeedResponse<T>> <T>getPaginatedChangeFeedQueryResultAsObservable(ChangeFeedOptions feedOptions, BiFunction<String,Integer,RxDocumentServiceRequest> createRequestFunc, Function<RxDocumentServiceRequest,Mono<FeedResponse<T>>> executeFunc, Class<T> resourceType, int maxPageSize)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.query"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
