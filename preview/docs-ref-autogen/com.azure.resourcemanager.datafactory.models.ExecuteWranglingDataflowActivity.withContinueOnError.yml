### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datafactory.models.ExecuteWranglingDataflowActivity.withContinueOnError*"
fullName: "com.azure.resourcemanager.datafactory.models.ExecuteWranglingDataflowActivity.withContinueOnError"
name: "withContinueOnError"
nameWithType: "ExecuteWranglingDataflowActivity.withContinueOnError"
members:
- uid: "com.azure.resourcemanager.datafactory.models.ExecuteWranglingDataflowActivity.withContinueOnError(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.ExecuteWranglingDataflowActivity.withContinueOnError(Object continueOnError)"
  name: "withContinueOnError(Object continueOnError)"
  nameWithType: "ExecuteWranglingDataflowActivity.withContinueOnError(Object continueOnError)"
  summary: "Set the continueOnError property: Continue on error setting used for data flow execution. Enables processing to continue if a sink fails. Type: boolean (or Expression with resultType boolean)."
  parameters:
  - description: "the continueOnError value to set."
    name: "continueOnError"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExecuteWranglingDataflowActivity withContinueOnError(Object continueOnError)"
  returns:
    description: "the ExecuteWranglingDataflowActivity object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExecuteWranglingDataflowActivity?alt=com.azure.resourcemanager.datafactory.models.ExecuteWranglingDataflowActivity&text=ExecuteWranglingDataflowActivity\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.7
