### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.base.internal.Finalizer"
fullName: "com.azure.cosmos.implementation.guava25.base.internal.Finalizer"
name: "Finalizer"
nameWithType: "Finalizer"
summary: "Thread that finalizes referents. All references should implement `com.google.common.base.FinalizableReference`.\n\nWhile this class is public, we consider it to be \\*internal\\* and not part of our published API. It is public so we can access it reflectively across class loaders in secure environments.\n\nThis class can't depend on other Guava code. If we were to load this class in the same class loader as the rest of Guava, this thread would keep an indirect strong reference to the class loader and prevent it from being garbage collected. This poses a problem for environments where you want to throw away the class loader. For example, dynamically reloading a web application or unloading an OSGi bundle.\n\n`com.google.common.base.FinalizableReferenceQueue` loads this class in its own class loader. That way, this class doesn't prevent the main class loader from getting garbage collected, and this class can detect when the main class loader has been garbage collected and stop itself."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Finalizer implements Runnable"
methods:
- "com.azure.cosmos.implementation.guava25.base.internal.Finalizer.run()"
- "com.azure.cosmos.implementation.guava25.base.internal.Finalizer.startFinalizer(java.lang.Class<?>,java.lang.ref.ReferenceQueue<java.lang.Object>,java.lang.ref.PhantomReference<java.lang.Object>)"
type: "class"
implements:
- "<xref href=\"java.lang.Runnable?alt=java.lang.Runnable&text=Runnable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base.internal"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
