### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult"
  id: "UnwrapResult"
  parent: "com.azure.security.keyvault.keys.cryptography.models"
  children:
  - "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.UnwrapResult(byte[],com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,java.lang.String)"
  - "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getAlgorithm()"
  - "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getKey()"
  - "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getKeyId()"
  langs:
  - "java"
  name: "UnwrapResult"
  nameWithType: "UnwrapResult"
  fullName: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult"
  type: "Class"
  package: "com.azure.security.keyvault.keys.cryptography.models"
  summary: "Represents the details of key unwrap operation result."
  syntax:
    content: "public final class UnwrapResult"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.UnwrapResult(byte[],com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,java.lang.String)"
  id: "UnwrapResult(byte[],com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm,java.lang.String)"
  parent: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult"
  langs:
  - "java"
  name: "UnwrapResult(byte[] key, KeyWrapAlgorithm algorithm, String keyId)"
  nameWithType: "UnwrapResult.UnwrapResult(byte[] key, KeyWrapAlgorithm algorithm, String keyId)"
  fullName: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.UnwrapResult(byte[] key, KeyWrapAlgorithm algorithm, String keyId)"
  overload: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.UnwrapResult*"
  type: "Constructor"
  package: "com.azure.security.keyvault.keys.cryptography.models"
  summary: "Creates the instance of KeyUnwrap Result holding the unwrapped key content."
  syntax:
    content: "public UnwrapResult(byte[] key, KeyWrapAlgorithm algorithm, String keyId)"
    parameters:
    - id: "key"
      type: "byte[]"
      description: "The unwrapped key content."
    - id: "algorithm"
      type: "com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm"
      description: "The algorithm used for the operation"
    - id: "keyId"
      type: "java.lang.String"
      description: "The id of key used for the operation"
- uid: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getAlgorithm()"
  id: "getAlgorithm()"
  parent: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult"
  langs:
  - "java"
  name: "getAlgorithm()"
  nameWithType: "UnwrapResult.getAlgorithm()"
  fullName: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getAlgorithm()"
  overload: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getAlgorithm*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography.models"
  summary: "Get the algorithm used for key wrap operation."
  syntax:
    content: "public KeyWrapAlgorithm getAlgorithm()"
    return:
      type: "com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm"
      description: "The encryption algorithm used."
- uid: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getKey()"
  id: "getKey()"
  parent: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult"
  langs:
  - "java"
  name: "getKey()"
  nameWithType: "UnwrapResult.getKey()"
  fullName: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getKey()"
  overload: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getKey*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography.models"
  summary: "Get the unwrapped key content."
  syntax:
    content: "public byte[] getKey()"
    return:
      type: "byte[]"
      description: "The unwrapped key content."
- uid: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getKeyId()"
  id: "getKeyId()"
  parent: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult"
  langs:
  - "java"
  name: "getKeyId()"
  nameWithType: "UnwrapResult.getKeyId()"
  fullName: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getKeyId()"
  overload: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getKeyId*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography.models"
  summary: "Get the identifier of the key used for the key wrap encryption"
  syntax:
    content: "public String getKeyId()"
    return:
      type: "java.lang.String"
      description: "the key identifier"
references:
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm"
  name: "KeyWrapAlgorithm"
  nameWithType: "KeyWrapAlgorithm"
  fullName: "com.azure.security.keyvault.keys.cryptography.models.KeyWrapAlgorithm"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.UnwrapResult*"
  name: "UnwrapResult"
  nameWithType: "UnwrapResult.UnwrapResult"
  fullName: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.UnwrapResult"
  package: "com.azure.security.keyvault.keys.cryptography.models"
- uid: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getKey*"
  name: "getKey"
  nameWithType: "UnwrapResult.getKey"
  fullName: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getKey"
  package: "com.azure.security.keyvault.keys.cryptography.models"
- uid: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getAlgorithm*"
  name: "getAlgorithm"
  nameWithType: "UnwrapResult.getAlgorithm"
  fullName: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getAlgorithm"
  package: "com.azure.security.keyvault.keys.cryptography.models"
- uid: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getKeyId*"
  name: "getKeyId"
  nameWithType: "UnwrapResult.getKeyId"
  fullName: "com.azure.security.keyvault.keys.cryptography.models.UnwrapResult.getKeyId"
  package: "com.azure.security.keyvault.keys.cryptography.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
