### YamlMime:JavaType
uid: "com.azure.resourcemanager.streamanalytics.models.Cluster"
fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster"
name: "Cluster"
nameWithType: "Cluster"
summary: "An immutable client-side representation of Cluster."
syntax: "public interface Cluster"
methods:
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.capacityAllocated()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.capacityAllocated()"
  name: "capacityAllocated()"
  nameWithType: "Cluster.capacityAllocated()"
  summary: "Gets the capacityAllocated property: Represents the number of streaming units currently being used on the cluster."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer capacityAllocated()"
  returns:
    description: "the capacityAllocated value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.capacityAssigned()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.capacityAssigned()"
  name: "capacityAssigned()"
  nameWithType: "Cluster.capacityAssigned()"
  summary: "Gets the capacityAssigned property: Represents the sum of the SUs of all streaming jobs associated with the cluster. If all of the jobs were running, this would be the capacity allocated."
  modifiers:
  - "abstract"
  syntax: "public abstract Integer capacityAssigned()"
  returns:
    description: "the capacityAssigned value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.clusterId()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.clusterId()"
  name: "clusterId()"
  nameWithType: "Cluster.clusterId()"
  summary: "Gets the clusterId property: Unique identifier for the cluster."
  modifiers:
  - "abstract"
  syntax: "public abstract String clusterId()"
  returns:
    description: "the clusterId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.createdDate()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.createdDate()"
  name: "createdDate()"
  nameWithType: "Cluster.createdDate()"
  summary: "Gets the createdDate property: The date this cluster was created."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime createdDate()"
  returns:
    description: "the createdDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.etag()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.etag()"
  name: "etag()"
  nameWithType: "Cluster.etag()"
  summary: "Gets the etag property: The current entity tag for the cluster. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency."
  modifiers:
  - "abstract"
  syntax: "public abstract String etag()"
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.id()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.id()"
  name: "id()"
  nameWithType: "Cluster.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.innerModel()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.innerModel()"
  name: "innerModel()"
  nameWithType: "Cluster.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.streamanalytics.fluent.models.ClusterInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract ClusterInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.fluent.models.ClusterInner?alt=com.azure.resourcemanager.streamanalytics.fluent.models.ClusterInner&text=ClusterInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.listStreamingJobs()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.listStreamingJobs()"
  name: "listStreamingJobs()"
  nameWithType: "Cluster.listStreamingJobs()"
  summary: "Lists all of the streaming jobs in the given cluster."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<ClusterJob> listStreamingJobs()"
  returns:
    description: "a list of streaming jobs."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.streamanalytics.models.ClusterJob?alt=com.azure.resourcemanager.streamanalytics.models.ClusterJob&text=ClusterJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.listStreamingJobs(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.listStreamingJobs(Context context)"
  name: "listStreamingJobs(Context context)"
  nameWithType: "Cluster.listStreamingJobs(Context context)"
  summary: "Lists all of the streaming jobs in the given cluster."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ClusterJob> listStreamingJobs(Context context)"
  returns:
    description: "a list of streaming jobs."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.streamanalytics.models.ClusterJob?alt=com.azure.resourcemanager.streamanalytics.models.ClusterJob&text=ClusterJob\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.location()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.location()"
  name: "location()"
  nameWithType: "Cluster.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.name()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.name()"
  name: "name()"
  nameWithType: "Cluster.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.provisioningState()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.provisioningState()"
  name: "provisioningState()"
  nameWithType: "Cluster.provisioningState()"
  summary: "Gets the provisioningState property: The status of the cluster provisioning. The three terminal states are: Succeeded, Failed and Canceled."
  modifiers:
  - "abstract"
  syntax: "public abstract ClusterProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.ClusterProvisioningState?alt=com.azure.resourcemanager.streamanalytics.models.ClusterProvisioningState&text=ClusterProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.refresh()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.refresh()"
  name: "refresh()"
  nameWithType: "Cluster.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract Cluster refresh()"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.Cluster?alt=com.azure.resourcemanager.streamanalytics.models.Cluster&text=Cluster\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "Cluster.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Cluster refresh(Context context)"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.Cluster?alt=com.azure.resourcemanager.streamanalytics.models.Cluster&text=Cluster\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.region()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.region()"
  name: "region()"
  nameWithType: "Cluster.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.regionName()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.regionName()"
  name: "regionName()"
  nameWithType: "Cluster.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.sku()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.sku()"
  name: "sku()"
  nameWithType: "Cluster.sku()"
  summary: "Gets the sku property: The SKU of the cluster. This determines the size/capacity of the cluster. Required on PUT (CreateOrUpdate) requests."
  modifiers:
  - "abstract"
  syntax: "public abstract ClusterSku sku()"
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.ClusterSku?alt=com.azure.resourcemanager.streamanalytics.models.ClusterSku&text=ClusterSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.tags()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.tags()"
  name: "tags()"
  nameWithType: "Cluster.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.type()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.type()"
  name: "type()"
  nameWithType: "Cluster.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.Cluster.update()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.Cluster.update()"
  name: "update()"
  nameWithType: "Cluster.update()"
  summary: "Begins update for the Cluster resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Cluster.Update update()"
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.Cluster.Update?alt=com.azure.resourcemanager.streamanalytics.models.Cluster.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.streamanalytics.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-streamanalytics:1.0.0-beta.2
