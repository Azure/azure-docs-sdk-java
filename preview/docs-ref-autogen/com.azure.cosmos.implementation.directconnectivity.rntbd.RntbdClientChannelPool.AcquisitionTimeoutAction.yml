### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction"
  id: "AcquisitionTimeoutAction"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  children:
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.FAIL"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.NEW"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.valueOf(java.lang.String)"
  - "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.values()"
  langs:
  - "java"
  name: "RntbdClientChannelPool.AcquisitionTimeoutAction"
  nameWithType: "RntbdClientChannelPool.AcquisitionTimeoutAction"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction"
  type: "Enum"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: "private enum RntbdClientChannelPool.AcquisitionTimeoutAction extends Enum<RntbdClientChannelPool.AcquisitionTimeoutAction>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.AcquisitionTimeoutAction()"
  id: "AcquisitionTimeoutAction()"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction"
  langs:
  - "java"
  name: "AcquisitionTimeoutAction()"
  nameWithType: "RntbdClientChannelPool.AcquisitionTimeoutAction.AcquisitionTimeoutAction()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.AcquisitionTimeoutAction()"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.AcquisitionTimeoutAction*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: "private AcquisitionTimeoutAction()"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.FAIL"
  id: "FAIL"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction"
  langs:
  - "java"
  name: "FAIL"
  nameWithType: "RntbdClientChannelPool.AcquisitionTimeoutAction.FAIL"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.FAIL"
  type: "Field"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Fail the <xref uid=\"io.netty.util.concurrent.Future\" data-throw-if-not-resolved=\"false\">Future</xref> of the acquire call with a <xref uid=\"\" data-throw-if-not-resolved=\"false\">TimeoutException</xref>."
  syntax:
    content: "public static final RntbdClientChannelPool.AcquisitionTimeoutAction FAIL"
    return:
      type: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.NEW"
  id: "NEW"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction"
  langs:
  - "java"
  name: "NEW"
  nameWithType: "RntbdClientChannelPool.AcquisitionTimeoutAction.NEW"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.NEW"
  type: "Field"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  summary: "Create a new connection when the timeout is detected."
  syntax:
    content: "public static final RntbdClientChannelPool.AcquisitionTimeoutAction NEW"
    return:
      type: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "RntbdClientChannelPool.AcquisitionTimeoutAction.valueOf(String name)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.valueOf(String name)"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.valueOf*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: "public static RntbdClientChannelPool.AcquisitionTimeoutAction valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.values()"
  id: "values()"
  parent: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction"
  langs:
  - "java"
  name: "values()"
  nameWithType: "RntbdClientChannelPool.AcquisitionTimeoutAction.values()"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.values()"
  overload: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.values*"
  type: "Method"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
  syntax:
    content: "public static RntbdClientChannelPool.AcquisitionTimeoutAction[] values()"
    return:
      type: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction[]"
references:
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.AcquisitionTimeoutAction*"
  name: "AcquisitionTimeoutAction"
  nameWithType: "RntbdClientChannelPool.AcquisitionTimeoutAction.AcquisitionTimeoutAction"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.AcquisitionTimeoutAction"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction[]"
  spec.java:
  - uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction"
    name: "AcquisitionTimeoutAction"
    fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.values*"
  name: "values"
  nameWithType: "RntbdClientChannelPool.AcquisitionTimeoutAction.values"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.values"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.valueOf*"
  name: "valueOf"
  nameWithType: "RntbdClientChannelPool.AcquisitionTimeoutAction.valueOf"
  fullName: "com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction.valueOf"
  package: "com.azure.cosmos.implementation.directconnectivity.rntbd"
- uid: "java.lang.Enum<com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction>"
  name: "Enum<RntbdClientChannelPool.AcquisitionTimeoutAction>"
  nameWithType: "Enum<RntbdClientChannelPool.AcquisitionTimeoutAction>"
  fullName: "java.lang.Enum<com.azure.cosmos.implementation.directconnectivity.rntbd.RntbdClientChannelPool.AcquisitionTimeoutAction>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
