### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateClient.updateCertificatePolicyWithResponse*"
fullName: "com.azure.security.keyvault.certificates.CertificateClient.updateCertificatePolicyWithResponse"
name: "updateCertificatePolicyWithResponse"
nameWithType: "CertificateClient.updateCertificatePolicyWithResponse"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateClient.updateCertificatePolicyWithResponse(java.lang.String,com.azure.security.keyvault.certificates.models.CertificatePolicy,com.azure.core.util.Context)"
  fullName: "com.azure.security.keyvault.certificates.CertificateClient.updateCertificatePolicyWithResponse(String certificateName, CertificatePolicy policy, Context context)"
  name: "updateCertificatePolicyWithResponse(String certificateName, CertificatePolicy policy, Context context)"
  nameWithType: "CertificateClient.updateCertificatePolicyWithResponse(String certificateName, CertificatePolicy policy, Context context)"
  summary: "Updates the policy for a certificate. The update operation changes specified attributes of the certificate policy and attributes that are not specified in the request are left unchanged. This operation requires the `certificates/update` permission.\n\n**Code Samples**\n\nGets the certificate policy, changes its properties and then updates it in the Azure Key Vault. Prints out the returned policy details when a response has been received.\n\n```java\nCertificatePolicy certificatePolicyToUpdate = certificateClient.getCertificatePolicy(\"certificateName\");\n //Update the certificate policy cert transparency property.\n certificatePolicyToUpdate.setCertificateTransparent(true);\n Response<CertificatePolicy> updatedCertPolicyWithResponse = certificateClient\n     .updateCertificatePolicyWithResponse(\"certificateName\", certificatePolicyToUpdate,\n         new Context(key1, value1));\n System.out.printf(\"Updated Certificate Policy transparency status %s\", updatedCertPolicyWithResponse\n     .getValue().isCertificateTransparent());\n```"
  parameters:
  - description: "The certificateName of the certificate whose policy is to be updated."
    name: "certificateName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The certificate policy to be updated."
    name: "policy"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<CertificatePolicy> updateCertificatePolicyWithResponse(String certificateName, CertificatePolicy policy, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the updated <xref uid=\"com.azure.security.keyvault.certificates.models.CertificatePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"certificate policy\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.CertificatePolicy?alt=com.azure.security.keyvault.certificates.models.CertificatePolicy&text=CertificatePolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.2.0-beta.2
