### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  id: ExpressRouteCircuitsClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent
  children:
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.ExpressRouteCircuitsClient(com.azure.resourcemanager.network.NetworkManagementClient)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDelete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummary(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummary(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStats(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStats(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStats(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStats(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.list()
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAllNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAllNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAsync()
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAsync(com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummary(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummary(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listSinglePageAsync()
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listSinglePageAsync(com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  langs:
  - java
  name: ExpressRouteCircuitsClient
  nameWithType: ExpressRouteCircuitsClient
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  type: Class
  package: com.azure.resourcemanager.network.fluent
  summary: An instance of this class provides access to all the operations defined in ExpressRouteCircuits.
  syntax:
    content: public final class ExpressRouteCircuitsClient implements InnerSupportsGet<ExpressRouteCircuitInner>, InnerSupportsListing<ExpressRouteCircuitInner>, InnerSupportsDelete<Void>
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.ExpressRouteCircuitsClient(com.azure.resourcemanager.network.NetworkManagementClient)
  id: ExpressRouteCircuitsClient(com.azure.resourcemanager.network.NetworkManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: ExpressRouteCircuitsClient(NetworkManagementClient client)
  nameWithType: ExpressRouteCircuitsClient.ExpressRouteCircuitsClient(NetworkManagementClient client)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.ExpressRouteCircuitsClient(NetworkManagementClient client)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.ExpressRouteCircuitsClient*
  type: Constructor
  package: com.azure.resourcemanager.network.fluent
  summary: Initializes an instance of ExpressRouteCircuitsClient.
  syntax:
    content: public ExpressRouteCircuitsClient(NetworkManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.network.NetworkManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  nameWithType: ExpressRouteCircuitsClient.beginCreateOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public PollerFlux<PollResult<ExpressRouteCircuitInner>,ExpressRouteCircuitInner> beginCreateOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginCreateOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public PollerFlux<PollResult<ExpressRouteCircuitInner>,ExpressRouteCircuitInner> beginCreateOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  id: beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPolling(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  nameWithType: ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public ExpressRouteCircuitInner beginCreateOrUpdateWithoutPolling(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPolling(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public ExpressRouteCircuitInner beginCreateOrUpdateWithoutPolling(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  id: beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  nameWithType: ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public Mono<ExpressRouteCircuitInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public Mono<ExpressRouteCircuitInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  id: beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  nameWithType: ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitInner>> beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitInner>> beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDelete(java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.beginDelete(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDelete(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginDelete(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDelete(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.beginDeleteWithoutPolling(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPolling(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginDeleteWithoutPolling(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPolling(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginListArpTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.beginListArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTable*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public PollerFlux<PollResult<ExpressRouteCircuitsArpTableListResultInner>,ExpressRouteCircuitsArpTableListResultInner> beginListArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginListArpTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginListArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTable*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public PollerFlux<PollResult<ExpressRouteCircuitsArpTableListResultInner>,ExpressRouteCircuitsArpTableListResultInner> beginListArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginListArpTableWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListArpTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.beginListArpTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitsArpTableListResultInner beginListArpTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginListArpTableWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListArpTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginListArpTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitsArpTableListResultInner beginListArpTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginListArpTableWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListArpTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitsArpTableListResultInner> beginListArpTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginListArpTableWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListArpTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitsArpTableListResultInner> beginListArpTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginListArpTableWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListArpTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitsArpTableListResultInner>> beginListArpTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>>
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginListArpTableWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListArpTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitsArpTableListResultInner>> beginListArpTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>>
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginListRoutesTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTable*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public PollerFlux<PollResult<ExpressRouteCircuitsRoutesTableListResultInner>,ExpressRouteCircuitsRoutesTableListResultInner> beginListRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginListRoutesTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTable*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public PollerFlux<PollResult<ExpressRouteCircuitsRoutesTableListResultInner>,ExpressRouteCircuitsRoutesTableListResultInner> beginListRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummary(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginListRoutesTableSummary(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummary*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public PollerFlux<PollResult<ExpressRouteCircuitsRoutesTableSummaryListResultInner>,ExpressRouteCircuitsRoutesTableSummaryListResultInner> beginListRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummary(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginListRoutesTableSummary(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummary*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public PollerFlux<PollResult<ExpressRouteCircuitsRoutesTableSummaryListResultInner>,ExpressRouteCircuitsRoutesTableSummaryListResultInner> beginListRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginListRoutesTableSummaryWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableSummaryWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitsRoutesTableSummaryListResultInner beginListRoutesTableSummaryWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginListRoutesTableSummaryWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableSummaryWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitsRoutesTableSummaryListResultInner beginListRoutesTableSummaryWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginListRoutesTableSummaryWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableSummaryWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitsRoutesTableSummaryListResultInner> beginListRoutesTableSummaryWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginListRoutesTableSummaryWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableSummaryWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitsRoutesTableSummaryListResultInner> beginListRoutesTableSummaryWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginListRoutesTableSummaryWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableSummaryWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitsRoutesTableSummaryListResultInner>> beginListRoutesTableSummaryWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>>
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginListRoutesTableSummaryWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableSummaryWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitsRoutesTableSummaryListResultInner>> beginListRoutesTableSummaryWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>>
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginListRoutesTableWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitsRoutesTableListResultInner beginListRoutesTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginListRoutesTableWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitsRoutesTableListResultInner beginListRoutesTableWithoutPolling(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginListRoutesTableWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitsRoutesTableListResultInner> beginListRoutesTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginListRoutesTableWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitsRoutesTableListResultInner> beginListRoutesTableWithoutPollingAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginListRoutesTableWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitsRoutesTableListResultInner>> beginListRoutesTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>>
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginListRoutesTableWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginListRoutesTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitsRoutesTableListResultInner>> beginListRoutesTableWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>>
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: beginUpdateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginUpdateTags(String resourceGroupName, String circuitName, Map<String,String> tags)
  nameWithType: ExpressRouteCircuitsClient.beginUpdateTags(String resourceGroupName, String circuitName, Map<String,String> tags)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTags(String resourceGroupName, String circuitName, Map<String,String> tags)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTags*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public PollerFlux<PollResult<ExpressRouteCircuitInner>,ExpressRouteCircuitInner> beginUpdateTags(String resourceGroupName, String circuitName, Map<String,String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  id: beginUpdateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginUpdateTags(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginUpdateTags(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTags(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTags*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public PollerFlux<PollResult<ExpressRouteCircuitInner>,ExpressRouteCircuitInner> beginUpdateTags(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: beginUpdateTagsWithoutPolling(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginUpdateTagsWithoutPolling(String resourceGroupName, String circuitName, Map<String,String> tags)
  nameWithType: ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling(String resourceGroupName, String circuitName, Map<String,String> tags)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling(String resourceGroupName, String circuitName, Map<String,String> tags)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public ExpressRouteCircuitInner beginUpdateTagsWithoutPolling(String resourceGroupName, String circuitName, Map<String,String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  id: beginUpdateTagsWithoutPolling(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginUpdateTagsWithoutPolling(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public ExpressRouteCircuitInner beginUpdateTagsWithoutPolling(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: beginUpdateTagsWithoutPollingAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginUpdateTagsWithoutPollingAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
  nameWithType: ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public Mono<ExpressRouteCircuitInner> beginUpdateTagsWithoutPollingAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  id: beginUpdateTagsWithoutPollingAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginUpdateTagsWithoutPollingAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public Mono<ExpressRouteCircuitInner> beginUpdateTagsWithoutPollingAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: beginUpdateTagsWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginUpdateTagsWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
  nameWithType: ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitInner>> beginUpdateTagsWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  id: beginUpdateTagsWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: beginUpdateTagsWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  nameWithType: ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitInner>> beginUpdateTagsWithoutPollingWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  nameWithType: ExpressRouteCircuitsClient.createOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public ExpressRouteCircuitInner createOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  nameWithType: ExpressRouteCircuitsClient.createOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public ExpressRouteCircuitInner createOrUpdate(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  nameWithType: ExpressRouteCircuitsClient.createOrUpdateAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public Mono<ExpressRouteCircuitInner> createOrUpdateAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  nameWithType: ExpressRouteCircuitsClient.createOrUpdateAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public Mono<ExpressRouteCircuitInner> createOrUpdateAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  nameWithType: ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  nameWithType: ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Creates or updates an express route circuit.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String circuitName, ExpressRouteCircuitInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: parameters
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: ExpressRouteCircuit resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: delete(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.delete(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.delete(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.delete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public void delete(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: delete(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.delete(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.delete(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.delete*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public void delete(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.deleteAsync(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteAsync(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.deleteAsync(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteAsync(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.deleteWithResponseAsync(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteWithResponseAsync(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.deleteWithResponseAsync(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteWithResponseAsync(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Deletes the specified express route circuit.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.getByResourceGroup(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroup(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets information about the specified express route circuit.
  syntax:
    content: public ExpressRouteCircuitInner getByResourceGroup(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of express route circuit.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: information about the specified express route circuit.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.getByResourceGroup(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroup(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets information about the specified express route circuit.
  syntax:
    content: public ExpressRouteCircuitInner getByResourceGroup(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: information about the specified express route circuit.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.getByResourceGroupAsync(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupAsync(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets information about the specified express route circuit.
  syntax:
    content: public Mono<ExpressRouteCircuitInner> getByResourceGroupAsync(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of express route circuit.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: information about the specified express route circuit.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.getByResourceGroupAsync(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupAsync(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets information about the specified express route circuit.
  syntax:
    content: public Mono<ExpressRouteCircuitInner> getByResourceGroupAsync(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: information about the specified express route circuit.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets information about the specified express route circuit.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of express route circuit.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: information about the specified express route circuit.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets information about the specified express route circuit.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: information about the specified express route circuit.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStats(java.lang.String,java.lang.String,java.lang.String)
  id: getPeeringStats(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getPeeringStats(String resourceGroupName, String circuitName, String peeringName)
  nameWithType: ExpressRouteCircuitsClient.getPeeringStats(String resourceGroupName, String circuitName, String peeringName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStats(String resourceGroupName, String circuitName, String peeringName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStats*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all stats from an express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitStatsInner getPeeringStats(String resourceGroupName, String circuitName, String peeringName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner
      description: all stats from an express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStats(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getPeeringStats(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getPeeringStats(String resourceGroupName, String circuitName, String peeringName, Context context)
  nameWithType: ExpressRouteCircuitsClient.getPeeringStats(String resourceGroupName, String circuitName, String peeringName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStats(String resourceGroupName, String circuitName, String peeringName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStats*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all stats from an express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitStatsInner getPeeringStats(String resourceGroupName, String circuitName, String peeringName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner
      description: all stats from an express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getPeeringStatsAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getPeeringStatsAsync(String resourceGroupName, String circuitName, String peeringName)
  nameWithType: ExpressRouteCircuitsClient.getPeeringStatsAsync(String resourceGroupName, String circuitName, String peeringName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsAsync(String resourceGroupName, String circuitName, String peeringName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all stats from an express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitStatsInner> getPeeringStatsAsync(String resourceGroupName, String circuitName, String peeringName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner>
      description: all stats from an express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getPeeringStatsAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getPeeringStatsAsync(String resourceGroupName, String circuitName, String peeringName, Context context)
  nameWithType: ExpressRouteCircuitsClient.getPeeringStatsAsync(String resourceGroupName, String circuitName, String peeringName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsAsync(String resourceGroupName, String circuitName, String peeringName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all stats from an express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitStatsInner> getPeeringStatsAsync(String resourceGroupName, String circuitName, String peeringName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner>
      description: all stats from an express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getPeeringStatsWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getPeeringStatsWithResponseAsync(String resourceGroupName, String circuitName, String peeringName)
  nameWithType: ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync(String resourceGroupName, String circuitName, String peeringName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync(String resourceGroupName, String circuitName, String peeringName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all stats from an express route circuit in a resource group.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitStatsInner>> getPeeringStatsWithResponseAsync(String resourceGroupName, String circuitName, String peeringName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner>>
      description: all stats from an express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getPeeringStatsWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getPeeringStatsWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, Context context)
  nameWithType: ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all stats from an express route circuit in a resource group.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitStatsInner>> getPeeringStatsWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner>>
      description: all stats from an express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStats(java.lang.String,java.lang.String)
  id: getStats(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getStats(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.getStats(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStats(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStats*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the stats from an express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitStatsInner getStats(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner
      description: all the stats from an express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStats(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getStats(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getStats(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.getStats(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStats(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStats*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the stats from an express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitStatsInner getStats(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner
      description: all the stats from an express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsAsync(java.lang.String,java.lang.String)
  id: getStatsAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getStatsAsync(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.getStatsAsync(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsAsync(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the stats from an express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitStatsInner> getStatsAsync(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner>
      description: all the stats from an express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getStatsAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getStatsAsync(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.getStatsAsync(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsAsync(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the stats from an express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitStatsInner> getStatsAsync(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner>
      description: all the stats from an express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsWithResponseAsync(java.lang.String,java.lang.String)
  id: getStatsWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getStatsWithResponseAsync(String resourceGroupName, String circuitName)
  nameWithType: ExpressRouteCircuitsClient.getStatsWithResponseAsync(String resourceGroupName, String circuitName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsWithResponseAsync(String resourceGroupName, String circuitName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the stats from an express route circuit in a resource group.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitStatsInner>> getStatsWithResponseAsync(String resourceGroupName, String circuitName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner>>
      description: all the stats from an express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getStatsWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: getStatsWithResponseAsync(String resourceGroupName, String circuitName, Context context)
  nameWithType: ExpressRouteCircuitsClient.getStatsWithResponseAsync(String resourceGroupName, String circuitName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsWithResponseAsync(String resourceGroupName, String circuitName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the stats from an express route circuit in a resource group.
  syntax:
    content: public Mono<Response<ExpressRouteCircuitStatsInner>> getStatsWithResponseAsync(String resourceGroupName, String circuitName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner>>
      description: all the stats from an express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: list()
  nameWithType: ExpressRouteCircuitsClient.list()
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.list()
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.list*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the express route circuits in a subscription.
  syntax:
    content: public PagedIterable<ExpressRouteCircuitInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: all the express route circuits in a subscription.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: list(Context context)
  nameWithType: ExpressRouteCircuitsClient.list(Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.list(Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.list*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the express route circuits in a subscription.
  syntax:
    content: public PagedIterable<ExpressRouteCircuitInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: all the express route circuits in a subscription.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAllNextSinglePageAsync(java.lang.String)
  id: listAllNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listAllNextSinglePageAsync(String nextLink)
  nameWithType: ExpressRouteCircuitsClient.listAllNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAllNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAllNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ExpressRouteCircuitInner>> listAllNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: response for ListExpressRouteCircuit API service call.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAllNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listAllNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listAllNextSinglePageAsync(String nextLink, Context context)
  nameWithType: ExpressRouteCircuitsClient.listAllNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAllNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAllNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ExpressRouteCircuitInner>> listAllNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: response for ListExpressRouteCircuit API service call.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listArpTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.listArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTable*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitsArpTableListResultInner listArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listArpTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.listArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTable*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitsArpTableListResultInner listArpTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listArpTableAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listArpTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.listArpTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitsArpTableListResultInner> listArpTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listArpTableAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listArpTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.listArpTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitsArpTableListResultInner> listArpTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listArpTableWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listArpTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.listArpTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> listArpTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listArpTableWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listArpTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.listArpTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised ARP table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> listArpTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the currently advertised ARP table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listAsync()
  nameWithType: ExpressRouteCircuitsClient.listAsync()
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAsync()
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the express route circuits in a subscription.
  syntax:
    content: public PagedFlux<ExpressRouteCircuitInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: all the express route circuits in a subscription.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAsync(com.azure.core.util.Context)
  id: listAsync(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listAsync(Context context)
  nameWithType: ExpressRouteCircuitsClient.listAsync(Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAsync(Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the express route circuits in a subscription.
  syntax:
    content: public PagedFlux<ExpressRouteCircuitInner> listAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: all the express route circuits in a subscription.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: ExpressRouteCircuitsClient.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the express route circuits in a resource group.
  syntax:
    content: public PagedIterable<ExpressRouteCircuitInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: all the express route circuits in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: ExpressRouteCircuitsClient.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the express route circuits in a resource group.
  syntax:
    content: public PagedIterable<ExpressRouteCircuitInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: all the express route circuits in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: ExpressRouteCircuitsClient.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the express route circuits in a resource group.
  syntax:
    content: public PagedFlux<ExpressRouteCircuitInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: all the express route circuits in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName, Context context)
  nameWithType: ExpressRouteCircuitsClient.listByResourceGroupAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the express route circuits in a resource group.
  syntax:
    content: public PagedFlux<ExpressRouteCircuitInner> listByResourceGroupAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: all the express route circuits in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync(java.lang.String)
  id: listByResourceGroupSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName)
  nameWithType: ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the express route circuits in a resource group.
  syntax:
    content: public Mono<PagedResponse<ExpressRouteCircuitInner>> listByResourceGroupSinglePageAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: all the express route circuits in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  nameWithType: ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the express route circuits in a resource group.
  syntax:
    content: public Mono<PagedResponse<ExpressRouteCircuitInner>> listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: all the express route circuits in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listNextSinglePageAsync(java.lang.String)
  id: listNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink)
  nameWithType: ExpressRouteCircuitsClient.listNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ExpressRouteCircuitInner>> listNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: response for ListExpressRouteCircuit API service call.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink, Context context)
  nameWithType: ExpressRouteCircuitsClient.listNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ExpressRouteCircuitInner>> listNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: response for ListExpressRouteCircuit API service call.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listRoutesTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.listRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTable*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitsRoutesTableListResultInner listRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listRoutesTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.listRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTable*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitsRoutesTableListResultInner listRoutesTable(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listRoutesTableAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listRoutesTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitsRoutesTableListResultInner> listRoutesTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listRoutesTableAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listRoutesTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitsRoutesTableListResultInner> listRoutesTableAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummary(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listRoutesTableSummary(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummary*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitsRoutesTableSummaryListResultInner listRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummary(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listRoutesTableSummary(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummary*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public ExpressRouteCircuitsRoutesTableSummaryListResultInner listRoutesTableSummary(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listRoutesTableSummaryAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listRoutesTableSummaryAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableSummaryAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitsRoutesTableSummaryListResultInner> listRoutesTableSummaryAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listRoutesTableSummaryAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listRoutesTableSummaryAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableSummaryAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<ExpressRouteCircuitsRoutesTableSummaryListResultInner> listRoutesTableSummaryAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listRoutesTableSummaryWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listRoutesTableSummaryWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> listRoutesTableSummaryWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listRoutesTableSummaryWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listRoutesTableSummaryWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table summary associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> listRoutesTableSummaryWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: >-
        the currently advertised routes table summary associated with the express route circuit in a resource
             group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listRoutesTableWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listRoutesTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> listRoutesTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listRoutesTableWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listRoutesTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets the currently advertised routes table associated with the express route circuit in a resource group.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> listRoutesTableWithResponseAsync(String resourceGroupName, String circuitName, String peeringName, String devicePath, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the express route circuit.
    - id: peeringName
      type: java.lang.String
      description: The name of the peering.
    - id: devicePath
      type: java.lang.String
      description: The path of the device.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the currently advertised routes table associated with the express route circuit in a resource group.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listSinglePageAsync()
  id: listSinglePageAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listSinglePageAsync()
  nameWithType: ExpressRouteCircuitsClient.listSinglePageAsync()
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listSinglePageAsync()
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the express route circuits in a subscription.
  syntax:
    content: public Mono<PagedResponse<ExpressRouteCircuitInner>> listSinglePageAsync()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: all the express route circuits in a subscription.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listSinglePageAsync(com.azure.core.util.Context)
  id: listSinglePageAsync(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: listSinglePageAsync(Context context)
  nameWithType: ExpressRouteCircuitsClient.listSinglePageAsync(Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listSinglePageAsync(Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Gets all the express route circuits in a subscription.
  syntax:
    content: public Mono<PagedResponse<ExpressRouteCircuitInner>> listSinglePageAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
      description: all the express route circuits in a subscription.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: updateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: updateTags(String resourceGroupName, String circuitName, Map<String,String> tags)
  nameWithType: ExpressRouteCircuitsClient.updateTags(String resourceGroupName, String circuitName, Map<String,String> tags)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTags(String resourceGroupName, String circuitName, Map<String,String> tags)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTags*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public ExpressRouteCircuitInner updateTags(String resourceGroupName, String circuitName, Map<String,String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  id: updateTags(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: updateTags(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  nameWithType: ExpressRouteCircuitsClient.updateTags(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTags(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTags*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public ExpressRouteCircuitInner updateTags(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: updateTagsAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: updateTagsAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
  nameWithType: ExpressRouteCircuitsClient.updateTagsAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public Mono<ExpressRouteCircuitInner> updateTagsAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  id: updateTagsAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: updateTagsAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  nameWithType: ExpressRouteCircuitsClient.updateTagsAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public Mono<ExpressRouteCircuitInner> updateTagsAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: updateTagsWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: updateTagsWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
  nameWithType: ExpressRouteCircuitsClient.updateTagsWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateTagsWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: expressRouteCircuit resource.
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  id: updateTagsWithResponseAsync(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.0.0-beta.2
  parent: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient
  langs:
  - java
  name: updateTagsWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  nameWithType: ExpressRouteCircuitsClient.updateTagsWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
  overload: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.network.fluent
  summary: Updates an express route circuit tags.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateTagsWithResponseAsync(String resourceGroupName, String circuitName, Map<String,String> tags, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: circuitName
      type: java.lang.String
      description: The name of the circuit.
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: Resource tags.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: expressRouteCircuit resource.
references:
- uid: com.azure.resourcemanager.network.NetworkManagementClient
  name: NetworkManagementClient
  nameWithType: NetworkManagementClient
  fullName: com.azure.resourcemanager.network.NetworkManagementClient
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.ExpressRouteCircuitsClient*
  name: ExpressRouteCircuitsClient
  nameWithType: ExpressRouteCircuitsClient.ExpressRouteCircuitsClient
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.ExpressRouteCircuitsClient
  package: com.azure.resourcemanager.network.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDelete*
  name: beginDelete
  nameWithType: ExpressRouteCircuitsClient.beginDelete
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDelete
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteAsync*
  name: deleteAsync
  nameWithType: ExpressRouteCircuitsClient.deleteAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.deleteAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.delete*
  name: delete
  nameWithType: ExpressRouteCircuitsClient.delete
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.delete
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
    name: ExpressRouteCircuitInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
    name: ExpressRouteCircuitInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: ExpressRouteCircuitsClient.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroupAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
  name: ExpressRouteCircuitInner
  nameWithType: ExpressRouteCircuitInner
  fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: ExpressRouteCircuitsClient.getByResourceGroup
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getByResourceGroup
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
    name: ExpressRouteCircuitInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
    name: ExpressRouteCircuitInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: ExpressRouteCircuitsClient.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdate
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: ExpressRouteCircuitsClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdateAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: ExpressRouteCircuitsClient.createOrUpdate
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.createOrUpdate
  package: com.azure.resourcemanager.network.fluent
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsWithResponseAsync*
  name: updateTagsWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.updateTagsWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTags*
  name: beginUpdateTags
  nameWithType: ExpressRouteCircuitsClient.beginUpdateTags
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTags
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsAsync*
  name: updateTagsAsync
  nameWithType: ExpressRouteCircuitsClient.updateTagsAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTagsAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTags*
  name: updateTags
  nameWithType: ExpressRouteCircuitsClient.updateTags
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.updateTags
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableWithResponseAsync*
  name: listArpTableWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.listArpTableWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
    name: ExpressRouteCircuitsArpTableListResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
    name: ExpressRouteCircuitsArpTableListResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTable*
  name: beginListArpTable
  nameWithType: ExpressRouteCircuitsClient.beginListArpTable
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTable
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
    name: ExpressRouteCircuitsArpTableListResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableAsync*
  name: listArpTableAsync
  nameWithType: ExpressRouteCircuitsClient.listArpTableAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTableAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
  name: ExpressRouteCircuitsArpTableListResultInner
  nameWithType: ExpressRouteCircuitsArpTableListResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTable*
  name: listArpTable
  nameWithType: ExpressRouteCircuitsClient.listArpTable
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listArpTable
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync*
  name: listRoutesTableWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
    name: ExpressRouteCircuitsRoutesTableListResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
    name: ExpressRouteCircuitsRoutesTableListResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTable*
  name: beginListRoutesTable
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTable
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTable
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
    name: ExpressRouteCircuitsRoutesTableListResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableAsync*
  name: listRoutesTableAsync
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
  name: ExpressRouteCircuitsRoutesTableListResultInner
  nameWithType: ExpressRouteCircuitsRoutesTableListResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTable*
  name: listRoutesTable
  nameWithType: ExpressRouteCircuitsClient.listRoutesTable
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTable
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync*
  name: listRoutesTableSummaryWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
    name: ExpressRouteCircuitsRoutesTableSummaryListResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
    name: ExpressRouteCircuitsRoutesTableSummaryListResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummary*
  name: beginListRoutesTableSummary
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableSummary
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummary
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
    name: ExpressRouteCircuitsRoutesTableSummaryListResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryAsync*
  name: listRoutesTableSummaryAsync
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableSummaryAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummaryAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
  name: ExpressRouteCircuitsRoutesTableSummaryListResultInner
  nameWithType: ExpressRouteCircuitsRoutesTableSummaryListResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummary*
  name: listRoutesTableSummary
  nameWithType: ExpressRouteCircuitsClient.listRoutesTableSummary
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listRoutesTableSummary
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner
    name: ExpressRouteCircuitStatsInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsWithResponseAsync*
  name: getStatsWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.getStatsWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner
    name: ExpressRouteCircuitStatsInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsAsync*
  name: getStatsAsync
  nameWithType: ExpressRouteCircuitsClient.getStatsAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStatsAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner
  name: ExpressRouteCircuitStatsInner
  nameWithType: ExpressRouteCircuitStatsInner
  fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitStatsInner
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStats*
  name: getStats
  nameWithType: ExpressRouteCircuitsClient.getStats
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getStats
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync*
  name: getPeeringStatsWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsAsync*
  name: getPeeringStatsAsync
  nameWithType: ExpressRouteCircuitsClient.getPeeringStatsAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStatsAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStats*
  name: getPeeringStats
  nameWithType: ExpressRouteCircuitsClient.getPeeringStats
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.getPeeringStats
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
    name: ExpressRouteCircuitInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync*
  name: listByResourceGroupSinglePageAsync
  nameWithType: ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupSinglePageAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
    name: ExpressRouteCircuitInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: ExpressRouteCircuitsClient.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroupAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
    name: ExpressRouteCircuitInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: ExpressRouteCircuitsClient.listByResourceGroup
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listByResourceGroup
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: ExpressRouteCircuitsClient.listSinglePageAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listSinglePageAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAsync*
  name: listAsync
  nameWithType: ExpressRouteCircuitsClient.listAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.list*
  name: list
  nameWithType: ExpressRouteCircuitsClient.list
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.list
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync*
  name: beginDeleteWithoutPollingWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync*
  name: beginDeleteWithoutPollingAsync
  nameWithType: ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPolling*
  name: beginDeleteWithoutPolling
  nameWithType: ExpressRouteCircuitsClient.beginDeleteWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginDeleteWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync*
  name: beginCreateOrUpdateWithoutPollingAsync
  nameWithType: ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling*
  name: beginCreateOrUpdateWithoutPolling
  nameWithType: ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginCreateOrUpdateWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync*
  name: beginUpdateTagsWithoutPollingWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync*
  name: beginUpdateTagsWithoutPollingAsync
  nameWithType: ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling*
  name: beginUpdateTagsWithoutPolling
  nameWithType: ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginUpdateTagsWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
    name: ExpressRouteCircuitsArpTableListResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync*
  name: beginListArpTableWithoutPollingWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync*
  name: beginListArpTableWithoutPollingAsync
  nameWithType: ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPolling*
  name: beginListArpTableWithoutPolling
  nameWithType: ExpressRouteCircuitsClient.beginListArpTableWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListArpTableWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
    name: ExpressRouteCircuitsRoutesTableListResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync*
  name: beginListRoutesTableWithoutPollingWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync*
  name: beginListRoutesTableWithoutPollingAsync
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling*
  name: beginListRoutesTableWithoutPolling
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
    name: ExpressRouteCircuitsRoutesTableSummaryListResultInner
    fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync*
  name: beginListRoutesTableSummaryWithoutPollingWithResponseAsync
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync*
  name: beginListRoutesTableSummaryWithoutPollingAsync
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPollingAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling*
  name: beginListRoutesTableSummaryWithoutPolling
  nameWithType: ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.beginListRoutesTableSummaryWithoutPolling
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: ExpressRouteCircuitsClient.listNextSinglePageAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listNextSinglePageAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAllNextSinglePageAsync*
  name: listAllNextSinglePageAsync
  nameWithType: ExpressRouteCircuitsClient.listAllNextSinglePageAsync
  fullName: com.azure.resourcemanager.network.fluent.ExpressRouteCircuitsClient.listAllNextSinglePageAsync
  package: com.azure.resourcemanager.network.fluent
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
  name: InnerSupportsGet<ExpressRouteCircuitInner>
  nameWithType: InnerSupportsGet<ExpressRouteCircuitInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
  name: InnerSupportsListing<ExpressRouteCircuitInner>
  nameWithType: InnerSupportsListing<ExpressRouteCircuitInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
  name: ExpressRouteCircuitInner>,ExpressRouteCircuitInner
  nameWithType: ExpressRouteCircuitInner>,ExpressRouteCircuitInner
  fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitInner
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
  name: ExpressRouteCircuitsArpTableListResultInner>,ExpressRouteCircuitsArpTableListResultInner
  nameWithType: ExpressRouteCircuitsArpTableListResultInner>,ExpressRouteCircuitsArpTableListResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsArpTableListResultInner
- uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
  name: ExpressRouteCircuitsRoutesTableListResultInner>,ExpressRouteCircuitsRoutesTableListResultInner
  nameWithType: ExpressRouteCircuitsRoutesTableListResultInner>,ExpressRouteCircuitsRoutesTableListResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableListResultInner
- uid: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
  name: ExpressRouteCircuitsRoutesTableSummaryListResultInner>,ExpressRouteCircuitsRoutesTableSummaryListResultInner
  nameWithType: ExpressRouteCircuitsRoutesTableSummaryListResultInner>,ExpressRouteCircuitsRoutesTableSummaryListResultInner
  fullName: com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner>,com.azure.resourcemanager.network.fluent.inner.ExpressRouteCircuitsRoutesTableSummaryListResultInner
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
