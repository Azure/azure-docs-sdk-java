### YamlMime:JavaType
uid: "com.azure.maps.route.MapsRouteClient"
fullName: "com.azure.maps.route.MapsRouteClient"
name: "MapsRouteClient"
nameWithType: "MapsRouteClient"
summary: "Initializes a new instance of the synchronous Route<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **MapsRouteClient**"
methods:
- uid: "com.azure.maps.route.MapsRouteClient.beginGetRouteDirectionsBatch(java.lang.String)"
  fullName: "com.azure.maps.route.MapsRouteClient.beginGetRouteDirectionsBatch(String batchId)"
  name: "beginGetRouteDirectionsBatch(String batchId)"
  nameWithType: "MapsRouteClient.beginGetRouteDirectionsBatch(String batchId)"
  summary: "Get Route Directions Batch Id"
  parameters:
  - description: "the batch id received from a previous call to route directions batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SyncPoller<RouteDirectionsBatchResult,RouteDirectionsBatchResult> beginGetRouteDirectionsBatch(String batchId)"
  desc: "Get Route Directions Batch Id"
  returns:
    description: "this object is returned from a successful Route Directions call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.route.models.RouteDirectionsBatchResult?alt=com.azure.maps.route.models.RouteDirectionsBatchResult&text=RouteDirectionsBatchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.route.models.RouteDirectionsBatchResult?alt=com.azure.maps.route.models.RouteDirectionsBatchResult&text=RouteDirectionsBatchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.route.MapsRouteClient.beginGetRouteDirectionsBatch(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.maps.route.MapsRouteClient.beginGetRouteDirectionsBatch(String batchId, Context context)"
  name: "beginGetRouteDirectionsBatch(String batchId, Context context)"
  nameWithType: "MapsRouteClient.beginGetRouteDirectionsBatch(String batchId, Context context)"
  summary: "Get Route Directions Batch Id"
  parameters:
  - description: "the batch id received from a previous call to route directions batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<RouteDirectionsBatchResult,RouteDirectionsBatchResult> beginGetRouteDirectionsBatch(String batchId, Context context)"
  desc: "Get Route Directions Batch Id"
  returns:
    description: "this object is returned from a successful Route Directions call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.route.models.RouteDirectionsBatchResult?alt=com.azure.maps.route.models.RouteDirectionsBatchResult&text=RouteDirectionsBatchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.route.models.RouteDirectionsBatchResult?alt=com.azure.maps.route.models.RouteDirectionsBatchResult&text=RouteDirectionsBatchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.route.MapsRouteClient.beginGetRouteMatrix(com.azure.maps.route.models.RouteMatrixOptions)"
  fullName: "com.azure.maps.route.MapsRouteClient.beginGetRouteMatrix(RouteMatrixOptions options)"
  name: "beginGetRouteMatrix(RouteMatrixOptions options)"
  nameWithType: "MapsRouteClient.beginGetRouteMatrix(RouteMatrixOptions options)"
  summary: "Request Route Matrix"
  parameters:
  - description: "the <code>RouteMatrixOptions</code> applicable to this query."
    name: "options"
    type: "<xref href=\"com.azure.maps.route.models.RouteMatrixOptions?alt=com.azure.maps.route.models.RouteMatrixOptions&text=RouteMatrixOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<RouteMatrixResult,RouteMatrixResult> beginGetRouteMatrix(RouteMatrixOptions options)"
  desc: "Request Route Matrix\n\n```java\nSystem.out.println(\"Request route matrix\");\n RouteMatrixQuery matrixQuery = new RouteMatrixQuery();\n\n // origins\n GeoPointCollection origins = new GeoPointCollection(Arrays.asList(\n     new GeoPoint(52.36006, 4.85106),\n     new GeoPoint(52.36187, 4.85056)\n ));\n\n // destinations\n GeoPointCollection destinations = new GeoPointCollection(Arrays.asList(\n     new GeoPoint(52.36241, 4.85003),\n     new GeoPoint(52.50931, 13.42937)\n ));\n\n matrixQuery.setDestinations(destinations);\n matrixQuery.setOrigins(origins);\n\n RouteMatrixOptions matrixOptions = new RouteMatrixOptions(matrixQuery);\n client.beginGetRouteMatrix(matrixOptions).getFinalResult();\n```"
  returns:
    description: "this object is returned from a successful Route Matrix call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.route.models.RouteMatrixResult?alt=com.azure.maps.route.models.RouteMatrixResult&text=RouteMatrixResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.route.models.RouteMatrixResult?alt=com.azure.maps.route.models.RouteMatrixResult&text=RouteMatrixResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.route.MapsRouteClient.beginGetRouteMatrix(com.azure.maps.route.models.RouteMatrixOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.route.MapsRouteClient.beginGetRouteMatrix(RouteMatrixOptions options, Context context)"
  name: "beginGetRouteMatrix(RouteMatrixOptions options, Context context)"
  nameWithType: "MapsRouteClient.beginGetRouteMatrix(RouteMatrixOptions options, Context context)"
  summary: "Request Route Matrix"
  parameters:
  - description: "the <code>RouteMatrixOptions</code> applicable to this query."
    name: "options"
    type: "<xref href=\"com.azure.maps.route.models.RouteMatrixOptions?alt=com.azure.maps.route.models.RouteMatrixOptions&text=RouteMatrixOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<RouteMatrixResult,RouteMatrixResult> beginGetRouteMatrix(RouteMatrixOptions options, Context context)"
  desc: "Request Route Matrix\n\n```java\nSystem.out.println(\"Request route matrix\");\n RouteMatrixQuery matrixQuery = new RouteMatrixQuery();\n\n // origins\n GeoPointCollection origins = new GeoPointCollection(Arrays.asList(\n     new GeoPoint(52.36006, 4.85106),\n     new GeoPoint(52.36187, 4.85056)\n ));\n\n // destinations\n GeoPointCollection destinations = new GeoPointCollection(Arrays.asList(\n     new GeoPoint(52.36241, 4.85003),\n     new GeoPoint(52.50931, 13.42937)\n ));\n\n matrixQuery.setDestinations(destinations);\n matrixQuery.setOrigins(origins);\n\n RouteMatrixOptions matrixOptions = new RouteMatrixOptions(matrixQuery);\n client.beginGetRouteMatrix(matrixOptions).getFinalResult();\n```"
  returns:
    description: "this object is returned from a successful Route Matrix call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.route.models.RouteMatrixResult?alt=com.azure.maps.route.models.RouteMatrixResult&text=RouteMatrixResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.route.models.RouteMatrixResult?alt=com.azure.maps.route.models.RouteMatrixResult&text=RouteMatrixResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.route.MapsRouteClient.beginGetRouteMatrix(java.lang.String)"
  fullName: "com.azure.maps.route.MapsRouteClient.beginGetRouteMatrix(String matrixId)"
  name: "beginGetRouteMatrix(String matrixId)"
  nameWithType: "MapsRouteClient.beginGetRouteMatrix(String matrixId)"
  summary: "Get Route Matrix Batch"
  parameters:
  - description: "Matrix id received after the Matrix Route request was accepted successfully."
    name: "matrixId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SyncPoller<RouteMatrixResult,RouteMatrixResult> beginGetRouteMatrix(String matrixId)"
  desc: "Get Route Matrix Batch"
  returns:
    description: "this object is returned from a successful Route Matrix call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.route.models.RouteMatrixResult?alt=com.azure.maps.route.models.RouteMatrixResult&text=RouteMatrixResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.route.models.RouteMatrixResult?alt=com.azure.maps.route.models.RouteMatrixResult&text=RouteMatrixResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.route.MapsRouteClient.beginGetRouteMatrix(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.maps.route.MapsRouteClient.beginGetRouteMatrix(String matrixId, Context context)"
  name: "beginGetRouteMatrix(String matrixId, Context context)"
  nameWithType: "MapsRouteClient.beginGetRouteMatrix(String matrixId, Context context)"
  summary: "Get Route Matrix Batch"
  parameters:
  - description: "Matrix id received after the Matrix Route request was accepted successfully."
    name: "matrixId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<RouteMatrixResult,RouteMatrixResult> beginGetRouteMatrix(String matrixId, Context context)"
  desc: "Get Route Matrix Batch"
  returns:
    description: "this object is returned from a successful Route Matrix call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.route.models.RouteMatrixResult?alt=com.azure.maps.route.models.RouteMatrixResult&text=RouteMatrixResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.route.models.RouteMatrixResult?alt=com.azure.maps.route.models.RouteMatrixResult&text=RouteMatrixResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.route.MapsRouteClient.beginRequestRouteDirectionsBatch(java.util.List<com.azure.maps.route.models.RouteDirectionsOptions>)"
  fullName: "com.azure.maps.route.MapsRouteClient.beginRequestRouteDirectionsBatch(List<RouteDirectionsOptions> optionsList)"
  name: "beginRequestRouteDirectionsBatch(List<RouteDirectionsOptions> optionsList)"
  nameWithType: "MapsRouteClient.beginRequestRouteDirectionsBatch(List<RouteDirectionsOptions> optionsList)"
  summary: "Get Route Directions Batch"
  parameters:
  - description: "the list of <code>RouteDirectionsOptions</code> used in this query"
    name: "optionsList"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.route.models.RouteDirectionsOptions?alt=com.azure.maps.route.models.RouteDirectionsOptions&text=RouteDirectionsOptions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public SyncPoller<RouteDirectionsBatchResult,RouteDirectionsBatchResult> beginRequestRouteDirectionsBatch(List<RouteDirectionsOptions> optionsList)"
  desc: "Get Route Directions Batch\n\n```java\nRouteDirectionsOptions options1 = new RouteDirectionsOptions(\n     Arrays.asList(new GeoPosition(-122.128384, 47.639987),\n         new GeoPosition(-122.184408, 47.621252),\n         new GeoPosition(-122.332000, 47.596437)))\n     .setRouteType(RouteType.FASTEST)\n     .setTravelMode(TravelMode.CAR)\n     .setMaxAlternatives(5);\n\n RouteDirectionsOptions options2 = new RouteDirectionsOptions(\n     Arrays.asList(new GeoPosition(-122.348934, 47.620659),\n         new GeoPosition(-122.342015, 47.610101)))\n     .setRouteType(RouteType.ECONOMY)\n     .setTravelMode(TravelMode.BICYCLE)\n     .setUseTrafficData(false);\n\n RouteDirectionsOptions options3 = new RouteDirectionsOptions(\n     Arrays.asList(new GeoPosition(-73.985108, 40.759856),\n         new GeoPosition(-73.973506, 40.771136)))\n     .setRouteType(RouteType.SHORTEST)\n     .setTravelMode(TravelMode.PEDESTRIAN);\n\n System.out.println(\"Get Route Directions Batch\");\n\n List<RouteDirectionsOptions> optionsList = Arrays.asList(options1, options2, options3);\n SyncPoller<RouteDirectionsBatchResult, RouteDirectionsBatchResult> poller =\n     client.beginRequestRouteDirectionsBatch(optionsList);\n poller.getFinalResult();\n```"
  returns:
    description: "this object is returned from a successful Route Directions call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.route.models.RouteDirectionsBatchResult?alt=com.azure.maps.route.models.RouteDirectionsBatchResult&text=RouteDirectionsBatchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.route.models.RouteDirectionsBatchResult?alt=com.azure.maps.route.models.RouteDirectionsBatchResult&text=RouteDirectionsBatchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.route.MapsRouteClient.beginRequestRouteDirectionsBatch(java.util.List<com.azure.maps.route.models.RouteDirectionsOptions>,com.azure.core.util.Context)"
  fullName: "com.azure.maps.route.MapsRouteClient.beginRequestRouteDirectionsBatch(List<RouteDirectionsOptions> optionsList, Context context)"
  name: "beginRequestRouteDirectionsBatch(List<RouteDirectionsOptions> optionsList, Context context)"
  nameWithType: "MapsRouteClient.beginRequestRouteDirectionsBatch(List<RouteDirectionsOptions> optionsList, Context context)"
  summary: "Get Route Directions Batch"
  parameters:
  - description: "the list of <code>RouteDirectionsOptions</code> used in this query"
    name: "optionsList"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.maps.route.models.RouteDirectionsOptions?alt=com.azure.maps.route.models.RouteDirectionsOptions&text=RouteDirectionsOptions\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<RouteDirectionsBatchResult,RouteDirectionsBatchResult> beginRequestRouteDirectionsBatch(List<RouteDirectionsOptions> optionsList, Context context)"
  desc: "Get Route Directions Batch\n\n```java\nRouteDirectionsOptions options1 = new RouteDirectionsOptions(\n     Arrays.asList(new GeoPosition(-122.128384, 47.639987),\n         new GeoPosition(-122.184408, 47.621252),\n         new GeoPosition(-122.332000, 47.596437)))\n     .setRouteType(RouteType.FASTEST)\n     .setTravelMode(TravelMode.CAR)\n     .setMaxAlternatives(5);\n\n RouteDirectionsOptions options2 = new RouteDirectionsOptions(\n     Arrays.asList(new GeoPosition(-122.348934, 47.620659),\n         new GeoPosition(-122.342015, 47.610101)))\n     .setRouteType(RouteType.ECONOMY)\n     .setTravelMode(TravelMode.BICYCLE)\n     .setUseTrafficData(false);\n\n RouteDirectionsOptions options3 = new RouteDirectionsOptions(\n     Arrays.asList(new GeoPosition(-73.985108, 40.759856),\n         new GeoPosition(-73.973506, 40.771136)))\n     .setRouteType(RouteType.SHORTEST)\n     .setTravelMode(TravelMode.PEDESTRIAN);\n\n System.out.println(\"Get Route Directions Batch\");\n\n List<RouteDirectionsOptions> optionsList = Arrays.asList(options1, options2, options3);\n SyncPoller<RouteDirectionsBatchResult, RouteDirectionsBatchResult> poller =\n     client.beginRequestRouteDirectionsBatch(optionsList);\n poller.getFinalResult();\n```"
  returns:
    description: "this object is returned from a successful Route Directions call."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.route.models.RouteDirectionsBatchResult?alt=com.azure.maps.route.models.RouteDirectionsBatchResult&text=RouteDirectionsBatchResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.maps.route.models.RouteDirectionsBatchResult?alt=com.azure.maps.route.models.RouteDirectionsBatchResult&text=RouteDirectionsBatchResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.route.MapsRouteClient.getRouteDirections(com.azure.maps.route.models.RouteDirectionsOptions)"
  fullName: "com.azure.maps.route.MapsRouteClient.getRouteDirections(RouteDirectionsOptions options)"
  name: "getRouteDirections(RouteDirectionsOptions options)"
  nameWithType: "MapsRouteClient.getRouteDirections(RouteDirectionsOptions options)"
  summary: "Get Route Directions"
  parameters:
  - description: "the <code>RouteDirectionsOptions</code> applicable to this query"
    name: "options"
    type: "<xref href=\"com.azure.maps.route.models.RouteDirectionsOptions?alt=com.azure.maps.route.models.RouteDirectionsOptions&text=RouteDirectionsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouteDirections getRouteDirections(RouteDirectionsOptions options)"
  desc: "Get Route Directions\n\n```java\nSystem.out.println(\"Get route directions\");\n List<GeoPosition> routePoints = Arrays.asList(\n     new GeoPosition(13.42936, 52.50931),\n     new GeoPosition(13.43872, 52.50274));\n RouteDirectionsOptions routeOptions = new RouteDirectionsOptions(routePoints);\n RouteDirections directions = client.getRouteDirections(routeOptions);\n RouteReport report = directions.getReport(); // get the report and use it\n```"
  returns:
    description: "this object is returned from a successful Route Directions call."
    type: "<xref href=\"com.azure.maps.route.models.RouteDirections?alt=com.azure.maps.route.models.RouteDirections&text=RouteDirections\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.route.MapsRouteClient.getRouteDirections(com.azure.maps.route.models.RouteDirectionsOptions,com.azure.maps.route.models.RouteDirectionsParameters)"
  fullName: "com.azure.maps.route.MapsRouteClient.getRouteDirections(RouteDirectionsOptions options, RouteDirectionsParameters parameters)"
  name: "getRouteDirections(RouteDirectionsOptions options, RouteDirectionsParameters parameters)"
  nameWithType: "MapsRouteClient.getRouteDirections(RouteDirectionsOptions options, RouteDirectionsParameters parameters)"
  summary: "Get Route Directions"
  parameters:
  - description: "the <code>RouteDirectionsOptions</code> applicable to this query"
    name: "options"
    type: "<xref href=\"com.azure.maps.route.models.RouteDirectionsOptions?alt=com.azure.maps.route.models.RouteDirectionsOptions&text=RouteDirectionsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>RouteDirectionsParameters</code> applicable to this query"
    name: "parameters"
    type: "<xref href=\"com.azure.maps.route.models.RouteDirectionsParameters?alt=com.azure.maps.route.models.RouteDirectionsParameters&text=RouteDirectionsParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouteDirections getRouteDirections(RouteDirectionsOptions options, RouteDirectionsParameters parameters)"
  desc: "Get Route Directions\n\n```java\nSystem.out.println(\"Get route parameters\");\n // supporting points\n GeoCollection supportingPoints = new GeoCollection(\n     Arrays.asList(\n         new GeoPoint(13.42936, 52.5093),\n         new GeoPoint(13.42859, 52.50844)\n         ));\n\n // avoid areas\n List<GeoPolygon> polygons = Arrays.asList(\n     new GeoPolygon(\n         new GeoLinearRing(Arrays.asList(\n             new GeoPosition(-122.39456176757811, 47.489368981370724),\n             new GeoPosition(-122.00454711914061, 47.489368981370724),\n             new GeoPosition(-122.00454711914061, 47.65151268066222),\n             new GeoPosition(-122.39456176757811, 47.65151268066222),\n             new GeoPosition(-122.39456176757811, 47.489368981370724)\n         ))\n     ),\n     new GeoPolygon(\n         new GeoLinearRing(Arrays.asList(\n             new GeoPosition(100.0, 0.0),\n             new GeoPosition(101.0, 0.0),\n             new GeoPosition(101.0, 1.0),\n             new GeoPosition(100.0, 1.0),\n             new GeoPosition(100.0, 0.0)\n         ))\n     )\n );\n GeoPolygonCollection avoidAreas = new GeoPolygonCollection(polygons);\n RouteDirectionsParameters parameters = new RouteDirectionsParameters()\n     .setSupportingPoints(supportingPoints)\n     .setAvoidVignette(Arrays.asList(\"AUS\", \"CHE\"))\n     .setAvoidAreas(avoidAreas);\n client.getRouteDirections(routeOptions,\n     parameters);\n```"
  returns:
    description: "this object is returned from a successful Route Directions call."
    type: "<xref href=\"com.azure.maps.route.models.RouteDirections?alt=com.azure.maps.route.models.RouteDirections&text=RouteDirections\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.route.MapsRouteClient.getRouteDirectionsWithResponse(com.azure.maps.route.models.RouteDirectionsOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.route.MapsRouteClient.getRouteDirectionsWithResponse(RouteDirectionsOptions options, Context context)"
  name: "getRouteDirectionsWithResponse(RouteDirectionsOptions options, Context context)"
  nameWithType: "MapsRouteClient.getRouteDirectionsWithResponse(RouteDirectionsOptions options, Context context)"
  summary: "Get Route Directions"
  parameters:
  - description: "the <code>RouteDirectionsOptions</code> applicable to this query"
    name: "options"
    type: "<xref href=\"com.azure.maps.route.models.RouteDirectionsOptions?alt=com.azure.maps.route.models.RouteDirectionsOptions&text=RouteDirectionsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<RouteDirections> getRouteDirectionsWithResponse(RouteDirectionsOptions options, Context context)"
  desc: "Get Route Directions\n\n```java\nSystem.out.println(\"Get route directions\");\n List<GeoPosition> routePoints = Arrays.asList(\n     new GeoPosition(13.42936, 52.50931),\n     new GeoPosition(13.43872, 52.50274));\n RouteDirectionsOptions routeOptions = new RouteDirectionsOptions(routePoints);\n RouteDirections directions = client.getRouteDirections(routeOptions);\n RouteReport report = directions.getReport(); // get the report and use it\n```"
  returns:
    description: "this object is returned from a successful Route Directions call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.route.models.RouteDirections?alt=com.azure.maps.route.models.RouteDirections&text=RouteDirections\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.route.MapsRouteClient.getRouteDirectionsWithResponse(com.azure.maps.route.models.RouteDirectionsOptions,com.azure.maps.route.models.RouteDirectionsParameters,com.azure.core.util.Context)"
  fullName: "com.azure.maps.route.MapsRouteClient.getRouteDirectionsWithResponse(RouteDirectionsOptions options, RouteDirectionsParameters parameters, Context context)"
  name: "getRouteDirectionsWithResponse(RouteDirectionsOptions options, RouteDirectionsParameters parameters, Context context)"
  nameWithType: "MapsRouteClient.getRouteDirectionsWithResponse(RouteDirectionsOptions options, RouteDirectionsParameters parameters, Context context)"
  summary: "Get Route Directions"
  parameters:
  - description: "the <code>RouteDirectionsOptions</code> applicable to this query"
    name: "options"
    type: "<xref href=\"com.azure.maps.route.models.RouteDirectionsOptions?alt=com.azure.maps.route.models.RouteDirectionsOptions&text=RouteDirectionsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the <code>RouteDirectionsParameters</code> applicable to this query"
    name: "parameters"
    type: "<xref href=\"com.azure.maps.route.models.RouteDirectionsParameters?alt=com.azure.maps.route.models.RouteDirectionsParameters&text=RouteDirectionsParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<RouteDirections> getRouteDirectionsWithResponse(RouteDirectionsOptions options, RouteDirectionsParameters parameters, Context context)"
  desc: "Get Route Directions\n\n```java\nSystem.out.println(\"Get route parameters\");\n // supporting points\n GeoCollection supportingPoints = new GeoCollection(\n     Arrays.asList(\n         new GeoPoint(13.42936, 52.5093),\n         new GeoPoint(13.42859, 52.50844)\n         ));\n\n // avoid areas\n List<GeoPolygon> polygons = Arrays.asList(\n     new GeoPolygon(\n         new GeoLinearRing(Arrays.asList(\n             new GeoPosition(-122.39456176757811, 47.489368981370724),\n             new GeoPosition(-122.00454711914061, 47.489368981370724),\n             new GeoPosition(-122.00454711914061, 47.65151268066222),\n             new GeoPosition(-122.39456176757811, 47.65151268066222),\n             new GeoPosition(-122.39456176757811, 47.489368981370724)\n         ))\n     ),\n     new GeoPolygon(\n         new GeoLinearRing(Arrays.asList(\n             new GeoPosition(100.0, 0.0),\n             new GeoPosition(101.0, 0.0),\n             new GeoPosition(101.0, 1.0),\n             new GeoPosition(100.0, 1.0),\n             new GeoPosition(100.0, 0.0)\n         ))\n     )\n );\n GeoPolygonCollection avoidAreas = new GeoPolygonCollection(polygons);\n RouteDirectionsParameters parameters = new RouteDirectionsParameters()\n     .setSupportingPoints(supportingPoints)\n     .setAvoidVignette(Arrays.asList(\"AUS\", \"CHE\"))\n     .setAvoidAreas(avoidAreas);\n client.getRouteDirections(routeOptions,\n     parameters);\n```"
  returns:
    description: "this object is returned from a successful Route Directions call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.route.models.RouteDirections?alt=com.azure.maps.route.models.RouteDirections&text=RouteDirections\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.maps.route.MapsRouteClient.getRouteRange(com.azure.maps.route.models.RouteRangeOptions)"
  fullName: "com.azure.maps.route.MapsRouteClient.getRouteRange(RouteRangeOptions options)"
  name: "getRouteRange(RouteRangeOptions options)"
  nameWithType: "MapsRouteClient.getRouteRange(RouteRangeOptions options)"
  summary: "Get Route Range"
  parameters:
  - description: "the <code>RouteRangeOptions</code> applicable to this query"
    name: "options"
    type: "<xref href=\"com.azure.maps.route.models.RouteRangeOptions?alt=com.azure.maps.route.models.RouteRangeOptions&text=RouteRangeOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RouteRangeResult getRouteRange(RouteRangeOptions options)"
  desc: "Get Route Range\n\n```java\nSystem.out.println(\"Get route range\");\n RouteRangeOptions rangeOptions = new RouteRangeOptions(new GeoPosition(5.86605, 50.97452), Duration.ofSeconds(6000));\n client.getRouteRange(rangeOptions);\n```"
  returns:
    description: "this object is returned from a successful Route Range call."
    type: "<xref href=\"com.azure.maps.route.models.RouteRangeResult?alt=com.azure.maps.route.models.RouteRangeResult&text=RouteRangeResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.route.MapsRouteClient.getRouteRangeWithResponse(com.azure.maps.route.models.RouteRangeOptions,com.azure.core.util.Context)"
  fullName: "com.azure.maps.route.MapsRouteClient.getRouteRangeWithResponse(RouteRangeOptions options, Context context)"
  name: "getRouteRangeWithResponse(RouteRangeOptions options, Context context)"
  nameWithType: "MapsRouteClient.getRouteRangeWithResponse(RouteRangeOptions options, Context context)"
  summary: "Get Route Range"
  parameters:
  - description: "the <code>RouteRangeOptions</code> applicable to this query"
    name: "options"
    type: "<xref href=\"com.azure.maps.route.models.RouteRangeOptions?alt=com.azure.maps.route.models.RouteRangeOptions&text=RouteRangeOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<RouteRangeResult> getRouteRangeWithResponse(RouteRangeOptions options, Context context)"
  desc: "Get Route Range\n\n```java\nSystem.out.println(\"Get route range\");\n RouteRangeOptions rangeOptions = new RouteRangeOptions(new GeoPosition(5.86605, 50.97452), Duration.ofSeconds(6000));\n client.getRouteRange(rangeOptions);\n```"
  returns:
    description: "this object is returned from a successful Route Range call."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.route.models.RouteRangeResult?alt=com.azure.maps.route.models.RouteRangeResult&text=RouteRangeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous RouteClient type. Creating a sync client using a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureKeyCredential\"></xref>:\n\n```java\n// Authenticates using subscription key\n AzureKeyCredential keyCredential = new AzureKeyCredential(System.getenv(\"SUBSCRIPTION_KEY\"));\n\n // Creates a builder\n MapsRouteClientBuilder builder = new MapsRouteClientBuilder();\n builder.credential(keyCredential);\n builder.httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BODY_AND_HEADERS));\n\n // Builds the client\n MapsRouteClient client = builder.buildClient();\n```\n\nCreating a sync client using a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref>:\n\n```java\n// Authenticates using Azure AD building a default credential\n // This will look for AZURE_CLIENT_ID, AZURE_TENANT_ID, and AZURE_CLIENT_SECRET env variables\n DefaultAzureCredential tokenCredential = new DefaultAzureCredentialBuilder().build();\n\n // Creates a builder\n MapsRouteClientBuilder builder = new MapsRouteClientBuilder();\n builder.credential(tokenCredential);\n builder.mapsClientId(System.getenv(\"MAPS_CLIENT_ID\"));\n builder.httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BODY_AND_HEADERS));\n\n // Builds a client\n MapsRouteClient client = builder.buildClient();\n```"
metadata: {}
package: "com.azure.maps.route"
artifact: com.azure:azure-maps-route:1.0.0-beta.1
