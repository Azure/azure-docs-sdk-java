### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.JsonStreamContext
  id: JsonStreamContext
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core
  children:
  - com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext()
  - com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext(com.fasterxml.jackson.core.JsonStreamContext)
  - com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext(int,int)
  - com.fasterxml.jackson.core.JsonStreamContext.TYPE_ARRAY
  - com.fasterxml.jackson.core.JsonStreamContext.TYPE_OBJECT
  - com.fasterxml.jackson.core.JsonStreamContext.TYPE_ROOT
  - com.fasterxml.jackson.core.JsonStreamContext._index
  - com.fasterxml.jackson.core.JsonStreamContext._type
  - com.fasterxml.jackson.core.JsonStreamContext.getCurrentIndex()
  - com.fasterxml.jackson.core.JsonStreamContext.getCurrentName()
  - com.fasterxml.jackson.core.JsonStreamContext.getCurrentValue()
  - com.fasterxml.jackson.core.JsonStreamContext.getEntryCount()
  - com.fasterxml.jackson.core.JsonStreamContext.getParent()
  - com.fasterxml.jackson.core.JsonStreamContext.getStartLocation(java.lang.Object)
  - com.fasterxml.jackson.core.JsonStreamContext.getTypeDesc()
  - com.fasterxml.jackson.core.JsonStreamContext.hasCurrentIndex()
  - com.fasterxml.jackson.core.JsonStreamContext.hasCurrentName()
  - com.fasterxml.jackson.core.JsonStreamContext.hasPathSegment()
  - com.fasterxml.jackson.core.JsonStreamContext.inArray()
  - com.fasterxml.jackson.core.JsonStreamContext.inObject()
  - com.fasterxml.jackson.core.JsonStreamContext.inRoot()
  - com.fasterxml.jackson.core.JsonStreamContext.pathAsPointer()
  - com.fasterxml.jackson.core.JsonStreamContext.pathAsPointer(boolean)
  - com.fasterxml.jackson.core.JsonStreamContext.setCurrentValue(java.lang.Object)
  - com.fasterxml.jackson.core.JsonStreamContext.toString()
  - com.fasterxml.jackson.core.JsonStreamContext.typeDesc()
  langs:
  - java
  name: JsonStreamContext
  nameWithType: JsonStreamContext
  fullName: com.fasterxml.jackson.core.JsonStreamContext
  type: Class
  package: com.fasterxml.jackson.core
  summary: 'Shared base class for streaming processing contexts used during reading and writing of Json content using Streaming API. This context is also exposed to applications: context object can be used by applications to get an idea of relative position of the parser/generator within json content being processed. This allows for some contextual processing: for example, output within Array context can differ from that of Object context.'
  syntax:
    content: public abstract class JsonStreamContext
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext()
  id: JsonStreamContext()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: JsonStreamContext()
  nameWithType: JsonStreamContext.JsonStreamContext()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext()
  overload: com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: protected JsonStreamContext()
- uid: com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext(com.fasterxml.jackson.core.JsonStreamContext)
  id: JsonStreamContext(com.fasterxml.jackson.core.JsonStreamContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: JsonStreamContext(JsonStreamContext base)
  nameWithType: JsonStreamContext.JsonStreamContext(JsonStreamContext base)
  fullName: com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext(JsonStreamContext base)
  overload: com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext*
  type: Constructor
  package: com.fasterxml.jackson.core
  summary: Copy constructor used by sub-classes for creating copies for buffering.
  syntax:
    content: protected JsonStreamContext(JsonStreamContext base)
    parameters:
    - id: base
      type: com.fasterxml.jackson.core.JsonStreamContext
- uid: com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext(int,int)
  id: JsonStreamContext(int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: JsonStreamContext(int type, int index)
  nameWithType: JsonStreamContext.JsonStreamContext(int type, int index)
  fullName: com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext(int type, int index)
  overload: com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: protected JsonStreamContext(int type, int index)
    parameters:
    - id: type
      type: int
    - id: index
      type: int
- uid: com.fasterxml.jackson.core.JsonStreamContext.TYPE_ARRAY
  id: TYPE_ARRAY
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: TYPE_ARRAY
  nameWithType: JsonStreamContext.TYPE_ARRAY
  fullName: com.fasterxml.jackson.core.JsonStreamContext.TYPE_ARRAY
  type: Field
  package: com.fasterxml.jackson.core
  syntax:
    content: protected static final int TYPE_ARRAY
    return:
      type: int
- uid: com.fasterxml.jackson.core.JsonStreamContext.TYPE_OBJECT
  id: TYPE_OBJECT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: TYPE_OBJECT
  nameWithType: JsonStreamContext.TYPE_OBJECT
  fullName: com.fasterxml.jackson.core.JsonStreamContext.TYPE_OBJECT
  type: Field
  package: com.fasterxml.jackson.core
  syntax:
    content: protected static final int TYPE_OBJECT
    return:
      type: int
- uid: com.fasterxml.jackson.core.JsonStreamContext.TYPE_ROOT
  id: TYPE_ROOT
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: TYPE_ROOT
  nameWithType: JsonStreamContext.TYPE_ROOT
  fullName: com.fasterxml.jackson.core.JsonStreamContext.TYPE_ROOT
  type: Field
  package: com.fasterxml.jackson.core
  syntax:
    content: protected static final int TYPE_ROOT
    return:
      type: int
- uid: com.fasterxml.jackson.core.JsonStreamContext._index
  id: _index
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: _index
  nameWithType: JsonStreamContext._index
  fullName: com.fasterxml.jackson.core.JsonStreamContext._index
  type: Field
  package: com.fasterxml.jackson.core
  summary: Index of the currently processed entry. Starts with -1 to signal that no entries have been started, and gets advanced each time a new entry is started, either by encountering an expected separator, or with new values if no separators are expected (the case for root context).
  syntax:
    content: protected int _index
    return:
      type: int
- uid: com.fasterxml.jackson.core.JsonStreamContext._type
  id: _type
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: _type
  nameWithType: JsonStreamContext._type
  fullName: com.fasterxml.jackson.core.JsonStreamContext._type
  type: Field
  package: com.fasterxml.jackson.core
  syntax:
    content: protected int _type
    return:
      type: int
- uid: com.fasterxml.jackson.core.JsonStreamContext.getCurrentIndex()
  id: getCurrentIndex()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: getCurrentIndex()
  nameWithType: JsonStreamContext.getCurrentIndex()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getCurrentIndex()
  overload: com.fasterxml.jackson.core.JsonStreamContext.getCurrentIndex*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public final int getCurrentIndex()
    return:
      type: int
      description: Index of the currently processed entry, if any
- uid: com.fasterxml.jackson.core.JsonStreamContext.getCurrentName()
  id: getCurrentName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: getCurrentName()
  nameWithType: JsonStreamContext.getCurrentName()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getCurrentName()
  overload: com.fasterxml.jackson.core.JsonStreamContext.getCurrentName*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method for accessing name associated with the current location. Non-null for `FIELD_NAME` and value events that directly follow field names; null for root level and array values.
  syntax:
    content: public abstract String getCurrentName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.JsonStreamContext.getCurrentValue()
  id: getCurrentValue()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: getCurrentValue()
  nameWithType: JsonStreamContext.getCurrentValue()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getCurrentValue()
  overload: com.fasterxml.jackson.core.JsonStreamContext.getCurrentValue*
  type: Method
  package: com.fasterxml.jackson.core
  summary: >-
    Method for accessing currently active value being used by data-binding (as the source of streaming data to write, or destination of data being read), at this level in hierarchy.


    Note that "current value" is NOT populated (or used) by Streaming parser or generator; it is only used by higher-level data-binding functionality. The reason it is included here is that it can be stored and accessed hierarchically, and gets passed through data-binding.
  syntax:
    content: public Object getCurrentValue()
    return:
      type: java.lang.Object
      description: Currently active value, if one has been assigned.
- uid: com.fasterxml.jackson.core.JsonStreamContext.getEntryCount()
  id: getEntryCount()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: getEntryCount()
  nameWithType: JsonStreamContext.getEntryCount()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getEntryCount()
  overload: com.fasterxml.jackson.core.JsonStreamContext.getEntryCount*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public final int getEntryCount()
    return:
      type: int
      description: Number of entries that are complete and started.
- uid: com.fasterxml.jackson.core.JsonStreamContext.getParent()
  id: getParent()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: getParent()
  nameWithType: JsonStreamContext.getParent()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getParent()
  overload: com.fasterxml.jackson.core.JsonStreamContext.getParent*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Accessor for finding parent context of this context; will return null for root context.
  syntax:
    content: public abstract JsonStreamContext getParent()
    return:
      type: com.fasterxml.jackson.core.JsonStreamContext
- uid: com.fasterxml.jackson.core.JsonStreamContext.getStartLocation(java.lang.Object)
  id: getStartLocation(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: getStartLocation(Object srcRef)
  nameWithType: JsonStreamContext.getStartLocation(Object srcRef)
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getStartLocation(Object srcRef)
  overload: com.fasterxml.jackson.core.JsonStreamContext.getStartLocation*
  type: Method
  package: com.fasterxml.jackson.core
  summary: 'Optional method that may be used to access starting location of this context: for example, in case of JSON \`Object\` context, offset at which \`\[\` token was read or written. Often used for error reporting purposes. Implementations that do not keep track of such location are expected to return <xref uid="com.fasterxml.jackson.core.JsonLocation.NA" data-throw-if-not-resolved="false">JsonLocation#NA</xref>; this is what the default implementation does.'
  syntax:
    content: public JsonLocation getStartLocation(Object srcRef)
    parameters:
    - id: srcRef
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.core.JsonLocation
      description: >-
        Location pointing to the point where the context
           start marker was found (or written); never `null`.
        <p>
         NOTE: demoted from <code>JsonReadContext</code> in 2.9, to allow use for
         "non-standard" read contexts.
- uid: com.fasterxml.jackson.core.JsonStreamContext.getTypeDesc()
  id: getTypeDesc()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: getTypeDesc()
  nameWithType: JsonStreamContext.getTypeDesc()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getTypeDesc()
  overload: com.fasterxml.jackson.core.JsonStreamContext.getTypeDesc*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method for accessing simple type description of current context; either ROOT (for root-level values), OBJECT (for field names and values of JSON Objects) or ARRAY (for values of JSON Arrays)
  syntax:
    content: public final String getTypeDesc()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.JsonStreamContext.hasCurrentIndex()
  id: hasCurrentIndex()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: hasCurrentIndex()
  nameWithType: JsonStreamContext.hasCurrentIndex()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.hasCurrentIndex()
  overload: com.fasterxml.jackson.core.JsonStreamContext.hasCurrentIndex*
  type: Method
  package: com.fasterxml.jackson.core
  summary: 'Method that may be called to verify whether this context has valid index: will return \`false\` before the first entry of Object context or before first element of Array context; otherwise returns \`true\`.'
  syntax:
    content: public boolean hasCurrentIndex()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonStreamContext.hasCurrentName()
  id: hasCurrentName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: hasCurrentName()
  nameWithType: JsonStreamContext.hasCurrentName()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.hasCurrentName()
  overload: com.fasterxml.jackson.core.JsonStreamContext.hasCurrentName*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public boolean hasCurrentName()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonStreamContext.hasPathSegment()
  id: hasPathSegment()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: hasPathSegment()
  nameWithType: JsonStreamContext.hasPathSegment()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.hasPathSegment()
  overload: com.fasterxml.jackson.core.JsonStreamContext.hasPathSegment*
  type: Method
  package: com.fasterxml.jackson.core
  summary: >-
    Method that may be called to check if this context is either:

     *  Object, with at least one entry written (partially or completely)
     *  Array, with at least one entry written (partially or completely)

    and if so, return \`true\`; otherwise return \`false\`. Latter case includes Root context (always), and Object/Array contexts before any entries/elements have been read or written.


    Method is mostly used to determine whether this context should be used for constructing <xref uid="com.fasterxml.jackson.core.JsonPointer" data-throw-if-not-resolved="false">JsonPointer</xref>
  syntax:
    content: public boolean hasPathSegment()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonStreamContext.inArray()
  id: inArray()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: inArray()
  nameWithType: JsonStreamContext.inArray()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.inArray()
  overload: com.fasterxml.jackson.core.JsonStreamContext.inArray*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that returns true if this context is an Array context; that is, content is being read from or written to a Json Array.
  syntax:
    content: public final boolean inArray()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonStreamContext.inObject()
  id: inObject()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: inObject()
  nameWithType: JsonStreamContext.inObject()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.inObject()
  overload: com.fasterxml.jackson.core.JsonStreamContext.inObject*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that returns true if this context is an Object context; that is, content is being read from or written to a Json Object.
  syntax:
    content: public final boolean inObject()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonStreamContext.inRoot()
  id: inRoot()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: inRoot()
  nameWithType: JsonStreamContext.inRoot()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.inRoot()
  overload: com.fasterxml.jackson.core.JsonStreamContext.inRoot*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that returns true if this context is a Root context; that is, content is being read from or written to without enclosing array or object structure.
  syntax:
    content: public final boolean inRoot()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.JsonStreamContext.pathAsPointer()
  id: pathAsPointer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: pathAsPointer()
  nameWithType: JsonStreamContext.pathAsPointer()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.pathAsPointer()
  overload: com.fasterxml.jackson.core.JsonStreamContext.pathAsPointer*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Factory method for constructing a <xref uid="com.fasterxml.jackson.core.JsonPointer" data-throw-if-not-resolved="false">JsonPointer</xref> that points to the current location within the stream that this context is for, excluding information about "root context" (only relevant for multi-root-value cases)
  syntax:
    content: public JsonPointer pathAsPointer()
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonStreamContext.pathAsPointer(boolean)
  id: pathAsPointer(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: pathAsPointer(boolean includeRoot)
  nameWithType: JsonStreamContext.pathAsPointer(boolean includeRoot)
  fullName: com.fasterxml.jackson.core.JsonStreamContext.pathAsPointer(boolean includeRoot)
  overload: com.fasterxml.jackson.core.JsonStreamContext.pathAsPointer*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Factory method for constructing a <xref uid="com.fasterxml.jackson.core.JsonPointer" data-throw-if-not-resolved="false">JsonPointer</xref> that points to the current location within the stream that this context is for, optionally including "root value index"
  syntax:
    content: public JsonPointer pathAsPointer(boolean includeRoot)
    parameters:
    - id: includeRoot
      type: boolean
      description: Whether root-value offset is included as the first segment or not;
    return:
      type: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonStreamContext.setCurrentValue(java.lang.Object)
  id: setCurrentValue(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: setCurrentValue(Object v)
  nameWithType: JsonStreamContext.setCurrentValue(Object v)
  fullName: com.fasterxml.jackson.core.JsonStreamContext.setCurrentValue(Object v)
  overload: com.fasterxml.jackson.core.JsonStreamContext.setCurrentValue*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method to call to pass value to be returned via <xref uid="com.fasterxml.jackson.core.JsonStreamContext.getCurrentValue*" data-throw-if-not-resolved="false">#getCurrentValue</xref>; typically called indirectly through <xref uid="com.fasterxml.jackson.core.JsonParser.setCurrentValue*" data-throw-if-not-resolved="false">JsonParser#setCurrentValue</xref> or <xref uid="com.fasterxml.jackson.core.JsonGenerator.setCurrentValue*" data-throw-if-not-resolved="false">JsonGenerator#setCurrentValue</xref>).
  syntax:
    content: public void setCurrentValue(Object v)
    parameters:
    - id: v
      type: java.lang.Object
- uid: com.fasterxml.jackson.core.JsonStreamContext.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: toString()
  nameWithType: JsonStreamContext.toString()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.toString()
  overload: com.fasterxml.jackson.core.JsonStreamContext.toString*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Overridden to provide developer readable "JsonPath" representation of the context.
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.JsonStreamContext.typeDesc()
  id: typeDesc()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.JsonStreamContext
  langs:
  - java
  name: typeDesc()
  nameWithType: JsonStreamContext.typeDesc()
  fullName: com.fasterxml.jackson.core.JsonStreamContext.typeDesc()
  overload: com.fasterxml.jackson.core.JsonStreamContext.typeDesc*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public String typeDesc()
    return:
      type: java.lang.String
references:
- uid: com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext*
  name: JsonStreamContext
  nameWithType: JsonStreamContext.JsonStreamContext
  fullName: com.fasterxml.jackson.core.JsonStreamContext.JsonStreamContext
  package: com.fasterxml.jackson.core
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.JsonStreamContext.getParent*
  name: getParent
  nameWithType: JsonStreamContext.getParent
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getParent
  package: com.fasterxml.jackson.core
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.JsonStreamContext.inArray*
  name: inArray
  nameWithType: JsonStreamContext.inArray
  fullName: com.fasterxml.jackson.core.JsonStreamContext.inArray
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonStreamContext.inRoot*
  name: inRoot
  nameWithType: JsonStreamContext.inRoot
  fullName: com.fasterxml.jackson.core.JsonStreamContext.inRoot
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonStreamContext.inObject*
  name: inObject
  nameWithType: JsonStreamContext.inObject
  fullName: com.fasterxml.jackson.core.JsonStreamContext.inObject
  package: com.fasterxml.jackson.core
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.JsonStreamContext.getTypeDesc*
  name: getTypeDesc
  nameWithType: JsonStreamContext.getTypeDesc
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getTypeDesc
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonStreamContext.typeDesc*
  name: typeDesc
  nameWithType: JsonStreamContext.typeDesc
  fullName: com.fasterxml.jackson.core.JsonStreamContext.typeDesc
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonStreamContext.getEntryCount*
  name: getEntryCount
  nameWithType: JsonStreamContext.getEntryCount
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getEntryCount
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonStreamContext.getCurrentIndex*
  name: getCurrentIndex
  nameWithType: JsonStreamContext.getCurrentIndex
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getCurrentIndex
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonStreamContext.hasCurrentIndex*
  name: hasCurrentIndex
  nameWithType: JsonStreamContext.hasCurrentIndex
  fullName: com.fasterxml.jackson.core.JsonStreamContext.hasCurrentIndex
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonStreamContext.hasPathSegment*
  name: hasPathSegment
  nameWithType: JsonStreamContext.hasPathSegment
  fullName: com.fasterxml.jackson.core.JsonStreamContext.hasPathSegment
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonStreamContext.getCurrentName*
  name: getCurrentName
  nameWithType: JsonStreamContext.getCurrentName
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getCurrentName
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonStreamContext.hasCurrentName*
  name: hasCurrentName
  nameWithType: JsonStreamContext.hasCurrentName
  fullName: com.fasterxml.jackson.core.JsonStreamContext.hasCurrentName
  package: com.fasterxml.jackson.core
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.core.JsonStreamContext.getCurrentValue*
  name: getCurrentValue
  nameWithType: JsonStreamContext.getCurrentValue
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getCurrentValue
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonStreamContext.setCurrentValue*
  name: setCurrentValue
  nameWithType: JsonStreamContext.setCurrentValue
  fullName: com.fasterxml.jackson.core.JsonStreamContext.setCurrentValue
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonPointer
  name: JsonPointer
  nameWithType: JsonPointer
  fullName: com.fasterxml.jackson.core.JsonPointer
- uid: com.fasterxml.jackson.core.JsonStreamContext.pathAsPointer*
  name: pathAsPointer
  nameWithType: JsonStreamContext.pathAsPointer
  fullName: com.fasterxml.jackson.core.JsonStreamContext.pathAsPointer
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonLocation
  name: JsonLocation
  nameWithType: JsonLocation
  fullName: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.core.JsonStreamContext.getStartLocation*
  name: getStartLocation
  nameWithType: JsonStreamContext.getStartLocation
  fullName: com.fasterxml.jackson.core.JsonStreamContext.getStartLocation
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.JsonStreamContext.toString*
  name: toString
  nameWithType: JsonStreamContext.toString
  fullName: com.fasterxml.jackson.core.JsonStreamContext.toString
  package: com.fasterxml.jackson.core
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
