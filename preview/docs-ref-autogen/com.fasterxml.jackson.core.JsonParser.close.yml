### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonParser.close*"
fullName: "com.fasterxml.jackson.core.JsonParser.close"
name: "close"
nameWithType: "JsonParser.close"
members:
- uid: "com.fasterxml.jackson.core.JsonParser.close()"
  fullName: "com.fasterxml.jackson.core.JsonParser.close()"
  name: "close()"
  nameWithType: "JsonParser.close()"
  summary: "Closes the parser so that no further iteration or data access can be made; will also close the underlying input source if parser either **owns** the input source, or feature <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Feature#AUTO_CLOSE_SOURCE\"></xref> is enabled. Whether parser owns the input source depends on factory method that was used to construct instance (so check <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.JsonFactory\"></xref> for details, but the general idea is that if caller passes in closable resource (such as <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref> or <xref uid=\"java.io.Reader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reader\"></xref>) parser does NOT own the source; but if it passes a reference (such as <xref uid=\"java.io.File\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.io.File\"></xref> or <xref uid=\"java.net.URL\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.net.URL\"></xref> and creates stream or reader it does own them."
  syntax: "public abstract void close()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
