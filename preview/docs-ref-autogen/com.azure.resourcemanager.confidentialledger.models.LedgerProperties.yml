### YamlMime:JavaType
uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties"
fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties"
name: "LedgerProperties"
nameWithType: "LedgerProperties"
summary: "LedgerProperties Additional Confidential Ledger properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LedgerProperties"
constructors:
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.LedgerProperties()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.LedgerProperties()"
  name: "LedgerProperties()"
  nameWithType: "LedgerProperties.LedgerProperties()"
  syntax: "public LedgerProperties()"
methods:
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.aadBasedSecurityPrincipals()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.aadBasedSecurityPrincipals()"
  name: "aadBasedSecurityPrincipals()"
  nameWithType: "LedgerProperties.aadBasedSecurityPrincipals()"
  summary: "Get the aadBasedSecurityPrincipals property: Array of all AAD based Security Principals."
  syntax: "public List<AadBasedSecurityPrincipal> aadBasedSecurityPrincipals()"
  returns:
    description: "the aadBasedSecurityPrincipals value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.models.AadBasedSecurityPrincipal?alt=com.azure.resourcemanager.confidentialledger.models.AadBasedSecurityPrincipal&text=AadBasedSecurityPrincipal\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.certBasedSecurityPrincipals()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.certBasedSecurityPrincipals()"
  name: "certBasedSecurityPrincipals()"
  nameWithType: "LedgerProperties.certBasedSecurityPrincipals()"
  summary: "Get the certBasedSecurityPrincipals property: Array of all cert based Security Principals."
  syntax: "public List<CertBasedSecurityPrincipal> certBasedSecurityPrincipals()"
  returns:
    description: "the certBasedSecurityPrincipals value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal?alt=com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal&text=CertBasedSecurityPrincipal\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.identityServiceUri()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.identityServiceUri()"
  name: "identityServiceUri()"
  nameWithType: "LedgerProperties.identityServiceUri()"
  summary: "Get the identityServiceUri property: Endpoint for accessing network identity."
  syntax: "public String identityServiceUri()"
  returns:
    description: "the identityServiceUri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.ledgerInternalNamespace()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.ledgerInternalNamespace()"
  name: "ledgerInternalNamespace()"
  nameWithType: "LedgerProperties.ledgerInternalNamespace()"
  summary: "Get the ledgerInternalNamespace property: Internal namespace for the Ledger."
  syntax: "public String ledgerInternalNamespace()"
  returns:
    description: "the ledgerInternalNamespace value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.ledgerName()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.ledgerName()"
  name: "ledgerName()"
  nameWithType: "LedgerProperties.ledgerName()"
  summary: "Get the ledgerName property: Unique name for the Confidential Ledger."
  syntax: "public String ledgerName()"
  returns:
    description: "the ledgerName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.ledgerType()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.ledgerType()"
  name: "ledgerType()"
  nameWithType: "LedgerProperties.ledgerType()"
  summary: "Get the ledgerType property: Type of Confidential Ledger."
  syntax: "public LedgerType ledgerType()"
  returns:
    description: "the ledgerType value."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.LedgerType?alt=com.azure.resourcemanager.confidentialledger.models.LedgerType&text=LedgerType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.ledgerUri()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.ledgerUri()"
  name: "ledgerUri()"
  nameWithType: "LedgerProperties.ledgerUri()"
  summary: "Get the ledgerUri property: Endpoint for calling Ledger Service."
  syntax: "public String ledgerUri()"
  returns:
    description: "the ledgerUri value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "LedgerProperties.provisioningState()"
  summary: "Get the provisioningState property: Provisioning state of Ledger Resource."
  syntax: "public ProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.ProvisioningState?alt=com.azure.resourcemanager.confidentialledger.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.validate()"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.validate()"
  name: "validate()"
  nameWithType: "LedgerProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.withAadBasedSecurityPrincipals(java.util.List<com.azure.resourcemanager.confidentialledger.models.AadBasedSecurityPrincipal>)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.withAadBasedSecurityPrincipals(List<AadBasedSecurityPrincipal> aadBasedSecurityPrincipals)"
  name: "withAadBasedSecurityPrincipals(List<AadBasedSecurityPrincipal> aadBasedSecurityPrincipals)"
  nameWithType: "LedgerProperties.withAadBasedSecurityPrincipals(List<AadBasedSecurityPrincipal> aadBasedSecurityPrincipals)"
  summary: "Set the aadBasedSecurityPrincipals property: Array of all AAD based Security Principals."
  parameters:
  - description: "the aadBasedSecurityPrincipals value to set."
    name: "aadBasedSecurityPrincipals"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.models.AadBasedSecurityPrincipal?alt=com.azure.resourcemanager.confidentialledger.models.AadBasedSecurityPrincipal&text=AadBasedSecurityPrincipal\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public LedgerProperties withAadBasedSecurityPrincipals(List<AadBasedSecurityPrincipal> aadBasedSecurityPrincipals)"
  returns:
    description: "the LedgerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.LedgerProperties?alt=com.azure.resourcemanager.confidentialledger.models.LedgerProperties&text=LedgerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.withCertBasedSecurityPrincipals(java.util.List<com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal>)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.withCertBasedSecurityPrincipals(List<CertBasedSecurityPrincipal> certBasedSecurityPrincipals)"
  name: "withCertBasedSecurityPrincipals(List<CertBasedSecurityPrincipal> certBasedSecurityPrincipals)"
  nameWithType: "LedgerProperties.withCertBasedSecurityPrincipals(List<CertBasedSecurityPrincipal> certBasedSecurityPrincipals)"
  summary: "Set the certBasedSecurityPrincipals property: Array of all cert based Security Principals."
  parameters:
  - description: "the certBasedSecurityPrincipals value to set."
    name: "certBasedSecurityPrincipals"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal?alt=com.azure.resourcemanager.confidentialledger.models.CertBasedSecurityPrincipal&text=CertBasedSecurityPrincipal\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public LedgerProperties withCertBasedSecurityPrincipals(List<CertBasedSecurityPrincipal> certBasedSecurityPrincipals)"
  returns:
    description: "the LedgerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.LedgerProperties?alt=com.azure.resourcemanager.confidentialledger.models.LedgerProperties&text=LedgerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.withLedgerType(com.azure.resourcemanager.confidentialledger.models.LedgerType)"
  fullName: "com.azure.resourcemanager.confidentialledger.models.LedgerProperties.withLedgerType(LedgerType ledgerType)"
  name: "withLedgerType(LedgerType ledgerType)"
  nameWithType: "LedgerProperties.withLedgerType(LedgerType ledgerType)"
  summary: "Set the ledgerType property: Type of Confidential Ledger."
  parameters:
  - description: "the ledgerType value to set."
    name: "ledgerType"
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.LedgerType?alt=com.azure.resourcemanager.confidentialledger.models.LedgerType&text=LedgerType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LedgerProperties withLedgerType(LedgerType ledgerType)"
  returns:
    description: "the LedgerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.LedgerProperties?alt=com.azure.resourcemanager.confidentialledger.models.LedgerProperties&text=LedgerProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.confidentialledger.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-confidentialledger:1.0.0-beta.1
