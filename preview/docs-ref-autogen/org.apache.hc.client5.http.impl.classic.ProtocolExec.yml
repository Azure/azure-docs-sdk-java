### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.impl.classic.ProtocolExec
  id: ProtocolExec
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic
  children:
  - org.apache.hc.client5.http.impl.classic.ProtocolExec.ProtocolExec(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.client5.http.AuthenticationStrategy,org.apache.hc.client5.http.AuthenticationStrategy)
  - org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.client5.http.classic.ExecChain.Scope,org.apache.hc.client5.http.classic.ExecChain)
  langs:
  - java
  name: ProtocolExec
  nameWithType: ProtocolExec
  fullName: org.apache.hc.client5.http.impl.classic.ProtocolExec
  type: Class
  package: org.apache.hc.client5.http.impl.classic
  summary: >-
    Request execution handler in the classic request execution chain that is responsible for implementation of HTTP specification requirements.


    Further responsibilities such as communication with the opposite endpoint is delegated to the next executor in the request execution chain.
  syntax:
    content: public final class ProtocolExec implements ExecChainHandler
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.client5.http.classic.ExecChainHandler
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.client5.http.impl.classic.ProtocolExec.ProtocolExec(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.client5.http.AuthenticationStrategy,org.apache.hc.client5.http.AuthenticationStrategy)
  id: ProtocolExec(org.apache.hc.core5.http.protocol.HttpProcessor,org.apache.hc.client5.http.AuthenticationStrategy,org.apache.hc.client5.http.AuthenticationStrategy)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic.ProtocolExec
  langs:
  - java
  name: ProtocolExec(HttpProcessor httpProcessor, AuthenticationStrategy targetAuthStrategy, AuthenticationStrategy proxyAuthStrategy)
  nameWithType: ProtocolExec.ProtocolExec(HttpProcessor httpProcessor, AuthenticationStrategy targetAuthStrategy, AuthenticationStrategy proxyAuthStrategy)
  fullName: org.apache.hc.client5.http.impl.classic.ProtocolExec.ProtocolExec(HttpProcessor httpProcessor, AuthenticationStrategy targetAuthStrategy, AuthenticationStrategy proxyAuthStrategy)
  overload: org.apache.hc.client5.http.impl.classic.ProtocolExec.ProtocolExec*
  type: Constructor
  package: org.apache.hc.client5.http.impl.classic
  syntax:
    content: public ProtocolExec(HttpProcessor httpProcessor, AuthenticationStrategy targetAuthStrategy, AuthenticationStrategy proxyAuthStrategy)
    parameters:
    - id: httpProcessor
      type: org.apache.hc.core5.http.protocol.HttpProcessor
    - id: targetAuthStrategy
      type: org.apache.hc.client5.http.AuthenticationStrategy
    - id: proxyAuthStrategy
      type: org.apache.hc.client5.http.AuthenticationStrategy
- uid: org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.client5.http.classic.ExecChain.Scope,org.apache.hc.client5.http.classic.ExecChain)
  id: execute(org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.client5.http.classic.ExecChain.Scope,org.apache.hc.client5.http.classic.ExecChain)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.impl.classic.ProtocolExec
  langs:
  - java
  name: execute(ClassicHttpRequest userRequest, ExecChain.Scope scope, ExecChain chain)
  nameWithType: ProtocolExec.execute(ClassicHttpRequest userRequest, ExecChain.Scope scope, ExecChain chain)
  fullName: org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ClassicHttpRequest userRequest, ExecChain.Scope scope, ExecChain chain)
  overload: org.apache.hc.client5.http.impl.classic.ProtocolExec.execute*
  type: Method
  package: org.apache.hc.client5.http.impl.classic
  summary: Executes the actual HTTP request. The handler can choose to return a response message or delegate request execution to the next element in the execution chain.
  syntax:
    content: public ClassicHttpResponse execute(ClassicHttpRequest userRequest, ExecChain.Scope scope, ExecChain chain)
    parameters:
    - id: userRequest
      type: org.apache.hc.core5.http.ClassicHttpRequest
    - id: scope
      type: org.apache.hc.client5.http.classic.ExecChain.Scope
    - id: chain
      type: org.apache.hc.client5.http.classic.ExecChain
    return:
      type: org.apache.hc.core5.http.ClassicHttpResponse
  exceptions:
  - type: java.io.IOException
  - type: org.apache.hc.core5.http.HttpException
references:
- uid: org.apache.hc.core5.http.protocol.HttpProcessor
  name: HttpProcessor
  nameWithType: HttpProcessor
  fullName: org.apache.hc.core5.http.protocol.HttpProcessor
- uid: org.apache.hc.client5.http.AuthenticationStrategy
  name: AuthenticationStrategy
  nameWithType: AuthenticationStrategy
  fullName: org.apache.hc.client5.http.AuthenticationStrategy
- uid: org.apache.hc.client5.http.impl.classic.ProtocolExec.ProtocolExec*
  name: ProtocolExec
  nameWithType: ProtocolExec.ProtocolExec
  fullName: org.apache.hc.client5.http.impl.classic.ProtocolExec.ProtocolExec
  package: org.apache.hc.client5.http.impl.classic
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.HttpException
  name: HttpException
  nameWithType: HttpException
  fullName: org.apache.hc.core5.http.HttpException
- uid: org.apache.hc.core5.http.ClassicHttpRequest
  name: ClassicHttpRequest
  nameWithType: ClassicHttpRequest
  fullName: org.apache.hc.core5.http.ClassicHttpRequest
- uid: org.apache.hc.client5.http.classic.ExecChain.Scope
  name: ExecChain.Scope
  nameWithType: ExecChain.Scope
  fullName: org.apache.hc.client5.http.classic.ExecChain.Scope
- uid: org.apache.hc.client5.http.classic.ExecChain
  name: ExecChain
  nameWithType: ExecChain
  fullName: org.apache.hc.client5.http.classic.ExecChain
- uid: org.apache.hc.core5.http.ClassicHttpResponse
  name: ClassicHttpResponse
  nameWithType: ClassicHttpResponse
  fullName: org.apache.hc.core5.http.ClassicHttpResponse
- uid: org.apache.hc.client5.http.impl.classic.ProtocolExec.execute*
  name: execute
  nameWithType: ProtocolExec.execute
  fullName: org.apache.hc.client5.http.impl.classic.ProtocolExec.execute
  package: org.apache.hc.client5.http.impl.classic
- uid: org.apache.hc.client5.http.classic.ExecChainHandler
  name: ExecChainHandler
  nameWithType: ExecChainHandler
  fullName: org.apache.hc.client5.http.classic.ExecChainHandler
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
