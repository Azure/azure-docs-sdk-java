### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.getAccessPolicy*"
fullName: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.getAccessPolicy"
name: "getAccessPolicy"
nameWithType: "DataLakeFileSystemAsyncClient.getAccessPolicy"
members:
- uid: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.getAccessPolicy()"
  fullName: "com.azure.storage.file.datalake.DataLakeFileSystemAsyncClient.getAccessPolicy()"
  name: "getAccessPolicy()"
  nameWithType: "DataLakeFileSystemAsyncClient.getAccessPolicy()"
  summary: "Returns the file system's permissions. The permissions indicate whether file system's paths may be accessed publicly. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nclient.getAccessPolicy().subscribe(response -> {\n     System.out.printf(\"Data Lake Access Type: %s%n\", response.getDataLakeAccessType());\n \n     for (DataLakeSignedIdentifier identifier : response.getIdentifiers()) {\n         System.out.printf(\"Identifier Name: %s, Permissions %s%n\",\n             identifier.getId(),\n             identifier.getAccessPolicy().getPermissions());\n     }\n });\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-container-acl"
  syntax: "public Mono<FileSystemAccessPolicies> getAccessPolicy()"
  returns:
    description: "A reactive response containing the file system access policy."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.datalake.models.FileSystemAccessPolicies?alt=com.azure.storage.file.datalake.models.FileSystemAccessPolicies&text=FileSystemAccessPolicies\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.3.0-beta.1
