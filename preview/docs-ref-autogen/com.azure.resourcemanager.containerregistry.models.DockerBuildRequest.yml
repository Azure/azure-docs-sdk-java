### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  id: DockerBuildRequest
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models
  children:
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.DockerBuildRequest()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.agentConfiguration()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.arguments()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.credentials()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.dockerFilePath()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.imageNames()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.isPushEnabled()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.noCache()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.platform()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.sourceLocation()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.target()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.timeout()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.validate()
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withAgentConfiguration(com.azure.resourcemanager.containerregistry.models.AgentProperties)
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withArguments(java.util.List<com.azure.resourcemanager.containerregistry.models.Argument>)
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withCredentials(com.azure.resourcemanager.containerregistry.models.Credentials)
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withDockerFilePath(java.lang.String)
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withImageNames(java.util.List<java.lang.String>)
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withIsPushEnabled(java.lang.Boolean)
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withNoCache(java.lang.Boolean)
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withPlatform(com.azure.resourcemanager.containerregistry.models.PlatformProperties)
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withSourceLocation(java.lang.String)
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withTarget(java.lang.String)
  - com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withTimeout(java.lang.Integer)
  langs:
  - java
  name: DockerBuildRequest
  nameWithType: DockerBuildRequest
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  type: Class
  package: com.azure.resourcemanager.containerregistry.models
  summary: The DockerBuildRequest model.
  syntax:
    content: public final class DockerBuildRequest extends RunRequest
  inheritance:
  - java.lang.Object
  - com.azure.resourcemanager.containerregistry.models.RunRequest
  inheritedMembers:
  - com.azure.resourcemanager.containerregistry.models.RunRequest.isArchiveEnabled()
  - com.azure.resourcemanager.containerregistry.models.RunRequest.validate()
  - com.azure.resourcemanager.containerregistry.models.RunRequest.withIsArchiveEnabled(java.lang.Boolean)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.DockerBuildRequest()
  id: DockerBuildRequest()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: DockerBuildRequest()
  nameWithType: DockerBuildRequest.DockerBuildRequest()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.DockerBuildRequest()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.DockerBuildRequest*
  type: Constructor
  package: com.azure.resourcemanager.containerregistry.models
  syntax:
    content: public DockerBuildRequest()
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.agentConfiguration()
  id: agentConfiguration()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: agentConfiguration()
  nameWithType: DockerBuildRequest.agentConfiguration()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.agentConfiguration()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.agentConfiguration*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the agentConfiguration property: The machine configuration of the run agent.'
  syntax:
    content: public AgentProperties agentConfiguration()
    return:
      type: com.azure.resourcemanager.containerregistry.models.AgentProperties
      description: the agentConfiguration value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.arguments()
  id: arguments()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: arguments()
  nameWithType: DockerBuildRequest.arguments()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.arguments()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.arguments*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the arguments property: The collection of override arguments to be used when executing the run.'
  syntax:
    content: public List<Argument> arguments()
    return:
      type: java.util.List<com.azure.resourcemanager.containerregistry.models.Argument>
      description: the arguments value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.credentials()
  id: credentials()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: credentials()
  nameWithType: DockerBuildRequest.credentials()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.credentials()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.credentials*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the credentials property: The properties that describes a set of credentials that will be used when this run is invoked.'
  syntax:
    content: public Credentials credentials()
    return:
      type: com.azure.resourcemanager.containerregistry.models.Credentials
      description: the credentials value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.dockerFilePath()
  id: dockerFilePath()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: dockerFilePath()
  nameWithType: DockerBuildRequest.dockerFilePath()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.dockerFilePath()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.dockerFilePath*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the dockerFilePath property: The Docker file path relative to the source location.'
  syntax:
    content: public String dockerFilePath()
    return:
      type: java.lang.String
      description: the dockerFilePath value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.imageNames()
  id: imageNames()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: imageNames()
  nameWithType: DockerBuildRequest.imageNames()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.imageNames()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.imageNames*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the imageNames property: The fully qualified image names including the repository and tag.'
  syntax:
    content: public List<String> imageNames()
    return:
      type: java.util.List<java.lang.String>
      description: the imageNames value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.isPushEnabled()
  id: isPushEnabled()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: isPushEnabled()
  nameWithType: DockerBuildRequest.isPushEnabled()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.isPushEnabled()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.isPushEnabled*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the isPushEnabled property: The value of this property indicates whether the image built should be pushed to the registry or not.'
  syntax:
    content: public Boolean isPushEnabled()
    return:
      type: java.lang.Boolean
      description: the isPushEnabled value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.noCache()
  id: noCache()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: noCache()
  nameWithType: DockerBuildRequest.noCache()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.noCache()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.noCache*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the noCache property: The value of this property indicates whether the image cache is enabled or not.'
  syntax:
    content: public Boolean noCache()
    return:
      type: java.lang.Boolean
      description: the noCache value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.platform()
  id: platform()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: platform()
  nameWithType: DockerBuildRequest.platform()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.platform()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.platform*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the platform property: The platform properties against which the run has to happen.'
  syntax:
    content: public PlatformProperties platform()
    return:
      type: com.azure.resourcemanager.containerregistry.models.PlatformProperties
      description: the platform value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.sourceLocation()
  id: sourceLocation()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: sourceLocation()
  nameWithType: DockerBuildRequest.sourceLocation()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.sourceLocation()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.sourceLocation*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the sourceLocation property: The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository. If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.'
  syntax:
    content: public String sourceLocation()
    return:
      type: java.lang.String
      description: the sourceLocation value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.target()
  id: target()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: target()
  nameWithType: DockerBuildRequest.target()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.target()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.target*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the target property: The name of the target build stage for the docker build.'
  syntax:
    content: public String target()
    return:
      type: java.lang.String
      description: the target value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.timeout()
  id: timeout()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: timeout()
  nameWithType: DockerBuildRequest.timeout()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.timeout()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.timeout*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Get the timeout property: Run timeout in seconds.'
  syntax:
    content: public Integer timeout()
    return:
      type: java.lang.Integer
      description: the timeout value.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.validate()
  id: validate()
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: validate()
  nameWithType: DockerBuildRequest.validate()
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.validate()
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.validate*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withAgentConfiguration(com.azure.resourcemanager.containerregistry.models.AgentProperties)
  id: withAgentConfiguration(com.azure.resourcemanager.containerregistry.models.AgentProperties)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: withAgentConfiguration(AgentProperties agentConfiguration)
  nameWithType: DockerBuildRequest.withAgentConfiguration(AgentProperties agentConfiguration)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withAgentConfiguration(AgentProperties agentConfiguration)
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withAgentConfiguration*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the agentConfiguration property: The machine configuration of the run agent.'
  syntax:
    content: public DockerBuildRequest withAgentConfiguration(AgentProperties agentConfiguration)
    parameters:
    - id: agentConfiguration
      type: com.azure.resourcemanager.containerregistry.models.AgentProperties
      description: the agentConfiguration value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withArguments(java.util.List<com.azure.resourcemanager.containerregistry.models.Argument>)
  id: withArguments(java.util.List<com.azure.resourcemanager.containerregistry.models.Argument>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: withArguments(List<Argument> arguments)
  nameWithType: DockerBuildRequest.withArguments(List<Argument> arguments)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withArguments(List<Argument> arguments)
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withArguments*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the arguments property: The collection of override arguments to be used when executing the run.'
  syntax:
    content: public DockerBuildRequest withArguments(List<Argument> arguments)
    parameters:
    - id: arguments
      type: java.util.List<com.azure.resourcemanager.containerregistry.models.Argument>
      description: the arguments value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withCredentials(com.azure.resourcemanager.containerregistry.models.Credentials)
  id: withCredentials(com.azure.resourcemanager.containerregistry.models.Credentials)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: withCredentials(Credentials credentials)
  nameWithType: DockerBuildRequest.withCredentials(Credentials credentials)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withCredentials(Credentials credentials)
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withCredentials*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the credentials property: The properties that describes a set of credentials that will be used when this run is invoked.'
  syntax:
    content: public DockerBuildRequest withCredentials(Credentials credentials)
    parameters:
    - id: credentials
      type: com.azure.resourcemanager.containerregistry.models.Credentials
      description: the credentials value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withDockerFilePath(java.lang.String)
  id: withDockerFilePath(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: withDockerFilePath(String dockerFilePath)
  nameWithType: DockerBuildRequest.withDockerFilePath(String dockerFilePath)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withDockerFilePath(String dockerFilePath)
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withDockerFilePath*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the dockerFilePath property: The Docker file path relative to the source location.'
  syntax:
    content: public DockerBuildRequest withDockerFilePath(String dockerFilePath)
    parameters:
    - id: dockerFilePath
      type: java.lang.String
      description: the dockerFilePath value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withImageNames(java.util.List<java.lang.String>)
  id: withImageNames(java.util.List<java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: withImageNames(List<String> imageNames)
  nameWithType: DockerBuildRequest.withImageNames(List<String> imageNames)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withImageNames(List<String> imageNames)
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withImageNames*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the imageNames property: The fully qualified image names including the repository and tag.'
  syntax:
    content: public DockerBuildRequest withImageNames(List<String> imageNames)
    parameters:
    - id: imageNames
      type: java.util.List<java.lang.String>
      description: the imageNames value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withIsPushEnabled(java.lang.Boolean)
  id: withIsPushEnabled(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: withIsPushEnabled(Boolean isPushEnabled)
  nameWithType: DockerBuildRequest.withIsPushEnabled(Boolean isPushEnabled)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withIsPushEnabled(Boolean isPushEnabled)
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withIsPushEnabled*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the isPushEnabled property: The value of this property indicates whether the image built should be pushed to the registry or not.'
  syntax:
    content: public DockerBuildRequest withIsPushEnabled(Boolean isPushEnabled)
    parameters:
    - id: isPushEnabled
      type: java.lang.Boolean
      description: the isPushEnabled value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withNoCache(java.lang.Boolean)
  id: withNoCache(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: withNoCache(Boolean noCache)
  nameWithType: DockerBuildRequest.withNoCache(Boolean noCache)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withNoCache(Boolean noCache)
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withNoCache*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the noCache property: The value of this property indicates whether the image cache is enabled or not.'
  syntax:
    content: public DockerBuildRequest withNoCache(Boolean noCache)
    parameters:
    - id: noCache
      type: java.lang.Boolean
      description: the noCache value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withPlatform(com.azure.resourcemanager.containerregistry.models.PlatformProperties)
  id: withPlatform(com.azure.resourcemanager.containerregistry.models.PlatformProperties)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: withPlatform(PlatformProperties platform)
  nameWithType: DockerBuildRequest.withPlatform(PlatformProperties platform)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withPlatform(PlatformProperties platform)
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withPlatform*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the platform property: The platform properties against which the run has to happen.'
  syntax:
    content: public DockerBuildRequest withPlatform(PlatformProperties platform)
    parameters:
    - id: platform
      type: com.azure.resourcemanager.containerregistry.models.PlatformProperties
      description: the platform value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withSourceLocation(java.lang.String)
  id: withSourceLocation(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: withSourceLocation(String sourceLocation)
  nameWithType: DockerBuildRequest.withSourceLocation(String sourceLocation)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withSourceLocation(String sourceLocation)
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withSourceLocation*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the sourceLocation property: The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository. If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.'
  syntax:
    content: public DockerBuildRequest withSourceLocation(String sourceLocation)
    parameters:
    - id: sourceLocation
      type: java.lang.String
      description: the sourceLocation value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withTarget(java.lang.String)
  id: withTarget(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: withTarget(String target)
  nameWithType: DockerBuildRequest.withTarget(String target)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withTarget(String target)
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withTarget*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the target property: The name of the target build stage for the docker build.'
  syntax:
    content: public DockerBuildRequest withTarget(String target)
    parameters:
    - id: target
      type: java.lang.String
      description: the target value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
      description: the DockerBuildRequest object itself.
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withTimeout(java.lang.Integer)
  id: withTimeout(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-containerregistry:2.0.0-beta.2
  parent: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
  langs:
  - java
  name: withTimeout(Integer timeout)
  nameWithType: DockerBuildRequest.withTimeout(Integer timeout)
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withTimeout(Integer timeout)
  overload: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withTimeout*
  type: Method
  package: com.azure.resourcemanager.containerregistry.models
  summary: 'Set the timeout property: Run timeout in seconds.'
  syntax:
    content: public DockerBuildRequest withTimeout(Integer timeout)
    parameters:
    - id: timeout
      type: java.lang.Integer
      description: the timeout value to set.
    return:
      type: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest
      description: the DockerBuildRequest object itself.
references:
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.DockerBuildRequest*
  name: DockerBuildRequest
  nameWithType: DockerBuildRequest.DockerBuildRequest
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.DockerBuildRequest
  package: com.azure.resourcemanager.containerregistry.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.imageNames*
  name: imageNames
  nameWithType: DockerBuildRequest.imageNames
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.imageNames
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withImageNames*
  name: withImageNames
  nameWithType: DockerBuildRequest.withImageNames
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withImageNames
  package: com.azure.resourcemanager.containerregistry.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.isPushEnabled*
  name: isPushEnabled
  nameWithType: DockerBuildRequest.isPushEnabled
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.isPushEnabled
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withIsPushEnabled*
  name: withIsPushEnabled
  nameWithType: DockerBuildRequest.withIsPushEnabled
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withIsPushEnabled
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.noCache*
  name: noCache
  nameWithType: DockerBuildRequest.noCache
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.noCache
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withNoCache*
  name: withNoCache
  nameWithType: DockerBuildRequest.withNoCache
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withNoCache
  package: com.azure.resourcemanager.containerregistry.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.dockerFilePath*
  name: dockerFilePath
  nameWithType: DockerBuildRequest.dockerFilePath
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.dockerFilePath
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withDockerFilePath*
  name: withDockerFilePath
  nameWithType: DockerBuildRequest.withDockerFilePath
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withDockerFilePath
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.target*
  name: target
  nameWithType: DockerBuildRequest.target
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.target
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withTarget*
  name: withTarget
  nameWithType: DockerBuildRequest.withTarget
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withTarget
  package: com.azure.resourcemanager.containerregistry.models
- uid: java.util.List<com.azure.resourcemanager.containerregistry.models.Argument>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.containerregistry.models.Argument
    name: Argument
    fullName: com.azure.resourcemanager.containerregistry.models.Argument
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.arguments*
  name: arguments
  nameWithType: DockerBuildRequest.arguments
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.arguments
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withArguments*
  name: withArguments
  nameWithType: DockerBuildRequest.withArguments
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withArguments
  package: com.azure.resourcemanager.containerregistry.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.timeout*
  name: timeout
  nameWithType: DockerBuildRequest.timeout
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.timeout
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withTimeout*
  name: withTimeout
  nameWithType: DockerBuildRequest.withTimeout
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withTimeout
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.PlatformProperties
  name: PlatformProperties
  nameWithType: PlatformProperties
  fullName: com.azure.resourcemanager.containerregistry.models.PlatformProperties
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.platform*
  name: platform
  nameWithType: DockerBuildRequest.platform
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.platform
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withPlatform*
  name: withPlatform
  nameWithType: DockerBuildRequest.withPlatform
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withPlatform
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.AgentProperties
  name: AgentProperties
  nameWithType: AgentProperties
  fullName: com.azure.resourcemanager.containerregistry.models.AgentProperties
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.agentConfiguration*
  name: agentConfiguration
  nameWithType: DockerBuildRequest.agentConfiguration
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.agentConfiguration
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withAgentConfiguration*
  name: withAgentConfiguration
  nameWithType: DockerBuildRequest.withAgentConfiguration
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withAgentConfiguration
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.sourceLocation*
  name: sourceLocation
  nameWithType: DockerBuildRequest.sourceLocation
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.sourceLocation
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withSourceLocation*
  name: withSourceLocation
  nameWithType: DockerBuildRequest.withSourceLocation
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withSourceLocation
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.Credentials
  name: Credentials
  nameWithType: Credentials
  fullName: com.azure.resourcemanager.containerregistry.models.Credentials
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.credentials*
  name: credentials
  nameWithType: DockerBuildRequest.credentials
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.credentials
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withCredentials*
  name: withCredentials
  nameWithType: DockerBuildRequest.withCredentials
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.withCredentials
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.validate*
  name: validate
  nameWithType: DockerBuildRequest.validate
  fullName: com.azure.resourcemanager.containerregistry.models.DockerBuildRequest.validate
  package: com.azure.resourcemanager.containerregistry.models
- uid: com.azure.resourcemanager.containerregistry.models.RunRequest
  name: RunRequest
  nameWithType: RunRequest
  fullName: com.azure.resourcemanager.containerregistry.models.RunRequest
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.resourcemanager.containerregistry.models.RunRequest.validate()
  name: RunRequest.validate()
  nameWithType: RunRequest.validate()
  fullName: com.azure.resourcemanager.containerregistry.models.RunRequest.validate()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.resourcemanager.containerregistry.models.RunRequest.isArchiveEnabled()
  name: RunRequest.isArchiveEnabled()
  nameWithType: RunRequest.isArchiveEnabled()
  fullName: com.azure.resourcemanager.containerregistry.models.RunRequest.isArchiveEnabled()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.containerregistry.models.RunRequest.withIsArchiveEnabled(java.lang.Boolean)
  name: RunRequest.withIsArchiveEnabled(Boolean)
  nameWithType: RunRequest.withIsArchiveEnabled(Boolean)
  fullName: com.azure.resourcemanager.containerregistry.models.RunRequest.withIsArchiveEnabled(java.lang.Boolean)
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.resourcemanager.containerregistry.models.Argument
  name: Argument
  nameWithType: Argument
  fullName: com.azure.resourcemanager.containerregistry.models.Argument
