### YamlMime:JavaMember
uid: "com.azure.resourcemanager.synapse.models.LinkedIntegrationRuntimeRbacAuthorization.withResourceId*"
fullName: "com.azure.resourcemanager.synapse.models.LinkedIntegrationRuntimeRbacAuthorization.withResourceId"
name: "withResourceId"
nameWithType: "LinkedIntegrationRuntimeRbacAuthorization.withResourceId"
members:
- uid: "com.azure.resourcemanager.synapse.models.LinkedIntegrationRuntimeRbacAuthorization.withResourceId(java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.models.LinkedIntegrationRuntimeRbacAuthorization.withResourceId(String resourceId)"
  name: "withResourceId(String resourceId)"
  nameWithType: "LinkedIntegrationRuntimeRbacAuthorization.withResourceId(String resourceId)"
  summary: "Set the resourceId property: The resource identifier of the integration runtime to be shared."
  parameters:
  - description: "the resourceId value to set."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LinkedIntegrationRuntimeRbacAuthorization withResourceId(String resourceId)"
  returns:
    description: "the LinkedIntegrationRuntimeRbacAuthorization object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.LinkedIntegrationRuntimeRbacAuthorization?alt=com.azure.resourcemanager.synapse.models.LinkedIntegrationRuntimeRbacAuthorization&text=LinkedIntegrationRuntimeRbacAuthorization\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.synapse.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-synapse:1.0.0-beta.1
