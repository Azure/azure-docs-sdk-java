### YamlMime:JavaType
uid: "com.azure.compute.batch.models.InboundNatPool"
fullName: "com.azure.compute.batch.models.InboundNatPool"
name: "InboundNatPool"
nameWithType: "InboundNatPool"
summary: "A inbound NAT Pool that can be used to address specific ports on Compute Nodes in a Batch Pool externally."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **InboundNatPool**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.InboundNatPool?alt=com.azure.compute.batch.models.InboundNatPool&text=InboundNatPool\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.compute.batch.models.InboundNatPool.InboundNatPool(java.lang.String,com.azure.compute.batch.models.InboundEndpointProtocol,int,int,int)"
  fullName: "com.azure.compute.batch.models.InboundNatPool.InboundNatPool(String name, InboundEndpointProtocol protocol, int backendPort, int frontendPortRangeStart, int frontendPortRangeEnd)"
  name: "InboundNatPool(String name, InboundEndpointProtocol protocol, int backendPort, int frontendPortRangeStart, int frontendPortRangeEnd)"
  nameWithType: "InboundNatPool.InboundNatPool(String name, InboundEndpointProtocol protocol, int backendPort, int frontendPortRangeStart, int frontendPortRangeEnd)"
  summary: "Creates an instance of Inbound<wbr>Nat<wbr>Pool class."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the protocol value to set."
    name: "protocol"
    type: "<xref href=\"com.azure.compute.batch.models.InboundEndpointProtocol?alt=com.azure.compute.batch.models.InboundEndpointProtocol&text=InboundEndpointProtocol\" data-throw-if-not-resolved=\"False\" />"
  - description: "the backendPort value to set."
    name: "backendPort"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the frontendPortRangeStart value to set."
    name: "frontendPortRangeStart"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the frontendPortRangeEnd value to set."
    name: "frontendPortRangeEnd"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public InboundNatPool(String name, InboundEndpointProtocol protocol, int backendPort, int frontendPortRangeStart, int frontendPortRangeEnd)"
  desc: "Creates an instance of InboundNatPool class."
methods:
- uid: "com.azure.compute.batch.models.InboundNatPool.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.compute.batch.models.InboundNatPool.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "InboundNatPool.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Inbound<wbr>Nat<wbr>Pool from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static InboundNatPool fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of InboundNatPool from the JsonReader."
  returns:
    description: "An instance of InboundNatPool if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.compute.batch.models.InboundNatPool?alt=com.azure.compute.batch.models.InboundNatPool&text=InboundNatPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.InboundNatPool.getBackendPort()"
  fullName: "com.azure.compute.batch.models.InboundNatPool.getBackendPort()"
  name: "getBackendPort()"
  nameWithType: "InboundNatPool.getBackendPort()"
  summary: "Get the backend<wbr>Port property: The port number on the Compute Node."
  syntax: "public int getBackendPort()"
  desc: "Get the backendPort property: The port number on the Compute Node. This must be unique within a Batch Pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400."
  returns:
    description: "the backendPort value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.InboundNatPool.getFrontendPortRangeEnd()"
  fullName: "com.azure.compute.batch.models.InboundNatPool.getFrontendPortRangeEnd()"
  name: "getFrontendPortRangeEnd()"
  nameWithType: "InboundNatPool.getFrontendPortRangeEnd()"
  summary: "Get the frontend<wbr>Port<wbr>Range<wbr>End property: The last port number in the range of external ports that will be used to provide inbound access to the backend<wbr>Port on individual Compute Nodes."
  syntax: "public int getFrontendPortRangeEnd()"
  desc: "Get the frontendPortRangeEnd property: The last port number in the range of external ports that will be used to provide inbound access to the backendPort on individual Compute Nodes. Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a Pool must be distinct and cannot overlap. Each range must contain at least 40 ports. If any reserved or overlapping values are provided the request fails with HTTP status code 400."
  returns:
    description: "the frontendPortRangeEnd value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.InboundNatPool.getFrontendPortRangeStart()"
  fullName: "com.azure.compute.batch.models.InboundNatPool.getFrontendPortRangeStart()"
  name: "getFrontendPortRangeStart()"
  nameWithType: "InboundNatPool.getFrontendPortRangeStart()"
  summary: "Get the frontend<wbr>Port<wbr>Range<wbr>Start property: The first port number in the range of external ports that will be used to provide inbound access to the backend<wbr>Port on individual Compute Nodes."
  syntax: "public int getFrontendPortRangeStart()"
  desc: "Get the frontendPortRangeStart property: The first port number in the range of external ports that will be used to provide inbound access to the backendPort on individual Compute Nodes. Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a Pool must be distinct and cannot overlap. Each range must contain at least 40 ports. If any reserved or overlapping values are provided the request fails with HTTP status code 400."
  returns:
    description: "the frontendPortRangeStart value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.InboundNatPool.getName()"
  fullName: "com.azure.compute.batch.models.InboundNatPool.getName()"
  name: "getName()"
  nameWithType: "InboundNatPool.getName()"
  summary: "Get the name property: The name of the endpoint."
  syntax: "public String getName()"
  desc: "Get the name property: The name of the endpoint. The name must be unique within a Batch Pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters. If any invalid values are provided the request fails with HTTP status code 400."
  returns:
    description: "the name value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.compute.batch.models.InboundNatPool.getNetworkSecurityGroupRules()"
  fullName: "com.azure.compute.batch.models.InboundNatPool.getNetworkSecurityGroupRules()"
  name: "getNetworkSecurityGroupRules()"
  nameWithType: "InboundNatPool.getNetworkSecurityGroupRules()"
  summary: "Get the network<wbr>Security<wbr>Group<wbr>Rules property: A list of network security group rules that will be applied to the endpoint."
  syntax: "public List<NetworkSecurityGroupRule> getNetworkSecurityGroupRules()"
  desc: "Get the networkSecurityGroupRules property: A list of network security group rules that will be applied to the endpoint. The maximum number of rules that can be specified across all the endpoints on a Batch Pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400."
  returns:
    description: "the networkSecurityGroupRules value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.NetworkSecurityGroupRule?alt=com.azure.compute.batch.models.NetworkSecurityGroupRule&text=NetworkSecurityGroupRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.compute.batch.models.InboundNatPool.getProtocol()"
  fullName: "com.azure.compute.batch.models.InboundNatPool.getProtocol()"
  name: "getProtocol()"
  nameWithType: "InboundNatPool.getProtocol()"
  summary: "Get the protocol property: The protocol of the endpoint."
  syntax: "public InboundEndpointProtocol getProtocol()"
  desc: "Get the protocol property: The protocol of the endpoint."
  returns:
    description: "the protocol value."
    type: "<xref href=\"com.azure.compute.batch.models.InboundEndpointProtocol?alt=com.azure.compute.batch.models.InboundEndpointProtocol&text=InboundEndpointProtocol\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.InboundNatPool.setNetworkSecurityGroupRules(java.util.List<com.azure.compute.batch.models.NetworkSecurityGroupRule>)"
  fullName: "com.azure.compute.batch.models.InboundNatPool.setNetworkSecurityGroupRules(List<NetworkSecurityGroupRule> networkSecurityGroupRules)"
  name: "setNetworkSecurityGroupRules(List<NetworkSecurityGroupRule> networkSecurityGroupRules)"
  nameWithType: "InboundNatPool.setNetworkSecurityGroupRules(List<NetworkSecurityGroupRule> networkSecurityGroupRules)"
  summary: "Set the network<wbr>Security<wbr>Group<wbr>Rules property: A list of network security group rules that will be applied to the endpoint."
  parameters:
  - description: "the networkSecurityGroupRules value to set."
    name: "networkSecurityGroupRules"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.compute.batch.models.NetworkSecurityGroupRule?alt=com.azure.compute.batch.models.NetworkSecurityGroupRule&text=NetworkSecurityGroupRule\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public InboundNatPool setNetworkSecurityGroupRules(List<NetworkSecurityGroupRule> networkSecurityGroupRules)"
  desc: "Set the networkSecurityGroupRules property: A list of network security group rules that will be applied to the endpoint. The maximum number of rules that can be specified across all the endpoints on a Batch Pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400."
  returns:
    description: "the InboundNatPool object itself."
    type: "<xref href=\"com.azure.compute.batch.models.InboundNatPool?alt=com.azure.compute.batch.models.InboundNatPool&text=InboundNatPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.compute.batch.models.InboundNatPool.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.compute.batch.models.InboundNatPool.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "InboundNatPool.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A inbound NAT Pool that can be used to address specific ports on Compute Nodes in a Batch Pool externally."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.compute.batch.models.InboundNatPool?alt=com.azure.compute.batch.models.InboundNatPool&text=InboundNatPool\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.compute.batch.models"
artifact: com.azure:azure-compute-batch:1.0.0-beta.3
