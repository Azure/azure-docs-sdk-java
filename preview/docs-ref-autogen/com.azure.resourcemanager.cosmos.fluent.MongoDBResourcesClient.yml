### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  id: MongoDBResourcesClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent
  children:
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.MongoDBResourcesClient(com.azure.resourcemanager.cosmos.CosmosDBManagementClient)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollections(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollections(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabases(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabases(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  langs:
  - java
  name: MongoDBResourcesClient
  nameWithType: MongoDBResourcesClient
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  type: Class
  package: com.azure.resourcemanager.cosmos.fluent
  summary: An instance of this class provides access to all the operations defined in MongoDBResources.
  syntax:
    content: public final class MongoDBResourcesClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.MongoDBResourcesClient(com.azure.resourcemanager.cosmos.CosmosDBManagementClient)
  id: MongoDBResourcesClient(com.azure.resourcemanager.cosmos.CosmosDBManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: MongoDBResourcesClient(CosmosDBManagementClient client)
  nameWithType: MongoDBResourcesClient.MongoDBResourcesClient(CosmosDBManagementClient client)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.MongoDBResourcesClient(CosmosDBManagementClient client)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.MongoDBResourcesClient*
  type: Constructor
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Initializes an instance of MongoDBResourcesClient.
  syntax:
    content: public MongoDBResourcesClient(CosmosDBManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.cosmos.CosmosDBManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  id: beginCreateUpdateMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollection*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public PollerFlux<PollResult<MongoDBCollectionGetResultsInner>,MongoDBCollectionGetResultsInner> beginCreateUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollection*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public PollerFlux<PollResult<MongoDBCollectionGetResultsInner>,MongoDBCollectionGetResultsInner> beginCreateUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  id: beginCreateUpdateMongoDBCollectionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public MongoDBCollectionGetResultsInner beginCreateUpdateMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateMongoDBCollectionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public MongoDBCollectionGetResultsInner beginCreateUpdateMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  id: beginCreateUpdateMongoDBCollectionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<MongoDBCollectionGetResultsInner> beginCreateUpdateMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateMongoDBCollectionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<MongoDBCollectionGetResultsInner> beginCreateUpdateMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  id: beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<Response<MongoDBCollectionGetResultsInner>> beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>>
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<Response<MongoDBCollectionGetResultsInner>> beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>>
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  id: beginCreateUpdateMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public PollerFlux<PollResult<MongoDBDatabaseGetResultsInner>,MongoDBDatabaseGetResultsInner> beginCreateUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public PollerFlux<PollResult<MongoDBDatabaseGetResultsInner>,MongoDBDatabaseGetResultsInner> beginCreateUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  id: beginCreateUpdateMongoDBDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public MongoDBDatabaseGetResultsInner beginCreateUpdateMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateMongoDBDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public MongoDBDatabaseGetResultsInner beginCreateUpdateMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  id: beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<MongoDBDatabaseGetResultsInner> beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<MongoDBDatabaseGetResultsInner> beginCreateUpdateMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  id: beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Response<MongoDBDatabaseGetResultsInner>> beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>>
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Response<MongoDBDatabaseGetResultsInner>> beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>>
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollection*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollection*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteMongoDBCollectionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public void beginDeleteMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteMongoDBCollectionWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public void beginDeleteMongoDBCollectionWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteMongoDBCollectionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<Void> beginDeleteMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteMongoDBCollectionWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<Void> beginDeleteMongoDBCollectionWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<Response<Void>> beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<Response<Void>> beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteMongoDBDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public void beginDeleteMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteMongoDBDatabaseWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public void beginDeleteMongoDBDatabaseWithoutPolling(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteMongoDBDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Void> beginDeleteMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteMongoDBDatabaseWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Void> beginDeleteMongoDBDatabaseWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Response<Void>> beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Response<Void>> beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public PollerFlux<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public PollerFlux<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateMongoDBCollectionThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBCollectionThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public ThroughputSettingsGetResultsInner beginUpdateMongoDBCollectionThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateMongoDBCollectionThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBCollectionThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public ThroughputSettingsGetResultsInner beginUpdateMongoDBCollectionThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> beginUpdateMongoDBCollectionThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public PollerFlux<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public PollerFlux<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateMongoDBDatabaseThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public ThroughputSettingsGetResultsInner beginUpdateMongoDBDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateMongoDBDatabaseThroughputWithoutPolling(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public ThroughputSettingsGetResultsInner beginUpdateMongoDBDatabaseThroughputWithoutPolling(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  id: createUpdateMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: createUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollection*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public MongoDBCollectionGetResultsInner createUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: createUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollection*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public MongoDBCollectionGetResultsInner createUpdateMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  id: createUpdateMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: createUpdateMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<MongoDBCollectionGetResultsInner> createUpdateMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: createUpdateMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<MongoDBCollectionGetResultsInner> createUpdateMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  id: createUpdateMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: createUpdateMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: createUpdateMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, MongoDBCollectionCreateUpdateParameters createUpdateMongoDBCollectionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: createUpdateMongoDBCollectionParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB collection.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB MongoDB collection.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  id: createUpdateMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: createUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public MongoDBDatabaseGetResultsInner createUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: createUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public MongoDBDatabaseGetResultsInner createUpdateMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  id: createUpdateMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: createUpdateMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<MongoDBDatabaseGetResultsInner> createUpdateMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: createUpdateMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<MongoDBDatabaseGetResultsInner> createUpdateMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  id: createUpdateMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: createUpdateMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: createUpdateMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, MongoDBDatabaseCreateUpdateParameters createUpdateMongoDBDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateMongoDBDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB MongoDB database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB MongoDB database.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: deleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.deleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollection*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public void deleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: deleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.deleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollection*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public void deleteMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: deleteMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.deleteMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<Void> deleteMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: deleteMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.deleteMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<Void> deleteMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: deleteMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: deleteMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String)
  id: deleteMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: deleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.deleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public void deleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: deleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.deleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public void deleteMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: deleteMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.deleteMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Void> deleteMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: deleteMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.deleteMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Void> deleteMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: deleteMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: deleteMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.getMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollection*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the MongoDB collection under an existing Azure Cosmos DB database account.
  syntax:
    content: public MongoDBCollectionGetResultsInner getMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
      description: the MongoDB collection under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getMongoDBCollection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.getMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollection*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the MongoDB collection under an existing Azure Cosmos DB database account.
  syntax:
    content: public MongoDBCollectionGetResultsInner getMongoDBCollection(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
      description: the MongoDB collection under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the MongoDB collection under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<MongoDBCollectionGetResultsInner> getMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
      description: the MongoDB collection under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getMongoDBCollectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the MongoDB collection under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<MongoDBCollectionGetResultsInner> getMongoDBCollectionAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
      description: the MongoDB collection under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public ThroughputSettingsGetResultsInner getMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: >-
        the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public ThroughputSettingsGetResultsInner getMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: >-
        the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getMongoDBCollectionThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> getMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: >-
        the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getMongoDBCollectionThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> getMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: >-
        the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getMongoDBCollectionThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> getMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: >-
        the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getMongoDBCollectionThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> getMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: >-
        the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the MongoDB collection under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<MongoDBCollectionGetResultsInner>> getMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>>
      description: the MongoDB collection under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getMongoDBCollectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the MongoDB collection under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<MongoDBCollectionGetResultsInner>> getMongoDBCollectionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>>
      description: the MongoDB collection under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String)
  id: getMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBDatabase(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.getMongoDBDatabase(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabase(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public MongoDBDatabaseGetResultsInner getMongoDBDatabase(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
      description: the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getMongoDBDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.getMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public MongoDBDatabaseGetResultsInner getMongoDBDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
      description: the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<MongoDBDatabaseGetResultsInner> getMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
      description: the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getMongoDBDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<MongoDBDatabaseGetResultsInner> getMongoDBDatabaseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
      description: the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String)
  id: getMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public ThroughputSettingsGetResultsInner getMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: >-
        the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public ThroughputSettingsGetResultsInner getMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: >-
        the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getMongoDBDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> getMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: >-
        the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getMongoDBDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> getMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: >-
        the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getMongoDBDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> getMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: >-
        the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getMongoDBDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> getMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
      description: >-
        the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<Response<MongoDBDatabaseGetResultsInner>> getMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>>
      description: the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getMongoDBDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: getMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<Response<MongoDBDatabaseGetResultsInner>> getMongoDBDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>>
      description: the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollections(java.lang.String,java.lang.String,java.lang.String)
  id: listMongoDBCollections(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: listMongoDBCollections(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.listMongoDBCollections(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollections(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollections*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the MongoDB collection under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<MongoDBCollectionGetResultsInner> listMongoDBCollections(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
      description: the List operation response, that contains the MongoDB collections and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollections(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listMongoDBCollections(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: listMongoDBCollections(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.listMongoDBCollections(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollections(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollections*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the MongoDB collection under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<MongoDBCollectionGetResultsInner> listMongoDBCollections(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
      description: the List operation response, that contains the MongoDB collections and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listMongoDBCollectionsAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: listMongoDBCollectionsAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.listMongoDBCollectionsAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the MongoDB collection under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<MongoDBCollectionGetResultsInner> listMongoDBCollectionsAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
      description: the List operation response, that contains the MongoDB collections and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listMongoDBCollectionsAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: listMongoDBCollectionsAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.listMongoDBCollectionsAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the MongoDB collection under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<MongoDBCollectionGetResultsInner> listMongoDBCollectionsAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
      description: the List operation response, that contains the MongoDB collections and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listMongoDBCollectionsSinglePageAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: listMongoDBCollectionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the MongoDB collection under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<MongoDBCollectionGetResultsInner>> listMongoDBCollectionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>>
      description: the List operation response, that contains the MongoDB collections and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listMongoDBCollectionsSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: listMongoDBCollectionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the MongoDB collection under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<MongoDBCollectionGetResultsInner>> listMongoDBCollectionsSinglePageAsync(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>>
      description: the List operation response, that contains the MongoDB collections and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabases(java.lang.String,java.lang.String)
  id: listMongoDBDatabases(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: listMongoDBDatabases(String resourceGroupName, String accountName)
  nameWithType: MongoDBResourcesClient.listMongoDBDatabases(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabases(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabases*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the MongoDB databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<MongoDBDatabaseGetResultsInner> listMongoDBDatabases(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
      description: the List operation response, that contains the MongoDB databases and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabases(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listMongoDBDatabases(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: listMongoDBDatabases(String resourceGroupName, String accountName, Context context)
  nameWithType: MongoDBResourcesClient.listMongoDBDatabases(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabases(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabases*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the MongoDB databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<MongoDBDatabaseGetResultsInner> listMongoDBDatabases(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
      description: the List operation response, that contains the MongoDB databases and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesAsync(java.lang.String,java.lang.String)
  id: listMongoDBDatabasesAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: listMongoDBDatabasesAsync(String resourceGroupName, String accountName)
  nameWithType: MongoDBResourcesClient.listMongoDBDatabasesAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the MongoDB databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<MongoDBDatabaseGetResultsInner> listMongoDBDatabasesAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
      description: the List operation response, that contains the MongoDB databases and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listMongoDBDatabasesAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: listMongoDBDatabasesAsync(String resourceGroupName, String accountName, Context context)
  nameWithType: MongoDBResourcesClient.listMongoDBDatabasesAsync(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesAsync(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the MongoDB databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<MongoDBDatabaseGetResultsInner> listMongoDBDatabasesAsync(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
      description: the List operation response, that contains the MongoDB databases and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync(java.lang.String,java.lang.String)
  id: listMongoDBDatabasesSinglePageAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: listMongoDBDatabasesSinglePageAsync(String resourceGroupName, String accountName)
  nameWithType: MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the MongoDB databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<MongoDBDatabaseGetResultsInner>> listMongoDBDatabasesSinglePageAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>>
      description: the List operation response, that contains the MongoDB databases and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listMongoDBDatabasesSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: listMongoDBDatabasesSinglePageAsync(String resourceGroupName, String accountName, Context context)
  nameWithType: MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Lists the MongoDB databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<PagedResponse<MongoDBDatabaseGetResultsInner>> listMongoDBDatabasesSinglePageAsync(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>>
      description: the List operation response, that contains the MongoDB databases and their properties.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: updateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.updateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public ThroughputSettingsGetResultsInner updateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateMongoDBCollectionThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: updateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.updateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public ThroughputSettingsGetResultsInner updateMongoDBCollectionThroughput(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateMongoDBCollectionThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: updateMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> updateMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateMongoDBCollectionThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: updateMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> updateMongoDBCollectionThroughputAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateMongoDBCollectionThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: updateMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateMongoDBCollectionThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: updateMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateMongoDBCollectionThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String collectionName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: collectionName
      type: java.lang.String
      description: Cosmos DB collection name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: updateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.updateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public ThroughputSettingsGetResultsInner updateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateMongoDBDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: updateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.updateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public ThroughputSettingsGetResultsInner updateMongoDBDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateMongoDBDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: updateMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> updateMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateMongoDBDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: updateMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> updateMongoDBDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateMongoDBDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: updateMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateMongoDBDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0-beta.2
  parent: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient
  langs:
  - java
  name: updateMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.fluent
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateMongoDBDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB resource throughput.
references:
- uid: com.azure.resourcemanager.cosmos.CosmosDBManagementClient
  name: CosmosDBManagementClient
  nameWithType: CosmosDBManagementClient
  fullName: com.azure.resourcemanager.cosmos.CosmosDBManagementClient
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.MongoDBResourcesClient*
  name: MongoDBResourcesClient
  nameWithType: MongoDBResourcesClient.MongoDBResourcesClient
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.MongoDBResourcesClient
  package: com.azure.resourcemanager.cosmos.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
    name: MongoDBDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync*
  name: listMongoDBDatabasesSinglePageAsync
  nameWithType: MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesSinglePageAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
    name: MongoDBDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesAsync*
  name: listMongoDBDatabasesAsync
  nameWithType: MongoDBResourcesClient.listMongoDBDatabasesAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabasesAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
    name: MongoDBDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabases*
  name: listMongoDBDatabases
  nameWithType: MongoDBResourcesClient.listMongoDBDatabases
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBDatabases
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
    name: MongoDBDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync*
  name: getMongoDBDatabaseWithResponseAsync
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
    name: MongoDBDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseAsync*
  name: getMongoDBDatabaseAsync
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
  name: MongoDBDatabaseGetResultsInner
  nameWithType: MongoDBDatabaseGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabase*
  name: getMongoDBDatabase
  nameWithType: MongoDBResourcesClient.getMongoDBDatabase
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabase
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
  name: MongoDBDatabaseCreateUpdateParameters
  nameWithType: MongoDBDatabaseCreateUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.MongoDBDatabaseCreateUpdateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync*
  name: createUpdateMongoDBDatabaseWithResponseAsync
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
    name: MongoDBDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
    name: MongoDBDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase*
  name: beginCreateUpdateMongoDBDatabase
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabase
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync*
  name: createUpdateMongoDBDatabaseAsync
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabaseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabase*
  name: createUpdateMongoDBDatabase
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBDatabase
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBDatabase
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync*
  name: deleteMongoDBDatabaseWithResponseAsync
  nameWithType: MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabase*
  name: beginDeleteMongoDBDatabase
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBDatabase
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabase
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseAsync*
  name: deleteMongoDBDatabaseAsync
  nameWithType: MongoDBResourcesClient.deleteMongoDBDatabaseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabaseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabase*
  name: deleteMongoDBDatabase
  nameWithType: MongoDBResourcesClient.deleteMongoDBDatabase
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBDatabase
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync*
  name: getMongoDBDatabaseThroughputWithResponseAsync
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync*
  name: getMongoDBDatabaseThroughputAsync
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughputAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
  name: ThroughputSettingsGetResultsInner
  nameWithType: ThroughputSettingsGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughput*
  name: getMongoDBDatabaseThroughput
  nameWithType: MongoDBResourcesClient.getMongoDBDatabaseThroughput
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBDatabaseThroughput
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
  name: ThroughputSettingsUpdateParameters
  nameWithType: ThroughputSettingsUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync*
  name: updateMongoDBDatabaseThroughputWithResponseAsync
  nameWithType: MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput*
  name: beginUpdateMongoDBDatabaseThroughput
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughput
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync*
  name: updateMongoDBDatabaseThroughputAsync
  nameWithType: MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughputAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughput*
  name: updateMongoDBDatabaseThroughput
  nameWithType: MongoDBResourcesClient.updateMongoDBDatabaseThroughput
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBDatabaseThroughput
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
    name: MongoDBCollectionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync*
  name: listMongoDBCollectionsSinglePageAsync
  nameWithType: MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsSinglePageAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
    name: MongoDBCollectionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsAsync*
  name: listMongoDBCollectionsAsync
  nameWithType: MongoDBResourcesClient.listMongoDBCollectionsAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollectionsAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
    name: MongoDBCollectionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollections*
  name: listMongoDBCollections
  nameWithType: MongoDBResourcesClient.listMongoDBCollections
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.listMongoDBCollections
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
    name: MongoDBCollectionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync*
  name: getMongoDBCollectionWithResponseAsync
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
    name: MongoDBCollectionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionAsync*
  name: getMongoDBCollectionAsync
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
  name: MongoDBCollectionGetResultsInner
  nameWithType: MongoDBCollectionGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollection*
  name: getMongoDBCollection
  nameWithType: MongoDBResourcesClient.getMongoDBCollection
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollection
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
  name: MongoDBCollectionCreateUpdateParameters
  nameWithType: MongoDBCollectionCreateUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.MongoDBCollectionCreateUpdateParameters
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync*
  name: createUpdateMongoDBCollectionWithResponseAsync
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
    name: MongoDBCollectionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
    name: MongoDBCollectionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollection*
  name: beginCreateUpdateMongoDBCollection
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBCollection
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollection
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionAsync*
  name: createUpdateMongoDBCollectionAsync
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBCollectionAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollectionAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollection*
  name: createUpdateMongoDBCollection
  nameWithType: MongoDBResourcesClient.createUpdateMongoDBCollection
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.createUpdateMongoDBCollection
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync*
  name: deleteMongoDBCollectionWithResponseAsync
  nameWithType: MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollection*
  name: beginDeleteMongoDBCollection
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBCollection
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollection
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionAsync*
  name: deleteMongoDBCollectionAsync
  nameWithType: MongoDBResourcesClient.deleteMongoDBCollectionAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollectionAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollection*
  name: deleteMongoDBCollection
  nameWithType: MongoDBResourcesClient.deleteMongoDBCollection
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.deleteMongoDBCollection
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync*
  name: getMongoDBCollectionThroughputWithResponseAsync
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputAsync*
  name: getMongoDBCollectionThroughputAsync
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughputAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughput*
  name: getMongoDBCollectionThroughput
  nameWithType: MongoDBResourcesClient.getMongoDBCollectionThroughput
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.getMongoDBCollectionThroughput
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync*
  name: updateMongoDBCollectionThroughputWithResponseAsync
  nameWithType: MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput*
  name: beginUpdateMongoDBCollectionThroughput
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughput
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync*
  name: updateMongoDBCollectionThroughputAsync
  nameWithType: MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughputAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughput*
  name: updateMongoDBCollectionThroughput
  nameWithType: MongoDBResourcesClient.updateMongoDBCollectionThroughput
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.updateMongoDBCollectionThroughput
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync*
  name: beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync*
  name: beginCreateUpdateMongoDBDatabaseWithoutPollingAsync
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling*
  name: beginCreateUpdateMongoDBDatabaseWithoutPolling
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBDatabaseWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync*
  name: beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync*
  name: beginDeleteMongoDBDatabaseWithoutPollingAsync
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling*
  name: beginDeleteMongoDBDatabaseWithoutPolling
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBDatabaseWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync*
  name: beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync*
  name: beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling*
  name: beginUpdateMongoDBDatabaseThroughputWithoutPolling
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBDatabaseThroughputWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync*
  name: beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync*
  name: beginCreateUpdateMongoDBCollectionWithoutPollingAsync
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling*
  name: beginCreateUpdateMongoDBCollectionWithoutPolling
  nameWithType: MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginCreateUpdateMongoDBCollectionWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync*
  name: beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync*
  name: beginDeleteMongoDBCollectionWithoutPollingAsync
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling*
  name: beginDeleteMongoDBCollectionWithoutPolling
  nameWithType: MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginDeleteMongoDBCollectionWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync*
  name: beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync*
  name: beginUpdateMongoDBCollectionThroughputWithoutPollingAsync
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPollingAsync
  package: com.azure.resourcemanager.cosmos.fluent
- uid: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling*
  name: beginUpdateMongoDBCollectionThroughputWithoutPolling
  nameWithType: MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling
  fullName: com.azure.resourcemanager.cosmos.fluent.MongoDBResourcesClient.beginUpdateMongoDBCollectionThroughputWithoutPolling
  package: com.azure.resourcemanager.cosmos.fluent
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
  name: MongoDBDatabaseGetResultsInner>,MongoDBDatabaseGetResultsInner
  nameWithType: MongoDBDatabaseGetResultsInner>,MongoDBDatabaseGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.MongoDBDatabaseGetResultsInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
  name: ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner
  nameWithType: ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.ThroughputSettingsGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
  name: MongoDBCollectionGetResultsInner>,MongoDBCollectionGetResultsInner
  nameWithType: MongoDBCollectionGetResultsInner>,MongoDBCollectionGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.inner.MongoDBCollectionGetResultsInner
