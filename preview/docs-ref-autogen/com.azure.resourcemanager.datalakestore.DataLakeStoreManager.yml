### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager"
fullName: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager"
name: "DataLakeStoreManager"
nameWithType: "DataLakeStoreManager"
summary: "Entry point to Data<wbr>Lake<wbr>Store<wbr>Manager."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DataLakeStoreManager**"
methods:
- uid: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.accounts()"
  fullName: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.accounts()"
  name: "accounts()"
  nameWithType: "DataLakeStoreManager.accounts()"
  summary: "Gets the resource collection API of Accounts."
  syntax: "public Accounts accounts()"
  desc: "Gets the resource collection API of Accounts. It manages DataLakeStoreAccount."
  returns:
    description: "Resource collection API of Accounts."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.Accounts?alt=com.azure.resourcemanager.datalakestore.models.Accounts&text=Accounts\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.authenticate(com.azure.core.http.HttpPipeline,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  name: "authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  nameWithType: "DataLakeStoreManager.authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  summary: "Creates an instance of Data<wbr>Lake<wbr>Store service API entry point."
  modifiers:
  - "static"
  parameters:
  - description: "the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> configured with Azure authentication credential."
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DataLakeStoreManager authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  desc: "Creates an instance of DataLakeStore service API entry point."
  returns:
    description: "the DataLakeStore service API instance."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.DataLakeStoreManager?alt=com.azure.resourcemanager.datalakestore.DataLakeStoreManager&text=DataLakeStoreManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.authenticate(com.azure.core.credential.TokenCredential,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.authenticate(TokenCredential credential, AzureProfile profile)"
  name: "authenticate(TokenCredential credential, AzureProfile profile)"
  nameWithType: "DataLakeStoreManager.authenticate(TokenCredential credential, AzureProfile profile)"
  summary: "Creates an instance of Data<wbr>Lake<wbr>Store service API entry point."
  modifiers:
  - "static"
  parameters:
  - description: "the credential to use."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DataLakeStoreManager authenticate(TokenCredential credential, AzureProfile profile)"
  desc: "Creates an instance of DataLakeStore service API entry point."
  returns:
    description: "the DataLakeStore service API instance."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.DataLakeStoreManager?alt=com.azure.resourcemanager.datalakestore.DataLakeStoreManager&text=DataLakeStoreManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.configure()"
  fullName: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.configure()"
  name: "configure()"
  nameWithType: "DataLakeStoreManager.configure()"
  summary: "Gets a Configurable instance that can be used to create Data<wbr>Lake<wbr>Store<wbr>Manager with optional configuration."
  modifiers:
  - "static"
  syntax: "public static DataLakeStoreManager.Configurable configure()"
  desc: "Gets a Configurable instance that can be used to create DataLakeStoreManager with optional configuration."
  returns:
    description: "the Configurable instance allowing configurations."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.DataLakeStoreManager.Configurable?alt=com.azure.resourcemanager.datalakestore.DataLakeStoreManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.firewallRules()"
  fullName: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.firewallRules()"
  name: "firewallRules()"
  nameWithType: "DataLakeStoreManager.firewallRules()"
  summary: "Gets the resource collection API of Firewall<wbr>Rules."
  syntax: "public FirewallRules firewallRules()"
  desc: "Gets the resource collection API of FirewallRules. It manages FirewallRule."
  returns:
    description: "Resource collection API of FirewallRules."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallRules?alt=com.azure.resourcemanager.datalakestore.models.FirewallRules&text=FirewallRules\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.locations()"
  fullName: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.locations()"
  name: "locations()"
  nameWithType: "DataLakeStoreManager.locations()"
  summary: "Gets the resource collection API of Locations."
  syntax: "public Locations locations()"
  desc: "Gets the resource collection API of Locations."
  returns:
    description: "Resource collection API of Locations."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.Locations?alt=com.azure.resourcemanager.datalakestore.models.Locations&text=Locations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.operations()"
  fullName: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.operations()"
  name: "operations()"
  nameWithType: "DataLakeStoreManager.operations()"
  summary: "Gets the resource collection API of Operations."
  syntax: "public Operations operations()"
  desc: "Gets the resource collection API of Operations."
  returns:
    description: "Resource collection API of Operations."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.Operations?alt=com.azure.resourcemanager.datalakestore.models.Operations&text=Operations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.serviceClient()"
  fullName: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.serviceClient()"
  name: "serviceClient()"
  nameWithType: "DataLakeStoreManager.serviceClient()"
  summary: "Gets wrapped service client Data<wbr>Lake<wbr>Store<wbr>Account<wbr>Management<wbr>Client providing direct access to the underlying auto-generated API implementation, based on Azure REST API."
  syntax: "public DataLakeStoreAccountManagementClient serviceClient()"
  desc: "Gets wrapped service client DataLakeStoreAccountManagementClient providing direct access to the underlying auto-generated API implementation, based on Azure REST API."
  returns:
    description: "Wrapped service client DataLakeStoreAccountManagementClient."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.DataLakeStoreAccountManagementClient?alt=com.azure.resourcemanager.datalakestore.fluent.DataLakeStoreAccountManagementClient&text=DataLakeStoreAccountManagementClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.trustedIdProviders()"
  fullName: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.trustedIdProviders()"
  name: "trustedIdProviders()"
  nameWithType: "DataLakeStoreManager.trustedIdProviders()"
  summary: "Gets the resource collection API of Trusted<wbr>IdProviders."
  syntax: "public TrustedIdProviders trustedIdProviders()"
  desc: "Gets the resource collection API of TrustedIdProviders. It manages TrustedIdProvider."
  returns:
    description: "Resource collection API of TrustedIdProviders."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TrustedIdProviders?alt=com.azure.resourcemanager.datalakestore.models.TrustedIdProviders&text=TrustedIdProviders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.virtualNetworkRules()"
  fullName: "com.azure.resourcemanager.datalakestore.DataLakeStoreManager.virtualNetworkRules()"
  name: "virtualNetworkRules()"
  nameWithType: "DataLakeStoreManager.virtualNetworkRules()"
  summary: "Gets the resource collection API of Virtual<wbr>Network<wbr>Rules."
  syntax: "public VirtualNetworkRules virtualNetworkRules()"
  desc: "Gets the resource collection API of VirtualNetworkRules. It manages VirtualNetworkRule."
  returns:
    description: "Resource collection API of VirtualNetworkRules."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.VirtualNetworkRules?alt=com.azure.resourcemanager.datalakestore.models.VirtualNetworkRules&text=VirtualNetworkRules\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Entry point to DataLakeStoreManager. Creates an Azure Data Lake Store account management client."
metadata: {}
package: "com.azure.resourcemanager.datalakestore"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0-beta.3
