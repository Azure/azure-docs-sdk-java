### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  id: BeanDeserializerModifier
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser
  children:
  - com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.BeanDeserializerModifier()
  - com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyArrayDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyEnumDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyMapDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
  - com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateProperties(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>)
  langs:
  - java
  name: BeanDeserializerModifier
  nameWithType: BeanDeserializerModifier
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  type: Class
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Abstract class that defines API for objects that can be registered to participate in constructing <xref uid="com.fasterxml.jackson.databind.JsonDeserializer" data-throw-if-not-resolved="false">JsonDeserializer</xref> instances (via <xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory" data-throw-if-not-resolved="false">DeserializerFactory</xref>). This is typically done by modules that want alter some aspects of deserialization process; and is preferable to sub-classing of <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerFactory" data-throw-if-not-resolved="false">BeanDeserializerFactory</xref>.


    Note that Jackson 2.2 adds more methods for customization; with earlier versions only <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializer" data-throw-if-not-resolved="false">BeanDeserializer</xref> instances could be modified, but with 2.2 all types of deserializers can be changed.


    Sequence in which callback methods are called for <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializer" data-throw-if-not-resolved="false">BeanDeserializer</xref> is:


    1.  <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateProperties*" data-throw-if-not-resolved="false">#updateProperties</xref> is called once all property definitions are collected, and initial filtering (by ignorable type and explicit ignoral-by-bean) has been performed.

    2.  <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateBuilder*" data-throw-if-not-resolved="false">#updateBuilder</xref> is called once all initial pieces for building deserializer have been collected

    3.  <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyDeserializer*" data-throw-if-not-resolved="false">#modifyDeserializer</xref> is called after deserializer has been built by <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder" data-throw-if-not-resolved="false">BeanDeserializerBuilder</xref> but before it is returned to be used


    For other types of deserializers, methods called depend on type of values for which deserializer is being constructed; and only a single method is called since the process does not involve builders (unlike that of <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializer" data-throw-if-not-resolved="false">BeanDeserializer</xref>.


    Default method implementations are "no-op"s, meaning that methods are implemented but have no effect; this is mostly so that new methods can be added in later versions.
  syntax:
    content: public abstract class BeanDeserializerModifier
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.BeanDeserializerModifier()
  id: BeanDeserializerModifier()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  langs:
  - java
  name: BeanDeserializerModifier()
  nameWithType: BeanDeserializerModifier.BeanDeserializerModifier()
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.BeanDeserializerModifier()
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.BeanDeserializerModifier*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser
  syntax:
    content: public BeanDeserializerModifier()
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyArrayDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: modifyArrayDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  langs:
  - java
  name: modifyArrayDeserializer(DeserializationConfig config, ArrayType valueType, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  nameWithType: BeanDeserializerModifier.modifyArrayDeserializer(DeserializationConfig config, ArrayType valueType, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyArrayDeserializer(DeserializationConfig config, ArrayType valueType, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyArrayDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory" data-throw-if-not-resolved="false">DeserializerFactory</xref> after it has constructed the standard deserializer for given <xref uid="com.fasterxml.jackson.databind.type.ArrayType" data-throw-if-not-resolved="false">ArrayType</xref> to make it possible to either replace or augment this deserializer with additional functionality.
  syntax:
    content: public JsonDeserializer<?> modifyArrayDeserializer(DeserializationConfig config, ArrayType valueType, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
      description: Configuration in use
    - id: valueType
      type: com.fasterxml.jackson.databind.type.ArrayType
      description: Type of the value deserializer is used for.
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
      description: Description f
    - id: deserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: Default deserializer that would be used.
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
      description: >-
        Deserializer to use; either <code>deserializer</code> that was passed
           in, or an instance method constructed.
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: modifyCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  langs:
  - java
  name: modifyCollectionDeserializer(DeserializationConfig config, CollectionType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  nameWithType: BeanDeserializerModifier.modifyCollectionDeserializer(DeserializationConfig config, CollectionType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyCollectionDeserializer(DeserializationConfig config, CollectionType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyCollectionDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerFactory" data-throw-if-not-resolved="false">BeanDeserializerFactory</xref> after constructing default <xref uid="com.fasterxml.jackson.databind.type.CollectionType" data-throw-if-not-resolved="false">CollectionType</xref> deserializer instance.
  syntax:
    content: public JsonDeserializer<?> modifyCollectionDeserializer(DeserializationConfig config, CollectionType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.CollectionType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: deserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: modifyCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  langs:
  - java
  name: modifyCollectionLikeDeserializer(DeserializationConfig config, CollectionLikeType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  nameWithType: BeanDeserializerModifier.modifyCollectionLikeDeserializer(DeserializationConfig config, CollectionLikeType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyCollectionLikeDeserializer(DeserializationConfig config, CollectionLikeType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyCollectionLikeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerFactory" data-throw-if-not-resolved="false">BeanDeserializerFactory</xref> after constructing default <xref uid="com.fasterxml.jackson.databind.type.CollectionLikeType" data-throw-if-not-resolved="false">CollectionLikeType</xref> deserializer instance.
  syntax:
    content: public JsonDeserializer<?> modifyCollectionLikeDeserializer(DeserializationConfig config, CollectionLikeType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.CollectionLikeType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: deserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: modifyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  langs:
  - java
  name: modifyDeserializer(DeserializationConfig config, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  nameWithType: BeanDeserializerModifier.modifyDeserializer(DeserializationConfig config, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyDeserializer(DeserializationConfig config, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: >-
    Method called by <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerFactory" data-throw-if-not-resolved="false">BeanDeserializerFactory</xref> after constructing default bean deserializer instance with properties collected and ordered earlier. Implementations can modify or replace given deserializer and return deserializer to use. Note that although initial deserializer being passed is usually of type <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializer" data-throw-if-not-resolved="false">BeanDeserializer</xref>, modifiers may return deserializers of other types; and this is why implementations must check for type before casting.


    Since 2.10 this is also called for custom deserializers for types not deemed to be of any more specific (reference, enum, array, collection(-like), map(-like), node type)
  syntax:
    content: public JsonDeserializer<?> modifyDeserializer(DeserializationConfig config, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: deserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyEnumDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: modifyEnumDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  langs:
  - java
  name: modifyEnumDeserializer(DeserializationConfig config, JavaType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  nameWithType: BeanDeserializerModifier.modifyEnumDeserializer(DeserializationConfig config, JavaType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyEnumDeserializer(DeserializationConfig config, JavaType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyEnumDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerFactory" data-throw-if-not-resolved="false">BeanDeserializerFactory</xref> after constructing default enum type deserializer instance.
  syntax:
    content: public JsonDeserializer<?> modifyEnumDeserializer(DeserializationConfig config, JavaType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: deserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)
  id: modifyKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  langs:
  - java
  name: modifyKeyDeserializer(DeserializationConfig config, JavaType type, KeyDeserializer deserializer)
  nameWithType: BeanDeserializerModifier.modifyKeyDeserializer(DeserializationConfig config, JavaType type, KeyDeserializer deserializer)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyKeyDeserializer(DeserializationConfig config, JavaType type, KeyDeserializer deserializer)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyKeyDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.deser.DeserializerFactory" data-throw-if-not-resolved="false">DeserializerFactory</xref> after it has constructed the standard key deserializer for given key type. This make it possible to replace the default key deserializer, or augment it somehow (including optional use of default deserializer with occasional override).
  syntax:
    content: public KeyDeserializer modifyKeyDeserializer(DeserializationConfig config, JavaType type, KeyDeserializer deserializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
    - id: deserializer
      type: com.fasterxml.jackson.databind.KeyDeserializer
    return:
      type: com.fasterxml.jackson.databind.KeyDeserializer
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyMapDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: modifyMapDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  langs:
  - java
  name: modifyMapDeserializer(DeserializationConfig config, MapType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  nameWithType: BeanDeserializerModifier.modifyMapDeserializer(DeserializationConfig config, MapType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyMapDeserializer(DeserializationConfig config, MapType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyMapDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerFactory" data-throw-if-not-resolved="false">BeanDeserializerFactory</xref> after constructing default <xref uid="com.fasterxml.jackson.databind.type.MapType" data-throw-if-not-resolved="false">MapType</xref> deserializer instance.
  syntax:
    content: public JsonDeserializer<?> modifyMapDeserializer(DeserializationConfig config, MapType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.MapType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: deserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: modifyMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  langs:
  - java
  name: modifyMapLikeDeserializer(DeserializationConfig config, MapLikeType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  nameWithType: BeanDeserializerModifier.modifyMapLikeDeserializer(DeserializationConfig config, MapLikeType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyMapLikeDeserializer(DeserializationConfig config, MapLikeType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyMapLikeDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerFactory" data-throw-if-not-resolved="false">BeanDeserializerFactory</xref> after constructing default <xref uid="com.fasterxml.jackson.databind.type.MapLikeType" data-throw-if-not-resolved="false">MapLikeType</xref> deserializer instance.
  syntax:
    content: public JsonDeserializer<?> modifyMapLikeDeserializer(DeserializationConfig config, MapLikeType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.MapLikeType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: deserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  id: modifyReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  langs:
  - java
  name: modifyReferenceDeserializer(DeserializationConfig config, ReferenceType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  nameWithType: BeanDeserializerModifier.modifyReferenceDeserializer(DeserializationConfig config, ReferenceType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyReferenceDeserializer(DeserializationConfig config, ReferenceType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyReferenceDeserializer*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerFactory" data-throw-if-not-resolved="false">BeanDeserializerFactory</xref> after constructing default <xref uid="com.fasterxml.jackson.databind.type.ReferenceType" data-throw-if-not-resolved="false">ReferenceType</xref> deserializer instance.
  syntax:
    content: public JsonDeserializer<?> modifyReferenceDeserializer(DeserializationConfig config, ReferenceType type, BeanDescription beanDesc, JsonDeserializer<?> deserializer)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: type
      type: com.fasterxml.jackson.databind.type.ReferenceType
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: deserializer
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
    return:
      type: com.fasterxml.jackson.databind.JsonDeserializer<?>
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
  id: updateBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  langs:
  - java
  name: updateBuilder(DeserializationConfig config, BeanDescription beanDesc, BeanDeserializerBuilder builder)
  nameWithType: BeanDeserializerModifier.updateBuilder(DeserializationConfig config, BeanDescription beanDesc, BeanDeserializerBuilder builder)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateBuilder(DeserializationConfig config, BeanDescription beanDesc, BeanDeserializerBuilder builder)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateBuilder*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: Method called by <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerFactory" data-throw-if-not-resolved="false">BeanDeserializerFactory</xref> when it has collected basic information such as tentative list of properties to deserialize. Implementations may choose to modify state of builder (to affect deserializer being built), or even completely replace it (if they want to build different kind of deserializer). Typically changes mostly concern set of properties to deserialize.
  syntax:
    content: public BeanDeserializerBuilder updateBuilder(DeserializationConfig config, BeanDescription beanDesc, BeanDeserializerBuilder builder)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: builder
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder
    return:
      type: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateProperties(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>)
  id: updateProperties(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier
  langs:
  - java
  name: updateProperties(DeserializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> propDefs)
  nameWithType: BeanDeserializerModifier.updateProperties(DeserializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> propDefs)
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateProperties(DeserializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> propDefs)
  overload: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateProperties*
  type: Method
  package: com.fasterxml.jackson.databind.deser
  summary: 'Method called by <xref uid="com.fasterxml.jackson.databind.deser.BeanDeserializerFactory" data-throw-if-not-resolved="false">BeanDeserializerFactory</xref> when it has collected initial list of <xref uid="com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition" data-throw-if-not-resolved="false">BeanPropertyDefinition</xref>s, and done basic by-name and by-type filtering, but before constructing builder or actual property handlers; or arranging order. The most common changes to make at this point are to completely remove specified properties, or rename then: other modifications are easier to make at later points.'
  syntax:
    content: public List<BeanPropertyDefinition> updateProperties(DeserializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> propDefs)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.DeserializationConfig
    - id: beanDesc
      type: com.fasterxml.jackson.databind.BeanDescription
    - id: propDefs
      type: java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>
    return:
      type: java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>
references:
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.BeanDeserializerModifier*
  name: BeanDeserializerModifier
  nameWithType: BeanDeserializerModifier.BeanDeserializerModifier
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.BeanDeserializerModifier
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.DeserializationConfig
  name: DeserializationConfig
  nameWithType: DeserializationConfig
  fullName: com.fasterxml.jackson.databind.DeserializationConfig
- uid: com.fasterxml.jackson.databind.BeanDescription
  name: BeanDescription
  nameWithType: BeanDescription
  fullName: com.fasterxml.jackson.databind.BeanDescription
- uid: java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
    name: BeanPropertyDefinition
    fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateProperties*
  name: updateProperties
  nameWithType: BeanDeserializerModifier.updateProperties
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateProperties
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder
  name: BeanDeserializerBuilder
  nameWithType: BeanDeserializerBuilder
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateBuilder*
  name: updateBuilder
  nameWithType: BeanDeserializerModifier.updateBuilder
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.updateBuilder
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.JsonDeserializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonDeserializer
    name: JsonDeserializer
    fullName: com.fasterxml.jackson.databind.JsonDeserializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyDeserializer*
  name: modifyDeserializer
  nameWithType: BeanDeserializerModifier.modifyDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyEnumDeserializer*
  name: modifyEnumDeserializer
  nameWithType: BeanDeserializerModifier.modifyEnumDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyEnumDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.ReferenceType
  name: ReferenceType
  nameWithType: ReferenceType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyReferenceDeserializer*
  name: modifyReferenceDeserializer
  nameWithType: BeanDeserializerModifier.modifyReferenceDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyReferenceDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.ArrayType
  name: ArrayType
  nameWithType: ArrayType
  fullName: com.fasterxml.jackson.databind.type.ArrayType
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyArrayDeserializer*
  name: modifyArrayDeserializer
  nameWithType: BeanDeserializerModifier.modifyArrayDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyArrayDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.CollectionType
  name: CollectionType
  nameWithType: CollectionType
  fullName: com.fasterxml.jackson.databind.type.CollectionType
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyCollectionDeserializer*
  name: modifyCollectionDeserializer
  nameWithType: BeanDeserializerModifier.modifyCollectionDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyCollectionDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.CollectionLikeType
  name: CollectionLikeType
  nameWithType: CollectionLikeType
  fullName: com.fasterxml.jackson.databind.type.CollectionLikeType
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyCollectionLikeDeserializer*
  name: modifyCollectionLikeDeserializer
  nameWithType: BeanDeserializerModifier.modifyCollectionLikeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyCollectionLikeDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.MapType
  name: MapType
  nameWithType: MapType
  fullName: com.fasterxml.jackson.databind.type.MapType
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyMapDeserializer*
  name: modifyMapDeserializer
  nameWithType: BeanDeserializerModifier.modifyMapDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyMapDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.type.MapLikeType
  name: MapLikeType
  nameWithType: MapLikeType
  fullName: com.fasterxml.jackson.databind.type.MapLikeType
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyMapLikeDeserializer*
  name: modifyMapLikeDeserializer
  nameWithType: BeanDeserializerModifier.modifyMapLikeDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyMapLikeDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: com.fasterxml.jackson.databind.KeyDeserializer
  name: KeyDeserializer
  nameWithType: KeyDeserializer
  fullName: com.fasterxml.jackson.databind.KeyDeserializer
- uid: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyKeyDeserializer*
  name: modifyKeyDeserializer
  nameWithType: BeanDeserializerModifier.modifyKeyDeserializer
  fullName: com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.modifyKeyDeserializer
  package: com.fasterxml.jackson.databind.deser
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  name: BeanPropertyDefinition
  nameWithType: BeanPropertyDefinition
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
- uid: com.fasterxml.jackson.databind.JsonDeserializer
  name: JsonDeserializer
  nameWithType: JsonDeserializer
  fullName: com.fasterxml.jackson.databind.JsonDeserializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
