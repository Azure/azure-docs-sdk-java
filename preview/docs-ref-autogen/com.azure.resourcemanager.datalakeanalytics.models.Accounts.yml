### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts"
fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts"
name: "Accounts"
nameWithType: "Accounts"
summary: "Resource collection API of Accounts."
syntax: "public interface Accounts"
methods:
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.checkNameAvailability(java.lang.String,com.azure.resourcemanager.datalakeanalytics.models.CheckNameAvailabilityParameters)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.checkNameAvailability(String location, CheckNameAvailabilityParameters parameters)"
  name: "checkNameAvailability(String location, CheckNameAvailabilityParameters parameters)"
  nameWithType: "Accounts.checkNameAvailability(String location, CheckNameAvailabilityParameters parameters)"
  summary: "Checks whether the specified account name is available or taken."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource location without whitespace."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to check the Data Lake Analytics account name availability."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.CheckNameAvailabilityParameters?alt=com.azure.resourcemanager.datalakeanalytics.models.CheckNameAvailabilityParameters&text=CheckNameAvailabilityParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract NameAvailabilityInformation checkNameAvailability(String location, CheckNameAvailabilityParameters parameters)"
  desc: "Checks whether the specified account name is available or taken."
  returns:
    description: "data Lake Analytics account name availability result information."
    type: "<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.NameAvailabilityInformation?alt=com.azure.resourcemanager.datalakeanalytics.models.NameAvailabilityInformation&text=NameAvailabilityInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.checkNameAvailabilityWithResponse(java.lang.String,com.azure.resourcemanager.datalakeanalytics.models.CheckNameAvailabilityParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.checkNameAvailabilityWithResponse(String location, CheckNameAvailabilityParameters parameters, Context context)"
  name: "checkNameAvailabilityWithResponse(String location, CheckNameAvailabilityParameters parameters, Context context)"
  nameWithType: "Accounts.checkNameAvailabilityWithResponse(String location, CheckNameAvailabilityParameters parameters, Context context)"
  summary: "Checks whether the specified account name is available or taken."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource location without whitespace."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters supplied to check the Data Lake Analytics account name availability."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.CheckNameAvailabilityParameters?alt=com.azure.resourcemanager.datalakeanalytics.models.CheckNameAvailabilityParameters&text=CheckNameAvailabilityParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<NameAvailabilityInformation> checkNameAvailabilityWithResponse(String location, CheckNameAvailabilityParameters parameters, Context context)"
  desc: "Checks whether the specified account name is available or taken."
  returns:
    description: "data Lake Analytics account name availability result information."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.NameAvailabilityInformation?alt=com.azure.resourcemanager.datalakeanalytics.models.NameAvailabilityInformation&text=NameAvailabilityInformation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.define(String name)"
  name: "define(String name)"
  nameWithType: "Accounts.define(String name)"
  summary: "Begins definition for a new Data<wbr>Lake<wbr>Analytics<wbr>Account resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataLakeAnalyticsAccount.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new DataLakeAnalyticsAccount resource."
  returns:
    description: "the first stage of the new DataLakeAnalyticsAccount definition."
    type: "<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccount.DefinitionStages.Blank?alt=com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccount.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.delete(String resourceGroupName, String accountName, Context context)"
  name: "delete(String resourceGroupName, String accountName, Context context)"
  nameWithType: "Accounts.delete(String resourceGroupName, String accountName, Context context)"
  summary: "Begins the delete process for the Data Lake Analytics account object specified by the account name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Azure resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Data Lake Analytics account."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String accountName, Context context)"
  desc: "Begins the delete process for the Data Lake Analytics account object specified by the account name."
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Accounts.deleteById(String id)"
  summary: "Begins the delete process for the Data Lake Analytics account object specified by the account name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Begins the delete process for the Data Lake Analytics account object specified by the account name."
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Accounts.deleteByIdWithResponse(String id, Context context)"
  summary: "Begins the delete process for the Data Lake Analytics account object specified by the account name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByIdWithResponse(String id, Context context)"
  desc: "Begins the delete process for the Data Lake Analytics account object specified by the account name."
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.deleteByResourceGroup(String resourceGroupName, String accountName)"
  name: "deleteByResourceGroup(String resourceGroupName, String accountName)"
  nameWithType: "Accounts.deleteByResourceGroup(String resourceGroupName, String accountName)"
  summary: "Begins the delete process for the Data Lake Analytics account object specified by the account name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Azure resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Data Lake Analytics account."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String accountName)"
  desc: "Begins the delete process for the Data Lake Analytics account object specified by the account name."
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Accounts.getById(String id)"
  summary: "Gets details of the specified Data Lake Analytics account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataLakeAnalyticsAccount getById(String id)"
  desc: "Gets details of the specified Data Lake Analytics account."
  returns:
    description: "details of the specified Data Lake Analytics account."
    type: "<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccount?alt=com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccount&text=DataLakeAnalyticsAccount\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Accounts.getByIdWithResponse(String id, Context context)"
  summary: "Gets details of the specified Data Lake Analytics account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DataLakeAnalyticsAccount> getByIdWithResponse(String id, Context context)"
  desc: "Gets details of the specified Data Lake Analytics account."
  returns:
    description: "details of the specified Data Lake Analytics account."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccount?alt=com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccount&text=DataLakeAnalyticsAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.getByResourceGroup(String resourceGroupName, String accountName)"
  name: "getByResourceGroup(String resourceGroupName, String accountName)"
  nameWithType: "Accounts.getByResourceGroup(String resourceGroupName, String accountName)"
  summary: "Gets details of the specified Data Lake Analytics account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Azure resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Data Lake Analytics account."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DataLakeAnalyticsAccount getByResourceGroup(String resourceGroupName, String accountName)"
  desc: "Gets details of the specified Data Lake Analytics account."
  returns:
    description: "details of the specified Data Lake Analytics account."
    type: "<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccount?alt=com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccount&text=DataLakeAnalyticsAccount\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  nameWithType: "Accounts.getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  summary: "Gets details of the specified Data Lake Analytics account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Azure resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Data Lake Analytics account."
    name: "accountName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DataLakeAnalyticsAccount> getByResourceGroupWithResponse(String resourceGroupName, String accountName, Context context)"
  desc: "Gets details of the specified Data Lake Analytics account."
  returns:
    description: "details of the specified Data Lake Analytics account."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccount?alt=com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccount&text=DataLakeAnalyticsAccount\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.list()"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.list()"
  name: "list()"
  nameWithType: "Accounts.list()"
  summary: "Gets the first page of Data Lake Analytics accounts, if any, within the current subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<DataLakeAnalyticsAccountBasic> list()"
  desc: "Gets the first page of Data Lake Analytics accounts, if any, within the current subscription. This includes a link to the next page, if any."
  returns:
    description: "the first page of Data Lake Analytics accounts, if any, within the current subscription."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccountBasic?alt=com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccountBasic&text=DataLakeAnalyticsAccountBasic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.list(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.list(String filter, Integer top, Integer skip, String select, String orderby, Boolean count, Context context)"
  name: "list(String filter, Integer top, Integer skip, String select, String orderby, Boolean count, Context context)"
  nameWithType: "Accounts.list(String filter, Integer top, Integer skip, String select, String orderby, Boolean count, Context context)"
  summary: "Gets the first page of Data Lake Analytics accounts, if any, within the current subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "OData filter. Optional."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of items to return. Optional."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of items to skip over before returning elements. Optional."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData Select statement. Limits the properties on each entry to just those requested, e.g.\n     Categories?$select=CategoryName,Description. Optional."
    name: "select"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or\n     \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc.\n     Optional."
    name: "orderby"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Boolean value of true or false to request a count of the matching resources included with the\n     resources in the response, e.g. Categories?$count=true. Optional."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<DataLakeAnalyticsAccountBasic> list(String filter, Integer top, Integer skip, String select, String orderby, Boolean count, Context context)"
  desc: "Gets the first page of Data Lake Analytics accounts, if any, within the current subscription. This includes a link to the next page, if any."
  returns:
    description: "the first page of Data Lake Analytics accounts, if any, within the current subscription."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccountBasic?alt=com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccountBasic&text=DataLakeAnalyticsAccountBasic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "Accounts.listByResourceGroup(String resourceGroupName)"
  summary: "Gets the first page of Data Lake Analytics accounts, if any, within a specific resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Azure resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<DataLakeAnalyticsAccountBasic> listByResourceGroup(String resourceGroupName)"
  desc: "Gets the first page of Data Lake Analytics accounts, if any, within a specific resource group. This includes a link to the next page, if any."
  returns:
    description: "the first page of Data Lake Analytics accounts, if any, within a specific resource group."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccountBasic?alt=com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccountBasic&text=DataLakeAnalyticsAccountBasic\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.listByResourceGroup(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datalakeanalytics.models.Accounts.listByResourceGroup(String resourceGroupName, String filter, Integer top, Integer skip, String select, String orderby, Boolean count, Context context)"
  name: "listByResourceGroup(String resourceGroupName, String filter, Integer top, Integer skip, String select, String orderby, Boolean count, Context context)"
  nameWithType: "Accounts.listByResourceGroup(String resourceGroupName, String filter, Integer top, Integer skip, String select, String orderby, Boolean count, Context context)"
  summary: "Gets the first page of Data Lake Analytics accounts, if any, within a specific resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the Azure resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData filter. Optional."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of items to return. Optional."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of items to skip over before returning elements. Optional."
    name: "skip"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "OData Select statement. Limits the properties on each entry to just those requested, e.g.\n     Categories?$select=CategoryName,Description. Optional."
    name: "select"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or\n     \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc.\n     Optional."
    name: "orderby"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Boolean value of true or false to request a count of the matching resources included with the\n     resources in the response, e.g. Categories?$count=true. Optional."
    name: "count"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<DataLakeAnalyticsAccountBasic> listByResourceGroup(String resourceGroupName, String filter, Integer top, Integer skip, String select, String orderby, Boolean count, Context context)"
  desc: "Gets the first page of Data Lake Analytics accounts, if any, within a specific resource group. This includes a link to the next page, if any."
  returns:
    description: "the first page of Data Lake Analytics accounts, if any, within a specific resource group."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccountBasic?alt=com.azure.resourcemanager.datalakeanalytics.models.DataLakeAnalyticsAccountBasic&text=DataLakeAnalyticsAccountBasic\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Accounts."
metadata: {}
package: "com.azure.resourcemanager.datalakeanalytics.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakeanalytics:1.0.0-beta.1
