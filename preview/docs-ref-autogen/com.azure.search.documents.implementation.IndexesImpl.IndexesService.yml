### YamlMime:ManagedReference
items:
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService"
  id: "IndexesService"
  parent: "com.azure.search.documents.implementation"
  children:
  - "com.azure.search.documents.implementation.IndexesImpl.IndexesService.analyze(java.lang.String,java.lang.String,com.azure.search.documents.models.AnalyzeRequest,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  - "com.azure.search.documents.implementation.IndexesImpl.IndexesService.create(java.lang.String,com.azure.search.documents.models.Index,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  - "com.azure.search.documents.implementation.IndexesImpl.IndexesService.createOrUpdate(java.lang.String,java.lang.String,com.azure.search.documents.models.Index,java.lang.Boolean,java.lang.String,java.lang.String,java.util.UUID,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.search.documents.implementation.IndexesImpl.IndexesService.delete(java.lang.String,java.lang.String,java.lang.String,java.util.UUID,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.search.documents.implementation.IndexesImpl.IndexesService.get(java.lang.String,java.lang.String,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  - "com.azure.search.documents.implementation.IndexesImpl.IndexesService.getStatistics(java.lang.String,java.lang.String,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  - "com.azure.search.documents.implementation.IndexesImpl.IndexesService.list(java.lang.String,java.lang.String,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "IndexesImpl.IndexesService"
  nameWithType: "IndexesImpl.IndexesService"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService"
  type: "Interface"
  package: "com.azure.search.documents.implementation"
  summary: "The interface defining all the services for SearchServiceRestClientIndexes to be used by the proxy service to perform REST calls."
  syntax:
    content: "private static interface IndexesImpl.IndexesService"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.analyze(java.lang.String,java.lang.String,com.azure.search.documents.models.AnalyzeRequest,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  id: "analyze(java.lang.String,java.lang.String,com.azure.search.documents.models.AnalyzeRequest,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.implementation.IndexesImpl.IndexesService"
  langs:
  - "java"
  name: "analyze(String indexName, String endpoint, AnalyzeRequest request, String apiVersion, UUID xMsClientRequestId, Context context)"
  nameWithType: "IndexesImpl.IndexesService.analyze(String indexName, String endpoint, AnalyzeRequest request, String apiVersion, UUID xMsClientRequestId, Context context)"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.analyze(String indexName, String endpoint, AnalyzeRequest request, String apiVersion, UUID xMsClientRequestId, Context context)"
  overload: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.analyze*"
  type: "Method"
  package: "com.azure.search.documents.implementation"
  syntax:
    content: "public abstract Mono<SimpleResponse<AnalyzeResult>> analyze(String indexName, String endpoint, AnalyzeRequest request, String apiVersion, UUID xMsClientRequestId, Context context)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
    - id: "endpoint"
      type: "java.lang.String"
    - id: "request"
      type: "com.azure.search.documents.models.AnalyzeRequest"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "xMsClientRequestId"
      type: "java.util.UUID"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.AnalyzeResult>>"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.create(java.lang.String,com.azure.search.documents.models.Index,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  id: "create(java.lang.String,com.azure.search.documents.models.Index,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.implementation.IndexesImpl.IndexesService"
  langs:
  - "java"
  name: "create(String endpoint, Index index, String apiVersion, UUID xMsClientRequestId, Context context)"
  nameWithType: "IndexesImpl.IndexesService.create(String endpoint, Index index, String apiVersion, UUID xMsClientRequestId, Context context)"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.create(String endpoint, Index index, String apiVersion, UUID xMsClientRequestId, Context context)"
  overload: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.create*"
  type: "Method"
  package: "com.azure.search.documents.implementation"
  syntax:
    content: "public abstract Mono<SimpleResponse<Index>> create(String endpoint, Index index, String apiVersion, UUID xMsClientRequestId, Context context)"
    parameters:
    - id: "endpoint"
      type: "java.lang.String"
    - id: "index"
      type: "com.azure.search.documents.models.Index"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "xMsClientRequestId"
      type: "java.util.UUID"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.Index>>"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.createOrUpdate(java.lang.String,java.lang.String,com.azure.search.documents.models.Index,java.lang.Boolean,java.lang.String,java.lang.String,java.util.UUID,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "createOrUpdate(java.lang.String,java.lang.String,com.azure.search.documents.models.Index,java.lang.Boolean,java.lang.String,java.lang.String,java.util.UUID,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.implementation.IndexesImpl.IndexesService"
  langs:
  - "java"
  name: "createOrUpdate(String indexName, String endpoint, Index index, Boolean allowIndexDowntime, String prefer, String apiVersion, UUID xMsClientRequestId, String ifMatch, String ifNoneMatch, Context context)"
  nameWithType: "IndexesImpl.IndexesService.createOrUpdate(String indexName, String endpoint, Index index, Boolean allowIndexDowntime, String prefer, String apiVersion, UUID xMsClientRequestId, String ifMatch, String ifNoneMatch, Context context)"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.createOrUpdate(String indexName, String endpoint, Index index, Boolean allowIndexDowntime, String prefer, String apiVersion, UUID xMsClientRequestId, String ifMatch, String ifNoneMatch, Context context)"
  overload: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.createOrUpdate*"
  type: "Method"
  package: "com.azure.search.documents.implementation"
  syntax:
    content: "public abstract Mono<SimpleResponse<Index>> createOrUpdate(String indexName, String endpoint, Index index, Boolean allowIndexDowntime, String prefer, String apiVersion, UUID xMsClientRequestId, String ifMatch, String ifNoneMatch, Context context)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
    - id: "endpoint"
      type: "java.lang.String"
    - id: "index"
      type: "com.azure.search.documents.models.Index"
    - id: "allowIndexDowntime"
      type: "java.lang.Boolean"
    - id: "prefer"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "xMsClientRequestId"
      type: "java.util.UUID"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.Index>>"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.delete(java.lang.String,java.lang.String,java.lang.String,java.util.UUID,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "delete(java.lang.String,java.lang.String,java.lang.String,java.util.UUID,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.implementation.IndexesImpl.IndexesService"
  langs:
  - "java"
  name: "delete(String indexName, String endpoint, String apiVersion, UUID xMsClientRequestId, String ifMatch, String ifNoneMatch, Context context)"
  nameWithType: "IndexesImpl.IndexesService.delete(String indexName, String endpoint, String apiVersion, UUID xMsClientRequestId, String ifMatch, String ifNoneMatch, Context context)"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.delete(String indexName, String endpoint, String apiVersion, UUID xMsClientRequestId, String ifMatch, String ifNoneMatch, Context context)"
  overload: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.delete*"
  type: "Method"
  package: "com.azure.search.documents.implementation"
  syntax:
    content: "public abstract Mono<Response<Void>> delete(String indexName, String endpoint, String apiVersion, UUID xMsClientRequestId, String ifMatch, String ifNoneMatch, Context context)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
    - id: "endpoint"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "xMsClientRequestId"
      type: "java.util.UUID"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.get(java.lang.String,java.lang.String,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  id: "get(java.lang.String,java.lang.String,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.implementation.IndexesImpl.IndexesService"
  langs:
  - "java"
  name: "get(String indexName, String endpoint, String apiVersion, UUID xMsClientRequestId, Context context)"
  nameWithType: "IndexesImpl.IndexesService.get(String indexName, String endpoint, String apiVersion, UUID xMsClientRequestId, Context context)"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.get(String indexName, String endpoint, String apiVersion, UUID xMsClientRequestId, Context context)"
  overload: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.get*"
  type: "Method"
  package: "com.azure.search.documents.implementation"
  syntax:
    content: "public abstract Mono<SimpleResponse<Index>> get(String indexName, String endpoint, String apiVersion, UUID xMsClientRequestId, Context context)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
    - id: "endpoint"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "xMsClientRequestId"
      type: "java.util.UUID"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.Index>>"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.getStatistics(java.lang.String,java.lang.String,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  id: "getStatistics(java.lang.String,java.lang.String,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.implementation.IndexesImpl.IndexesService"
  langs:
  - "java"
  name: "getStatistics(String indexName, String endpoint, String apiVersion, UUID xMsClientRequestId, Context context)"
  nameWithType: "IndexesImpl.IndexesService.getStatistics(String indexName, String endpoint, String apiVersion, UUID xMsClientRequestId, Context context)"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.getStatistics(String indexName, String endpoint, String apiVersion, UUID xMsClientRequestId, Context context)"
  overload: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.getStatistics*"
  type: "Method"
  package: "com.azure.search.documents.implementation"
  syntax:
    content: "public abstract Mono<SimpleResponse<GetIndexStatisticsResult>> getStatistics(String indexName, String endpoint, String apiVersion, UUID xMsClientRequestId, Context context)"
    parameters:
    - id: "indexName"
      type: "java.lang.String"
    - id: "endpoint"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "xMsClientRequestId"
      type: "java.util.UUID"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.GetIndexStatisticsResult>>"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.list(java.lang.String,java.lang.String,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  id: "list(java.lang.String,java.lang.String,java.lang.String,java.util.UUID,com.azure.core.util.Context)"
  parent: "com.azure.search.documents.implementation.IndexesImpl.IndexesService"
  langs:
  - "java"
  name: "list(String endpoint, String select, String apiVersion, UUID xMsClientRequestId, Context context)"
  nameWithType: "IndexesImpl.IndexesService.list(String endpoint, String select, String apiVersion, UUID xMsClientRequestId, Context context)"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.list(String endpoint, String select, String apiVersion, UUID xMsClientRequestId, Context context)"
  overload: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.list*"
  type: "Method"
  package: "com.azure.search.documents.implementation"
  syntax:
    content: "public abstract Mono<SimpleResponse<ListIndexesResult>> list(String endpoint, String select, String apiVersion, UUID xMsClientRequestId, Context context)"
    parameters:
    - id: "endpoint"
      type: "java.lang.String"
    - id: "select"
      type: "java.lang.String"
    - id: "apiVersion"
      type: "java.lang.String"
    - id: "xMsClientRequestId"
      type: "java.util.UUID"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.ListIndexesResult>>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.search.documents.models.Index"
  name: "Index"
  nameWithType: "Index"
  fullName: "com.azure.search.documents.models.Index"
- uid: "java.util.UUID"
  spec.java:
  - uid: "java.util.UUID"
    name: "UUID"
    fullName: "java.util.UUID"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.Index>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.SimpleResponse"
    name: "SimpleResponse"
    fullName: "com.azure.core.http.rest.SimpleResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.Index"
    name: "Index"
    fullName: "com.azure.search.documents.models.Index"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.create*"
  name: "create"
  nameWithType: "IndexesImpl.IndexesService.create"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.create"
  package: "com.azure.search.documents.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.ListIndexesResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.SimpleResponse"
    name: "SimpleResponse"
    fullName: "com.azure.core.http.rest.SimpleResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.implementation.models.ListIndexesResult"
    name: "ListIndexesResult"
    fullName: "com.azure.search.documents.implementation.models.ListIndexesResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.list*"
  name: "list"
  nameWithType: "IndexesImpl.IndexesService.list"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.list"
  package: "com.azure.search.documents.implementation"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.createOrUpdate*"
  name: "createOrUpdate"
  nameWithType: "IndexesImpl.IndexesService.createOrUpdate"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.createOrUpdate"
  package: "com.azure.search.documents.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.delete*"
  name: "delete"
  nameWithType: "IndexesImpl.IndexesService.delete"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.delete"
  package: "com.azure.search.documents.implementation"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.get*"
  name: "get"
  nameWithType: "IndexesImpl.IndexesService.get"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.get"
  package: "com.azure.search.documents.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.models.GetIndexStatisticsResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.SimpleResponse"
    name: "SimpleResponse"
    fullName: "com.azure.core.http.rest.SimpleResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.models.GetIndexStatisticsResult"
    name: "GetIndexStatisticsResult"
    fullName: "com.azure.search.documents.models.GetIndexStatisticsResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.getStatistics*"
  name: "getStatistics"
  nameWithType: "IndexesImpl.IndexesService.getStatistics"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.getStatistics"
  package: "com.azure.search.documents.implementation"
- uid: "com.azure.search.documents.models.AnalyzeRequest"
  name: "AnalyzeRequest"
  nameWithType: "AnalyzeRequest"
  fullName: "com.azure.search.documents.models.AnalyzeRequest"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.rest.SimpleResponse<com.azure.search.documents.implementation.models.AnalyzeResult>>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.rest.SimpleResponse"
    name: "SimpleResponse"
    fullName: "com.azure.core.http.rest.SimpleResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.search.documents.implementation.models.AnalyzeResult"
    name: "AnalyzeResult"
    fullName: "com.azure.search.documents.implementation.models.AnalyzeResult"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.analyze*"
  name: "analyze"
  nameWithType: "IndexesImpl.IndexesService.analyze"
  fullName: "com.azure.search.documents.implementation.IndexesImpl.IndexesService.analyze"
  package: "com.azure.search.documents.implementation"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.core.http.rest.SimpleResponse"
  name: "SimpleResponse"
  nameWithType: "SimpleResponse"
  fullName: "com.azure.core.http.rest.SimpleResponse"
- uid: "com.azure.search.documents.implementation.models.ListIndexesResult"
  name: "ListIndexesResult"
  nameWithType: "ListIndexesResult"
  fullName: "com.azure.search.documents.implementation.models.ListIndexesResult"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "com.azure.core.http.rest.Response"
  name: "Response"
  nameWithType: "Response"
  fullName: "com.azure.core.http.rest.Response"
- uid: "com.azure.search.documents.models.GetIndexStatisticsResult"
  name: "GetIndexStatisticsResult"
  nameWithType: "GetIndexStatisticsResult"
  fullName: "com.azure.search.documents.models.GetIndexStatisticsResult"
- uid: "com.azure.search.documents.implementation.models.AnalyzeResult"
  name: "AnalyzeResult"
  nameWithType: "AnalyzeResult"
  fullName: "com.azure.search.documents.implementation.models.AnalyzeResult"
