### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo"
fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo"
name: "QueueInfo"
nameWithType: "QueueInfo"
summary: "Properties of the Queue info for event subscription."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **QueueInfo**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.QueueInfo?alt=com.azure.resourcemanager.eventgrid.models.QueueInfo&text=QueueInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo.QueueInfo()"
  fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo.QueueInfo()"
  name: "QueueInfo()"
  nameWithType: "QueueInfo.QueueInfo()"
  summary: "Creates an instance of Queue<wbr>Info class."
  syntax: "public QueueInfo()"
  desc: "Creates an instance of QueueInfo class."
methods:
- uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo.deadLetterDestinationWithResourceIdentity()"
  fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo.deadLetterDestinationWithResourceIdentity()"
  name: "deadLetterDestinationWithResourceIdentity()"
  nameWithType: "QueueInfo.deadLetterDestinationWithResourceIdentity()"
  summary: "Get the dead<wbr>Letter<wbr>Destination<wbr>With<wbr>Resource<wbr>Identity property: The dead letter destination of the event subscription."
  syntax: "public DeadLetterWithResourceIdentity deadLetterDestinationWithResourceIdentity()"
  desc: "Get the deadLetterDestinationWithResourceIdentity property: The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination. Uses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering."
  returns:
    description: "the deadLetterDestinationWithResourceIdentity value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.DeadLetterWithResourceIdentity?alt=com.azure.resourcemanager.eventgrid.models.DeadLetterWithResourceIdentity&text=DeadLetterWithResourceIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo.eventTimeToLive()"
  fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo.eventTimeToLive()"
  name: "eventTimeToLive()"
  nameWithType: "QueueInfo.eventTimeToLive()"
  summary: "Get the event<wbr>Time<wbr>ToLive property: Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published."
  syntax: "public Duration eventTimeToLive()"
  desc: "Get the eventTimeToLive property: Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published. This duration value is expressed using the following format: 'P(n)Y(n)M(n)DT(n)H(n)M(n)S', where: - (n) is replaced by the value of each time element that follows the (n). - P is the duration (or Period) designator and is always placed at the beginning of the duration. - Y is the year designator, and it follows the value for the number of years. - M is the month designator, and it follows the value for the number of months. - W is the week designator, and it follows the value for the number of weeks. - D is the day designator, and it follows the value for the number of days. - T is the time designator, and it precedes the time components. - H is the hour designator, and it follows the value for the number of hours. - M is the minute designator, and it follows the value for the number of minutes. - S is the second designator, and it follows the value for the number of seconds. This duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined by topic’s EventRetentionInDays value. The followings are examples of valid values: - 'P0DT23H12M' or 'PT23H12M': for duration of 23 hours and 12 minutes. - 'P1D' or 'P1DT0H0M0S': for duration of 1 day."
  returns:
    description: "the eventTimeToLive value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
- uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "QueueInfo.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Queue<wbr>Info from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static QueueInfo fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the QueueInfo."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of QueueInfo from the JsonReader."
  returns:
    description: "An instance of QueueInfo if the JsonReader was pointing to an instance of it, or null if it was pointing\n to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.QueueInfo?alt=com.azure.resourcemanager.eventgrid.models.QueueInfo&text=QueueInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo.maxDeliveryCount()"
  fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo.maxDeliveryCount()"
  name: "maxDeliveryCount()"
  nameWithType: "QueueInfo.maxDeliveryCount()"
  summary: "Get the max<wbr>Delivery<wbr>Count property: The maximum delivery count of the events."
  syntax: "public Integer maxDeliveryCount()"
  desc: "Get the maxDeliveryCount property: The maximum delivery count of the events."
  returns:
    description: "the maxDeliveryCount value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo.receiveLockDurationInSeconds()"
  fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo.receiveLockDurationInSeconds()"
  name: "receiveLockDurationInSeconds()"
  nameWithType: "QueueInfo.receiveLockDurationInSeconds()"
  summary: "Get the receive<wbr>Lock<wbr>Duration<wbr>InSeconds property: Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected."
  syntax: "public Integer receiveLockDurationInSeconds()"
  desc: "Get the receiveLockDurationInSeconds property: Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected. If this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected, the message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds."
  returns:
    description: "the receiveLockDurationInSeconds value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "QueueInfo.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo.validate()"
  fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo.validate()"
  name: "validate()"
  nameWithType: "QueueInfo.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo.withDeadLetterDestinationWithResourceIdentity(com.azure.resourcemanager.eventgrid.models.DeadLetterWithResourceIdentity)"
  fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo.withDeadLetterDestinationWithResourceIdentity(DeadLetterWithResourceIdentity deadLetterDestinationWithResourceIdentity)"
  name: "withDeadLetterDestinationWithResourceIdentity(DeadLetterWithResourceIdentity deadLetterDestinationWithResourceIdentity)"
  nameWithType: "QueueInfo.withDeadLetterDestinationWithResourceIdentity(DeadLetterWithResourceIdentity deadLetterDestinationWithResourceIdentity)"
  summary: "Set the dead<wbr>Letter<wbr>Destination<wbr>With<wbr>Resource<wbr>Identity property: The dead letter destination of the event subscription."
  parameters:
  - description: "the deadLetterDestinationWithResourceIdentity value to set."
    name: "deadLetterDestinationWithResourceIdentity"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.DeadLetterWithResourceIdentity?alt=com.azure.resourcemanager.eventgrid.models.DeadLetterWithResourceIdentity&text=DeadLetterWithResourceIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueueInfo withDeadLetterDestinationWithResourceIdentity(DeadLetterWithResourceIdentity deadLetterDestinationWithResourceIdentity)"
  desc: "Set the deadLetterDestinationWithResourceIdentity property: The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination. Uses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering."
  returns:
    description: "the QueueInfo object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.QueueInfo?alt=com.azure.resourcemanager.eventgrid.models.QueueInfo&text=QueueInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo.withEventTimeToLive(java.time.Duration)"
  fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo.withEventTimeToLive(Duration eventTimeToLive)"
  name: "withEventTimeToLive(Duration eventTimeToLive)"
  nameWithType: "QueueInfo.withEventTimeToLive(Duration eventTimeToLive)"
  summary: "Set the event<wbr>Time<wbr>ToLive property: Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published."
  parameters:
  - description: "the eventTimeToLive value to set."
    name: "eventTimeToLive"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  syntax: "public QueueInfo withEventTimeToLive(Duration eventTimeToLive)"
  desc: "Set the eventTimeToLive property: Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published. This duration value is expressed using the following format: 'P(n)Y(n)M(n)DT(n)H(n)M(n)S', where: - (n) is replaced by the value of each time element that follows the (n). - P is the duration (or Period) designator and is always placed at the beginning of the duration. - Y is the year designator, and it follows the value for the number of years. - M is the month designator, and it follows the value for the number of months. - W is the week designator, and it follows the value for the number of weeks. - D is the day designator, and it follows the value for the number of days. - T is the time designator, and it precedes the time components. - H is the hour designator, and it follows the value for the number of hours. - M is the minute designator, and it follows the value for the number of minutes. - S is the second designator, and it follows the value for the number of seconds. This duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined by topic’s EventRetentionInDays value. The followings are examples of valid values: - 'P0DT23H12M' or 'PT23H12M': for duration of 23 hours and 12 minutes. - 'P1D' or 'P1DT0H0M0S': for duration of 1 day."
  returns:
    description: "the QueueInfo object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.QueueInfo?alt=com.azure.resourcemanager.eventgrid.models.QueueInfo&text=QueueInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo.withMaxDeliveryCount(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo.withMaxDeliveryCount(Integer maxDeliveryCount)"
  name: "withMaxDeliveryCount(Integer maxDeliveryCount)"
  nameWithType: "QueueInfo.withMaxDeliveryCount(Integer maxDeliveryCount)"
  summary: "Set the max<wbr>Delivery<wbr>Count property: The maximum delivery count of the events."
  parameters:
  - description: "the maxDeliveryCount value to set."
    name: "maxDeliveryCount"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public QueueInfo withMaxDeliveryCount(Integer maxDeliveryCount)"
  desc: "Set the maxDeliveryCount property: The maximum delivery count of the events."
  returns:
    description: "the QueueInfo object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.QueueInfo?alt=com.azure.resourcemanager.eventgrid.models.QueueInfo&text=QueueInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.models.QueueInfo.withReceiveLockDurationInSeconds(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.eventgrid.models.QueueInfo.withReceiveLockDurationInSeconds(Integer receiveLockDurationInSeconds)"
  name: "withReceiveLockDurationInSeconds(Integer receiveLockDurationInSeconds)"
  nameWithType: "QueueInfo.withReceiveLockDurationInSeconds(Integer receiveLockDurationInSeconds)"
  summary: "Set the receive<wbr>Lock<wbr>Duration<wbr>InSeconds property: Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected."
  parameters:
  - description: "the receiveLockDurationInSeconds value to set."
    name: "receiveLockDurationInSeconds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public QueueInfo withReceiveLockDurationInSeconds(Integer receiveLockDurationInSeconds)"
  desc: "Set the receiveLockDurationInSeconds property: Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected. If this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected, the message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds."
  returns:
    description: "the QueueInfo object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.QueueInfo?alt=com.azure.resourcemanager.eventgrid.models.QueueInfo&text=QueueInfo\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties of the Queue info for event subscription."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventgrid.models.QueueInfo?alt=com.azure.resourcemanager.eventgrid.models.QueueInfo&text=QueueInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.eventgrid.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.7
