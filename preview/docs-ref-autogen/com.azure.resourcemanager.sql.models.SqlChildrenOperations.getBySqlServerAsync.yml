### YamlMime:JavaMember
uid: "com.azure.resourcemanager.sql.models.SqlChildrenOperations.getBySqlServerAsync*"
fullName: "com.azure.resourcemanager.sql.models.SqlChildrenOperations<T>.getBySqlServerAsync"
name: "getBySqlServerAsync"
nameWithType: "SqlChildrenOperations<T>.getBySqlServerAsync"
members:
- uid: "com.azure.resourcemanager.sql.models.SqlChildrenOperations.getBySqlServerAsync(com.azure.resourcemanager.sql.models.SqlServer,java.lang.String)"
  fullName: "com.azure.resourcemanager.sql.models.SqlChildrenOperations<T>.getBySqlServerAsync(SqlServer sqlServer, String name)"
  name: "getBySqlServerAsync(SqlServer sqlServer, String name)"
  nameWithType: "SqlChildrenOperations<T>.getBySqlServerAsync(SqlServer sqlServer, String name)"
  summary: "Asynchronously gets the information about a child resource from Azure SQL server, identifying it by its name and its resource group."
  parameters:
  - description: "the SQL server parent resource"
    name: "sqlServer"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlServer?alt=com.azure.resourcemanager.sql.models.SqlServer&text=SqlServer\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the child resource"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<T> getBySqlServerAsync(SqlServer sqlServer, String name)"
  returns:
    description: "a representation of the deferred computation of this call returning the found resource"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.sql.models.SqlChildrenOperations.getBySqlServerAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.sql.models.SqlChildrenOperations<T>.getBySqlServerAsync(String resourceGroupName, String sqlServerName, String name)"
  name: "getBySqlServerAsync(String resourceGroupName, String sqlServerName, String name)"
  nameWithType: "SqlChildrenOperations<T>.getBySqlServerAsync(String resourceGroupName, String sqlServerName, String name)"
  summary: "Asynchronously gets the information about a child resource from Azure SQL server, identifying it by its name and its resource group."
  parameters:
  - description: "the name of resource group"
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of SQL server parent resource"
    name: "sqlServerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the name of the child resource"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<T> getBySqlServerAsync(String resourceGroupName, String sqlServerName, String name)"
  returns:
    description: "a representation of the deferred computation of this call returning the found resource"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.sql.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.5
