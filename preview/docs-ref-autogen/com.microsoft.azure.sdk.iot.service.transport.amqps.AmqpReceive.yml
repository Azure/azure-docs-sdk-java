### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive"
fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive"
name: "AmqpReceive"
nameWithType: "AmqpReceive"
summary: "Instance of the QPID-Proton-J Base<wbr>Handler class overriding the events what are needed to handle high level open, close methods and feedback received event."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **AmqpReceive**</br> implements <xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent&text=AmqpFeedbackReceivedEvent\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)"
  name: "AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)"
  nameWithType: "AmqpReceive.AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)"
  summary: "Constructor to set up connection parameters"
  parameters:
  - description: "The address string of the service (example: AAA.BBB.CCC)"
    name: "hostName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The username string to use SASL authentication (example: user@sas.service)"
    name: "userName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The SAS token string"
    name: "sasToken"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "protocol to use"
    name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)"
  desc: "Constructor to set up connection parameters"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ProxyOptions)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)"
  name: "AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)"
  nameWithType: "AmqpReceive.AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)"
  summary: "Constructor to set up connection parameters"
  parameters:
  - description: "The address string of the service (example: AAA.BBB.CCC)"
    name: "hostName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The username string to use SASL authentication (example: user@sas.service)"
    name: "userName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The SAS token string"
    name: "sasToken"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "protocol to use"
    name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - description: "the proxy options to tunnel through, if a proxy should be used."
    name: "proxyOptions"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)"
  desc: "Constructor to set up connection parameters"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.close()"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.close()"
  name: "close()"
  nameWithType: "AmqpReceive.close()"
  summary: "Invalidate Amqps<wbr>Receive<wbr>Handler member variable"
  syntax: "public void close()"
  desc: "Invalidate AmqpsReceiveHandler member variable"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.onFeedbackReceived(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.onFeedbackReceived(String feedbackJson)"
  name: "onFeedbackReceived(String feedbackJson)"
  nameWithType: "AmqpReceive.onFeedbackReceived(String feedbackJson)"
  summary: "Handle on feedback received Proton event Parse received json and save result to a member variable Release semaphore for wait function"
  parameters:
  - description: "Received Json string to process"
    name: "feedbackJson"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void onFeedbackReceived(String feedbackJson)"
  desc: "Handle on feedback received Proton event Parse received json and save result to a member variable Release semaphore for wait function"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.open()"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.open()"
  name: "open()"
  nameWithType: "AmqpReceive.open()"
  summary: "Create Amqps<wbr>Receive<wbr>Handler and store it in a member variable"
  syntax: "public void open()"
  desc: "Create AmqpsReceiveHandler and store it in a member variable"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.receive(long)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.receive(long timeoutMs)"
  name: "receive(long timeoutMs)"
  nameWithType: "AmqpReceive.receive(long timeoutMs)"
  summary: "Synchronized call to receive feedback batch Hide the event based receiving mechanism from the user API"
  modifiers:
  - "synchronized"
  parameters:
  - description: "The timeout in milliseconds to wait for the feedback"
    name: "timeoutMs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public synchronized FeedbackBatch receive(long timeoutMs)"
  exceptions:
  - description: "This exception is thrown if the input AmqpReceive object is null"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  - description: "This exception is thrown if the input AmqpReceive object is null"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html\">InterruptedException</a>"
  desc: "Synchronized call to receive feedback batch Hide the event based receiving mechanism from the user API"
  returns:
    description: "The received feedback batch"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.FeedbackBatch?alt=com.microsoft.azure.sdk.iot.service.FeedbackBatch&text=FeedbackBatch\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Instance of the QPID-Proton-J BaseHandler class overriding the events what are needed to handle high level open, close methods and feedback received event."
implements:
- "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent&text=AmqpFeedbackReceivedEvent\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.transport.amqps"
artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.2.0
