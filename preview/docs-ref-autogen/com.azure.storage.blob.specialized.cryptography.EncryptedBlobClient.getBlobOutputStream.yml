### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.getBlobOutputStream*"
fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.getBlobOutputStream"
name: "getBlobOutputStream"
nameWithType: "EncryptedBlobClient.getBlobOutputStream"
members:
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.getBlobOutputStream()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.getBlobOutputStream()"
  name: "getBlobOutputStream()"
  nameWithType: "EncryptedBlobClient.getBlobOutputStream()"
  summary: "Creates and opens an output stream to write data to the block blob."
  syntax: "public BlobOutputStream getBlobOutputStream()"
  returns:
    description: "A <xref uid=\"com.azure.storage.blob.specialized.BlobOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobOutputStream\"></xref> object used to write data to the blob."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobOutputStream?alt=com.azure.storage.blob.specialized.BlobOutputStream&text=BlobOutputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.getBlobOutputStream(boolean)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.getBlobOutputStream(boolean overwrite)"
  name: "getBlobOutputStream(boolean overwrite)"
  nameWithType: "EncryptedBlobClient.getBlobOutputStream(boolean overwrite)"
  summary: "Creates and opens an output stream to write data to the block blob."
  parameters:
  - description: "Whether or not to overwrite, should data exist on the blob."
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobOutputStream getBlobOutputStream(boolean overwrite)"
  returns:
    description: "A <xref uid=\"com.azure.storage.blob.specialized.BlobOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobOutputStream\"></xref> object used to write data to the blob."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobOutputStream?alt=com.azure.storage.blob.specialized.BlobOutputStream&text=BlobOutputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.getBlobOutputStream(com.azure.storage.blob.models.ParallelTransferOptions,com.azure.storage.blob.models.BlobHttpHeaders,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.BlobRequestConditions)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.getBlobOutputStream(ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions)"
  name: "getBlobOutputStream(ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions)"
  nameWithType: "EncryptedBlobClient.getBlobOutputStream(ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions)"
  summary: "Creates and opens an output stream to write data to the block blob. If the blob already exists on the service, it will be overwritten.\n\nTo avoid overwriting, pass \"\\*\" to <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions.setIfNoneMatch*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions#setIfNoneMatch(String)\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.ParallelTransferOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ParallelTransferOptions\"></xref> used to configure buffered uploading."
    name: "parallelTransferOptions"
    type: "<xref href=\"com.azure.storage.blob.models.ParallelTransferOptions?alt=com.azure.storage.blob.models.ParallelTransferOptions&text=ParallelTransferOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>"
    name: "headers"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  - description: "Metadata to associate with the blob."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref> for the destination blob."
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "requestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobOutputStream getBlobOutputStream(ParallelTransferOptions parallelTransferOptions, BlobHttpHeaders headers, Map<String,String> metadata, AccessTier tier, BlobRequestConditions requestConditions)"
  returns:
    description: "A <xref uid=\"com.azure.storage.blob.specialized.BlobOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobOutputStream\"></xref> object used to write data to the blob."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobOutputStream?alt=com.azure.storage.blob.specialized.BlobOutputStream&text=BlobOutputStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.getBlobOutputStream(com.azure.storage.blob.options.BlockBlobOutputStreamOptions)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.getBlobOutputStream(BlockBlobOutputStreamOptions options)"
  name: "getBlobOutputStream(BlockBlobOutputStreamOptions options)"
  nameWithType: "EncryptedBlobClient.getBlobOutputStream(BlockBlobOutputStreamOptions options)"
  summary: "Creates and opens an output stream to write data to the block blob. If the blob already exists on the service, it will be overwritten.\n\nTo avoid overwriting, pass \"\\*\" to <xref uid=\"com.azure.storage.blob.models.BlobRequestConditions.setIfNoneMatch*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions#setIfNoneMatch(String)\"></xref>."
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlockBlobOutputStreamOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobOutputStreamOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobOutputStreamOptions?alt=com.azure.storage.blob.options.BlockBlobOutputStreamOptions&text=BlockBlobOutputStreamOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobOutputStream getBlobOutputStream(BlockBlobOutputStreamOptions options)"
  returns:
    description: "A <xref uid=\"com.azure.storage.blob.specialized.BlobOutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobOutputStream\"></xref> object used to write data to the blob."
    type: "<xref href=\"com.azure.storage.blob.specialized.BlobOutputStream?alt=com.azure.storage.blob.specialized.BlobOutputStream&text=BlobOutputStream\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized.cryptography"
artifact: com.azure:azure-storage-blob-cryptography:12.9.0-beta.1
