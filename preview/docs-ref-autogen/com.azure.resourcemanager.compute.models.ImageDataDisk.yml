### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk
  id: ImageDataDisk
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models
  children:
  - com.azure.resourcemanager.compute.models.ImageDataDisk.ImageDataDisk()
  - com.azure.resourcemanager.compute.models.ImageDataDisk.blobUri()
  - com.azure.resourcemanager.compute.models.ImageDataDisk.caching()
  - com.azure.resourcemanager.compute.models.ImageDataDisk.diskSizeGB()
  - com.azure.resourcemanager.compute.models.ImageDataDisk.lun()
  - com.azure.resourcemanager.compute.models.ImageDataDisk.managedDisk()
  - com.azure.resourcemanager.compute.models.ImageDataDisk.snapshot()
  - com.azure.resourcemanager.compute.models.ImageDataDisk.storageAccountType()
  - com.azure.resourcemanager.compute.models.ImageDataDisk.validate()
  - com.azure.resourcemanager.compute.models.ImageDataDisk.withBlobUri(java.lang.String)
  - com.azure.resourcemanager.compute.models.ImageDataDisk.withCaching(com.azure.resourcemanager.compute.models.CachingTypes)
  - com.azure.resourcemanager.compute.models.ImageDataDisk.withDiskSizeGB(java.lang.Integer)
  - com.azure.resourcemanager.compute.models.ImageDataDisk.withLun(int)
  - com.azure.resourcemanager.compute.models.ImageDataDisk.withManagedDisk(com.azure.core.management.SubResource)
  - com.azure.resourcemanager.compute.models.ImageDataDisk.withSnapshot(com.azure.core.management.SubResource)
  - com.azure.resourcemanager.compute.models.ImageDataDisk.withStorageAccountType(com.azure.resourcemanager.compute.models.StorageAccountTypes)
  langs:
  - java
  name: ImageDataDisk
  nameWithType: ImageDataDisk
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk
  type: Class
  package: com.azure.resourcemanager.compute.models
  summary: The ImageDataDisk model.
  syntax:
    content: public final class ImageDataDisk
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.ImageDataDisk()
  id: ImageDataDisk()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: ImageDataDisk()
  nameWithType: ImageDataDisk.ImageDataDisk()
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.ImageDataDisk()
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.ImageDataDisk*
  type: Constructor
  package: com.azure.resourcemanager.compute.models
  syntax:
    content: public ImageDataDisk()
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.blobUri()
  id: blobUri()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: blobUri()
  nameWithType: ImageDataDisk.blobUri()
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.blobUri()
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.blobUri*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the blobUri property: The Virtual Hard Disk.'
  syntax:
    content: public String blobUri()
    return:
      type: java.lang.String
      description: the blobUri value.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.caching()
  id: caching()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: caching()
  nameWithType: ImageDataDisk.caching()
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.caching()
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.caching*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the caching property: Specifies the caching requirements. <br><br> Possible values are: <br><br> \*\*None\*\* <br><br> \*\*ReadOnly\*\* <br><br> \*\*ReadWrite\*\* <br><br> Default: \*\*None for Standard storage. ReadOnly for Premium storage\*\*.'
  syntax:
    content: public CachingTypes caching()
    return:
      type: com.azure.resourcemanager.compute.models.CachingTypes
      description: the caching value.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.diskSizeGB()
  id: diskSizeGB()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: diskSizeGB()
  nameWithType: ImageDataDisk.diskSizeGB()
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.diskSizeGB()
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.diskSizeGB*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the diskSizeGB property: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB.'
  syntax:
    content: public Integer diskSizeGB()
    return:
      type: java.lang.Integer
      description: the diskSizeGB value.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.lun()
  id: lun()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: lun()
  nameWithType: ImageDataDisk.lun()
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.lun()
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.lun*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the lun property: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.'
  syntax:
    content: public int lun()
    return:
      type: int
      description: the lun value.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.managedDisk()
  id: managedDisk()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: managedDisk()
  nameWithType: ImageDataDisk.managedDisk()
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.managedDisk()
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.managedDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the managedDisk property: The managedDisk.'
  syntax:
    content: public SubResource managedDisk()
    return:
      type: com.azure.core.management.SubResource
      description: the managedDisk value.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.snapshot()
  id: snapshot()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: snapshot()
  nameWithType: ImageDataDisk.snapshot()
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.snapshot()
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.snapshot*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the snapshot property: The snapshot.'
  syntax:
    content: public SubResource snapshot()
    return:
      type: com.azure.core.management.SubResource
      description: the snapshot value.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.storageAccountType()
  id: storageAccountType()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: storageAccountType()
  nameWithType: ImageDataDisk.storageAccountType()
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.storageAccountType()
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.storageAccountType*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Get the storageAccountType property: Specifies the storage account type for the managed disk. NOTE: UltraSSD\_LRS can only be used with data disks, it cannot be used with OS Disk.'
  syntax:
    content: public StorageAccountTypes storageAccountType()
    return:
      type: com.azure.resourcemanager.compute.models.StorageAccountTypes
      description: the storageAccountType value.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.validate()
  id: validate()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: validate()
  nameWithType: ImageDataDisk.validate()
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.validate()
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.validate*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withBlobUri(java.lang.String)
  id: withBlobUri(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: withBlobUri(String blobUri)
  nameWithType: ImageDataDisk.withBlobUri(String blobUri)
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withBlobUri(String blobUri)
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.withBlobUri*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the blobUri property: The Virtual Hard Disk.'
  syntax:
    content: public ImageDataDisk withBlobUri(String blobUri)
    parameters:
    - id: blobUri
      type: java.lang.String
      description: the blobUri value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDataDisk
      description: the ImageDataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withCaching(com.azure.resourcemanager.compute.models.CachingTypes)
  id: withCaching(com.azure.resourcemanager.compute.models.CachingTypes)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: withCaching(CachingTypes caching)
  nameWithType: ImageDataDisk.withCaching(CachingTypes caching)
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withCaching(CachingTypes caching)
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.withCaching*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the caching property: Specifies the caching requirements. <br><br> Possible values are: <br><br> \*\*None\*\* <br><br> \*\*ReadOnly\*\* <br><br> \*\*ReadWrite\*\* <br><br> Default: \*\*None for Standard storage. ReadOnly for Premium storage\*\*.'
  syntax:
    content: public ImageDataDisk withCaching(CachingTypes caching)
    parameters:
    - id: caching
      type: com.azure.resourcemanager.compute.models.CachingTypes
      description: the caching value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDataDisk
      description: the ImageDataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withDiskSizeGB(java.lang.Integer)
  id: withDiskSizeGB(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: withDiskSizeGB(Integer diskSizeGB)
  nameWithType: ImageDataDisk.withDiskSizeGB(Integer diskSizeGB)
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withDiskSizeGB(Integer diskSizeGB)
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.withDiskSizeGB*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the diskSizeGB property: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB.'
  syntax:
    content: public ImageDataDisk withDiskSizeGB(Integer diskSizeGB)
    parameters:
    - id: diskSizeGB
      type: java.lang.Integer
      description: the diskSizeGB value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDataDisk
      description: the ImageDataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withLun(int)
  id: withLun(int)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: withLun(int lun)
  nameWithType: ImageDataDisk.withLun(int lun)
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withLun(int lun)
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.withLun*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the lun property: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.'
  syntax:
    content: public ImageDataDisk withLun(int lun)
    parameters:
    - id: lun
      type: int
      description: the lun value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDataDisk
      description: the ImageDataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withManagedDisk(com.azure.core.management.SubResource)
  id: withManagedDisk(com.azure.core.management.SubResource)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: withManagedDisk(SubResource managedDisk)
  nameWithType: ImageDataDisk.withManagedDisk(SubResource managedDisk)
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withManagedDisk(SubResource managedDisk)
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.withManagedDisk*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the managedDisk property: The managedDisk.'
  syntax:
    content: public ImageDataDisk withManagedDisk(SubResource managedDisk)
    parameters:
    - id: managedDisk
      type: com.azure.core.management.SubResource
      description: the managedDisk value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDataDisk
      description: the ImageDataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withSnapshot(com.azure.core.management.SubResource)
  id: withSnapshot(com.azure.core.management.SubResource)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: withSnapshot(SubResource snapshot)
  nameWithType: ImageDataDisk.withSnapshot(SubResource snapshot)
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withSnapshot(SubResource snapshot)
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.withSnapshot*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the snapshot property: The snapshot.'
  syntax:
    content: public ImageDataDisk withSnapshot(SubResource snapshot)
    parameters:
    - id: snapshot
      type: com.azure.core.management.SubResource
      description: the snapshot value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDataDisk
      description: the ImageDataDisk object itself.
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withStorageAccountType(com.azure.resourcemanager.compute.models.StorageAccountTypes)
  id: withStorageAccountType(com.azure.resourcemanager.compute.models.StorageAccountTypes)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.models.ImageDataDisk
  langs:
  - java
  name: withStorageAccountType(StorageAccountTypes storageAccountType)
  nameWithType: ImageDataDisk.withStorageAccountType(StorageAccountTypes storageAccountType)
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withStorageAccountType(StorageAccountTypes storageAccountType)
  overload: com.azure.resourcemanager.compute.models.ImageDataDisk.withStorageAccountType*
  type: Method
  package: com.azure.resourcemanager.compute.models
  summary: 'Set the storageAccountType property: Specifies the storage account type for the managed disk. NOTE: UltraSSD\_LRS can only be used with data disks, it cannot be used with OS Disk.'
  syntax:
    content: public ImageDataDisk withStorageAccountType(StorageAccountTypes storageAccountType)
    parameters:
    - id: storageAccountType
      type: com.azure.resourcemanager.compute.models.StorageAccountTypes
      description: the storageAccountType value to set.
    return:
      type: com.azure.resourcemanager.compute.models.ImageDataDisk
      description: the ImageDataDisk object itself.
references:
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.ImageDataDisk*
  name: ImageDataDisk
  nameWithType: ImageDataDisk.ImageDataDisk
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.ImageDataDisk
  package: com.azure.resourcemanager.compute.models
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.lun*
  name: lun
  nameWithType: ImageDataDisk.lun
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.lun
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withLun*
  name: withLun
  nameWithType: ImageDataDisk.withLun
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withLun
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.core.management.SubResource
  spec.java:
  - uid: com.azure.core.management.SubResource
    name: SubResource
    fullName: com.azure.core.management.SubResource
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.snapshot*
  name: snapshot
  nameWithType: ImageDataDisk.snapshot
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.snapshot
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withSnapshot*
  name: withSnapshot
  nameWithType: ImageDataDisk.withSnapshot
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withSnapshot
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.managedDisk*
  name: managedDisk
  nameWithType: ImageDataDisk.managedDisk
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.managedDisk
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withManagedDisk*
  name: withManagedDisk
  nameWithType: ImageDataDisk.withManagedDisk
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withManagedDisk
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.blobUri*
  name: blobUri
  nameWithType: ImageDataDisk.blobUri
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.blobUri
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withBlobUri*
  name: withBlobUri
  nameWithType: ImageDataDisk.withBlobUri
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withBlobUri
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.CachingTypes
  name: CachingTypes
  nameWithType: CachingTypes
  fullName: com.azure.resourcemanager.compute.models.CachingTypes
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.caching*
  name: caching
  nameWithType: ImageDataDisk.caching
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.caching
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withCaching*
  name: withCaching
  nameWithType: ImageDataDisk.withCaching
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withCaching
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.diskSizeGB*
  name: diskSizeGB
  nameWithType: ImageDataDisk.diskSizeGB
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.diskSizeGB
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withDiskSizeGB*
  name: withDiskSizeGB
  nameWithType: ImageDataDisk.withDiskSizeGB
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withDiskSizeGB
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.StorageAccountTypes
  name: StorageAccountTypes
  nameWithType: StorageAccountTypes
  fullName: com.azure.resourcemanager.compute.models.StorageAccountTypes
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.storageAccountType*
  name: storageAccountType
  nameWithType: ImageDataDisk.storageAccountType
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.storageAccountType
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.withStorageAccountType*
  name: withStorageAccountType
  nameWithType: ImageDataDisk.withStorageAccountType
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.withStorageAccountType
  package: com.azure.resourcemanager.compute.models
- uid: com.azure.resourcemanager.compute.models.ImageDataDisk.validate*
  name: validate
  nameWithType: ImageDataDisk.validate
  fullName: com.azure.resourcemanager.compute.models.ImageDataDisk.validate
  package: com.azure.resourcemanager.compute.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
