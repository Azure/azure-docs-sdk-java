### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions"
fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions"
name: "Predictions"
nameWithType: "Predictions"
summary: "An instance of this class provides access to all the operations defined in Predictions."
syntax: "public interface **Predictions**"
methods:
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImage()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImage()"
  name: "classifyImage()"
  nameWithType: "Predictions.classifyImage()"
  summary: "Classify an image and saves the result."
  modifiers:
  - "abstract"
  syntax: "public abstract Predictions.PredictionsClassifyImageDefinitionStages.WithProjectId classifyImage()"
  desc: "Classify an image and saves the result."
  returns:
    description: "the first stage of the classifyImage call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsClassifyImageDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsClassifyImageDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImage(java.util.UUID,java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImage(UUID projectId, String publishedName, byte[] imageData, ClassifyImageOptionalParameter classifyImageOptionalParameter)"
  name: "classifyImage(UUID projectId, String publishedName, byte[] imageData, ClassifyImageOptionalParameter classifyImageOptionalParameter)"
  nameWithType: "Predictions.classifyImage(UUID projectId, String publishedName, byte[] imageData, ClassifyImageOptionalParameter classifyImageOptionalParameter)"
  summary: "Classify an image and saves the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB."
    name: "imageData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "classifyImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageOptionalParameter&text=ClassifyImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImagePrediction classifyImage(UUID projectId, String publishedName, byte[] imageData, ClassifyImageOptionalParameter classifyImageOptionalParameter)"
  desc: "Classify an image and saves the result."
  returns:
    description: "the ImagePrediction object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageAsync(java.util.UUID,java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageAsync(UUID projectId, String publishedName, byte[] imageData, ClassifyImageOptionalParameter classifyImageOptionalParameter)"
  name: "classifyImageAsync(UUID projectId, String publishedName, byte[] imageData, ClassifyImageOptionalParameter classifyImageOptionalParameter)"
  nameWithType: "Predictions.classifyImageAsync(UUID projectId, String publishedName, byte[] imageData, ClassifyImageOptionalParameter classifyImageOptionalParameter)"
  summary: "Classify an image and saves the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB."
    name: "imageData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "classifyImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageOptionalParameter&text=ClassifyImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImagePrediction> classifyImageAsync(UUID projectId, String publishedName, byte[] imageData, ClassifyImageOptionalParameter classifyImageOptionalParameter)"
  desc: "Classify an image and saves the result."
  returns:
    description: "the observable to the ImagePrediction object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageUrl()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageUrl()"
  name: "classifyImageUrl()"
  nameWithType: "Predictions.classifyImageUrl()"
  summary: "Classify an image url and saves the result."
  modifiers:
  - "abstract"
  syntax: "public abstract Predictions.PredictionsClassifyImageUrlDefinitionStages.WithProjectId classifyImageUrl()"
  desc: "Classify an image url and saves the result."
  returns:
    description: "the first stage of the classifyImageUrl call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsClassifyImageUrlDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsClassifyImageUrlDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageUrl(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageUrlOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageUrl(UUID projectId, String publishedName, String url, ClassifyImageUrlOptionalParameter classifyImageUrlOptionalParameter)"
  name: "classifyImageUrl(UUID projectId, String publishedName, String url, ClassifyImageUrlOptionalParameter classifyImageUrlOptionalParameter)"
  nameWithType: "Predictions.classifyImageUrl(UUID projectId, String publishedName, String url, ClassifyImageUrlOptionalParameter classifyImageUrlOptionalParameter)"
  summary: "Classify an image url and saves the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Url of the image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "classifyImageUrlOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageUrlOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageUrlOptionalParameter&text=ClassifyImageUrlOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImagePrediction classifyImageUrl(UUID projectId, String publishedName, String url, ClassifyImageUrlOptionalParameter classifyImageUrlOptionalParameter)"
  desc: "Classify an image url and saves the result."
  returns:
    description: "the ImagePrediction object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageUrlAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageUrlOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageUrlAsync(UUID projectId, String publishedName, String url, ClassifyImageUrlOptionalParameter classifyImageUrlOptionalParameter)"
  name: "classifyImageUrlAsync(UUID projectId, String publishedName, String url, ClassifyImageUrlOptionalParameter classifyImageUrlOptionalParameter)"
  nameWithType: "Predictions.classifyImageUrlAsync(UUID projectId, String publishedName, String url, ClassifyImageUrlOptionalParameter classifyImageUrlOptionalParameter)"
  summary: "Classify an image url and saves the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Url of the image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "classifyImageUrlOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageUrlOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageUrlOptionalParameter&text=ClassifyImageUrlOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImagePrediction> classifyImageUrlAsync(UUID projectId, String publishedName, String url, ClassifyImageUrlOptionalParameter classifyImageUrlOptionalParameter)"
  desc: "Classify an image url and saves the result."
  returns:
    description: "the observable to the ImagePrediction object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageUrlWithNoStore()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageUrlWithNoStore()"
  name: "classifyImageUrlWithNoStore()"
  nameWithType: "Predictions.classifyImageUrlWithNoStore()"
  summary: "Classify an image url without saving the result."
  modifiers:
  - "abstract"
  syntax: "public abstract Predictions.PredictionsClassifyImageUrlWithNoStoreDefinitionStages.WithProjectId classifyImageUrlWithNoStore()"
  desc: "Classify an image url without saving the result."
  returns:
    description: "the first stage of the classifyImageUrlWithNoStore call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsClassifyImageUrlWithNoStoreDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsClassifyImageUrlWithNoStoreDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageUrlWithNoStore(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageUrlWithNoStoreOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageUrlWithNoStore(UUID projectId, String publishedName, String url, ClassifyImageUrlWithNoStoreOptionalParameter classifyImageUrlWithNoStoreOptionalParameter)"
  name: "classifyImageUrlWithNoStore(UUID projectId, String publishedName, String url, ClassifyImageUrlWithNoStoreOptionalParameter classifyImageUrlWithNoStoreOptionalParameter)"
  nameWithType: "Predictions.classifyImageUrlWithNoStore(UUID projectId, String publishedName, String url, ClassifyImageUrlWithNoStoreOptionalParameter classifyImageUrlWithNoStoreOptionalParameter)"
  summary: "Classify an image url without saving the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Url of the image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "classifyImageUrlWithNoStoreOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageUrlWithNoStoreOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageUrlWithNoStoreOptionalParameter&text=ClassifyImageUrlWithNoStoreOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImagePrediction classifyImageUrlWithNoStore(UUID projectId, String publishedName, String url, ClassifyImageUrlWithNoStoreOptionalParameter classifyImageUrlWithNoStoreOptionalParameter)"
  desc: "Classify an image url without saving the result."
  returns:
    description: "the ImagePrediction object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageUrlWithNoStoreAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageUrlWithNoStoreOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageUrlWithNoStoreAsync(UUID projectId, String publishedName, String url, ClassifyImageUrlWithNoStoreOptionalParameter classifyImageUrlWithNoStoreOptionalParameter)"
  name: "classifyImageUrlWithNoStoreAsync(UUID projectId, String publishedName, String url, ClassifyImageUrlWithNoStoreOptionalParameter classifyImageUrlWithNoStoreOptionalParameter)"
  nameWithType: "Predictions.classifyImageUrlWithNoStoreAsync(UUID projectId, String publishedName, String url, ClassifyImageUrlWithNoStoreOptionalParameter classifyImageUrlWithNoStoreOptionalParameter)"
  summary: "Classify an image url without saving the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Url of the image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "classifyImageUrlWithNoStoreOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageUrlWithNoStoreOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageUrlWithNoStoreOptionalParameter&text=ClassifyImageUrlWithNoStoreOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImagePrediction> classifyImageUrlWithNoStoreAsync(UUID projectId, String publishedName, String url, ClassifyImageUrlWithNoStoreOptionalParameter classifyImageUrlWithNoStoreOptionalParameter)"
  desc: "Classify an image url without saving the result."
  returns:
    description: "the observable to the ImagePrediction object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageWithNoStore()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageWithNoStore()"
  name: "classifyImageWithNoStore()"
  nameWithType: "Predictions.classifyImageWithNoStore()"
  summary: "Classify an image without saving the result."
  modifiers:
  - "abstract"
  syntax: "public abstract Predictions.PredictionsClassifyImageWithNoStoreDefinitionStages.WithProjectId classifyImageWithNoStore()"
  desc: "Classify an image without saving the result."
  returns:
    description: "the first stage of the classifyImageWithNoStore call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsClassifyImageWithNoStoreDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsClassifyImageWithNoStoreDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageWithNoStore(java.util.UUID,java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageWithNoStoreOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageWithNoStore(UUID projectId, String publishedName, byte[] imageData, ClassifyImageWithNoStoreOptionalParameter classifyImageWithNoStoreOptionalParameter)"
  name: "classifyImageWithNoStore(UUID projectId, String publishedName, byte[] imageData, ClassifyImageWithNoStoreOptionalParameter classifyImageWithNoStoreOptionalParameter)"
  nameWithType: "Predictions.classifyImageWithNoStore(UUID projectId, String publishedName, byte[] imageData, ClassifyImageWithNoStoreOptionalParameter classifyImageWithNoStoreOptionalParameter)"
  summary: "Classify an image without saving the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 0MB."
    name: "imageData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "classifyImageWithNoStoreOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageWithNoStoreOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageWithNoStoreOptionalParameter&text=ClassifyImageWithNoStoreOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImagePrediction classifyImageWithNoStore(UUID projectId, String publishedName, byte[] imageData, ClassifyImageWithNoStoreOptionalParameter classifyImageWithNoStoreOptionalParameter)"
  desc: "Classify an image without saving the result."
  returns:
    description: "the ImagePrediction object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageWithNoStoreAsync(java.util.UUID,java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageWithNoStoreOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.classifyImageWithNoStoreAsync(UUID projectId, String publishedName, byte[] imageData, ClassifyImageWithNoStoreOptionalParameter classifyImageWithNoStoreOptionalParameter)"
  name: "classifyImageWithNoStoreAsync(UUID projectId, String publishedName, byte[] imageData, ClassifyImageWithNoStoreOptionalParameter classifyImageWithNoStoreOptionalParameter)"
  nameWithType: "Predictions.classifyImageWithNoStoreAsync(UUID projectId, String publishedName, byte[] imageData, ClassifyImageWithNoStoreOptionalParameter classifyImageWithNoStoreOptionalParameter)"
  summary: "Classify an image without saving the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 0MB."
    name: "imageData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "classifyImageWithNoStoreOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageWithNoStoreOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ClassifyImageWithNoStoreOptionalParameter&text=ClassifyImageWithNoStoreOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImagePrediction> classifyImageWithNoStoreAsync(UUID projectId, String publishedName, byte[] imageData, ClassifyImageWithNoStoreOptionalParameter classifyImageWithNoStoreOptionalParameter)"
  desc: "Classify an image without saving the result."
  returns:
    description: "the observable to the ImagePrediction object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImage()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImage()"
  name: "detectImage()"
  nameWithType: "Predictions.detectImage()"
  summary: "Detect objects in an image and saves the result."
  modifiers:
  - "abstract"
  syntax: "public abstract Predictions.PredictionsDetectImageDefinitionStages.WithProjectId detectImage()"
  desc: "Detect objects in an image and saves the result."
  returns:
    description: "the first stage of the detectImage call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsDetectImageDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsDetectImageDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImage(java.util.UUID,java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImage(UUID projectId, String publishedName, byte[] imageData, DetectImageOptionalParameter detectImageOptionalParameter)"
  name: "detectImage(UUID projectId, String publishedName, byte[] imageData, DetectImageOptionalParameter detectImageOptionalParameter)"
  nameWithType: "Predictions.detectImage(UUID projectId, String publishedName, byte[] imageData, DetectImageOptionalParameter detectImageOptionalParameter)"
  summary: "Detect objects in an image and saves the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB."
    name: "imageData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageOptionalParameter&text=DetectImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImagePrediction detectImage(UUID projectId, String publishedName, byte[] imageData, DetectImageOptionalParameter detectImageOptionalParameter)"
  desc: "Detect objects in an image and saves the result."
  returns:
    description: "the ImagePrediction object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageAsync(java.util.UUID,java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageAsync(UUID projectId, String publishedName, byte[] imageData, DetectImageOptionalParameter detectImageOptionalParameter)"
  name: "detectImageAsync(UUID projectId, String publishedName, byte[] imageData, DetectImageOptionalParameter detectImageOptionalParameter)"
  nameWithType: "Predictions.detectImageAsync(UUID projectId, String publishedName, byte[] imageData, DetectImageOptionalParameter detectImageOptionalParameter)"
  summary: "Detect objects in an image and saves the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB."
    name: "imageData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectImageOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageOptionalParameter&text=DetectImageOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImagePrediction> detectImageAsync(UUID projectId, String publishedName, byte[] imageData, DetectImageOptionalParameter detectImageOptionalParameter)"
  desc: "Detect objects in an image and saves the result."
  returns:
    description: "the observable to the ImagePrediction object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageUrl()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageUrl()"
  name: "detectImageUrl()"
  nameWithType: "Predictions.detectImageUrl()"
  summary: "Detect objects in an image url and saves the result."
  modifiers:
  - "abstract"
  syntax: "public abstract Predictions.PredictionsDetectImageUrlDefinitionStages.WithProjectId detectImageUrl()"
  desc: "Detect objects in an image url and saves the result."
  returns:
    description: "the first stage of the detectImageUrl call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsDetectImageUrlDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsDetectImageUrlDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageUrl(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageUrlOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageUrl(UUID projectId, String publishedName, String url, DetectImageUrlOptionalParameter detectImageUrlOptionalParameter)"
  name: "detectImageUrl(UUID projectId, String publishedName, String url, DetectImageUrlOptionalParameter detectImageUrlOptionalParameter)"
  nameWithType: "Predictions.detectImageUrl(UUID projectId, String publishedName, String url, DetectImageUrlOptionalParameter detectImageUrlOptionalParameter)"
  summary: "Detect objects in an image url and saves the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Url of the image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectImageUrlOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageUrlOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageUrlOptionalParameter&text=DetectImageUrlOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImagePrediction detectImageUrl(UUID projectId, String publishedName, String url, DetectImageUrlOptionalParameter detectImageUrlOptionalParameter)"
  desc: "Detect objects in an image url and saves the result."
  returns:
    description: "the ImagePrediction object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageUrlAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageUrlOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageUrlAsync(UUID projectId, String publishedName, String url, DetectImageUrlOptionalParameter detectImageUrlOptionalParameter)"
  name: "detectImageUrlAsync(UUID projectId, String publishedName, String url, DetectImageUrlOptionalParameter detectImageUrlOptionalParameter)"
  nameWithType: "Predictions.detectImageUrlAsync(UUID projectId, String publishedName, String url, DetectImageUrlOptionalParameter detectImageUrlOptionalParameter)"
  summary: "Detect objects in an image url and saves the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Url of the image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectImageUrlOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageUrlOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageUrlOptionalParameter&text=DetectImageUrlOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImagePrediction> detectImageUrlAsync(UUID projectId, String publishedName, String url, DetectImageUrlOptionalParameter detectImageUrlOptionalParameter)"
  desc: "Detect objects in an image url and saves the result."
  returns:
    description: "the observable to the ImagePrediction object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageUrlWithNoStore()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageUrlWithNoStore()"
  name: "detectImageUrlWithNoStore()"
  nameWithType: "Predictions.detectImageUrlWithNoStore()"
  summary: "Detect objects in an image url without saving the result."
  modifiers:
  - "abstract"
  syntax: "public abstract Predictions.PredictionsDetectImageUrlWithNoStoreDefinitionStages.WithProjectId detectImageUrlWithNoStore()"
  desc: "Detect objects in an image url without saving the result."
  returns:
    description: "the first stage of the detectImageUrlWithNoStore call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsDetectImageUrlWithNoStoreDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsDetectImageUrlWithNoStoreDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageUrlWithNoStore(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageUrlWithNoStoreOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageUrlWithNoStore(UUID projectId, String publishedName, String url, DetectImageUrlWithNoStoreOptionalParameter detectImageUrlWithNoStoreOptionalParameter)"
  name: "detectImageUrlWithNoStore(UUID projectId, String publishedName, String url, DetectImageUrlWithNoStoreOptionalParameter detectImageUrlWithNoStoreOptionalParameter)"
  nameWithType: "Predictions.detectImageUrlWithNoStore(UUID projectId, String publishedName, String url, DetectImageUrlWithNoStoreOptionalParameter detectImageUrlWithNoStoreOptionalParameter)"
  summary: "Detect objects in an image url without saving the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Url of the image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectImageUrlWithNoStoreOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageUrlWithNoStoreOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageUrlWithNoStoreOptionalParameter&text=DetectImageUrlWithNoStoreOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImagePrediction detectImageUrlWithNoStore(UUID projectId, String publishedName, String url, DetectImageUrlWithNoStoreOptionalParameter detectImageUrlWithNoStoreOptionalParameter)"
  desc: "Detect objects in an image url without saving the result."
  returns:
    description: "the ImagePrediction object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageUrlWithNoStoreAsync(java.util.UUID,java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageUrlWithNoStoreOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageUrlWithNoStoreAsync(UUID projectId, String publishedName, String url, DetectImageUrlWithNoStoreOptionalParameter detectImageUrlWithNoStoreOptionalParameter)"
  name: "detectImageUrlWithNoStoreAsync(UUID projectId, String publishedName, String url, DetectImageUrlWithNoStoreOptionalParameter detectImageUrlWithNoStoreOptionalParameter)"
  nameWithType: "Predictions.detectImageUrlWithNoStoreAsync(UUID projectId, String publishedName, String url, DetectImageUrlWithNoStoreOptionalParameter detectImageUrlWithNoStoreOptionalParameter)"
  summary: "Detect objects in an image url without saving the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Url of the image."
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectImageUrlWithNoStoreOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageUrlWithNoStoreOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageUrlWithNoStoreOptionalParameter&text=DetectImageUrlWithNoStoreOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImagePrediction> detectImageUrlWithNoStoreAsync(UUID projectId, String publishedName, String url, DetectImageUrlWithNoStoreOptionalParameter detectImageUrlWithNoStoreOptionalParameter)"
  desc: "Detect objects in an image url without saving the result."
  returns:
    description: "the observable to the ImagePrediction object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageWithNoStore()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageWithNoStore()"
  name: "detectImageWithNoStore()"
  nameWithType: "Predictions.detectImageWithNoStore()"
  summary: "Detect objects in an image without saving the result."
  modifiers:
  - "abstract"
  syntax: "public abstract Predictions.PredictionsDetectImageWithNoStoreDefinitionStages.WithProjectId detectImageWithNoStore()"
  desc: "Detect objects in an image without saving the result."
  returns:
    description: "the first stage of the detectImageWithNoStore call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsDetectImageWithNoStoreDefinitionStages.WithProjectId?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.PredictionsDetectImageWithNoStoreDefinitionStages.WithProjectId&text=WithProjectId\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageWithNoStore(java.util.UUID,java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageWithNoStoreOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageWithNoStore(UUID projectId, String publishedName, byte[] imageData, DetectImageWithNoStoreOptionalParameter detectImageWithNoStoreOptionalParameter)"
  name: "detectImageWithNoStore(UUID projectId, String publishedName, byte[] imageData, DetectImageWithNoStoreOptionalParameter detectImageWithNoStoreOptionalParameter)"
  nameWithType: "Predictions.detectImageWithNoStore(UUID projectId, String publishedName, byte[] imageData, DetectImageWithNoStoreOptionalParameter detectImageWithNoStoreOptionalParameter)"
  summary: "Detect objects in an image without saving the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 0MB."
    name: "imageData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectImageWithNoStoreOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageWithNoStoreOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageWithNoStoreOptionalParameter&text=DetectImageWithNoStoreOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ImagePrediction detectImageWithNoStore(UUID projectId, String publishedName, byte[] imageData, DetectImageWithNoStoreOptionalParameter detectImageWithNoStoreOptionalParameter)"
  desc: "Detect objects in an image without saving the result."
  returns:
    description: "the ImagePrediction object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageWithNoStoreAsync(java.util.UUID,java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageWithNoStoreOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction.Predictions.detectImageWithNoStoreAsync(UUID projectId, String publishedName, byte[] imageData, DetectImageWithNoStoreOptionalParameter detectImageWithNoStoreOptionalParameter)"
  name: "detectImageWithNoStoreAsync(UUID projectId, String publishedName, byte[] imageData, DetectImageWithNoStoreOptionalParameter detectImageWithNoStoreOptionalParameter)"
  nameWithType: "Predictions.detectImageWithNoStoreAsync(UUID projectId, String publishedName, byte[] imageData, DetectImageWithNoStoreOptionalParameter detectImageWithNoStoreOptionalParameter)"
  summary: "Detect objects in an image without saving the result."
  modifiers:
  - "abstract"
  parameters:
  - description: "The project id."
    name: "projectId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
  - description: "Specifies the name of the model to evaluate against."
    name: "publishedName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 0MB."
    name: "imageData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "detectImageWithNoStoreOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageWithNoStoreOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.DetectImageWithNoStoreOptionalParameter&text=DetectImageWithNoStoreOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ImagePrediction> detectImageWithNoStoreAsync(UUID projectId, String publishedName, byte[] imageData, DetectImageWithNoStoreOptionalParameter detectImageWithNoStoreOptionalParameter)"
  desc: "Detect objects in an image without saving the result."
  returns:
    description: "the observable to the ImagePrediction object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction?alt=com.microsoft.azure.cognitiveservices.vision.customvision.prediction.models.ImagePrediction&text=ImagePrediction\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in Predictions."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.customvision.prediction"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-customvision-prediction:1.0.3-beta
