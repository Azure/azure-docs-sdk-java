### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  id: ServiceBusReceivedMessage
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus
  children:
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getBody()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getContentType()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getCorrelationId()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterErrorDescription()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterReason()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterSource()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeliveryCount()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedSequenceNumber()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedTime()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getExpiresAt()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLabel()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockToken()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockedUntil()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getMessageId()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getPartitionKey()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getProperties()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyTo()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyToSessionId()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getScheduledEnqueueTime()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSequenceNumber()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSessionId()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTimeToLive()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTo()
  - com.azure.messaging.servicebus.ServiceBusReceivedMessage.getViaPartitionKey()
  langs:
  - java
  name: ServiceBusReceivedMessage
  nameWithType: ServiceBusReceivedMessage
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  type: Class
  package: com.azure.messaging.servicebus
  summary: This class represents a received message from Service Bus.
  syntax:
    content: public final class ServiceBusReceivedMessage
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.ServiceBusReceivedMessage(byte[])
  id: ServiceBusReceivedMessage(byte[])
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: ServiceBusReceivedMessage(byte[] body)
  nameWithType: ServiceBusReceivedMessage.ServiceBusReceivedMessage(byte[] body)
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.ServiceBusReceivedMessage(byte[] body)
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.ServiceBusReceivedMessage*
  type: Constructor
  package: com.azure.messaging.servicebus
  syntax:
    content: " ServiceBusReceivedMessage(byte[] body)"
    parameters:
    - id: body
      type: byte[]
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getBody()
  id: getBody()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getBody()
  nameWithType: ServiceBusReceivedMessage.getBody()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getBody()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getBody*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the actual payload/data wrapped by the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref>.


    If the means for deserializing the raw data is not apparent to consumers, a common technique is to make use of <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage.getProperties()" data-throw-if-not-resolved="false">#getProperties()</xref> when creating the event, to associate serialization hints as an aid to consumers who wish to deserialize the binary data.
  syntax:
    content: public byte[] getBody()
    return:
      type: byte[]
      description: A byte array representing the data.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getContentType()
  id: getContentType()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getContentType()
  nameWithType: ServiceBusReceivedMessage.getContentType()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getContentType()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getContentType*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets the content type of the message.
  syntax:
    content: public String getContentType()
    return:
      type: java.lang.String
      description: the contentType of the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref>.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getCorrelationId()
  id: getCorrelationId()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getCorrelationId()
  nameWithType: ServiceBusReceivedMessage.getCorrelationId()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getCorrelationId()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getCorrelationId*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets a correlation identifier.


    Allows an application to specify a context for the message for the purposes of correlation, for example reflecting the MessageId of a message that is being replied to.
  syntax:
    content: public String getCorrelationId()
    return:
      type: java.lang.String
      description: correlation id of this message
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterErrorDescription()
  id: getDeadLetterErrorDescription()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getDeadLetterErrorDescription()
  nameWithType: ServiceBusReceivedMessage.getDeadLetterErrorDescription()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterErrorDescription()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterErrorDescription*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets the description for a message that has been dead-lettered.
  syntax:
    content: public String getDeadLetterErrorDescription()
    return:
      type: java.lang.String
      description: The description for a message that has been dead-lettered.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterReason()
  id: getDeadLetterReason()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getDeadLetterReason()
  nameWithType: ServiceBusReceivedMessage.getDeadLetterReason()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterReason()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterReason*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets the reason for a message that has been dead-lettered.
  syntax:
    content: public String getDeadLetterReason()
    return:
      type: java.lang.String
      description: The reason for a message that has been dead-lettered.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterSource()
  id: getDeadLetterSource()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getDeadLetterSource()
  nameWithType: ServiceBusReceivedMessage.getDeadLetterSource()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterSource()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterSource*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the name of the queue or subscription that this message was enqueued on, before it was deadlettered.


    This value is only set in messages that have been dead-lettered and subsequently auto-forwarded from the dead-letter queue to another entity. Indicates the entity in which the message was dead-lettered. This property is read-only.
  syntax:
    content: public String getDeadLetterSource()
    return:
      type: java.lang.String
      description: dead letter source of this message
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeliveryCount()
  id: getDeliveryCount()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getDeliveryCount()
  nameWithType: ServiceBusReceivedMessage.getDeliveryCount()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeliveryCount()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeliveryCount*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the number of the times this message was delivered to clients.


    The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver. This property is read-only.
  syntax:
    content: public long getDeliveryCount()
    return:
      type: long
      description: delivery count of this message.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedSequenceNumber()
  id: getEnqueuedSequenceNumber()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getEnqueuedSequenceNumber()
  nameWithType: ServiceBusReceivedMessage.getEnqueuedSequenceNumber()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedSequenceNumber()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedSequenceNumber*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the enqueued sequence number assigned to a message by Service Bus.


    The sequence number is a unique 64-bit integer first assigned to a message as it is accepted at its original point of submission.
  syntax:
    content: public long getEnqueuedSequenceNumber()
    return:
      type: long
      description: enqueued sequence number of this message
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedTime()
  id: getEnqueuedTime()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getEnqueuedTime()
  nameWithType: ServiceBusReceivedMessage.getEnqueuedTime()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedTime()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedTime*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the instant at which this message was enqueued in Azure Service Bus.


    The UTC instant at which the message has been accepted and stored in the entity. For scheduled messages, this reflects the time when the message was activated. This value can be used as an authoritative and neutral arrival time indicator when the receiver does not want to trust the sender's clock. This property is read-only.
  syntax:
    content: public Instant getEnqueuedTime()
    return:
      type: java.time.Instant
      description: the instant at which the message was enqueued in Azure Service Bus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getExpiresAt()
  id: getExpiresAt()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getExpiresAt()
  nameWithType: ServiceBusReceivedMessage.getExpiresAt()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getExpiresAt()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getExpiresAt*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the instant at which this message will expire.


    The value is the UTC instant for when the message is scheduled for removal and will no longer available for retrieval from the entity due to expiration. Expiry is controlled by the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTimeToLive()" data-throw-if-not-resolved="false">TimeToLive</xref> property. This property is computed from <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedTime()" data-throw-if-not-resolved="false">EnqueuedTime</xref> plus <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTimeToLive()" data-throw-if-not-resolved="false">TimeToLive</xref>.
  syntax:
    content: public Instant getExpiresAt()
    return:
      type: java.time.Instant
      description: <xref uid="java.time.Instant" data-throw-if-not-resolved="false">Instant</xref> at which this message expires
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLabel()
  id: getLabel()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getLabel()
  nameWithType: ServiceBusReceivedMessage.getLabel()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLabel()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLabel*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets the label for the message.
  syntax:
    content: public String getLabel()
    return:
      type: java.lang.String
      description: The label for the message.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockToken()
  id: getLockToken()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getLockToken()
  nameWithType: ServiceBusReceivedMessage.getLockToken()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockToken()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockToken*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the lock token for the current message.


    The lock token is a reference to the lock that is being held by the broker in <xref uid="com.azure.messaging.servicebus.models.ReceiveMode.PEEK_LOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEK_LOCK</xref> mode. Locks are used to explicitly settle messages as explained in the [product documentation in more detail][]. The token can also be used to pin the lock permanently through the [Deferral API][] and, with that, take the message out of the regular delivery state flow. This property is read-only.



    [product documentation in more detail]: https://docs.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement

    [Deferral API]: https://docs.microsoft.com/azure/service-bus-messaging/message-deferral
  syntax:
    content: public String getLockToken()
    return:
      type: java.lang.String
      description: Lock-token for this message. Could return <code>null</code> for <xref uid="com.azure.messaging.servicebus.models.ReceiveMode.RECEIVE_AND_DELETE" data-throw-if-not-resolved="false">ReceiveMode#RECEIVE_AND_DELETE</xref> mode.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockedUntil()
  id: getLockedUntil()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getLockedUntil()
  nameWithType: ServiceBusReceivedMessage.getLockedUntil()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockedUntil()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockedUntil*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the instant at which the lock of this message expires.


    For messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC instant until which the message is held locked in the queue/subscription. When the lock expires, the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeliveryCount()" data-throw-if-not-resolved="false">DeliveryCount</xref> is incremented and the message is again available for retrieval. This property is read-only.
  syntax:
    content: public Instant getLockedUntil()
    return:
      type: java.time.Instant
      description: the instant at which the lock of this message expires if the message is received using <xref uid="com.azure.messaging.servicebus.models.ReceiveMode.PEEK_LOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEK_LOCK</xref> mode. Otherwise it returns null.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getMessageId()
  id: getMessageId()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getMessageId()
  nameWithType: ServiceBusReceivedMessage.getMessageId()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getMessageId()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getMessageId*
  type: Method
  package: com.azure.messaging.servicebus
  syntax:
    content: public String getMessageId()
    return:
      type: java.lang.String
      description: Id of the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref>.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getPartitionKey()
  id: getPartitionKey()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getPartitionKey()
  nameWithType: ServiceBusReceivedMessage.getPartitionKey()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getPartitionKey()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getPartitionKey*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the partition key for sending a message to a partitioned entity.


    For [partitioned entities][], setting this value enables assigning related messages to the same internal partition, so that submission sequence order is correctly recorded. The partition is chosen by a hash function over this value and cannot be chosen directly. For session-aware entities, the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSessionId()" data-throw-if-not-resolved="false">sessionId</xref> property overrides this value.



    [partitioned entities]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning
  syntax:
    content: public String getPartitionKey()
    return:
      type: java.lang.String
      description: The partition key of this message
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getProperties()
  id: getProperties()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getProperties()
  nameWithType: ServiceBusReceivedMessage.getProperties()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getProperties()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getProperties*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets the set of free-form <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref> properties which may be used for passing metadata associated with the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref> during Service Bus operations. A common use-case for `properties()` is to associate serialization hints for the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage.getBody()" data-throw-if-not-resolved="false">#getBody()</xref> as an aid to consumers who wish to deserialize the binary data.
  syntax:
    content: public Map<String,Object> getProperties()
    return:
      type: java.util.Map<java.lang.String,java.lang.Object>
      description: Application properties associated with this <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref>.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyTo()
  id: getReplyTo()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getReplyTo()
  nameWithType: ServiceBusReceivedMessage.getReplyTo()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyTo()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyTo*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the address of an entity to send replies to.


    This optional and application-defined value is a standard way to express a reply path to the receiver of the message. When a sender expects a reply, it sets the value to the absolute or relative path of the queue or topic it expects the reply to be sent to.
  syntax:
    content: public String getReplyTo()
    return:
      type: java.lang.String
      description: ReplyTo property value of this message
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyToSessionId()
  id: getReplyToSessionId()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getReplyToSessionId()
  nameWithType: ServiceBusReceivedMessage.getReplyToSessionId()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyToSessionId()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyToSessionId*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets or sets a session identifier augmenting the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyTo()" data-throw-if-not-resolved="false">ReplyTo</xref> address.


    This value augments the ReplyTo information and specifies which SessionId should be set for the reply when sent to the reply entity.
  syntax:
    content: public String getReplyToSessionId()
    return:
      type: java.lang.String
      description: ReplyToSessionId property value of this message
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getScheduledEnqueueTime()
  id: getScheduledEnqueueTime()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getScheduledEnqueueTime()
  nameWithType: ServiceBusReceivedMessage.getScheduledEnqueueTime()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getScheduledEnqueueTime()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getScheduledEnqueueTime*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the scheduled enqueue time of this message.


    This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state.
  syntax:
    content: public Instant getScheduledEnqueueTime()
    return:
      type: java.time.Instant
      description: the instant at which the message will be enqueued in Azure Service Bus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSequenceNumber()
  id: getSequenceNumber()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getSequenceNumber()
  nameWithType: ServiceBusReceivedMessage.getSequenceNumber()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSequenceNumber()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSequenceNumber*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the unique number assigned to a message by Service Bus.


    The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier. For partitioned entities, the topmost 16 bits reflect the partition identifier. Sequence numbers monotonically increase and are gapless. They roll over to 0 when the 48-64 bit range is exhausted. This property is read-only.
  syntax:
    content: public long getSequenceNumber()
    return:
      type: long
      description: sequence number of this message
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSessionId()
  id: getSessionId()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getSessionId()
  nameWithType: ServiceBusReceivedMessage.getSessionId()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSessionId()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSessionId*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets the session id of the message.
  syntax:
    content: public String getSessionId()
    return:
      type: java.lang.String
      description: Session Id of the <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage" data-throw-if-not-resolved="false">ServiceBusReceivedMessage</xref>.
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTimeToLive()
  id: getTimeToLive()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getTimeToLive()
  nameWithType: ServiceBusReceivedMessage.getTimeToLive()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTimeToLive()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTimeToLive*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Gets the duration before this message expires.


    This value is the relative duration after which the message expires, starting from the instant the message has been accepted and stored by the broker, as captured in <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage.getScheduledEnqueueTime()" data-throw-if-not-resolved="false">#getScheduledEnqueueTime()</xref>. When not set explicitly, the assumed value is the DefaultTimeToLive set for the respective queue or topic. A message-level TimeToLive value cannot be longer than the entity's DefaultTimeToLive setting and it is silently adjusted if it does.
  syntax:
    content: public Duration getTimeToLive()
    return:
      type: java.time.Duration
      description: Time to live duration of this message
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTo()
  id: getTo()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getTo()
  nameWithType: ServiceBusReceivedMessage.getTo()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTo()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTo*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets the "to" address.
  syntax:
    content: public String getTo()
    return:
      type: java.lang.String
      description: "\"To\" property value of this message"
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getViaPartitionKey()
  id: getViaPartitionKey()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.5
  parent: com.azure.messaging.servicebus.ServiceBusReceivedMessage
  langs:
  - java
  name: getViaPartitionKey()
  nameWithType: ServiceBusReceivedMessage.getViaPartitionKey()
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getViaPartitionKey()
  overload: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getViaPartitionKey*
  type: Method
  package: com.azure.messaging.servicebus
  summary: 'Gets the partition key for sending a message to a entity via another partitioned transfer entity. If a message is sent via a transfer queue in the scope of a transaction, this value selects the transfer queue partition: This is functionally equivalent to <xref uid="com.azure.messaging.servicebus.ServiceBusReceivedMessage.getPartitionKey()" data-throw-if-not-resolved="false">#getPartitionKey()</xref> and ensures that messages are kept together and in order as they are transferred.'
  syntax:
    content: public String getViaPartitionKey()
    return:
      type: java.lang.String
      description: partition key on the via queue.
references:
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.ServiceBusReceivedMessage*
  name: ServiceBusReceivedMessage
  nameWithType: ServiceBusReceivedMessage.ServiceBusReceivedMessage
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.ServiceBusReceivedMessage
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getBody*
  name: getBody
  nameWithType: ServiceBusReceivedMessage.getBody
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getBody
  package: com.azure.messaging.servicebus
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getContentType*
  name: getContentType
  nameWithType: ServiceBusReceivedMessage.getContentType
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getContentType
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getCorrelationId*
  name: getCorrelationId
  nameWithType: ServiceBusReceivedMessage.getCorrelationId
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getCorrelationId
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterErrorDescription*
  name: getDeadLetterErrorDescription
  nameWithType: ServiceBusReceivedMessage.getDeadLetterErrorDescription
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterErrorDescription
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterReason*
  name: getDeadLetterReason
  nameWithType: ServiceBusReceivedMessage.getDeadLetterReason
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterReason
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterSource*
  name: getDeadLetterSource
  nameWithType: ServiceBusReceivedMessage.getDeadLetterSource
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeadLetterSource
  package: com.azure.messaging.servicebus
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeliveryCount*
  name: getDeliveryCount
  nameWithType: ServiceBusReceivedMessage.getDeliveryCount
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getDeliveryCount
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedSequenceNumber*
  name: getEnqueuedSequenceNumber
  nameWithType: ServiceBusReceivedMessage.getEnqueuedSequenceNumber
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedSequenceNumber
  package: com.azure.messaging.servicebus
- uid: java.time.Instant
  spec.java:
  - uid: java.time.Instant
    name: Instant
    fullName: java.time.Instant
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedTime*
  name: getEnqueuedTime
  nameWithType: ServiceBusReceivedMessage.getEnqueuedTime
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getEnqueuedTime
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getExpiresAt*
  name: getExpiresAt
  nameWithType: ServiceBusReceivedMessage.getExpiresAt
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getExpiresAt
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLabel*
  name: getLabel
  nameWithType: ServiceBusReceivedMessage.getLabel
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLabel
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockToken*
  name: getLockToken
  nameWithType: ServiceBusReceivedMessage.getLockToken
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockToken
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockedUntil*
  name: getLockedUntil
  nameWithType: ServiceBusReceivedMessage.getLockedUntil
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getLockedUntil
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getMessageId*
  name: getMessageId
  nameWithType: ServiceBusReceivedMessage.getMessageId
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getMessageId
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getPartitionKey*
  name: getPartitionKey
  nameWithType: ServiceBusReceivedMessage.getPartitionKey
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getPartitionKey
  package: com.azure.messaging.servicebus
- uid: java.util.Map<java.lang.String,java.lang.Object>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getProperties*
  name: getProperties
  nameWithType: ServiceBusReceivedMessage.getProperties
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getProperties
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyTo*
  name: getReplyTo
  nameWithType: ServiceBusReceivedMessage.getReplyTo
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyTo
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyToSessionId*
  name: getReplyToSessionId
  nameWithType: ServiceBusReceivedMessage.getReplyToSessionId
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getReplyToSessionId
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getScheduledEnqueueTime*
  name: getScheduledEnqueueTime
  nameWithType: ServiceBusReceivedMessage.getScheduledEnqueueTime
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getScheduledEnqueueTime
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSequenceNumber*
  name: getSequenceNumber
  nameWithType: ServiceBusReceivedMessage.getSequenceNumber
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSequenceNumber
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSessionId*
  name: getSessionId
  nameWithType: ServiceBusReceivedMessage.getSessionId
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getSessionId
  package: com.azure.messaging.servicebus
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTimeToLive*
  name: getTimeToLive
  nameWithType: ServiceBusReceivedMessage.getTimeToLive
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTimeToLive
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTo*
  name: getTo
  nameWithType: ServiceBusReceivedMessage.getTo
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getTo
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getViaPartitionKey*
  name: getViaPartitionKey
  nameWithType: ServiceBusReceivedMessage.getViaPartitionKey
  fullName: com.azure.messaging.servicebus.ServiceBusReceivedMessage.getViaPartitionKey
  package: com.azure.messaging.servicebus
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.String,java.lang.Object
  name: String,Object
  nameWithType: String,Object
  fullName: java.lang.String,java.lang.Object
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
