### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resourcehealth.models.EmergingIssueImpact.withRegions*"
fullName: "com.azure.resourcemanager.resourcehealth.models.EmergingIssueImpact.withRegions"
name: "withRegions"
nameWithType: "EmergingIssueImpact.withRegions"
members:
- uid: "com.azure.resourcemanager.resourcehealth.models.EmergingIssueImpact.withRegions(java.util.List<com.azure.resourcemanager.resourcehealth.models.ImpactedRegion>)"
  fullName: "com.azure.resourcemanager.resourcehealth.models.EmergingIssueImpact.withRegions(List<ImpactedRegion> regions)"
  name: "withRegions(List<ImpactedRegion> regions)"
  nameWithType: "EmergingIssueImpact.withRegions(List<ImpactedRegion> regions)"
  summary: "Set the regions property: The list of impacted regions for corresponding emerging issues."
  parameters:
  - description: "the regions value to set."
    name: "regions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resourcehealth.models.ImpactedRegion?alt=com.azure.resourcemanager.resourcehealth.models.ImpactedRegion&text=ImpactedRegion\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EmergingIssueImpact withRegions(List<ImpactedRegion> regions)"
  returns:
    description: "the EmergingIssueImpact object itself."
    type: "<xref href=\"com.azure.resourcemanager.resourcehealth.models.EmergingIssueImpact?alt=com.azure.resourcemanager.resourcehealth.models.EmergingIssueImpact&text=EmergingIssueImpact\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resourcehealth.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-resourcehealth:1.0.0-beta.1
