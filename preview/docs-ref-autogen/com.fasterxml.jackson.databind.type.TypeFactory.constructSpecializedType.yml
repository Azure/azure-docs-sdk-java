### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType*"
fullName: "com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType"
name: "constructSpecializedType"
nameWithType: "TypeFactory.constructSpecializedType"
members:
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(JavaType baseType, Class<?> subclass)"
  name: "constructSpecializedType(JavaType baseType, Class<?> subclass)"
  nameWithType: "TypeFactory.constructSpecializedType(JavaType baseType, Class<?> subclass)"
  summary: "Factory method for creating a subtype of given base type, as defined by specified subclass; but retaining generic type information if any. Can be used, for example, to get equivalent of \"HashMap<String,Integer>\" from \"Map<String,Integer>\" by giving `HashMap.class` as subclass. Short-cut for:\n\n```java\nconstructSpecializedType(baseType, subclass, class);\n```\n\nthat is, will use \"strict\" compatibility checking, usually used for deserialization purposes (but often not for serialization)."
  parameters:
  - name: "baseType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "subclass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)"
  exceptions:
  - type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>,boolean)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(JavaType baseType, Class<?> subclass, boolean relaxedCompatibilityCheck)"
  name: "constructSpecializedType(JavaType baseType, Class<?> subclass, boolean relaxedCompatibilityCheck)"
  nameWithType: "TypeFactory.constructSpecializedType(JavaType baseType, Class<?> subclass, boolean relaxedCompatibilityCheck)"
  summary: "Factory method for creating a subtype of given base type, as defined by specified subclass; but retaining generic type information if any. Can be used, for example, to get equivalent of \"HashMap<String,Integer>\" from \"Map<String,Integer>\" by giving `HashMap.class` as subclass."
  parameters:
  - description: "Declared base type with resolved type parameters"
    name: "baseType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Runtime subtype to use for resolving"
    name: "subclass"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - description: "Whether checking for type-assignment compatibility\n    should be \"relaxed\" (<code>true</code>) or \"strict\" (<code>false</code>): typically\n    serialization uses relaxed, deserialization strict checking."
    name: "relaxedCompatibilityCheck"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass, boolean relaxedCompatibilityCheck)"
  exceptions:
  - type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Resolved sub-type"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
