### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ObjectWriter
  id: ObjectWriter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.ObjectWriter.GeneratorSettings
  - com.fasterxml.jackson.databind.ObjectWriter.NULL_PRETTY_PRINTER
  - com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig)
  - com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)
  - com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.core.JsonFactory)
  - com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig)
  - com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ObjectWriter.GeneratorSettings,com.fasterxml.jackson.databind.ObjectWriter.Prefetch)
  - com.fasterxml.jackson.databind.ObjectWriter.Prefetch
  - com.fasterxml.jackson.databind.ObjectWriter._assertNotNull(java.lang.String,java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectWriter._config
  - com.fasterxml.jackson.databind.ObjectWriter._configureGenerator(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.ObjectWriter._generatorFactory
  - com.fasterxml.jackson.databind.ObjectWriter._generatorSettings
  - com.fasterxml.jackson.databind.ObjectWriter._new(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.core.JsonFactory)
  - com.fasterxml.jackson.databind.ObjectWriter._new(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig)
  - com.fasterxml.jackson.databind.ObjectWriter._new(com.fasterxml.jackson.databind.ObjectWriter.GeneratorSettings,com.fasterxml.jackson.databind.ObjectWriter.Prefetch)
  - com.fasterxml.jackson.databind.ObjectWriter._newSequenceWriter(boolean,com.fasterxml.jackson.core.JsonGenerator,boolean)
  - com.fasterxml.jackson.databind.ObjectWriter._prefetch
  - com.fasterxml.jackson.databind.ObjectWriter._serializerFactory
  - com.fasterxml.jackson.databind.ObjectWriter._serializerProvider
  - com.fasterxml.jackson.databind.ObjectWriter._serializerProvider()
  - com.fasterxml.jackson.databind.ObjectWriter._verifySchemaType(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.databind.ObjectWriter._writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectWriter.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)
  - com.fasterxml.jackson.databind.ObjectWriter.acceptJsonFormatVisitor(java.lang.Class<?>,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)
  - com.fasterxml.jackson.databind.ObjectWriter.canSerialize(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ObjectWriter.canSerialize(java.lang.Class<?>,java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>)
  - com.fasterxml.jackson.databind.ObjectWriter.createGenerator(java.io.DataOutput)
  - com.fasterxml.jackson.databind.ObjectWriter.createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)
  - com.fasterxml.jackson.databind.ObjectWriter.createGenerator(java.io.OutputStream)
  - com.fasterxml.jackson.databind.ObjectWriter.createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)
  - com.fasterxml.jackson.databind.ObjectWriter.createGenerator(java.io.Writer)
  - com.fasterxml.jackson.databind.ObjectWriter.forType(com.fasterxml.jackson.core.type.TypeReference<?>)
  - com.fasterxml.jackson.databind.ObjectWriter.forType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ObjectWriter.forType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ObjectWriter.getAttributes()
  - com.fasterxml.jackson.databind.ObjectWriter.getConfig()
  - com.fasterxml.jackson.databind.ObjectWriter.getFactory()
  - com.fasterxml.jackson.databind.ObjectWriter.getTypeFactory()
  - com.fasterxml.jackson.databind.ObjectWriter.hasPrefetchedSerializer()
  - com.fasterxml.jackson.databind.ObjectWriter.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.databind.ObjectWriter.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  - com.fasterxml.jackson.databind.ObjectWriter.isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)
  - com.fasterxml.jackson.databind.ObjectWriter.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  - com.fasterxml.jackson.databind.ObjectWriter.isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
  - com.fasterxml.jackson.databind.ObjectWriter.version()
  - com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.Base64Variant)
  - com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.FormatFeature)
  - com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.JsonFactory)
  - com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.PrettyPrinter)
  - com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.StreamWriteFeature)
  - com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.io.CharacterEscapes)
  - com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.databind.SerializationFeature)
  - com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature...)
  - com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.databind.cfg.ContextAttributes)
  - com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.databind.ser.FilterProvider)
  - com.fasterxml.jackson.databind.ObjectWriter.with(java.text.DateFormat)
  - com.fasterxml.jackson.databind.ObjectWriter.with(java.util.Locale)
  - com.fasterxml.jackson.databind.ObjectWriter.with(java.util.TimeZone)
  - com.fasterxml.jackson.databind.ObjectWriter.withAttribute(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectWriter.withAttributes(java.util.Map<?,?>)
  - com.fasterxml.jackson.databind.ObjectWriter.withDefaultPrettyPrinter()
  - com.fasterxml.jackson.databind.ObjectWriter.withFeatures(com.fasterxml.jackson.core.FormatFeature...)
  - com.fasterxml.jackson.databind.ObjectWriter.withFeatures(com.fasterxml.jackson.core.JsonGenerator.Feature...)
  - com.fasterxml.jackson.databind.ObjectWriter.withFeatures(com.fasterxml.jackson.databind.SerializationFeature...)
  - com.fasterxml.jackson.databind.ObjectWriter.withRootName(com.fasterxml.jackson.databind.PropertyName)
  - com.fasterxml.jackson.databind.ObjectWriter.withRootName(java.lang.String)
  - com.fasterxml.jackson.databind.ObjectWriter.withRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
  - com.fasterxml.jackson.databind.ObjectWriter.withRootValueSeparator(java.lang.String)
  - com.fasterxml.jackson.databind.ObjectWriter.withSchema(com.fasterxml.jackson.core.FormatSchema)
  - com.fasterxml.jackson.databind.ObjectWriter.withType(com.fasterxml.jackson.core.type.TypeReference<?>)
  - com.fasterxml.jackson.databind.ObjectWriter.withType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ObjectWriter.withType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ObjectWriter.withView(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.ObjectWriter.without(com.fasterxml.jackson.core.FormatFeature)
  - com.fasterxml.jackson.databind.ObjectWriter.without(com.fasterxml.jackson.core.JsonGenerator.Feature)
  - com.fasterxml.jackson.databind.ObjectWriter.without(com.fasterxml.jackson.core.StreamWriteFeature)
  - com.fasterxml.jackson.databind.ObjectWriter.without(com.fasterxml.jackson.databind.SerializationFeature)
  - com.fasterxml.jackson.databind.ObjectWriter.without(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature...)
  - com.fasterxml.jackson.databind.ObjectWriter.withoutAttribute(java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures(com.fasterxml.jackson.core.FormatFeature...)
  - com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures(com.fasterxml.jackson.core.JsonGenerator.Feature...)
  - com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures(com.fasterxml.jackson.databind.SerializationFeature...)
  - com.fasterxml.jackson.databind.ObjectWriter.withoutRootName()
  - com.fasterxml.jackson.databind.ObjectWriter.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValue(java.io.DataOutput,java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValue(java.io.File,java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValue(java.io.OutputStream,java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValue(java.io.Writer,java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValueAsBytes(java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString(java.lang.Object)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValues(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.DataOutput)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.File)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.OutputStream)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.Writer)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(com.fasterxml.jackson.core.JsonGenerator)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(java.io.DataOutput)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(java.io.File)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(java.io.OutputStream)
  - com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(java.io.Writer)
  langs:
  - java
  name: ObjectWriter
  nameWithType: ObjectWriter
  fullName: com.fasterxml.jackson.databind.ObjectWriter
  type: Class
  package: com.fasterxml.jackson.databind
  summary: Builder object that can be used for per-serialization configuration of serialization parameters, such as JSON View and root type to use. (and thus fully thread-safe with no external synchronization); new instances are constructed for different configurations. Instances are initially constructed by <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref> and can be reused in completely thread-safe manner with no explicit synchronization
  syntax:
    content: public class ObjectWriter implements Versioned, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - com.fasterxml.jackson.core.Versioned
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ObjectWriter.NULL_PRETTY_PRINTER
  id: NULL_PRETTY_PRINTER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: NULL_PRETTY_PRINTER
  nameWithType: ObjectWriter.NULL_PRETTY_PRINTER
  fullName: com.fasterxml.jackson.databind.ObjectWriter.NULL_PRETTY_PRINTER
  type: Field
  package: com.fasterxml.jackson.databind
  summary: We need to keep track of explicit disabling of pretty printing; easiest to do by a token value.
  syntax:
    content: protected static final PrettyPrinter NULL_PRETTY_PRINTER
    return:
      type: com.fasterxml.jackson.core.PrettyPrinter
- uid: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig)
  id: ObjectWriter(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: ObjectWriter(ObjectMapper mapper, SerializationConfig config)
  nameWithType: ObjectWriter.ObjectWriter(ObjectMapper mapper, SerializationConfig config)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(ObjectMapper mapper, SerializationConfig config)
  overload: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind
  summary: Alternative constructor for initial instantiation by <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref>
  syntax:
    content: protected ObjectWriter(ObjectMapper mapper, SerializationConfig config)
    parameters:
    - id: mapper
      type: com.fasterxml.jackson.databind.ObjectMapper
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.FormatSchema)
  id: ObjectWriter(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.FormatSchema)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: ObjectWriter(ObjectMapper mapper, SerializationConfig config, FormatSchema s)
  nameWithType: ObjectWriter.ObjectWriter(ObjectMapper mapper, SerializationConfig config, FormatSchema s)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(ObjectMapper mapper, SerializationConfig config, FormatSchema s)
  overload: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind
  summary: Alternative constructor for initial instantiation by <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref>
  syntax:
    content: protected ObjectWriter(ObjectMapper mapper, SerializationConfig config, FormatSchema s)
    parameters:
    - id: mapper
      type: com.fasterxml.jackson.databind.ObjectMapper
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: s
      type: com.fasterxml.jackson.core.FormatSchema
- uid: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)
  id: ObjectWriter(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: ObjectWriter(ObjectMapper mapper, SerializationConfig config, JavaType rootType, PrettyPrinter pp)
  nameWithType: ObjectWriter.ObjectWriter(ObjectMapper mapper, SerializationConfig config, JavaType rootType, PrettyPrinter pp)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(ObjectMapper mapper, SerializationConfig config, JavaType rootType, PrettyPrinter pp)
  overload: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind
  summary: Constructor used by <xref uid="com.fasterxml.jackson.databind.ObjectMapper" data-throw-if-not-resolved="false">ObjectMapper</xref> for initial instantiation
  syntax:
    content: protected ObjectWriter(ObjectMapper mapper, SerializationConfig config, JavaType rootType, PrettyPrinter pp)
    parameters:
    - id: mapper
      type: com.fasterxml.jackson.databind.ObjectMapper
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: rootType
      type: com.fasterxml.jackson.databind.JavaType
    - id: pp
      type: com.fasterxml.jackson.core.PrettyPrinter
- uid: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.core.JsonFactory)
  id: ObjectWriter(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.core.JsonFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: ObjectWriter(ObjectWriter base, JsonFactory f)
  nameWithType: ObjectWriter.ObjectWriter(ObjectWriter base, JsonFactory f)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(ObjectWriter base, JsonFactory f)
  overload: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected ObjectWriter(ObjectWriter base, JsonFactory f)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ObjectWriter
    - id: f
      type: com.fasterxml.jackson.core.JsonFactory
- uid: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig)
  id: ObjectWriter(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: ObjectWriter(ObjectWriter base, SerializationConfig config)
  nameWithType: ObjectWriter.ObjectWriter(ObjectWriter base, SerializationConfig config)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(ObjectWriter base, SerializationConfig config)
  overload: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind
  summary: Copy constructor used for building variations.
  syntax:
    content: protected ObjectWriter(ObjectWriter base, SerializationConfig config)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ObjectWriter
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ObjectWriter.GeneratorSettings,com.fasterxml.jackson.databind.ObjectWriter.Prefetch)
  id: ObjectWriter(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ObjectWriter.GeneratorSettings,com.fasterxml.jackson.databind.ObjectWriter.Prefetch)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: ObjectWriter(ObjectWriter base, SerializationConfig config, ObjectWriter.GeneratorSettings genSettings, ObjectWriter.Prefetch prefetch)
  nameWithType: ObjectWriter.ObjectWriter(ObjectWriter base, SerializationConfig config, ObjectWriter.GeneratorSettings genSettings, ObjectWriter.Prefetch prefetch)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter(ObjectWriter base, SerializationConfig config, ObjectWriter.GeneratorSettings genSettings, ObjectWriter.Prefetch prefetch)
  overload: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind
  summary: Copy constructor used for building variations.
  syntax:
    content: protected ObjectWriter(ObjectWriter base, SerializationConfig config, ObjectWriter.GeneratorSettings genSettings, ObjectWriter.Prefetch prefetch)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ObjectWriter
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    - id: genSettings
      type: com.fasterxml.jackson.databind.ObjectWriter.GeneratorSettings
    - id: prefetch
      type: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
- uid: com.fasterxml.jackson.databind.ObjectWriter._assertNotNull(java.lang.String,java.lang.Object)
  id: _assertNotNull(java.lang.String,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _assertNotNull(String paramName, Object src)
  nameWithType: ObjectWriter._assertNotNull(String paramName, Object src)
  fullName: com.fasterxml.jackson.databind.ObjectWriter._assertNotNull(String paramName, Object src)
  overload: com.fasterxml.jackson.databind.ObjectWriter._assertNotNull*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final void _assertNotNull(String paramName, Object src)
    parameters:
    - id: paramName
      type: java.lang.String
    - id: src
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ObjectWriter._config
  id: _config
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _config
  nameWithType: ObjectWriter._config
  fullName: com.fasterxml.jackson.databind.ObjectWriter._config
  type: Field
  package: com.fasterxml.jackson.databind
  summary: General serialization configuration settings
  syntax:
    content: protected final SerializationConfig _config
    return:
      type: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.ObjectWriter._configureGenerator(com.fasterxml.jackson.core.JsonGenerator)
  id: _configureGenerator(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _configureGenerator(JsonGenerator gen)
  nameWithType: ObjectWriter._configureGenerator(JsonGenerator gen)
  fullName: com.fasterxml.jackson.databind.ObjectWriter._configureGenerator(JsonGenerator gen)
  overload: com.fasterxml.jackson.databind.ObjectWriter._configureGenerator*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Helper method called to set or override settings of passed-in <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref>
  syntax:
    content: protected final JsonGenerator _configureGenerator(JsonGenerator gen)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.ObjectWriter._generatorFactory
  id: _generatorFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _generatorFactory
  nameWithType: ObjectWriter._generatorFactory
  fullName: com.fasterxml.jackson.databind.ObjectWriter._generatorFactory
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Factory used for constructing <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref>s
  syntax:
    content: protected final JsonFactory _generatorFactory
    return:
      type: com.fasterxml.jackson.core.JsonFactory
- uid: com.fasterxml.jackson.databind.ObjectWriter._generatorSettings
  id: _generatorSettings
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _generatorSettings
  nameWithType: ObjectWriter._generatorSettings
  fullName: com.fasterxml.jackson.databind.ObjectWriter._generatorSettings
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Container for settings that need to be passed to <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> constructed for serializing values.
  syntax:
    content: protected final ObjectWriter.GeneratorSettings _generatorSettings
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter.GeneratorSettings
- uid: com.fasterxml.jackson.databind.ObjectWriter._new(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.core.JsonFactory)
  id: _new(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.core.JsonFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _new(ObjectWriter base, JsonFactory f)
  nameWithType: ObjectWriter._new(ObjectWriter base, JsonFactory f)
  fullName: com.fasterxml.jackson.databind.ObjectWriter._new(ObjectWriter base, JsonFactory f)
  overload: com.fasterxml.jackson.databind.ObjectWriter._new*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overridable factory method called by various "withXxx()" methods
  syntax:
    content: protected ObjectWriter _new(ObjectWriter base, JsonFactory f)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ObjectWriter
    - id: f
      type: com.fasterxml.jackson.core.JsonFactory
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter._new(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig)
  id: _new(com.fasterxml.jackson.databind.ObjectWriter,com.fasterxml.jackson.databind.SerializationConfig)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _new(ObjectWriter base, SerializationConfig config)
  nameWithType: ObjectWriter._new(ObjectWriter base, SerializationConfig config)
  fullName: com.fasterxml.jackson.databind.ObjectWriter._new(ObjectWriter base, SerializationConfig config)
  overload: com.fasterxml.jackson.databind.ObjectWriter._new*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overridable factory method called by various "withXxx()" methods
  syntax:
    content: protected ObjectWriter _new(ObjectWriter base, SerializationConfig config)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ObjectWriter
    - id: config
      type: com.fasterxml.jackson.databind.SerializationConfig
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter._new(com.fasterxml.jackson.databind.ObjectWriter.GeneratorSettings,com.fasterxml.jackson.databind.ObjectWriter.Prefetch)
  id: _new(com.fasterxml.jackson.databind.ObjectWriter.GeneratorSettings,com.fasterxml.jackson.databind.ObjectWriter.Prefetch)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _new(ObjectWriter.GeneratorSettings genSettings, ObjectWriter.Prefetch prefetch)
  nameWithType: ObjectWriter._new(ObjectWriter.GeneratorSettings genSettings, ObjectWriter.Prefetch prefetch)
  fullName: com.fasterxml.jackson.databind.ObjectWriter._new(ObjectWriter.GeneratorSettings genSettings, ObjectWriter.Prefetch prefetch)
  overload: com.fasterxml.jackson.databind.ObjectWriter._new*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overridable factory method called by various "withXxx()" methods. It assumes \`this\` as base for settings other than those directly passed in.
  syntax:
    content: protected ObjectWriter _new(ObjectWriter.GeneratorSettings genSettings, ObjectWriter.Prefetch prefetch)
    parameters:
    - id: genSettings
      type: com.fasterxml.jackson.databind.ObjectWriter.GeneratorSettings
    - id: prefetch
      type: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter._newSequenceWriter(boolean,com.fasterxml.jackson.core.JsonGenerator,boolean)
  id: _newSequenceWriter(boolean,com.fasterxml.jackson.core.JsonGenerator,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _newSequenceWriter(boolean wrapInArray, JsonGenerator gen, boolean managedInput)
  nameWithType: ObjectWriter._newSequenceWriter(boolean wrapInArray, JsonGenerator gen, boolean managedInput)
  fullName: com.fasterxml.jackson.databind.ObjectWriter._newSequenceWriter(boolean wrapInArray, JsonGenerator gen, boolean managedInput)
  overload: com.fasterxml.jackson.databind.ObjectWriter._newSequenceWriter*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overridable factory method called by <xref uid="com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.OutputStream)" data-throw-if-not-resolved="false">#writeValues(OutputStream)</xref> method (and its various overrides), and initializes it as necessary.
  syntax:
    content: protected SequenceWriter _newSequenceWriter(boolean wrapInArray, JsonGenerator gen, boolean managedInput)
    parameters:
    - id: wrapInArray
      type: boolean
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: managedInput
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter._prefetch
  id: _prefetch
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _prefetch
  nameWithType: ObjectWriter._prefetch
  fullName: com.fasterxml.jackson.databind.ObjectWriter._prefetch
  type: Field
  package: com.fasterxml.jackson.databind
  summary: We may pre-fetch serializer if root type is known (has been explicitly declared), and if so, reuse it afterwards. This allows avoiding further serializer lookups and increases performance a bit on cases where readers are reused.
  syntax:
    content: protected final ObjectWriter.Prefetch _prefetch
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
- uid: com.fasterxml.jackson.databind.ObjectWriter._serializerFactory
  id: _serializerFactory
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _serializerFactory
  nameWithType: ObjectWriter._serializerFactory
  fullName: com.fasterxml.jackson.databind.ObjectWriter._serializerFactory
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final SerializerFactory _serializerFactory
    return:
      type: com.fasterxml.jackson.databind.ser.SerializerFactory
- uid: com.fasterxml.jackson.databind.ObjectWriter._serializerProvider
  id: _serializerProvider
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _serializerProvider
  nameWithType: ObjectWriter._serializerProvider
  fullName: com.fasterxml.jackson.databind.ObjectWriter._serializerProvider
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected final DefaultSerializerProvider _serializerProvider
    return:
      type: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
- uid: com.fasterxml.jackson.databind.ObjectWriter._serializerProvider()
  id: _serializerProvider()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _serializerProvider()
  nameWithType: ObjectWriter._serializerProvider()
  fullName: com.fasterxml.jackson.databind.ObjectWriter._serializerProvider()
  overload: com.fasterxml.jackson.databind.ObjectWriter._serializerProvider*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Overridable helper method used for constructing <xref uid="com.fasterxml.jackson.databind.SerializerProvider" data-throw-if-not-resolved="false">SerializerProvider</xref> to use for serialization.
  syntax:
    content: protected DefaultSerializerProvider _serializerProvider()
    return:
      type: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
- uid: com.fasterxml.jackson.databind.ObjectWriter._verifySchemaType(com.fasterxml.jackson.core.FormatSchema)
  id: _verifySchemaType(com.fasterxml.jackson.core.FormatSchema)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _verifySchemaType(FormatSchema schema)
  nameWithType: ObjectWriter._verifySchemaType(FormatSchema schema)
  fullName: com.fasterxml.jackson.databind.ObjectWriter._verifySchemaType(FormatSchema schema)
  overload: com.fasterxml.jackson.databind.ObjectWriter._verifySchemaType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: protected void _verifySchemaType(FormatSchema schema)
    parameters:
    - id: schema
      type: com.fasterxml.jackson.core.FormatSchema
- uid: com.fasterxml.jackson.databind.ObjectWriter._writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  id: _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: _writeValueAndClose(JsonGenerator gen, Object value)
  nameWithType: ObjectWriter._writeValueAndClose(JsonGenerator gen, Object value)
  fullName: com.fasterxml.jackson.databind.ObjectWriter._writeValueAndClose(JsonGenerator gen, Object value)
  overload: com.fasterxml.jackson.databind.ObjectWriter._writeValueAndClose*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method called to configure the generator as necessary and then call write functionality
  syntax:
    content: protected final void _writeValueAndClose(JsonGenerator gen, Object value)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: value
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)
  id: acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: acceptJsonFormatVisitor(JavaType type, jsonFormatVisitors.JsonFormatVisitorWrapper visitor)
  nameWithType: ObjectWriter.acceptJsonFormatVisitor(JavaType type, jsonFormatVisitors.JsonFormatVisitorWrapper visitor)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.acceptJsonFormatVisitor(JavaType type, jsonFormatVisitors.JsonFormatVisitorWrapper visitor)
  overload: com.fasterxml.jackson.databind.ObjectWriter.acceptJsonFormatVisitor*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for visiting type hierarchy for given type, using specified visitor. Visitation uses `Serializer` hierarchy and related properties


    This method can be used for things like generating [Json Schema][] instance for specified type.



    [Json Schema]: http://json-schema.org/
  syntax:
    content: public void acceptJsonFormatVisitor(JavaType type, jsonFormatVisitors.JsonFormatVisitorWrapper visitor)
    parameters:
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
      description: Type to generate schema for (possibly with generic signature)
    - id: visitor
      type: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ObjectWriter.acceptJsonFormatVisitor(java.lang.Class<?>,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)
  id: acceptJsonFormatVisitor(java.lang.Class<?>,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: acceptJsonFormatVisitor(Class<?> type, jsonFormatVisitors.JsonFormatVisitorWrapper visitor)
  nameWithType: ObjectWriter.acceptJsonFormatVisitor(Class<?> type, jsonFormatVisitors.JsonFormatVisitorWrapper visitor)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.acceptJsonFormatVisitor(Class<?> type, jsonFormatVisitors.JsonFormatVisitorWrapper visitor)
  overload: com.fasterxml.jackson.databind.ObjectWriter.acceptJsonFormatVisitor*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Since 2.6
  syntax:
    content: public void acceptJsonFormatVisitor(Class<?> type, jsonFormatVisitors.JsonFormatVisitorWrapper visitor)
    parameters:
    - id: type
      type: java.lang.Class<?>
    - id: visitor
      type: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper
  exceptions:
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ObjectWriter.canSerialize(java.lang.Class<?>)
  id: canSerialize(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: canSerialize(Class<?> type)
  nameWithType: ObjectWriter.canSerialize(Class<?> type)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.canSerialize(Class<?> type)
  overload: com.fasterxml.jackson.databind.ObjectWriter.canSerialize*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean canSerialize(Class<?> type)
    parameters:
    - id: type
      type: java.lang.Class<?>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectWriter.canSerialize(java.lang.Class<?>,java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>)
  id: canSerialize(java.lang.Class<?>,java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: canSerialize(Class<?> type, AtomicReference<Throwable> cause)
  nameWithType: ObjectWriter.canSerialize(Class<?> type, AtomicReference<Throwable> cause)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.canSerialize(Class<?> type, AtomicReference<Throwable> cause)
  overload: com.fasterxml.jackson.databind.ObjectWriter.canSerialize*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for checking whether instances of given type can be serialized, and optionally why (as per <xref uid="java.lang.Throwable" data-throw-if-not-resolved="false">Throwable</xref> returned).
  syntax:
    content: public boolean canSerialize(Class<?> type, AtomicReference<Throwable> cause)
    parameters:
    - id: type
      type: java.lang.Class<?>
    - id: cause
      type: java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectWriter.createGenerator(java.io.DataOutput)
  id: createGenerator(java.io.DataOutput)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: createGenerator(DataOutput out)
  nameWithType: ObjectWriter.createGenerator(DataOutput out)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.createGenerator(DataOutput out)
  overload: com.fasterxml.jackson.databind.ObjectWriter.createGenerator*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> to write content using specified <xref uid="java.io.DataOutput" data-throw-if-not-resolved="false">DataOutput</xref>. Generator is not managed (or "owned") by ObjectWriter: caller is responsible for properly closing it once content generation is complete.'
  syntax:
    content: public JsonGenerator createGenerator(DataOutput out)
    parameters:
    - id: out
      type: java.io.DataOutput
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)
  id: createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: createGenerator(File outputFile, JsonEncoding enc)
  nameWithType: ObjectWriter.createGenerator(File outputFile, JsonEncoding enc)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.createGenerator(File outputFile, JsonEncoding enc)
  overload: com.fasterxml.jackson.databind.ObjectWriter.createGenerator*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> to write content to specified <xref uid="java.io.File" data-throw-if-not-resolved="false">File</xref>, using specified encoding. Generator is not managed (or "owned") by ObjectWriter: caller is responsible for properly closing it once content generation is complete.'
  syntax:
    content: public JsonGenerator createGenerator(File outputFile, JsonEncoding enc)
    parameters:
    - id: outputFile
      type: java.io.File
    - id: enc
      type: com.fasterxml.jackson.core.JsonEncoding
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.createGenerator(java.io.OutputStream)
  id: createGenerator(java.io.OutputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: createGenerator(OutputStream out)
  nameWithType: ObjectWriter.createGenerator(OutputStream out)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.createGenerator(OutputStream out)
  overload: com.fasterxml.jackson.databind.ObjectWriter.createGenerator*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> to write content using specified <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref>. Generator is not managed (or "owned") by ObjectWriter: caller is responsible for properly closing it once content generation is complete.'
  syntax:
    content: public JsonGenerator createGenerator(OutputStream out)
    parameters:
    - id: out
      type: java.io.OutputStream
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)
  id: createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: createGenerator(OutputStream out, JsonEncoding enc)
  nameWithType: ObjectWriter.createGenerator(OutputStream out, JsonEncoding enc)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.createGenerator(OutputStream out, JsonEncoding enc)
  overload: com.fasterxml.jackson.databind.ObjectWriter.createGenerator*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> to write content using specified <xref uid="java.io.OutputStream" data-throw-if-not-resolved="false">OutputStream</xref> and encoding. Generator is not managed (or "owned") by ObjectWriter: caller is responsible for properly closing it once content generation is complete.'
  syntax:
    content: public JsonGenerator createGenerator(OutputStream out, JsonEncoding enc)
    parameters:
    - id: out
      type: java.io.OutputStream
    - id: enc
      type: com.fasterxml.jackson.core.JsonEncoding
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.createGenerator(java.io.Writer)
  id: createGenerator(java.io.Writer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: createGenerator(Writer w)
  nameWithType: ObjectWriter.createGenerator(Writer w)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.createGenerator(Writer w)
  overload: com.fasterxml.jackson.databind.ObjectWriter.createGenerator*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Factory method for constructing properly initialized <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> to write content using specified <xref uid="java.io.Writer" data-throw-if-not-resolved="false">Writer</xref>. Generator is not managed (or "owned") by ObjectWriter: caller is responsible for properly closing it once content generation is complete.'
  syntax:
    content: public JsonGenerator createGenerator(Writer w)
    parameters:
    - id: w
      type: java.io.Writer
    return:
      type: com.fasterxml.jackson.core.JsonGenerator
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.forType(com.fasterxml.jackson.core.type.TypeReference<?>)
  id: forType(com.fasterxml.jackson.core.type.TypeReference<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: forType(TypeReference<?> rootType)
  nameWithType: ObjectWriter.forType(TypeReference<?> rootType)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.forType(TypeReference<?> rootType)
  overload: com.fasterxml.jackson.databind.ObjectWriter.forType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that will construct a new instance that uses specific type as the root type for serialization, instead of runtime dynamic type of the root object itself.
  syntax:
    content: public ObjectWriter forType(TypeReference<?> rootType)
    parameters:
    - id: rootType
      type: com.fasterxml.jackson.core.type.TypeReference<?>
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.forType(com.fasterxml.jackson.databind.JavaType)
  id: forType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: forType(JavaType rootType)
  nameWithType: ObjectWriter.forType(JavaType rootType)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.forType(JavaType rootType)
  overload: com.fasterxml.jackson.databind.ObjectWriter.forType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that will construct a new instance that uses specific type as the root type for serialization, instead of runtime dynamic type of the root object itself.


    Note that method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectWriter forType(JavaType rootType)
    parameters:
    - id: rootType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.forType(java.lang.Class<?>)
  id: forType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: forType(Class<?> rootType)
  nameWithType: ObjectWriter.forType(Class<?> rootType)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.forType(Class<?> rootType)
  overload: com.fasterxml.jackson.databind.ObjectWriter.forType*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that will construct a new instance that uses specific type as the root type for serialization, instead of runtime dynamic type of the root object itself.
  syntax:
    content: public ObjectWriter forType(Class<?> rootType)
    parameters:
    - id: rootType
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.getAttributes()
  id: getAttributes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: getAttributes()
  nameWithType: ObjectWriter.getAttributes()
  fullName: com.fasterxml.jackson.databind.ObjectWriter.getAttributes()
  overload: com.fasterxml.jackson.databind.ObjectWriter.getAttributes*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ContextAttributes getAttributes()
    return:
      type: com.fasterxml.jackson.databind.cfg.ContextAttributes
- uid: com.fasterxml.jackson.databind.ObjectWriter.getConfig()
  id: getConfig()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: getConfig()
  nameWithType: ObjectWriter.getConfig()
  fullName: com.fasterxml.jackson.databind.ObjectWriter.getConfig()
  overload: com.fasterxml.jackson.databind.ObjectWriter.getConfig*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public SerializationConfig getConfig()
    return:
      type: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.ObjectWriter.getFactory()
  id: getFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: getFactory()
  nameWithType: ObjectWriter.getFactory()
  fullName: com.fasterxml.jackson.databind.ObjectWriter.getFactory()
  overload: com.fasterxml.jackson.databind.ObjectWriter.getFactory*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public JsonFactory getFactory()
    return:
      type: com.fasterxml.jackson.core.JsonFactory
- uid: com.fasterxml.jackson.databind.ObjectWriter.getTypeFactory()
  id: getTypeFactory()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: getTypeFactory()
  nameWithType: ObjectWriter.getTypeFactory()
  fullName: com.fasterxml.jackson.databind.ObjectWriter.getTypeFactory()
  overload: com.fasterxml.jackson.databind.ObjectWriter.getTypeFactory*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public TypeFactory getTypeFactory()
    return:
      type: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.ObjectWriter.hasPrefetchedSerializer()
  id: hasPrefetchedSerializer()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: hasPrefetchedSerializer()
  nameWithType: ObjectWriter.hasPrefetchedSerializer()
  fullName: com.fasterxml.jackson.databind.ObjectWriter.hasPrefetchedSerializer()
  overload: com.fasterxml.jackson.databind.ObjectWriter.hasPrefetchedSerializer*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Diagnostics method that can be called to check whether this writer has pre-fetched serializer to use: pre-fetching improves performance when writer instances are reused as it avoids a per-call serializer lookup.'
  syntax:
    content: public boolean hasPrefetchedSerializer()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectWriter.isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  id: isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: isEnabled(JsonGenerator.Feature f)
  nameWithType: ObjectWriter.isEnabled(JsonGenerator.Feature f)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.isEnabled(JsonGenerator.Feature f)
  overload: com.fasterxml.jackson.databind.ObjectWriter.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isEnabled(JsonGenerator.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectWriter.isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  id: isEnabled(com.fasterxml.jackson.core.JsonParser.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: isEnabled(JsonParser.Feature f)
  nameWithType: ObjectWriter.isEnabled(JsonParser.Feature f)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.isEnabled(JsonParser.Feature f)
  overload: com.fasterxml.jackson.databind.ObjectWriter.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isEnabled(JsonParser.Feature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonParser.Feature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectWriter.isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)
  id: isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: isEnabled(StreamWriteFeature f)
  nameWithType: ObjectWriter.isEnabled(StreamWriteFeature f)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.isEnabled(StreamWriteFeature f)
  overload: com.fasterxml.jackson.databind.ObjectWriter.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isEnabled(StreamWriteFeature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.StreamWriteFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectWriter.isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  id: isEnabled(com.fasterxml.jackson.databind.MapperFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: isEnabled(MapperFeature f)
  nameWithType: ObjectWriter.isEnabled(MapperFeature f)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.isEnabled(MapperFeature f)
  overload: com.fasterxml.jackson.databind.ObjectWriter.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isEnabled(MapperFeature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.MapperFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectWriter.isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
  id: isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: isEnabled(SerializationFeature f)
  nameWithType: ObjectWriter.isEnabled(SerializationFeature f)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.isEnabled(SerializationFeature f)
  overload: com.fasterxml.jackson.databind.ObjectWriter.isEnabled*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public boolean isEnabled(SerializationFeature f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.databind.SerializationFeature
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ObjectWriter.version()
  id: version()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: version()
  nameWithType: ObjectWriter.version()
  fullName: com.fasterxml.jackson.databind.ObjectWriter.version()
  overload: com.fasterxml.jackson.databind.ObjectWriter.version*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that will return version information stored in and read from jar that contains this class.
  syntax:
    content: public Version version()
    return:
      type: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.Base64Variant)
  id: with(com.fasterxml.jackson.core.Base64Variant)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(Base64Variant b64variant)
  nameWithType: ObjectWriter.with(Base64Variant b64variant)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(Base64Variant b64variant)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that will construct a new instance that uses specified default <xref uid="com.fasterxml.jackson.core.Base64Variant" data-throw-if-not-resolved="false">Base64Variant</xref> for base64 encoding
  syntax:
    content: public ObjectWriter with(Base64Variant b64variant)
    parameters:
    - id: b64variant
      type: com.fasterxml.jackson.core.Base64Variant
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.FormatFeature)
  id: with(com.fasterxml.jackson.core.FormatFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(FormatFeature feature)
  nameWithType: ObjectWriter.with(FormatFeature feature)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(FormatFeature feature)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter with(FormatFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.FormatFeature
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.FormatSchema)
  id: with(com.fasterxml.jackson.core.FormatSchema)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(FormatSchema schema)
  nameWithType: ObjectWriter.with(FormatSchema schema)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(FormatSchema schema)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that will construct a new instance that uses specific format schema for serialization.


    Note that method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectWriter with(FormatSchema schema)
    parameters:
    - id: schema
      type: com.fasterxml.jackson.core.FormatSchema
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.JsonFactory)
  id: with(com.fasterxml.jackson.core.JsonFactory)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(JsonFactory f)
  nameWithType: ObjectWriter.with(JsonFactory f)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(JsonFactory f)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter with(JsonFactory f)
    parameters:
    - id: f
      type: com.fasterxml.jackson.core.JsonFactory
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.JsonGenerator.Feature)
  id: with(com.fasterxml.jackson.core.JsonGenerator.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(JsonGenerator.Feature feature)
  nameWithType: ObjectWriter.with(JsonGenerator.Feature feature)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(JsonGenerator.Feature feature)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter with(JsonGenerator.Feature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.PrettyPrinter)
  id: with(com.fasterxml.jackson.core.PrettyPrinter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(PrettyPrinter pp)
  nameWithType: ObjectWriter.with(PrettyPrinter pp)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(PrettyPrinter pp)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that will construct a new instance that will use specified pretty printer (or, if null, will not do any pretty-printing)
  syntax:
    content: public ObjectWriter with(PrettyPrinter pp)
    parameters:
    - id: pp
      type: com.fasterxml.jackson.core.PrettyPrinter
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.StreamWriteFeature)
  id: with(com.fasterxml.jackson.core.StreamWriteFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(StreamWriteFeature feature)
  nameWithType: ObjectWriter.with(StreamWriteFeature feature)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(StreamWriteFeature feature)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter with(StreamWriteFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.StreamWriteFeature
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.core.io.CharacterEscapes)
  id: with(com.fasterxml.jackson.core.io.CharacterEscapes)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(CharacterEscapes escapes)
  nameWithType: ObjectWriter.with(CharacterEscapes escapes)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(CharacterEscapes escapes)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter with(CharacterEscapes escapes)
    parameters:
    - id: escapes
      type: com.fasterxml.jackson.core.io.CharacterEscapes
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.databind.SerializationFeature)
  id: with(com.fasterxml.jackson.databind.SerializationFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(SerializationFeature feature)
  nameWithType: ObjectWriter.with(SerializationFeature feature)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(SerializationFeature feature)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new instance that is configured with specified feature enabled.
  syntax:
    content: public ObjectWriter with(SerializationFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.databind.SerializationFeature
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature...)
  id: with(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(SerializationFeature first, SerializationFeature[] other)
  nameWithType: ObjectWriter.with(SerializationFeature first, SerializationFeature[] other)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(SerializationFeature first, SerializationFeature[] other)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new instance that is configured with specified features enabled.
  syntax:
    content: public ObjectWriter with(SerializationFeature first, SerializationFeature[] other)
    parameters:
    - id: first
      type: com.fasterxml.jackson.databind.SerializationFeature
    - id: other
      type: com.fasterxml.jackson.databind.SerializationFeature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.databind.cfg.ContextAttributes)
  id: with(com.fasterxml.jackson.databind.cfg.ContextAttributes)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(ContextAttributes attrs)
  nameWithType: ObjectWriter.with(ContextAttributes attrs)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(ContextAttributes attrs)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter with(ContextAttributes attrs)
    parameters:
    - id: attrs
      type: com.fasterxml.jackson.databind.cfg.ContextAttributes
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(com.fasterxml.jackson.databind.ser.FilterProvider)
  id: with(com.fasterxml.jackson.databind.ser.FilterProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(FilterProvider filterProvider)
  nameWithType: ObjectWriter.with(FilterProvider filterProvider)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(FilterProvider filterProvider)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that will construct a new instance that uses specified provider for resolving filter instances by id.
  syntax:
    content: public ObjectWriter with(FilterProvider filterProvider)
    parameters:
    - id: filterProvider
      type: com.fasterxml.jackson.databind.ser.FilterProvider
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(java.text.DateFormat)
  id: with(java.text.DateFormat)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(DateFormat df)
  nameWithType: ObjectWriter.with(DateFormat df)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(DateFormat df)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Fluent factory method that will construct a new writer instance that will use specified date format for serializing dates; or if null passed, one that will serialize dates as numeric timestamps.


    Note that the method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectWriter with(DateFormat df)
    parameters:
    - id: df
      type: java.text.DateFormat
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(java.util.Locale)
  id: with(java.util.Locale)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(Locale l)
  nameWithType: ObjectWriter.with(Locale l)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(Locale l)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter with(Locale l)
    parameters:
    - id: l
      type: java.util.Locale
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.with(java.util.TimeZone)
  id: with(java.util.TimeZone)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: with(TimeZone tz)
  nameWithType: ObjectWriter.with(TimeZone tz)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with(TimeZone tz)
  overload: com.fasterxml.jackson.databind.ObjectWriter.with*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter with(TimeZone tz)
    parameters:
    - id: tz
      type: java.util.TimeZone
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withAttribute(java.lang.Object,java.lang.Object)
  id: withAttribute(java.lang.Object,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withAttribute(Object key, Object value)
  nameWithType: ObjectWriter.withAttribute(Object key, Object value)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withAttribute(Object key, Object value)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withAttribute*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withAttribute(Object key, Object value)
    parameters:
    - id: key
      type: java.lang.Object
    - id: value
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withAttributes(java.util.Map<?,?>)
  id: withAttributes(java.util.Map<?,?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withAttributes(Map<?,?> attrs)
  nameWithType: ObjectWriter.withAttributes(Map<?,?> attrs)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withAttributes(Map<?,?> attrs)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withAttributes*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Mutant factory method that allows construction of a new writer instance that uses specified set of default attribute values.
  syntax:
    content: public ObjectWriter withAttributes(Map<?,?> attrs)
    parameters:
    - id: attrs
      type: java.util.Map<?,?>
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withDefaultPrettyPrinter()
  id: withDefaultPrettyPrinter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withDefaultPrettyPrinter()
  nameWithType: ObjectWriter.withDefaultPrettyPrinter()
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withDefaultPrettyPrinter()
  overload: com.fasterxml.jackson.databind.ObjectWriter.withDefaultPrettyPrinter*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that will construct a new instance that will use the default pretty printer for serialization.
  syntax:
    content: public ObjectWriter withDefaultPrettyPrinter()
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withFeatures(com.fasterxml.jackson.core.FormatFeature...)
  id: withFeatures(com.fasterxml.jackson.core.FormatFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withFeatures(FormatFeature[] features)
  nameWithType: ObjectWriter.withFeatures(FormatFeature[] features)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withFeatures(FormatFeature[] features)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withFeatures*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withFeatures(FormatFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.FormatFeature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withFeatures(com.fasterxml.jackson.core.JsonGenerator.Feature...)
  id: withFeatures(com.fasterxml.jackson.core.JsonGenerator.Feature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withFeatures(JsonGenerator.Feature[] features)
  nameWithType: ObjectWriter.withFeatures(JsonGenerator.Feature[] features)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withFeatures(JsonGenerator.Feature[] features)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withFeatures*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withFeatures(JsonGenerator.Feature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.JsonGenerator.Feature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withFeatures(com.fasterxml.jackson.databind.SerializationFeature...)
  id: withFeatures(com.fasterxml.jackson.databind.SerializationFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withFeatures(SerializationFeature[] features)
  nameWithType: ObjectWriter.withFeatures(SerializationFeature[] features)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withFeatures(SerializationFeature[] features)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withFeatures*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new instance that is configured with specified features enabled.
  syntax:
    content: public ObjectWriter withFeatures(SerializationFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.databind.SerializationFeature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withRootName(com.fasterxml.jackson.databind.PropertyName)
  id: withRootName(com.fasterxml.jackson.databind.PropertyName)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withRootName(PropertyName rootName)
  nameWithType: ObjectWriter.withRootName(PropertyName rootName)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withRootName(PropertyName rootName)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withRootName*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withRootName(PropertyName rootName)
    parameters:
    - id: rootName
      type: com.fasterxml.jackson.databind.PropertyName
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withRootName(java.lang.String)
  id: withRootName(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withRootName(String rootName)
  nameWithType: ObjectWriter.withRootName(String rootName)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withRootName(String rootName)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withRootName*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for constructing a new instance with configuration that specifies what root name to use for "root element wrapping". See <xref uid="com.fasterxml.jackson.databind.SerializationConfig.withRootName*" data-throw-if-not-resolved="false">SerializationConfig#withRootName(String)</xref> for details.


    Note that method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectWriter withRootName(String rootName)
    parameters:
    - id: rootName
      type: java.lang.String
      description: >-
        Root name to use, if non-empty; `null` for "use defaults",
            and empty String ("") for "do NOT add root wrapper"
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
  id: withRootValueSeparator(com.fasterxml.jackson.core.SerializableString)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withRootValueSeparator(SerializableString sep)
  nameWithType: ObjectWriter.withRootValueSeparator(SerializableString sep)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withRootValueSeparator(SerializableString sep)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withRootValueSeparator*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withRootValueSeparator(SerializableString sep)
    parameters:
    - id: sep
      type: com.fasterxml.jackson.core.SerializableString
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withRootValueSeparator(java.lang.String)
  id: withRootValueSeparator(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withRootValueSeparator(String sep)
  nameWithType: ObjectWriter.withRootValueSeparator(String sep)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withRootValueSeparator(String sep)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withRootValueSeparator*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withRootValueSeparator(String sep)
    parameters:
    - id: sep
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withSchema(com.fasterxml.jackson.core.FormatSchema)
  id: withSchema(com.fasterxml.jackson.core.FormatSchema)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withSchema(FormatSchema schema)
  nameWithType: ObjectWriter.withSchema(FormatSchema schema)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withSchema(FormatSchema schema)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withSchema*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withSchema(FormatSchema schema)
    parameters:
    - id: schema
      type: com.fasterxml.jackson.core.FormatSchema
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withType(com.fasterxml.jackson.core.type.TypeReference<?>)
  id: withType(com.fasterxml.jackson.core.type.TypeReference<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withType(TypeReference<?> rootType)
  nameWithType: ObjectWriter.withType(TypeReference<?> rootType)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withType(TypeReference<?> rootType)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withType(TypeReference<?> rootType)
    parameters:
    - id: rootType
      type: com.fasterxml.jackson.core.type.TypeReference<?>
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withType(com.fasterxml.jackson.databind.JavaType)
  id: withType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withType(JavaType rootType)
  nameWithType: ObjectWriter.withType(JavaType rootType)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withType(JavaType rootType)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withType(JavaType rootType)
    parameters:
    - id: rootType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withType(java.lang.Class<?>)
  id: withType(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withType(Class<?> rootType)
  nameWithType: ObjectWriter.withType(Class<?> rootType)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withType(Class<?> rootType)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withType*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withType(Class<?> rootType)
    parameters:
    - id: rootType
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withView(java.lang.Class<?>)
  id: withView(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withView(Class<?> view)
  nameWithType: ObjectWriter.withView(Class<?> view)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withView(Class<?> view)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withView*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that will construct a new instance that uses specified serialization view for serialization (with null basically disables view processing)


    Note that the method does NOT change state of this reader, but rather construct and returns a newly configured instance.
  syntax:
    content: public ObjectWriter withView(Class<?> view)
    parameters:
    - id: view
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.without(com.fasterxml.jackson.core.FormatFeature)
  id: without(com.fasterxml.jackson.core.FormatFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: without(FormatFeature feature)
  nameWithType: ObjectWriter.without(FormatFeature feature)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.without(FormatFeature feature)
  overload: com.fasterxml.jackson.databind.ObjectWriter.without*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter without(FormatFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.FormatFeature
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.without(com.fasterxml.jackson.core.JsonGenerator.Feature)
  id: without(com.fasterxml.jackson.core.JsonGenerator.Feature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: without(JsonGenerator.Feature feature)
  nameWithType: ObjectWriter.without(JsonGenerator.Feature feature)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.without(JsonGenerator.Feature feature)
  overload: com.fasterxml.jackson.databind.ObjectWriter.without*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter without(JsonGenerator.Feature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.JsonGenerator.Feature
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.without(com.fasterxml.jackson.core.StreamWriteFeature)
  id: without(com.fasterxml.jackson.core.StreamWriteFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: without(StreamWriteFeature feature)
  nameWithType: ObjectWriter.without(StreamWriteFeature feature)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.without(StreamWriteFeature feature)
  overload: com.fasterxml.jackson.databind.ObjectWriter.without*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter without(StreamWriteFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.core.StreamWriteFeature
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.without(com.fasterxml.jackson.databind.SerializationFeature)
  id: without(com.fasterxml.jackson.databind.SerializationFeature)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: without(SerializationFeature feature)
  nameWithType: ObjectWriter.without(SerializationFeature feature)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.without(SerializationFeature feature)
  overload: com.fasterxml.jackson.databind.ObjectWriter.without*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new instance that is configured with specified feature enabled.
  syntax:
    content: public ObjectWriter without(SerializationFeature feature)
    parameters:
    - id: feature
      type: com.fasterxml.jackson.databind.SerializationFeature
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.without(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature...)
  id: without(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: without(SerializationFeature first, SerializationFeature[] other)
  nameWithType: ObjectWriter.without(SerializationFeature first, SerializationFeature[] other)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.without(SerializationFeature first, SerializationFeature[] other)
  overload: com.fasterxml.jackson.databind.ObjectWriter.without*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new instance that is configured with specified features enabled.
  syntax:
    content: public ObjectWriter without(SerializationFeature first, SerializationFeature[] other)
    parameters:
    - id: first
      type: com.fasterxml.jackson.databind.SerializationFeature
    - id: other
      type: com.fasterxml.jackson.databind.SerializationFeature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withoutAttribute(java.lang.Object)
  id: withoutAttribute(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withoutAttribute(Object key)
  nameWithType: ObjectWriter.withoutAttribute(Object key)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withoutAttribute(Object key)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withoutAttribute*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withoutAttribute(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures(com.fasterxml.jackson.core.FormatFeature...)
  id: withoutFeatures(com.fasterxml.jackson.core.FormatFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withoutFeatures(FormatFeature[] features)
  nameWithType: ObjectWriter.withoutFeatures(FormatFeature[] features)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures(FormatFeature[] features)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withoutFeatures(FormatFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.FormatFeature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures(com.fasterxml.jackson.core.JsonGenerator.Feature...)
  id: withoutFeatures(com.fasterxml.jackson.core.JsonGenerator.Feature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withoutFeatures(JsonGenerator.Feature[] features)
  nameWithType: ObjectWriter.withoutFeatures(JsonGenerator.Feature[] features)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures(JsonGenerator.Feature[] features)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public ObjectWriter withoutFeatures(JsonGenerator.Feature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.core.JsonGenerator.Feature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures(com.fasterxml.jackson.databind.SerializationFeature...)
  id: withoutFeatures(com.fasterxml.jackson.databind.SerializationFeature...)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withoutFeatures(SerializationFeature[] features)
  nameWithType: ObjectWriter.withoutFeatures(SerializationFeature[] features)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures(SerializationFeature[] features)
  overload: com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for constructing a new instance that is configured with specified features enabled.
  syntax:
    content: public ObjectWriter withoutFeatures(SerializationFeature[] features)
    parameters:
    - id: features
      type: com.fasterxml.jackson.databind.SerializationFeature[]
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.withoutRootName()
  id: withoutRootName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: withoutRootName()
  nameWithType: ObjectWriter.withoutRootName()
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withoutRootName()
  overload: com.fasterxml.jackson.databind.ObjectWriter.withoutRootName*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: 'Convenience method that is same as calling: `withRootName("")` which will forcibly prevent use of root name wrapping when writing values with this <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>.'
  syntax:
    content: public ObjectWriter withoutRootName()
    return:
      type: com.fasterxml.jackson.databind.ObjectWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  id: writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValue(JsonGenerator g, Object value)
  nameWithType: ObjectWriter.writeValue(JsonGenerator g, Object value)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValue(JsonGenerator g, Object value)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that can be used to serialize any Java value as JSON output, using provided <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref>.


    Note that the given <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> is not closed; caller is expected to handle that as necessary.
  syntax:
    content: public void writeValue(JsonGenerator g, Object value)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: value
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValue(java.io.DataOutput,java.lang.Object)
  id: writeValue(java.io.DataOutput,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValue(DataOutput out, Object value)
  nameWithType: ObjectWriter.writeValue(DataOutput out, Object value)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValue(DataOutput out, Object value)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValue*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public void writeValue(DataOutput out, Object value)
    parameters:
    - id: out
      type: java.io.DataOutput
    - id: value
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValue(java.io.File,java.lang.Object)
  id: writeValue(java.io.File,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValue(File resultFile, Object value)
  nameWithType: ObjectWriter.writeValue(File resultFile, Object value)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValue(File resultFile, Object value)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method that can be used to serialize any Java value as JSON output, written to File provided.
  syntax:
    content: public void writeValue(File resultFile, Object value)
    parameters:
    - id: resultFile
      type: java.io.File
    - id: value
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
  - type: com.fasterxml.jackson.core.JsonGenerationException
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValue(java.io.OutputStream,java.lang.Object)
  id: writeValue(java.io.OutputStream,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValue(OutputStream out, Object value)
  nameWithType: ObjectWriter.writeValue(OutputStream out, Object value)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValue(OutputStream out, Object value)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that can be used to serialize any Java value as JSON output, using output stream provided (using encoding <xref uid="com.fasterxml.jackson.core.JsonEncoding.UTF8" data-throw-if-not-resolved="false">JsonEncoding#UTF8</xref>).


    Note: method does not close the underlying stream explicitly here; however, <xref uid="com.fasterxml.jackson.core.JsonFactory" data-throw-if-not-resolved="false">JsonFactory</xref> this mapper uses may choose to close the stream depending on its settings (by default, it will try to close it when <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> we construct is closed).
  syntax:
    content: public void writeValue(OutputStream out, Object value)
    parameters:
    - id: out
      type: java.io.OutputStream
    - id: value
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
  - type: com.fasterxml.jackson.core.JsonGenerationException
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValue(java.io.Writer,java.lang.Object)
  id: writeValue(java.io.Writer,java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValue(Writer w, Object value)
  nameWithType: ObjectWriter.writeValue(Writer w, Object value)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValue(Writer w, Object value)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValue*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that can be used to serialize any Java value as JSON output, using Writer provided.


    Note: method does not close the underlying stream explicitly here; however, <xref uid="com.fasterxml.jackson.core.JsonFactory" data-throw-if-not-resolved="false">JsonFactory</xref> this mapper uses may choose to close the stream depending on its settings (by default, it will try to close it when <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> we construct is closed).
  syntax:
    content: public void writeValue(Writer w, Object value)
    parameters:
    - id: w
      type: java.io.Writer
    - id: value
      type: java.lang.Object
  exceptions:
  - type: java.io.IOException
  - type: com.fasterxml.jackson.core.JsonGenerationException
  - type: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValueAsBytes(java.lang.Object)
  id: writeValueAsBytes(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValueAsBytes(Object value)
  nameWithType: ObjectWriter.writeValueAsBytes(Object value)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValueAsBytes(Object value)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValueAsBytes*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that can be used to serialize any Java value as a byte array. Functionally equivalent to calling <xref uid="com.fasterxml.jackson.databind.ObjectWriter.writeValue(java.io.Writer,java.lang.Object)" data-throw-if-not-resolved="false">#writeValue(Writer,Object)</xref> with <xref uid="" data-throw-if-not-resolved="false">java.io.ByteArrayOutputStream</xref> and getting bytes, but more efficient. Encoding used will be UTF-8.


    Note: prior to version 2.1, throws clause included <xref uid="java.io.IOException" data-throw-if-not-resolved="false">IOException</xref>; 2.1 removed it.
  syntax:
    content: public byte[] writeValueAsBytes(Object value)
    parameters:
    - id: value
      type: java.lang.Object
    return:
      type: byte[]
  exceptions:
  - type: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString(java.lang.Object)
  id: writeValueAsString(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValueAsString(Object value)
  nameWithType: ObjectWriter.writeValueAsString(Object value)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString(Object value)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method that can be used to serialize any Java value as a String. Functionally equivalent to calling <xref uid="com.fasterxml.jackson.databind.ObjectWriter.writeValue(java.io.Writer,java.lang.Object)" data-throw-if-not-resolved="false">#writeValue(Writer,Object)</xref> with <xref uid="" data-throw-if-not-resolved="false">java.io.StringWriter</xref> and constructing String, but more efficient.


    Note: prior to version 2.1, throws clause included <xref uid="java.io.IOException" data-throw-if-not-resolved="false">IOException</xref>; 2.1 removed it.
  syntax:
    content: public String writeValueAsString(Object value)
    parameters:
    - id: value
      type: java.lang.Object
    return:
      type: java.lang.String
  exceptions:
  - type: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValues(com.fasterxml.jackson.core.JsonGenerator)
  id: writeValues(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValues(JsonGenerator g)
  nameWithType: ObjectWriter.writeValues(JsonGenerator g)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValues(JsonGenerator g)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for creating a <xref uid="com.fasterxml.jackson.databind.SequenceWriter" data-throw-if-not-resolved="false">SequenceWriter</xref> to write a sequence of root values using configuration of this <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>. Sequence is not surrounded by JSON array; some backend types may not support writing of such sequences as root level. Resulting writer needs to be <xref uid="com.fasterxml.jackson.databind.SequenceWriter.close()" data-throw-if-not-resolved="false">SequenceWriter#close()</xref>d after all values have been written to ensure that all content gets flushed by the generator. However, since a <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> is explicitly passed, it will NOT be closed when <xref uid="com.fasterxml.jackson.databind.SequenceWriter.close()" data-throw-if-not-resolved="false">SequenceWriter#close()</xref> is called.
  syntax:
    content: public SequenceWriter writeValues(JsonGenerator g)
    parameters:
    - id: g
      type: com.fasterxml.jackson.core.JsonGenerator
      description: >-
        Low-level generator caller has already constructed that will
           be used for actual writing of token stream.
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.DataOutput)
  id: writeValues(java.io.DataOutput)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValues(DataOutput out)
  nameWithType: ObjectWriter.writeValues(DataOutput out)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValues(DataOutput out)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValues*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public SequenceWriter writeValues(DataOutput out)
    parameters:
    - id: out
      type: java.io.DataOutput
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.File)
  id: writeValues(java.io.File)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValues(File out)
  nameWithType: ObjectWriter.writeValues(File out)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValues(File out)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for creating a <xref uid="com.fasterxml.jackson.databind.SequenceWriter" data-throw-if-not-resolved="false">SequenceWriter</xref> to write a sequence of root values using configuration of this <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>. Sequence is not surrounded by JSON array; some backend types may not support writing of such sequences as root level. Resulting writer needs to be <xref uid="com.fasterxml.jackson.databind.SequenceWriter.close()" data-throw-if-not-resolved="false">SequenceWriter#close()</xref>d after all values have been written to ensure closing of underlying generator and output stream.
  syntax:
    content: public SequenceWriter writeValues(File out)
    parameters:
    - id: out
      type: java.io.File
      description: Target file to write value sequence to.
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.OutputStream)
  id: writeValues(java.io.OutputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValues(OutputStream out)
  nameWithType: ObjectWriter.writeValues(OutputStream out)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValues(OutputStream out)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for creating a <xref uid="com.fasterxml.jackson.databind.SequenceWriter" data-throw-if-not-resolved="false">SequenceWriter</xref> to write a sequence of root values using configuration of this <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>. Sequence is not surrounded by JSON array; some backend types may not support writing of such sequences as root level. Resulting writer needs to be <xref uid="com.fasterxml.jackson.databind.SequenceWriter.close()" data-throw-if-not-resolved="false">SequenceWriter#close()</xref>d after all values have been written to ensure closing of underlying generator and output stream.
  syntax:
    content: public SequenceWriter writeValues(OutputStream out)
    parameters:
    - id: out
      type: java.io.OutputStream
      description: Physical output stream to use for writing the token stream
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValues(java.io.Writer)
  id: writeValues(java.io.Writer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValues(Writer out)
  nameWithType: ObjectWriter.writeValues(Writer out)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValues(Writer out)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValues*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method for creating a <xref uid="com.fasterxml.jackson.databind.SequenceWriter" data-throw-if-not-resolved="false">SequenceWriter</xref> to write a sequence of root values using configuration of this <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>. Sequence is not surrounded by JSON array; some backend types may not support writing of such sequences as root level. Resulting writer needs to be <xref uid="com.fasterxml.jackson.databind.SequenceWriter.close()" data-throw-if-not-resolved="false">SequenceWriter#close()</xref>d after all values have been written to ensure closing of underlying generator and output stream.
  syntax:
    content: public SequenceWriter writeValues(Writer out)
    parameters:
    - id: out
      type: java.io.Writer
      description: Target writer to use for writing the token stream
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(com.fasterxml.jackson.core.JsonGenerator)
  id: writeValuesAsArray(com.fasterxml.jackson.core.JsonGenerator)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValuesAsArray(JsonGenerator gen)
  nameWithType: ObjectWriter.writeValuesAsArray(JsonGenerator gen)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(JsonGenerator gen)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for creating a <xref uid="com.fasterxml.jackson.databind.SequenceWriter" data-throw-if-not-resolved="false">SequenceWriter</xref> to write an array of root-level values, using configuration of this <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>. Resulting writer needs to be <xref uid="com.fasterxml.jackson.databind.SequenceWriter.close()" data-throw-if-not-resolved="false">SequenceWriter#close()</xref>d after all values have been written to ensure that all content gets flushed by the generator. However, since a <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> is explicitly passed, it will NOT be closed when <xref uid="com.fasterxml.jackson.databind.SequenceWriter.close()" data-throw-if-not-resolved="false">SequenceWriter#close()</xref> is called.


    Note that the type to use with <xref uid="com.fasterxml.jackson.databind.ObjectWriter.forType(java.lang.Class&lt;?&gt;)" data-throw-if-not-resolved="false">ObjectWriter#forType(Class)</xref> needs to be type of individual values (elements) to write and NOT matching array or <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> type.
  syntax:
    content: public SequenceWriter writeValuesAsArray(JsonGenerator gen)
    parameters:
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
      description: Underlying generator to use for writing the token stream
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(java.io.DataOutput)
  id: writeValuesAsArray(java.io.DataOutput)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValuesAsArray(DataOutput out)
  nameWithType: ObjectWriter.writeValuesAsArray(DataOutput out)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(DataOutput out)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray*
  type: Method
  package: com.fasterxml.jackson.databind
  syntax:
    content: public SequenceWriter writeValuesAsArray(DataOutput out)
    parameters:
    - id: out
      type: java.io.DataOutput
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(java.io.File)
  id: writeValuesAsArray(java.io.File)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValuesAsArray(File out)
  nameWithType: ObjectWriter.writeValuesAsArray(File out)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(File out)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for creating a <xref uid="com.fasterxml.jackson.databind.SequenceWriter" data-throw-if-not-resolved="false">SequenceWriter</xref> to write an array of root-level values, using configuration of this <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>. Resulting writer needs to be <xref uid="com.fasterxml.jackson.databind.SequenceWriter.close()" data-throw-if-not-resolved="false">SequenceWriter#close()</xref>d after all values have been written to ensure closing of underlying generator and output stream.


    Note that the type to use with <xref uid="com.fasterxml.jackson.databind.ObjectWriter.forType(java.lang.Class&lt;?&gt;)" data-throw-if-not-resolved="false">ObjectWriter#forType(Class)</xref> needs to be type of individual values (elements) to write and NOT matching array or <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> type.
  syntax:
    content: public SequenceWriter writeValuesAsArray(File out)
    parameters:
    - id: out
      type: java.io.File
      description: File to write token stream to
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(java.io.OutputStream)
  id: writeValuesAsArray(java.io.OutputStream)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValuesAsArray(OutputStream out)
  nameWithType: ObjectWriter.writeValuesAsArray(OutputStream out)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(OutputStream out)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for creating a <xref uid="com.fasterxml.jackson.databind.SequenceWriter" data-throw-if-not-resolved="false">SequenceWriter</xref> to write an array of root-level values, using configuration of this <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>. Resulting writer needs to be <xref uid="com.fasterxml.jackson.databind.SequenceWriter.close()" data-throw-if-not-resolved="false">SequenceWriter#close()</xref>d after all values have been written to ensure closing of underlying generator and output stream.


    Note that the type to use with <xref uid="com.fasterxml.jackson.databind.ObjectWriter.forType(java.lang.Class&lt;?&gt;)" data-throw-if-not-resolved="false">ObjectWriter#forType(Class)</xref> needs to be type of individual values (elements) to write and NOT matching array or <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> type.
  syntax:
    content: public SequenceWriter writeValuesAsArray(OutputStream out)
    parameters:
    - id: out
      type: java.io.OutputStream
      description: Physical output stream to use for writing the token stream
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(java.io.Writer)
  id: writeValuesAsArray(java.io.Writer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ObjectWriter
  langs:
  - java
  name: writeValuesAsArray(Writer out)
  nameWithType: ObjectWriter.writeValuesAsArray(Writer out)
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray(Writer out)
  overload: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: >-
    Method for creating a <xref uid="com.fasterxml.jackson.databind.SequenceWriter" data-throw-if-not-resolved="false">SequenceWriter</xref> to write an array of root-level values, using configuration of this <xref uid="com.fasterxml.jackson.databind.ObjectWriter" data-throw-if-not-resolved="false">ObjectWriter</xref>. Resulting writer needs to be <xref uid="com.fasterxml.jackson.databind.SequenceWriter.close()" data-throw-if-not-resolved="false">SequenceWriter#close()</xref>d after all values have been written to ensure closing of underlying generator and output stream.


    Note that the type to use with <xref uid="com.fasterxml.jackson.databind.ObjectWriter.forType(java.lang.Class&lt;?&gt;)" data-throw-if-not-resolved="false">ObjectWriter#forType(Class)</xref> needs to be type of individual values (elements) to write and NOT matching array or <xref uid="java.util.Collection" data-throw-if-not-resolved="false">java.util.Collection</xref> type.
  syntax:
    content: public SequenceWriter writeValuesAsArray(Writer out)
    parameters:
    - id: out
      type: java.io.Writer
      description: Writer to use for writing the token stream
    return:
      type: com.fasterxml.jackson.databind.SequenceWriter
  exceptions:
  - type: java.io.IOException
references:
- uid: com.fasterxml.jackson.databind.ObjectMapper
  name: ObjectMapper
  nameWithType: ObjectMapper
  fullName: com.fasterxml.jackson.databind.ObjectMapper
- uid: com.fasterxml.jackson.databind.SerializationConfig
  name: SerializationConfig
  nameWithType: SerializationConfig
  fullName: com.fasterxml.jackson.databind.SerializationConfig
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.core.PrettyPrinter
  name: PrettyPrinter
  nameWithType: PrettyPrinter
  fullName: com.fasterxml.jackson.core.PrettyPrinter
- uid: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter*
  name: ObjectWriter
  nameWithType: ObjectWriter.ObjectWriter
  fullName: com.fasterxml.jackson.databind.ObjectWriter.ObjectWriter
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.FormatSchema
  name: FormatSchema
  nameWithType: FormatSchema
  fullName: com.fasterxml.jackson.core.FormatSchema
- uid: com.fasterxml.jackson.databind.ObjectWriter.GeneratorSettings
  name: ObjectWriter.GeneratorSettings
  nameWithType: ObjectWriter.GeneratorSettings
  fullName: com.fasterxml.jackson.databind.ObjectWriter.GeneratorSettings
- uid: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
  name: ObjectWriter.Prefetch
  nameWithType: ObjectWriter.Prefetch
  fullName: com.fasterxml.jackson.databind.ObjectWriter.Prefetch
- uid: com.fasterxml.jackson.core.JsonFactory
  name: JsonFactory
  nameWithType: JsonFactory
  fullName: com.fasterxml.jackson.core.JsonFactory
- uid: com.fasterxml.jackson.core.Version
  name: Version
  nameWithType: Version
  fullName: com.fasterxml.jackson.core.Version
- uid: com.fasterxml.jackson.databind.ObjectWriter.version*
  name: version
  nameWithType: ObjectWriter.version
  fullName: com.fasterxml.jackson.databind.ObjectWriter.version
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter._new*
  name: _new
  nameWithType: ObjectWriter._new
  fullName: com.fasterxml.jackson.databind.ObjectWriter._new
  package: com.fasterxml.jackson.databind
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SequenceWriter
  name: SequenceWriter
  nameWithType: SequenceWriter
  fullName: com.fasterxml.jackson.databind.SequenceWriter
- uid: com.fasterxml.jackson.databind.ObjectWriter._newSequenceWriter*
  name: _newSequenceWriter
  nameWithType: ObjectWriter._newSequenceWriter
  fullName: com.fasterxml.jackson.databind.ObjectWriter._newSequenceWriter
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.SerializationFeature
  name: SerializationFeature
  nameWithType: SerializationFeature
  fullName: com.fasterxml.jackson.databind.SerializationFeature
- uid: com.fasterxml.jackson.databind.ObjectWriter.with*
  name: with
  nameWithType: ObjectWriter.with
  fullName: com.fasterxml.jackson.databind.ObjectWriter.with
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.SerializationFeature[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.SerializationFeature
    name: SerializationFeature
    fullName: com.fasterxml.jackson.databind.SerializationFeature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.ObjectWriter.withFeatures*
  name: withFeatures
  nameWithType: ObjectWriter.withFeatures
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withFeatures
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.without*
  name: without
  nameWithType: ObjectWriter.without
  fullName: com.fasterxml.jackson.databind.ObjectWriter.without
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures*
  name: withoutFeatures
  nameWithType: ObjectWriter.withoutFeatures
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withoutFeatures
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.JsonGenerator.Feature
  name: JsonGenerator.Feature
  nameWithType: JsonGenerator.Feature
  fullName: com.fasterxml.jackson.core.JsonGenerator.Feature
- uid: com.fasterxml.jackson.core.JsonGenerator.Feature[]
  spec.java:
  - uid: com.fasterxml.jackson.core.JsonGenerator.Feature
    name: Feature
    fullName: com.fasterxml.jackson.core.JsonGenerator.Feature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.StreamWriteFeature
  name: StreamWriteFeature
  nameWithType: StreamWriteFeature
  fullName: com.fasterxml.jackson.core.StreamWriteFeature
- uid: com.fasterxml.jackson.core.FormatFeature
  name: FormatFeature
  nameWithType: FormatFeature
  fullName: com.fasterxml.jackson.core.FormatFeature
- uid: com.fasterxml.jackson.core.FormatFeature[]
  spec.java:
  - uid: com.fasterxml.jackson.core.FormatFeature
    name: FormatFeature
    fullName: com.fasterxml.jackson.core.FormatFeature
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.ObjectWriter.forType*
  name: forType
  nameWithType: ObjectWriter.forType
  fullName: com.fasterxml.jackson.databind.ObjectWriter.forType
  package: com.fasterxml.jackson.databind
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.core.type.TypeReference<?>
  spec.java:
  - uid: com.fasterxml.jackson.core.type.TypeReference
    name: TypeReference
    fullName: com.fasterxml.jackson.core.type.TypeReference
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ObjectWriter.withType*
  name: withType
  nameWithType: ObjectWriter.withType
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withType
  package: com.fasterxml.jackson.databind
- uid: java.text.DateFormat
  spec.java:
  - uid: java.text.DateFormat
    name: DateFormat
    fullName: java.text.DateFormat
- uid: com.fasterxml.jackson.databind.ObjectWriter.withDefaultPrettyPrinter*
  name: withDefaultPrettyPrinter
  nameWithType: ObjectWriter.withDefaultPrettyPrinter
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withDefaultPrettyPrinter
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ser.FilterProvider
  name: FilterProvider
  nameWithType: FilterProvider
  fullName: com.fasterxml.jackson.databind.ser.FilterProvider
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.ObjectWriter.withRootName*
  name: withRootName
  nameWithType: ObjectWriter.withRootName
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withRootName
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyName
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ObjectWriter.withoutRootName*
  name: withoutRootName
  nameWithType: ObjectWriter.withoutRootName
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withoutRootName
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.withSchema*
  name: withSchema
  nameWithType: ObjectWriter.withSchema
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withSchema
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.withView*
  name: withView
  nameWithType: ObjectWriter.withView
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withView
  package: com.fasterxml.jackson.databind
- uid: java.util.Locale
  spec.java:
  - uid: java.util.Locale
    name: Locale
    fullName: java.util.Locale
- uid: java.util.TimeZone
  spec.java:
  - uid: java.util.TimeZone
    name: TimeZone
    fullName: java.util.TimeZone
- uid: com.fasterxml.jackson.core.Base64Variant
  name: Base64Variant
  nameWithType: Base64Variant
  fullName: com.fasterxml.jackson.core.Base64Variant
- uid: com.fasterxml.jackson.core.io.CharacterEscapes
  name: CharacterEscapes
  nameWithType: CharacterEscapes
  fullName: com.fasterxml.jackson.core.io.CharacterEscapes
- uid: com.fasterxml.jackson.databind.cfg.ContextAttributes
  name: ContextAttributes
  nameWithType: ContextAttributes
  fullName: com.fasterxml.jackson.databind.cfg.ContextAttributes
- uid: java.util.Map<?,?>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: ','
    fullName: ','
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ObjectWriter.withAttributes*
  name: withAttributes
  nameWithType: ObjectWriter.withAttributes
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withAttributes
  package: com.fasterxml.jackson.databind
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.ObjectWriter.withAttribute*
  name: withAttribute
  nameWithType: ObjectWriter.withAttribute
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withAttribute
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.withoutAttribute*
  name: withoutAttribute
  nameWithType: ObjectWriter.withoutAttribute
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withoutAttribute
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.withRootValueSeparator*
  name: withRootValueSeparator
  nameWithType: ObjectWriter.withRootValueSeparator
  fullName: com.fasterxml.jackson.databind.ObjectWriter.withRootValueSeparator
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.SerializableString
  name: SerializableString
  nameWithType: SerializableString
  fullName: com.fasterxml.jackson.core.SerializableString
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: com.fasterxml.jackson.databind.ObjectWriter.createGenerator*
  name: createGenerator
  nameWithType: ObjectWriter.createGenerator
  fullName: com.fasterxml.jackson.databind.ObjectWriter.createGenerator
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.JsonEncoding
  name: JsonEncoding
  nameWithType: JsonEncoding
  fullName: com.fasterxml.jackson.core.JsonEncoding
- uid: java.io.Writer
  spec.java:
  - uid: java.io.Writer
    name: Writer
    fullName: java.io.Writer
- uid: java.io.File
  spec.java:
  - uid: java.io.File
    name: File
    fullName: java.io.File
- uid: java.io.DataOutput
  spec.java:
  - uid: java.io.DataOutput
    name: DataOutput
    fullName: java.io.DataOutput
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValues*
  name: writeValues
  nameWithType: ObjectWriter.writeValues
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValues
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray*
  name: writeValuesAsArray
  nameWithType: ObjectWriter.writeValuesAsArray
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValuesAsArray
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.isEnabled*
  name: isEnabled
  nameWithType: ObjectWriter.isEnabled
  fullName: com.fasterxml.jackson.databind.ObjectWriter.isEnabled
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.MapperFeature
  name: MapperFeature
  nameWithType: MapperFeature
  fullName: com.fasterxml.jackson.databind.MapperFeature
- uid: com.fasterxml.jackson.core.JsonParser.Feature
  name: JsonParser.Feature
  nameWithType: JsonParser.Feature
  fullName: com.fasterxml.jackson.core.JsonParser.Feature
- uid: com.fasterxml.jackson.databind.ObjectWriter.getConfig*
  name: getConfig
  nameWithType: ObjectWriter.getConfig
  fullName: com.fasterxml.jackson.databind.ObjectWriter.getConfig
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.getFactory*
  name: getFactory
  nameWithType: ObjectWriter.getFactory
  fullName: com.fasterxml.jackson.databind.ObjectWriter.getFactory
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.type.TypeFactory
  name: TypeFactory
  nameWithType: TypeFactory
  fullName: com.fasterxml.jackson.databind.type.TypeFactory
- uid: com.fasterxml.jackson.databind.ObjectWriter.getTypeFactory*
  name: getTypeFactory
  nameWithType: ObjectWriter.getTypeFactory
  fullName: com.fasterxml.jackson.databind.ObjectWriter.getTypeFactory
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.hasPrefetchedSerializer*
  name: hasPrefetchedSerializer
  nameWithType: ObjectWriter.hasPrefetchedSerializer
  fullName: com.fasterxml.jackson.databind.ObjectWriter.hasPrefetchedSerializer
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.getAttributes*
  name: getAttributes
  nameWithType: ObjectWriter.getAttributes
  fullName: com.fasterxml.jackson.databind.ObjectWriter.getAttributes
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValue*
  name: writeValue
  nameWithType: ObjectWriter.writeValue
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValue
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.core.JsonGenerationException
  name: JsonGenerationException
  nameWithType: JsonGenerationException
  fullName: com.fasterxml.jackson.core.JsonGenerationException
- uid: com.fasterxml.jackson.databind.JsonMappingException
  name: JsonMappingException
  nameWithType: JsonMappingException
  fullName: com.fasterxml.jackson.databind.JsonMappingException
- uid: com.fasterxml.jackson.core.JsonProcessingException
  name: JsonProcessingException
  nameWithType: JsonProcessingException
  fullName: com.fasterxml.jackson.core.JsonProcessingException
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString*
  name: writeValueAsString
  nameWithType: ObjectWriter.writeValueAsString
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString
  package: com.fasterxml.jackson.databind
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.ObjectWriter.writeValueAsBytes*
  name: writeValueAsBytes
  nameWithType: ObjectWriter.writeValueAsBytes
  fullName: com.fasterxml.jackson.databind.ObjectWriter.writeValueAsBytes
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper
  name: jsonFormatVisitors.JsonFormatVisitorWrapper
  nameWithType: jsonFormatVisitors.JsonFormatVisitorWrapper
  fullName: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper
- uid: com.fasterxml.jackson.databind.ObjectWriter.acceptJsonFormatVisitor*
  name: acceptJsonFormatVisitor
  nameWithType: ObjectWriter.acceptJsonFormatVisitor
  fullName: com.fasterxml.jackson.databind.ObjectWriter.acceptJsonFormatVisitor
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter.canSerialize*
  name: canSerialize
  nameWithType: ObjectWriter.canSerialize
  fullName: com.fasterxml.jackson.databind.ObjectWriter.canSerialize
  package: com.fasterxml.jackson.databind
- uid: java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>
  spec.java:
  - uid: java.util.concurrent.atomic.AtomicReference
    name: AtomicReference
    fullName: java.util.concurrent.atomic.AtomicReference
  - name: <
    fullName: <
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
  name: DefaultSerializerProvider
  nameWithType: DefaultSerializerProvider
  fullName: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider
- uid: com.fasterxml.jackson.databind.ObjectWriter._serializerProvider*
  name: _serializerProvider
  nameWithType: ObjectWriter._serializerProvider
  fullName: com.fasterxml.jackson.databind.ObjectWriter._serializerProvider
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter._verifySchemaType*
  name: _verifySchemaType
  nameWithType: ObjectWriter._verifySchemaType
  fullName: com.fasterxml.jackson.databind.ObjectWriter._verifySchemaType
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter._writeValueAndClose*
  name: _writeValueAndClose
  nameWithType: ObjectWriter._writeValueAndClose
  fullName: com.fasterxml.jackson.databind.ObjectWriter._writeValueAndClose
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter._configureGenerator*
  name: _configureGenerator
  nameWithType: ObjectWriter._configureGenerator
  fullName: com.fasterxml.jackson.databind.ObjectWriter._configureGenerator
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ObjectWriter._assertNotNull*
  name: _assertNotNull
  nameWithType: ObjectWriter._assertNotNull
  fullName: com.fasterxml.jackson.databind.ObjectWriter._assertNotNull
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.ser.SerializerFactory
  name: SerializerFactory
  nameWithType: SerializerFactory
  fullName: com.fasterxml.jackson.databind.ser.SerializerFactory
- uid: com.fasterxml.jackson.core.Versioned
  name: Versioned
  nameWithType: Versioned
  fullName: com.fasterxml.jackson.core.Versioned
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.fasterxml.jackson.core.type.TypeReference
  name: TypeReference
  nameWithType: TypeReference
  fullName: com.fasterxml.jackson.core.type.TypeReference
- uid: ?,?
  name: ?,?
  nameWithType: ?,?
  fullName: ?,?
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.Throwable
  name: Throwable
  nameWithType: Throwable
  fullName: java.lang.Throwable
- uid: java.util.concurrent.atomic.AtomicReference
  name: AtomicReference
  nameWithType: AtomicReference
  fullName: java.util.concurrent.atomic.AtomicReference
