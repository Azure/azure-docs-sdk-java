### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.device.fileupload.FileUpload.uploadToBlobAsync*"
fullName: "com.microsoft.azure.sdk.iot.device.fileupload.FileUpload.uploadToBlobAsync"
name: "uploadToBlobAsync"
nameWithType: "FileUpload.uploadToBlobAsync"
members:
- uid: "com.microsoft.azure.sdk.iot.device.fileupload.FileUpload.uploadToBlobAsync(java.lang.String,java.io.InputStream,long,com.microsoft.azure.sdk.iot.device.IotHubEventCallback,java.lang.Object)"
  fullName: "com.microsoft.azure.sdk.iot.device.fileupload.FileUpload.uploadToBlobAsync(String blobName, InputStream inputStream, long streamLength, IotHubEventCallback statusCallback, Object statusCallbackContext)"
  name: "uploadToBlobAsync(String blobName, InputStream inputStream, long streamLength, IotHubEventCallback statusCallback, Object statusCallbackContext)"
  nameWithType: "FileUpload.uploadToBlobAsync(String blobName, InputStream inputStream, long streamLength, IotHubEventCallback statusCallback, Object statusCallbackContext)"
  summary: "Upload the file to container, which was associated to the iothub. This function will start the upload process, and back the execution to the caller. The upload process will be executed in background. When it is completed, the background thread will trigger the callback with the upload status."
  parameters:
  - description: "is the name of the file in the container."
    name: "blobName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "is the input stream."
    name: "inputStream"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "is the stream length."
    name: "streamLength"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "is the callback to notify that the upload is completed (with status)."
    name: "statusCallback"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubEventCallback?alt=com.microsoft.azure.sdk.iot.device.IotHubEventCallback&text=IotHubEventCallback\" data-throw-if-not-resolved=\"False\" />"
  - description: "is the context of the callback, allowing multiple uploads in parallel."
    name: "statusCallbackContext"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public synchronized void uploadToBlobAsync(String blobName, InputStream inputStream, long streamLength, IotHubEventCallback statusCallback, Object statusCallbackContext)"
  exceptions:
  - description: "if one of the parameters is invalid.\n              blobName is <code>null</code> or empty,\n              inputStream is <code>null</code> or not available,\n              streamLength is negative,\n              statusCallback is <code>null</code>"
    type: "<xref href=\"java.lang.IllegalArgumentException?alt=java.lang.IllegalArgumentException&text=IllegalArgumentException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if one of the parameters is invalid.\n              blobName is <code>null</code> or empty,\n              inputStream is <code>null</code> or not available,\n              streamLength is negative,\n              statusCallback is <code>null</code>"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.fileupload"
artifact: com.microsoft.azure.sdk.iot:iot-device-client-preview:1.2.0
