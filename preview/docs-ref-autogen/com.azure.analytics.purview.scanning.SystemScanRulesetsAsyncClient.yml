### YamlMime:JavaType
uid: "com.azure.analytics.purview.scanning.SystemScanRulesetsAsyncClient"
fullName: "com.azure.analytics.purview.scanning.SystemScanRulesetsAsyncClient"
name: "SystemScanRulesetsAsyncClient"
nameWithType: "SystemScanRulesetsAsyncClient"
summary: "Initializes a new instance of the asynchronous Purview<wbr>Scanning<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SystemScanRulesetsAsyncClient**"
methods:
- uid: "com.azure.analytics.purview.scanning.SystemScanRulesetsAsyncClient.getByVersionWithResponse(int,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.scanning.SystemScanRulesetsAsyncClient.getByVersionWithResponse(int version, RequestOptions requestOptions)"
  name: "getByVersionWithResponse(int version, RequestOptions requestOptions)"
  nameWithType: "SystemScanRulesetsAsyncClient.getByVersionWithResponse(int version, RequestOptions requestOptions)"
  summary: "Get a scan ruleset by version."
  parameters:
  - description: "The version parameter."
    name: "version"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getByVersionWithResponse(int version, RequestOptions requestOptions)"
  desc: "Get a scan ruleset by version.\n\n**Query Parameters**\n\n    | -------------- | ------ | -------- | ---------------------------- |\n    | Name           | Type   | Required | Description                  |\n    | dataSourceType | String | No       | The dataSourceType parameter |\n    | apiVersion     | String | Yes      | Api Version                  |\n\n**Response Body Schema**\n\n```java\n{\n     id: String\n     name: String\n     scanRulesetType: String(Custom/System)\n     status: String(Enabled/Disabled)\n     version: Integer\n }\n```"
  returns:
    description: "a scan ruleset by version."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.purview.scanning.SystemScanRulesetsAsyncClient.getLatestWithResponse(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.scanning.SystemScanRulesetsAsyncClient.getLatestWithResponse(RequestOptions requestOptions)"
  name: "getLatestWithResponse(RequestOptions requestOptions)"
  nameWithType: "SystemScanRulesetsAsyncClient.getLatestWithResponse(RequestOptions requestOptions)"
  summary: "Get the latest version of a system scan ruleset."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getLatestWithResponse(RequestOptions requestOptions)"
  desc: "Get the latest version of a system scan ruleset.\n\n**Query Parameters**\n\n    | -------------- | ------ | -------- | ---------------------------- |\n    | Name           | Type   | Required | Description                  |\n    | dataSourceType | String | No       | The dataSourceType parameter |\n    | apiVersion     | String | Yes      | Api Version                  |\n\n**Response Body Schema**\n\n```java\n{\n     id: String\n     name: String\n     scanRulesetType: String(Custom/System)\n     status: String(Enabled/Disabled)\n     version: Integer\n }\n```"
  returns:
    description: "the latest version of a system scan ruleset."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.purview.scanning.SystemScanRulesetsAsyncClient.getWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.scanning.SystemScanRulesetsAsyncClient.getWithResponse(String dataSourceType, RequestOptions requestOptions)"
  name: "getWithResponse(String dataSourceType, RequestOptions requestOptions)"
  nameWithType: "SystemScanRulesetsAsyncClient.getWithResponse(String dataSourceType, RequestOptions requestOptions)"
  summary: "Get a system scan ruleset for a data source."
  parameters:
  - description: "The dataSourceType parameter."
    name: "dataSourceType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getWithResponse(String dataSourceType, RequestOptions requestOptions)"
  desc: "Get a system scan ruleset for a data source.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | ----------- |\n    | Name       | Type   | Required | Description |\n    | apiVersion | String | Yes      | Api Version |\n\n**Response Body Schema**\n\n```java\n{\n     id: String\n     name: String\n     scanRulesetType: String(Custom/System)\n     status: String(Enabled/Disabled)\n     version: Integer\n }\n```"
  returns:
    description: "a system scan ruleset for a data source."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.purview.scanning.SystemScanRulesetsAsyncClient.listAll(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.scanning.SystemScanRulesetsAsyncClient.listAll(RequestOptions requestOptions)"
  name: "listAll(RequestOptions requestOptions)"
  nameWithType: "SystemScanRulesetsAsyncClient.listAll(RequestOptions requestOptions)"
  summary: "List all system scan rulesets for an account."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listAll(RequestOptions requestOptions)"
  desc: "List all system scan rulesets for an account.\n\n**Query Parameters**\n\n    | ---------- | ------ | -------- | ----------- |\n    | Name       | Type   | Required | Description |\n    | apiVersion | String | Yes      | Api Version |\n\n**Response Body Schema**\n\n```java\n{\n     value: [\n         {\n             id: String\n             name: String\n             scanRulesetType: String(Custom/System)\n             status: String(Enabled/Disabled)\n             version: Integer\n         }\n     ]\n     nextLink: String\n     count: Long\n }\n```"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.purview.scanning.SystemScanRulesetsAsyncClient.listVersionsByDataSource(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.analytics.purview.scanning.SystemScanRulesetsAsyncClient.listVersionsByDataSource(RequestOptions requestOptions)"
  name: "listVersionsByDataSource(RequestOptions requestOptions)"
  nameWithType: "SystemScanRulesetsAsyncClient.listVersionsByDataSource(RequestOptions requestOptions)"
  summary: "List system scan ruleset versions in Data catalog."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listVersionsByDataSource(RequestOptions requestOptions)"
  desc: "List system scan ruleset versions in Data catalog.\n\n**Query Parameters**\n\n    | -------------- | ------ | -------- | ---------------------------- |\n    | Name           | Type   | Required | Description                  |\n    | dataSourceType | String | No       | The dataSourceType parameter |\n    | apiVersion     | String | Yes      | Api Version                  |\n\n**Response Body Schema**\n\n```java\n{\n     value: [\n         {\n             id: String\n             name: String\n             scanRulesetType: String(Custom/System)\n             status: String(Enabled/Disabled)\n             version: Integer\n         }\n     ]\n     nextLink: String\n     count: Long\n }\n```"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous PurviewScanningClient type."
metadata: {}
package: "com.azure.analytics.purview.scanning"
artifact: com.azure:azure-analytics-purview-scanning:1.0.0-beta.2
