### YamlMime:JavaType
uid: "com.azure.ai.openai.responses.models.ResponsesResponse"
fullName: "com.azure.ai.openai.responses.models.ResponsesResponse"
name: "ResponsesResponse"
nameWithType: "ResponsesResponse"
summary: "The Responses<wbr>Response model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ResponsesResponse**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.responses.models.ResponsesResponse?alt=com.azure.ai.openai.responses.models.ResponsesResponse&text=ResponsesResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "ResponsesResponse.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Responses<wbr>Response from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ResponsesResponse fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of ResponsesResponse from the JsonReader."
  returns:
    description: "An instance of ResponsesResponse if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.ai.openai.responses.models.ResponsesResponse?alt=com.azure.ai.openai.responses.models.ResponsesResponse&text=ResponsesResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getCreatedAt()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getCreatedAt()"
  name: "getCreatedAt()"
  nameWithType: "ResponsesResponse.getCreatedAt()"
  summary: "Get the created<wbr>At property: Unix timestamp (in seconds) of when this Response was created."
  syntax: "public OffsetDateTime getCreatedAt()"
  desc: "Get the createdAt property: Unix timestamp (in seconds) of when this Response was created."
  returns:
    description: "the createdAt value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getError()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getError()"
  name: "getError()"
  nameWithType: "ResponsesResponse.getError()"
  summary: "Get the error property: The error property."
  syntax: "public ResponsesError getError()"
  desc: "Get the error property: The error property."
  returns:
    description: "the error value."
    type: "<xref href=\"com.azure.ai.openai.responses.models.ResponsesError?alt=com.azure.ai.openai.responses.models.ResponsesError&text=ResponsesError\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getId()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getId()"
  name: "getId()"
  nameWithType: "ResponsesResponse.getId()"
  summary: "Get the id property: A unique identifier for this Response."
  syntax: "public String getId()"
  desc: "Get the id property: A unique identifier for this Response."
  returns:
    description: "the id value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getIncompleteDetails()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getIncompleteDetails()"
  name: "getIncompleteDetails()"
  nameWithType: "ResponsesResponse.getIncompleteDetails()"
  summary: "Get the incomplete<wbr>Details property: The incomplete\\_details property."
  syntax: "public ResponsesResponseIncompleteDetails getIncompleteDetails()"
  desc: "Get the incompleteDetails property: The incomplete\\_details property."
  returns:
    description: "the incompleteDetails value."
    type: "<xref href=\"com.azure.ai.openai.responses.models.ResponsesResponseIncompleteDetails?alt=com.azure.ai.openai.responses.models.ResponsesResponseIncompleteDetails&text=ResponsesResponseIncompleteDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getInstructions()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getInstructions()"
  name: "getInstructions()"
  nameWithType: "ResponsesResponse.getInstructions()"
  summary: "Get the instructions property: The instructions property."
  syntax: "public String getInstructions()"
  desc: "Get the instructions property: The instructions property."
  returns:
    description: "the instructions value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getMaxOutputTokens()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getMaxOutputTokens()"
  name: "getMaxOutputTokens()"
  nameWithType: "ResponsesResponse.getMaxOutputTokens()"
  summary: "Get the max<wbr>Output<wbr>Tokens property: The max\\_output\\_tokens property."
  syntax: "public Integer getMaxOutputTokens()"
  desc: "Get the maxOutputTokens property: The max\\_output\\_tokens property."
  returns:
    description: "the maxOutputTokens value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getMetadata()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getMetadata()"
  name: "getMetadata()"
  nameWithType: "ResponsesResponse.getMetadata()"
  summary: "Get the metadata property: Set of 16 key-value pairs that can be attached to an object."
  syntax: "public Map<String,String> getMetadata()"
  desc: "Get the metadata property: Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters."
  returns:
    description: "the metadata value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getModel()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getModel()"
  name: "getModel()"
  nameWithType: "ResponsesResponse.getModel()"
  summary: "Get the model property: The model used to generate this Response."
  syntax: "public String getModel()"
  desc: "Get the model property: The model used to generate this Response."
  returns:
    description: "the model value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getObject()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getObject()"
  name: "getObject()"
  nameWithType: "ResponsesResponse.getObject()"
  summary: "Get the object property: The object type of this resource - always set to \\`response\\`."
  syntax: "public String getObject()"
  desc: "Get the object property: The object type of this resource - always set to \\`response\\`."
  returns:
    description: "the object value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getOutput()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getOutput()"
  name: "getOutput()"
  nameWithType: "ResponsesResponse.getOutput()"
  summary: "Get the output property: An array of content items generated by the model."
  syntax: "public List<ResponsesItem> getOutput()"
  desc: "Get the output property: An array of content items generated by the model."
  returns:
    description: "the output value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.openai.responses.models.ResponsesItem?alt=com.azure.ai.openai.responses.models.ResponsesItem&text=ResponsesItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getPreviousResponseId()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getPreviousResponseId()"
  name: "getPreviousResponseId()"
  nameWithType: "ResponsesResponse.getPreviousResponseId()"
  summary: "Get the previous<wbr>Response<wbr>Id property: The unique ID of the previous response to the model."
  syntax: "public String getPreviousResponseId()"
  desc: "Get the previousResponseId property: The unique ID of the previous response to the model. Use this to create multi-turn conversations."
  returns:
    description: "the previousResponseId value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getReasoning()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getReasoning()"
  name: "getReasoning()"
  nameWithType: "ResponsesResponse.getReasoning()"
  summary: "Get the reasoning property: The reasoning property."
  syntax: "public ResponsesReasoningConfiguration getReasoning()"
  desc: "Get the reasoning property: The reasoning property."
  returns:
    description: "the reasoning value."
    type: "<xref href=\"com.azure.ai.openai.responses.models.ResponsesReasoningConfiguration?alt=com.azure.ai.openai.responses.models.ResponsesReasoningConfiguration&text=ResponsesReasoningConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getStatus()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getStatus()"
  name: "getStatus()"
  nameWithType: "ResponsesResponse.getStatus()"
  summary: "Get the status property: The status of the response generation."
  syntax: "public ResponsesResponseStatus getStatus()"
  desc: "Get the status property: The status of the response generation."
  returns:
    description: "the status value."
    type: "<xref href=\"com.azure.ai.openai.responses.models.ResponsesResponseStatus?alt=com.azure.ai.openai.responses.models.ResponsesResponseStatus&text=ResponsesResponseStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getTemperature()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getTemperature()"
  name: "getTemperature()"
  nameWithType: "ResponsesResponse.getTemperature()"
  summary: "Get the temperature property: What sampling temperature to use, between 0 and 2."
  syntax: "public double getTemperature()"
  desc: "Get the temperature property: What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or \\`top\\_p\\` but not both."
  returns:
    description: "the temperature value."
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getText()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getText()"
  name: "getText()"
  nameWithType: "ResponsesResponse.getText()"
  summary: "Get the text property: The text property."
  syntax: "public ResponseTextOptions getText()"
  desc: "Get the text property: The text property."
  returns:
    description: "the text value."
    type: "<xref href=\"com.azure.ai.openai.responses.models.ResponseTextOptions?alt=com.azure.ai.openai.responses.models.ResponseTextOptions&text=ResponseTextOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getToolChoice()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getToolChoice()"
  name: "getToolChoice()"
  nameWithType: "ResponsesResponse.getToolChoice()"
  summary: "Get the tool<wbr>Choice property: The tool\\_choice property."
  syntax: "public BinaryData getToolChoice()"
  desc: "Get the toolChoice property: The tool\\_choice property."
  returns:
    description: "the toolChoice value."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getTools()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getTools()"
  name: "getTools()"
  nameWithType: "ResponsesResponse.getTools()"
  summary: "Get the tools property: The tools available to the model when generating a Response."
  syntax: "public List<ResponsesTool> getTools()"
  desc: "Get the tools property: The tools available to the model when generating a Response."
  returns:
    description: "the tools value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.openai.responses.models.ResponsesTool?alt=com.azure.ai.openai.responses.models.ResponsesTool&text=ResponsesTool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getTopP()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getTopP()"
  name: "getTopP()"
  nameWithType: "ResponsesResponse.getTopP()"
  summary: "Get the topP property: An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top\\_p probability mass."
  syntax: "public double getTopP()"
  desc: "Get the topP property: An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top\\_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered."
  returns:
    description: "the topP value."
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getTruncation()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getTruncation()"
  name: "getTruncation()"
  nameWithType: "ResponsesResponse.getTruncation()"
  summary: "Get the truncation property: The truncation strategy to use for the model response."
  syntax: "public ResponseTruncation getTruncation()"
  desc: "Get the truncation property: The truncation strategy to use for the model response. - \\`auto\\`: If the context of this response and previous ones exceeds the model's context window size, the model will truncate the response to fit the context window by dropping input items in the middle of the conversation. - \\`disabled\\`: If a model response will exceed the context window size for a model, the request will fail with a 400 error."
  returns:
    description: "the truncation value."
    type: "<xref href=\"com.azure.ai.openai.responses.models.ResponseTruncation?alt=com.azure.ai.openai.responses.models.ResponseTruncation&text=ResponseTruncation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getUsage()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getUsage()"
  name: "getUsage()"
  nameWithType: "ResponsesResponse.getUsage()"
  summary: "Get the usage property: The usage property."
  syntax: "public ResponsesResponseUsage getUsage()"
  desc: "Get the usage property: The usage property."
  returns:
    description: "the usage value."
    type: "<xref href=\"com.azure.ai.openai.responses.models.ResponsesResponseUsage?alt=com.azure.ai.openai.responses.models.ResponsesResponseUsage&text=ResponsesResponseUsage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.getUser()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.getUser()"
  name: "getUser()"
  nameWithType: "ResponsesResponse.getUser()"
  summary: "Get the user property: The user property."
  syntax: "public String getUser()"
  desc: "Get the user property: The user property."
  returns:
    description: "the user value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.isParallelToolCalls()"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.isParallelToolCalls()"
  name: "isParallelToolCalls()"
  nameWithType: "ResponsesResponse.isParallelToolCalls()"
  summary: "Get the parallel<wbr>Tool<wbr>Calls property: The parallel\\_tool\\_calls property."
  syntax: "public boolean isParallelToolCalls()"
  desc: "Get the parallelToolCalls property: The parallel\\_tool\\_calls property."
  returns:
    description: "the parallelToolCalls value."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.openai.responses.models.ResponsesResponse.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.ai.openai.responses.models.ResponsesResponse.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "ResponsesResponse.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The ResponsesResponse model."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.openai.responses.models.ResponsesResponse?alt=com.azure.ai.openai.responses.models.ResponsesResponse&text=ResponsesResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.ai.openai.responses.models"
artifact: com.azure:azure-ai-openai:1.0.0-beta.15
