### YamlMime:JavaType
uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource"
fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource"
name: "LinkerResource"
nameWithType: "LinkerResource"
summary: "An immutable client-side representation of LinkerResource."
syntax: "public interface LinkerResource"
methods:
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.authInfo()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.authInfo()"
  name: "authInfo()"
  nameWithType: "LinkerResource.authInfo()"
  summary: "Gets the authInfo property: The authentication type."
  modifiers:
  - "abstract"
  syntax: "public abstract AuthInfoBase authInfo()"
  returns:
    description: "the authInfo value."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.AuthInfoBase?alt=com.azure.resourcemanager.servicelinker.models.AuthInfoBase&text=AuthInfoBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.clientType()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.clientType()"
  name: "clientType()"
  nameWithType: "LinkerResource.clientType()"
  summary: "Gets the clientType property: The application client type."
  modifiers:
  - "abstract"
  syntax: "public abstract ClientType clientType()"
  returns:
    description: "the clientType value."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.ClientType?alt=com.azure.resourcemanager.servicelinker.models.ClientType&text=ClientType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.id()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.id()"
  name: "id()"
  nameWithType: "LinkerResource.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.innerModel()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.innerModel()"
  name: "innerModel()"
  nameWithType: "LinkerResource.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.servicelinker.fluent.models.LinkerResourceInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract LinkerResourceInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.fluent.models.LinkerResourceInner?alt=com.azure.resourcemanager.servicelinker.fluent.models.LinkerResourceInner&text=LinkerResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.listConfigurations()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.listConfigurations()"
  name: "listConfigurations()"
  nameWithType: "LinkerResource.listConfigurations()"
  summary: "list source configurations for a linker."
  modifiers:
  - "abstract"
  syntax: "public abstract SourceConfigurationResult listConfigurations()"
  returns:
    description: "configurations for source resource, include appSettings, connectionString and serviceBindings."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.SourceConfigurationResult?alt=com.azure.resourcemanager.servicelinker.models.SourceConfigurationResult&text=SourceConfigurationResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.listConfigurationsWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.listConfigurationsWithResponse(Context context)"
  name: "listConfigurationsWithResponse(Context context)"
  nameWithType: "LinkerResource.listConfigurationsWithResponse(Context context)"
  summary: "list source configurations for a linker."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SourceConfigurationResult> listConfigurationsWithResponse(Context context)"
  returns:
    description: "configurations for source resource, include appSettings, connectionString and serviceBindings along with\n     <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.servicelinker.models.SourceConfigurationResult?alt=com.azure.resourcemanager.servicelinker.models.SourceConfigurationResult&text=SourceConfigurationResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.name()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.name()"
  name: "name()"
  nameWithType: "LinkerResource.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.provisioningState()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.provisioningState()"
  name: "provisioningState()"
  nameWithType: "LinkerResource.provisioningState()"
  summary: "Gets the provisioningState property: The provisioning state."
  modifiers:
  - "abstract"
  syntax: "public abstract String provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.refresh()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.refresh()"
  name: "refresh()"
  nameWithType: "LinkerResource.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract LinkerResource refresh()"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.LinkerResource?alt=com.azure.resourcemanager.servicelinker.models.LinkerResource&text=LinkerResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "LinkerResource.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract LinkerResource refresh(Context context)"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.LinkerResource?alt=com.azure.resourcemanager.servicelinker.models.LinkerResource&text=LinkerResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.scope()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.scope()"
  name: "scope()"
  nameWithType: "LinkerResource.scope()"
  summary: "Gets the scope property: connection scope in source service."
  modifiers:
  - "abstract"
  syntax: "public abstract String scope()"
  returns:
    description: "the scope value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.secretStore()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.secretStore()"
  name: "secretStore()"
  nameWithType: "LinkerResource.secretStore()"
  summary: "Gets the secretStore property: An option to store secret value in secure place."
  modifiers:
  - "abstract"
  syntax: "public abstract SecretStore secretStore()"
  returns:
    description: "the secretStore value."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.SecretStore?alt=com.azure.resourcemanager.servicelinker.models.SecretStore&text=SecretStore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.systemData()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.systemData()"
  name: "systemData()"
  nameWithType: "LinkerResource.systemData()"
  summary: "Gets the systemData property: The system data."
  modifiers:
  - "abstract"
  syntax: "public abstract SystemData systemData()"
  returns:
    description: "the systemData value."
    type: "<xref href=\"com.azure.core.management.SystemData?alt=com.azure.core.management.SystemData&text=SystemData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.targetService()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.targetService()"
  name: "targetService()"
  nameWithType: "LinkerResource.targetService()"
  summary: "Gets the targetService property: The target service properties."
  modifiers:
  - "abstract"
  syntax: "public abstract TargetServiceBase targetService()"
  returns:
    description: "the targetService value."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.TargetServiceBase?alt=com.azure.resourcemanager.servicelinker.models.TargetServiceBase&text=TargetServiceBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.type()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.type()"
  name: "type()"
  nameWithType: "LinkerResource.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.update()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.update()"
  name: "update()"
  nameWithType: "LinkerResource.update()"
  summary: "Begins update for the LinkerResource resource."
  modifiers:
  - "abstract"
  syntax: "public abstract LinkerResource.Update update()"
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.LinkerResource.Update?alt=com.azure.resourcemanager.servicelinker.models.LinkerResource.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.vNetSolution()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.vNetSolution()"
  name: "vNetSolution()"
  nameWithType: "LinkerResource.vNetSolution()"
  summary: "Gets the vNetSolution property: The VNet solution."
  modifiers:
  - "abstract"
  syntax: "public abstract VNetSolution vNetSolution()"
  returns:
    description: "the vNetSolution value."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.VNetSolution?alt=com.azure.resourcemanager.servicelinker.models.VNetSolution&text=VNetSolution\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.validate()"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.validate()"
  name: "validate()"
  nameWithType: "LinkerResource.validate()"
  summary: "Validate a link."
  modifiers:
  - "abstract"
  syntax: "public abstract ValidateOperationResult validate()"
  returns:
    description: "the validation operation result for a linker."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.ValidateOperationResult?alt=com.azure.resourcemanager.servicelinker.models.ValidateOperationResult&text=ValidateOperationResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.models.LinkerResource.validate(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.servicelinker.models.LinkerResource.validate(Context context)"
  name: "validate(Context context)"
  nameWithType: "LinkerResource.validate(Context context)"
  summary: "Validate a link."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ValidateOperationResult validate(Context context)"
  returns:
    description: "the validation operation result for a linker."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.ValidateOperationResult?alt=com.azure.resourcemanager.servicelinker.models.ValidateOperationResult&text=ValidateOperationResult\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.servicelinker.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicelinker:1.0.0-beta.2
