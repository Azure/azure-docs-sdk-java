### YamlMime:JavaMember
uid: "com.fasterxml.jackson.annotation.JsonSetter.Value.construct*"
fullName: "com.fasterxml.jackson.annotation.JsonSetter.Value.construct"
name: "construct"
nameWithType: "JsonSetter.Value.construct"
members:
- uid: "com.fasterxml.jackson.annotation.JsonSetter.Value.construct(com.fasterxml.jackson.annotation.Nulls,com.fasterxml.jackson.annotation.Nulls)"
  fullName: "com.fasterxml.jackson.annotation.JsonSetter.Value.construct(Nulls nulls, Nulls contentNulls)"
  name: "construct(Nulls nulls, Nulls contentNulls)"
  nameWithType: "JsonSetter.Value.construct(Nulls nulls, Nulls contentNulls)"
  summary: "Factory method that may be used (although is NOT the recommended way) to construct an instance from a full set of properties. Most users would be better of starting by <xref uid=\"com.fasterxml.jackson.annotation.JsonSetter.Value.empty()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#empty()\"></xref> instance and using \\`withXxx\\`/\\`withoutXxx\\` methods, as this factory method may need to be changed if new properties are added in <xref uid=\"com.fasterxml.jackson.annotation.JsonIgnoreProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonIgnoreProperties\"></xref> annotation."
  parameters:
  - name: "nulls"
    type: "<xref href=\"com.fasterxml.jackson.annotation.Nulls?alt=com.fasterxml.jackson.annotation.Nulls&text=Nulls\" data-throw-if-not-resolved=\"False\" />"
  - name: "contentNulls"
    type: "<xref href=\"com.fasterxml.jackson.annotation.Nulls?alt=com.fasterxml.jackson.annotation.Nulls&text=Nulls\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static JsonSetter.Value construct(Nulls nulls, Nulls contentNulls)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonSetter.Value?alt=com.fasterxml.jackson.annotation.JsonSetter.Value&text=Value\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
