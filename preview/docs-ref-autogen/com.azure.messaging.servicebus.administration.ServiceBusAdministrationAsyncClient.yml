### YamlMime:JavaType
uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient"
fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient"
name: "ServiceBusAdministrationAsyncClient"
nameWithType: "ServiceBusAdministrationAsyncClient"
summary: "An **asynchronous** client for managing a Service Bus namespace."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ServiceBusAdministrationAsyncClient**"
methods:
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createQueue(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createQueue(String queueName)"
  name: "createQueue(String queueName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createQueue(String queueName)"
  summary: "Creates a queue with the given name."
  parameters:
  - description: "Name of the queue to create."
    name: "queueName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<QueueProperties> createQueue(String queueName)"
  desc: "Creates a queue with the given name."
  returns:
    description: "A Mono that completes with information about the created queue."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createQueue(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateQueueOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createQueue(String queueName, CreateQueueOptions queueOptions)"
  name: "createQueue(String queueName, CreateQueueOptions queueOptions)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createQueue(String queueName, CreateQueueOptions queueOptions)"
  summary: "Creates a queue with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateQueueOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateQueueOptions\"></xref> and given queue name."
  parameters:
  - description: "Name of the queue to create."
    name: "queueName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Options about the queue to create."
    name: "queueOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateQueueOptions?alt=com.azure.messaging.servicebus.administration.models.CreateQueueOptions&text=CreateQueueOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<QueueProperties> createQueue(String queueName, CreateQueueOptions queueOptions)"
  desc: "Creates a queue with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateQueueOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateQueueOptions\"></xref> and given queue name."
  returns:
    description: "A Mono that completes with information about the created queue."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createQueueWithResponse(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateQueueOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createQueueWithResponse(String queueName, CreateQueueOptions queueOptions)"
  name: "createQueueWithResponse(String queueName, CreateQueueOptions queueOptions)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createQueueWithResponse(String queueName, CreateQueueOptions queueOptions)"
  summary: "Creates a queue and returns the created queue in addition to the HTTP response."
  parameters:
  - description: "Name of the queue to create."
    name: "queueName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Options about the queue to create."
    name: "queueOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateQueueOptions?alt=com.azure.messaging.servicebus.administration.models.CreateQueueOptions&text=CreateQueueOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<QueueProperties>> createQueueWithResponse(String queueName, CreateQueueOptions queueOptions)"
  desc: "Creates a queue and returns the created queue in addition to the HTTP response."
  returns:
    description: "A Mono that returns the created queue in addition to the HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createRule(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createRule(String topicName, String subscriptionName, String ruleName)"
  name: "createRule(String topicName, String subscriptionName, String ruleName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createRule(String topicName, String subscriptionName, String ruleName)"
  summary: "Creates a rule under the given topic and subscription"
  parameters:
  - description: "Name of the topic associated with rule."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the subscription associated with the rule."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the rule."
    name: "ruleName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<RuleProperties> createRule(String topicName, String subscriptionName, String ruleName)"
  desc: "Creates a rule under the given topic and subscription"
  returns:
    description: "A Mono that completes with information about the created rule."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createRule(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateRuleOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createRule(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions)"
  name: "createRule(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createRule(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions)"
  summary: "Creates a rule with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateRuleOptions\"></xref>."
  parameters:
  - description: "Name of the topic associated with rule."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the subscription associated with the rule."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the rule."
    name: "ruleName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Information about the rule to create."
    name: "ruleOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions?alt=com.azure.messaging.servicebus.administration.models.CreateRuleOptions&text=CreateRuleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<RuleProperties> createRule(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions)"
  desc: "Creates a rule with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateRuleOptions\"></xref>."
  returns:
    description: "A Mono that completes with information about the created rule."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createRuleWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateRuleOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createRuleWithResponse(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions)"
  name: "createRuleWithResponse(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createRuleWithResponse(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions)"
  summary: "Creates a rule and returns the created rule in addition to the HTTP response."
  parameters:
  - description: "Name of the topic associated with rule."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the subscription associated with the rule."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the rule."
    name: "ruleName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Information about the rule to create."
    name: "ruleOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions?alt=com.azure.messaging.servicebus.administration.models.CreateRuleOptions&text=CreateRuleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<RuleProperties>> createRuleWithResponse(String topicName, String subscriptionName, String ruleName, CreateRuleOptions ruleOptions)"
  desc: "Creates a rule and returns the created rule in addition to the HTTP response."
  returns:
    description: "A Mono that returns the created rule in addition to the HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createSubscription(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createSubscription(String topicName, String subscriptionName)"
  name: "createSubscription(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createSubscription(String topicName, String subscriptionName)"
  summary: "Creates a subscription with the given topic and subscription names."
  parameters:
  - description: "Name of the topic associated with subscription."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<SubscriptionProperties> createSubscription(String topicName, String subscriptionName)"
  desc: "Creates a subscription with the given topic and subscription names."
  returns:
    description: "A Mono that completes with information about the created subscription."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createSubscription(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createSubscription(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)"
  name: "createSubscription(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createSubscription(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)"
  summary: "Creates a subscription with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateSubscriptionOptions\"></xref>."
  parameters:
  - description: "Name of the topic associated with subscription."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Information about the subscription to create."
    name: "subscriptionOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions?alt=com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions&text=CreateSubscriptionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SubscriptionProperties> createSubscription(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)"
  desc: "Creates a subscription with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateSubscriptionOptions\"></xref>."
  returns:
    description: "A Mono that completes with information about the created subscription."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createSubscription(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions,com.azure.messaging.servicebus.administration.models.CreateRuleOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createSubscription(String topicName, String subscriptionName, String ruleName, CreateSubscriptionOptions subscriptionOptions, CreateRuleOptions ruleOptions)"
  name: "createSubscription(String topicName, String subscriptionName, String ruleName, CreateSubscriptionOptions subscriptionOptions, CreateRuleOptions ruleOptions)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createSubscription(String topicName, String subscriptionName, String ruleName, CreateSubscriptionOptions subscriptionOptions, CreateRuleOptions ruleOptions)"
  summary: "Creates a subscription with a default rule using <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateSubscriptionOptions\"></xref> and <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateRuleOptions\"></xref>."
  parameters:
  - description: "Name of the topic associated with subscription."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the default rule the subscription should be created with."
    name: "ruleName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateSubscriptionOptions\"></xref> object describing the subscription to create."
    name: "subscriptionOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions?alt=com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions&text=CreateSubscriptionOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "A <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateRuleOptions\"></xref> object describing the default rule.\n                    If null, then pass-through filter will be created."
    name: "ruleOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions?alt=com.azure.messaging.servicebus.administration.models.CreateRuleOptions&text=CreateRuleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SubscriptionProperties> createSubscription(String topicName, String subscriptionName, String ruleName, CreateSubscriptionOptions subscriptionOptions, CreateRuleOptions ruleOptions)"
  desc: "Creates a subscription with a default rule using <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateSubscriptionOptions\"></xref> and <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateRuleOptions\"></xref>."
  returns:
    description: "A Mono that completes with information about the created subscription."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createSubscriptionWithResponse(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createSubscriptionWithResponse(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)"
  name: "createSubscriptionWithResponse(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createSubscriptionWithResponse(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)"
  summary: "Creates a subscription and returns the created subscription in addition to the HTTP response."
  parameters:
  - description: "Name of the topic associated with subscription."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Information about the subscription to create."
    name: "subscriptionOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions?alt=com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions&text=CreateSubscriptionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SubscriptionProperties>> createSubscriptionWithResponse(String topicName, String subscriptionName, CreateSubscriptionOptions subscriptionOptions)"
  desc: "Creates a subscription and returns the created subscription in addition to the HTTP response."
  returns:
    description: "A Mono that returns the created subscription in addition to the HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createSubscriptionWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions,com.azure.messaging.servicebus.administration.models.CreateRuleOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createSubscriptionWithResponse(String topicName, String subscriptionName, String ruleName, CreateSubscriptionOptions subscriptionOptions, CreateRuleOptions ruleOptions)"
  name: "createSubscriptionWithResponse(String topicName, String subscriptionName, String ruleName, CreateSubscriptionOptions subscriptionOptions, CreateRuleOptions ruleOptions)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createSubscriptionWithResponse(String topicName, String subscriptionName, String ruleName, CreateSubscriptionOptions subscriptionOptions, CreateRuleOptions ruleOptions)"
  summary: "Creates a subscription with default rule and returns the created subscription in addition to the HTTP response."
  parameters:
  - description: "Name of the topic associated with subscription."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the default rule the subscription should be created with."
    name: "ruleName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateSubscriptionOptions\"></xref> object describing the subscription to create."
    name: "subscriptionOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions?alt=com.azure.messaging.servicebus.administration.models.CreateSubscriptionOptions&text=CreateSubscriptionOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "A <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateRuleOptions\"></xref> object describing the default rule.\n                    If null, then pass-through filter will be created."
    name: "ruleOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateRuleOptions?alt=com.azure.messaging.servicebus.administration.models.CreateRuleOptions&text=CreateRuleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SubscriptionProperties>> createSubscriptionWithResponse(String topicName, String subscriptionName, String ruleName, CreateSubscriptionOptions subscriptionOptions, CreateRuleOptions ruleOptions)"
  desc: "Creates a subscription with default rule and returns the created subscription in addition to the HTTP response."
  returns:
    description: "A Mono that returns the created subscription in addition to the HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createTopic(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createTopic(String topicName)"
  name: "createTopic(String topicName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createTopic(String topicName)"
  summary: "Creates a topic with the given name."
  parameters:
  - description: "Name of the topic to create."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<TopicProperties> createTopic(String topicName)"
  desc: "Creates a topic with the given name."
  returns:
    description: "A Mono that completes with information about the created topic."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createTopic(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateTopicOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createTopic(String topicName, CreateTopicOptions topicOptions)"
  name: "createTopic(String topicName, CreateTopicOptions topicOptions)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createTopic(String topicName, CreateTopicOptions topicOptions)"
  summary: "Creates a topic with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateTopicOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateTopicOptions\"></xref>."
  parameters:
  - description: "Name of the topic to create."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options used to create the topic."
    name: "topicOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateTopicOptions?alt=com.azure.messaging.servicebus.administration.models.CreateTopicOptions&text=CreateTopicOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<TopicProperties> createTopic(String topicName, CreateTopicOptions topicOptions)"
  desc: "Creates a topic with the <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateTopicOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateTopicOptions\"></xref>."
  returns:
    description: "A Mono that completes with information about the created topic."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createTopicWithResponse(java.lang.String,com.azure.messaging.servicebus.administration.models.CreateTopicOptions)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.createTopicWithResponse(String topicName, CreateTopicOptions topicOptions)"
  name: "createTopicWithResponse(String topicName, CreateTopicOptions topicOptions)"
  nameWithType: "ServiceBusAdministrationAsyncClient.createTopicWithResponse(String topicName, CreateTopicOptions topicOptions)"
  summary: "Creates a topic and returns the created topic in addition to the HTTP response."
  parameters:
  - description: "Name of the topic to create."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options used to create the topic."
    name: "topicOptions"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.CreateTopicOptions?alt=com.azure.messaging.servicebus.administration.models.CreateTopicOptions&text=CreateTopicOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<TopicProperties>> createTopicWithResponse(String topicName, CreateTopicOptions topicOptions)"
  desc: "Creates a topic and returns the created topic in addition to the HTTP response."
  returns:
    description: "A Mono that returns the created topic in addition to the HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteQueue(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteQueue(String queueName)"
  name: "deleteQueue(String queueName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.deleteQueue(String queueName)"
  summary: "Deletes a queue the matching `queueName`."
  parameters:
  - description: "Name of queue to delete."
    name: "queueName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteQueue(String queueName)"
  desc: "Deletes a queue the matching `queueName`."
  returns:
    description: "A Mono that completes when the queue is deleted."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteQueueWithResponse(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteQueueWithResponse(String queueName)"
  name: "deleteQueueWithResponse(String queueName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.deleteQueueWithResponse(String queueName)"
  summary: "Deletes a queue the matching `queueName` and returns the HTTP response."
  parameters:
  - description: "Name of queue to delete."
    name: "queueName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> deleteQueueWithResponse(String queueName)"
  desc: "Deletes a queue the matching `queueName` and returns the HTTP response."
  returns:
    description: "A Mono that completes when the queue is deleted and returns the HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteRule(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteRule(String topicName, String subscriptionName, String ruleName)"
  name: "deleteRule(String topicName, String subscriptionName, String ruleName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.deleteRule(String topicName, String subscriptionName, String ruleName)"
  summary: "Deletes a rule the matching `ruleName`."
  parameters:
  - description: "Name of topic associated with rule to delete."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the subscription associated with the rule to delete."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of rule to delete."
    name: "ruleName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteRule(String topicName, String subscriptionName, String ruleName)"
  desc: "Deletes a rule the matching `ruleName`."
  returns:
    description: "A Mono that completes when the rule is deleted."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteRuleWithResponse(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteRuleWithResponse(String topicName, String subscriptionName, String ruleName)"
  name: "deleteRuleWithResponse(String topicName, String subscriptionName, String ruleName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.deleteRuleWithResponse(String topicName, String subscriptionName, String ruleName)"
  summary: "Deletes a rule the matching `ruleName` and returns the HTTP response."
  parameters:
  - description: "Name of topic associated with rule to delete."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the subscription associated with the rule to delete."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of rule to delete."
    name: "ruleName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> deleteRuleWithResponse(String topicName, String subscriptionName, String ruleName)"
  desc: "Deletes a rule the matching `ruleName` and returns the HTTP response."
  returns:
    description: "A Mono that completes when the rule is deleted and returns the HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteSubscription(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteSubscription(String topicName, String subscriptionName)"
  name: "deleteSubscription(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.deleteSubscription(String topicName, String subscriptionName)"
  summary: "Deletes a subscription the matching `subscriptionName`."
  parameters:
  - description: "Name of topic associated with subscription to delete."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of subscription to delete."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteSubscription(String topicName, String subscriptionName)"
  desc: "Deletes a subscription the matching `subscriptionName`."
  returns:
    description: "A Mono that completes when the subscription is deleted."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteSubscriptionWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteSubscriptionWithResponse(String topicName, String subscriptionName)"
  name: "deleteSubscriptionWithResponse(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.deleteSubscriptionWithResponse(String topicName, String subscriptionName)"
  summary: "Deletes a subscription the matching `subscriptionName` and returns the HTTP response."
  parameters:
  - description: "Name of topic associated with subscription to delete."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of subscription to delete."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> deleteSubscriptionWithResponse(String topicName, String subscriptionName)"
  desc: "Deletes a subscription the matching `subscriptionName` and returns the HTTP response."
  returns:
    description: "A Mono that completes when the subscription is deleted and returns the HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteTopic(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteTopic(String topicName)"
  name: "deleteTopic(String topicName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.deleteTopic(String topicName)"
  summary: "Deletes a topic the matching `topicName`."
  parameters:
  - description: "Name of topic to delete."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteTopic(String topicName)"
  desc: "Deletes a topic the matching `topicName`."
  returns:
    description: "A Mono that completes when the topic is deleted."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteTopicWithResponse(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.deleteTopicWithResponse(String topicName)"
  name: "deleteTopicWithResponse(String topicName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.deleteTopicWithResponse(String topicName)"
  summary: "Deletes a topic the matching `topicName` and returns the HTTP response."
  parameters:
  - description: "Name of topic to delete."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> deleteTopicWithResponse(String topicName)"
  desc: "Deletes a topic the matching `topicName` and returns the HTTP response."
  returns:
    description: "A Mono that completes when the topic is deleted and returns the HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getNamespaceProperties()"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getNamespaceProperties()"
  name: "getNamespaceProperties()"
  nameWithType: "ServiceBusAdministrationAsyncClient.getNamespaceProperties()"
  summary: "Gets information about the Service Bus namespace."
  syntax: "public Mono<NamespaceProperties> getNamespaceProperties()"
  desc: "Gets information about the Service Bus namespace."
  returns:
    description: "A Mono that completes with information about the Service Bus namespace."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.NamespaceProperties?alt=com.azure.messaging.servicebus.administration.models.NamespaceProperties&text=NamespaceProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getNamespacePropertiesWithResponse()"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getNamespacePropertiesWithResponse()"
  name: "getNamespacePropertiesWithResponse()"
  nameWithType: "ServiceBusAdministrationAsyncClient.getNamespacePropertiesWithResponse()"
  summary: "Gets information about the Service Bus namespace along with its HTTP response."
  syntax: "public Mono<Response<NamespaceProperties>> getNamespacePropertiesWithResponse()"
  desc: "Gets information about the Service Bus namespace along with its HTTP response."
  returns:
    description: "A Mono that completes with information about the namespace and the associated HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.NamespaceProperties?alt=com.azure.messaging.servicebus.administration.models.NamespaceProperties&text=NamespaceProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueue(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueue(String queueName)"
  name: "getQueue(String queueName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getQueue(String queueName)"
  summary: "Gets information about the queue."
  parameters:
  - description: "Name of queue to get information about."
    name: "queueName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<QueueProperties> getQueue(String queueName)"
  desc: "Gets information about the queue."
  returns:
    description: "A Mono that completes with information about the queue."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueueExists(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueueExists(String queueName)"
  name: "getQueueExists(String queueName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getQueueExists(String queueName)"
  summary: "Gets whether or not a queue with `queueName` exists in the Service Bus namespace."
  parameters:
  - description: "Name of the queue."
    name: "queueName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Boolean> getQueueExists(String queueName)"
  desc: "Gets whether or not a queue with `queueName` exists in the Service Bus namespace."
  returns:
    description: "A Mono that completes indicating whether the queue exists."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueueExistsWithResponse(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueueExistsWithResponse(String queueName)"
  name: "getQueueExistsWithResponse(String queueName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getQueueExistsWithResponse(String queueName)"
  summary: "Gets whether or not a queue with `queueName` exists in the Service Bus namespace."
  parameters:
  - description: "Name of the queue."
    name: "queueName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Boolean>> getQueueExistsWithResponse(String queueName)"
  desc: "Gets whether or not a queue with `queueName` exists in the Service Bus namespace."
  returns:
    description: "A Mono that completes indicating whether or not the queue exists along with its HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueueRuntimeProperties(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueueRuntimeProperties(String queueName)"
  name: "getQueueRuntimeProperties(String queueName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getQueueRuntimeProperties(String queueName)"
  summary: "Gets runtime properties about the queue."
  parameters:
  - description: "Name of queue to get information about."
    name: "queueName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<QueueRuntimeProperties> getQueueRuntimeProperties(String queueName)"
  desc: "Gets runtime properties about the queue."
  returns:
    description: "A Mono that completes with runtime properties about the queue."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties?alt=com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties&text=QueueRuntimeProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueueRuntimePropertiesWithResponse(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueueRuntimePropertiesWithResponse(String queueName)"
  name: "getQueueRuntimePropertiesWithResponse(String queueName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getQueueRuntimePropertiesWithResponse(String queueName)"
  summary: "Gets runtime properties about the queue along with its HTTP response."
  parameters:
  - description: "Name of queue to get information about."
    name: "queueName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<QueueRuntimeProperties>> getQueueRuntimePropertiesWithResponse(String queueName)"
  desc: "Gets runtime properties about the queue along with its HTTP response."
  returns:
    description: "A Mono that completes with runtime properties about the queue and the associated HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties?alt=com.azure.messaging.servicebus.administration.models.QueueRuntimeProperties&text=QueueRuntimeProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueueWithResponse(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueueWithResponse(String queueName)"
  name: "getQueueWithResponse(String queueName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getQueueWithResponse(String queueName)"
  summary: "Gets information about the queue along with its HTTP response."
  parameters:
  - description: "Name of queue to get information about."
    name: "queueName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<QueueProperties>> getQueueWithResponse(String queueName)"
  desc: "Gets information about the queue along with its HTTP response."
  returns:
    description: "A Mono that completes with information about the queue and the associated HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getRule(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getRule(String topicName, String subscriptionName, String ruleName)"
  name: "getRule(String topicName, String subscriptionName, String ruleName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getRule(String topicName, String subscriptionName, String ruleName)"
  summary: "Gets a rule from the service namespace."
  parameters:
  - description: "The name of the topic relative to service bus namespace."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The subscription name the rule belongs to."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the rule to retrieve."
    name: "ruleName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<RuleProperties> getRule(String topicName, String subscriptionName, String ruleName)"
  desc: "Gets a rule from the service namespace. Only following data types are deserialized in Filters and Action parameters - string, int, long, boolean, double, and OffsetDateTime. Other data types would return its string value."
  returns:
    description: "The associated rule."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getRuleWithResponse(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getRuleWithResponse(String topicName, String subscriptionName, String ruleName)"
  name: "getRuleWithResponse(String topicName, String subscriptionName, String ruleName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getRuleWithResponse(String topicName, String subscriptionName, String ruleName)"
  summary: "Gets a rule from the service namespace."
  parameters:
  - description: "The name of the topic relative to service bus namespace."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The subscription name the rule belongs to."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the rule to retrieve."
    name: "ruleName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<RuleProperties>> getRuleWithResponse(String topicName, String subscriptionName, String ruleName)"
  desc: "Gets a rule from the service namespace. Only following data types are deserialized in Filters and Action parameters - string, int, long, bool, double, and OffsetDateTime. Other data types would return its string value."
  returns:
    description: "The associated rule with the corresponding HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscription(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscription(String topicName, String subscriptionName)"
  name: "getSubscription(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getSubscription(String topicName, String subscriptionName)"
  summary: "Gets information about the queue."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of subscription to get information about."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<SubscriptionProperties> getSubscription(String topicName, String subscriptionName)"
  desc: "Gets information about the queue."
  returns:
    description: "A Mono that completes with information about the subscription."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionExists(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionExists(String topicName, String subscriptionName)"
  name: "getSubscriptionExists(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getSubscriptionExists(String topicName, String subscriptionName)"
  summary: "Gets whether or not a subscription within a topic exists."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Boolean> getSubscriptionExists(String topicName, String subscriptionName)"
  desc: "Gets whether or not a subscription within a topic exists."
  returns:
    description: "A Mono that completes indicating whether or not the subscription exists."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionExistsWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionExistsWithResponse(String topicName, String subscriptionName)"
  name: "getSubscriptionExistsWithResponse(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getSubscriptionExistsWithResponse(String topicName, String subscriptionName)"
  summary: "Gets whether or not a subscription within a topic exists."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the subscription."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Boolean>> getSubscriptionExistsWithResponse(String topicName, String subscriptionName)"
  desc: "Gets whether or not a subscription within a topic exists."
  returns:
    description: "A Mono that completes indicating whether the subscription exists along with its HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionRuntimeProperties(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionRuntimeProperties(String topicName, String subscriptionName)"
  name: "getSubscriptionRuntimeProperties(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getSubscriptionRuntimeProperties(String topicName, String subscriptionName)"
  summary: "Gets runtime properties about the subscription."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of subscription to get information about."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<SubscriptionRuntimeProperties> getSubscriptionRuntimeProperties(String topicName, String subscriptionName)"
  desc: "Gets runtime properties about the subscription."
  returns:
    description: "A Mono that completes with runtime properties about the subscription."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties&text=SubscriptionRuntimeProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionRuntimePropertiesWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionRuntimePropertiesWithResponse(String topicName, String subscriptionName)"
  name: "getSubscriptionRuntimePropertiesWithResponse(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getSubscriptionRuntimePropertiesWithResponse(String topicName, String subscriptionName)"
  summary: "Gets runtime properties about the subscription."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of subscription to get information about."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<SubscriptionRuntimeProperties>> getSubscriptionRuntimePropertiesWithResponse(String topicName, String subscriptionName)"
  desc: "Gets runtime properties about the subscription."
  returns:
    description: "A Mono that completes with runtime properties about the subscription."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionRuntimeProperties&text=SubscriptionRuntimeProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscriptionWithResponse(String topicName, String subscriptionName)"
  name: "getSubscriptionWithResponse(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getSubscriptionWithResponse(String topicName, String subscriptionName)"
  summary: "Gets information about the subscription along with its HTTP response."
  parameters:
  - description: "Name of topic associated with subscription."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of subscription to get information about."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<SubscriptionProperties>> getSubscriptionWithResponse(String topicName, String subscriptionName)"
  desc: "Gets information about the subscription along with its HTTP response."
  returns:
    description: "A Mono that completes with information about the subscription and the associated HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopic(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopic(String topicName)"
  name: "getTopic(String topicName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getTopic(String topicName)"
  summary: "Gets information about the topic."
  parameters:
  - description: "Name of topic to get information about."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<TopicProperties> getTopic(String topicName)"
  desc: "Gets information about the topic."
  returns:
    description: "A Mono that completes with information about the topic."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopicExists(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopicExists(String topicName)"
  name: "getTopicExists(String topicName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getTopicExists(String topicName)"
  summary: "Gets whether or not a topic with `topicName` exists in the Service Bus namespace."
  parameters:
  - description: "Name of the topic."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Boolean> getTopicExists(String topicName)"
  desc: "Gets whether or not a topic with `topicName` exists in the Service Bus namespace."
  returns:
    description: "A Mono that completes indicating whether or not the topic exists."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopicExistsWithResponse(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopicExistsWithResponse(String topicName)"
  name: "getTopicExistsWithResponse(String topicName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getTopicExistsWithResponse(String topicName)"
  summary: "Gets whether or not a topic with `topicName` exists in the Service Bus namespace."
  parameters:
  - description: "Name of the topic."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Boolean>> getTopicExistsWithResponse(String topicName)"
  desc: "Gets whether or not a topic with `topicName` exists in the Service Bus namespace."
  returns:
    description: "A Mono that completes indicating whether the topic exists along with its HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopicRuntimeProperties(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopicRuntimeProperties(String topicName)"
  name: "getTopicRuntimeProperties(String topicName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getTopicRuntimeProperties(String topicName)"
  summary: "Gets runtime properties about the topic."
  parameters:
  - description: "Name of topic to get information about."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<TopicRuntimeProperties> getTopicRuntimeProperties(String topicName)"
  desc: "Gets runtime properties about the topic."
  returns:
    description: "A Mono that completes with runtime properties about the topic."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties?alt=com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties&text=TopicRuntimeProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopicRuntimePropertiesWithResponse(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopicRuntimePropertiesWithResponse(String topicName)"
  name: "getTopicRuntimePropertiesWithResponse(String topicName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getTopicRuntimePropertiesWithResponse(String topicName)"
  summary: "Gets runtime properties about the topic with its HTTP response."
  parameters:
  - description: "Name of topic to get information about."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<TopicRuntimeProperties>> getTopicRuntimePropertiesWithResponse(String topicName)"
  desc: "Gets runtime properties about the topic with its HTTP response."
  returns:
    description: "A Mono that completes with runtime properties about the topic and the associated HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties?alt=com.azure.messaging.servicebus.administration.models.TopicRuntimeProperties&text=TopicRuntimeProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopicWithResponse(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopicWithResponse(String topicName)"
  name: "getTopicWithResponse(String topicName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.getTopicWithResponse(String topicName)"
  summary: "Gets information about the topic along with its HTTP response."
  parameters:
  - description: "Name of topic to get information about."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<TopicProperties>> getTopicWithResponse(String topicName)"
  desc: "Gets information about the topic along with its HTTP response."
  returns:
    description: "A Mono that completes with information about the topic and the associated HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.listQueues()"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.listQueues()"
  name: "listQueues()"
  nameWithType: "ServiceBusAdministrationAsyncClient.listQueues()"
  summary: "Fetches all the queues in the Service Bus namespace."
  syntax: "public PagedFlux<QueueProperties> listQueues()"
  desc: "Fetches all the queues in the Service Bus namespace."
  returns:
    description: "A Flux of <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"queues\"></xref> in the Service Bus namespace."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.listRules(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.listRules(String topicName, String subscriptionName)"
  name: "listRules(String topicName, String subscriptionName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.listRules(String topicName, String subscriptionName)"
  summary: "Fetches all the rules for a topic and subscription."
  parameters:
  - description: "The topic name under which all the rules need to be retrieved."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the subscription for which all rules need to be retrieved."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<RuleProperties> listRules(String topicName, String subscriptionName)"
  desc: "Fetches all the rules for a topic and subscription."
  returns:
    description: "A Flux of <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"rules\"></xref> for the <code>topicName</code> and <code>subscriptionName</code>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.listSubscriptions(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.listSubscriptions(String topicName)"
  name: "listSubscriptions(String topicName)"
  nameWithType: "ServiceBusAdministrationAsyncClient.listSubscriptions(String topicName)"
  summary: "Fetches all the subscriptions for a topic."
  parameters:
  - description: "The topic name under which all the subscriptions need to be retrieved."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<SubscriptionProperties> listSubscriptions(String topicName)"
  desc: "Fetches all the subscriptions for a topic."
  returns:
    description: "A Flux of <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"subscriptions\"></xref> for the <code>topicName</code>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.listTopics()"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.listTopics()"
  name: "listTopics()"
  nameWithType: "ServiceBusAdministrationAsyncClient.listTopics()"
  summary: "Fetches all the topics in the Service Bus namespace."
  syntax: "public PagedFlux<TopicProperties> listTopics()"
  desc: "Fetches all the topics in the Service Bus namespace."
  returns:
    description: "A Flux of <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"topics\"></xref> in the Service Bus namespace."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateQueue(com.azure.messaging.servicebus.administration.models.QueueProperties)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateQueue(QueueProperties queue)"
  name: "updateQueue(QueueProperties queue)"
  nameWithType: "ServiceBusAdministrationAsyncClient.updateQueue(QueueProperties queue)"
  summary: "Updates a queue with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueProperties\"></xref>."
  parameters:
  - description: "Information about the queue to update. You must provide all the property values that are desired\n     on the updated entity. Any values not provided are set to the service default values."
    name: "queue"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<QueueProperties> updateQueue(QueueProperties queue)"
  desc: "Updates a queue with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueue(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get queue description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method.\n\nThere are a subset of properties that can be updated. More information can be found in the links below. They are:\n\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setDefaultMessageTimeToLive(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultMessageTimeToLive\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setLockDuration(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LockDuration\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DuplicateDetectionHistoryTimeWindow\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setMaxDeliveryCount(java.lang.Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MaxDeliveryCount\"></xref>"
  returns:
    description: "A Mono that completes with the updated queue."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateQueueWithResponse(com.azure.messaging.servicebus.administration.models.QueueProperties)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateQueueWithResponse(QueueProperties queue)"
  name: "updateQueueWithResponse(QueueProperties queue)"
  nameWithType: "ServiceBusAdministrationAsyncClient.updateQueueWithResponse(QueueProperties queue)"
  summary: "Updates a queue with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueProperties\"></xref>."
  parameters:
  - description: "Information about the queue to update. You must provide all the property values that are desired\n     on the updated entity. Any values not provided are set to the service default values."
    name: "queue"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<QueueProperties>> updateQueueWithResponse(QueueProperties queue)"
  desc: "Updates a queue with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getQueue(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get queue description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method.\n\nThere are a subset of properties that can be updated. More information can be found in the links below. They are:\n\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setDefaultMessageTimeToLive(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultMessageTimeToLive\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setLockDuration(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LockDuration\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DuplicateDetectionHistoryTimeWindow\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.QueueProperties.setMaxDeliveryCount(java.lang.Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MaxDeliveryCount\"></xref>"
  returns:
    description: "A Mono that returns the updated queue in addition to the HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.QueueProperties?alt=com.azure.messaging.servicebus.administration.models.QueueProperties&text=QueueProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateRule(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.RuleProperties)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateRule(String topicName, String subscriptionName, RuleProperties rule)"
  name: "updateRule(String topicName, String subscriptionName, RuleProperties rule)"
  nameWithType: "ServiceBusAdministrationAsyncClient.updateRule(String topicName, String subscriptionName, RuleProperties rule)"
  summary: "Updates a rule with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleProperties\"></xref>."
  parameters:
  - description: "The topic name under which the rule is updated."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the subscription for which the rule is updated."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Information about the rule to update. You must provide all the property values that are desired\n     on the updated entity. Any values not provided are set to the service default values."
    name: "rule"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<RuleProperties> updateRule(String topicName, String subscriptionName, RuleProperties rule)"
  desc: "Updates a rule with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleProperties\"></xref> must be fully populated as all the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getRule(java.lang.String,java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get rule description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method."
  returns:
    description: "A Mono that returns the updated rule."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateRuleWithResponse(java.lang.String,java.lang.String,com.azure.messaging.servicebus.administration.models.RuleProperties)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateRuleWithResponse(String topicName, String subscriptionName, RuleProperties rule)"
  name: "updateRuleWithResponse(String topicName, String subscriptionName, RuleProperties rule)"
  nameWithType: "ServiceBusAdministrationAsyncClient.updateRuleWithResponse(String topicName, String subscriptionName, RuleProperties rule)"
  summary: "Updates a rule with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleProperties\"></xref>."
  parameters:
  - description: "The topic name under which the rule is updated."
    name: "topicName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the subscription for which the rule is updated."
    name: "subscriptionName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Information about the rule to update. You must provide all the property values that are desired\n     on the updated entity. Any values not provided are set to the service default values."
    name: "rule"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<RuleProperties>> updateRuleWithResponse(String topicName, String subscriptionName, RuleProperties rule)"
  desc: "Updates a rule with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.RuleProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleProperties\"></xref> must be fully populated as all the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getRule(java.lang.String,java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get rule description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method."
  returns:
    description: "A Mono that returns the updated rule in addition to the HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.RuleProperties?alt=com.azure.messaging.servicebus.administration.models.RuleProperties&text=RuleProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateSubscription(com.azure.messaging.servicebus.administration.models.SubscriptionProperties)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateSubscription(SubscriptionProperties subscription)"
  name: "updateSubscription(SubscriptionProperties subscription)"
  nameWithType: "ServiceBusAdministrationAsyncClient.updateSubscription(SubscriptionProperties subscription)"
  summary: "Updates a subscription with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref>."
  parameters:
  - description: "Information about the subscription to update. You must provide all the property values\n     that are desired on the updated entity. Any values not provided are set to the service default values."
    name: "subscription"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SubscriptionProperties> updateSubscription(SubscriptionProperties subscription)"
  desc: "Updates a subscription with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscription(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get subscription description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method.\n\nThere are a subset of properties that can be updated. More information can be found in the links below. They are:\n\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setDefaultMessageTimeToLive(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultMessageTimeToLive\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setLockDuration(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LockDuration\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setMaxDeliveryCount(int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MaxDeliveryCount\"></xref>"
  returns:
    description: "A Mono that returns the updated subscription."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateSubscriptionWithResponse(com.azure.messaging.servicebus.administration.models.SubscriptionProperties)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateSubscriptionWithResponse(SubscriptionProperties subscription)"
  name: "updateSubscriptionWithResponse(SubscriptionProperties subscription)"
  nameWithType: "ServiceBusAdministrationAsyncClient.updateSubscriptionWithResponse(SubscriptionProperties subscription)"
  summary: "Updates a subscription with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref>."
  parameters:
  - description: "Information about the subscription to update. You must provide all the property values\n     that are desired on the updated entity. Any values not provided are set to the service default values."
    name: "subscription"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SubscriptionProperties>> updateSubscriptionWithResponse(SubscriptionProperties subscription)"
  desc: "Updates a subscription with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getSubscription(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get subscription description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method.\n\nThere are a subset of properties that can be updated. More information can be found in the links below. They are:\n\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setDefaultMessageTimeToLive(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultMessageTimeToLive\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setLockDuration(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LockDuration\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties.setMaxDeliveryCount(int)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MaxDeliveryCount\"></xref>"
  returns:
    description: "A Mono that returns the updated subscription in addition to the HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.SubscriptionProperties?alt=com.azure.messaging.servicebus.administration.models.SubscriptionProperties&text=SubscriptionProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateTopic(com.azure.messaging.servicebus.administration.models.TopicProperties)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateTopic(TopicProperties topic)"
  name: "updateTopic(TopicProperties topic)"
  nameWithType: "ServiceBusAdministrationAsyncClient.updateTopic(TopicProperties topic)"
  summary: "Updates a topic with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicProperties\"></xref>."
  parameters:
  - description: "Information about the topic to update. You must provide all the property values that are desired\n     on the updated entity. Any values not provided are set to the service default values."
    name: "topic"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<TopicProperties> updateTopic(TopicProperties topic)"
  desc: "Updates a topic with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopic(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get topic description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method.\n\nThere are a subset of properties that can be updated. More information can be found in the links below. They are:\n\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties.setDefaultMessageTimeToLive(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultMessageTimeToLive\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DuplicateDetectionHistoryTimeWindow\"></xref>"
  returns:
    description: "A Mono that completes with the updated topic."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateTopicWithResponse(com.azure.messaging.servicebus.administration.models.TopicProperties)"
  fullName: "com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.updateTopicWithResponse(TopicProperties topic)"
  name: "updateTopicWithResponse(TopicProperties topic)"
  nameWithType: "ServiceBusAdministrationAsyncClient.updateTopicWithResponse(TopicProperties topic)"
  summary: "Updates a topic with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicProperties\"></xref>."
  parameters:
  - description: "Information about the topic to update. You must provide all the property values that are desired\n     on the updated entity. Any values not provided are set to the service default values."
    name: "topic"
    type: "<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<TopicProperties>> updateTopicWithResponse(TopicProperties topic)"
  desc: "Updates a topic with the given <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicProperties\"></xref>. The <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicProperties\"></xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:\n\n1.  <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationAsyncClient.getTopic(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Get topic description.\"></xref>\n2.  Update the required elements.\n3.  Pass the updated description into this method.\n\nThere are a subset of properties that can be updated. More information can be found in the links below. They are:\n\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties.setDefaultMessageTimeToLive(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DefaultMessageTimeToLive\"></xref>\n *  <xref uid=\"com.azure.messaging.servicebus.administration.models.TopicProperties.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DuplicateDetectionHistoryTimeWindow\"></xref>"
  returns:
    description: "A Mono that completes with the updated topic and its HTTP response."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.servicebus.administration.models.TopicProperties?alt=com.azure.messaging.servicebus.administration.models.TopicProperties&text=TopicProperties\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "An **asynchronous** client for managing a Service Bus namespace. Instantiated via <xref uid=\"com.azure.messaging.servicebus.administration.ServiceBusAdministrationClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusAdministrationClientBuilder\"></xref>.\n\n**Sample: Create the async client**\n\nThe follow code sample demonstrates the creation of the async administration client. The credential used in the following sample is `DefaultAzureCredential` for authentication. It is appropriate for most scenarios, including local development and production environments. Additionally, we recommend using [managed identity][] for authentication in production environments. You can find more information on different ways of authenticating and their corresponding credential types in the [Azure Identity documentation][].\n\n```java\n// DefaultAzureCredential creates a credential based on the environment it is executed in.\n TokenCredential credential = new DefaultAzureCredentialBuilder().build();\n\n // 'fullyQualifiedNamespace' will look similar to \"{your-namespace}.servicebus.windows.net\"\n ServiceBusAdministrationAsyncClient client = new ServiceBusAdministrationClientBuilder()\n     .credential(fullyQualifiedNamespace, new DefaultAzureCredentialBuilder().build())\n     .buildAsyncClient();\n```\n\n**Sample: Create a queue**\n\nThe following sample creates a queue with default values. Default values are listed in <xref uid=\"com.azure.messaging.servicebus.administration.models.CreateQueueOptions.CreateQueueOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateQueueOptions#CreateQueueOptions()\"></xref>.\n\n```java\n// `.subscribe()` is a non-blocking call. It'll move onto the next\n // instruction after setting up the `consumer` and `errorConsumer` callbacks.\n client.createQueue(\"my-new-queue\").subscribe(queue -> {\n     System.out.printf(\"Queue created. Name: %s. Lock Duration: %s.%n\",\n         queue.getName(), queue.getLockDuration());\n }, error -> {\n         System.err.println(\"Error creating queue: \" + error);\n     });\n```\n\n**Sample: Edit an existing subscription**\n\nThe following code sample demonstrates updating an existing subscription. Users should fetch the subscription's properties, modify the properties, and then pass the object to update method.\n\n```java\n// To update the subscription we have to:\n // 1. Get the subscription info from the service.\n // 2. Update the SubscriptionProperties we want to change.\n // 3. Call the updateSubscription() with the updated object.\n\n // `.subscribe()` is a non-blocking call. It'll move onto the next\n // instruction after setting up the `consumer` and `errorConsumer` callbacks.\n client.getSubscription(\"my-topic\", \"my-subscription\")\n     .flatMap(subscription -> {\n         System.out.println(\"Original delivery count: \" + subscription.getMaxDeliveryCount());\n\n         // Updating it to a new value.\n         subscription.setMaxDeliveryCount(5);\n\n         // Persisting the updates to the subscription object.\n         return client.updateSubscription(subscription);\n     })\n     .subscribe(subscription -> {\n         System.out.printf(\"Subscription updated. Name: %s. Delivery count: %s.%n\",\n             subscription.getSubscriptionName(), subscription.getMaxDeliveryCount());\n     }, error -> {\n             System.err.println(\"Error updating subscription: \" + error);\n         });\n```\n\n**Sample: List all queues**\n\nThe code sample below lists all the queues in the Service Bus namespace.\n\n```java\n// `.subscribe()` is a non-blocking call. It'll move onto the next\n // instruction after setting up the `consumer` and `errorConsumer` callbacks.\n client.listQueues().subscribe(queue -> {\n     System.out.printf(\"Queue [%s]. Lock Duration: %s.%n\",\n         queue.getName(), queue.getLockDuration());\n }, error -> {\n         System.err.println(\"Error fetching queues: \" + error);\n     });\n```\n\n**Sample: Delete queue**\n\nThe code sample below demonstrates deleting an existing queue.\n\n```java\n// `.subscribe()` is a non-blocking call. It'll move onto the next\n // instruction after setting up the `consumer`, `errorConsumer`, `completeConsumer` callbacks.\n asyncClient.deleteQueue(\"my-existing-queue\").subscribe(unused -> {\n }, error -> {\n     System.err.println(\"Error deleting queue: \" + error);\n }, () -> {\n     System.out.println(\"Deleted queue.\");\n });\n```\n\n\n[managed identity]: https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/\n[Azure Identity documentation]: https://learn.microsoft.com/java/api/overview/azure/identity-readme"
metadata: {}
package: "com.azure.messaging.servicebus.administration"
artifact: com.azure:azure-messaging-servicebus:7.15.0-beta.4
