### YamlMime:JavaType
uid: "com.azure.resourcemanager.peering.models.PeeringService"
fullName: "com.azure.resourcemanager.peering.models.PeeringService"
name: "PeeringService"
nameWithType: "PeeringService"
summary: "An immutable client-side representation of Peering<wbr>Service."
syntax: "public interface PeeringService"
methods:
- uid: "com.azure.resourcemanager.peering.models.PeeringService.id()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.id()"
  name: "id()"
  nameWithType: "PeeringService.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  desc: "Gets the id property: Fully qualified resource Id for the resource."
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.innerModel()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.innerModel()"
  name: "innerModel()"
  nameWithType: "PeeringService.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>peering.<wbr>fluent.<wbr>models.<wbr>Peering<wbr>Service<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringServiceInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner?alt=com.azure.resourcemanager.peering.fluent.models.PeeringServiceInner&text=PeeringServiceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.location()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.location()"
  name: "location()"
  nameWithType: "PeeringService.location()"
  summary: "Gets the location property: The location of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  desc: "Gets the location property: The location of the resource."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.name()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.name()"
  name: "name()"
  nameWithType: "PeeringService.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "Gets the name property: The name of the resource."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.peeringServiceLocation()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.peeringServiceLocation()"
  name: "peeringServiceLocation()"
  nameWithType: "PeeringService.peeringServiceLocation()"
  summary: "Gets the peering<wbr>Service<wbr>Location property: The location (state/province) of the customer."
  modifiers:
  - "abstract"
  syntax: "public abstract String peeringServiceLocation()"
  desc: "Gets the peeringServiceLocation property: The location (state/province) of the customer."
  returns:
    description: "the peeringServiceLocation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.peeringServiceProvider()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.peeringServiceProvider()"
  name: "peeringServiceProvider()"
  nameWithType: "PeeringService.peeringServiceProvider()"
  summary: "Gets the peering<wbr>Service<wbr>Provider property: The name of the service provider."
  modifiers:
  - "abstract"
  syntax: "public abstract String peeringServiceProvider()"
  desc: "Gets the peeringServiceProvider property: The name of the service provider."
  returns:
    description: "the peeringServiceProvider value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.providerBackupPeeringLocation()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.providerBackupPeeringLocation()"
  name: "providerBackupPeeringLocation()"
  nameWithType: "PeeringService.providerBackupPeeringLocation()"
  summary: "Gets the provider<wbr>Backup<wbr>Peering<wbr>Location property: The backup peering (Microsoft/service provider) location to be used for customer traffic."
  modifiers:
  - "abstract"
  syntax: "public abstract String providerBackupPeeringLocation()"
  desc: "Gets the providerBackupPeeringLocation property: The backup peering (Microsoft/service provider) location to be used for customer traffic."
  returns:
    description: "the providerBackupPeeringLocation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.providerPrimaryPeeringLocation()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.providerPrimaryPeeringLocation()"
  name: "providerPrimaryPeeringLocation()"
  nameWithType: "PeeringService.providerPrimaryPeeringLocation()"
  summary: "Gets the provider<wbr>Primary<wbr>Peering<wbr>Location property: The primary peering (Microsoft/service provider) location to be used for customer traffic."
  modifiers:
  - "abstract"
  syntax: "public abstract String providerPrimaryPeeringLocation()"
  desc: "Gets the providerPrimaryPeeringLocation property: The primary peering (Microsoft/service provider) location to be used for customer traffic."
  returns:
    description: "the providerPrimaryPeeringLocation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.provisioningState()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PeeringService.provisioningState()"
  summary: "Gets the provisioning<wbr>State property: The provisioning state of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  desc: "Gets the provisioningState property: The provisioning state of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.ProvisioningState?alt=com.azure.resourcemanager.peering.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.refresh()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.refresh()"
  name: "refresh()"
  nameWithType: "PeeringService.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringService refresh()"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringService?alt=com.azure.resourcemanager.peering.models.PeeringService&text=PeeringService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "PeeringService.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PeeringService refresh(Context context)"
  desc: "Refreshes the resource to sync with Azure."
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringService?alt=com.azure.resourcemanager.peering.models.PeeringService&text=PeeringService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.region()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.region()"
  name: "region()"
  nameWithType: "PeeringService.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  desc: "Gets the region of the resource."
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.regionName()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.regionName()"
  name: "regionName()"
  nameWithType: "PeeringService.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  desc: "Gets the name of the resource region."
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.sku()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.sku()"
  name: "sku()"
  nameWithType: "PeeringService.sku()"
  summary: "Gets the sku property: The SKU that defines the type of the peering service."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringServiceSku sku()"
  desc: "Gets the sku property: The SKU that defines the type of the peering service."
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringServiceSku?alt=com.azure.resourcemanager.peering.models.PeeringServiceSku&text=PeeringServiceSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.tags()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.tags()"
  name: "tags()"
  nameWithType: "PeeringService.tags()"
  summary: "Gets the tags property: The resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  desc: "Gets the tags property: The resource tags."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.type()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.type()"
  name: "type()"
  nameWithType: "PeeringService.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  desc: "Gets the type property: The type of the resource."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.peering.models.PeeringService.update()"
  fullName: "com.azure.resourcemanager.peering.models.PeeringService.update()"
  name: "update()"
  nameWithType: "PeeringService.update()"
  summary: "Begins update for the Peering<wbr>Service resource."
  modifiers:
  - "abstract"
  syntax: "public abstract PeeringService.Update update()"
  desc: "Begins update for the PeeringService resource."
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.peering.models.PeeringService.Update?alt=com.azure.resourcemanager.peering.models.PeeringService.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of PeeringService."
metadata: {}
package: "com.azure.resourcemanager.peering.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-peering:1.0.0-beta.1
