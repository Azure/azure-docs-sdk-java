### YamlMime:JavaEnum
uid: "com.fasterxml.jackson.core.StreamWriteCapability"
fullName: "com.fasterxml.jackson.core.StreamWriteCapability"
name: "StreamWriteCapability"
nameWithType: "StreamWriteCapability"
summary: "Set of on/off capabilities that a <xref uid=\"com.fasterxml.jackson.core.JsonGenerator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonGenerator\"></xref> for given format (or in case of buffering, original format) has. Used in some cases to adjust aspects of things like content conversions and coercions by format-agnostic functionality. Specific or expected usage documented by individual capability entry Javadocs."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum StreamWriteCapability extends Enum<StreamWriteCapability> implements JacksonFeature"
fields:
- uid: "com.fasterxml.jackson.core.StreamWriteCapability.CAN_WRITE_BINARY_NATIVELY"
  fullName: "com.fasterxml.jackson.core.StreamWriteCapability.CAN_WRITE_BINARY_NATIVELY"
  name: "CAN_WRITE_BINARY_NATIVELY"
  nameWithType: "StreamWriteCapability.CAN_WRITE_BINARY_NATIVELY"
  summary: "Capability that indicates that the data format is able to express binary data natively, without using textual encoding like Base64.\n\nCapability is currently enabled for all binary formats and none of textual formats."
- uid: "com.fasterxml.jackson.core.StreamWriteCapability.CAN_WRITE_FORMATTED_NUMBERS"
  fullName: "com.fasterxml.jackson.core.StreamWriteCapability.CAN_WRITE_FORMATTED_NUMBERS"
  name: "CAN_WRITE_FORMATTED_NUMBERS"
  nameWithType: "StreamWriteCapability.CAN_WRITE_FORMATTED_NUMBERS"
  summary: "Capability that indicates that the data format is able to write \"formatted numbers\": that is, output of numbers is done as Strings and caller is allowed to pass in logical number values as Strings.\n\nCapability is currently enabled for most textual formats and none of binary formats."
methods:
- uid: "com.fasterxml.jackson.core.StreamWriteCapability.enabledByDefault()"
  fullName: "com.fasterxml.jackson.core.StreamWriteCapability.enabledByDefault()"
  name: "enabledByDefault()"
  nameWithType: "StreamWriteCapability.enabledByDefault()"
  summary: "Accessor for checking whether this feature is enabled by default."
  syntax: "public boolean enabledByDefault()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.StreamWriteCapability.enabledIn(int)"
  fullName: "com.fasterxml.jackson.core.StreamWriteCapability.enabledIn(int flags)"
  name: "enabledIn(int flags)"
  nameWithType: "StreamWriteCapability.enabledIn(int flags)"
  summary: "Convenience method for checking whether feature is enabled in given bitmask."
  parameters:
  - name: "flags"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean enabledIn(int flags)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.StreamWriteCapability.getMask()"
  fullName: "com.fasterxml.jackson.core.StreamWriteCapability.getMask()"
  name: "getMask()"
  nameWithType: "StreamWriteCapability.getMask()"
  summary: "Returns bit mask for this feature instance; must be a single bit, that is of form `1 << N`."
  syntax: "public int getMask()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.StreamWriteCapability.valueOf(java.lang.String)"
  fullName: "com.fasterxml.jackson.core.StreamWriteCapability.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "StreamWriteCapability.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static StreamWriteCapability valueOf(String name)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.StreamWriteCapability?alt=com.fasterxml.jackson.core.StreamWriteCapability&text=StreamWriteCapability\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.StreamWriteCapability.values()"
  fullName: "com.fasterxml.jackson.core.StreamWriteCapability.values()"
  name: "values()"
  nameWithType: "StreamWriteCapability.values()"
  syntax: "public static StreamWriteCapability[] values()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.StreamWriteCapability?alt=com.fasterxml.jackson.core.StreamWriteCapability&text=StreamWriteCapability\" data-throw-if-not-resolved=\"False\" />[]"
implements:
- "<xref href=\"com.fasterxml.jackson.core.util.JacksonFeature?alt=com.fasterxml.jackson.core.util.JacksonFeature&text=JacksonFeature\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
