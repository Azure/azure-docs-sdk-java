### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  id: VirtualBeanPropertyWriter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser
  children:
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter()
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude.Value)
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude.Value,java.lang.Class<?>[])
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter)
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName)
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter._suppressNulls(com.fasterxml.jackson.annotation.JsonInclude.Value)
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter._suppressableValue(com.fasterxml.jackson.annotation.JsonInclude.Value)
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.isVirtual()
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.withConfig(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType)
  langs:
  - java
  name: VirtualBeanPropertyWriter
  nameWithType: VirtualBeanPropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  type: Class
  package: com.fasterxml.jackson.databind.ser
  summary: <xref uid="com.fasterxml.jackson.databind.ser.BeanPropertyWriter" data-throw-if-not-resolved="false">BeanPropertyWriter</xref> implementation used with <xref uid="com.fasterxml.jackson.databind.annotation.JsonAppend" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.annotation.JsonAppend</xref> to add "virtual" properties in addition to regular ones.
  syntax:
    content: public abstract class VirtualBeanPropertyWriter extends BeanPropertyWriter implements Serializable
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase
  - com.fasterxml.jackson.databind.ser.PropertyWriter
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  implements:
  - java.io.Serializable
  inheritedMembers:
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.getMetadata()
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isRequired()
  - com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isVirtual()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class<?>,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter._new(com.fasterxml.jackson.databind.PropertyName)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.fixAccess(com.fasterxml.jackson.databind.SerializationConfig)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.get(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getFullName()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getGenericPropertyType()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getInternalSetting(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getMember()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getName()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getPropertyType()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getRawSerializationType()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializationType()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializedName()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializer()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getType()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getTypeSerializer()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getViews()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getWrapperName()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasNullSerializer()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasSerializer()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.isUnwrapping()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.removeInternalSetting(java.lang.Object)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.rename(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setInternalSetting(java.lang.Object,java.lang.Object)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.toString()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.willSuppressNulls()
  - com.fasterxml.jackson.databind.ser.BeanPropertyWriter.wouldConflictWithName(com.fasterxml.jackson.databind.PropertyName)
  - com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(java.lang.Class<A>)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter()
  id: VirtualBeanPropertyWriter()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: VirtualBeanPropertyWriter()
  nameWithType: VirtualBeanPropertyWriter.VirtualBeanPropertyWriter()
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter()
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  summary: Constructor that may be used by sub-classes for constructing a "blue-print" instance; one that will only become (or create) actual usable instance when its <xref uid="com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.withConfig*" data-throw-if-not-resolved="false">#withConfig</xref> method is called.
  syntax:
    content: protected VirtualBeanPropertyWriter()
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType)
  id: VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: VirtualBeanPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations, JavaType declaredType)
  nameWithType: VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations, JavaType declaredType)
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations, JavaType declaredType)
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  summary: Constructor used by most sub-types.
  syntax:
    content: protected VirtualBeanPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations, JavaType declaredType)
    parameters:
    - id: propDef
      type: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
    - id: contextAnnotations
      type: com.fasterxml.jackson.databind.util.Annotations
    - id: declaredType
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude.Value)
  id: VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude.Value)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: VirtualBeanPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, JsonInclude.Value inclusion)
  nameWithType: VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, JsonInclude.Value inclusion)
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, JsonInclude.Value inclusion)
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected VirtualBeanPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, JsonInclude.Value inclusion)
    parameters:
    - id: propDef
      type: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
    - id: contextAnnotations
      type: com.fasterxml.jackson.databind.util.Annotations
    - id: declaredType
      type: com.fasterxml.jackson.databind.JavaType
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: serType
      type: com.fasterxml.jackson.databind.JavaType
    - id: inclusion
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude.Value,java.lang.Class<?>[])
  id: VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<?>,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.annotation.JsonInclude.Value,java.lang.Class<?>[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: VirtualBeanPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, JsonInclude.Value inclusion, Class<?>[] includeInViews)
  nameWithType: VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, JsonInclude.Value inclusion, Class<?>[] includeInViews)
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, JsonInclude.Value inclusion, Class<?>[] includeInViews)
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  summary: Pass-through constructor that may be used by sub-classes that want full control over implementation.
  syntax:
    content: protected VirtualBeanPropertyWriter(BeanPropertyDefinition propDef, Annotations contextAnnotations, JavaType declaredType, JsonSerializer<?> ser, TypeSerializer typeSer, JavaType serType, JsonInclude.Value inclusion, Class<?>[] includeInViews)
    parameters:
    - id: propDef
      type: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
    - id: contextAnnotations
      type: com.fasterxml.jackson.databind.util.Annotations
    - id: declaredType
      type: com.fasterxml.jackson.databind.JavaType
    - id: ser
      type: com.fasterxml.jackson.databind.JsonSerializer<?>
    - id: typeSer
      type: com.fasterxml.jackson.databind.jsontype.TypeSerializer
    - id: serType
      type: com.fasterxml.jackson.databind.JavaType
    - id: inclusion
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
    - id: includeInViews
      type: java.lang.Class<?>[]
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter)
  id: VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: VirtualBeanPropertyWriter(VirtualBeanPropertyWriter base)
  nameWithType: VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(VirtualBeanPropertyWriter base)
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(VirtualBeanPropertyWriter base)
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected VirtualBeanPropertyWriter(VirtualBeanPropertyWriter base)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName)
  id: VirtualBeanPropertyWriter(com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: VirtualBeanPropertyWriter(VirtualBeanPropertyWriter base, PropertyName name)
  nameWithType: VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(VirtualBeanPropertyWriter base, PropertyName name)
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter(VirtualBeanPropertyWriter base, PropertyName name)
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter*
  type: Constructor
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected VirtualBeanPropertyWriter(VirtualBeanPropertyWriter base, PropertyName name)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
    - id: name
      type: com.fasterxml.jackson.databind.PropertyName
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter._suppressNulls(com.fasterxml.jackson.annotation.JsonInclude.Value)
  id: _suppressNulls(com.fasterxml.jackson.annotation.JsonInclude.Value)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: _suppressNulls(JsonInclude.Value inclusion)
  nameWithType: VirtualBeanPropertyWriter._suppressNulls(JsonInclude.Value inclusion)
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter._suppressNulls(JsonInclude.Value inclusion)
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter._suppressNulls*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected static boolean _suppressNulls(JsonInclude.Value inclusion)
    parameters:
    - id: inclusion
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter._suppressableValue(com.fasterxml.jackson.annotation.JsonInclude.Value)
  id: _suppressableValue(com.fasterxml.jackson.annotation.JsonInclude.Value)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: _suppressableValue(JsonInclude.Value inclusion)
  nameWithType: VirtualBeanPropertyWriter._suppressableValue(JsonInclude.Value inclusion)
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter._suppressableValue(JsonInclude.Value inclusion)
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter._suppressableValue*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  syntax:
    content: protected static Object _suppressableValue(JsonInclude.Value inclusion)
    parameters:
    - id: inclusion
      type: com.fasterxml.jackson.annotation.JsonInclude.Value
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.isVirtual()
  id: isVirtual()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: isVirtual()
  nameWithType: VirtualBeanPropertyWriter.isVirtual()
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.isVirtual()
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.isVirtual*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Accessor for checking whether there is an actual physical property behind this property abstraction or not.
  syntax:
    content: public boolean isVirtual()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: serializeAsElement(Object bean, JsonGenerator gen, SerializerProvider prov)
  nameWithType: VirtualBeanPropertyWriter.serializeAsElement(Object bean, JsonGenerator gen, SerializerProvider prov)
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsElement(Object bean, JsonGenerator gen, SerializerProvider prov)
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsElement*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Alternative to <xref uid="com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsField*" data-throw-if-not-resolved="false">#serializeAsField</xref> that is used when a POJO is serialized as JSON Array; the difference is that no field names are written.
  syntax:
    content: public void serializeAsElement(Object bean, JsonGenerator gen, SerializerProvider prov)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: serializeAsField(Object bean, JsonGenerator gen, SerializerProvider prov)
  nameWithType: VirtualBeanPropertyWriter.serializeAsField(Object bean, JsonGenerator gen, SerializerProvider prov)
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsField(Object bean, JsonGenerator gen, SerializerProvider prov)
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsField*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to access property that this bean stands for, from within given bean, and to serialize it as a JSON Object field using appropriate serializer.
  syntax:
    content: public void serializeAsField(Object bean, JsonGenerator gen, SerializerProvider prov)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: value(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: value(Object bean, JsonGenerator gen, SerializerProvider prov)
  nameWithType: VirtualBeanPropertyWriter.value(Object bean, JsonGenerator gen, SerializerProvider prov)
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.value(Object bean, JsonGenerator gen, SerializerProvider prov)
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.value*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Method called to figure out the value to serialize. For simple sub-types (such as <xref uid="com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter" data-throw-if-not-resolved="false">com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter</xref>) this may be one of few methods to define, although more advanced implementations may choose to not even use this method (by overriding <xref uid="com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsField*" data-throw-if-not-resolved="false">#serializeAsField</xref>) and define a bogus implementation.
  syntax:
    content: protected abstract Object value(Object bean, JsonGenerator gen, SerializerProvider prov)
    parameters:
    - id: bean
      type: java.lang.Object
    - id: gen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: prov
      type: com.fasterxml.jackson.databind.SerializerProvider
    return:
      type: java.lang.Object
  exceptions:
  - type: java.lang.Exception
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.withConfig(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType)
  id: withConfig(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
  langs:
  - java
  name: withConfig(MapperConfig<?> config, AnnotatedClass declaringClass, BeanPropertyDefinition propDef, JavaType type)
  nameWithType: VirtualBeanPropertyWriter.withConfig(MapperConfig<?> config, AnnotatedClass declaringClass, BeanPropertyDefinition propDef, JavaType type)
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.withConfig(MapperConfig<?> config, AnnotatedClass declaringClass, BeanPropertyDefinition propDef, JavaType type)
  overload: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.withConfig*
  type: Method
  package: com.fasterxml.jackson.databind.ser
  summary: Contextualization method called on a newly constructed virtual bean property. Usually a new intance needs to be created due to finality of some of configuration members; otherwise while recommended, creating a new instance is not strictly-speaking mandatory because calls are made in thread-safe manner, as part of initialization before use.
  syntax:
    content: public abstract VirtualBeanPropertyWriter withConfig(MapperConfig<?> config, AnnotatedClass declaringClass, BeanPropertyDefinition propDef, JavaType type)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
      description: >-
        Currenct configuration; guaranteed to be <xref uid="com.fasterxml.jackson.databind.SerializationConfig" data-throw-if-not-resolved="false">SerializationConfig</xref>
           (just not typed since caller does not have dependency to serialization-specific types)
    - id: declaringClass
      type: com.fasterxml.jackson.databind.introspect.AnnotatedClass
      description: Class that contains this property writer
    - id: propDef
      type: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
      description: Nominal property definition to use
    - id: type
      type: com.fasterxml.jackson.databind.JavaType
      description: Declared type for the property
    return:
      type: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter
references:
- uid: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
  name: BeanPropertyDefinition
  nameWithType: BeanPropertyDefinition
  fullName: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition
- uid: com.fasterxml.jackson.databind.util.Annotations
  name: Annotations
  nameWithType: Annotations
  fullName: com.fasterxml.jackson.databind.util.Annotations
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter*
  name: VirtualBeanPropertyWriter
  nameWithType: VirtualBeanPropertyWriter.VirtualBeanPropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.VirtualBeanPropertyWriter
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.JsonSerializer<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.JsonSerializer
    name: JsonSerializer
    fullName: com.fasterxml.jackson.databind.JsonSerializer
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.jsontype.TypeSerializer
  name: TypeSerializer
  nameWithType: TypeSerializer
  fullName: com.fasterxml.jackson.databind.jsontype.TypeSerializer
- uid: com.fasterxml.jackson.annotation.JsonInclude.Value
  name: JsonInclude.Value
  nameWithType: JsonInclude.Value
  fullName: com.fasterxml.jackson.annotation.JsonInclude.Value
- uid: java.lang.Class<?>[]
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.PropertyName
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter._suppressNulls*
  name: _suppressNulls
  nameWithType: VirtualBeanPropertyWriter._suppressNulls
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter._suppressNulls
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter._suppressableValue*
  name: _suppressableValue
  nameWithType: VirtualBeanPropertyWriter._suppressableValue
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter._suppressableValue
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.isVirtual*
  name: isVirtual
  nameWithType: VirtualBeanPropertyWriter.isVirtual
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.isVirtual
  package: com.fasterxml.jackson.databind.ser
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: com.fasterxml.jackson.core.JsonGenerator
  name: JsonGenerator
  nameWithType: JsonGenerator
  fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  name: SerializerProvider
  nameWithType: SerializerProvider
  fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.value*
  name: value
  nameWithType: VirtualBeanPropertyWriter.value
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.value
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedClass
  name: AnnotatedClass
  nameWithType: AnnotatedClass
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedClass
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.withConfig*
  name: withConfig
  nameWithType: VirtualBeanPropertyWriter.withConfig
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.withConfig
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsField*
  name: serializeAsField
  nameWithType: VirtualBeanPropertyWriter.serializeAsField
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsField
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsElement*
  name: serializeAsElement
  nameWithType: VirtualBeanPropertyWriter.serializeAsElement
  fullName: com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsElement
  package: com.fasterxml.jackson.databind.ser
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
  name: BeanPropertyWriter
  nameWithType: BeanPropertyWriter
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializationType()
  name: BeanPropertyWriter.getSerializationType()
  nameWithType: BeanPropertyWriter.getSerializationType()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializationType()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer)
  name: BeanPropertyWriter.unwrappingWriter(NameTransformer)
  nameWithType: BeanPropertyWriter.unwrappingWriter(NameTransformer)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.removeInternalSetting(java.lang.Object)
  name: BeanPropertyWriter.removeInternalSetting(Object)
  nameWithType: BeanPropertyWriter.removeInternalSetting(Object)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.removeInternalSetting(java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(java.lang.Class<A>)
  name: PropertyWriter.<A>findAnnotation(Class<A>)
  nameWithType: PropertyWriter.<A>findAnnotation(Class<A>)
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.<A>findAnnotation(java.lang.Class<A>)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializer()
  name: BeanPropertyWriter.getSerializer()
  nameWithType: BeanPropertyWriter.getSerializer()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializer()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanPropertyWriter.serializeAsOmittedField(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanPropertyWriter.serializeAsOmittedField(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanPropertyWriter.depositSchemaProperty(ObjectNode,SerializerProvider)
  nameWithType: BeanPropertyWriter.depositSchemaProperty(ObjectNode,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode)
  name: BeanPropertyWriter._depositSchemaProperty(ObjectNode,JsonNode)
  nameWithType: BeanPropertyWriter._depositSchemaProperty(ObjectNode,JsonNode)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.toString()
  name: BeanPropertyWriter.toString()
  nameWithType: BeanPropertyWriter.toString()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.toString()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getGenericPropertyType()
  name: BeanPropertyWriter.getGenericPropertyType()
  nameWithType: BeanPropertyWriter.getGenericPropertyType()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getGenericPropertyType()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getTypeSerializer()
  name: BeanPropertyWriter.getTypeSerializer()
  nameWithType: BeanPropertyWriter.getTypeSerializer()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getTypeSerializer()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.getMetadata()
  name: ConcreteBeanPropertyBase.getMetadata()
  nameWithType: ConcreteBeanPropertyBase.getMetadata()
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.getMetadata()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._new(com.fasterxml.jackson.databind.PropertyName)
  name: BeanPropertyWriter._new(PropertyName)
  nameWithType: BeanPropertyWriter._new(PropertyName)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._new(com.fasterxml.jackson.databind.PropertyName)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class<?>,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanPropertyWriter._findAndAddDynamic(PropertySerializerMap,Class<?>,SerializerProvider)
  nameWithType: BeanPropertyWriter._findAndAddDynamic(PropertySerializerMap,Class<?>,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class<?>,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getInternalSetting(java.lang.Object)
  name: BeanPropertyWriter.getInternalSetting(Object)
  nameWithType: BeanPropertyWriter.getInternalSetting(Object)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getInternalSetting(java.lang.Object)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  name: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig<?>,Class<?>)
  nameWithType: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig<?>,Class<?>)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
  name: ConcreteBeanPropertyBase.findFormatOverrides(AnnotationIntrospector)
  nameWithType: ConcreteBeanPropertyBase.findFormatOverrides(AnnotationIntrospector)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findFormatOverrides(com.fasterxml.jackson.databind.AnnotationIntrospector)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: BeanPropertyWriter.assignSerializer(JsonSerializer<Object>)
  nameWithType: BeanPropertyWriter.assignSerializer(JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getFullName()
  name: BeanPropertyWriter.getFullName()
  nameWithType: BeanPropertyWriter.getFullName()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getFullName()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getType()
  name: BeanPropertyWriter.getType()
  nameWithType: BeanPropertyWriter.getType()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getType()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getName()
  name: BeanPropertyWriter.getName()
  nameWithType: BeanPropertyWriter.getName()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getName()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanPropertyWriter.serializeAsField(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanPropertyWriter.serializeAsField(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializedName()
  name: BeanPropertyWriter.getSerializedName()
  nameWithType: BeanPropertyWriter.getSerializedName()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getSerializedName()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanPropertyWriter.serializeAsElement(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanPropertyWriter.serializeAsElement(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getViews()
  name: BeanPropertyWriter.getViews()
  nameWithType: BeanPropertyWriter.getViews()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getViews()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: BeanPropertyWriter._handleSelfReference(Object,JsonGenerator,SerializerProvider,JsonSerializer<?>)
  nameWithType: BeanPropertyWriter._handleSelfReference(Object,JsonGenerator,SerializerProvider,JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanPropertyWriter.serializeAsPlaceholder(Object,JsonGenerator,SerializerProvider)
  nameWithType: BeanPropertyWriter.serializeAsPlaceholder(Object,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isVirtual()
  name: ConcreteBeanPropertyBase.isVirtual()
  nameWithType: ConcreteBeanPropertyBase.isVirtual()
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isVirtual()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.wouldConflictWithName(com.fasterxml.jackson.databind.PropertyName)
  name: BeanPropertyWriter.wouldConflictWithName(PropertyName)
  nameWithType: BeanPropertyWriter.wouldConflictWithName(PropertyName)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.wouldConflictWithName(com.fasterxml.jackson.databind.PropertyName)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
  name: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig<?>,Class<?>)
  nameWithType: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig<?>,Class<?>)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.isUnwrapping()
  name: BeanPropertyWriter.isUnwrapping()
  nameWithType: BeanPropertyWriter.isUnwrapping()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.isUnwrapping()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasNullSerializer()
  name: BeanPropertyWriter.hasNullSerializer()
  nameWithType: BeanPropertyWriter.hasNullSerializer()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasNullSerializer()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType)
  name: BeanPropertyWriter.setNonTrivialBaseType(JavaType)
  nameWithType: BeanPropertyWriter.setNonTrivialBaseType(JavaType)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getMember()
  name: BeanPropertyWriter.getMember()
  nameWithType: BeanPropertyWriter.getMember()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getMember()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getPropertyType()
  name: BeanPropertyWriter.getPropertyType()
  nameWithType: BeanPropertyWriter.getPropertyType()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getPropertyType()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: BeanPropertyWriter.assignTypeSerializer(TypeSerializer)
  nameWithType: BeanPropertyWriter.assignTypeSerializer(TypeSerializer)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
  name: BeanPropertyWriter.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor,SerializerProvider)
  nameWithType: BeanPropertyWriter.depositSchemaProperty(jsonFormatVisitors.JsonObjectFormatVisitor,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setInternalSetting(java.lang.Object,java.lang.Object)
  name: BeanPropertyWriter.setInternalSetting(Object,Object)
  nameWithType: BeanPropertyWriter.setInternalSetting(Object,Object)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setInternalSetting(java.lang.Object,java.lang.Object)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isRequired()
  name: ConcreteBeanPropertyBase.isRequired()
  nameWithType: ConcreteBeanPropertyBase.isRequired()
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.isRequired()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getWrapperName()
  name: BeanPropertyWriter.getWrapperName()
  nameWithType: BeanPropertyWriter.getWrapperName()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getWrapperName()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
  name: BeanPropertyWriter.<A>getContextAnnotation(Class<A>)
  nameWithType: BeanPropertyWriter.<A>getContextAnnotation(Class<A>)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getContextAnnotation(java.lang.Class<A>)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.willSuppressNulls()
  name: BeanPropertyWriter.willSuppressNulls()
  nameWithType: BeanPropertyWriter.willSuppressNulls()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.willSuppressNulls()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getRawSerializationType()
  name: BeanPropertyWriter.getRawSerializationType()
  nameWithType: BeanPropertyWriter.getRawSerializationType()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getRawSerializationType()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.get(java.lang.Object)
  name: BeanPropertyWriter.get(Object)
  nameWithType: BeanPropertyWriter.get(Object)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.get(java.lang.Object)
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
  name: ConcreteBeanPropertyBase.findAliases(MapperConfig<?>)
  nameWithType: ConcreteBeanPropertyBase.findAliases(MapperConfig<?>)
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig<?>)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasSerializer()
  name: BeanPropertyWriter.hasSerializer()
  nameWithType: BeanPropertyWriter.hasSerializer()
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasSerializer()
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getAnnotation(java.lang.Class<A>)
  name: BeanPropertyWriter.<A>getAnnotation(Class<A>)
  nameWithType: BeanPropertyWriter.<A>getAnnotation(Class<A>)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<A>getAnnotation(java.lang.Class<A>)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.fixAccess(com.fasterxml.jackson.databind.SerializationConfig)
  name: BeanPropertyWriter.fixAccess(SerializationConfig)
  nameWithType: BeanPropertyWriter.fixAccess(SerializationConfig)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.fixAccess(com.fasterxml.jackson.databind.SerializationConfig)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.rename(com.fasterxml.jackson.databind.util.NameTransformer)
  name: BeanPropertyWriter.rename(NameTransformer)
  nameWithType: BeanPropertyWriter.rename(NameTransformer)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.rename(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
  name: BeanPropertyWriter.assignNullSerializer(JsonSerializer<Object>)
  nameWithType: BeanPropertyWriter.assignNullSerializer(JsonSerializer<Object>)
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>)
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: ?>[]
  name: ?>[]
  nameWithType: ?>[]
  fullName: ?>[]
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.ser.PropertyWriter.
  name: PropertyWriter.
  nameWithType: PropertyWriter.
  fullName: com.fasterxml.jackson.databind.ser.PropertyWriter.
- uid: A>findAnnotation(java.lang.Class
  name: A>findAnnotation(Class
  nameWithType: A>findAnnotation(Class
  fullName: A>findAnnotation(java.lang.Class
- uid: A>)
  name: A>)
  nameWithType: A>)
  fullName: A>)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class
  name: BeanPropertyWriter._findAndAddDynamic(PropertySerializerMap,Class
  nameWithType: BeanPropertyWriter._findAndAddDynamic(PropertySerializerMap,Class
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class
- uid: ?>,com.fasterxml.jackson.databind.SerializerProvider)
  name: ?>,SerializerProvider)
  nameWithType: ?>,SerializerProvider)
  fullName: ?>,com.fasterxml.jackson.databind.SerializerProvider)
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: ?>,java.lang.Class
  name: ?>,Class
  nameWithType: ?>,Class
  fullName: ?>,java.lang.Class
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig
  nameWithType: ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignSerializer(com.fasterxml.jackson.databind.JsonSerializer
  name: BeanPropertyWriter.assignSerializer(JsonSerializer
  nameWithType: BeanPropertyWriter.assignSerializer(JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignSerializer(com.fasterxml.jackson.databind.JsonSerializer
- uid: java.lang.Object>)
  name: Object>)
  nameWithType: Object>)
  fullName: java.lang.Object>)
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer
  name: BeanPropertyWriter._handleSelfReference(Object,JsonGenerator,SerializerProvider,JsonSerializer
  nameWithType: BeanPropertyWriter._handleSelfReference(Object,JsonGenerator,SerializerProvider,JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig
  nameWithType: ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.
  name: BeanPropertyWriter.
  nameWithType: BeanPropertyWriter.
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.
- uid: A>getContextAnnotation(java.lang.Class
  name: A>getContextAnnotation(Class
  nameWithType: A>getContextAnnotation(Class
  fullName: A>getContextAnnotation(java.lang.Class
- uid: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig
  name: ConcreteBeanPropertyBase.findAliases(MapperConfig
  nameWithType: ConcreteBeanPropertyBase.findAliases(MapperConfig
  fullName: com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: A>getAnnotation(java.lang.Class
  name: A>getAnnotation(Class
  nameWithType: A>getAnnotation(Class
  fullName: A>getAnnotation(java.lang.Class
- uid: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer
  name: BeanPropertyWriter.assignNullSerializer(JsonSerializer
  nameWithType: BeanPropertyWriter.assignNullSerializer(JsonSerializer
  fullName: com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer
