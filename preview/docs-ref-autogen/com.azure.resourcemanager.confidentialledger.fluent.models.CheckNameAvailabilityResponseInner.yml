### YamlMime:JavaType
uid: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner"
fullName: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner"
name: "CheckNameAvailabilityResponseInner"
nameWithType: "CheckNameAvailabilityResponseInner"
summary: "The check availability result."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **CheckNameAvailabilityResponseInner**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner&text=CheckNameAvailabilityResponseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.CheckNameAvailabilityResponseInner()"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.CheckNameAvailabilityResponseInner()"
  name: "CheckNameAvailabilityResponseInner()"
  nameWithType: "CheckNameAvailabilityResponseInner.CheckNameAvailabilityResponseInner()"
  summary: "Creates an instance of Check<wbr>Name<wbr>Availability<wbr>Response<wbr>Inner class."
  syntax: "public CheckNameAvailabilityResponseInner()"
  desc: "Creates an instance of CheckNameAvailabilityResponseInner class."
methods:
- uid: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "CheckNameAvailabilityResponseInner.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Check<wbr>Name<wbr>Availability<wbr>Response<wbr>Inner from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CheckNameAvailabilityResponseInner fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the CheckNameAvailabilityResponseInner."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads an instance of CheckNameAvailabilityResponseInner from the JsonReader."
  returns:
    description: "An instance of CheckNameAvailabilityResponseInner if the JsonReader was pointing to an instance of it, or\n null if it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner&text=CheckNameAvailabilityResponseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.message()"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.message()"
  name: "message()"
  nameWithType: "CheckNameAvailabilityResponseInner.message()"
  summary: "Get the message property: Detailed reason why the given name is available."
  syntax: "public String message()"
  desc: "Get the message property: Detailed reason why the given name is available."
  returns:
    description: "the message value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.nameAvailable()"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.nameAvailable()"
  name: "nameAvailable()"
  nameWithType: "CheckNameAvailabilityResponseInner.nameAvailable()"
  summary: "Get the name<wbr>Available property: Indicates if the resource name is available."
  syntax: "public Boolean nameAvailable()"
  desc: "Get the nameAvailable property: Indicates if the resource name is available."
  returns:
    description: "the nameAvailable value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.reason()"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.reason()"
  name: "reason()"
  nameWithType: "CheckNameAvailabilityResponseInner.reason()"
  summary: "Get the reason property: The reason why the given name is not available."
  syntax: "public CheckNameAvailabilityReason reason()"
  desc: "Get the reason property: The reason why the given name is not available."
  returns:
    description: "the reason value."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.CheckNameAvailabilityReason?alt=com.azure.resourcemanager.confidentialledger.models.CheckNameAvailabilityReason&text=CheckNameAvailabilityReason\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "CheckNameAvailabilityResponseInner.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.validate()"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.validate()"
  name: "validate()"
  nameWithType: "CheckNameAvailabilityResponseInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.withMessage(java.lang.String)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.withMessage(String message)"
  name: "withMessage(String message)"
  nameWithType: "CheckNameAvailabilityResponseInner.withMessage(String message)"
  summary: "Set the message property: Detailed reason why the given name is available."
  parameters:
  - description: "the message value to set."
    name: "message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CheckNameAvailabilityResponseInner withMessage(String message)"
  desc: "Set the message property: Detailed reason why the given name is available."
  returns:
    description: "the CheckNameAvailabilityResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner&text=CheckNameAvailabilityResponseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.withNameAvailable(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.withNameAvailable(Boolean nameAvailable)"
  name: "withNameAvailable(Boolean nameAvailable)"
  nameWithType: "CheckNameAvailabilityResponseInner.withNameAvailable(Boolean nameAvailable)"
  summary: "Set the name<wbr>Available property: Indicates if the resource name is available."
  parameters:
  - description: "the nameAvailable value to set."
    name: "nameAvailable"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CheckNameAvailabilityResponseInner withNameAvailable(Boolean nameAvailable)"
  desc: "Set the nameAvailable property: Indicates if the resource name is available."
  returns:
    description: "the CheckNameAvailabilityResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner&text=CheckNameAvailabilityResponseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.withReason(com.azure.resourcemanager.confidentialledger.models.CheckNameAvailabilityReason)"
  fullName: "com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner.withReason(CheckNameAvailabilityReason reason)"
  name: "withReason(CheckNameAvailabilityReason reason)"
  nameWithType: "CheckNameAvailabilityResponseInner.withReason(CheckNameAvailabilityReason reason)"
  summary: "Set the reason property: The reason why the given name is not available."
  parameters:
  - description: "the reason value to set."
    name: "reason"
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.models.CheckNameAvailabilityReason?alt=com.azure.resourcemanager.confidentialledger.models.CheckNameAvailabilityReason&text=CheckNameAvailabilityReason\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CheckNameAvailabilityResponseInner withReason(CheckNameAvailabilityReason reason)"
  desc: "Set the reason property: The reason why the given name is not available."
  returns:
    description: "the CheckNameAvailabilityResponseInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner&text=CheckNameAvailabilityResponseInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The check availability result."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner?alt=com.azure.resourcemanager.confidentialledger.fluent.models.CheckNameAvailabilityResponseInner&text=CheckNameAvailabilityResponseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.confidentialledger.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-confidentialledger:1.0.0-beta.5
