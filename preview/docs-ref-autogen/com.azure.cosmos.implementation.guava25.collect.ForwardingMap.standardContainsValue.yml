### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue*"
fullName: "com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardContainsValue"
name: "standardContainsValue"
nameWithType: "ForwardingMap<K,V>.standardContainsValue"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.standardContainsValue(Object value)"
  name: "standardContainsValue(Object value)"
  nameWithType: "ForwardingMap<K,V>.standardContainsValue(Object value)"
  summary: "A sensible definition of <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#containsValue\"></xref> in terms of the `iterator` method of <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#entrySet\"></xref>. If you override <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#entrySet\"></xref>, you may wish to override <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#containsValue\"></xref> to forward to this implementation."
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected boolean standardContainsValue(Object value)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
