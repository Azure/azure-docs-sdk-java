### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory
  id: DocumentQueryExecutionContextFactory
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query
  children:
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createDocumentQueryExecutionContextAsync(com.azure.cosmos.implementation.query.IDocumentQueryClient,com.azure.cosmos.implementation.ResourceType,java.lang.Class<T>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,boolean,java.util.UUID)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createReadManyQueryAsync(com.azure.cosmos.implementation.query.IDocumentQueryClient,java.lang.String,com.azure.cosmos.models.SqlQuerySpec,java.util.Map<com.azure.cosmos.implementation.PartitionKeyRange,com.azure.cosmos.models.SqlQuerySpec>,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,java.lang.String,java.util.UUID,java.lang.Class<T>,com.azure.cosmos.implementation.ResourceType)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createSpecializedDocumentQueryExecutionContextAsync(com.azure.cosmos.implementation.query.IDocumentQueryClient,com.azure.cosmos.implementation.ResourceType,java.lang.Class<T>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,boolean,com.azure.cosmos.implementation.query.PartitionedQueryExecutionInfo,java.util.List<com.azure.cosmos.implementation.PartitionKeyRange>,java.lang.String,java.util.UUID)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.DocumentQueryExecutionContextFactory()
  langs:
  - java
  name: DocumentQueryExecutionContextFactory
  nameWithType: DocumentQueryExecutionContextFactory
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory
  type: Class
  package: com.azure.cosmos.implementation.query
  summary: While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk.
  syntax:
    content: public class DocumentQueryExecutionContextFactory
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createDocumentQueryExecutionContextAsync(com.azure.cosmos.implementation.query.IDocumentQueryClient,com.azure.cosmos.implementation.ResourceType,java.lang.Class<T>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,boolean,java.util.UUID)
  id: <T>createDocumentQueryExecutionContextAsync(com.azure.cosmos.implementation.query.IDocumentQueryClient,com.azure.cosmos.implementation.ResourceType,java.lang.Class<T>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,boolean,java.util.UUID)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory
  langs:
  - java
  name: <T>createDocumentQueryExecutionContextAsync(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean isContinuationExpected, UUID correlatedActivityId)
  nameWithType: DocumentQueryExecutionContextFactory.<T>createDocumentQueryExecutionContextAsync(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean isContinuationExpected, UUID correlatedActivityId)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createDocumentQueryExecutionContextAsync(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean isContinuationExpected, UUID correlatedActivityId)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.createDocumentQueryExecutionContextAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public static Flux<? extends IDocumentQueryExecutionContext<T>> <T>createDocumentQueryExecutionContextAsync(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean isContinuationExpected, UUID correlatedActivityId)
    parameters:
    - id: client
      type: com.azure.cosmos.implementation.query.IDocumentQueryClient
    - id: resourceTypeEnum
      type: com.azure.cosmos.implementation.ResourceType
    - id: resourceType
      type: java.lang.Class<T>
    - id: query
      type: com.azure.cosmos.models.SqlQuerySpec
    - id: cosmosQueryRequestOptions
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
    - id: resourceLink
      type: java.lang.String
    - id: isContinuationExpected
      type: boolean
    - id: correlatedActivityId
      type: java.util.UUID
    return:
      type: reactor.core.publisher.Flux<? extends com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext<T>>
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createReadManyQueryAsync(com.azure.cosmos.implementation.query.IDocumentQueryClient,java.lang.String,com.azure.cosmos.models.SqlQuerySpec,java.util.Map<com.azure.cosmos.implementation.PartitionKeyRange,com.azure.cosmos.models.SqlQuerySpec>,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,java.lang.String,java.util.UUID,java.lang.Class<T>,com.azure.cosmos.implementation.ResourceType)
  id: <T>createReadManyQueryAsync(com.azure.cosmos.implementation.query.IDocumentQueryClient,java.lang.String,com.azure.cosmos.models.SqlQuerySpec,java.util.Map<com.azure.cosmos.implementation.PartitionKeyRange,com.azure.cosmos.models.SqlQuerySpec>,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,java.lang.String,java.util.UUID,java.lang.Class<T>,com.azure.cosmos.implementation.ResourceType)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory
  langs:
  - java
  name: <T>createReadManyQueryAsync(IDocumentQueryClient queryClient, String collectionResourceId, SqlQuerySpec sqlQuery, Map<PartitionKeyRange,SqlQuerySpec> rangeQueryMap, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceId, String collectionLink, UUID activityId, Class<T> klass, ResourceType resourceTypeEnum)
  nameWithType: DocumentQueryExecutionContextFactory.<T>createReadManyQueryAsync(IDocumentQueryClient queryClient, String collectionResourceId, SqlQuerySpec sqlQuery, Map<PartitionKeyRange,SqlQuerySpec> rangeQueryMap, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceId, String collectionLink, UUID activityId, Class<T> klass, ResourceType resourceTypeEnum)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createReadManyQueryAsync(IDocumentQueryClient queryClient, String collectionResourceId, SqlQuerySpec sqlQuery, Map<PartitionKeyRange,SqlQuerySpec> rangeQueryMap, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceId, String collectionLink, UUID activityId, Class<T> klass, ResourceType resourceTypeEnum)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.createReadManyQueryAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public static Flux<? extends IDocumentQueryExecutionContext<T>> <T>createReadManyQueryAsync(IDocumentQueryClient queryClient, String collectionResourceId, SqlQuerySpec sqlQuery, Map<PartitionKeyRange,SqlQuerySpec> rangeQueryMap, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceId, String collectionLink, UUID activityId, Class<T> klass, ResourceType resourceTypeEnum)
    parameters:
    - id: queryClient
      type: com.azure.cosmos.implementation.query.IDocumentQueryClient
    - id: collectionResourceId
      type: java.lang.String
    - id: sqlQuery
      type: com.azure.cosmos.models.SqlQuerySpec
    - id: rangeQueryMap
      type: java.util.Map<com.azure.cosmos.implementation.PartitionKeyRange,com.azure.cosmos.models.SqlQuerySpec>
    - id: cosmosQueryRequestOptions
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
    - id: resourceId
      type: java.lang.String
    - id: collectionLink
      type: java.lang.String
    - id: activityId
      type: java.util.UUID
    - id: klass
      type: java.lang.Class<T>
    - id: resourceTypeEnum
      type: com.azure.cosmos.implementation.ResourceType
    return:
      type: reactor.core.publisher.Flux<? extends com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext<T>>
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createSpecializedDocumentQueryExecutionContextAsync(com.azure.cosmos.implementation.query.IDocumentQueryClient,com.azure.cosmos.implementation.ResourceType,java.lang.Class<T>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,boolean,com.azure.cosmos.implementation.query.PartitionedQueryExecutionInfo,java.util.List<com.azure.cosmos.implementation.PartitionKeyRange>,java.lang.String,java.util.UUID)
  id: <T>createSpecializedDocumentQueryExecutionContextAsync(com.azure.cosmos.implementation.query.IDocumentQueryClient,com.azure.cosmos.implementation.ResourceType,java.lang.Class<T>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,boolean,com.azure.cosmos.implementation.query.PartitionedQueryExecutionInfo,java.util.List<com.azure.cosmos.implementation.PartitionKeyRange>,java.lang.String,java.util.UUID)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory
  langs:
  - java
  name: <T>createSpecializedDocumentQueryExecutionContextAsync(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean isContinuationExpected, PartitionedQueryExecutionInfo partitionedQueryExecutionInfo, List<PartitionKeyRange> targetRanges, String collectionRid, UUID correlatedActivityId)
  nameWithType: DocumentQueryExecutionContextFactory.<T>createSpecializedDocumentQueryExecutionContextAsync(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean isContinuationExpected, PartitionedQueryExecutionInfo partitionedQueryExecutionInfo, List<PartitionKeyRange> targetRanges, String collectionRid, UUID correlatedActivityId)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createSpecializedDocumentQueryExecutionContextAsync(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean isContinuationExpected, PartitionedQueryExecutionInfo partitionedQueryExecutionInfo, List<PartitionKeyRange> targetRanges, String collectionRid, UUID correlatedActivityId)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.createSpecializedDocumentQueryExecutionContextAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public static Flux<? extends IDocumentQueryExecutionContext<T>> <T>createSpecializedDocumentQueryExecutionContextAsync(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean isContinuationExpected, PartitionedQueryExecutionInfo partitionedQueryExecutionInfo, List<PartitionKeyRange> targetRanges, String collectionRid, UUID correlatedActivityId)
    parameters:
    - id: client
      type: com.azure.cosmos.implementation.query.IDocumentQueryClient
    - id: resourceTypeEnum
      type: com.azure.cosmos.implementation.ResourceType
    - id: resourceType
      type: java.lang.Class<T>
    - id: query
      type: com.azure.cosmos.models.SqlQuerySpec
    - id: cosmosQueryRequestOptions
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
    - id: resourceLink
      type: java.lang.String
    - id: isContinuationExpected
      type: boolean
    - id: partitionedQueryExecutionInfo
      type: com.azure.cosmos.implementation.query.PartitionedQueryExecutionInfo
    - id: targetRanges
      type: java.util.List<com.azure.cosmos.implementation.PartitionKeyRange>
    - id: collectionRid
      type: java.lang.String
    - id: correlatedActivityId
      type: java.util.UUID
    return:
      type: reactor.core.publisher.Flux<? extends com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext<T>>
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.DocumentQueryExecutionContextFactory()
  id: DocumentQueryExecutionContextFactory()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory
  langs:
  - java
  name: DocumentQueryExecutionContextFactory()
  nameWithType: DocumentQueryExecutionContextFactory.DocumentQueryExecutionContextFactory()
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.DocumentQueryExecutionContextFactory()
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.DocumentQueryExecutionContextFactory*
  type: Constructor
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public DocumentQueryExecutionContextFactory()
references:
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.DocumentQueryExecutionContextFactory*
  name: DocumentQueryExecutionContextFactory
  nameWithType: DocumentQueryExecutionContextFactory.DocumentQueryExecutionContextFactory
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.DocumentQueryExecutionContextFactory
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient
  name: IDocumentQueryClient
  nameWithType: IDocumentQueryClient
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient
- uid: com.azure.cosmos.implementation.ResourceType
  name: ResourceType
  nameWithType: ResourceType
  fullName: com.azure.cosmos.implementation.ResourceType
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.models.SqlQuerySpec
  name: SqlQuerySpec
  nameWithType: SqlQuerySpec
  fullName: com.azure.cosmos.models.SqlQuerySpec
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions
  name: CosmosQueryRequestOptions
  nameWithType: CosmosQueryRequestOptions
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.util.UUID
  spec.java:
  - uid: java.util.UUID
    name: UUID
    fullName: java.util.UUID
- uid: reactor.core.publisher.Flux<? extends com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext<T>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: '? extends com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext'
    name: IDocumentQueryExecutionContext
    fullName: '? extends com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext'
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.createDocumentQueryExecutionContextAsync*
  name: <T>createDocumentQueryExecutionContextAsync
  nameWithType: DocumentQueryExecutionContextFactory.<T>createDocumentQueryExecutionContextAsync
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createDocumentQueryExecutionContextAsync
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.query.PartitionedQueryExecutionInfo
  name: PartitionedQueryExecutionInfo
  nameWithType: PartitionedQueryExecutionInfo
  fullName: com.azure.cosmos.implementation.query.PartitionedQueryExecutionInfo
- uid: java.util.List<com.azure.cosmos.implementation.PartitionKeyRange>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.PartitionKeyRange
    name: PartitionKeyRange
    fullName: com.azure.cosmos.implementation.PartitionKeyRange
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.createSpecializedDocumentQueryExecutionContextAsync*
  name: <T>createSpecializedDocumentQueryExecutionContextAsync
  nameWithType: DocumentQueryExecutionContextFactory.<T>createSpecializedDocumentQueryExecutionContextAsync
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createSpecializedDocumentQueryExecutionContextAsync
  package: com.azure.cosmos.implementation.query
- uid: java.util.Map<com.azure.cosmos.implementation.PartitionKeyRange,com.azure.cosmos.models.SqlQuerySpec>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.PartitionKeyRange
    name: PartitionKeyRange
    fullName: com.azure.cosmos.implementation.PartitionKeyRange
  - name: ','
    fullName: ','
  - uid: com.azure.cosmos.models.SqlQuerySpec
    name: SqlQuerySpec
    fullName: com.azure.cosmos.models.SqlQuerySpec
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.createReadManyQueryAsync*
  name: <T>createReadManyQueryAsync
  nameWithType: DocumentQueryExecutionContextFactory.<T>createReadManyQueryAsync
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextFactory.<T>createReadManyQueryAsync
  package: com.azure.cosmos.implementation.query
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: '? extends com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext'
  name: '? extends IDocumentQueryExecutionContext'
  nameWithType: '? extends IDocumentQueryExecutionContext'
  fullName: '? extends com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext'
- uid: com.azure.cosmos.implementation.PartitionKeyRange
  name: PartitionKeyRange
  nameWithType: PartitionKeyRange
  fullName: com.azure.cosmos.implementation.PartitionKeyRange
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: com.azure.cosmos.implementation.PartitionKeyRange,com.azure.cosmos.models.SqlQuerySpec
  name: PartitionKeyRange,SqlQuerySpec
  nameWithType: PartitionKeyRange,SqlQuerySpec
  fullName: com.azure.cosmos.implementation.PartitionKeyRange,com.azure.cosmos.models.SqlQuerySpec
