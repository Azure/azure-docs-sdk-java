### YamlMime:JavaType
uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient"
fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient"
name: "MonitorsClient"
nameWithType: "MonitorsClient"
summary: "An instance of this class provides access to all the operations defined in Monitors<wbr>Client."
syntax: "public interface MonitorsClient"
methods:
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.beginCreateOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource)"
  name: "beginCreateOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource)"
  nameWithType: "MonitorsClient.beginCreateOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource)"
  summary: "Create a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Resource create parameters."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<MonitorResourceInner>,MonitorResourceInner> beginCreateOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource)"
  desc: "Create a MonitorResource."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of dynatrace Monitor Resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.beginCreateOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource, Context context)"
  name: "beginCreateOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource, Context context)"
  nameWithType: "MonitorsClient.beginCreateOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource, Context context)"
  summary: "Create a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Resource create parameters."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<MonitorResourceInner>,MonitorResourceInner> beginCreateOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource, Context context)"
  desc: "Create a MonitorResource."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of dynatrace Monitor Resource."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.beginDelete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.beginDelete(String resourceGroupName, String monitorName)"
  name: "beginDelete(String resourceGroupName, String monitorName)"
  nameWithType: "MonitorsClient.beginDelete(String resourceGroupName, String monitorName)"
  summary: "Delete a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String monitorName)"
  desc: "Delete a MonitorResource."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.beginDelete(String resourceGroupName, String monitorName, Context context)"
  name: "beginDelete(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "MonitorsClient.beginDelete(String resourceGroupName, String monitorName, Context context)"
  summary: "Delete a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String monitorName, Context context)"
  desc: "Delete a MonitorResource."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.createOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource)"
  name: "createOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource)"
  nameWithType: "MonitorsClient.createOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource)"
  summary: "Create a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Resource create parameters."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MonitorResourceInner createOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource)"
  desc: "Create a MonitorResource."
  returns:
    description: "dynatrace Monitor Resource."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.createOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource, Context context)"
  name: "createOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource, Context context)"
  nameWithType: "MonitorsClient.createOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource, Context context)"
  summary: "Create a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Resource create parameters."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MonitorResourceInner createOrUpdate(String resourceGroupName, String monitorName, MonitorResourceInner resource, Context context)"
  desc: "Create a MonitorResource."
  returns:
    description: "dynatrace Monitor Resource."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.delete(String resourceGroupName, String monitorName)"
  name: "delete(String resourceGroupName, String monitorName)"
  nameWithType: "MonitorsClient.delete(String resourceGroupName, String monitorName)"
  summary: "Delete a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String monitorName)"
  desc: "Delete a MonitorResource."
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.delete(String resourceGroupName, String monitorName, Context context)"
  name: "delete(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "MonitorsClient.delete(String resourceGroupName, String monitorName, Context context)"
  summary: "Delete a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String monitorName, Context context)"
  desc: "Delete a MonitorResource."
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getAccountCredentials(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getAccountCredentials(String resourceGroupName, String monitorName)"
  name: "getAccountCredentials(String resourceGroupName, String monitorName)"
  nameWithType: "MonitorsClient.getAccountCredentials(String resourceGroupName, String monitorName)"
  summary: "Gets the user account credentials for a Monitor."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AccountInfoSecureInner getAccountCredentials(String resourceGroupName, String monitorName)"
  desc: "Gets the user account credentials for a Monitor."
  returns:
    description: "the user account credentials for a Monitor."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.AccountInfoSecureInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.AccountInfoSecureInner&text=AccountInfoSecureInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getAccountCredentialsWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getAccountCredentialsWithResponse(String resourceGroupName, String monitorName, Context context)"
  name: "getAccountCredentialsWithResponse(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "MonitorsClient.getAccountCredentialsWithResponse(String resourceGroupName, String monitorName, Context context)"
  summary: "Gets the user account credentials for a Monitor."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AccountInfoSecureInner> getAccountCredentialsWithResponse(String resourceGroupName, String monitorName, Context context)"
  desc: "Gets the user account credentials for a Monitor."
  returns:
    description: "the user account credentials for a Monitor along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.AccountInfoSecureInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.AccountInfoSecureInner&text=AccountInfoSecureInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getByResourceGroup(String resourceGroupName, String monitorName)"
  name: "getByResourceGroup(String resourceGroupName, String monitorName)"
  nameWithType: "MonitorsClient.getByResourceGroup(String resourceGroupName, String monitorName)"
  summary: "Get a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MonitorResourceInner getByResourceGroup(String resourceGroupName, String monitorName)"
  desc: "Get a MonitorResource."
  returns:
    description: "a MonitorResource."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getByResourceGroupWithResponse(String resourceGroupName, String monitorName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "MonitorsClient.getByResourceGroupWithResponse(String resourceGroupName, String monitorName, Context context)"
  summary: "Get a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MonitorResourceInner> getByResourceGroupWithResponse(String resourceGroupName, String monitorName, Context context)"
  desc: "Get a MonitorResource."
  returns:
    description: "a MonitorResource along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getSsoDetails(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getSsoDetails(String resourceGroupName, String monitorName)"
  name: "getSsoDetails(String resourceGroupName, String monitorName)"
  nameWithType: "MonitorsClient.getSsoDetails(String resourceGroupName, String monitorName)"
  summary: "Gets the SSO configuration details from the partner."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SsoDetailsResponseInner getSsoDetails(String resourceGroupName, String monitorName)"
  desc: "Gets the SSO configuration details from the partner."
  returns:
    description: "the SSO configuration details from the partner."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.SsoDetailsResponseInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.SsoDetailsResponseInner&text=SsoDetailsResponseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getSsoDetailsWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.dynatrace.models.SsoDetailsRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getSsoDetailsWithResponse(String resourceGroupName, String monitorName, SsoDetailsRequest request, Context context)"
  name: "getSsoDetailsWithResponse(String resourceGroupName, String monitorName, SsoDetailsRequest request, Context context)"
  nameWithType: "MonitorsClient.getSsoDetailsWithResponse(String resourceGroupName, String monitorName, SsoDetailsRequest request, Context context)"
  summary: "Gets the SSO configuration details from the partner."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The details of the get sso details request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.SsoDetailsRequest?alt=com.azure.resourcemanager.dynatrace.models.SsoDetailsRequest&text=SsoDetailsRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SsoDetailsResponseInner> getSsoDetailsWithResponse(String resourceGroupName, String monitorName, SsoDetailsRequest request, Context context)"
  desc: "Gets the SSO configuration details from the partner."
  returns:
    description: "the SSO configuration details from the partner along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.SsoDetailsResponseInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.SsoDetailsResponseInner&text=SsoDetailsResponseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getVMHostPayload(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getVMHostPayload(String resourceGroupName, String monitorName)"
  name: "getVMHostPayload(String resourceGroupName, String monitorName)"
  nameWithType: "MonitorsClient.getVMHostPayload(String resourceGroupName, String monitorName)"
  summary: "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract VMExtensionPayloadInner getVMHostPayload(String resourceGroupName, String monitorName)"
  desc: "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM."
  returns:
    description: "response of payload to be passed while installing VM agent."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.VMExtensionPayloadInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.VMExtensionPayloadInner&text=VMExtensionPayloadInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getVMHostPayloadWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.getVMHostPayloadWithResponse(String resourceGroupName, String monitorName, Context context)"
  name: "getVMHostPayloadWithResponse(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "MonitorsClient.getVMHostPayloadWithResponse(String resourceGroupName, String monitorName, Context context)"
  summary: "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<VMExtensionPayloadInner> getVMHostPayloadWithResponse(String resourceGroupName, String monitorName, Context context)"
  desc: "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM."
  returns:
    description: "response of payload to be passed while installing VM agent along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.VMExtensionPayloadInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.VMExtensionPayloadInner&text=VMExtensionPayloadInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.list()"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.list()"
  name: "list()"
  nameWithType: "MonitorsClient.list()"
  summary: "List all Monitor<wbr>Resource by subscription<wbr>Id."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<MonitorResourceInner> list()"
  desc: "List all MonitorResource by subscriptionId."
  returns:
    description: "the response of a MonitorResource list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.list(Context context)"
  name: "list(Context context)"
  nameWithType: "MonitorsClient.list(Context context)"
  summary: "List all Monitor<wbr>Resource by subscription<wbr>Id."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitorResourceInner> list(Context context)"
  desc: "List all MonitorResource by subscriptionId."
  returns:
    description: "the response of a MonitorResource list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listAppServices(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listAppServices(String resourceGroupName, String monitorName)"
  name: "listAppServices(String resourceGroupName, String monitorName)"
  nameWithType: "MonitorsClient.listAppServices(String resourceGroupName, String monitorName)"
  summary: "Gets list of App Services with Dynatrace PaaS One<wbr>Agent enabled."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AppServiceInfoInner> listAppServices(String resourceGroupName, String monitorName)"
  desc: "Gets list of App Services with Dynatrace PaaS OneAgent enabled."
  returns:
    description: "list of App Services with Dynatrace PaaS OneAgent enabled as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.AppServiceInfoInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.AppServiceInfoInner&text=AppServiceInfoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listAppServices(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listAppServices(String resourceGroupName, String monitorName, Context context)"
  name: "listAppServices(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "MonitorsClient.listAppServices(String resourceGroupName, String monitorName, Context context)"
  summary: "Gets list of App Services with Dynatrace PaaS One<wbr>Agent enabled."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AppServiceInfoInner> listAppServices(String resourceGroupName, String monitorName, Context context)"
  desc: "Gets list of App Services with Dynatrace PaaS OneAgent enabled."
  returns:
    description: "list of App Services with Dynatrace PaaS OneAgent enabled as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.AppServiceInfoInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.AppServiceInfoInner&text=AppServiceInfoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "MonitorsClient.listByResourceGroup(String resourceGroupName)"
  summary: "List Monitor<wbr>Resource resources by resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitorResourceInner> listByResourceGroup(String resourceGroupName)"
  desc: "List MonitorResource resources by resource group."
  returns:
    description: "the response of a MonitorResource list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "MonitorsClient.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "List Monitor<wbr>Resource resources by resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitorResourceInner> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "List MonitorResource resources by resource group."
  returns:
    description: "the response of a MonitorResource list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listHosts(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listHosts(String resourceGroupName, String monitorName)"
  name: "listHosts(String resourceGroupName, String monitorName)"
  nameWithType: "MonitorsClient.listHosts(String resourceGroupName, String monitorName)"
  summary: "List the compute resources currently being monitored by the Dynatrace resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<VMInfoInner> listHosts(String resourceGroupName, String monitorName)"
  desc: "List the compute resources currently being monitored by the Dynatrace resource."
  returns:
    description: "response of a list VM Host Operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.VMInfoInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.VMInfoInner&text=VMInfoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listHosts(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listHosts(String resourceGroupName, String monitorName, Context context)"
  name: "listHosts(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "MonitorsClient.listHosts(String resourceGroupName, String monitorName, Context context)"
  summary: "List the compute resources currently being monitored by the Dynatrace resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<VMInfoInner> listHosts(String resourceGroupName, String monitorName, Context context)"
  desc: "List the compute resources currently being monitored by the Dynatrace resource."
  returns:
    description: "response of a list VM Host Operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.VMInfoInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.VMInfoInner&text=VMInfoInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listLinkableEnvironments(java.lang.String,java.lang.String,com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request)"
  name: "listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request)"
  nameWithType: "MonitorsClient.listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request)"
  summary: "Gets all the Dynatrace environments that a user can link a azure resource to."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The details of the linkable environment request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest?alt=com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest&text=LinkableEnvironmentRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<LinkableEnvironmentResponseInner> listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request)"
  desc: "Gets all the Dynatrace environments that a user can link a azure resource to."
  returns:
    description: "all the Dynatrace environments that a user can link a azure resource to as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.LinkableEnvironmentResponseInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.LinkableEnvironmentResponseInner&text=LinkableEnvironmentResponseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listLinkableEnvironments(java.lang.String,java.lang.String,com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request, Context context)"
  name: "listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request, Context context)"
  nameWithType: "MonitorsClient.listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request, Context context)"
  summary: "Gets all the Dynatrace environments that a user can link a azure resource to."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The details of the linkable environment request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest?alt=com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest&text=LinkableEnvironmentRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<LinkableEnvironmentResponseInner> listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request, Context context)"
  desc: "Gets all the Dynatrace environments that a user can link a azure resource to."
  returns:
    description: "all the Dynatrace environments that a user can link a azure resource to as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.LinkableEnvironmentResponseInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.LinkableEnvironmentResponseInner&text=LinkableEnvironmentResponseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listMonitoredResources(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listMonitoredResources(String resourceGroupName, String monitorName)"
  name: "listMonitoredResources(String resourceGroupName, String monitorName)"
  nameWithType: "MonitorsClient.listMonitoredResources(String resourceGroupName, String monitorName)"
  summary: "List the resources currently being monitored by the Dynatrace monitor resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitoredResourceInner> listMonitoredResources(String resourceGroupName, String monitorName)"
  desc: "List the resources currently being monitored by the Dynatrace monitor resource."
  returns:
    description: "list of all the resources being monitored by Dynatrace monitor resource as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitoredResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitoredResourceInner&text=MonitoredResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listMonitoredResources(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.listMonitoredResources(String resourceGroupName, String monitorName, Context context)"
  name: "listMonitoredResources(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "MonitorsClient.listMonitoredResources(String resourceGroupName, String monitorName, Context context)"
  summary: "List the resources currently being monitored by the Dynatrace monitor resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitoredResourceInner> listMonitoredResources(String resourceGroupName, String monitorName, Context context)"
  desc: "List the resources currently being monitored by the Dynatrace monitor resource."
  returns:
    description: "list of all the resources being monitored by Dynatrace monitor resource as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitoredResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitoredResourceInner&text=MonitoredResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.dynatrace.models.MonitorResourceUpdate)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.update(String resourceGroupName, String monitorName, MonitorResourceUpdate resource)"
  name: "update(String resourceGroupName, String monitorName, MonitorResourceUpdate resource)"
  nameWithType: "MonitorsClient.update(String resourceGroupName, String monitorName, MonitorResourceUpdate resource)"
  summary: "Update a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The resource properties to be updated."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResourceUpdate?alt=com.azure.resourcemanager.dynatrace.models.MonitorResourceUpdate&text=MonitorResourceUpdate\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MonitorResourceInner update(String resourceGroupName, String monitorName, MonitorResourceUpdate resource)"
  desc: "Update a MonitorResource."
  returns:
    description: "dynatrace Monitor Resource."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.dynatrace.models.MonitorResourceUpdate,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.fluent.MonitorsClient.updateWithResponse(String resourceGroupName, String monitorName, MonitorResourceUpdate resource, Context context)"
  name: "updateWithResponse(String resourceGroupName, String monitorName, MonitorResourceUpdate resource, Context context)"
  nameWithType: "MonitorsClient.updateWithResponse(String resourceGroupName, String monitorName, MonitorResourceUpdate resource, Context context)"
  summary: "Update a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The resource properties to be updated."
    name: "resource"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResourceUpdate?alt=com.azure.resourcemanager.dynatrace.models.MonitorResourceUpdate&text=MonitorResourceUpdate\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MonitorResourceInner> updateWithResponse(String resourceGroupName, String monitorName, MonitorResourceUpdate resource, Context context)"
  desc: "Update a MonitorResource."
  returns:
    description: "dynatrace Monitor Resource along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner?alt=com.azure.resourcemanager.dynatrace.fluent.models.MonitorResourceInner&text=MonitorResourceInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in MonitorsClient."
metadata: {}
package: "com.azure.resourcemanager.dynatrace.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-dynatrace:1.0.0-beta.1
