### YamlMime:JavaType
uid: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner"
fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner"
name: "ServiceFabricInner"
nameWithType: "ServiceFabricInner"
summary: "A Service Fabric."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ServiceFabricInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.ServiceFabricInner()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.ServiceFabricInner()"
  name: "ServiceFabricInner()"
  nameWithType: "ServiceFabricInner.ServiceFabricInner()"
  syntax: "public ServiceFabricInner()"
methods:
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.applicableSchedule()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.applicableSchedule()"
  name: "applicableSchedule()"
  nameWithType: "ServiceFabricInner.applicableSchedule()"
  summary: "Get the applicable<wbr>Schedule property: The applicable schedule for the virtual machine."
  syntax: "public ApplicableScheduleInner applicableSchedule()"
  desc: "Get the applicableSchedule property: The applicable schedule for the virtual machine."
  returns:
    description: "the applicableSchedule value."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.ApplicableScheduleInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.ApplicableScheduleInner&text=ApplicableScheduleInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.environmentId()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.environmentId()"
  name: "environmentId()"
  nameWithType: "ServiceFabricInner.environmentId()"
  summary: "Get the environment<wbr>Id property: The resource id of the environment under which the service fabric resource is present."
  syntax: "public String environmentId()"
  desc: "Get the environmentId property: The resource id of the environment under which the service fabric resource is present."
  returns:
    description: "the environmentId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.externalServiceFabricId()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.externalServiceFabricId()"
  name: "externalServiceFabricId()"
  nameWithType: "ServiceFabricInner.externalServiceFabricId()"
  summary: "Get the external<wbr>Service<wbr>Fabric<wbr>Id property: The backing service fabric resource's id."
  syntax: "public String externalServiceFabricId()"
  desc: "Get the externalServiceFabricId property: The backing service fabric resource's id."
  returns:
    description: "the externalServiceFabricId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.provisioningState()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ServiceFabricInner.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning status of the resource."
  syntax: "public String provisioningState()"
  desc: "Get the provisioningState property: The provisioning status of the resource."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.uniqueIdentifier()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.uniqueIdentifier()"
  name: "uniqueIdentifier()"
  nameWithType: "ServiceFabricInner.uniqueIdentifier()"
  summary: "Get the unique<wbr>Identifier property: The unique immutable identifier of a resource (Guid)."
  syntax: "public String uniqueIdentifier()"
  desc: "Get the uniqueIdentifier property: The unique immutable identifier of a resource (Guid)."
  returns:
    description: "the uniqueIdentifier value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.validate()"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.validate()"
  name: "validate()"
  nameWithType: "ServiceFabricInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.withEnvironmentId(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.withEnvironmentId(String environmentId)"
  name: "withEnvironmentId(String environmentId)"
  nameWithType: "ServiceFabricInner.withEnvironmentId(String environmentId)"
  summary: "Set the environment<wbr>Id property: The resource id of the environment under which the service fabric resource is present."
  parameters:
  - description: "the environmentId value to set."
    name: "environmentId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceFabricInner withEnvironmentId(String environmentId)"
  desc: "Set the environmentId property: The resource id of the environment under which the service fabric resource is present."
  returns:
    description: "the ServiceFabricInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner&text=ServiceFabricInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.withExternalServiceFabricId(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.withExternalServiceFabricId(String externalServiceFabricId)"
  name: "withExternalServiceFabricId(String externalServiceFabricId)"
  nameWithType: "ServiceFabricInner.withExternalServiceFabricId(String externalServiceFabricId)"
  summary: "Set the external<wbr>Service<wbr>Fabric<wbr>Id property: The backing service fabric resource's id."
  parameters:
  - description: "the externalServiceFabricId value to set."
    name: "externalServiceFabricId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceFabricInner withExternalServiceFabricId(String externalServiceFabricId)"
  desc: "Set the externalServiceFabricId property: The backing service fabric resource's id."
  returns:
    description: "the ServiceFabricInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner&text=ServiceFabricInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "ServiceFabricInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceFabricInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner&text=ServiceFabricInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "ServiceFabricInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ServiceFabricInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner?alt=com.azure.resourcemanager.devtestlabs.fluent.models.ServiceFabricInner&text=ServiceFabricInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A Service Fabric."
metadata: {}
package: "com.azure.resourcemanager.devtestlabs.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-devtestlabs:1.0.0-beta.1
