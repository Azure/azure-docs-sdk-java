### YamlMime:JavaMember
uid: "com.azure.storage.file.share.ShareClient.setAccessPolicyWithResponse*"
fullName: "com.azure.storage.file.share.ShareClient.setAccessPolicyWithResponse"
name: "setAccessPolicyWithResponse"
nameWithType: "ShareClient.setAccessPolicyWithResponse"
members:
- uid: "com.azure.storage.file.share.ShareClient.setAccessPolicyWithResponse(com.azure.storage.file.share.options.ShareSetAccessPolicyOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareClient.setAccessPolicyWithResponse(ShareSetAccessPolicyOptions options, Duration timeout, Context context)"
  name: "setAccessPolicyWithResponse(ShareSetAccessPolicyOptions options, Duration timeout, Context context)"
  nameWithType: "ShareClient.setAccessPolicyWithResponse(ShareSetAccessPolicyOptions options, Duration timeout, Context context)"
  summary: "Sets stored access policies for the share.\n\n**Code Samples**\n\nSet a read only stored access policy\n\n```java\nShareAccessPolicy accessPolicy = new ShareAccessPolicy().setPermissions(\"r\")\n     .setStartsOn(OffsetDateTime.now(ZoneOffset.UTC))\n     .setExpiresOn(OffsetDateTime.now(ZoneOffset.UTC).plusDays(10));\n \n ShareSignedIdentifier permission = new ShareSignedIdentifier().setId(\"mypolicy\").setAccessPolicy(accessPolicy);\n \n Response<ShareInfo> response = shareClient.setAccessPolicyWithResponse(\n     new ShareSetAccessPolicyOptions().setPermissions(Collections.singletonList(permission))\n         .setRequestConditions(new ShareRequestConditions().setLeaseId(leaseId)),\n     Duration.ofSeconds(1), new Context(key1, value1));\n System.out.printf(\"Setting access policies completed with status code %d\", response.getStatusCode());\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-share-acl"
  parameters:
  - description: "<xref uid=\"com.azure.storage.file.share.options.ShareSetAccessPolicyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ShareSetAccessPolicyOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.file.share.options.ShareSetAccessPolicyOptions?alt=com.azure.storage.file.share.options.ShareSetAccessPolicyOptions&text=ShareSetAccessPolicyOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ShareInfo> setAccessPolicyWithResponse(ShareSetAccessPolicyOptions options, Duration timeout, Context context)"
  returns:
    description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"information of the share\"></xref> with headers and response status\n code"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareInfo?alt=com.azure.storage.file.share.models.ShareInfo&text=ShareInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.share.ShareClient.setAccessPolicyWithResponse(java.util.List<com.azure.storage.file.share.models.ShareSignedIdentifier>,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareClient.setAccessPolicyWithResponse(List<ShareSignedIdentifier> permissions, Duration timeout, Context context)"
  name: "setAccessPolicyWithResponse(List<ShareSignedIdentifier> permissions, Duration timeout, Context context)"
  nameWithType: "ShareClient.setAccessPolicyWithResponse(List<ShareSignedIdentifier> permissions, Duration timeout, Context context)"
  summary: "Sets stored access policies for the share.\n\n**Code Samples**\n\nSet a read only stored access policy\n\n```java\nShareAccessPolicy accessPolicy = new ShareAccessPolicy().setPermissions(\"r\")\n     .setStartsOn(OffsetDateTime.now(ZoneOffset.UTC))\n     .setExpiresOn(OffsetDateTime.now(ZoneOffset.UTC).plusDays(10));\n \n ShareSignedIdentifier permission = new ShareSignedIdentifier().setId(\"mypolicy\").setAccessPolicy(accessPolicy);\n \n Response<ShareInfo> response = shareClient.setAccessPolicyWithResponse(Collections.singletonList(permission),\n     Duration.ofSeconds(1), new Context(key1, value1));\n System.out.printf(\"Setting access policies completed with status code %d\", response.getStatusCode());\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-share-acl"
  parameters:
  - description: "Access policies to set on the queue"
    name: "permissions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareSignedIdentifier?alt=com.azure.storage.file.share.models.ShareSignedIdentifier&text=ShareSignedIdentifier\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ShareInfo> setAccessPolicyWithResponse(List<ShareSignedIdentifier> permissions, Duration timeout, Context context)"
  returns:
    description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"information of the share\"></xref> with headers and response status\n code"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareInfo?alt=com.azure.storage.file.share.models.ShareInfo&text=ShareInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.share"
artifact: com.azure:azure-storage-file-share:12.7.0-beta.1
