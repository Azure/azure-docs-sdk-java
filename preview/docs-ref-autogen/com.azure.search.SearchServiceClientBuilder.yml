### YamlMime:ManagedReference
items:
- uid: "com.azure.search.SearchServiceClientBuilder"
  id: "SearchServiceClientBuilder"
  parent: "com.azure.search"
  children:
  - "com.azure.search.SearchServiceClientBuilder.SearchServiceClientBuilder()"
  - "com.azure.search.SearchServiceClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  - "com.azure.search.SearchServiceClientBuilder.buildAsyncClient()"
  - "com.azure.search.SearchServiceClientBuilder.buildClient()"
  - "com.azure.search.SearchServiceClientBuilder.configuration(com.azure.core.util.Configuration)"
  - "com.azure.search.SearchServiceClientBuilder.credential(com.azure.search.SearchApiKeyCredential)"
  - "com.azure.search.SearchServiceClientBuilder.endpoint(java.lang.String)"
  - "com.azure.search.SearchServiceClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  - "com.azure.search.SearchServiceClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  - "com.azure.search.SearchServiceClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  - "com.azure.search.SearchServiceClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)"
  - "com.azure.search.SearchServiceClientBuilder.serviceVersion(com.azure.search.SearchServiceVersion)"
  langs:
  - "java"
  name: "SearchServiceClientBuilder"
  nameWithType: "SearchServiceClientBuilder"
  fullName: "com.azure.search.SearchServiceClientBuilder"
  type: "Class"
  package: "com.azure.search"
  summary: "This class provides a fluent builder API to help aid the configuration and instantiation of <xref uid=\"com.azure.search.SearchServiceClient\" data-throw-if-not-resolved=\"false\">SearchServiceClients</xref> and <xref uid=\"com.azure.search.SearchServiceAsyncClient\" data-throw-if-not-resolved=\"false\">SearchServiceAsyncClients</xref>. Call <xref uid=\"com.azure.search.SearchServiceClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\">buildClient</xref> and <xref uid=\"com.azure.search.SearchServiceClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">buildAsyncClient</xref> respectively to construct an instance of the desired client.\n\nThe following information must be provided to successfully create a client.\n\n *  <xref uid=\"com.azure.search.SearchServiceClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">#endpoint(String)</xref>\n *  <xref uid=\"com.azure.search.SearchServiceClientBuilder.credential(com.azure.search.SearchApiKeyCredential)\" data-throw-if-not-resolved=\"false\">#credential(SearchApiKeyCredential)</xref> or <xref uid=\"com.azure.search.SearchServiceClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\">#pipeline(HttpPipeline)</xref>"
  syntax:
    content: "public final class SearchServiceClientBuilder"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.search.SearchServiceClientBuilder.SearchServiceClientBuilder()"
  id: "SearchServiceClientBuilder()"
  parent: "com.azure.search.SearchServiceClientBuilder"
  langs:
  - "java"
  name: "SearchServiceClientBuilder()"
  nameWithType: "SearchServiceClientBuilder.SearchServiceClientBuilder()"
  fullName: "com.azure.search.SearchServiceClientBuilder.SearchServiceClientBuilder()"
  overload: "com.azure.search.SearchServiceClientBuilder.SearchServiceClientBuilder*"
  type: "Constructor"
  package: "com.azure.search"
  summary: "Creates a builder instance that is able to configure and construct <xref uid=\"com.azure.search.SearchServiceClient\" data-throw-if-not-resolved=\"false\">SearchServiceClients</xref> and <xref uid=\"com.azure.search.SearchServiceAsyncClient\" data-throw-if-not-resolved=\"false\">SearchServiceAsyncClients</xref>."
  syntax:
    content: "public SearchServiceClientBuilder()"
- uid: "com.azure.search.SearchServiceClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  id: "addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  parent: "com.azure.search.SearchServiceClientBuilder"
  langs:
  - "java"
  name: "addPolicy(HttpPipelinePolicy policy)"
  nameWithType: "SearchServiceClientBuilder.addPolicy(HttpPipelinePolicy policy)"
  fullName: "com.azure.search.SearchServiceClientBuilder.addPolicy(HttpPipelinePolicy policy)"
  overload: "com.azure.search.SearchServiceClientBuilder.addPolicy*"
  type: "Method"
  package: "com.azure.search"
  summary: "Adds a pipeline policy to apply to each request sent.\n\nThis method may be called multiple times, each time it is called the policy will be added to the end of added policy list. All policies will be added after the retry policy."
  syntax:
    content: "public SearchServiceClientBuilder addPolicy(HttpPipelinePolicy policy)"
    parameters:
    - id: "policy"
      type: "com.azure.core.http.policy.HttpPipelinePolicy"
      description: "The pipeline policies to added to the policy list."
    return:
      type: "com.azure.search.SearchServiceClientBuilder"
      description: "The updated SearchServiceClientBuilder object."
- uid: "com.azure.search.SearchServiceClientBuilder.buildAsyncClient()"
  id: "buildAsyncClient()"
  parent: "com.azure.search.SearchServiceClientBuilder"
  langs:
  - "java"
  name: "buildAsyncClient()"
  nameWithType: "SearchServiceClientBuilder.buildAsyncClient()"
  fullName: "com.azure.search.SearchServiceClientBuilder.buildAsyncClient()"
  overload: "com.azure.search.SearchServiceClientBuilder.buildAsyncClient*"
  type: "Method"
  package: "com.azure.search"
  summary: "Creates a <xref uid=\"com.azure.search.SearchServiceAsyncClient\" data-throw-if-not-resolved=\"false\">SearchServiceAsyncClient</xref> based on options set in the Builder. Every time `buildAsyncClient()` is called a new instance of <xref uid=\"com.azure.search.SearchServiceAsyncClient\" data-throw-if-not-resolved=\"false\">SearchServiceAsyncClient</xref> is created.\n\nIf <xref uid=\"com.azure.search.SearchServiceClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then only the `pipeline` and <xref uid=\"com.azure.search.SearchServiceClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> are used to create the <xref uid=\"com.azure.search.SearchServiceAsyncClient\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored."
  syntax:
    content: "public SearchServiceAsyncClient buildAsyncClient()"
    return:
      type: "com.azure.search.SearchServiceAsyncClient"
      description: "A SearchServiceAsyncClient with the options set from the builder."
- uid: "com.azure.search.SearchServiceClientBuilder.buildClient()"
  id: "buildClient()"
  parent: "com.azure.search.SearchServiceClientBuilder"
  langs:
  - "java"
  name: "buildClient()"
  nameWithType: "SearchServiceClientBuilder.buildClient()"
  fullName: "com.azure.search.SearchServiceClientBuilder.buildClient()"
  overload: "com.azure.search.SearchServiceClientBuilder.buildClient*"
  type: "Method"
  package: "com.azure.search"
  summary: "Creates a <xref uid=\"com.azure.search.SearchServiceClient\" data-throw-if-not-resolved=\"false\">SearchServiceClient</xref> based on options set in the Builder. Every time `buildClient()` is called a new instance of <xref uid=\"com.azure.search.SearchServiceClient\" data-throw-if-not-resolved=\"false\">SearchServiceClient</xref> is created.\n\nIf <xref uid=\"com.azure.search.SearchServiceClientBuilder.pipeline(com.azure.core.http.HttpPipeline)\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then only the `pipeline` and <xref uid=\"com.azure.search.SearchServiceClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> are used to create the <xref uid=\"com.azure.search.SearchServiceClient\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored."
  syntax:
    content: "public SearchServiceClient buildClient()"
    return:
      type: "com.azure.search.SearchServiceClient"
      description: "A SearchServiceClient with the options set from the builder."
- uid: "com.azure.search.SearchServiceClientBuilder.configuration(com.azure.core.util.Configuration)"
  id: "configuration(com.azure.core.util.Configuration)"
  parent: "com.azure.search.SearchServiceClientBuilder"
  langs:
  - "java"
  name: "configuration(Configuration configuration)"
  nameWithType: "SearchServiceClientBuilder.configuration(Configuration configuration)"
  fullName: "com.azure.search.SearchServiceClientBuilder.configuration(Configuration configuration)"
  overload: "com.azure.search.SearchServiceClientBuilder.configuration*"
  type: "Method"
  package: "com.azure.search"
  summary: "Sets the configuration store that is used during construction of the service client.\n\nThe default configuration store is a clone of the <xref uid=\"Configuration#getGlobalConfiguration()\" data-throw-if-not-resolved=\"false\">global\n configuration store</xref>, use <xref uid=\"\" data-throw-if-not-resolved=\"false\">Configuration#NONE</xref> to bypass using configuration settings during construction."
  syntax:
    content: "public SearchServiceClientBuilder configuration(Configuration configuration)"
    parameters:
    - id: "configuration"
      type: "com.azure.core.util.Configuration"
      description: "The configuration store that will be used."
    return:
      type: "com.azure.search.SearchServiceClientBuilder"
      description: "The updated SearchServiceClientBuilder object."
- uid: "com.azure.search.SearchServiceClientBuilder.credential(com.azure.search.SearchApiKeyCredential)"
  id: "credential(com.azure.search.SearchApiKeyCredential)"
  parent: "com.azure.search.SearchServiceClientBuilder"
  langs:
  - "java"
  name: "credential(SearchApiKeyCredential searchApiKeyCredential)"
  nameWithType: "SearchServiceClientBuilder.credential(SearchApiKeyCredential searchApiKeyCredential)"
  fullName: "com.azure.search.SearchServiceClientBuilder.credential(SearchApiKeyCredential searchApiKeyCredential)"
  overload: "com.azure.search.SearchServiceClientBuilder.credential*"
  type: "Method"
  package: "com.azure.search"
  summary: "Sets the <xref uid=\"com.azure.search.SearchApiKeyCredential\" data-throw-if-not-resolved=\"false\">SearchApiKeyCredential</xref> used to authenticate HTTP requests."
  syntax:
    content: "public SearchServiceClientBuilder credential(SearchApiKeyCredential searchApiKeyCredential)"
    parameters:
    - id: "searchApiKeyCredential"
      type: "com.azure.search.SearchApiKeyCredential"
      description: "The <xref uid=\"com.azure.search.SearchApiKeyCredential\" data-throw-if-not-resolved=\"false\">SearchApiKeyCredential</xref> used to authenticate HTTP requests."
    return:
      type: "com.azure.search.SearchServiceClientBuilder"
      description: "The updated SearchServiceClientBuilder object."
- uid: "com.azure.search.SearchServiceClientBuilder.endpoint(java.lang.String)"
  id: "endpoint(java.lang.String)"
  parent: "com.azure.search.SearchServiceClientBuilder"
  langs:
  - "java"
  name: "endpoint(String endpoint)"
  nameWithType: "SearchServiceClientBuilder.endpoint(String endpoint)"
  fullName: "com.azure.search.SearchServiceClientBuilder.endpoint(String endpoint)"
  overload: "com.azure.search.SearchServiceClientBuilder.endpoint*"
  type: "Method"
  package: "com.azure.search"
  summary: "Sets the service endpoint for the Azure Search instance."
  syntax:
    content: "public SearchServiceClientBuilder endpoint(String endpoint)"
    parameters:
    - id: "endpoint"
      type: "java.lang.String"
      description: "The URL of the Azure Search instance."
    return:
      type: "com.azure.search.SearchServiceClientBuilder"
      description: "The updated SearchServiceClientBuilder object."
- uid: "com.azure.search.SearchServiceClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  id: "httpClient(com.azure.core.http.HttpClient)"
  parent: "com.azure.search.SearchServiceClientBuilder"
  langs:
  - "java"
  name: "httpClient(HttpClient client)"
  nameWithType: "SearchServiceClientBuilder.httpClient(HttpClient client)"
  fullName: "com.azure.search.SearchServiceClientBuilder.httpClient(HttpClient client)"
  overload: "com.azure.search.SearchServiceClientBuilder.httpClient*"
  type: "Method"
  package: "com.azure.search"
  summary: "Sets the HTTP client to use for sending requests and receiving responses."
  syntax:
    content: "public SearchServiceClientBuilder httpClient(HttpClient client)"
    parameters:
    - id: "client"
      type: "com.azure.core.http.HttpClient"
      description: "The HTTP client that will handle sending requests and receiving responses."
    return:
      type: "com.azure.search.SearchServiceClientBuilder"
      description: "The updated SearchServiceClientBuilder object."
- uid: "com.azure.search.SearchServiceClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  id: "httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  parent: "com.azure.search.SearchServiceClientBuilder"
  langs:
  - "java"
  name: "httpLogOptions(HttpLogOptions logOptions)"
  nameWithType: "SearchServiceClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  fullName: "com.azure.search.SearchServiceClientBuilder.httpLogOptions(HttpLogOptions logOptions)"
  overload: "com.azure.search.SearchServiceClientBuilder.httpLogOptions*"
  type: "Method"
  package: "com.azure.search"
  summary: "Sets the logging configuration for HTTP requests and responses.\n\nIf logging configurations aren't provided HTTP requests and responses won't be logged."
  syntax:
    content: "public SearchServiceClientBuilder httpLogOptions(HttpLogOptions logOptions)"
    parameters:
    - id: "logOptions"
      type: "com.azure.core.http.policy.HttpLogOptions"
      description: "The logging configuration for HTTP requests and responses."
    return:
      type: "com.azure.search.SearchServiceClientBuilder"
      description: "The updated SearchServiceClientBuilder object."
- uid: "com.azure.search.SearchServiceClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  id: "pipeline(com.azure.core.http.HttpPipeline)"
  parent: "com.azure.search.SearchServiceClientBuilder"
  langs:
  - "java"
  name: "pipeline(HttpPipeline httpPipeline)"
  nameWithType: "SearchServiceClientBuilder.pipeline(HttpPipeline httpPipeline)"
  fullName: "com.azure.search.SearchServiceClientBuilder.pipeline(HttpPipeline httpPipeline)"
  overload: "com.azure.search.SearchServiceClientBuilder.pipeline*"
  type: "Method"
  package: "com.azure.search"
  summary: "Sets the HTTP pipeline to use for the service client.\n\nIf `pipeline` is set, all other settings are ignored, aside from <xref uid=\"com.azure.search.SearchServiceClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> when building a <xref uid=\"com.azure.search.SearchServiceClient\" data-throw-if-not-resolved=\"false\">SearchServiceClient</xref> or <xref uid=\"com.azure.search.SearchServiceAsyncClient\" data-throw-if-not-resolved=\"false\">SearchServiceAsyncClient</xref>."
  syntax:
    content: "public SearchServiceClientBuilder pipeline(HttpPipeline httpPipeline)"
    parameters:
    - id: "httpPipeline"
      type: "com.azure.core.http.HttpPipeline"
      description: "The HTTP pipeline to use for sending service requests and receiving responses."
    return:
      type: "com.azure.search.SearchServiceClientBuilder"
      description: "The updated SearchServiceClientBuilder object."
- uid: "com.azure.search.SearchServiceClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)"
  id: "retryPolicy(com.azure.core.http.policy.RetryPolicy)"
  parent: "com.azure.search.SearchServiceClientBuilder"
  langs:
  - "java"
  name: "retryPolicy(RetryPolicy retryPolicy)"
  nameWithType: "SearchServiceClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  fullName: "com.azure.search.SearchServiceClientBuilder.retryPolicy(RetryPolicy retryPolicy)"
  overload: "com.azure.search.SearchServiceClientBuilder.retryPolicy*"
  type: "Method"
  package: "com.azure.search"
  summary: "Sets the <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\">HttpPipelinePolicy</xref> that will attempt to retry requests when needed.\n\nA default retry policy will be supplied if one isn't provided."
  syntax:
    content: "public SearchServiceClientBuilder retryPolicy(RetryPolicy retryPolicy)"
    parameters:
    - id: "retryPolicy"
      type: "com.azure.core.http.policy.RetryPolicy"
      description: "The <xref uid=\"\" data-throw-if-not-resolved=\"false\">RetryPolicy</xref> that will attempt to retry requests when needed."
    return:
      type: "com.azure.search.SearchServiceClientBuilder"
      description: "The updated SearchServiceClientBuilder object."
- uid: "com.azure.search.SearchServiceClientBuilder.serviceVersion(com.azure.search.SearchServiceVersion)"
  id: "serviceVersion(com.azure.search.SearchServiceVersion)"
  parent: "com.azure.search.SearchServiceClientBuilder"
  langs:
  - "java"
  name: "serviceVersion(SearchServiceVersion serviceVersion)"
  nameWithType: "SearchServiceClientBuilder.serviceVersion(SearchServiceVersion serviceVersion)"
  fullName: "com.azure.search.SearchServiceClientBuilder.serviceVersion(SearchServiceVersion serviceVersion)"
  overload: "com.azure.search.SearchServiceClientBuilder.serviceVersion*"
  type: "Method"
  package: "com.azure.search"
  summary: "Sets the <xref uid=\"com.azure.search.SearchServiceVersion\" data-throw-if-not-resolved=\"false\">SearchServiceVersion</xref> that is used when making API requests.\n\nIf a service version is not provided, <xref uid=\"com.azure.search.SearchServiceVersion.getLatest()\" data-throw-if-not-resolved=\"false\">SearchServiceVersion#getLatest()</xref> will be used as a default. When this default is used updating to a newer client library may result in a newer version of the service being used."
  syntax:
    content: "public SearchServiceClientBuilder serviceVersion(SearchServiceVersion serviceVersion)"
    parameters:
    - id: "serviceVersion"
      type: "com.azure.search.SearchServiceVersion"
      description: "The version of the service to be used when making requests."
    return:
      type: "com.azure.search.SearchServiceClientBuilder"
      description: "The updated SearchServiceClientBuilder object."
references:
- uid: "com.azure.search.SearchServiceClientBuilder.SearchServiceClientBuilder*"
  name: "SearchServiceClientBuilder"
  nameWithType: "SearchServiceClientBuilder.SearchServiceClientBuilder"
  fullName: "com.azure.search.SearchServiceClientBuilder.SearchServiceClientBuilder"
  package: "com.azure.search"
- uid: "com.azure.search.SearchServiceClient"
  name: "SearchServiceClient"
  nameWithType: "SearchServiceClient"
  fullName: "com.azure.search.SearchServiceClient"
- uid: "com.azure.search.SearchServiceClientBuilder.buildClient*"
  name: "buildClient"
  nameWithType: "SearchServiceClientBuilder.buildClient"
  fullName: "com.azure.search.SearchServiceClientBuilder.buildClient"
  package: "com.azure.search"
- uid: "com.azure.search.SearchServiceAsyncClient"
  name: "SearchServiceAsyncClient"
  nameWithType: "SearchServiceAsyncClient"
  fullName: "com.azure.search.SearchServiceAsyncClient"
- uid: "com.azure.search.SearchServiceClientBuilder.buildAsyncClient*"
  name: "buildAsyncClient"
  nameWithType: "SearchServiceClientBuilder.buildAsyncClient"
  fullName: "com.azure.search.SearchServiceClientBuilder.buildAsyncClient"
  package: "com.azure.search"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.search.SearchServiceClientBuilder.endpoint*"
  name: "endpoint"
  nameWithType: "SearchServiceClientBuilder.endpoint"
  fullName: "com.azure.search.SearchServiceClientBuilder.endpoint"
  package: "com.azure.search"
- uid: "com.azure.search.SearchApiKeyCredential"
  name: "SearchApiKeyCredential"
  nameWithType: "SearchApiKeyCredential"
  fullName: "com.azure.search.SearchApiKeyCredential"
- uid: "com.azure.search.SearchServiceClientBuilder.credential*"
  name: "credential"
  nameWithType: "SearchServiceClientBuilder.credential"
  fullName: "com.azure.search.SearchServiceClientBuilder.credential"
  package: "com.azure.search"
- uid: "com.azure.core.http.policy.HttpLogOptions"
  spec.java:
  - uid: "com.azure.core.http.policy.HttpLogOptions"
    name: "HttpLogOptions"
    fullName: "com.azure.core.http.policy.HttpLogOptions"
- uid: "com.azure.search.SearchServiceClientBuilder.httpLogOptions*"
  name: "httpLogOptions"
  nameWithType: "SearchServiceClientBuilder.httpLogOptions"
  fullName: "com.azure.search.SearchServiceClientBuilder.httpLogOptions"
  package: "com.azure.search"
- uid: "com.azure.core.http.policy.HttpPipelinePolicy"
  spec.java:
  - uid: "com.azure.core.http.policy.HttpPipelinePolicy"
    name: "HttpPipelinePolicy"
    fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
- uid: "com.azure.search.SearchServiceClientBuilder.addPolicy*"
  name: "addPolicy"
  nameWithType: "SearchServiceClientBuilder.addPolicy"
  fullName: "com.azure.search.SearchServiceClientBuilder.addPolicy"
  package: "com.azure.search"
- uid: "com.azure.core.http.HttpClient"
  spec.java:
  - uid: "com.azure.core.http.HttpClient"
    name: "HttpClient"
    fullName: "com.azure.core.http.HttpClient"
- uid: "com.azure.search.SearchServiceClientBuilder.httpClient*"
  name: "httpClient"
  nameWithType: "SearchServiceClientBuilder.httpClient"
  fullName: "com.azure.search.SearchServiceClientBuilder.httpClient"
  package: "com.azure.search"
- uid: "com.azure.core.http.HttpPipeline"
  spec.java:
  - uid: "com.azure.core.http.HttpPipeline"
    name: "HttpPipeline"
    fullName: "com.azure.core.http.HttpPipeline"
- uid: "com.azure.search.SearchServiceClientBuilder.pipeline*"
  name: "pipeline"
  nameWithType: "SearchServiceClientBuilder.pipeline"
  fullName: "com.azure.search.SearchServiceClientBuilder.pipeline"
  package: "com.azure.search"
- uid: "com.azure.core.util.Configuration"
  spec.java:
  - uid: "com.azure.core.util.Configuration"
    name: "Configuration"
    fullName: "com.azure.core.util.Configuration"
- uid: "com.azure.search.SearchServiceClientBuilder.configuration*"
  name: "configuration"
  nameWithType: "SearchServiceClientBuilder.configuration"
  fullName: "com.azure.search.SearchServiceClientBuilder.configuration"
  package: "com.azure.search"
- uid: "com.azure.core.http.policy.RetryPolicy"
  spec.java:
  - uid: "com.azure.core.http.policy.RetryPolicy"
    name: "RetryPolicy"
    fullName: "com.azure.core.http.policy.RetryPolicy"
- uid: "com.azure.search.SearchServiceClientBuilder.retryPolicy*"
  name: "retryPolicy"
  nameWithType: "SearchServiceClientBuilder.retryPolicy"
  fullName: "com.azure.search.SearchServiceClientBuilder.retryPolicy"
  package: "com.azure.search"
- uid: "com.azure.search.SearchServiceVersion"
  name: "SearchServiceVersion"
  nameWithType: "SearchServiceVersion"
  fullName: "com.azure.search.SearchServiceVersion"
- uid: "com.azure.search.SearchServiceClientBuilder.serviceVersion*"
  name: "serviceVersion"
  nameWithType: "SearchServiceClientBuilder.serviceVersion"
  fullName: "com.azure.search.SearchServiceClientBuilder.serviceVersion"
  package: "com.azure.search"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
