### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource*"
fullName: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource"
name: "getInputSource"
nameWithType: "NonBlockingJsonParserBase.getInputSource"
members:
- uid: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource()"
  fullName: "com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getInputSource()"
  name: "getInputSource()"
  nameWithType: "NonBlockingJsonParserBase.getInputSource()"
  summary: "Method that can be used to get access to object that is used to access input being parsed; this is usually either <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref> or <xref uid=\"java.io.Reader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Reader\"></xref>, depending on what parser was constructed with. Note that returned value may be null in some cases; including case where parser implementation does not want to exposed raw source to caller. In cases where input has been decorated, object returned here is the decorated version; this allows some level of interaction between users of parser and decorator object.\n\nIn general use of this accessor should be considered as \"last effort\", i.e. only used if no other mechanism is applicable."
  overridden: "com.fasterxml.jackson.core.JsonParser.getInputSource()"
  syntax: "public Object getInputSource()"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.json.async"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
