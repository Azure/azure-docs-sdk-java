### YamlMime:ManagedReference
items:
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  id: FormTrainingAsyncClient
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer
  children:
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.FormTrainingAsyncClient(com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl,com.azure.ai.formrecognizer.FormRecognizerServiceVersion)
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining(java.lang.String,boolean)
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining(java.lang.String,boolean,boolean,java.lang.String,java.time.Duration)
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModel(java.lang.String)
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse(java.lang.String)
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountProperties()
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse()
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModel(java.lang.String)
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModelWithResponse(java.lang.String)
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModelWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.getModelInfos()
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.getModelInfos(com.azure.core.util.Context)
  - com.azure.ai.formrecognizer.FormTrainingAsyncClient.getServiceVersion()
  langs:
  - java
  name: FormTrainingAsyncClient
  nameWithType: FormTrainingAsyncClient
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  type: Class
  package: com.azure.ai.formrecognizer
  summary: >-
    This class provides an asynchronous client that contains model management operations that apply to Azure Form Recognizer. Operations allowed by the client are, to creating, training of custom models, delete models, list models and get subscription account information.


    **Instantiating an asynchronous Form Training Client**


    ```java

    FormTrainingAsyncClient formTrainingAsyncClient = new FormRecognizerClientBuilder().buildAsyncClient()
         .getFormTrainingAsyncClient();
    ```
  syntax:
    content: public class FormTrainingAsyncClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.FormTrainingAsyncClient(com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl,com.azure.ai.formrecognizer.FormRecognizerServiceVersion)
  id: FormTrainingAsyncClient(com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl,com.azure.ai.formrecognizer.FormRecognizerServiceVersion)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: FormTrainingAsyncClient(FormRecognizerClientImpl service, FormRecognizerServiceVersion serviceVersion)
  nameWithType: FormTrainingAsyncClient.FormTrainingAsyncClient(FormRecognizerClientImpl service, FormRecognizerServiceVersion serviceVersion)
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.FormTrainingAsyncClient(FormRecognizerClientImpl service, FormRecognizerServiceVersion serviceVersion)
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.FormTrainingAsyncClient*
  type: Constructor
  package: com.azure.ai.formrecognizer
  summary: Create a <xref uid="com.azure.ai.formrecognizer.FormTrainingClient" data-throw-if-not-resolved="false">FormTrainingClient</xref> that sends requests to the Form Recognizer service's endpoint. Each service call goes through the <xref uid="com.azure.ai.formrecognizer.FormRecognizerClientBuilder.pipeline*" data-throw-if-not-resolved="false">http pipeline</xref>.
  syntax:
    content: " FormTrainingAsyncClient(FormRecognizerClientImpl service, FormRecognizerServiceVersion serviceVersion)"
    parameters:
    - id: service
      type: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
      description: The proxy service used to perform REST calls.
    - id: serviceVersion
      type: com.azure.ai.formrecognizer.FormRecognizerServiceVersion
      description: The versions of Azure Form Recognizer supported by this client library.
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining(java.lang.String,boolean)
  id: beginTraining(java.lang.String,boolean)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: beginTraining(String fileSourceUrl, boolean useLabelFile)
  nameWithType: FormTrainingAsyncClient.beginTraining(String fileSourceUrl, boolean useLabelFile)
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining(String fileSourceUrl, boolean useLabelFile)
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Create and train a custom model. Models are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.


    The service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.


    **Code sample**


    ```java

    String trainingSetSource = "{training-set-SAS-URL}";
     boolean useLabelFile = true;
     formTrainingAsyncClient.beginTraining(trainingSetSource, useLabelFile).subscribe(
         recognizePollingOperation -> {
             // if training polling operation completed, retrieve the final result.
             recognizePollingOperation.getFinalResult().subscribe(customFormModel -> {
                 System.out.printf("Model Id: %s%n", customFormModel.getModelId());
                 System.out.printf("Model Status: %s%n", customFormModel.getModelStatus());
                 customFormModel.getSubModels().forEach(customFormSubModel ->
                     customFormSubModel.getFieldMap().forEach((key, customFormModelField) ->
                         System.out.printf("Form type: %s Field Text: %s Field Accuracy: %s%n",
                             key, customFormModelField.getName(), customFormModelField.getAccuracy())));
             });
         });
    ```
  syntax:
    content: public PollerFlux<OperationResult,CustomFormModel> beginTraining(String fileSourceUrl, boolean useLabelFile)
    parameters:
    - id: fileSourceUrl
      type: java.lang.String
      description: >-
        source URL parameter that is either an externally accessible Azure
         storage blob container Uri (preferably a Shared Access Signature Uri).
    - id: useLabelFile
      type: boolean
      description: Boolean to specify the use of labeled files for training the model.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.ai.formrecognizer.models.OperationResult,com.azure.ai.formrecognizer.models.CustomFormModel>
      description: >-
        A <xref uid="com.azure.core.util.polling.PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the training model operation until it has completed, has failed, or has
         been cancelled.
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining(java.lang.String,boolean,boolean,java.lang.String,java.time.Duration)
  id: beginTraining(java.lang.String,boolean,boolean,java.lang.String,java.time.Duration)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: beginTraining(String fileSourceUrl, boolean useLabelFile, boolean includeSubFolders, String filePrefix, Duration pollInterval)
  nameWithType: FormTrainingAsyncClient.beginTraining(String fileSourceUrl, boolean useLabelFile, boolean includeSubFolders, String filePrefix, Duration pollInterval)
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining(String fileSourceUrl, boolean useLabelFile, boolean includeSubFolders, String filePrefix, Duration pollInterval)
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: "Create and train a custom model.\n\nModels are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString trainingSetSource = \"{training-set-SAS-URL}\";\n boolean isIncludeSubFolders = false; // {is-include-subfolders}\n String filePrefix = \"{file-prefix}\";\n boolean useLabelFile = true;\n \n formTrainingAsyncClient.beginTraining(trainingSetSource, useLabelFile, isIncludeSubFolders, filePrefix,\n     Duration.ofSeconds(5)).subscribe(recognizePollingOperation -> {\n         // if training polling operation completed, retrieve the final result.\n         recognizePollingOperation.getFinalResult().subscribe(customFormModel -> {\n             System.out.printf(\"Model Id: %s%n\", customFormModel.getModelId());\n             System.out.printf(\"Model Status: %s%n\", customFormModel.getModelStatus());\n             customFormModel.getSubModels().forEach(customFormSubModel ->\n                 customFormSubModel.getFieldMap().forEach((key, customFormModelField) ->\n                     System.out.printf(\"Form Type: %s Field Text: %s Field Accuracy: %s%n\",\n                         key, customFormModelField.getName(), customFormModelField.getAccuracy())));\n         });\n     });\n```"
  syntax:
    content: public PollerFlux<OperationResult,CustomFormModel> beginTraining(String fileSourceUrl, boolean useLabelFile, boolean includeSubFolders, String filePrefix, Duration pollInterval)
    parameters:
    - id: fileSourceUrl
      type: java.lang.String
      description: >-
        source URL parameter that is either an externally accessible Azure
         storage blob container Uri (preferably a Shared Access Signature Uri).
    - id: useLabelFile
      type: boolean
      description: Boolean to specify the use of labeled files for training the model.
    - id: includeSubFolders
      type: boolean
      description: >-
        to indicate if sub folders within the set of prefix folders will
         also need to be included when searching for content to be preprocessed.
    - id: filePrefix
      type: java.lang.String
      description: >-
        A case-sensitive prefix string to filter documents in the source path
         for training. For example, when using a Azure storage blob Uri, use the prefix to restrict
         sub folders for training.
    - id: pollInterval
      type: java.time.Duration
      description: >-
        Duration between each poll for the operation status. If none is specified, a default of
         5 seconds is used.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.ai.formrecognizer.models.OperationResult,com.azure.ai.formrecognizer.models.CustomFormModel>
      description: >-
        A <xref uid="com.azure.core.util.polling.PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the extract receipt operation until it
         has completed, has failed, or has been cancelled.
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModel(java.lang.String)
  id: deleteModel(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: deleteModel(String modelId)
  nameWithType: FormTrainingAsyncClient.deleteModel(String modelId)
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModel(String modelId)
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModel*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Deletes the specified custom model.


    **Code sample**


    ```java

    String modelId = "{model_id}";
     formTrainingAsyncClient.deleteModel(modelId).subscribe(val ->
         System.out.printf("Model Id: %s is deleted%n", modelId));
    ```
  syntax:
    content: public Mono<Void> deleteModel(String modelId)
    parameters:
    - id: modelId
      type: java.lang.String
      description: The UUID string format model identifier.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: An empty Mono.
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse(java.lang.String)
  id: deleteModelWithResponse(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: deleteModelWithResponse(String modelId)
  nameWithType: FormTrainingAsyncClient.deleteModelWithResponse(String modelId)
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse(String modelId)
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Deletes the specified custom model.


    **Code sample**


    ```java

    String modelId = "{model_id}";
     formTrainingAsyncClient.deleteModelWithResponse(modelId).subscribe(response -> {
         System.out.printf("Response Status Code: %d.", response.getStatusCode());
         System.out.printf("Model Id: %s is deleted%n", modelId);
     });
    ```
  syntax:
    content: public Mono<Response<Void>> deleteModelWithResponse(String modelId)
    parameters:
    - id: modelId
      type: java.lang.String
      description: The UUID string format model identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing containing status code and HTTP headers
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse(java.lang.String,com.azure.core.util.Context)
  id: deleteModelWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: deleteModelWithResponse(String modelId, Context context)
  nameWithType: FormTrainingAsyncClient.deleteModelWithResponse(String modelId, Context context)
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse(String modelId, Context context)
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer
  syntax:
    content: " Mono<Response<Void>> deleteModelWithResponse(String modelId, Context context)"
    parameters:
    - id: modelId
      type: java.lang.String
    - id: context
      type: com.azure.core.util.Context
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountProperties()
  id: getAccountProperties()
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: getAccountProperties()
  nameWithType: FormTrainingAsyncClient.getAccountProperties()
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountProperties()
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountProperties*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Get account information for all custom models.


    **Code sample**


    ```java

    formTrainingAsyncClient.getAccountProperties().subscribe(accountProperties -> {
         System.out.printf("Max number of models that can be trained for this account: %s%n",
             accountProperties.getLimit());
         System.out.printf("Current count of trained custom models: %d%n", accountProperties.getCount());
     });
    ```
  syntax:
    content: public Mono<AccountProperties> getAccountProperties()
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.models.AccountProperties>
      description: The account information.
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse()
  id: getAccountPropertiesWithResponse()
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: getAccountPropertiesWithResponse()
  nameWithType: FormTrainingAsyncClient.getAccountPropertiesWithResponse()
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse()
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Get account information.


    **Code sample**


    ```java

    formTrainingAsyncClient.getAccountPropertiesWithResponse().subscribe(response -> {
         System.out.printf("Response Status Code: %d.", response.getStatusCode());
         AccountProperties accountProperties = response.getValue();
         System.out.printf("Max number of models that can be trained for this account: %s%n",
             accountProperties.getLimit());
         System.out.printf("Current count of trained custom models: %d%n", accountProperties.getCount());
     });
    ```
  syntax:
    content: public Mono<Response<AccountProperties>> getAccountPropertiesWithResponse()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.models.AccountProperties>>
      description: A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> containing the requested account information details.
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse(com.azure.core.util.Context)
  id: getAccountPropertiesWithResponse(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: getAccountPropertiesWithResponse(Context context)
  nameWithType: FormTrainingAsyncClient.getAccountPropertiesWithResponse(Context context)
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse(Context context)
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer
  syntax:
    content: " Mono<Response<AccountProperties>> getAccountPropertiesWithResponse(Context context)"
    parameters:
    - id: context
      type: com.azure.core.util.Context
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.models.AccountProperties>>
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModel(java.lang.String)
  id: getCustomModel(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: getCustomModel(String modelId)
  nameWithType: FormTrainingAsyncClient.getCustomModel(String modelId)
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModel(String modelId)
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: "Get detailed information for a specified custom model id.\n\n**Code sample**\n\n```java\nString modelId = \"{model_id}\";\n formTrainingAsyncClient.getCustomModel(modelId).subscribe(customFormModel -> {\n     System.out.printf(\"Model Id: %s%n\", customFormModel.getModelId());\n     System.out.printf(\"Model Status: %s%n\", customFormModel.getModelStatus());\n     customFormModel.getSubModels().forEach(customFormSubModel ->\n         customFormSubModel.getFieldMap().forEach((key, customFormModelField) ->\n             System.out.printf(\"Form Type: %s Field Text: %s Field Accuracy: %s%n\",\n                 key, customFormModelField.getName(), customFormModelField.getAccuracy())));\n \n });\n```"
  syntax:
    content: public Mono<CustomFormModel> getCustomModel(String modelId)
    parameters:
    - id: modelId
      type: java.lang.String
      description: The UUID string format model identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.models.CustomFormModel>
      description: The detailed information for the specified model.
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModelWithResponse(java.lang.String)
  id: getCustomModelWithResponse(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: getCustomModelWithResponse(String modelId)
  nameWithType: FormTrainingAsyncClient.getCustomModelWithResponse(String modelId)
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModelWithResponse(String modelId)
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModelWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    Get detailed information for a specified custom model id with Http response


    **Code sample**


    ```java

    String modelId = "{model_id}";
     formTrainingAsyncClient.getCustomModelWithResponse(modelId).subscribe(response -> {
         System.out.printf("Response Status Code: %d.", response.getStatusCode());
         CustomFormModel customFormModel = response.getValue();
         System.out.printf("Model Id: %s%n", customFormModel.getModelId());
         System.out.printf("Model Status: %s%n", customFormModel.getModelStatus());
         customFormModel.getSubModels().forEach(customFormSubModel ->
             customFormSubModel.getFieldMap().forEach((key, customFormModelField) ->
                 System.out.printf("Form Type: %s Field Text: %s Field Accuracy: %s%n",
                     key, customFormModelField.getName(), customFormModelField.getAccuracy())));
     });
    ```
  syntax:
    content: public Mono<Response<CustomFormModel>> getCustomModelWithResponse(String modelId)
    parameters:
    - id: modelId
      type: java.lang.String
      description: The UUID string format model identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.models.CustomFormModel>>
      description: A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> containing the requested <xref uid="com.azure.ai.formrecognizer.models.CustomFormModel" data-throw-if-not-resolved="false">model</xref>.
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModelWithResponse(java.lang.String,com.azure.core.util.Context)
  id: getCustomModelWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: getCustomModelWithResponse(String modelId, Context context)
  nameWithType: FormTrainingAsyncClient.getCustomModelWithResponse(String modelId, Context context)
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModelWithResponse(String modelId, Context context)
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModelWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer
  syntax:
    content: " Mono<Response<CustomFormModel>> getCustomModelWithResponse(String modelId, Context context)"
    parameters:
    - id: modelId
      type: java.lang.String
    - id: context
      type: com.azure.core.util.Context
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.models.CustomFormModel>>
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getModelInfos()
  id: getModelInfos()
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: getModelInfos()
  nameWithType: FormTrainingAsyncClient.getModelInfos()
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getModelInfos()
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getModelInfos*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: >-
    List information for all models.


    **Code sample**


    ```java

    formTrainingAsyncClient.getModelInfos().subscribe(customModel ->
         System.out.printf("Model Id: %s, Model status: %s, Created on: %s, Last updated on: %s.%n",
             customModel.getModelId(),
             customModel.getStatus(),
             customModel.getCreatedOn(),
             customModel.getLastUpdatedOn()));
    ```
  syntax:
    content: public PagedFlux<CustomFormModelInfo> getModelInfos()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.ai.formrecognizer.models.CustomFormModelInfo>
      description: <xref uid="com.azure.core.http.rest.PagedFlux" data-throw-if-not-resolved="false">PagedFlux</xref> of <xref uid="com.azure.ai.formrecognizer.models.CustomFormModelInfo" data-throw-if-not-resolved="false">CustomFormModelInfo</xref>.
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getModelInfos(com.azure.core.util.Context)
  id: getModelInfos(com.azure.core.util.Context)
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: getModelInfos(Context context)
  nameWithType: FormTrainingAsyncClient.getModelInfos(Context context)
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getModelInfos(Context context)
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getModelInfos*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: List information for all models with taking <xref uid="" data-throw-if-not-resolved="false">Context</xref>.
  syntax:
    content: " PagedFlux<CustomFormModelInfo> getModelInfos(Context context)"
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: Additional context that is passed through the Http pipeline during the service call.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.ai.formrecognizer.models.CustomFormModelInfo>
      description: <xref uid="com.azure.core.http.rest.PagedFlux" data-throw-if-not-resolved="false">PagedFlux</xref> of <xref uid="com.azure.ai.formrecognizer.models.CustomFormModelInfo" data-throw-if-not-resolved="false">CustomFormModelInfo</xref>.
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getServiceVersion()
  id: getServiceVersion()
  artifact: com.azure:azure-ai-formrecognizer:1.0.0-beta.2
  parent: com.azure.ai.formrecognizer.FormTrainingAsyncClient
  langs:
  - java
  name: getServiceVersion()
  nameWithType: FormTrainingAsyncClient.getServiceVersion()
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getServiceVersion()
  overload: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getServiceVersion*
  type: Method
  package: com.azure.ai.formrecognizer
  summary: Gets the service version the client is using.
  syntax:
    content: public FormRecognizerServiceVersion getServiceVersion()
    return:
      type: com.azure.ai.formrecognizer.FormRecognizerServiceVersion
      description: the service version the client is using.
references:
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  name: FormRecognizerClientImpl
  nameWithType: FormRecognizerClientImpl
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
- uid: com.azure.ai.formrecognizer.FormRecognizerServiceVersion
  name: FormRecognizerServiceVersion
  nameWithType: FormRecognizerServiceVersion
  fullName: com.azure.ai.formrecognizer.FormRecognizerServiceVersion
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.FormTrainingAsyncClient*
  name: FormTrainingAsyncClient
  nameWithType: FormTrainingAsyncClient.FormTrainingAsyncClient
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.FormTrainingAsyncClient
  package: com.azure.ai.formrecognizer
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getServiceVersion*
  name: getServiceVersion
  nameWithType: FormTrainingAsyncClient.getServiceVersion
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getServiceVersion
  package: com.azure.ai.formrecognizer
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.core.util.polling.PollerFlux<com.azure.ai.formrecognizer.models.OperationResult,com.azure.ai.formrecognizer.models.CustomFormModel>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.models.OperationResult
    name: OperationResult
    fullName: com.azure.ai.formrecognizer.models.OperationResult
  - name: ','
    fullName: ','
  - uid: com.azure.ai.formrecognizer.models.CustomFormModel
    name: CustomFormModel
    fullName: com.azure.ai.formrecognizer.models.CustomFormModel
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining*
  name: beginTraining
  nameWithType: FormTrainingAsyncClient.beginTraining
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.beginTraining
  package: com.azure.ai.formrecognizer
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.models.CustomFormModel>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.models.CustomFormModel
    name: CustomFormModel
    fullName: com.azure.ai.formrecognizer.models.CustomFormModel
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModel*
  name: getCustomModel
  nameWithType: FormTrainingAsyncClient.getCustomModel
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModel
  package: com.azure.ai.formrecognizer
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.models.CustomFormModel>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.models.CustomFormModel
    name: CustomFormModel
    fullName: com.azure.ai.formrecognizer.models.CustomFormModel
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModelWithResponse*
  name: getCustomModelWithResponse
  nameWithType: FormTrainingAsyncClient.getCustomModelWithResponse
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getCustomModelWithResponse
  package: com.azure.ai.formrecognizer
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.models.AccountProperties>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.models.AccountProperties
    name: AccountProperties
    fullName: com.azure.ai.formrecognizer.models.AccountProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountProperties*
  name: getAccountProperties
  nameWithType: FormTrainingAsyncClient.getAccountProperties
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountProperties
  package: com.azure.ai.formrecognizer
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.models.AccountProperties>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.models.AccountProperties
    name: AccountProperties
    fullName: com.azure.ai.formrecognizer.models.AccountProperties
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse*
  name: getAccountPropertiesWithResponse
  nameWithType: FormTrainingAsyncClient.getAccountPropertiesWithResponse
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getAccountPropertiesWithResponse
  package: com.azure.ai.formrecognizer
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModel*
  name: deleteModel
  nameWithType: FormTrainingAsyncClient.deleteModel
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModel
  package: com.azure.ai.formrecognizer
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse*
  name: deleteModelWithResponse
  nameWithType: FormTrainingAsyncClient.deleteModelWithResponse
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.deleteModelWithResponse
  package: com.azure.ai.formrecognizer
- uid: com.azure.core.http.rest.PagedFlux<com.azure.ai.formrecognizer.models.CustomFormModelInfo>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.models.CustomFormModelInfo
    name: CustomFormModelInfo
    fullName: com.azure.ai.formrecognizer.models.CustomFormModelInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getModelInfos*
  name: getModelInfos
  nameWithType: FormTrainingAsyncClient.getModelInfos
  fullName: com.azure.ai.formrecognizer.FormTrainingAsyncClient.getModelInfos
  package: com.azure.ai.formrecognizer
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.ai.formrecognizer.models.OperationResult,com.azure.ai.formrecognizer.models.CustomFormModel
  name: OperationResult,CustomFormModel
  nameWithType: OperationResult,CustomFormModel
  fullName: com.azure.ai.formrecognizer.models.OperationResult,com.azure.ai.formrecognizer.models.CustomFormModel
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.ai.formrecognizer.models.CustomFormModel
  name: CustomFormModel
  nameWithType: CustomFormModel
  fullName: com.azure.ai.formrecognizer.models.CustomFormModel
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.ai.formrecognizer.models.AccountProperties
  name: AccountProperties
  nameWithType: AccountProperties
  fullName: com.azure.ai.formrecognizer.models.AccountProperties
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.ai.formrecognizer.models.CustomFormModelInfo
  name: CustomFormModelInfo
  nameWithType: CustomFormModelInfo
  fullName: com.azure.ai.formrecognizer.models.CustomFormModelInfo
