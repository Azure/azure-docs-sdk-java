### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.apachecommons.lang.StringUtils.compare*"
fullName: "com.azure.cosmos.implementation.apachecommons.lang.StringUtils.compare"
name: "compare"
nameWithType: "StringUtils.compare"
members:
- uid: "com.azure.cosmos.implementation.apachecommons.lang.StringUtils.compare(java.lang.String,java.lang.String)"
  fullName: "com.azure.cosmos.implementation.apachecommons.lang.StringUtils.compare(String str1, String str2)"
  name: "compare(String str1, String str2)"
  nameWithType: "StringUtils.compare(String str1, String str2)"
  summary: "Compare two Strings lexicographically, as per <xref uid=\"java.lang.String.compareTo*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String#compareTo(String)\"></xref>, returning :\n\n *  `int = 0`, if `str1` is equal to `str2` (or both `null`)\n *  `int < 0`, if `str1` is less than `str2`\n *  `int > 0`, if `str1` is greater than `str2`\n\nThis is a `null` safe version of :\n\n> ```\n> str1.compareTo(str2)\n> ```\n\n`null` value is considered less than non-`null` value. Two `null` references are considered equal.\n\n```java\nStringUtils.compare(null, null)   = 0\n StringUtils.compare(null , \"a\")   < 0\n StringUtils.compare(\"a\", null)    > 0\n StringUtils.compare(\"abc\", \"abc\") = 0\n StringUtils.compare(\"a\", \"b\")     < 0\n StringUtils.compare(\"b\", \"a\")     > 0\n StringUtils.compare(\"a\", \"B\")     > 0\n StringUtils.compare(\"ab\", \"abc\")  < 0\n```"
  parameters:
  - description: "the String to compare from"
    name: "str1"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the String to compare to"
    name: "str2"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int compare(String str1, String str2)"
  returns:
    description: "&lt; 0, 0, &gt; 0, if <code>str1</code> is respectively less, equal or greater than <code>str2</code>"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.implementation.apachecommons.lang.StringUtils.compare(java.lang.String,java.lang.String,boolean)"
  fullName: "com.azure.cosmos.implementation.apachecommons.lang.StringUtils.compare(String str1, String str2, boolean nullIsLess)"
  name: "compare(String str1, String str2, boolean nullIsLess)"
  nameWithType: "StringUtils.compare(String str1, String str2, boolean nullIsLess)"
  summary: "Compare two Strings lexicographically, as per <xref uid=\"java.lang.String.compareTo*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String#compareTo(String)\"></xref>, returning :\n\n *  `int = 0`, if `str1` is equal to `str2` (or both `null`)\n *  `int < 0`, if `str1` is less than `str2`\n *  `int > 0`, if `str1` is greater than `str2`\n\nThis is a `null` safe version of :\n\n> ```\n> str1.compareTo(str2)\n> ```\n\n`null` inputs are handled according to the `nullIsLess` parameter. Two `null` references are considered equal.\n\n```java\nStringUtils.compare(null, null, *)     = 0\n StringUtils.compare(null , \"a\", true)  < 0\n StringUtils.compare(null , \"a\", false) > 0\n StringUtils.compare(\"a\", null, true)   > 0\n StringUtils.compare(\"a\", null, false)  < 0\n StringUtils.compare(\"abc\", \"abc\", *)   = 0\n StringUtils.compare(\"a\", \"b\", *)       < 0\n StringUtils.compare(\"b\", \"a\", *)       > 0\n StringUtils.compare(\"a\", \"B\", *)       > 0\n StringUtils.compare(\"ab\", \"abc\", *)    < 0\n```"
  parameters:
  - description: "the String to compare from"
    name: "str1"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the String to compare to"
    name: "str2"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "whether consider <code>null</code> value less than non-<code>null</code> value"
    name: "nullIsLess"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static int compare(String str1, String str2, boolean nullIsLess)"
  returns:
    description: "&lt; 0, 0, &gt; 0, if <code>str1</code> is respectively less, equal ou greater than <code>str2</code>"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.apachecommons.lang"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
