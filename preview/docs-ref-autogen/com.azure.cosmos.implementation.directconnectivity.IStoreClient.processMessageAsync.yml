### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.directconnectivity.IStoreClient.processMessageAsync*"
fullName: "com.azure.cosmos.implementation.directconnectivity.IStoreClient.processMessageAsync"
name: "processMessageAsync"
nameWithType: "IStoreClient.processMessageAsync"
members:
- uid: "com.azure.cosmos.implementation.directconnectivity.IStoreClient.processMessageAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.IStoreClient.processMessageAsync(RxDocumentServiceRequest request)"
  name: "processMessageAsync(RxDocumentServiceRequest request)"
  nameWithType: "IStoreClient.processMessageAsync(RxDocumentServiceRequest request)"
  parameters:
  - name: "request"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default Mono<RxDocumentServiceResponse> processMessageAsync(RxDocumentServiceRequest request)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceResponse?alt=com.azure.cosmos.implementation.RxDocumentServiceResponse&text=RxDocumentServiceResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.directconnectivity.IStoreClient.processMessageAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.IRetryPolicy)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.IStoreClient.processMessageAsync(RxDocumentServiceRequest request, IRetryPolicy retryPolicy)"
  name: "processMessageAsync(RxDocumentServiceRequest request, IRetryPolicy retryPolicy)"
  nameWithType: "IStoreClient.processMessageAsync(RxDocumentServiceRequest request, IRetryPolicy retryPolicy)"
  parameters:
  - name: "request"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />"
  - name: "retryPolicy"
    type: "<xref href=\"com.azure.cosmos.implementation.IRetryPolicy?alt=com.azure.cosmos.implementation.IRetryPolicy&text=IRetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default Mono<RxDocumentServiceResponse> processMessageAsync(RxDocumentServiceRequest request, IRetryPolicy retryPolicy)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceResponse?alt=com.azure.cosmos.implementation.RxDocumentServiceResponse&text=RxDocumentServiceResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.directconnectivity.IStoreClient.processMessageAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.IRetryPolicy,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceRequest>>)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.IStoreClient.processMessageAsync(RxDocumentServiceRequest request, IRetryPolicy retryPolicy, Function<RxDocumentServiceRequest,Mono<RxDocumentServiceRequest>> prepareRequestAsyncDelegate)"
  name: "processMessageAsync(RxDocumentServiceRequest request, IRetryPolicy retryPolicy, Function<RxDocumentServiceRequest,Mono<RxDocumentServiceRequest>> prepareRequestAsyncDelegate)"
  nameWithType: "IStoreClient.processMessageAsync(RxDocumentServiceRequest request, IRetryPolicy retryPolicy, Function<RxDocumentServiceRequest,Mono<RxDocumentServiceRequest>> prepareRequestAsyncDelegate)"
  parameters:
  - name: "request"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />"
  - name: "retryPolicy"
    type: "<xref href=\"com.azure.cosmos.implementation.IRetryPolicy?alt=com.azure.cosmos.implementation.IRetryPolicy&text=IRetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  - name: "prepareRequestAsyncDelegate"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />,<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public abstract Mono<RxDocumentServiceResponse> processMessageAsync(RxDocumentServiceRequest request, IRetryPolicy retryPolicy, Function<RxDocumentServiceRequest,Mono<RxDocumentServiceRequest>> prepareRequestAsyncDelegate)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceResponse?alt=com.azure.cosmos.implementation.RxDocumentServiceResponse&text=RxDocumentServiceResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.directconnectivity.IStoreClient.processMessageAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest,java.util.function.Function<com.azure.cosmos.implementation.RxDocumentServiceRequest,reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceRequest>>)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.IStoreClient.processMessageAsync(RxDocumentServiceRequest request, Function<RxDocumentServiceRequest,Mono<RxDocumentServiceRequest>> prepareRequestAsyncDelegate)"
  name: "processMessageAsync(RxDocumentServiceRequest request, Function<RxDocumentServiceRequest,Mono<RxDocumentServiceRequest>> prepareRequestAsyncDelegate)"
  nameWithType: "IStoreClient.processMessageAsync(RxDocumentServiceRequest request, Function<RxDocumentServiceRequest,Mono<RxDocumentServiceRequest>> prepareRequestAsyncDelegate)"
  parameters:
  - name: "request"
    type: "<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />"
  - name: "prepareRequestAsyncDelegate"
    type: "<xref href=\"java.util.function.Function?alt=java.util.function.Function&text=Function\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />,<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceRequest?alt=com.azure.cosmos.implementation.RxDocumentServiceRequest&text=RxDocumentServiceRequest\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public default Mono<RxDocumentServiceResponse> processMessageAsync(RxDocumentServiceRequest request, Function<RxDocumentServiceRequest,Mono<RxDocumentServiceRequest>> prepareRequestAsyncDelegate)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.implementation.RxDocumentServiceResponse?alt=com.azure.cosmos.implementation.RxDocumentServiceResponse&text=RxDocumentServiceResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.directconnectivity"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
