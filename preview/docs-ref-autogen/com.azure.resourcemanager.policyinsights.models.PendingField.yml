### YamlMime:JavaType
uid: "com.azure.resourcemanager.policyinsights.models.PendingField"
fullName: "com.azure.resourcemanager.policyinsights.models.PendingField"
name: "PendingField"
nameWithType: "PendingField"
summary: "A field that should be evaluated against Azure Policy to determine restrictions."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PendingField"
constructors:
- uid: "com.azure.resourcemanager.policyinsights.models.PendingField.PendingField()"
  fullName: "com.azure.resourcemanager.policyinsights.models.PendingField.PendingField()"
  name: "PendingField()"
  nameWithType: "PendingField.PendingField()"
  syntax: "public PendingField()"
methods:
- uid: "com.azure.resourcemanager.policyinsights.models.PendingField.field()"
  fullName: "com.azure.resourcemanager.policyinsights.models.PendingField.field()"
  name: "field()"
  nameWithType: "PendingField.field()"
  summary: "Get the field property: The name of the field."
  syntax: "public String field()"
  desc: "Get the field property: The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias."
  returns:
    description: "the field value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.PendingField.validate()"
  fullName: "com.azure.resourcemanager.policyinsights.models.PendingField.validate()"
  name: "validate()"
  nameWithType: "PendingField.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.policyinsights.models.PendingField.values()"
  fullName: "com.azure.resourcemanager.policyinsights.models.PendingField.values()"
  name: "values()"
  nameWithType: "PendingField.values()"
  summary: "Get the values property: The list of potential values for the field that should be evaluated against Azure Policy."
  syntax: "public List<String> values()"
  desc: "Get the values property: The list of potential values for the field that should be evaluated against Azure Policy."
  returns:
    description: "the values value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.policyinsights.models.PendingField.withField(java.lang.String)"
  fullName: "com.azure.resourcemanager.policyinsights.models.PendingField.withField(String field)"
  name: "withField(String field)"
  nameWithType: "PendingField.withField(String field)"
  summary: "Set the field property: The name of the field."
  parameters:
  - description: "the field value to set."
    name: "field"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PendingField withField(String field)"
  desc: "Set the field property: The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias."
  returns:
    description: "the PendingField object itself."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.PendingField?alt=com.azure.resourcemanager.policyinsights.models.PendingField&text=PendingField\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.policyinsights.models.PendingField.withValues(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.policyinsights.models.PendingField.withValues(List<String> values)"
  name: "withValues(List<String> values)"
  nameWithType: "PendingField.withValues(List<String> values)"
  summary: "Set the values property: The list of potential values for the field that should be evaluated against Azure Policy."
  parameters:
  - description: "the values value to set."
    name: "values"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PendingField withValues(List<String> values)"
  desc: "Set the values property: The list of potential values for the field that should be evaluated against Azure Policy."
  returns:
    description: "the PendingField object itself."
    type: "<xref href=\"com.azure.resourcemanager.policyinsights.models.PendingField?alt=com.azure.resourcemanager.policyinsights.models.PendingField&text=PendingField\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A field that should be evaluated against Azure Policy to determine restrictions."
metadata: {}
package: "com.azure.resourcemanager.policyinsights.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-policyinsights:1.0.0-beta.2
