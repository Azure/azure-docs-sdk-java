### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.nio.AsyncFilterHandler
  id: AsyncFilterHandler
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio
  children:
  - org.apache.hc.core5.http.nio.AsyncFilterHandler.handle(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger,org.apache.hc.core5.http.nio.AsyncFilterChain)
  langs:
  - java
  name: AsyncFilterHandler
  nameWithType: AsyncFilterHandler
  fullName: org.apache.hc.core5.http.nio.AsyncFilterHandler
  type: Interface
  package: org.apache.hc.core5.http.nio
  summary: AsyncFilterHandler represents a routine for handling all incoming requests in the server side request processing chain.
  syntax:
    content: public interface AsyncFilterHandler
- uid: org.apache.hc.core5.http.nio.AsyncFilterHandler.handle(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger,org.apache.hc.core5.http.nio.AsyncFilterChain)
  id: handle(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger,org.apache.hc.core5.http.nio.AsyncFilterChain)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.AsyncFilterHandler
  langs:
  - java
  name: handle(HttpRequest request, EntityDetails entityDetails, HttpContext context, AsyncFilterChain.ResponseTrigger responseTrigger, AsyncFilterChain chain)
  nameWithType: AsyncFilterHandler.handle(HttpRequest request, EntityDetails entityDetails, HttpContext context, AsyncFilterChain.ResponseTrigger responseTrigger, AsyncFilterChain chain)
  fullName: org.apache.hc.core5.http.nio.AsyncFilterHandler.handle(HttpRequest request, EntityDetails entityDetails, HttpContext context, AsyncFilterChain.ResponseTrigger responseTrigger, AsyncFilterChain chain)
  overload: org.apache.hc.core5.http.nio.AsyncFilterHandler.handle*
  type: Method
  package: org.apache.hc.core5.http.nio
  summary: Processes the incoming HTTP request and if processing has been completed submits a final response to the client. The handler can choose to send response messages immediately inside the call or asynchronously at some later point. The handler must not use the response trigger after passing control to the next filter with the <xref uid="org.apache.hc.core5.http.nio.AsyncFilterChain.proceed(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger)" data-throw-if-not-resolved="false">AsyncFilterChain#proceed(HttpRequest, EntityDetails, HttpContext, AsyncFilterChain.ResponseTrigger)</xref> method.
  syntax:
    content: public abstract AsyncDataConsumer handle(HttpRequest request, EntityDetails entityDetails, HttpContext context, AsyncFilterChain.ResponseTrigger responseTrigger, AsyncFilterChain chain)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.HttpRequest
      description: the actual request head.
    - id: entityDetails
      type: org.apache.hc.core5.http.EntityDetails
      description: >-
        the request entity details or <code>null</code> if the request
                              does not enclose an entity.
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the actual execution context.
    - id: responseTrigger
      type: org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger
      description: the response trigger.
    - id: chain
      type: org.apache.hc.core5.http.nio.AsyncFilterChain
      description: the next element in the request processing chain.
    return:
      type: org.apache.hc.core5.http.nio.AsyncDataConsumer
      description: >-
        the data consumer to be used to process incoming request data. It is
          expected to be <code>null</code> if entityDetails parameter is <code>null</code>.
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
  - type: java.io.IOException
references:
- uid: org.apache.hc.core5.http.HttpException
  name: HttpException
  nameWithType: HttpException
  fullName: org.apache.hc.core5.http.HttpException
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.HttpRequest
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: org.apache.hc.core5.http.HttpRequest
- uid: org.apache.hc.core5.http.EntityDetails
  name: EntityDetails
  nameWithType: EntityDetails
  fullName: org.apache.hc.core5.http.EntityDetails
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger
  name: AsyncFilterChain.ResponseTrigger
  nameWithType: AsyncFilterChain.ResponseTrigger
  fullName: org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger
- uid: org.apache.hc.core5.http.nio.AsyncFilterChain
  name: AsyncFilterChain
  nameWithType: AsyncFilterChain
  fullName: org.apache.hc.core5.http.nio.AsyncFilterChain
- uid: org.apache.hc.core5.http.nio.AsyncDataConsumer
  name: AsyncDataConsumer
  nameWithType: AsyncDataConsumer
  fullName: org.apache.hc.core5.http.nio.AsyncDataConsumer
- uid: org.apache.hc.core5.http.nio.AsyncFilterHandler.handle*
  name: handle
  nameWithType: AsyncFilterHandler.handle
  fullName: org.apache.hc.core5.http.nio.AsyncFilterHandler.handle
  package: org.apache.hc.core5.http.nio
