### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient"
fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient"
name: "PipelineAsyncClient"
nameWithType: "PipelineAsyncClient"
summary: "Initializes a new instance of the asynchronous Artifacts<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PipelineAsyncClient"
methods:
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.createOrUpdatePipeline(java.lang.String,com.azure.analytics.synapse.artifacts.models.PipelineResource)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.createOrUpdatePipeline(String pipelineName, PipelineResource pipeline)"
  name: "createOrUpdatePipeline(String pipelineName, PipelineResource pipeline)"
  nameWithType: "PipelineAsyncClient.createOrUpdatePipeline(String pipelineName, PipelineResource pipeline)"
  summary: "Creates or updates a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Pipeline resource definition."
    name: "pipeline"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PipelineResource?alt=com.azure.analytics.synapse.artifacts.models.PipelineResource&text=PipelineResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PipelineResource> createOrUpdatePipeline(String pipelineName, PipelineResource pipeline)"
  desc: "Creates or updates a pipeline."
  returns:
    description: "pipeline resource type on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.PipelineResource?alt=com.azure.analytics.synapse.artifacts.models.PipelineResource&text=PipelineResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.createOrUpdatePipeline(java.lang.String,com.azure.analytics.synapse.artifacts.models.PipelineResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.createOrUpdatePipeline(String pipelineName, PipelineResource pipeline, String ifMatch)"
  name: "createOrUpdatePipeline(String pipelineName, PipelineResource pipeline, String ifMatch)"
  nameWithType: "PipelineAsyncClient.createOrUpdatePipeline(String pipelineName, PipelineResource pipeline, String ifMatch)"
  summary: "Creates or updates a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Pipeline resource definition."
    name: "pipeline"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PipelineResource?alt=com.azure.analytics.synapse.artifacts.models.PipelineResource&text=PipelineResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the pipeline entity. Should only be specified for update, for which it should match\n     existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PipelineResource> createOrUpdatePipeline(String pipelineName, PipelineResource pipeline, String ifMatch)"
  desc: "Creates or updates a pipeline."
  returns:
    description: "pipeline resource type on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.PipelineResource?alt=com.azure.analytics.synapse.artifacts.models.PipelineResource&text=PipelineResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.createOrUpdatePipelineWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.PipelineResource,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.createOrUpdatePipelineWithResponse(String pipelineName, PipelineResource pipeline, String ifMatch)"
  name: "createOrUpdatePipelineWithResponse(String pipelineName, PipelineResource pipeline, String ifMatch)"
  nameWithType: "PipelineAsyncClient.createOrUpdatePipelineWithResponse(String pipelineName, PipelineResource pipeline, String ifMatch)"
  summary: "Creates or updates a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Pipeline resource definition."
    name: "pipeline"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.PipelineResource?alt=com.azure.analytics.synapse.artifacts.models.PipelineResource&text=PipelineResource\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the pipeline entity. Should only be specified for update, for which it should match\n     existing entity or can be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<PipelineResource>> createOrUpdatePipelineWithResponse(String pipelineName, PipelineResource pipeline, String ifMatch)"
  desc: "Creates or updates a pipeline."
  returns:
    description: "pipeline resource type along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.PipelineResource?alt=com.azure.analytics.synapse.artifacts.models.PipelineResource&text=PipelineResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.createPipelineRun(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.createPipelineRun(String pipelineName)"
  name: "createPipelineRun(String pipelineName)"
  nameWithType: "PipelineAsyncClient.createPipelineRun(String pipelineName)"
  summary: "Creates a run of a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CreateRunResponse> createPipelineRun(String pipelineName)"
  desc: "Creates a run of a pipeline."
  returns:
    description: "response body with a run identifier on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.CreateRunResponse?alt=com.azure.analytics.synapse.artifacts.models.CreateRunResponse&text=CreateRunResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.createPipelineRun(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.createPipelineRun(String pipelineName, String referencePipelineRunId, Boolean isRecovery, String startActivityName, Map<String,Object> parameters)"
  name: "createPipelineRun(String pipelineName, String referencePipelineRunId, Boolean isRecovery, String startActivityName, Map<String,Object> parameters)"
  nameWithType: "PipelineAsyncClient.createPipelineRun(String pipelineName, String referencePipelineRunId, Boolean isRecovery, String startActivityName, Map<String,Object> parameters)"
  summary: "Creates a run of a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The pipeline run identifier. If run ID is specified the parameters of the specified\n     run will be used to create a new run."
    name: "referencePipelineRunId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Recovery mode flag. If recovery mode is set to true, the specified referenced pipeline run and\n     the new run will be grouped under the same groupId."
    name: "isRecovery"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "In recovery mode, the rerun will start from this activity. If not specified, all\n     activities will run."
    name: "startActivityName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters of the pipeline run. These parameters will be used only if the runId is not\n     specified."
    name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<CreateRunResponse> createPipelineRun(String pipelineName, String referencePipelineRunId, Boolean isRecovery, String startActivityName, Map<String,Object> parameters)"
  desc: "Creates a run of a pipeline."
  returns:
    description: "response body with a run identifier on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.CreateRunResponse?alt=com.azure.analytics.synapse.artifacts.models.CreateRunResponse&text=CreateRunResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.createPipelineRunWithResponse(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.createPipelineRunWithResponse(String pipelineName, String referencePipelineRunId, Boolean isRecovery, String startActivityName, Map<String,Object> parameters)"
  name: "createPipelineRunWithResponse(String pipelineName, String referencePipelineRunId, Boolean isRecovery, String startActivityName, Map<String,Object> parameters)"
  nameWithType: "PipelineAsyncClient.createPipelineRunWithResponse(String pipelineName, String referencePipelineRunId, Boolean isRecovery, String startActivityName, Map<String,Object> parameters)"
  summary: "Creates a run of a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The pipeline run identifier. If run ID is specified the parameters of the specified\n     run will be used to create a new run."
    name: "referencePipelineRunId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Recovery mode flag. If recovery mode is set to true, the specified referenced pipeline run and\n     the new run will be grouped under the same groupId."
    name: "isRecovery"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "In recovery mode, the rerun will start from this activity. If not specified, all\n     activities will run."
    name: "startActivityName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Parameters of the pipeline run. These parameters will be used only if the runId is not\n     specified."
    name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Response<CreateRunResponse>> createPipelineRunWithResponse(String pipelineName, String referencePipelineRunId, Boolean isRecovery, String startActivityName, Map<String,Object> parameters)"
  desc: "Creates a run of a pipeline."
  returns:
    description: "response body with a run identifier along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.CreateRunResponse?alt=com.azure.analytics.synapse.artifacts.models.CreateRunResponse&text=CreateRunResponse\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.deletePipeline(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.deletePipeline(String pipelineName)"
  name: "deletePipeline(String pipelineName)"
  nameWithType: "PipelineAsyncClient.deletePipeline(String pipelineName)"
  summary: "Deletes a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> deletePipeline(String pipelineName)"
  desc: "Deletes a pipeline."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.deletePipelineWithResponse(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.deletePipelineWithResponse(String pipelineName)"
  name: "deletePipelineWithResponse(String pipelineName)"
  nameWithType: "PipelineAsyncClient.deletePipelineWithResponse(String pipelineName)"
  summary: "Deletes a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deletePipelineWithResponse(String pipelineName)"
  desc: "Deletes a pipeline."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.getPipeline(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.getPipeline(String pipelineName)"
  name: "getPipeline(String pipelineName)"
  nameWithType: "PipelineAsyncClient.getPipeline(String pipelineName)"
  summary: "Gets a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PipelineResource> getPipeline(String pipelineName)"
  desc: "Gets a pipeline."
  returns:
    description: "a pipeline on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.PipelineResource?alt=com.azure.analytics.synapse.artifacts.models.PipelineResource&text=PipelineResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.getPipeline(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.getPipeline(String pipelineName, String ifNoneMatch)"
  name: "getPipeline(String pipelineName, String ifNoneMatch)"
  nameWithType: "PipelineAsyncClient.getPipeline(String pipelineName, String ifNoneMatch)"
  summary: "Gets a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the pipeline entity. Should only be specified for get. If the ETag matches the\n     existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<PipelineResource> getPipeline(String pipelineName, String ifNoneMatch)"
  desc: "Gets a pipeline."
  returns:
    description: "a pipeline on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.PipelineResource?alt=com.azure.analytics.synapse.artifacts.models.PipelineResource&text=PipelineResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.getPipelineWithResponse(java.lang.String,java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.getPipelineWithResponse(String pipelineName, String ifNoneMatch)"
  name: "getPipelineWithResponse(String pipelineName, String ifNoneMatch)"
  nameWithType: "PipelineAsyncClient.getPipelineWithResponse(String pipelineName, String ifNoneMatch)"
  summary: "Gets a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the pipeline entity. Should only be specified for get. If the ETag matches the\n     existing entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<PipelineResource>> getPipelineWithResponse(String pipelineName, String ifNoneMatch)"
  desc: "Gets a pipeline."
  returns:
    description: "a pipeline along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.PipelineResource?alt=com.azure.analytics.synapse.artifacts.models.PipelineResource&text=PipelineResource\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.getPipelinesByWorkspace()"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.getPipelinesByWorkspace()"
  name: "getPipelinesByWorkspace()"
  nameWithType: "PipelineAsyncClient.getPipelinesByWorkspace()"
  summary: "Lists pipelines."
  syntax: "public PagedFlux<PipelineResource> getPipelinesByWorkspace()"
  desc: "Lists pipelines."
  returns:
    description: "a list of pipeline resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.PipelineResource?alt=com.azure.analytics.synapse.artifacts.models.PipelineResource&text=PipelineResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.renamePipeline(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.renamePipeline(String pipelineName, ArtifactRenameRequest request)"
  name: "renamePipeline(String pipelineName, ArtifactRenameRequest request)"
  nameWithType: "PipelineAsyncClient.renamePipeline(String pipelineName, ArtifactRenameRequest request)"
  summary: "Renames a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> renamePipeline(String pipelineName, ArtifactRenameRequest request)"
  desc: "Renames a pipeline."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.renamePipelineWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest)"
  fullName: "com.azure.analytics.synapse.artifacts.PipelineAsyncClient.renamePipelineWithResponse(String pipelineName, ArtifactRenameRequest request)"
  name: "renamePipelineWithResponse(String pipelineName, ArtifactRenameRequest request)"
  nameWithType: "PipelineAsyncClient.renamePipelineWithResponse(String pipelineName, ArtifactRenameRequest request)"
  summary: "Renames a pipeline."
  parameters:
  - description: "The pipeline name."
    name: "pipelineName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "proposed new name."
    name: "request"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest?alt=com.azure.analytics.synapse.artifacts.models.ArtifactRenameRequest&text=ArtifactRenameRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> renamePipelineWithResponse(String pipelineName, ArtifactRenameRequest request)"
  desc: "Renames a pipeline."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ArtifactsClient type."
metadata: {}
package: "com.azure.analytics.synapse.artifacts"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
