### YamlMime:JavaType
uid: "com.azure.storage.blob.nio.AzureSeekableByteChannel"
fullName: "com.azure.storage.blob.nio.AzureSeekableByteChannel"
name: "AzureSeekableByteChannel"
nameWithType: "AzureSeekableByteChannel"
summary: "A byte channel that maintains a current position."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzureSeekableByteChannel implements SeekableByteChannel"
methods:
- uid: "com.azure.storage.blob.nio.AzureSeekableByteChannel.close()"
  fullName: "com.azure.storage.blob.nio.AzureSeekableByteChannel.close()"
  name: "close()"
  nameWithType: "AzureSeekableByteChannel.close()"
  syntax: "public void close()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureSeekableByteChannel.isOpen()"
  fullName: "com.azure.storage.blob.nio.AzureSeekableByteChannel.isOpen()"
  name: "isOpen()"
  nameWithType: "AzureSeekableByteChannel.isOpen()"
  syntax: "public boolean isOpen()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureSeekableByteChannel.position()"
  fullName: "com.azure.storage.blob.nio.AzureSeekableByteChannel.position()"
  name: "position()"
  nameWithType: "AzureSeekableByteChannel.position()"
  syntax: "public long position()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureSeekableByteChannel.position(long)"
  fullName: "com.azure.storage.blob.nio.AzureSeekableByteChannel.position(long newPosition)"
  name: "position(long newPosition)"
  nameWithType: "AzureSeekableByteChannel.position(long newPosition)"
  parameters:
  - name: "newPosition"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureSeekableByteChannel position(long newPosition)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.storage.blob.nio.AzureSeekableByteChannel?alt=com.azure.storage.blob.nio.AzureSeekableByteChannel&text=AzureSeekableByteChannel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureSeekableByteChannel.read(java.nio.ByteBuffer)"
  fullName: "com.azure.storage.blob.nio.AzureSeekableByteChannel.read(ByteBuffer dst)"
  name: "read(ByteBuffer dst)"
  nameWithType: "AzureSeekableByteChannel.read(ByteBuffer dst)"
  parameters:
  - name: "dst"
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int read(ByteBuffer dst)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureSeekableByteChannel.size()"
  fullName: "com.azure.storage.blob.nio.AzureSeekableByteChannel.size()"
  name: "size()"
  nameWithType: "AzureSeekableByteChannel.size()"
  syntax: "public long size()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureSeekableByteChannel.truncate(long)"
  fullName: "com.azure.storage.blob.nio.AzureSeekableByteChannel.truncate(long size)"
  name: "truncate(long size)"
  nameWithType: "AzureSeekableByteChannel.truncate(long size)"
  parameters:
  - name: "size"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AzureSeekableByteChannel truncate(long size)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.storage.blob.nio.AzureSeekableByteChannel?alt=com.azure.storage.blob.nio.AzureSeekableByteChannel&text=AzureSeekableByteChannel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureSeekableByteChannel.write(java.nio.ByteBuffer)"
  fullName: "com.azure.storage.blob.nio.AzureSeekableByteChannel.write(ByteBuffer src)"
  name: "write(ByteBuffer src)"
  nameWithType: "AzureSeekableByteChannel.write(ByteBuffer src)"
  parameters:
  - name: "src"
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int write(ByteBuffer src)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A byte channel that maintains a current position.\n\nA channel may only be opened in read mode OR write mode. It may not be opened in read/write mode. Seeking is supported for reads, but not for writes. Modifications to existing files is not permitted--only creating new files or overwriting existing files.\n\nThis type is not threadsafe to prevent having to hold locks across network calls."
implements:
- "<xref href=\"java.nio.channels.SeekableByteChannel?alt=java.nio.channels.SeekableByteChannel&text=SeekableByteChannel\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.storage.blob.nio"
artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.19
