### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.TextTrack"
fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack"
name: "TextTrack"
nameWithType: "TextTrack"
summary: "Represents a text track in an asset."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackBase?alt=com.azure.resourcemanager.mediaservices.models.TrackBase&text=TrackBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackBase.fromJson(com.azure.json.JsonReader)?alt=com.azure.resourcemanager.mediaservices.models.TrackBase.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackBase.odataType()?alt=com.azure.resourcemanager.mediaservices.models.TrackBase.odataType&text=odataType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackBase.toJson(com.azure.json.JsonWriter)?alt=com.azure.resourcemanager.mediaservices.models.TrackBase.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackBase.validate()?alt=com.azure.resourcemanager.mediaservices.models.TrackBase.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **TextTrack**</br> extends <xref href=\"com.azure.resourcemanager.mediaservices.models.TrackBase?alt=com.azure.resourcemanager.mediaservices.models.TrackBase&text=TrackBase\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.TextTrack()"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.TextTrack()"
  name: "TextTrack()"
  nameWithType: "TextTrack.TextTrack()"
  summary: "Creates an instance of Text<wbr>Track class."
  syntax: "public TextTrack()"
  desc: "Creates an instance of TextTrack class."
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.displayName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.displayName()"
  name: "displayName()"
  nameWithType: "TextTrack.displayName()"
  summary: "Get the display<wbr>Name property: The display name of the text track on a video player."
  syntax: "public String displayName()"
  desc: "Get the displayName property: The display name of the text track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA."
  returns:
    description: "the displayName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.fileName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.fileName()"
  name: "fileName()"
  nameWithType: "TextTrack.fileName()"
  summary: "Get the file<wbr>Name property: The file name to the source file."
  syntax: "public String fileName()"
  desc: "Get the fileName property: The file name to the source file. This file is located in the storage container of the asset."
  returns:
    description: "the fileName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "TextTrack.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Text<wbr>Track from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static TextTrack fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the TextTrack."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of TextTrack from the JsonReader."
  returns:
    description: "An instance of TextTrack if the JsonReader was pointing to an instance of it, or null if it was pointing\n to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.TextTrack?alt=com.azure.resourcemanager.mediaservices.models.TextTrack&text=TextTrack\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.hlsSettings()"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.hlsSettings()"
  name: "hlsSettings()"
  nameWithType: "TextTrack.hlsSettings()"
  summary: "Get the hls<wbr>Settings property: The HLS specific setting for the text track."
  syntax: "public HlsSettings hlsSettings()"
  desc: "Get the hlsSettings property: The HLS specific setting for the text track."
  returns:
    description: "the hlsSettings value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.HlsSettings?alt=com.azure.resourcemanager.mediaservices.models.HlsSettings&text=HlsSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.languageCode()"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.languageCode()"
  name: "languageCode()"
  nameWithType: "TextTrack.languageCode()"
  summary: "Get the language<wbr>Code property: The RFC5646 language code for the text track."
  syntax: "public String languageCode()"
  desc: "Get the languageCode property: The RFC5646 language code for the text track."
  returns:
    description: "the languageCode value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.odataType()"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.odataType()"
  name: "odataType()"
  nameWithType: "TextTrack.odataType()"
  summary: "Get the odata<wbr>Type property: The discriminator for derived types."
  overridden: "com.azure.resourcemanager.mediaservices.models.TrackBase.odataType()"
  syntax: "public String odataType()"
  desc: "Get the odataType property: The discriminator for derived types."
  returns:
    description: "the odataType value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.playerVisibility()"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.playerVisibility()"
  name: "playerVisibility()"
  nameWithType: "TextTrack.playerVisibility()"
  summary: "Get the player<wbr>Visibility property: When Player<wbr>Visibility is set to \"Visible\", the text track will be present in the DASH manifest or HLS playlist when requested by a client."
  syntax: "public Visibility playerVisibility()"
  desc: "Get the playerVisibility property: When PlayerVisibility is set to \"Visible\", the text track will be present in the DASH manifest or HLS playlist when requested by a client. When the PlayerVisibility is set to \"Hidden\", the text will not be available to the client. The default value is \"Visible\"."
  returns:
    description: "the playerVisibility value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Visibility?alt=com.azure.resourcemanager.mediaservices.models.Visibility&text=Visibility\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "TextTrack.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.resourcemanager.mediaservices.models.TrackBase.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.validate()"
  name: "validate()"
  nameWithType: "TextTrack.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.mediaservices.models.TrackBase.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.withDisplayName(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.withDisplayName(String displayName)"
  name: "withDisplayName(String displayName)"
  nameWithType: "TextTrack.withDisplayName(String displayName)"
  summary: "Set the display<wbr>Name property: The display name of the text track on a video player."
  parameters:
  - description: "the displayName value to set."
    name: "displayName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public TextTrack withDisplayName(String displayName)"
  desc: "Set the displayName property: The display name of the text track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA."
  returns:
    description: "the TextTrack object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.TextTrack?alt=com.azure.resourcemanager.mediaservices.models.TextTrack&text=TextTrack\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.withFileName(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.withFileName(String fileName)"
  name: "withFileName(String fileName)"
  nameWithType: "TextTrack.withFileName(String fileName)"
  summary: "Set the file<wbr>Name property: The file name to the source file."
  parameters:
  - description: "the fileName value to set."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public TextTrack withFileName(String fileName)"
  desc: "Set the fileName property: The file name to the source file. This file is located in the storage container of the asset."
  returns:
    description: "the TextTrack object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.TextTrack?alt=com.azure.resourcemanager.mediaservices.models.TextTrack&text=TextTrack\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.withHlsSettings(com.azure.resourcemanager.mediaservices.models.HlsSettings)"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.withHlsSettings(HlsSettings hlsSettings)"
  name: "withHlsSettings(HlsSettings hlsSettings)"
  nameWithType: "TextTrack.withHlsSettings(HlsSettings hlsSettings)"
  summary: "Set the hls<wbr>Settings property: The HLS specific setting for the text track."
  parameters:
  - description: "the hlsSettings value to set."
    name: "hlsSettings"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.HlsSettings?alt=com.azure.resourcemanager.mediaservices.models.HlsSettings&text=HlsSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TextTrack withHlsSettings(HlsSettings hlsSettings)"
  desc: "Set the hlsSettings property: The HLS specific setting for the text track."
  returns:
    description: "the TextTrack object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.TextTrack?alt=com.azure.resourcemanager.mediaservices.models.TextTrack&text=TextTrack\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.TextTrack.withPlayerVisibility(com.azure.resourcemanager.mediaservices.models.Visibility)"
  fullName: "com.azure.resourcemanager.mediaservices.models.TextTrack.withPlayerVisibility(Visibility playerVisibility)"
  name: "withPlayerVisibility(Visibility playerVisibility)"
  nameWithType: "TextTrack.withPlayerVisibility(Visibility playerVisibility)"
  summary: "Set the player<wbr>Visibility property: When Player<wbr>Visibility is set to \"Visible\", the text track will be present in the DASH manifest or HLS playlist when requested by a client."
  parameters:
  - description: "the playerVisibility value to set."
    name: "playerVisibility"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.Visibility?alt=com.azure.resourcemanager.mediaservices.models.Visibility&text=Visibility\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TextTrack withPlayerVisibility(Visibility playerVisibility)"
  desc: "Set the playerVisibility property: When PlayerVisibility is set to \"Visible\", the text track will be present in the DASH manifest or HLS playlist when requested by a client. When the PlayerVisibility is set to \"Hidden\", the text will not be available to the client. The default value is \"Visible\"."
  returns:
    description: "the TextTrack object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.TextTrack?alt=com.azure.resourcemanager.mediaservices.models.TextTrack&text=TextTrack\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a text track in an asset. A text track is usually used for sparse data related to the audio or video tracks."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.4.0-beta.2
