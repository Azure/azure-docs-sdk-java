### YamlMime:JavaMember
uid: "com.azure.storage.blob.nio.AzureFileSystemProvider.readAttributes*"
fullName: "com.azure.storage.blob.nio.AzureFileSystemProvider.<A>readAttributes"
name: "<A>readAttributes"
nameWithType: "AzureFileSystemProvider.<A>readAttributes"
members:
- uid: "com.azure.storage.blob.nio.AzureFileSystemProvider.<A>readAttributes(java.nio.file.Path,java.lang.Class<A>,java.nio.file.LinkOption...)"
  fullName: "com.azure.storage.blob.nio.AzureFileSystemProvider.<A>readAttributes(Path path, Class<A> type, LinkOption[] linkOptions)"
  name: "<A>readAttributes(Path path, Class<A> type, LinkOption[] linkOptions)"
  nameWithType: "AzureFileSystemProvider.<A>readAttributes(Path path, Class<A> type, LinkOption[] linkOptions)"
  summary: "Reads a file's attributes as a bulk operation.\n\nSee <xref uid=\"com.azure.storage.blob.nio.AzureBasicFileAttributes\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureBasicFileAttributes\"></xref> and <xref uid=\"com.azure.storage.blob.nio.AzureBlobFileAttributes\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureBlobFileAttributes\"></xref> for more information.\n\nReading attributes on a virtual directory is not supported and will throw an <xref uid=\"java.io.IOException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IOException\"></xref>. See <xref uid=\"com.azure.storage.blob.nio.AzureFileSystemProvider.createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute&lt;?&gt;...)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createDirectory(Path, FileAttribute[])\"></xref> for more information on virtual directories."
  overridden: "java.nio.file.spi.FileSystemProvider.<A>readAttributes(java.nio.file.Path,java.lang.Class<A>,java.nio.file.LinkOption...)"
  parameters:
  - description: "the path to the file"
    name: "path"
    type: "<xref href=\"java.nio.file.Path?alt=java.nio.file.Path&text=Path\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Class of the file attributes required to read"
    name: "type"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "ignored"
    name: "linkOptions"
    type: "<xref href=\"java.nio.file.LinkOption?alt=java.nio.file.LinkOption&text=LinkOption\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public A <A>readAttributes(Path path, Class<A> type, LinkOption[] linkOptions)"
  exceptions:
  - description: "if an attributes of the given type are not supported"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "the file attributes"
    type: "<xref href=\"A?alt=A&text=A\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.nio.AzureFileSystemProvider.readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)"
  fullName: "com.azure.storage.blob.nio.AzureFileSystemProvider.readAttributes(Path path, String attributes, LinkOption[] linkOptions)"
  name: "readAttributes(Path path, String attributes, LinkOption[] linkOptions)"
  nameWithType: "AzureFileSystemProvider.readAttributes(Path path, String attributes, LinkOption[] linkOptions)"
  summary: "Reads a set of file attributes as a bulk operation.\n\nSee <xref uid=\"com.azure.storage.blob.nio.AzureBasicFileAttributes\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureBasicFileAttributes\"></xref> and <xref uid=\"com.azure.storage.blob.nio.AzureBlobFileAttributes\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureBlobFileAttributes\"></xref> for more information.\n\nReading attributes on a virtual directory is not supported and will throw an <xref uid=\"java.io.IOException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IOException\"></xref>. See <xref uid=\"com.azure.storage.blob.nio.AzureFileSystemProvider.createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute&lt;?&gt;...)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createDirectory(Path, FileAttribute[])\"></xref> for more information on virtual directories."
  overridden: "java.nio.file.spi.FileSystemProvider.readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)"
  parameters:
  - description: "the path to the file"
    name: "path"
    type: "<xref href=\"java.nio.file.Path?alt=java.nio.file.Path&text=Path\" data-throw-if-not-resolved=\"False\" />"
  - description: "the attributes to read"
    name: "attributes"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ignored"
    name: "linkOptions"
    type: "<xref href=\"java.nio.file.LinkOption?alt=java.nio.file.LinkOption&text=LinkOption\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public Map<String,Object> readAttributes(Path path, String attributes, LinkOption[] linkOptions)"
  exceptions:
  - description: "if an attributes of the given type are not supported"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "a map of the attributes returned; may be empty. The map's keys are the attribute names, its values are\n the attribute values"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.nio"
artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
