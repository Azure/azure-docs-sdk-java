### YamlMime:ManagedReference
items:
- uid: com.azure.core.management.polling.PollerFactory
  id: PollerFactory
  artifact: com.azure:azure-core-management:1.0.0-beta.3
  parent: com.azure.core.management.polling
  children:
  - com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.lang.String)
  - com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.lang.String,com.azure.core.util.Context)
  - com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.util.function.Function<com.azure.core.util.polling.PollingContext<com.azure.core.management.polling.PollResult<T>>,reactor.core.publisher.Mono<com.azure.core.management.polling.PollResult<T>>>)
  - com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.util.function.Function<com.azure.core.util.polling.PollingContext<com.azure.core.management.polling.PollResult<T>>,reactor.core.publisher.Mono<com.azure.core.management.polling.PollResult<T>>>,com.azure.core.util.Context)
  - com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>)
  - com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>,com.azure.core.util.Context)
  - com.azure.core.management.polling.PollerFactory.PollerFactory()
  langs:
  - java
  name: PollerFactory
  nameWithType: PollerFactory
  fullName: com.azure.core.management.polling.PollerFactory
  type: Class
  package: com.azure.core.management.polling
  summary: Factory to create PollerFlux for Azure resource manager (ARM) long-running-operation (LRO).
  syntax:
    content: public final class PollerFactory
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.lang.String)
  id: <T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.lang.String)
  artifact: com.azure:azure-core-management:1.0.0-beta.3
  parent: com.azure.core.management.polling.PollerFactory
  langs:
  - java
  name: <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr)
  nameWithType: PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr)
  fullName: com.azure.core.management.polling.PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr)
  overload: com.azure.core.management.polling.PollerFactory.create*
  type: Method
  package: com.azure.core.management.polling
  summary: Dehydrate a PollerFlux from a string.
  syntax:
    content: public static PollerFlux<PollResult<T>,U> <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr)
    parameters:
    - id: serializerAdapter
      type: com.azure.core.util.serializer.SerializerAdapter
      description: the serializer for any encoding and decoding
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
      description: the HttpPipeline for making any Http request (e.g. poll)
    - id: pollResultType
      type: java.lang.reflect.Type
      description: the type of the poll result, if no result is expecting then this should be Void.class
    - id: finalResultType
      type: java.lang.reflect.Type
      description: the type of the final result, if no result is expecting then this should be Void.class
    - id: defaultPollInterval
      type: java.time.Duration
      description: the default poll interval to use if service does not return retry-after
    - id: pollingStateStr
      type: java.lang.String
      description: the string to dehydrate PollerFlux from
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<T>,U>
      description: PollerFlux
- uid: com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.lang.String,com.azure.core.util.Context)
  id: <T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-core-management:1.0.0-beta.3
  parent: com.azure.core.management.polling.PollerFactory
  langs:
  - java
  name: <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr, Context context)
  nameWithType: PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr, Context context)
  fullName: com.azure.core.management.polling.PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr, Context context)
  overload: com.azure.core.management.polling.PollerFactory.create*
  type: Method
  package: com.azure.core.management.polling
  summary: Dehydrate a PollerFlux from a string.
  syntax:
    content: public static PollerFlux<PollResult<T>,U> <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, String pollingStateStr, Context context)
    parameters:
    - id: serializerAdapter
      type: com.azure.core.util.serializer.SerializerAdapter
      description: the serializer for any encoding and decoding
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
      description: the HttpPipeline for making any Http request (e.g. poll)
    - id: pollResultType
      type: java.lang.reflect.Type
      description: the type of the poll result, if no result is expecting then this should be Void.class
    - id: finalResultType
      type: java.lang.reflect.Type
      description: the type of the final result, if no result is expecting then this should be Void.class
    - id: defaultPollInterval
      type: java.time.Duration
      description: the default poll interval to use if service does not return retry-after
    - id: pollingStateStr
      type: java.lang.String
      description: the string to dehydrate PollerFlux from
    - id: context
      type: com.azure.core.util.Context
      description: the context shared by all requests
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<T>,U>
      description: PollerFlux
- uid: com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.util.function.Function<com.azure.core.util.polling.PollingContext<com.azure.core.management.polling.PollResult<T>>,reactor.core.publisher.Mono<com.azure.core.management.polling.PollResult<T>>>)
  id: <T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.util.function.Function<com.azure.core.util.polling.PollingContext<com.azure.core.management.polling.PollResult<T>>,reactor.core.publisher.Mono<com.azure.core.management.polling.PollResult<T>>>)
  artifact: com.azure:azure-core-management:1.0.0-beta.3
  parent: com.azure.core.management.polling.PollerFactory
  langs:
  - java
  name: <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation)
  nameWithType: PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation)
  fullName: com.azure.core.management.polling.PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation)
  overload: com.azure.core.management.polling.PollerFactory.create*
  type: Method
  package: com.azure.core.management.polling
  summary: Creates a PollerFlux.
  syntax:
    content: public static PollerFlux<PollResult<T>,U> <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation)
    parameters:
    - id: serializerAdapter
      type: com.azure.core.util.serializer.SerializerAdapter
      description: the serializer for any encoding and decoding
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
      description: the HttpPipeline for making any Http request (e.g. poll)
    - id: pollResultType
      type: java.lang.reflect.Type
      description: the type of the poll result, if no result is expecting then this should be Void.class
    - id: finalResultType
      type: java.lang.reflect.Type
      description: the type of the final result, if no result is expecting then this should be Void.class
    - id: defaultPollInterval
      type: java.time.Duration
      description: the default poll interval to use if service does not return retry-after
    - id: lroInitOperation
      type: java.util.function.Function<com.azure.core.util.polling.PollingContext<com.azure.core.management.polling.PollResult<T>>,reactor.core.publisher.Mono<com.azure.core.management.polling.PollResult<T>>>
      description: the function upon invoking should initiate the long-running-operation
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<T>,U>
      description: PollerFlux
- uid: com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.util.function.Function<com.azure.core.util.polling.PollingContext<com.azure.core.management.polling.PollResult<T>>,reactor.core.publisher.Mono<com.azure.core.management.polling.PollResult<T>>>,com.azure.core.util.Context)
  id: <T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,java.util.function.Function<com.azure.core.util.polling.PollingContext<com.azure.core.management.polling.PollResult<T>>,reactor.core.publisher.Mono<com.azure.core.management.polling.PollResult<T>>>,com.azure.core.util.Context)
  artifact: com.azure:azure-core-management:1.0.0-beta.3
  parent: com.azure.core.management.polling.PollerFactory
  langs:
  - java
  name: <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation, Context context)
  nameWithType: PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation, Context context)
  fullName: com.azure.core.management.polling.PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation, Context context)
  overload: com.azure.core.management.polling.PollerFactory.create*
  type: Method
  package: com.azure.core.management.polling
  summary: Creates a PollerFlux.
  syntax:
    content: public static PollerFlux<PollResult<T>,U> <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Function<PollingContext<PollResult<T>>,Mono<PollResult<T>>> lroInitOperation, Context context)
    parameters:
    - id: serializerAdapter
      type: com.azure.core.util.serializer.SerializerAdapter
      description: the serializer for any encoding and decoding
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
      description: the HttpPipeline for making any Http request (e.g. poll)
    - id: pollResultType
      type: java.lang.reflect.Type
      description: the type of the poll result, if no result is expecting then this should be Void.class
    - id: finalResultType
      type: java.lang.reflect.Type
      description: the type of the final result, if no result is expecting then this should be Void.class
    - id: defaultPollInterval
      type: java.time.Duration
      description: the default poll interval to use if service does not return retry-after
    - id: lroInitOperation
      type: java.util.function.Function<com.azure.core.util.polling.PollingContext<com.azure.core.management.polling.PollResult<T>>,reactor.core.publisher.Mono<com.azure.core.management.polling.PollResult<T>>>
      description: the function upon invoking should initiate the long-running-operation
    - id: context
      type: com.azure.core.util.Context
      description: the context shared by all requests
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<T>,U>
      description: PollerFlux
- uid: com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>)
  id: <T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>)
  artifact: com.azure:azure-core-management:1.0.0-beta.3
  parent: com.azure.core.management.polling.PollerFactory
  langs:
  - java
  name: <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono)
  nameWithType: PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono)
  fullName: com.azure.core.management.polling.PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono)
  overload: com.azure.core.management.polling.PollerFactory.create*
  type: Method
  package: com.azure.core.management.polling
  summary: Creates a PollerFlux with default ARM LRO init operation.
  syntax:
    content: public static PollerFlux<PollResult<T>,U> <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono)
    parameters:
    - id: serializerAdapter
      type: com.azure.core.util.serializer.SerializerAdapter
      description: the serializer for any encoding and decoding
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
      description: the HttpPipeline for making any Http request (e.g. poll)
    - id: pollResultType
      type: java.lang.reflect.Type
      description: the type of the poll result, if no result is expecting then this should be Void.class
    - id: finalResultType
      type: java.lang.reflect.Type
      description: the type of the final result, if no result is expecting then this should be Void.class
    - id: defaultPollInterval
      type: java.time.Duration
      description: the default poll interval to use if service does not return retry-after
    - id: lroInitMono
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the Mono on subscribe send the service request to initiate the long-running-operation
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<T>,U>
      description: PollerFlux
- uid: com.azure.core.management.polling.PollerFactory.<T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>,com.azure.core.util.Context)
  id: <T,U>create(com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.HttpPipeline,java.lang.reflect.Type,java.lang.reflect.Type,java.time.Duration,reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>,com.azure.core.util.Context)
  artifact: com.azure:azure-core-management:1.0.0-beta.3
  parent: com.azure.core.management.polling.PollerFactory
  langs:
  - java
  name: <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono, Context context)
  nameWithType: PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono, Context context)
  fullName: com.azure.core.management.polling.PollerFactory.<T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono, Context context)
  overload: com.azure.core.management.polling.PollerFactory.create*
  type: Method
  package: com.azure.core.management.polling
  summary: Creates a PollerFlux with default ARM LRO init operation.
  syntax:
    content: public static PollerFlux<PollResult<T>,U> <T,U>create(SerializerAdapter serializerAdapter, HttpPipeline pipeline, Type pollResultType, Type finalResultType, Duration defaultPollInterval, Mono<Response<Flux<ByteBuffer>>> lroInitMono, Context context)
    parameters:
    - id: serializerAdapter
      type: com.azure.core.util.serializer.SerializerAdapter
      description: the serializer for any encoding and decoding
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
      description: the HttpPipeline for making any Http request (e.g. poll)
    - id: pollResultType
      type: java.lang.reflect.Type
      description: the type of the poll result, if no result is expecting then this should be Void.class
    - id: finalResultType
      type: java.lang.reflect.Type
      description: the type of the final result, if no result is expecting then this should be Void.class
    - id: defaultPollInterval
      type: java.time.Duration
      description: the default poll interval to use if service does not return retry-after
    - id: lroInitMono
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the Mono on subscribe send the service request to initiate the long-running-operation
    - id: context
      type: com.azure.core.util.Context
      description: the context shared by all requests
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<T>,U>
      description: PollerFlux
- uid: com.azure.core.management.polling.PollerFactory.PollerFactory()
  id: PollerFactory()
  artifact: com.azure:azure-core-management:1.0.0-beta.3
  parent: com.azure.core.management.polling.PollerFactory
  langs:
  - java
  name: PollerFactory()
  nameWithType: PollerFactory.PollerFactory()
  fullName: com.azure.core.management.polling.PollerFactory.PollerFactory()
  overload: com.azure.core.management.polling.PollerFactory.PollerFactory*
  type: Constructor
  package: com.azure.core.management.polling
  syntax:
    content: public PollerFactory()
references:
- uid: com.azure.core.management.polling.PollerFactory.PollerFactory*
  name: PollerFactory
  nameWithType: PollerFactory.PollerFactory
  fullName: com.azure.core.management.polling.PollerFactory.PollerFactory
  package: com.azure.core.management.polling
- uid: com.azure.core.util.serializer.SerializerAdapter
  spec.java:
  - uid: com.azure.core.util.serializer.SerializerAdapter
    name: SerializerAdapter
    fullName: com.azure.core.util.serializer.SerializerAdapter
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: java.lang.reflect.Type
  spec.java:
  - uid: java.lang.reflect.Type
    name: Type
    fullName: java.lang.reflect.Type
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<T>,U>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: U
    name: U
    fullName: U
  - name: '>'
    fullName: '>'
- uid: com.azure.core.management.polling.PollerFactory.create*
  name: <T,U>create
  nameWithType: PollerFactory.<T,U>create
  fullName: com.azure.core.management.polling.PollerFactory.<T,U>create
  package: com.azure.core.management.polling
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: java.util.function.Function<com.azure.core.util.polling.PollingContext<com.azure.core.management.polling.PollResult<T>>,reactor.core.publisher.Mono<com.azure.core.management.polling.PollResult<T>>>
  spec.java:
  - uid: java.util.function.Function
    name: Function
    fullName: java.util.function.Function
  - name: <
    fullName: <
  - uid: com.azure.core.util.polling.PollingContext
    name: PollingContext
    fullName: com.azure.core.util.polling.PollingContext
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: T>,U
  name: T>,U
  nameWithType: T>,U
  fullName: T>,U
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.PollingContext
  name: PollingContext
  nameWithType: PollingContext
  fullName: com.azure.core.util.polling.PollingContext
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: T>>,reactor.core.publisher.Mono
  name: T>>,Mono
  nameWithType: T>>,Mono
  fullName: T>>,reactor.core.publisher.Mono
- uid: java.util.function.Function
  name: Function
  nameWithType: Function
  fullName: java.util.function.Function
