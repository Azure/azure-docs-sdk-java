### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.base.Ticker"
fullName: "com.azure.cosmos.implementation.guava25.base.Ticker"
name: "Ticker"
nameWithType: "Ticker"
summary: "A time source; returns a time value representing the number of nanoseconds elapsed since some fixed but arbitrary point in time. Note that most users should use <xref uid=\"com.azure.cosmos.implementation.guava25.base.Stopwatch\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Stopwatch\"></xref> instead of interacting with this class directly.\n\n**Warning:** this interface can only be used to measure elapsed time, not wall time."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class Ticker"
constructors:
- "com.azure.cosmos.implementation.guava25.base.Ticker.Ticker()"
methods:
- "com.azure.cosmos.implementation.guava25.base.Ticker.read()"
- "com.azure.cosmos.implementation.guava25.base.Ticker.systemTicker()"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
