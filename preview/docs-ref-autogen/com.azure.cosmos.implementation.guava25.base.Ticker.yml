### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.base.Ticker
  id: Ticker
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base
  children:
  - com.azure.cosmos.implementation.guava25.base.Ticker.Ticker()
  - com.azure.cosmos.implementation.guava25.base.Ticker.read()
  - com.azure.cosmos.implementation.guava25.base.Ticker.systemTicker()
  langs:
  - java
  name: Ticker
  nameWithType: Ticker
  fullName: com.azure.cosmos.implementation.guava25.base.Ticker
  type: Class
  package: com.azure.cosmos.implementation.guava25.base
  summary: >-
    A time source; returns a time value representing the number of nanoseconds elapsed since some fixed but arbitrary point in time. Note that most users should use <xref uid="com.azure.cosmos.implementation.guava25.base.Stopwatch" data-throw-if-not-resolved="false">Stopwatch</xref> instead of interacting with this class directly.


    **Warning:** this interface can only be used to measure elapsed time, not wall time.
  syntax:
    content: public abstract class Ticker
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.base.Ticker.Ticker()
  id: Ticker()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ticker
  langs:
  - java
  name: Ticker()
  nameWithType: Ticker.Ticker()
  fullName: com.azure.cosmos.implementation.guava25.base.Ticker.Ticker()
  overload: com.azure.cosmos.implementation.guava25.base.Ticker.Ticker*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.base
  summary: Constructor for use by subclasses.
  syntax:
    content: protected Ticker()
- uid: com.azure.cosmos.implementation.guava25.base.Ticker.read()
  id: read()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ticker
  langs:
  - java
  name: read()
  nameWithType: Ticker.read()
  fullName: com.azure.cosmos.implementation.guava25.base.Ticker.read()
  overload: com.azure.cosmos.implementation.guava25.base.Ticker.read*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: Returns the number of nanoseconds elapsed since this ticker's fixed point of reference.
  syntax:
    content: public abstract long read()
    return:
      type: long
- uid: com.azure.cosmos.implementation.guava25.base.Ticker.systemTicker()
  id: systemTicker()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.base.Ticker
  langs:
  - java
  name: systemTicker()
  nameWithType: Ticker.systemTicker()
  fullName: com.azure.cosmos.implementation.guava25.base.Ticker.systemTicker()
  overload: com.azure.cosmos.implementation.guava25.base.Ticker.systemTicker*
  type: Method
  package: com.azure.cosmos.implementation.guava25.base
  summary: A ticker that reads the current time using <xref uid="" data-throw-if-not-resolved="false">System#nanoTime</xref>.
  syntax:
    content: public static Ticker systemTicker()
    return:
      type: com.azure.cosmos.implementation.guava25.base.Ticker
references:
- uid: com.azure.cosmos.implementation.guava25.base.Ticker.Ticker*
  name: Ticker
  nameWithType: Ticker.Ticker
  fullName: com.azure.cosmos.implementation.guava25.base.Ticker.Ticker
  package: com.azure.cosmos.implementation.guava25.base
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.azure.cosmos.implementation.guava25.base.Ticker.read*
  name: read
  nameWithType: Ticker.read
  fullName: com.azure.cosmos.implementation.guava25.base.Ticker.read
  package: com.azure.cosmos.implementation.guava25.base
- uid: com.azure.cosmos.implementation.guava25.base.Ticker.systemTicker*
  name: systemTicker
  nameWithType: Ticker.systemTicker
  fullName: com.azure.cosmos.implementation.guava25.base.Ticker.systemTicker
  package: com.azure.cosmos.implementation.guava25.base
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
