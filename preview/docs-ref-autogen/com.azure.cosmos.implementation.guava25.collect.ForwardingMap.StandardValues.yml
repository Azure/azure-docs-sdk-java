### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.StandardValues"
fullName: "com.azure.cosmos.implementation.guava25.collect.ForwardingMap<K,V>.StandardValues"
name: "ForwardingMap<K,V>.StandardValues"
nameWithType: "ForwardingMap<K,V>.StandardValues"
summary: "A sensible implementation of <xref uid=\"java.util.Map.values\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map#values\"></xref> in terms of the following methods: <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ForwardingMap#clear\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ForwardingMap#containsValue\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ForwardingMap#isEmpty\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ForwardingMap#size\"></xref>, and the <xref uid=\"java.util.Set.iterator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Set#iterator\"></xref> method of <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ForwardingMap#entrySet\"></xref>. In many cases, you may wish to override <xref uid=\"com.azure.cosmos.implementation.guava25.collect.ForwardingMap.values\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ForwardingMap#values\"></xref> to forward to this implementation or a subclass thereof."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractCollection\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Maps.Values\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.Maps.Values.clear()"
- "com.azure.cosmos.implementation.guava25.collect.Maps.Values.contains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.Maps.Values.forEach(java.util.function.Consumer<? super V>)"
- "com.azure.cosmos.implementation.guava25.collect.Maps.Values.isEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.Maps.Values.iterator()"
- "com.azure.cosmos.implementation.guava25.collect.Maps.Values.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.Maps.Values.removeAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.Maps.Values.retainAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.Maps.Values.size()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "java.util.AbstractCollection.<T>toArray(T[])"
- "java.util.AbstractCollection.add(E)"
- "java.util.AbstractCollection.addAll(java.util.Collection<? extends E>)"
- "java.util.AbstractCollection.containsAll(java.util.Collection<?>)"
- "java.util.AbstractCollection.toArray()"
- "java.util.AbstractCollection.toString()"
syntax: "protected class ForwardingMap<K,V>.StandardValues extends Maps.Values<K,V>"
constructors:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingMap.StandardValues.StandardValues()"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
