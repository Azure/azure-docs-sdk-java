### YamlMime:JavaMember
uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceId*"
fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceId"
name: "withReturnFaceId"
nameWithType: "Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceId"
members:
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceId(java.lang.Boolean)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceId(Boolean returnFaceId)"
  name: "withReturnFaceId(Boolean returnFaceId)"
  nameWithType: "Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceId(Boolean returnFaceId)"
  summary: "A value indicating whether the operation should return faceIds of detected faces."
  parameters:
  - name: "returnFaceId"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Faces.FacesDetectWithStreamDefinitionStages.WithExecute withReturnFaceId(Boolean returnFaceId)"
  returns:
    description: "next definition stage"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithExecute?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithExecute&text=WithExecute\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.faceapi"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-faceapi:1.0.1-beta
