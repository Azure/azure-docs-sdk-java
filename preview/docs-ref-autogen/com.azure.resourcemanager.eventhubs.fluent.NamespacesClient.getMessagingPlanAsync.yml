### YamlMime:JavaMember
uid: "com.azure.resourcemanager.eventhubs.fluent.NamespacesClient.getMessagingPlanAsync*"
fullName: "com.azure.resourcemanager.eventhubs.fluent.NamespacesClient.getMessagingPlanAsync"
name: "getMessagingPlanAsync"
nameWithType: "NamespacesClient.getMessagingPlanAsync"
members:
- uid: "com.azure.resourcemanager.eventhubs.fluent.NamespacesClient.getMessagingPlanAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.eventhubs.fluent.NamespacesClient.getMessagingPlanAsync(String resourceGroupName, String namespaceName)"
  name: "getMessagingPlanAsync(String resourceGroupName, String namespaceName)"
  nameWithType: "NamespacesClient.getMessagingPlanAsync(String resourceGroupName, String namespaceName)"
  summary: "Gets messaging plan for specified namespace."
  parameters:
  - description: "Name of the resource group within the azure subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The Namespace name."
    name: "namespaceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<MessagingPlanInner> getMessagingPlanAsync(String resourceGroupName, String namespaceName)"
  returns:
    description: "messaging plan for specified namespace."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.eventhubs.fluent.models.MessagingPlanInner?alt=com.azure.resourcemanager.eventhubs.fluent.models.MessagingPlanInner&text=MessagingPlanInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.eventhubs.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventhubs:2.0.0-beta.5
