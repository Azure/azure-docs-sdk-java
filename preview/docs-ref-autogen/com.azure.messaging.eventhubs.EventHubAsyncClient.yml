### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient
  id: EventHubAsyncClient
  parent: com.azure.messaging.eventhubs
  children:
  - com.azure.messaging.eventhubs.EventHubAsyncClient.close()
  - com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer(String,String,EventPosition)
  - com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer(String,String,EventPosition,EventHubConsumerOptions)
  - com.azure.messaging.eventhubs.EventHubAsyncClient.createProducer()
  - com.azure.messaging.eventhubs.EventHubAsyncClient.createProducer(EventHubProducerOptions)
  - com.azure.messaging.eventhubs.EventHubAsyncClient.DEFAULT_CONSUMER_GROUP_NAME
  - com.azure.messaging.eventhubs.EventHubAsyncClient.getPartitionIds()
  - com.azure.messaging.eventhubs.EventHubAsyncClient.getPartitionProperties(String)
  - com.azure.messaging.eventhubs.EventHubAsyncClient.getProperties()
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  langs:
  - java
  name: EventHubAsyncClient
  nameWithType: EventHubAsyncClient
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient
  type: Class
  source:
    remote: &o0
      path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubAsyncClient.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubAsyncClient.java
    startLine: 61
  package: com.azure.messaging.eventhubs
  summary: "<p>The main point of interaction with Azure Event Hubs, the client offers a connection to a specific Event Hub within the Event Hubs namespace and offers operations for sending event data, receiving events, and inspecting the connected Event Hub.</p>\r\n<p>\r\n  <b>Creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> using Event Hubs namespace connection string</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubclientbuilder.connectionString::string-string}</p>\r\n<p>\r\n  <b>Creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> using Event Hub instance connection string</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubclientbuilder.connectionstring::string}</p>\r\n<p></p>"
  syntax: &o2
    content: public class EventHubAsyncClient
  inheritance:
  - java.lang.Object
  - Closeable
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.close()
  id: close()
  parent: com.azure.messaging.eventhubs.EventHubAsyncClient
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  langs:
  - java
  name: close()
  nameWithType: EventHubAsyncClient.close()
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.close()
  overload: com.azure.messaging.eventhubs.EventHubAsyncClient.close*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubAsyncClient.java
    startLine: 278
  package: com.azure.messaging.eventhubs
  summary: "<p>Closes and disposes of connection to service. Any <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumers</xref> and <xref uid=\"com.azure.messaging.eventhubs.EventHubProducer\" data-throw-if-not-resolved=\"false\">EventHubProducers</xref> created with this instance will have their connections closed. </p>"
  syntax:
    content: public void close()
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer(String,String,EventPosition)
  id: createConsumer(String,String,EventPosition)
  parent: com.azure.messaging.eventhubs.EventHubAsyncClient
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  langs:
  - java
  name: createConsumer(String consumerGroup, String partitionId, EventPosition eventPosition)
  nameWithType: EventHubAsyncClient.createConsumer(String consumerGroup, String partitionId, EventPosition eventPosition)
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer(String consumerGroup, String partitionId, EventPosition eventPosition)
  overload: com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubAsyncClient.java
    startLine: 205
  package: com.azure.messaging.eventhubs
  summary: "<p>Creates an Event Hub consumer responsible for reading <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> from a specific Event Hub partition, as a member of the specified consumer group, and begins reading events from the<code>eventPosition \r\n    </code> .</p>\r\n<p>The consumer created is non-exclusive, allowing multiple consumers from the same consumer group to be actively reading events from the partition. These non-exclusive consumers are sometimes referred to as \"Non-epoch\r\nConsumers\".</p>\r\n<p></p>"
  syntax:
    content: public EventHubConsumer createConsumer(String consumerGroup, String partitionId, EventPosition eventPosition)
    parameters:
    - id: consumerGroup
      type: "26831127"
      description: <p>The name of the consumer group this consumer is associated with. Events are read in the context of this group. The name of the consumer group that is created by default is <xref uid="com.azure.messaging.eventhubs.EventHubAsyncClient.DEFAULT_CONSUMER_GROUP_NAME" data-throw-if-not-resolved="false">"$Default"</xref>. </p>
    - id: partitionId
      type: "26831127"
      description: <p>The identifier of the Event Hub partition. </p>
    - id: eventPosition
      type: com.azure.messaging.eventhubs.models.EventPosition
      description: <p>The position within the partition where the consumer should begin reading events. </p>
    return:
      type: com.azure.messaging.eventhubs.EventHubConsumer
      description: <p>A new <xref uid="com.azure.messaging.eventhubs.EventHubConsumer" data-throw-if-not-resolved="false">EventHubConsumer</xref> that receives events from the partition at the given position. </p>
  exceptions:
  - type: 17c54119
    description: >-
      <p>If<code>eventPosition 

          </code> , or<code>options 

          </code> is<code>null 

          </code> . </p>
  - type: 3c87bd19
    description: >-
      <p>If<code>consumerGroup 

          </code> or<code>partitionId 

          </code> is<code>null 

          </code> or an empty string. </p>
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer(String,String,EventPosition,EventHubConsumerOptions)
  id: createConsumer(String,String,EventPosition,EventHubConsumerOptions)
  parent: com.azure.messaging.eventhubs.EventHubAsyncClient
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  langs:
  - java
  name: createConsumer(String consumerGroup, String partitionId, EventPosition eventPosition, EventHubConsumerOptions options)
  nameWithType: EventHubAsyncClient.createConsumer(String consumerGroup, String partitionId, EventPosition eventPosition, EventHubConsumerOptions options)
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer(String consumerGroup, String partitionId, EventPosition eventPosition, EventHubConsumerOptions options)
  overload: com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubAsyncClient.java
    startLine: 239
  package: com.azure.messaging.eventhubs
  summary: "<p>Creates an Event Hub consumer responsible for reading <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> from a specific Event Hub partition, as a member of the configured consumer group, and begins reading events from the specified<code>eventPosition \r\n    </code> .</p>\r\n<p>A consumer may be exclusive, which asserts ownership over the partition for the consumer group to ensure that only one consumer from that group is reading the from the partition. These exclusive consumers are sometimes referred to as \"Epoch Consumers.\"</p>\r\n<p>A consumer may also be non-exclusive, allowing multiple consumers from the same consumer group to be actively reading events from the partition. These non-exclusive consumers are sometimes referred to as \"Non-epoch\r\nConsumers.\"</p>\r\n<p>Designating a consumer as exclusive may be specified in the<code>options \r\n    </code> , by setting <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel(Long)\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#ownerLevel(Long)</xref> to a non-null value. By default, consumers are created as non-exclusive. </p>\r\n<p></p>"
  syntax:
    content: public EventHubConsumer createConsumer(String consumerGroup, String partitionId, EventPosition eventPosition, EventHubConsumerOptions options)
    parameters:
    - id: consumerGroup
      type: "26831127"
      description: <p>The name of the consumer group this consumer is associated with. Events are read in the context of this group. The name of the consumer group that is created by default is <xref uid="com.azure.messaging.eventhubs.EventHubAsyncClient.DEFAULT_CONSUMER_GROUP_NAME" data-throw-if-not-resolved="false">"$Default"</xref>. </p>
    - id: partitionId
      type: "26831127"
      description: <p>The identifier of the Event Hub partition from which events will be received. </p>
    - id: eventPosition
      type: com.azure.messaging.eventhubs.models.EventPosition
      description: <p>The position within the partition where the consumer should begin reading events. </p>
    - id: options
      type: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
      description: <p>The set of options to apply when creating the consumer. </p>
    return:
      type: com.azure.messaging.eventhubs.EventHubConsumer
      description: <p>An new <xref uid="com.azure.messaging.eventhubs.EventHubConsumer" data-throw-if-not-resolved="false">EventHubConsumer</xref> that receives events from the partition with all configured <xref uid="" data-throw-if-not-resolved="false">EventHubConsumerOptions</xref>. </p>
  exceptions:
  - type: 17c54119
    description: >-
      <p>If<code>eventPosition 

          </code> , or<code>options 

          </code> is<code>null 

          </code> . </p>
  - type: 3c87bd19
    description: >-
      <p>If<code>consumerGroup 

          </code> or<code>partitionId 

          </code> is<code>null 

          </code> or an empty string. </p>
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.createProducer()
  id: createProducer()
  parent: com.azure.messaging.eventhubs.EventHubAsyncClient
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  langs:
  - java
  name: createProducer()
  nameWithType: EventHubAsyncClient.createProducer()
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.createProducer()
  overload: com.azure.messaging.eventhubs.EventHubAsyncClient.createProducer*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubAsyncClient.java
    startLine: 141
  package: com.azure.messaging.eventhubs
  summary: "<p>Creates an Event Hub producer responsible for transmitting <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> to the Event Hub, grouped together in batches. Event data is automatically routed to an available partition.</p>\r\n<p></p>"
  syntax:
    content: public EventHubProducer createProducer()
    return:
      type: com.azure.messaging.eventhubs.EventHubProducer
      description: <p>A new <xref uid="com.azure.messaging.eventhubs.EventHubProducer" data-throw-if-not-resolved="false">EventHubProducer</xref>. </p>
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.createProducer(EventHubProducerOptions)
  id: createProducer(EventHubProducerOptions)
  parent: com.azure.messaging.eventhubs.EventHubAsyncClient
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  langs:
  - java
  name: createProducer(EventHubProducerOptions options)
  nameWithType: EventHubAsyncClient.createProducer(EventHubProducerOptions options)
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.createProducer(EventHubProducerOptions options)
  overload: com.azure.messaging.eventhubs.EventHubAsyncClient.createProducer*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubAsyncClient.java
    startLine: 155
  package: com.azure.messaging.eventhubs
  summary: "<p>Creates an Event Hub producer responsible for transmitting <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> to the Event Hub, grouped together in batches. If <xref uid=\"com.azure.messaging.eventhubs.models.EventHubProducerOptions.partitionId()\" data-throw-if-not-resolved=\"false\">options.partitionId()</xref> is not<code>null \r\n    </code> , the events are routed to that specific partition. Otherwise, events are automatically routed to an available partition.</p>\r\n<p></p>"
  syntax:
    content: public EventHubProducer createProducer(EventHubProducerOptions options)
    parameters:
    - id: options
      type: com.azure.messaging.eventhubs.models.EventHubProducerOptions
      description: <p>The set of options to apply when creating the producer. </p>
    return:
      type: com.azure.messaging.eventhubs.EventHubProducer
      description: <p>A new <xref uid="com.azure.messaging.eventhubs.EventHubProducer" data-throw-if-not-resolved="false">EventHubProducer</xref>. </p>
  exceptions:
  - type: 17c54119
    description: >-
      <p>if<code>options 

          </code> is<code>null 

          </code> . </p>
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.DEFAULT_CONSUMER_GROUP_NAME
  id: DEFAULT_CONSUMER_GROUP_NAME
  parent: com.azure.messaging.eventhubs.EventHubAsyncClient
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  langs:
  - java
  name: DEFAULT_CONSUMER_GROUP_NAME
  nameWithType: EventHubAsyncClient.DEFAULT_CONSUMER_GROUP_NAME
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.DEFAULT_CONSUMER_GROUP_NAME
  type: Field
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubAsyncClient.java
    startLine: 65
  package: com.azure.messaging.eventhubs
  summary: "<p>The name of the default consumer group in the Event Hubs service. </p>"
  syntax: &o1
    content: public static final String DEFAULT_CONSUMER_GROUP_NAME= "$Default"
    return:
      type: 3d93591e
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.getPartitionIds()
  id: getPartitionIds()
  parent: com.azure.messaging.eventhubs.EventHubAsyncClient
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  langs:
  - java
  name: getPartitionIds()
  nameWithType: EventHubAsyncClient.getPartitionIds()
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.getPartitionIds()
  overload: com.azure.messaging.eventhubs.EventHubAsyncClient.getPartitionIds*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubAsyncClient.java
    startLine: 116
  package: com.azure.messaging.eventhubs
  summary: "<p>Retrieves the identifiers for the partitions of an Event Hub.</p>\r\n<p></p>"
  syntax:
    content: public Flux<String> getPartitionIds()
    return:
      type: a5d053aa
      description: <p>A Flux of identifiers for the partitions of an Event Hub. </p>
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.getPartitionProperties(String)
  id: getPartitionProperties(String)
  parent: com.azure.messaging.eventhubs.EventHubAsyncClient
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  langs:
  - java
  name: getPartitionProperties(String partitionId)
  nameWithType: EventHubAsyncClient.getPartitionProperties(String partitionId)
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.getPartitionProperties(String partitionId)
  overload: com.azure.messaging.eventhubs.EventHubAsyncClient.getPartitionProperties*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubAsyncClient.java
    startLine: 128
  package: com.azure.messaging.eventhubs
  summary: "<p>Retrieves information about a specific partition for an Event Hub, including elements that describe the available events in the partition event stream.</p>\r\n<p></p>"
  syntax:
    content: public Mono<PartitionProperties> getPartitionProperties(String partitionId)
    parameters:
    - id: partitionId
      type: "26831127"
      description: <p>The unique identifier of a partition associated with the Event Hub. </p>
    return:
      type: 744507a1com.azure.messaging.eventhubs.PartitionPropertiesa08ddfce
      description: <p>The set of information for the requested partition under the Event Hub this client is associated with. </p>
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.getProperties()
  id: getProperties()
  parent: com.azure.messaging.eventhubs.EventHubAsyncClient
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  langs:
  - java
  name: getProperties()
  nameWithType: EventHubAsyncClient.getProperties()
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.getProperties()
  overload: com.azure.messaging.eventhubs.EventHubAsyncClient.getProperties*
  type: Method
  source:
    remote: *o0
    path: sdk/eventhubs/azure-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubAsyncClient.java
    startLine: 106
  package: com.azure.messaging.eventhubs
  summary: "<p>Retrieves information about an Event Hub, including the number of partitions present and their identifiers.</p>\r\n<p></p>"
  syntax:
    content: public Mono<EventHubProperties> getProperties()
    return:
      type: 744507a1com.azure.messaging.eventhubs.EventHubPropertiesa08ddfce
      description: <p>The set of information for the Event Hub that this client is associated with. </p>
references:
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 744507a1com.azure.messaging.eventhubs.EventHubPropertiesa08ddfce
  spec.java:
  - name: Mono<
    fullName: Mono<
  - uid: com.azure.messaging.eventhubs.EventHubProperties
    name: EventHubProperties
    fullName: com.azure.messaging.eventhubs.EventHubProperties
    href: com.azure.messaging.eventhubs.EventHubProperties.yml
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.getProperties*
  name: getProperties
  nameWithType: EventHubAsyncClient.getProperties
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.getProperties
  package: com.azure.messaging.eventhubs
- uid: a5d053aa
  spec.java:
  - name: Flux<String>
    fullName: Flux<String>
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.getPartitionIds*
  name: getPartitionIds
  nameWithType: EventHubAsyncClient.getPartitionIds
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.getPartitionIds
  package: com.azure.messaging.eventhubs
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 744507a1com.azure.messaging.eventhubs.PartitionPropertiesa08ddfce
  spec.java:
  - name: Mono<
    fullName: Mono<
  - uid: com.azure.messaging.eventhubs.PartitionProperties
    name: PartitionProperties
    fullName: com.azure.messaging.eventhubs.PartitionProperties
    href: com.azure.messaging.eventhubs.PartitionProperties.yml
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.getPartitionProperties*
  name: getPartitionProperties
  nameWithType: EventHubAsyncClient.getPartitionProperties
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.getPartitionProperties
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.createProducer*
  name: createProducer
  nameWithType: EventHubAsyncClient.createProducer
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.createProducer
  package: com.azure.messaging.eventhubs
- uid: 17c54119
  spec.java:
  - name: NullPointerException
    fullName: NullPointerException
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer*
  name: createConsumer
  nameWithType: EventHubAsyncClient.createConsumer
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.close*
  name: close
  nameWithType: EventHubAsyncClient.close
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.close
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.models.EventHubProducerOptions
  parent: com.azure.messaging.eventhubs.models
  href: com.azure.messaging.eventhubs.models.EventHubProducerOptions.yml
  name: EventHubProducerOptions
  nameWithType: EventHubProducerOptions
  fullName: com.azure.messaging.eventhubs.models.EventHubProducerOptions
  type: Class
  summary: "<p>The set of options that can be specified when creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubProducer\" data-throw-if-not-resolved=\"false\">EventHubProducer</xref> to configure its behavior.</p>\r\n<p></p>"
  syntax:
    content: public class EventHubProducerOptions
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  parent: com.azure.messaging.eventhubs.models
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  name: EventHubConsumerOptions
  nameWithType: EventHubConsumerOptions
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  type: Class
  summary: "<p>The baseline set of options that can be specified when creating a <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref> to configure its behavior.</p>\r\n<p></p>"
  syntax:
    content: public class EventHubConsumerOptions
- uid: com.azure.messaging.eventhubs.EventHubProperties
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubProperties.yml
  name: EventHubProperties
  nameWithType: EventHubProperties
  fullName: com.azure.messaging.eventhubs.EventHubProperties
  type: Class
  summary: "<p>Holds information about Event Hubs which can come handy while performing data-plane operations like <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer(String,String,EventPosition)\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient#createConsumer(String, String, EventPosition)</xref> and <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient.createConsumer(String,String,EventPosition,EventHubConsumerOptions)\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient#createConsumer(String, String, EventPosition, EventHubConsumerOptions)</xref>.</p>\r\n<p></p>"
  syntax:
    content: public class EventHubProperties
- uid: com.azure.messaging.eventhubs.PartitionProperties
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.PartitionProperties.yml
  name: PartitionProperties
  nameWithType: PartitionProperties
  fullName: com.azure.messaging.eventhubs.PartitionProperties
  type: Class
  summary: "<p>A set of information for a single partition of an Event Hub. </p>"
  syntax:
    content: public class PartitionProperties
- uid: com.azure.messaging.eventhubs.EventHubProducer
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubProducer.yml
  name: EventHubProducer
  nameWithType: EventHubProducer
  fullName: com.azure.messaging.eventhubs.EventHubProducer
  type: Class
  summary: "<p>A producer responsible for transmitting <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> to a specific Event Hub, grouped together in batches. Depending on the options specified at creation, the producer may be created to allow event data to be automatically routed to an available partition or specific to a partition.</p>\r\n<p>Allowing automatic routing of partitions is recommended when: <ul><li><p>The sending of events needs to be highly available. </p></li><li><p>The event data should be evenly distributed among all available partitions. </p></li></ul></p>\r\n<p>If no partition is specified, the following rules are used for automatically selecting one: <orderedlist><li><p>Distribute the events equally amongst all available partitions using a round-robin approach. </p></li><li><p>If a partition becomes unavailable, the Event Hubs service will automatically detect it and forward the message to another available partition. </p></li></orderedlist></p>\r\n<p>\r\n  <b>Create a producer that routes events to any partition</b>\r\n</p>\r\n<p>To allow automatic routing of messages to available partition, do not specify the <xref uid=\"com.azure.messaging.eventhubs.models.EventHubProducerOptions.partitionId()\" data-throw-if-not-resolved=\"false\">partitionId</xref> when creating the <xref uid=\"com.azure.messaging.eventhubs.EventHubProducer\" data-throw-if-not-resolved=\"false\">EventHubProducer</xref>.</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubproducer.instantiate}</p>\r\n<p>\r\n  <b>Create a producer that publishes events to partition \"foo\" with a timeout of 45 seconds.</b>\r\n</p>\r\n<p>Developers can push events to a single partition by specifying the <xref uid=\"com.azure.messaging.eventhubs.models.EventHubProducerOptions.partitionId(String)\" data-throw-if-not-resolved=\"false\">partitionId</xref> when creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubProducer\" data-throw-if-not-resolved=\"false\">EventHubProducer</xref>.</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubproducer.instantiatePartitionProducer}</p>\r\n<p>\r\n  <b>Publish events to the same partition, grouped together using <xref uid=\"com.azure.messaging.eventhubs.models.SendOptions.partitionKey(String)\" data-throw-if-not-resolved=\"false\">SendOptions#partitionKey(String)</xref>.</b>\r\n</p>\r\n<p>If developers want to push similar events to end up at the same partition, but do not require them to go to a specific partition, they can use <xref uid=\"com.azure.messaging.eventhubs.models.SendOptions.partitionKey(String)\" data-throw-if-not-resolved=\"false\">SendOptions#partitionKey(String)</xref>.</p>\r\n<p>In the sample below, all the \"sandwiches\" end up in the same partition, but it could end up in partition 0, 1, etc. of the available partitions. All that matters to the end user is that they are grouped together.</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubproducer.send::publisher-sendOptions}</p>\r\n<p></p>"
  syntax:
    content: public class EventHubProducer
- uid: com.azure.messaging.eventhubs.EventData
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventData.yml
  name: EventData
  nameWithType: EventData
  fullName: com.azure.messaging.eventhubs.EventData
  type: Class
  summary: "<p>The data structure encapsulating the event being sent-to and received-from Event Hubs. Each Event Hub partition can be visualized as a stream of <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>.</p>\r\n<p>Here's how AMQP message sections map to <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. For reference, the specification can be found here: <a href=\"http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf\">AMQP 1.0 specification</a></p>\r\n<p>\r\n  <orderedlist>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.messaging.eventhubs.EventData.properties()\" data-throw-if-not-resolved=\"false\">properties()</xref> - AMQPMessage.ApplicationProperties section </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <xref uid=\"com.azure.messaging.eventhubs.EventData.body()\" data-throw-if-not-resolved=\"false\">body()</xref> - if AMQPMessage.Body has Data section </p>\r\n    </li>\r\n  </orderedlist>\r\n</p>\r\n<p>Serializing a received <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive Java types) and Data section is not supported. </p>\r\n<p></p>"
  syntax:
    content: public class EventData
- uid: com.azure.messaging.eventhubs.models.EventHubProducerOptions.partitionId()
  parent: com.azure.messaging.eventhubs.models.EventHubProducerOptions
  href: com.azure.messaging.eventhubs.models.EventHubProducerOptions.yml
  name: partitionId()
  nameWithType: EventHubProducerOptions.partitionId()
  fullName: com.azure.messaging.eventhubs.models.EventHubProducerOptions.partitionId()
  type: Method
  summary: "<p>Gets the identifier of the Event Hub partition that the <xref uid=\"com.azure.messaging.eventhubs.EventHubProducer\" data-throw-if-not-resolved=\"false\">EventHubProducer</xref> will be bound to, limiting it to sending events to only that partition.</p>\r\n<p>If the identifier is not specified, the Event Hubs service will be responsible for routing events that are sent to an available partition.</p>\r\n<p></p>"
  syntax:
    content: public String partitionId()
    return:
      type: "26831127"
      description: <p>the identifier of the Event Hub partition that the <xref uid="com.azure.messaging.eventhubs.EventHubProducer" data-throw-if-not-resolved="false">EventHubProducer</xref> will be bound to. </p>
- uid: com.azure.messaging.eventhubs.EventHubConsumer
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubConsumer.yml
  name: EventHubConsumer
  nameWithType: EventHubConsumer
  fullName: com.azure.messaging.eventhubs.EventHubConsumer
  type: Class
  summary: "<p>A consumer responsible for reading <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> from a specific Event Hub partition in the context of a specific consumer group.</p>\r\n<p>\r\n  <ul>\r\n    <li>\r\n      <p>If <xref uid=\"com.azure.messaging.eventhubs.EventHubConsumer\" data-throw-if-not-resolved=\"false\">EventHubConsumer</xref> is created where <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#ownerLevel()</xref> has a value, then Event Hubs service will guarantee only one active consumer exists per partitionId and consumer group combination. This consumer is sometimes referred to as an \"Epoch Consumer.\" </p>\r\n    </li>\r\n    <li>\r\n      <p>Multiple consumers per partitionId and consumer group combination can be created by not setting <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#ownerLevel()</xref> when creating consumers. This non-exclusive consumer is sometimes referred to as a \"Non-Epoch Consumer.\" </p>\r\n    </li>\r\n  </ul>\r\n</p>\r\n<p>\r\n  <b>Consuming events from Event Hub</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubconsumer.receive}</p>\r\n<p>\r\n  <b>Rate limiting consumption of events from Event Hub</b>\r\n</p>\r\n<p>For event consumers that need to limit the number of events they receive at a given time, they can use <xref uid=\"\" data-throw-if-not-resolved=\"false\">BaseSubscriber#request(long)</xref>.</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubconsumer.receiveBackpressure}</p>\r\n<p></p>"
  syntax:
    content: public class EventHubConsumer
- uid: com.azure.messaging.eventhubs.models.EventPosition
  parent: com.azure.messaging.eventhubs.models
  href: com.azure.messaging.eventhubs.models.EventPosition.yml
  name: EventPosition
  nameWithType: EventPosition
  fullName: com.azure.messaging.eventhubs.models.EventPosition
  type: Class
  summary: "<p>Defines a position of an <xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> in the Event Hub partition. The position can be an offset, sequence number, or enqueued time.</p>\r\n<p></p>"
  syntax:
    content: public class EventPosition
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.DEFAULT_CONSUMER_GROUP_NAME
  parent: com.azure.messaging.eventhubs.EventHubAsyncClient
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  name: DEFAULT_CONSUMER_GROUP_NAME
  nameWithType: EventHubAsyncClient.DEFAULT_CONSUMER_GROUP_NAME
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.DEFAULT_CONSUMER_GROUP_NAME
  type: Field
  summary: "<p>The name of the default consumer group in the Event Hubs service. </p>"
  syntax: *o1
- uid: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel(Long)
  parent: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
  href: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.yml
  name: ownerLevel(Long priority)
  nameWithType: EventHubConsumerOptions.ownerLevel(Long priority)
  fullName: com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel(Long priority)
  type: Method
  summary: "<p>Sets the<code>ownerLevel \r\n    </code> value on this consumer. When populated, the level indicates that a consumer is intended to be the only reader of events for the requested partition and an associated consumer group. To do so, this consumer will attempt to assert ownership over the partition; in the case where more than one exclusive consumer attempts to assert ownership for the same partition/consumer group pair, the one having a larger <xref uid=\"com.azure.messaging.eventhubs.models.EventHubConsumerOptions.ownerLevel()\" data-throw-if-not-resolved=\"false\">EventHubConsumerOptions#ownerLevel()</xref> value will \"win\".</p>\r\n<p>When an exclusive consumer is used, those consumers which are not exclusive or which have a lower priority will either not be allowed to be created, if they already exist, will encounter an exception during the next attempted operation. </p>\r\n<p></p>"
  syntax:
    content: public EventHubConsumerOptions ownerLevel(Long priority)
    parameters:
    - id: priority
      type: 34f09483
      description: >-
        <p>The priority associated with an exclusive consumer; for a non-exclusive consumer, this value should be<code>null 

            </code> . </p>
    return:
      type: com.azure.messaging.eventhubs.models.EventHubConsumerOptions
      description: <p>The updated <xref uid="com.azure.messaging.eventhubs.models.EventHubConsumerOptions" data-throw-if-not-resolved="false">EventHubConsumerOptions</xref> object. </p>
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient
  parent: com.azure.messaging.eventhubs
  href: com.azure.messaging.eventhubs.EventHubAsyncClient.yml
  name: EventHubAsyncClient
  nameWithType: EventHubAsyncClient
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient
  type: Class
  summary: "<p>The main point of interaction with Azure Event Hubs, the client offers a connection to a specific Event Hub within the Event Hubs namespace and offers operations for sending event data, receiving events, and inspecting the connected Event Hub.</p>\r\n<p>\r\n  <b>Creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> using Event Hubs namespace connection string</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubclientbuilder.connectionString::string-string}</p>\r\n<p>\r\n  <b>Creating an <xref uid=\"com.azure.messaging.eventhubs.EventHubAsyncClient\" data-throw-if-not-resolved=\"false\">EventHubAsyncClient</xref> using Event Hub instance connection string</b>\r\n</p>\r\n<p>{ com.azure.messaging.eventhubs.eventhubclientbuilder.connectionstring::string}</p>\r\n<p></p>"
  syntax: *o2
