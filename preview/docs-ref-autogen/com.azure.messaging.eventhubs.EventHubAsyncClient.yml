### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient
  id: EventHubAsyncClient
  artifact: com.azure:azure-messaging-eventhubs:5.1.0-beta.1
  parent: com.azure.messaging.eventhubs
  children:
  - com.azure.messaging.eventhubs.EventHubAsyncClient.close()
  langs:
  - java
  name: EventHubAsyncClient
  nameWithType: EventHubAsyncClient
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient
  type: Class
  package: com.azure.messaging.eventhubs
  summary: An **asynchronous** client that is the main point of interaction with Azure Event Hubs. It connects to a specific Event Hub and allows operations for sending event data, receiving data, and inspecting the Event Hub's metadata.
  syntax:
    content: " class EventHubAsyncClient implements Closeable"
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Closeable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.EventHubAsyncClient(com.azure.messaging.eventhubs.implementation.EventHubConnectionProcessor,com.azure.core.amqp.implementation.TracerProvider,com.azure.core.amqp.implementation.MessageSerializer,reactor.core.scheduler.Scheduler,boolean,java.lang.Runnable)
  id: EventHubAsyncClient(com.azure.messaging.eventhubs.implementation.EventHubConnectionProcessor,com.azure.core.amqp.implementation.TracerProvider,com.azure.core.amqp.implementation.MessageSerializer,reactor.core.scheduler.Scheduler,boolean,java.lang.Runnable)
  artifact: com.azure:azure-messaging-eventhubs:5.1.0-beta.1
  parent: com.azure.messaging.eventhubs.EventHubAsyncClient
  langs:
  - java
  name: EventHubAsyncClient(EventHubConnectionProcessor connectionProcessor, TracerProvider tracerProvider, MessageSerializer messageSerializer, Scheduler scheduler, boolean isSharedConnection, Runnable onClientClose)
  nameWithType: EventHubAsyncClient.EventHubAsyncClient(EventHubConnectionProcessor connectionProcessor, TracerProvider tracerProvider, MessageSerializer messageSerializer, Scheduler scheduler, boolean isSharedConnection, Runnable onClientClose)
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.EventHubAsyncClient(EventHubConnectionProcessor connectionProcessor, TracerProvider tracerProvider, MessageSerializer messageSerializer, Scheduler scheduler, boolean isSharedConnection, Runnable onClientClose)
  overload: com.azure.messaging.eventhubs.EventHubAsyncClient.EventHubAsyncClient*
  type: Constructor
  package: com.azure.messaging.eventhubs
  syntax:
    content: " EventHubAsyncClient(EventHubConnectionProcessor connectionProcessor, TracerProvider tracerProvider, MessageSerializer messageSerializer, Scheduler scheduler, boolean isSharedConnection, Runnable onClientClose)"
    parameters:
    - id: connectionProcessor
      type: com.azure.messaging.eventhubs.implementation.EventHubConnectionProcessor
    - id: tracerProvider
      type: com.azure.core.amqp.implementation.TracerProvider
    - id: messageSerializer
      type: com.azure.core.amqp.implementation.MessageSerializer
    - id: scheduler
      type: reactor.core.scheduler.Scheduler
    - id: isSharedConnection
      type: boolean
    - id: onClientClose
      type: java.lang.Runnable
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.close()
  id: close()
  artifact: com.azure:azure-messaging-eventhubs:5.1.0-beta.1
  parent: com.azure.messaging.eventhubs.EventHubAsyncClient
  langs:
  - java
  name: close()
  nameWithType: EventHubAsyncClient.close()
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.close()
  overload: com.azure.messaging.eventhubs.EventHubAsyncClient.close*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Closes and disposes of connection to service. Any <xref uid="com.azure.messaging.eventhubs.EventHubConsumerAsyncClient" data-throw-if-not-resolved="false">EventHubConsumers</xref> and <xref uid="com.azure.messaging.eventhubs.EventHubProducerAsyncClient" data-throw-if-not-resolved="false">EventHubProducers</xref> created with this instance will have their connections closed.
  syntax:
    content: public void close()
references:
- uid: com.azure.messaging.eventhubs.implementation.EventHubConnectionProcessor
  name: EventHubConnectionProcessor
  nameWithType: EventHubConnectionProcessor
  fullName: com.azure.messaging.eventhubs.implementation.EventHubConnectionProcessor
- uid: com.azure.core.amqp.implementation.TracerProvider
  spec.java:
  - uid: com.azure.core.amqp.implementation.TracerProvider
    name: TracerProvider
    fullName: com.azure.core.amqp.implementation.TracerProvider
- uid: com.azure.core.amqp.implementation.MessageSerializer
  spec.java:
  - uid: com.azure.core.amqp.implementation.MessageSerializer
    name: MessageSerializer
    fullName: com.azure.core.amqp.implementation.MessageSerializer
- uid: reactor.core.scheduler.Scheduler
  spec.java:
  - uid: reactor.core.scheduler.Scheduler
    name: Scheduler
    fullName: reactor.core.scheduler.Scheduler
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.lang.Runnable
  spec.java:
  - uid: java.lang.Runnable
    name: Runnable
    fullName: java.lang.Runnable
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.EventHubAsyncClient*
  name: EventHubAsyncClient
  nameWithType: EventHubAsyncClient.EventHubAsyncClient
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.EventHubAsyncClient
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventHubAsyncClient.close*
  name: close
  nameWithType: EventHubAsyncClient.close
  fullName: com.azure.messaging.eventhubs.EventHubAsyncClient.close
  package: com.azure.messaging.eventhubs
- uid: java.io.Closeable
  name: Closeable
  nameWithType: Closeable
  fullName: java.io.Closeable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
