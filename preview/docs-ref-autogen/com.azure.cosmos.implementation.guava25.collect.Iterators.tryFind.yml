### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Iterators.tryFind*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Iterators.<T>tryFind"
name: "<T>tryFind"
nameWithType: "Iterators.<T>tryFind"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Iterators.<T>tryFind(java.util.Iterator<T>,com.azure.cosmos.implementation.guava25.base.Predicate<? super T>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Iterators.<T>tryFind(Iterator<T> iterator, Predicate<? super T> predicate)"
  name: "<T>tryFind(Iterator<T> iterator, Predicate<? super T> predicate)"
  nameWithType: "Iterators.<T>tryFind(Iterator<T> iterator, Predicate<? super T> predicate)"
  summary: "Returns an <xref uid=\"com.azure.cosmos.implementation.guava25.base.Optional\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Optional\"></xref> containing the first element in `iterator` that satisfies the given predicate, if such an element exists. If no such element is found, an empty <xref uid=\"com.azure.cosmos.implementation.guava25.base.Optional\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Optional\"></xref> will be returned from this method and the iterator will be left exhausted: its `hasNext()` method will return `false`.\n\n**Warning:** avoid using a `predicate` that matches `null`. If `null` is matched in `iterator`, a NullPointerException will be thrown."
  parameters:
  - name: "iterator"
    type: "<xref href=\"java.util.Iterator?alt=java.util.Iterator&text=Iterator\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "predicate"
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Predicate?alt=com.azure.cosmos.implementation.guava25.base.Predicate&text=Predicate\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"? super T?alt=? super T&text=? super T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Optional<T> <T>tryFind(Iterator<T> iterator, Predicate<? super T> predicate)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Optional?alt=com.azure.cosmos.implementation.guava25.base.Optional&text=Optional\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
