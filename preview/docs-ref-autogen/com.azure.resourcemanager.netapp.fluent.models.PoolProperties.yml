### YamlMime:JavaType
uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties"
fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties"
name: "PoolProperties"
nameWithType: "PoolProperties"
summary: "Pool properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PoolProperties"
constructors:
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.PoolProperties()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.PoolProperties()"
  name: "PoolProperties()"
  nameWithType: "PoolProperties.PoolProperties()"
  syntax: "public PoolProperties()"
methods:
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.coolAccess()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.coolAccess()"
  name: "coolAccess()"
  nameWithType: "PoolProperties.coolAccess()"
  summary: "Get the cool<wbr>Access property: If enabled (true) the pool can contain cool Access enabled volumes."
  syntax: "public Boolean coolAccess()"
  desc: "Get the coolAccess property: If enabled (true) the pool can contain cool Access enabled volumes."
  returns:
    description: "the coolAccess value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.encryptionType()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.encryptionType()"
  name: "encryptionType()"
  nameWithType: "PoolProperties.encryptionType()"
  summary: "Get the encryption<wbr>Type property: encryption<wbr>Type Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it."
  syntax: "public EncryptionType encryptionType()"
  desc: "Get the encryptionType property: encryptionType Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool."
  returns:
    description: "the encryptionType value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.EncryptionType?alt=com.azure.resourcemanager.netapp.models.EncryptionType&text=EncryptionType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.poolId()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.poolId()"
  name: "poolId()"
  nameWithType: "PoolProperties.poolId()"
  summary: "Get the pool<wbr>Id property: pool<wbr>Id UUID v4 used to identify the Pool."
  syntax: "public String poolId()"
  desc: "Get the poolId property: poolId UUID v4 used to identify the Pool."
  returns:
    description: "the poolId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "PoolProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Azure lifecycle management."
  syntax: "public String provisioningState()"
  desc: "Get the provisioningState property: Azure lifecycle management."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.qosType()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.qosType()"
  name: "qosType()"
  nameWithType: "PoolProperties.qosType()"
  summary: "Get the qos<wbr>Type property: The qos type of the pool."
  syntax: "public QosType qosType()"
  desc: "Get the qosType property: The qos type of the pool."
  returns:
    description: "the qosType value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.QosType?alt=com.azure.resourcemanager.netapp.models.QosType&text=QosType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.serviceLevel()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.serviceLevel()"
  name: "serviceLevel()"
  nameWithType: "PoolProperties.serviceLevel()"
  summary: "Get the service<wbr>Level property: service<wbr>Level The service level of the file system."
  syntax: "public ServiceLevel serviceLevel()"
  desc: "Get the serviceLevel property: serviceLevel The service level of the file system."
  returns:
    description: "the serviceLevel value."
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ServiceLevel?alt=com.azure.resourcemanager.netapp.models.ServiceLevel&text=ServiceLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.size()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.size()"
  name: "size()"
  nameWithType: "PoolProperties.size()"
  summary: "Get the size property: size Provisioned size of the pool (in bytes)."
  syntax: "public long size()"
  desc: "Get the size property: size Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiply of 4398046511104)."
  returns:
    description: "the size value."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.totalThroughputMibps()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.totalThroughputMibps()"
  name: "totalThroughputMibps()"
  nameWithType: "PoolProperties.totalThroughputMibps()"
  summary: "Get the total<wbr>Throughput<wbr>Mibps property: Total throughput of pool in MiB/s."
  syntax: "public Float totalThroughputMibps()"
  desc: "Get the totalThroughputMibps property: Total throughput of pool in MiB/s."
  returns:
    description: "the totalThroughputMibps value."
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.utilizedThroughputMibps()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.utilizedThroughputMibps()"
  name: "utilizedThroughputMibps()"
  nameWithType: "PoolProperties.utilizedThroughputMibps()"
  summary: "Get the utilized<wbr>Throughput<wbr>Mibps property: Utilized throughput of pool in MiB/s."
  syntax: "public Float utilizedThroughputMibps()"
  desc: "Get the utilizedThroughputMibps property: Utilized throughput of pool in MiB/s."
  returns:
    description: "the utilizedThroughputMibps value."
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.validate()"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.validate()"
  name: "validate()"
  nameWithType: "PoolProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.withCoolAccess(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.withCoolAccess(Boolean coolAccess)"
  name: "withCoolAccess(Boolean coolAccess)"
  nameWithType: "PoolProperties.withCoolAccess(Boolean coolAccess)"
  summary: "Set the cool<wbr>Access property: If enabled (true) the pool can contain cool Access enabled volumes."
  parameters:
  - description: "the coolAccess value to set."
    name: "coolAccess"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withCoolAccess(Boolean coolAccess)"
  desc: "Set the coolAccess property: If enabled (true) the pool can contain cool Access enabled volumes."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.PoolProperties?alt=com.azure.resourcemanager.netapp.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.withEncryptionType(com.azure.resourcemanager.netapp.models.EncryptionType)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.withEncryptionType(EncryptionType encryptionType)"
  name: "withEncryptionType(EncryptionType encryptionType)"
  nameWithType: "PoolProperties.withEncryptionType(EncryptionType encryptionType)"
  summary: "Set the encryption<wbr>Type property: encryption<wbr>Type Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it."
  parameters:
  - description: "the encryptionType value to set."
    name: "encryptionType"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.EncryptionType?alt=com.azure.resourcemanager.netapp.models.EncryptionType&text=EncryptionType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withEncryptionType(EncryptionType encryptionType)"
  desc: "Set the encryptionType property: encryptionType Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.PoolProperties?alt=com.azure.resourcemanager.netapp.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.withQosType(com.azure.resourcemanager.netapp.models.QosType)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.withQosType(QosType qosType)"
  name: "withQosType(QosType qosType)"
  nameWithType: "PoolProperties.withQosType(QosType qosType)"
  summary: "Set the qos<wbr>Type property: The qos type of the pool."
  parameters:
  - description: "the qosType value to set."
    name: "qosType"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.QosType?alt=com.azure.resourcemanager.netapp.models.QosType&text=QosType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withQosType(QosType qosType)"
  desc: "Set the qosType property: The qos type of the pool."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.PoolProperties?alt=com.azure.resourcemanager.netapp.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.withServiceLevel(com.azure.resourcemanager.netapp.models.ServiceLevel)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.withServiceLevel(ServiceLevel serviceLevel)"
  name: "withServiceLevel(ServiceLevel serviceLevel)"
  nameWithType: "PoolProperties.withServiceLevel(ServiceLevel serviceLevel)"
  summary: "Set the service<wbr>Level property: service<wbr>Level The service level of the file system."
  parameters:
  - description: "the serviceLevel value to set."
    name: "serviceLevel"
    type: "<xref href=\"com.azure.resourcemanager.netapp.models.ServiceLevel?alt=com.azure.resourcemanager.netapp.models.ServiceLevel&text=ServiceLevel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withServiceLevel(ServiceLevel serviceLevel)"
  desc: "Set the serviceLevel property: serviceLevel The service level of the file system."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.PoolProperties?alt=com.azure.resourcemanager.netapp.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.withSize(long)"
  fullName: "com.azure.resourcemanager.netapp.fluent.models.PoolProperties.withSize(long size)"
  name: "withSize(long size)"
  nameWithType: "PoolProperties.withSize(long size)"
  summary: "Set the size property: size Provisioned size of the pool (in bytes)."
  parameters:
  - description: "the size value to set."
    name: "size"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PoolProperties withSize(long size)"
  desc: "Set the size property: size Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiply of 4398046511104)."
  returns:
    description: "the PoolProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.netapp.fluent.models.PoolProperties?alt=com.azure.resourcemanager.netapp.fluent.models.PoolProperties&text=PoolProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Pool properties."
metadata: {}
package: "com.azure.resourcemanager.netapp.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-netapp:1.0.0-beta.10
