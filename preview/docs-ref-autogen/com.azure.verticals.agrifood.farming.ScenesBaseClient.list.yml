### YamlMime:JavaMember
uid: "com.azure.verticals.agrifood.farming.ScenesBaseClient.list*"
fullName: "com.azure.verticals.agrifood.farming.ScenesBaseClient.list"
name: "list"
nameWithType: "ScenesBaseClient.list"
members:
- uid: "com.azure.verticals.agrifood.farming.ScenesBaseClient.list(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.verticals.agrifood.farming.ScenesBaseClient.list(String provider, String farmerId, String boundaryId)"
  name: "list(String provider, String farmerId, String boundaryId)"
  nameWithType: "ScenesBaseClient.list(String provider, String farmerId, String boundaryId)"
  summary: "Returns a paginated list of scene resources."
  parameters:
  - description: "Provider name of scene data."
    name: "provider"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "FarmerId."
    name: "farmerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "BoundaryId."
    name: "boundaryId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest list(String provider, String farmerId, String boundaryId)"
  desc: "Returns a paginated list of scene resources.\n\n**Optional Query Parameters**\n\n    | ------------------------------ | -------------- | --------------------------------------------------------------------------------------------- |\n    | Name                           | Type           | Description                                                                                   |\n    | source                         | String         | Source name of scene data, default value Sentinel\\_2\\_L2A (Sentinel 2 L2A).                   |\n    | startDateTime                  | OffsetDateTime | Scene start UTC datetime (inclusive), sample format: yyyy-MM-ddThh:mm:ssZ.                    |\n    | endDateTime                    | OffsetDateTime | Scene end UTC datetime (inclusive), sample format: yyyy-MM-dThh:mm:ssZ.                       |\n    | maxCloudCoveragePercentage     | Double         | Filter scenes with cloud coverage percentage less than max value. Range \\[0 to 100.0\\].       |\n    | maxDarkPixelCoveragePercentage | Double         | Filter scenes with dark pixel coverage percentage less than max value. Range \\[0 to 100.0\\].  |\n    | imageNames                     | List<String>   | List of image names to be filtered.                                                           |\n    | imageResolutions               | List<Double>   | List of image resolutions in meters to be filtered.                                           |\n    | imageFormats                   | List<String>   | List of image formats to be filtered.                                                         |\n    | maxPageSize                    | Integer        | Maximum number of items needed (inclusive). Minimum = 10, Maximum = 1000, Default value = 50. |\n    | skipToken                      | String         | Skip token for getting next set of results.                                                   |\n\n**Response Body Schema**\n\n```java\n{\n     value: [\n         {\n             sceneDateTime: OffsetDateTime\n             provider: String\n             source: String\n             imageFiles: [\n                 {\n                     fileLink: String\n                     name: String\n                     imageFormat: String(TIF)\n                     resolution: Double\n                 }\n             ]\n             imageFormat: String(TIF)\n             cloudCoverPercentage: Double\n             darkPixelPercentage: Double\n             ndviMedianValue: Double\n             boundaryId: String\n             farmerId: String\n             id: String\n             eTag: String\n         }\n     ]\n     skipToken: String\n     nextLink: String\n }\n```"
  returns:
    description: "a DynamicRequest where customizations can be made before sent to the service."
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.verticals.agrifood.farming"
artifact: com.azure:azure-verticals-agrifood-farming:1.0.0-beta.2
