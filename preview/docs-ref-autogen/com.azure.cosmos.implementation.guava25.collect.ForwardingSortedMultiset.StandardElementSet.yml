### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.StandardElementSet"
fullName: "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset<E>.StandardElementSet"
name: "ForwardingSortedMultiset<E>.StandardElementSet"
nameWithType: "ForwardingSortedMultiset<E>.StandardElementSet"
summary: "A sensible implementation of <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.elementSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#elementSet\"></xref> in terms of the following methods: <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.clear\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#clear\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.comparator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#comparator\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.contains\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#contains\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.containsAll\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#containsAll\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.count\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#count\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.firstEntry\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#firstEntry\"></xref> <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.headMultiset\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#headMultiset\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.isEmpty\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#isEmpty\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.lastEntry\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#lastEntry\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.subMultiset\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#subMultiset\"></xref>, <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.tailMultiset\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#tailMultiset\"></xref>, the `size()` and `iterator()` methods of <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.entrySet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#entrySet\"></xref>, and <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.remove*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#remove(Object, int)\"></xref>. In many situations, you may wish to override <xref uid=\"com.azure.cosmos.implementation.guava25.collect.SortedMultiset.elementSet\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SortedMultiset#elementSet\"></xref> to forward to this implementation or a subclass thereof."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractCollection\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.util.AbstractSet\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.SortedMultisets.ElementSet\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.collect.SortedMultisets.NavigableElementSet\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.clear()"
- "com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.contains(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.containsAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.isEmpty()"
- "com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.remove(java.lang.Object)"
- "com.azure.cosmos.implementation.guava25.collect.Multisets.ElementSet.size()"
- "com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.removeAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.Sets.ImprovedAbstractSet.retainAll(java.util.Collection<?>)"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.ElementSet.comparator()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.ElementSet.first()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.ElementSet.headSet(E)"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.ElementSet.iterator()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.ElementSet.last()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.ElementSet.subSet(E,E)"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.ElementSet.tailSet(E)"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.NavigableElementSet.ceiling(E)"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.NavigableElementSet.descendingIterator()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.NavigableElementSet.descendingSet()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.NavigableElementSet.floor(E)"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.NavigableElementSet.headSet(E,boolean)"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.NavigableElementSet.higher(E)"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.NavigableElementSet.lower(E)"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.NavigableElementSet.pollFirst()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.NavigableElementSet.pollLast()"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.NavigableElementSet.subSet(E,boolean,E,boolean)"
- "com.azure.cosmos.implementation.guava25.collect.SortedMultisets.NavigableElementSet.tailSet(E,boolean)"
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "java.util.AbstractCollection.<T>toArray(T[])"
- "java.util.AbstractCollection.add(E)"
- "java.util.AbstractCollection.addAll(java.util.Collection<? extends E>)"
- "java.util.AbstractCollection.toArray()"
- "java.util.AbstractCollection.toString()"
- "java.util.AbstractSet.equals(java.lang.Object)"
- "java.util.AbstractSet.hashCode()"
syntax: "protected class ForwardingSortedMultiset<E>.StandardElementSet extends SortedMultisets.NavigableElementSet<E>"
constructors:
- "com.azure.cosmos.implementation.guava25.collect.ForwardingSortedMultiset.StandardElementSet.StandardElementSet()"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
