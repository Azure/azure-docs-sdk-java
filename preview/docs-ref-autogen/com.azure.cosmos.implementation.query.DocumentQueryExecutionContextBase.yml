### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  id: DocumentQueryExecutionContextBase
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query
  children:
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.DocumentQueryExecutionContextBase(com.azure.cosmos.implementation.query.IDocumentQueryClient,com.azure.cosmos.implementation.ResourceType,java.lang.Class<T>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,boolean,java.util.UUID)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.client
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.correlatedActivityId
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.cosmosQueryRequestOptions
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createCommonHeadersAsync(com.azure.cosmos.models.CosmosQueryRequestOptions)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createDocumentServiceRequest(java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.implementation.routing.PartitionKeyInternal)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createDocumentServiceRequest(java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.implementation.routing.PartitionKeyInternal,com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeAsync()
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeQueryRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeReadFeedRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.getFeedOptions(java.lang.String,java.lang.Integer)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.getFeedResponse(reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceResponse>)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.populatePartitionKeyRangeInfo(com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String)
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.query
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.resourceLink
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.resourceType
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.resourceTypeEnum
  - com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.shouldExecuteQueryRequest
  langs:
  - java
  name: DocumentQueryExecutionContextBase<T>
  nameWithType: DocumentQueryExecutionContextBase<T>
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>
  type: Class
  package: com.azure.cosmos.implementation.query
  summary: While this class is public, but it is not part of our published public APIs. This is meant to be internally used only by our sdk.
  syntax:
    content: public abstract class DocumentQueryExecutionContextBase<T> implements IDocumentQueryExecutionContext<T>
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext<T>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.DocumentQueryExecutionContextBase(com.azure.cosmos.implementation.query.IDocumentQueryClient,com.azure.cosmos.implementation.ResourceType,java.lang.Class<T>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,boolean,java.util.UUID)
  id: DocumentQueryExecutionContextBase(com.azure.cosmos.implementation.query.IDocumentQueryClient,com.azure.cosmos.implementation.ResourceType,java.lang.Class<T>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.String,boolean,java.util.UUID)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: DocumentQueryExecutionContextBase(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean getLazyFeedResponse, UUID correlatedActivityId)
  nameWithType: DocumentQueryExecutionContextBase<T>.DocumentQueryExecutionContextBase(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean getLazyFeedResponse, UUID correlatedActivityId)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.DocumentQueryExecutionContextBase(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean getLazyFeedResponse, UUID correlatedActivityId)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.DocumentQueryExecutionContextBase*
  type: Constructor
  package: com.azure.cosmos.implementation.query
  syntax:
    content: protected DocumentQueryExecutionContextBase(IDocumentQueryClient client, ResourceType resourceTypeEnum, Class<T> resourceType, SqlQuerySpec query, CosmosQueryRequestOptions cosmosQueryRequestOptions, String resourceLink, boolean getLazyFeedResponse, UUID correlatedActivityId)
    parameters:
    - id: client
      type: com.azure.cosmos.implementation.query.IDocumentQueryClient
    - id: resourceTypeEnum
      type: com.azure.cosmos.implementation.ResourceType
    - id: resourceType
      type: java.lang.Class<T>
    - id: query
      type: com.azure.cosmos.models.SqlQuerySpec
    - id: cosmosQueryRequestOptions
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
    - id: resourceLink
      type: java.lang.String
    - id: getLazyFeedResponse
      type: boolean
    - id: correlatedActivityId
      type: java.util.UUID
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.client
  id: client
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: client
  nameWithType: DocumentQueryExecutionContextBase<T>.client
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.client
  type: Field
  package: com.azure.cosmos.implementation.query
  syntax:
    content: protected IDocumentQueryClient client
    return:
      type: com.azure.cosmos.implementation.query.IDocumentQueryClient
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.correlatedActivityId
  id: correlatedActivityId
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: correlatedActivityId
  nameWithType: DocumentQueryExecutionContextBase<T>.correlatedActivityId
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.correlatedActivityId
  type: Field
  package: com.azure.cosmos.implementation.query
  syntax:
    content: protected UUID correlatedActivityId
    return:
      type: java.util.UUID
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.cosmosQueryRequestOptions
  id: cosmosQueryRequestOptions
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: cosmosQueryRequestOptions
  nameWithType: DocumentQueryExecutionContextBase<T>.cosmosQueryRequestOptions
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.cosmosQueryRequestOptions
  type: Field
  package: com.azure.cosmos.implementation.query
  syntax:
    content: protected CosmosQueryRequestOptions cosmosQueryRequestOptions
    return:
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createCommonHeadersAsync(com.azure.cosmos.models.CosmosQueryRequestOptions)
  id: createCommonHeadersAsync(com.azure.cosmos.models.CosmosQueryRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: createCommonHeadersAsync(CosmosQueryRequestOptions cosmosQueryRequestOptions)
  nameWithType: DocumentQueryExecutionContextBase<T>.createCommonHeadersAsync(CosmosQueryRequestOptions cosmosQueryRequestOptions)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.createCommonHeadersAsync(CosmosQueryRequestOptions cosmosQueryRequestOptions)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createCommonHeadersAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public Map<String,String> createCommonHeadersAsync(CosmosQueryRequestOptions cosmosQueryRequestOptions)
    parameters:
    - id: cosmosQueryRequestOptions
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createDocumentServiceRequest(java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.implementation.routing.PartitionKeyInternal)
  id: createDocumentServiceRequest(java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.implementation.routing.PartitionKeyInternal)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: createDocumentServiceRequest(Map<String,String> requestHeaders, SqlQuerySpec querySpec, PartitionKeyInternal partitionKey)
  nameWithType: DocumentQueryExecutionContextBase<T>.createDocumentServiceRequest(Map<String,String> requestHeaders, SqlQuerySpec querySpec, PartitionKeyInternal partitionKey)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.createDocumentServiceRequest(Map<String,String> requestHeaders, SqlQuerySpec querySpec, PartitionKeyInternal partitionKey)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createDocumentServiceRequest*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public RxDocumentServiceRequest createDocumentServiceRequest(Map<String,String> requestHeaders, SqlQuerySpec querySpec, PartitionKeyInternal partitionKey)
    parameters:
    - id: requestHeaders
      type: java.util.Map<java.lang.String,java.lang.String>
    - id: querySpec
      type: com.azure.cosmos.models.SqlQuerySpec
    - id: partitionKey
      type: com.azure.cosmos.implementation.routing.PartitionKeyInternal
    return:
      type: com.azure.cosmos.implementation.RxDocumentServiceRequest
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createDocumentServiceRequest(java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.implementation.routing.PartitionKeyInternal,com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String)
  id: createDocumentServiceRequest(java.util.Map<java.lang.String,java.lang.String>,com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.implementation.routing.PartitionKeyInternal,com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: createDocumentServiceRequest(Map<String,String> requestHeaders, SqlQuerySpec querySpec, PartitionKeyInternal partitionKeyInternal, PartitionKeyRange targetRange, String collectionRid)
  nameWithType: DocumentQueryExecutionContextBase<T>.createDocumentServiceRequest(Map<String,String> requestHeaders, SqlQuerySpec querySpec, PartitionKeyInternal partitionKeyInternal, PartitionKeyRange targetRange, String collectionRid)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.createDocumentServiceRequest(Map<String,String> requestHeaders, SqlQuerySpec querySpec, PartitionKeyInternal partitionKeyInternal, PartitionKeyRange targetRange, String collectionRid)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createDocumentServiceRequest*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: protected RxDocumentServiceRequest createDocumentServiceRequest(Map<String,String> requestHeaders, SqlQuerySpec querySpec, PartitionKeyInternal partitionKeyInternal, PartitionKeyRange targetRange, String collectionRid)
    parameters:
    - id: requestHeaders
      type: java.util.Map<java.lang.String,java.lang.String>
    - id: querySpec
      type: com.azure.cosmos.models.SqlQuerySpec
    - id: partitionKeyInternal
      type: com.azure.cosmos.implementation.routing.PartitionKeyInternal
    - id: targetRange
      type: com.azure.cosmos.implementation.PartitionKeyRange
    - id: collectionRid
      type: java.lang.String
    return:
      type: com.azure.cosmos.implementation.RxDocumentServiceRequest
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeAsync()
  id: executeAsync()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: executeAsync()
  nameWithType: DocumentQueryExecutionContextBase<T>.executeAsync()
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.executeAsync()
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public abstract Flux<FeedResponse<T>> executeAsync()
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeQueryRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  id: executeQueryRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: executeQueryRequestAsync(RxDocumentServiceRequest request)
  nameWithType: DocumentQueryExecutionContextBase<T>.executeQueryRequestAsync(RxDocumentServiceRequest request)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.executeQueryRequestAsync(RxDocumentServiceRequest request)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeQueryRequestAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public Mono<FeedResponse<T>> executeQueryRequestAsync(RxDocumentServiceRequest request)
    parameters:
    - id: request
      type: com.azure.cosmos.implementation.RxDocumentServiceRequest
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeReadFeedRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  id: executeReadFeedRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: executeReadFeedRequestAsync(RxDocumentServiceRequest request)
  nameWithType: DocumentQueryExecutionContextBase<T>.executeReadFeedRequestAsync(RxDocumentServiceRequest request)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.executeReadFeedRequestAsync(RxDocumentServiceRequest request)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeReadFeedRequestAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public Mono<FeedResponse<T>> executeReadFeedRequestAsync(RxDocumentServiceRequest request)
    parameters:
    - id: request
      type: com.azure.cosmos.implementation.RxDocumentServiceRequest
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  id: executeRequestAsync(com.azure.cosmos.implementation.RxDocumentServiceRequest)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: executeRequestAsync(RxDocumentServiceRequest request)
  nameWithType: DocumentQueryExecutionContextBase<T>.executeRequestAsync(RxDocumentServiceRequest request)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.executeRequestAsync(RxDocumentServiceRequest request)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeRequestAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public Mono<FeedResponse<T>> executeRequestAsync(RxDocumentServiceRequest request)
    parameters:
    - id: request
      type: com.azure.cosmos.implementation.RxDocumentServiceRequest
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.getFeedOptions(java.lang.String,java.lang.Integer)
  id: getFeedOptions(java.lang.String,java.lang.Integer)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: getFeedOptions(String continuationToken, Integer maxPageSize)
  nameWithType: DocumentQueryExecutionContextBase<T>.getFeedOptions(String continuationToken, Integer maxPageSize)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.getFeedOptions(String continuationToken, Integer maxPageSize)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.getFeedOptions*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public CosmosQueryRequestOptions getFeedOptions(String continuationToken, Integer maxPageSize)
    parameters:
    - id: continuationToken
      type: java.lang.String
    - id: maxPageSize
      type: java.lang.Integer
    return:
      type: com.azure.cosmos.models.CosmosQueryRequestOptions
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.getFeedResponse(reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceResponse>)
  id: getFeedResponse(reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceResponse>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: getFeedResponse(Mono<RxDocumentServiceResponse> response)
  nameWithType: DocumentQueryExecutionContextBase<T>.getFeedResponse(Mono<RxDocumentServiceResponse> response)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.getFeedResponse(Mono<RxDocumentServiceResponse> response)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.getFeedResponse*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: protected Mono<FeedResponse<T>> getFeedResponse(Mono<RxDocumentServiceResponse> response)
    parameters:
    - id: response
      type: reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceResponse>
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.populatePartitionKeyRangeInfo(com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String)
  id: populatePartitionKeyRangeInfo(com.azure.cosmos.implementation.RxDocumentServiceRequest,com.azure.cosmos.implementation.PartitionKeyRange,java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: populatePartitionKeyRangeInfo(RxDocumentServiceRequest request, PartitionKeyRange range, String collectionRid)
  nameWithType: DocumentQueryExecutionContextBase<T>.populatePartitionKeyRangeInfo(RxDocumentServiceRequest request, PartitionKeyRange range, String collectionRid)
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.populatePartitionKeyRangeInfo(RxDocumentServiceRequest request, PartitionKeyRange range, String collectionRid)
  overload: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.populatePartitionKeyRangeInfo*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public void populatePartitionKeyRangeInfo(RxDocumentServiceRequest request, PartitionKeyRange range, String collectionRid)
    parameters:
    - id: request
      type: com.azure.cosmos.implementation.RxDocumentServiceRequest
    - id: range
      type: com.azure.cosmos.implementation.PartitionKeyRange
    - id: collectionRid
      type: java.lang.String
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.query
  id: query
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: query
  nameWithType: DocumentQueryExecutionContextBase<T>.query
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.query
  type: Field
  package: com.azure.cosmos.implementation.query
  syntax:
    content: protected SqlQuerySpec query
    return:
      type: com.azure.cosmos.models.SqlQuerySpec
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.resourceLink
  id: resourceLink
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: resourceLink
  nameWithType: DocumentQueryExecutionContextBase<T>.resourceLink
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.resourceLink
  type: Field
  package: com.azure.cosmos.implementation.query
  syntax:
    content: protected String resourceLink
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.resourceType
  id: resourceType
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: resourceType
  nameWithType: DocumentQueryExecutionContextBase<T>.resourceType
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.resourceType
  type: Field
  package: com.azure.cosmos.implementation.query
  syntax:
    content: protected Class<T> resourceType
    return:
      type: java.lang.Class<T>
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.resourceTypeEnum
  id: resourceTypeEnum
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: resourceTypeEnum
  nameWithType: DocumentQueryExecutionContextBase<T>.resourceTypeEnum
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.resourceTypeEnum
  type: Field
  package: com.azure.cosmos.implementation.query
  syntax:
    content: protected ResourceType resourceTypeEnum
    return:
      type: com.azure.cosmos.implementation.ResourceType
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.shouldExecuteQueryRequest
  id: shouldExecuteQueryRequest
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase
  langs:
  - java
  name: shouldExecuteQueryRequest
  nameWithType: DocumentQueryExecutionContextBase<T>.shouldExecuteQueryRequest
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.shouldExecuteQueryRequest
  type: Field
  package: com.azure.cosmos.implementation.query
  syntax:
    content: protected boolean shouldExecuteQueryRequest
    return:
      type: boolean
references:
- uid: com.azure.cosmos.implementation.query.IDocumentQueryClient
  name: IDocumentQueryClient
  nameWithType: IDocumentQueryClient
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryClient
- uid: com.azure.cosmos.implementation.ResourceType
  name: ResourceType
  nameWithType: ResourceType
  fullName: com.azure.cosmos.implementation.ResourceType
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.models.SqlQuerySpec
  name: SqlQuerySpec
  nameWithType: SqlQuerySpec
  fullName: com.azure.cosmos.models.SqlQuerySpec
- uid: com.azure.cosmos.models.CosmosQueryRequestOptions
  name: CosmosQueryRequestOptions
  nameWithType: CosmosQueryRequestOptions
  fullName: com.azure.cosmos.models.CosmosQueryRequestOptions
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.util.UUID
  spec.java:
  - uid: java.util.UUID
    name: UUID
    fullName: java.util.UUID
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.DocumentQueryExecutionContextBase*
  name: DocumentQueryExecutionContextBase
  nameWithType: DocumentQueryExecutionContextBase<T>.DocumentQueryExecutionContextBase
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.DocumentQueryExecutionContextBase
  package: com.azure.cosmos.implementation.query
- uid: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeAsync*
  name: executeAsync
  nameWithType: DocumentQueryExecutionContextBase<T>.executeAsync
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.executeAsync
  package: com.azure.cosmos.implementation.query
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.routing.PartitionKeyInternal
  name: PartitionKeyInternal
  nameWithType: PartitionKeyInternal
  fullName: com.azure.cosmos.implementation.routing.PartitionKeyInternal
- uid: com.azure.cosmos.implementation.RxDocumentServiceRequest
  name: RxDocumentServiceRequest
  nameWithType: RxDocumentServiceRequest
  fullName: com.azure.cosmos.implementation.RxDocumentServiceRequest
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createDocumentServiceRequest*
  name: createDocumentServiceRequest
  nameWithType: DocumentQueryExecutionContextBase<T>.createDocumentServiceRequest
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.createDocumentServiceRequest
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.PartitionKeyRange
  name: PartitionKeyRange
  nameWithType: PartitionKeyRange
  fullName: com.azure.cosmos.implementation.PartitionKeyRange
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.FeedResponse<T>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeRequestAsync*
  name: executeRequestAsync
  nameWithType: DocumentQueryExecutionContextBase<T>.executeRequestAsync
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.executeRequestAsync
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeQueryRequestAsync*
  name: executeQueryRequestAsync
  nameWithType: DocumentQueryExecutionContextBase<T>.executeQueryRequestAsync
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.executeQueryRequestAsync
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.executeReadFeedRequestAsync*
  name: executeReadFeedRequestAsync
  nameWithType: DocumentQueryExecutionContextBase<T>.executeReadFeedRequestAsync
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.executeReadFeedRequestAsync
  package: com.azure.cosmos.implementation.query
- uid: reactor.core.publisher.Mono<com.azure.cosmos.implementation.RxDocumentServiceResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.RxDocumentServiceResponse
    name: RxDocumentServiceResponse
    fullName: com.azure.cosmos.implementation.RxDocumentServiceResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.getFeedResponse*
  name: getFeedResponse
  nameWithType: DocumentQueryExecutionContextBase<T>.getFeedResponse
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.getFeedResponse
  package: com.azure.cosmos.implementation.query
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.getFeedOptions*
  name: getFeedOptions
  nameWithType: DocumentQueryExecutionContextBase<T>.getFeedOptions
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.getFeedOptions
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.createCommonHeadersAsync*
  name: createCommonHeadersAsync
  nameWithType: DocumentQueryExecutionContextBase<T>.createCommonHeadersAsync
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.createCommonHeadersAsync
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase.populatePartitionKeyRangeInfo*
  name: populatePartitionKeyRangeInfo
  nameWithType: DocumentQueryExecutionContextBase<T>.populatePartitionKeyRangeInfo
  fullName: com.azure.cosmos.implementation.query.DocumentQueryExecutionContextBase<T>.populatePartitionKeyRangeInfo
  package: com.azure.cosmos.implementation.query
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext<T>
  name: IDocumentQueryExecutionContext<T>
  nameWithType: IDocumentQueryExecutionContext<T>
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext<T>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: com.azure.cosmos.models.FeedResponse
  name: FeedResponse
  nameWithType: FeedResponse
  fullName: com.azure.cosmos.models.FeedResponse
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.cosmos.implementation.RxDocumentServiceResponse
  name: RxDocumentServiceResponse
  nameWithType: RxDocumentServiceResponse
  fullName: com.azure.cosmos.implementation.RxDocumentServiceResponse
- uid: com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext
  name: IDocumentQueryExecutionContext
  nameWithType: IDocumentQueryExecutionContext
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryExecutionContext
