### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDataFeedIngestionStatus*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDataFeedIngestionStatus"
name: "listDataFeedIngestionStatus"
nameWithType: "MetricsAdvisorAdministrationAsyncClient.listDataFeedIngestionStatus"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDataFeedIngestionStatus(java.lang.String,com.azure.ai.metricsadvisor.models.ListDataFeedIngestionOptions)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.listDataFeedIngestionStatus(String dataFeedId, ListDataFeedIngestionOptions options)"
  name: "listDataFeedIngestionStatus(String dataFeedId, ListDataFeedIngestionOptions options)"
  nameWithType: "MetricsAdvisorAdministrationAsyncClient.listDataFeedIngestionStatus(String dataFeedId, ListDataFeedIngestionOptions options)"
  summary: "Fetch the ingestion status of a data feed.\n\n**Code sample**\n\n```java\nfinal String dataFeedId = \"4957a2f7-a0f4-4fc0-b8d7-d866c1df0f4c\";\n final OffsetDateTime startTime = OffsetDateTime.parse(\"2020-01-01T00:00:00Z\");\n final OffsetDateTime endTime = OffsetDateTime.parse(\"2020-09-09T00:00:00Z\");\n final ListDataFeedIngestionOptions options = new ListDataFeedIngestionOptions(startTime, endTime);\n metricsAdvisorAdminAsyncClient.listDataFeedIngestionStatus(dataFeedId, options)\n     .subscribe(ingestionStatus -> {\n         System.out.printf(\"Timestamp: %s%n\", ingestionStatus.getTimestamp());\n         System.out.printf(\"Status: %s%n\", ingestionStatus.getStatus());\n         System.out.printf(\"Message: %s%n\", ingestionStatus.getMessage());\n     });\n```"
  parameters:
  - description: "The data feed id."
    name: "dataFeedId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional parameters."
    name: "options"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.ListDataFeedIngestionOptions?alt=com.azure.ai.metricsadvisor.models.ListDataFeedIngestionOptions&text=ListDataFeedIngestionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<DataFeedIngestionStatus> listDataFeedIngestionStatus(String dataFeedId, ListDataFeedIngestionOptions options)"
  returns:
    description: "The ingestion statuses."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.DataFeedIngestionStatus?alt=com.azure.ai.metricsadvisor.models.DataFeedIngestionStatus&text=DataFeedIngestionStatus\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.2
