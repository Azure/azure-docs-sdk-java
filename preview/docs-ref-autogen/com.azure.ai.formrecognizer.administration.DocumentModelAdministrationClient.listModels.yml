### YamlMime:JavaMember
uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listModels*"
fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listModels"
name: "listModels"
nameWithType: "DocumentModelAdministrationClient.listModels"
members:
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listModels()"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listModels()"
  name: "listModels()"
  nameWithType: "DocumentModelAdministrationClient.listModels()"
  summary: "List information for each model on the Form Recognizer account that were built successfully.\n\n**Code sample**\n\n```java\ndocumentModelAdministrationClient.listModels()\n     .forEach(documentModel ->\n         System.out.printf(\"Model ID: %s, Model description: %s, Created on: %s.%n\",\n             documentModel.getModelId(),\n             documentModel.getDescription(),\n             documentModel.getCreatedOn())\n     );\n```"
  syntax: "public PagedIterable<DocumentModelInfo> listModels()"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> of <xref uid=\"com.azure.ai.formrecognizer.administration.models.DocumentModelInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelInfo\"></xref> custom form model information."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentModelInfo?alt=com.azure.ai.formrecognizer.administration.models.DocumentModelInfo&text=DocumentModelInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listModels(com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.administration.DocumentModelAdministrationClient.listModels(Context context)"
  name: "listModels(Context context)"
  nameWithType: "DocumentModelAdministrationClient.listModels(Context context)"
  summary: "List information for each model on the Form Recognizer account that were built successfully with a Http response and a specified <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref>.\n\n**Code sample**\n\n```java\ndocumentModelAdministrationClient.listModels(Context.NONE)\n     .forEach(documentModel ->\n         System.out.printf(\"Model ID: %s, Model description: %s, Created on: %s.%n\",\n             documentModel.getModelId(),\n             documentModel.getDescription(),\n             documentModel.getCreatedOn())\n     );\n```"
  parameters:
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<DocumentModelInfo> listModels(Context context)"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref> of <xref uid=\"com.azure.ai.formrecognizer.administration.models.DocumentModelInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelInfo\"></xref> custom form model information."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.administration.models.DocumentModelInfo?alt=com.azure.ai.formrecognizer.administration.models.DocumentModelInfo&text=DocumentModelInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.formrecognizer.administration"
artifact: com.azure:azure-ai-formrecognizer:4.0.0-beta.4
