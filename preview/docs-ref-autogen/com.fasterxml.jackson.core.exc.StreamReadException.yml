### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.exc.StreamReadException
  id: StreamReadException
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc
  children:
  - com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException(com.fasterxml.jackson.core.JsonParser,java.lang.String)
  - com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation)
  - com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)
  - com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
  - com.fasterxml.jackson.core.exc.StreamReadException._processor
  - com.fasterxml.jackson.core.exc.StreamReadException._requestPayload
  - com.fasterxml.jackson.core.exc.StreamReadException.getMessage()
  - com.fasterxml.jackson.core.exc.StreamReadException.getProcessor()
  - com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayload()
  - com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayloadAsString()
  - com.fasterxml.jackson.core.exc.StreamReadException.withParser(com.fasterxml.jackson.core.JsonParser)
  - com.fasterxml.jackson.core.exc.StreamReadException.withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload)
  langs:
  - java
  name: StreamReadException
  nameWithType: StreamReadException
  fullName: com.fasterxml.jackson.core.exc.StreamReadException
  type: Class
  package: com.fasterxml.jackson.core.exc
  summary: Intermediate base class for all read-side streaming processing problems, including parsing and input value coercion problems.
  syntax:
    content: public abstract class StreamReadException extends JsonProcessingException
  inheritance:
  - java.lang.Object
  - java.lang.Throwable
  - java.lang.Exception
  - java.io.IOException
  - com.fasterxml.jackson.core.JsonProcessingException
  inheritedMembers:
  - com.fasterxml.jackson.core.JsonProcessingException.clearLocation()
  - com.fasterxml.jackson.core.JsonProcessingException.getLocation()
  - com.fasterxml.jackson.core.JsonProcessingException.getMessage()
  - com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()
  - com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()
  - com.fasterxml.jackson.core.JsonProcessingException.getProcessor()
  - com.fasterxml.jackson.core.JsonProcessingException.toString()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - java.lang.Throwable.addSuppressed(java.lang.Throwable)
  - java.lang.Throwable.fillInStackTrace()
  - java.lang.Throwable.getCause()
  - java.lang.Throwable.getLocalizedMessage()
  - java.lang.Throwable.getStackTrace()
  - java.lang.Throwable.getSuppressed()
  - java.lang.Throwable.initCause(java.lang.Throwable)
  - java.lang.Throwable.printStackTrace()
  - java.lang.Throwable.printStackTrace(java.io.PrintStream)
  - java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  - java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
- uid: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException(com.fasterxml.jackson.core.JsonParser,java.lang.String)
  id: StreamReadException(com.fasterxml.jackson.core.JsonParser,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc.StreamReadException
  langs:
  - java
  name: StreamReadException(JsonParser p, String msg)
  nameWithType: StreamReadException.StreamReadException(JsonParser p, String msg)
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException(JsonParser p, String msg)
  overload: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException*
  type: Constructor
  package: com.fasterxml.jackson.core.exc
  syntax:
    content: public StreamReadException(JsonParser p, String msg)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: msg
      type: java.lang.String
- uid: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation)
  id: StreamReadException(com.fasterxml.jackson.core.JsonParser,java.lang.String,com.fasterxml.jackson.core.JsonLocation)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc.StreamReadException
  langs:
  - java
  name: StreamReadException(JsonParser p, String msg, JsonLocation loc)
  nameWithType: StreamReadException.StreamReadException(JsonParser p, String msg, JsonLocation loc)
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException(JsonParser p, String msg, JsonLocation loc)
  overload: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException*
  type: Constructor
  package: com.fasterxml.jackson.core.exc
  syntax:
    content: public StreamReadException(JsonParser p, String msg, JsonLocation loc)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: msg
      type: java.lang.String
    - id: loc
      type: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)
  id: StreamReadException(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc.StreamReadException
  langs:
  - java
  name: StreamReadException(JsonParser p, String msg, Throwable root)
  nameWithType: StreamReadException.StreamReadException(JsonParser p, String msg, Throwable root)
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException(JsonParser p, String msg, Throwable root)
  overload: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException*
  type: Constructor
  package: com.fasterxml.jackson.core.exc
  syntax:
    content: public StreamReadException(JsonParser p, String msg, Throwable root)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: msg
      type: java.lang.String
    - id: root
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
  id: StreamReadException(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc.StreamReadException
  langs:
  - java
  name: StreamReadException(String msg, JsonLocation loc, Throwable rootCause)
  nameWithType: StreamReadException.StreamReadException(String msg, JsonLocation loc, Throwable rootCause)
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException(String msg, JsonLocation loc, Throwable rootCause)
  overload: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException*
  type: Constructor
  package: com.fasterxml.jackson.core.exc
  syntax:
    content: protected StreamReadException(String msg, JsonLocation loc, Throwable rootCause)
    parameters:
    - id: msg
      type: java.lang.String
    - id: loc
      type: com.fasterxml.jackson.core.JsonLocation
    - id: rootCause
      type: java.lang.Throwable
- uid: com.fasterxml.jackson.core.exc.StreamReadException._processor
  id: _processor
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc.StreamReadException
  langs:
  - java
  name: _processor
  nameWithType: StreamReadException._processor
  fullName: com.fasterxml.jackson.core.exc.StreamReadException._processor
  type: Field
  package: com.fasterxml.jackson.core.exc
  syntax:
    content: protected transient JsonParser _processor
    return:
      type: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.core.exc.StreamReadException._requestPayload
  id: _requestPayload
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc.StreamReadException
  langs:
  - java
  name: _requestPayload
  nameWithType: StreamReadException._requestPayload
  fullName: com.fasterxml.jackson.core.exc.StreamReadException._requestPayload
  type: Field
  package: com.fasterxml.jackson.core.exc
  summary: Optional payload that can be assigned to pass along for error reporting or handling purposes. Core streaming parser implementations DO NOT initialize this; it is up to using applications and frameworks to populate it.
  syntax:
    content: protected RequestPayload _requestPayload
    return:
      type: com.fasterxml.jackson.core.util.RequestPayload
- uid: com.fasterxml.jackson.core.exc.StreamReadException.getMessage()
  id: getMessage()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc.StreamReadException
  langs:
  - java
  name: getMessage()
  nameWithType: StreamReadException.getMessage()
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.getMessage()
  overload: com.fasterxml.jackson.core.exc.StreamReadException.getMessage*
  type: Method
  package: com.fasterxml.jackson.core.exc
  summary: Overriding the getMessage() to include the request body
  syntax:
    content: public String getMessage()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.exc.StreamReadException.getProcessor()
  id: getProcessor()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc.StreamReadException
  langs:
  - java
  name: getProcessor()
  nameWithType: StreamReadException.getProcessor()
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.getProcessor()
  overload: com.fasterxml.jackson.core.exc.StreamReadException.getProcessor*
  type: Method
  package: com.fasterxml.jackson.core.exc
  summary: Method that allows accessing underlying processor that triggered this exception; typically either <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref> or <xref uid="com.fasterxml.jackson.core.JsonGenerator" data-throw-if-not-resolved="false">JsonGenerator</xref> for exceptions that originate from streaming API. Note that it is possible that \`null\` may be returned if code throwing exception either has no access to processor; or has not been retrofitted to set it; this means that caller needs to take care to check for nulls. Subtypes override this method with co-variant return type, for more type-safe access.
  syntax:
    content: public JsonParser getProcessor()
    return:
      type: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayload()
  id: getRequestPayload()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc.StreamReadException
  langs:
  - java
  name: getRequestPayload()
  nameWithType: StreamReadException.getRequestPayload()
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayload()
  overload: com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayload*
  type: Method
  package: com.fasterxml.jackson.core.exc
  summary: Method that may be called to find payload that was being parsed, if one was specified for parser that threw this Exception.
  syntax:
    content: public RequestPayload getRequestPayload()
    return:
      type: com.fasterxml.jackson.core.util.RequestPayload
      description: request body, if payload was specified; `null` otherwise
- uid: com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayloadAsString()
  id: getRequestPayloadAsString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc.StreamReadException
  langs:
  - java
  name: getRequestPayloadAsString()
  nameWithType: StreamReadException.getRequestPayloadAsString()
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayloadAsString()
  overload: com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayloadAsString*
  type: Method
  package: com.fasterxml.jackson.core.exc
  summary: The method returns the String representation of the request payload if one was specified for parser that threw this Exception.
  syntax:
    content: public String getRequestPayloadAsString()
    return:
      type: java.lang.String
      description: request body as String, if payload was specified; `null` otherwise
- uid: com.fasterxml.jackson.core.exc.StreamReadException.withParser(com.fasterxml.jackson.core.JsonParser)
  id: withParser(com.fasterxml.jackson.core.JsonParser)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc.StreamReadException
  langs:
  - java
  name: withParser(JsonParser p)
  nameWithType: StreamReadException.withParser(JsonParser p)
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.withParser(JsonParser p)
  overload: com.fasterxml.jackson.core.exc.StreamReadException.withParser*
  type: Method
  package: com.fasterxml.jackson.core.exc
  summary: >-
    Fluent method that may be used to assign originating <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">JsonParser</xref>, to be accessed using <xref uid="com.fasterxml.jackson.core.exc.StreamReadException.getProcessor()" data-throw-if-not-resolved="false">#getProcessor()</xref>.


    NOTE: \`this\` instance is modified and no new instance is constructed.
  syntax:
    content: public abstract StreamReadException withParser(JsonParser p)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    return:
      type: com.fasterxml.jackson.core.exc.StreamReadException
- uid: com.fasterxml.jackson.core.exc.StreamReadException.withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload)
  id: withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.exc.StreamReadException
  langs:
  - java
  name: withRequestPayload(RequestPayload p)
  nameWithType: StreamReadException.withRequestPayload(RequestPayload p)
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.withRequestPayload(RequestPayload p)
  overload: com.fasterxml.jackson.core.exc.StreamReadException.withRequestPayload*
  type: Method
  package: com.fasterxml.jackson.core.exc
  summary: >-
    Fluent method that may be used to assign payload to this exception, to let recipient access it for diagnostics purposes.


    NOTE: \`this\` instance is modified and no new instance is constructed.
  syntax:
    content: public abstract StreamReadException withRequestPayload(RequestPayload p)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.util.RequestPayload
    return:
      type: com.fasterxml.jackson.core.exc.StreamReadException
references:
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException*
  name: StreamReadException
  nameWithType: StreamReadException.StreamReadException
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.StreamReadException
  package: com.fasterxml.jackson.core.exc
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.fasterxml.jackson.core.JsonLocation
  name: JsonLocation
  nameWithType: JsonLocation
  fullName: com.fasterxml.jackson.core.JsonLocation
- uid: com.fasterxml.jackson.core.exc.StreamReadException.withParser*
  name: withParser
  nameWithType: StreamReadException.withParser
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.withParser
  package: com.fasterxml.jackson.core.exc
- uid: com.fasterxml.jackson.core.util.RequestPayload
  name: RequestPayload
  nameWithType: RequestPayload
  fullName: com.fasterxml.jackson.core.util.RequestPayload
- uid: com.fasterxml.jackson.core.exc.StreamReadException.withRequestPayload*
  name: withRequestPayload
  nameWithType: StreamReadException.withRequestPayload
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.withRequestPayload
  package: com.fasterxml.jackson.core.exc
- uid: com.fasterxml.jackson.core.exc.StreamReadException.getProcessor*
  name: getProcessor
  nameWithType: StreamReadException.getProcessor
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.getProcessor
  package: com.fasterxml.jackson.core.exc
- uid: com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayload*
  name: getRequestPayload
  nameWithType: StreamReadException.getRequestPayload
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayload
  package: com.fasterxml.jackson.core.exc
- uid: com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayloadAsString*
  name: getRequestPayloadAsString
  nameWithType: StreamReadException.getRequestPayloadAsString
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayloadAsString
  package: com.fasterxml.jackson.core.exc
- uid: com.fasterxml.jackson.core.exc.StreamReadException.getMessage*
  name: getMessage
  nameWithType: StreamReadException.getMessage
  fullName: com.fasterxml.jackson.core.exc.StreamReadException.getMessage
  package: com.fasterxml.jackson.core.exc
- uid: com.fasterxml.jackson.core.JsonProcessingException
  name: JsonProcessingException
  nameWithType: JsonProcessingException
  fullName: com.fasterxml.jackson.core.JsonProcessingException
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Throwable.getCause()
  name: Throwable.getCause()
  nameWithType: Throwable.getCause()
  fullName: java.lang.Throwable.getCause()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.core.JsonProcessingException.toString()
  name: JsonProcessingException.toString()
  nameWithType: JsonProcessingException.toString()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.toString()
- uid: java.lang.Throwable.fillInStackTrace()
  name: Throwable.fillInStackTrace()
  nameWithType: Throwable.fillInStackTrace()
  fullName: java.lang.Throwable.fillInStackTrace()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Throwable.initCause(java.lang.Throwable)
  name: Throwable.initCause(Throwable)
  nameWithType: Throwable.initCause(Throwable)
  fullName: java.lang.Throwable.initCause(java.lang.Throwable)
- uid: com.fasterxml.jackson.core.JsonProcessingException.getLocation()
  name: JsonProcessingException.getLocation()
  nameWithType: JsonProcessingException.getLocation()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getLocation()
- uid: com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()
  name: JsonProcessingException.getMessageSuffix()
  nameWithType: JsonProcessingException.getMessageSuffix()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getMessageSuffix()
- uid: java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
  name: Throwable.setStackTrace(StackTraceElement[])
  nameWithType: Throwable.setStackTrace(StackTraceElement[])
  fullName: java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
- uid: java.lang.Throwable.getSuppressed()
  name: Throwable.getSuppressed()
  nameWithType: Throwable.getSuppressed()
  fullName: java.lang.Throwable.getSuppressed()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Throwable.getStackTrace()
  name: Throwable.getStackTrace()
  nameWithType: Throwable.getStackTrace()
  fullName: java.lang.Throwable.getStackTrace()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Throwable.getLocalizedMessage()
  name: Throwable.getLocalizedMessage()
  nameWithType: Throwable.getLocalizedMessage()
  fullName: java.lang.Throwable.getLocalizedMessage()
- uid: com.fasterxml.jackson.core.JsonProcessingException.getMessage()
  name: JsonProcessingException.getMessage()
  nameWithType: JsonProcessingException.getMessage()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getMessage()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  name: Throwable.printStackTrace(PrintWriter)
  nameWithType: Throwable.printStackTrace(PrintWriter)
  fullName: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
- uid: java.lang.Throwable.addSuppressed(java.lang.Throwable)
  name: Throwable.addSuppressed(Throwable)
  nameWithType: Throwable.addSuppressed(Throwable)
  fullName: java.lang.Throwable.addSuppressed(java.lang.Throwable)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()
  name: JsonProcessingException.getOriginalMessage()
  nameWithType: JsonProcessingException.getOriginalMessage()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getOriginalMessage()
- uid: com.fasterxml.jackson.core.JsonProcessingException.clearLocation()
  name: JsonProcessingException.clearLocation()
  nameWithType: JsonProcessingException.clearLocation()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.clearLocation()
- uid: com.fasterxml.jackson.core.JsonProcessingException.getProcessor()
  name: JsonProcessingException.getProcessor()
  nameWithType: JsonProcessingException.getProcessor()
  fullName: com.fasterxml.jackson.core.JsonProcessingException.getProcessor()
- uid: java.lang.Throwable.printStackTrace(java.io.PrintStream)
  name: Throwable.printStackTrace(PrintStream)
  nameWithType: Throwable.printStackTrace(PrintStream)
  fullName: java.lang.Throwable.printStackTrace(java.io.PrintStream)
- uid: java.lang.Throwable.printStackTrace()
  name: Throwable.printStackTrace()
  nameWithType: Throwable.printStackTrace()
  fullName: java.lang.Throwable.printStackTrace()
