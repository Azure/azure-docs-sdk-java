### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resourcehealth.implementation.EmergingIssuesImpl.EmergingIssuesImpl*"
fullName: "com.azure.resourcemanager.resourcehealth.implementation.EmergingIssuesImpl.EmergingIssuesImpl"
name: "EmergingIssuesImpl"
nameWithType: "EmergingIssuesImpl.EmergingIssuesImpl"
members:
- uid: "com.azure.resourcemanager.resourcehealth.implementation.EmergingIssuesImpl.EmergingIssuesImpl(com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient,com.azure.resourcemanager.resourcehealth.ResourceHealthManager)"
  fullName: "com.azure.resourcemanager.resourcehealth.implementation.EmergingIssuesImpl.EmergingIssuesImpl(EmergingIssuesClient innerClient, ResourceHealthManager serviceManager)"
  name: "EmergingIssuesImpl(EmergingIssuesClient innerClient, ResourceHealthManager serviceManager)"
  nameWithType: "EmergingIssuesImpl.EmergingIssuesImpl(EmergingIssuesClient innerClient, ResourceHealthManager serviceManager)"
  parameters:
  - name: "innerClient"
    type: "<xref href=\"com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient?alt=com.azure.resourcemanager.resourcehealth.fluent.EmergingIssuesClient&text=EmergingIssuesClient\" data-throw-if-not-resolved=\"False\" />"
  - name: "serviceManager"
    type: "<xref href=\"com.azure.resourcemanager.resourcehealth.ResourceHealthManager?alt=com.azure.resourcemanager.resourcehealth.ResourceHealthManager&text=ResourceHealthManager\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EmergingIssuesImpl(EmergingIssuesClient innerClient, ResourceHealthManager serviceManager)"
type: "constructor"
metadata: {}
package: "com.azure.resourcemanager.resourcehealth.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-resourcehealth:1.0.0-beta.1
