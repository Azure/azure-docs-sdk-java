### YamlMime:JavaMember
uid: "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.read*"
fullName: "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.read"
name: "read"
nameWithType: "ContentLengthInputStream.read"
members:
- uid: "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.read()"
  fullName: "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.read()"
  name: "read()"
  nameWithType: "ContentLengthInputStream.read()"
  summary: "Read the next byte from the stream"
  overridden: "java.io.InputStream.read()"
  syntax: "public int read()"
  exceptions:
  - description: "If an IO problem occurs"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "The next byte or -1 if the end of stream has been reached."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.read(byte[])"
  fullName: "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.read(byte[] b)"
  name: "read(byte[] b)"
  nameWithType: "ContentLengthInputStream.read(byte[] b)"
  summary: "Read more bytes from the stream."
  overridden: "java.io.InputStream.read(byte[])"
  parameters:
  - description: "The byte array to put the new data in."
    name: "b"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public int read(byte[] b)"
  exceptions:
  - description: "If an IO problem occurs"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "The number of bytes read into the buffer."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.read(byte[],int,int)"
  fullName: "org.apache.hc.core5.http.impl.io.ContentLengthInputStream.read(byte[] b, int off, int len)"
  name: "read(byte[] b, int off, int len)"
  nameWithType: "ContentLengthInputStream.read(byte[] b, int off, int len)"
  summary: "Does standard <xref uid=\"java.io.InputStream.read*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream#read(byte[], int, int)\"></xref> behavior, but also notifies the watcher when the contents have been consumed."
  overridden: "java.io.InputStream.read(byte[],int,int)"
  parameters:
  - description: "The byte array to fill."
    name: "b"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "Start filling at this position."
    name: "off"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of bytes to attempt to read."
    name: "len"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int read(byte[] b, int off, int len)"
  exceptions:
  - description: "Should an error occur on the wrapped stream."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "The number of bytes read, or -1 if the end of content has been\n  reached."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.apache.hc.core5.http.impl.io"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
