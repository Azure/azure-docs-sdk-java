### YamlMime:JavaType
uid: "com.azure.cosmos.util.CosmosPagedIterable"
fullName: "com.azure.cosmos.util.CosmosPagedIterable<T>"
name: "CosmosPagedIterable<T>"
nameWithType: "CosmosPagedIterable<T>"
summary: "Cosmos implementation of <xref uid=\"com.azure.core.util.paging.ContinuablePagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.util.paging.ContinuablePagedIterable\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.IterableStream?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.paging.ContinuablePagedIterable?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.util.IterableStream.<T>of(java.lang.Iterable<T>)"
- "com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage()"
- "com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C)"
- "com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(C,int)"
- "com.azure.core.util.paging.ContinuablePagedIterable.iterableByPage(int)"
- "com.azure.core.util.paging.ContinuablePagedIterable.iterator()"
- "com.azure.core.util.paging.ContinuablePagedIterable.stream()"
- "com.azure.core.util.paging.ContinuablePagedIterable.streamByPage()"
- "com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C)"
- "com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(C,int)"
- "com.azure.core.util.paging.ContinuablePagedIterable.streamByPage(int)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CosmosPagedIterable<T> extends ContinuablePagedIterable<String,T,FeedResponse<T>>"
constructors:
- uid: "com.azure.cosmos.util.CosmosPagedIterable.CosmosPagedIterable(com.azure.cosmos.util.CosmosPagedFlux<T>)"
  fullName: "com.azure.cosmos.util.CosmosPagedIterable<T>.CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux)"
  name: "CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux)"
  nameWithType: "CosmosPagedIterable<T>.CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux)"
  summary: "Creates instance given <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref>."
  parameters:
  - description: "the paged flux use as iterable"
    name: "cosmosPagedFlux"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux)"
  desc: "Creates instance given <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref>."
- uid: "com.azure.cosmos.util.CosmosPagedIterable.CosmosPagedIterable(com.azure.cosmos.util.CosmosPagedFlux<T>,int)"
  fullName: "com.azure.cosmos.util.CosmosPagedIterable<T>.CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux, int pageSize)"
  name: "CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux, int pageSize)"
  nameWithType: "CosmosPagedIterable<T>.CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux, int pageSize)"
  summary: "Creates instance given <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref>."
  parameters:
  - description: "the paged flux use as iterable"
    name: "cosmosPagedFlux"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedFlux?alt=com.azure.cosmos.util.CosmosPagedFlux&text=CosmosPagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the preferred pageSize to be used when pulling data from the service"
    name: "pageSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosPagedIterable(CosmosPagedFlux<T> cosmosPagedFlux, int pageSize)"
  desc: "Creates instance given <xref uid=\"com.azure.cosmos.util.CosmosPagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedFlux\"></xref>."
methods:
- uid: "com.azure.cosmos.util.CosmosPagedIterable.handle(java.util.function.Consumer<com.azure.cosmos.models.FeedResponse<T>>)"
  fullName: "com.azure.cosmos.util.CosmosPagedIterable<T>.handle(Consumer<FeedResponse<T>> feedResponseConsumer)"
  name: "handle(Consumer<FeedResponse<T>> feedResponseConsumer)"
  nameWithType: "CosmosPagedIterable<T>.handle(Consumer<FeedResponse<T>> feedResponseConsumer)"
  summary: "Handle for invoking \"side-effects\" on each Feed<wbr>Response returned by Cosmos<wbr>Paged<wbr>Iterable"
  parameters:
  - description: "handler"
    name: "feedResponseConsumer"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.FeedResponse?alt=com.azure.cosmos.models.FeedResponse&text=FeedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public CosmosPagedIterable<T> handle(Consumer<FeedResponse<T>> feedResponseConsumer)"
  desc: "Handle for invoking \"side-effects\" on each FeedResponse returned by CosmosPagedIterable"
  returns:
    description: "CosmosPagedIterable instance with attached handler"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
typeParameters:
- description: "The type of elements in a <xref uid=\"com.azure.core.util.paging.ContinuablePage\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.util.paging.ContinuablePage\"></xref>"
  name: "T"
desc: "Cosmos implementation of <xref uid=\"com.azure.core.util.paging.ContinuablePagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.util.paging.ContinuablePagedIterable\"></xref>.\n\nThis type is a <xref uid=\"com.azure.core.util.IterableStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.util.IterableStream\"></xref> that provides the ability to operate on pages of type <xref uid=\"com.azure.cosmos.models.FeedResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FeedResponse\"></xref> and individual items in such pages. This type supports <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref> type continuation tokens, allowing for restarting from a previously-retrieved continuation token.\n\nFor more information on the base type, refer <xref uid=\"com.azure.core.util.paging.ContinuablePagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.util.paging.ContinuablePagedIterable\"></xref>"
metadata: {}
package: "com.azure.cosmos.util"
artifact: com.azure:azure-cosmos:4.26.0-beta.1
