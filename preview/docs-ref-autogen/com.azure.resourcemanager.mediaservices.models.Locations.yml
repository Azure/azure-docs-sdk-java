### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.Locations"
fullName: "com.azure.resourcemanager.mediaservices.models.Locations"
name: "Locations"
nameWithType: "Locations"
summary: "Resource collection API of Locations."
syntax: "public interface Locations"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.Locations.checkNameAvailability(java.lang.String,com.azure.resourcemanager.mediaservices.models.CheckNameAvailabilityInput)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Locations.checkNameAvailability(String locationName, CheckNameAvailabilityInput parameters)"
  name: "checkNameAvailability(String locationName, CheckNameAvailabilityInput parameters)"
  nameWithType: "Locations.checkNameAvailability(String locationName, CheckNameAvailabilityInput parameters)"
  summary: "Check Name Availability"
  modifiers:
  - "abstract"
  parameters:
  - description: "Location name."
    name: "locationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.mediaservices.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EntityNameAvailabilityCheckOutput checkNameAvailability(String locationName, CheckNameAvailabilityInput parameters)"
  desc: "Check Name Availability\n\nChecks whether the Media Service resource name is available."
  returns:
    description: "the response from the check name availability request."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EntityNameAvailabilityCheckOutput?alt=com.azure.resourcemanager.mediaservices.models.EntityNameAvailabilityCheckOutput&text=EntityNameAvailabilityCheckOutput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.Locations.checkNameAvailabilityWithResponse(java.lang.String,com.azure.resourcemanager.mediaservices.models.CheckNameAvailabilityInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.mediaservices.models.Locations.checkNameAvailabilityWithResponse(String locationName, CheckNameAvailabilityInput parameters, Context context)"
  name: "checkNameAvailabilityWithResponse(String locationName, CheckNameAvailabilityInput parameters, Context context)"
  nameWithType: "Locations.checkNameAvailabilityWithResponse(String locationName, CheckNameAvailabilityInput parameters, Context context)"
  summary: "Check Name Availability"
  modifiers:
  - "abstract"
  parameters:
  - description: "Location name."
    name: "locationName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The request parameters."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.mediaservices.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<EntityNameAvailabilityCheckOutput> checkNameAvailabilityWithResponse(String locationName, CheckNameAvailabilityInput parameters, Context context)"
  desc: "Check Name Availability\n\nChecks whether the Media Service resource name is available."
  returns:
    description: "the response from the check name availability request along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.EntityNameAvailabilityCheckOutput?alt=com.azure.resourcemanager.mediaservices.models.EntityNameAvailabilityCheckOutput&text=EntityNameAvailabilityCheckOutput\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Locations."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.2.0-beta.1
