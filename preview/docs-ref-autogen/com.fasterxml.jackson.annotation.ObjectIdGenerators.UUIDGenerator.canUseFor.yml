### YamlMime:JavaMember
uid: "com.fasterxml.jackson.annotation.ObjectIdGenerators.UUIDGenerator.canUseFor*"
fullName: "com.fasterxml.jackson.annotation.ObjectIdGenerators.UUIDGenerator.canUseFor"
name: "canUseFor"
nameWithType: "ObjectIdGenerators.UUIDGenerator.canUseFor"
members:
- uid: "com.fasterxml.jackson.annotation.ObjectIdGenerators.UUIDGenerator.canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)"
  fullName: "com.fasterxml.jackson.annotation.ObjectIdGenerators.UUIDGenerator.canUseFor(ObjectIdGenerator<?> gen)"
  name: "canUseFor(ObjectIdGenerator<?> gen)"
  nameWithType: "ObjectIdGenerators.UUIDGenerator.canUseFor(ObjectIdGenerator<?> gen)"
  summary: "Since UUIDs are always unique, let's fully ignore scope definition"
  overridden: "com.fasterxml.jackson.annotation.ObjectIdGenerators.Base.canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator<?>)"
  parameters:
  - name: "gen"
    type: "<xref href=\"com.fasterxml.jackson.annotation.ObjectIdGenerator?alt=com.fasterxml.jackson.annotation.ObjectIdGenerator&text=ObjectIdGenerator\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public boolean canUseFor(ObjectIdGenerator<?> gen)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
