### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties"
name: "ODataLinkedServiceTypeProperties"
nameWithType: "ODataLinkedServiceTypeProperties"
summary: "OData linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ODataLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.ODataLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.ODataLinkedServiceTypeProperties()"
  name: "ODataLinkedServiceTypeProperties()"
  nameWithType: "ODataLinkedServiceTypeProperties.ODataLinkedServiceTypeProperties()"
  syntax: "public ODataLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.aadResourceId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.aadResourceId()"
  name: "aadResourceId()"
  nameWithType: "ODataLinkedServiceTypeProperties.aadResourceId()"
  summary: "Get the aad<wbr>Resource<wbr>Id property: Specify the resource you are requesting authorization to use Directory."
  syntax: "public Object aadResourceId()"
  desc: "Get the aadResourceId property: Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string)."
  returns:
    description: "the aadResourceId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.aadServicePrincipalCredentialType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.aadServicePrincipalCredentialType()"
  name: "aadServicePrincipalCredentialType()"
  nameWithType: "ODataLinkedServiceTypeProperties.aadServicePrincipalCredentialType()"
  summary: "Get the aad<wbr>Service<wbr>Principal<wbr>Credential<wbr>Type property: Specify the credential type (key or cert) is used for service principal."
  syntax: "public ODataAadServicePrincipalCredentialType aadServicePrincipalCredentialType()"
  desc: "Get the aadServicePrincipalCredentialType property: Specify the credential type (key or cert) is used for service principal."
  returns:
    description: "the aadServicePrincipalCredentialType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ODataAadServicePrincipalCredentialType?alt=com.azure.resourcemanager.datafactory.models.ODataAadServicePrincipalCredentialType&text=ODataAadServicePrincipalCredentialType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.authHeaders()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.authHeaders()"
  name: "authHeaders()"
  nameWithType: "ODataLinkedServiceTypeProperties.authHeaders()"
  summary: "Get the auth<wbr>Headers property: The additional HTTP headers in the request to RESTful API used for authorization."
  syntax: "public Object authHeaders()"
  desc: "Get the authHeaders property: The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object)."
  returns:
    description: "the authHeaders value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.authenticationType()"
  name: "authenticationType()"
  nameWithType: "ODataLinkedServiceTypeProperties.authenticationType()"
  summary: "Get the authentication<wbr>Type property: Type of authentication used to connect to the OData service."
  syntax: "public ODataAuthenticationType authenticationType()"
  desc: "Get the authenticationType property: Type of authentication used to connect to the OData service."
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ODataAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.ODataAuthenticationType&text=ODataAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.azureCloudType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.azureCloudType()"
  name: "azureCloudType()"
  nameWithType: "ODataLinkedServiceTypeProperties.azureCloudType()"
  summary: "Get the azure<wbr>Cloud<wbr>Type property: Indicates the azure cloud type of the service principle auth."
  syntax: "public Object azureCloudType()"
  desc: "Get the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  returns:
    description: "the azureCloudType value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "ODataLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "ODataLinkedServiceTypeProperties.password()"
  summary: "Get the password property: Password of the OData service."
  syntax: "public SecretBase password()"
  desc: "Get the password property: Password of the OData service."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.servicePrincipalEmbeddedCert()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.servicePrincipalEmbeddedCert()"
  name: "servicePrincipalEmbeddedCert()"
  nameWithType: "ODataLinkedServiceTypeProperties.servicePrincipalEmbeddedCert()"
  summary: "Get the service<wbr>Principal<wbr>Embedded<wbr>Cert property: Specify the base64 encoded certificate of your application registered in Azure Active Directory."
  syntax: "public SecretBase servicePrincipalEmbeddedCert()"
  desc: "Get the servicePrincipalEmbeddedCert property: Specify the base64 encoded certificate of your application registered in Azure Active Directory. Type: string (or Expression with resultType string)."
  returns:
    description: "the servicePrincipalEmbeddedCert value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.servicePrincipalEmbeddedCertPassword()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.servicePrincipalEmbeddedCertPassword()"
  name: "servicePrincipalEmbeddedCertPassword()"
  nameWithType: "ODataLinkedServiceTypeProperties.servicePrincipalEmbeddedCertPassword()"
  summary: "Get the service<wbr>Principal<wbr>Embedded<wbr>Cert<wbr>Password property: Specify the password of your certificate if your certificate has a password and you are using Aad<wbr>Service<wbr>Principal authentication."
  syntax: "public SecretBase servicePrincipalEmbeddedCertPassword()"
  desc: "Get the servicePrincipalEmbeddedCertPassword property: Specify the password of your certificate if your certificate has a password and you are using AadServicePrincipal authentication. Type: string (or Expression with resultType string)."
  returns:
    description: "the servicePrincipalEmbeddedCertPassword value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.servicePrincipalId()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.servicePrincipalId()"
  name: "servicePrincipalId()"
  nameWithType: "ODataLinkedServiceTypeProperties.servicePrincipalId()"
  summary: "Get the service<wbr>Principal<wbr>Id property: Specify the application id of your application registered in Azure Active Directory."
  syntax: "public Object servicePrincipalId()"
  desc: "Get the servicePrincipalId property: Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string)."
  returns:
    description: "the servicePrincipalId value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.servicePrincipalKey()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.servicePrincipalKey()"
  name: "servicePrincipalKey()"
  nameWithType: "ODataLinkedServiceTypeProperties.servicePrincipalKey()"
  summary: "Get the service<wbr>Principal<wbr>Key property: Specify the secret of your application registered in Azure Active Directory."
  syntax: "public SecretBase servicePrincipalKey()"
  desc: "Get the servicePrincipalKey property: Specify the secret of your application registered in Azure Active Directory. Type: string (or Expression with resultType string)."
  returns:
    description: "the servicePrincipalKey value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.tenant()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.tenant()"
  name: "tenant()"
  nameWithType: "ODataLinkedServiceTypeProperties.tenant()"
  summary: "Get the tenant property: Specify the tenant information (domain name or tenant ID) under which your application resides."
  syntax: "public Object tenant()"
  desc: "Get the tenant property: Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string)."
  returns:
    description: "the tenant value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.url()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.url()"
  name: "url()"
  nameWithType: "ODataLinkedServiceTypeProperties.url()"
  summary: "Get the url property: The URL of the OData service endpoint."
  syntax: "public Object url()"
  desc: "Get the url property: The URL of the OData service endpoint. Type: string (or Expression with resultType string)."
  returns:
    description: "the url value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "ODataLinkedServiceTypeProperties.username()"
  summary: "Get the username property: User name of the OData service."
  syntax: "public Object username()"
  desc: "Get the username property: User name of the OData service. Type: string (or Expression with resultType string)."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "ODataLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withAadResourceId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withAadResourceId(Object aadResourceId)"
  name: "withAadResourceId(Object aadResourceId)"
  nameWithType: "ODataLinkedServiceTypeProperties.withAadResourceId(Object aadResourceId)"
  summary: "Set the aad<wbr>Resource<wbr>Id property: Specify the resource you are requesting authorization to use Directory."
  parameters:
  - description: "the aadResourceId value to set."
    name: "aadResourceId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withAadResourceId(Object aadResourceId)"
  desc: "Set the aadResourceId property: Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string)."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withAadServicePrincipalCredentialType(com.azure.resourcemanager.datafactory.models.ODataAadServicePrincipalCredentialType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withAadServicePrincipalCredentialType(ODataAadServicePrincipalCredentialType aadServicePrincipalCredentialType)"
  name: "withAadServicePrincipalCredentialType(ODataAadServicePrincipalCredentialType aadServicePrincipalCredentialType)"
  nameWithType: "ODataLinkedServiceTypeProperties.withAadServicePrincipalCredentialType(ODataAadServicePrincipalCredentialType aadServicePrincipalCredentialType)"
  summary: "Set the aad<wbr>Service<wbr>Principal<wbr>Credential<wbr>Type property: Specify the credential type (key or cert) is used for service principal."
  parameters:
  - description: "the aadServicePrincipalCredentialType value to set."
    name: "aadServicePrincipalCredentialType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ODataAadServicePrincipalCredentialType?alt=com.azure.resourcemanager.datafactory.models.ODataAadServicePrincipalCredentialType&text=ODataAadServicePrincipalCredentialType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withAadServicePrincipalCredentialType(ODataAadServicePrincipalCredentialType aadServicePrincipalCredentialType)"
  desc: "Set the aadServicePrincipalCredentialType property: Specify the credential type (key or cert) is used for service principal."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withAuthHeaders(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withAuthHeaders(Object authHeaders)"
  name: "withAuthHeaders(Object authHeaders)"
  nameWithType: "ODataLinkedServiceTypeProperties.withAuthHeaders(Object authHeaders)"
  summary: "Set the auth<wbr>Headers property: The additional HTTP headers in the request to RESTful API used for authorization."
  parameters:
  - description: "the authHeaders value to set."
    name: "authHeaders"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withAuthHeaders(Object authHeaders)"
  desc: "Set the authHeaders property: The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object)."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withAuthenticationType(com.azure.resourcemanager.datafactory.models.ODataAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withAuthenticationType(ODataAuthenticationType authenticationType)"
  name: "withAuthenticationType(ODataAuthenticationType authenticationType)"
  nameWithType: "ODataLinkedServiceTypeProperties.withAuthenticationType(ODataAuthenticationType authenticationType)"
  summary: "Set the authentication<wbr>Type property: Type of authentication used to connect to the OData service."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ODataAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.ODataAuthenticationType&text=ODataAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withAuthenticationType(ODataAuthenticationType authenticationType)"
  desc: "Set the authenticationType property: Type of authentication used to connect to the OData service."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withAzureCloudType(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withAzureCloudType(Object azureCloudType)"
  name: "withAzureCloudType(Object azureCloudType)"
  nameWithType: "ODataLinkedServiceTypeProperties.withAzureCloudType(Object azureCloudType)"
  summary: "Set the azure<wbr>Cloud<wbr>Type property: Indicates the azure cloud type of the service principle auth."
  parameters:
  - description: "the azureCloudType value to set."
    name: "azureCloudType"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withAzureCloudType(Object azureCloudType)"
  desc: "Set the azureCloudType property: Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions\\\\u2019 cloud type. Type: string (or Expression with resultType string)."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "ODataLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "ODataLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: Password of the OData service."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withPassword(SecretBase password)"
  desc: "Set the password property: Password of the OData service."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withServicePrincipalEmbeddedCert(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withServicePrincipalEmbeddedCert(SecretBase servicePrincipalEmbeddedCert)"
  name: "withServicePrincipalEmbeddedCert(SecretBase servicePrincipalEmbeddedCert)"
  nameWithType: "ODataLinkedServiceTypeProperties.withServicePrincipalEmbeddedCert(SecretBase servicePrincipalEmbeddedCert)"
  summary: "Set the service<wbr>Principal<wbr>Embedded<wbr>Cert property: Specify the base64 encoded certificate of your application registered in Azure Active Directory."
  parameters:
  - description: "the servicePrincipalEmbeddedCert value to set."
    name: "servicePrincipalEmbeddedCert"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withServicePrincipalEmbeddedCert(SecretBase servicePrincipalEmbeddedCert)"
  desc: "Set the servicePrincipalEmbeddedCert property: Specify the base64 encoded certificate of your application registered in Azure Active Directory. Type: string (or Expression with resultType string)."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withServicePrincipalEmbeddedCertPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withServicePrincipalEmbeddedCertPassword(SecretBase servicePrincipalEmbeddedCertPassword)"
  name: "withServicePrincipalEmbeddedCertPassword(SecretBase servicePrincipalEmbeddedCertPassword)"
  nameWithType: "ODataLinkedServiceTypeProperties.withServicePrincipalEmbeddedCertPassword(SecretBase servicePrincipalEmbeddedCertPassword)"
  summary: "Set the service<wbr>Principal<wbr>Embedded<wbr>Cert<wbr>Password property: Specify the password of your certificate if your certificate has a password and you are using Aad<wbr>Service<wbr>Principal authentication."
  parameters:
  - description: "the servicePrincipalEmbeddedCertPassword value to set."
    name: "servicePrincipalEmbeddedCertPassword"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withServicePrincipalEmbeddedCertPassword(SecretBase servicePrincipalEmbeddedCertPassword)"
  desc: "Set the servicePrincipalEmbeddedCertPassword property: Specify the password of your certificate if your certificate has a password and you are using AadServicePrincipal authentication. Type: string (or Expression with resultType string)."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withServicePrincipalId(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withServicePrincipalId(Object servicePrincipalId)"
  name: "withServicePrincipalId(Object servicePrincipalId)"
  nameWithType: "ODataLinkedServiceTypeProperties.withServicePrincipalId(Object servicePrincipalId)"
  summary: "Set the service<wbr>Principal<wbr>Id property: Specify the application id of your application registered in Azure Active Directory."
  parameters:
  - description: "the servicePrincipalId value to set."
    name: "servicePrincipalId"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withServicePrincipalId(Object servicePrincipalId)"
  desc: "Set the servicePrincipalId property: Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string)."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withServicePrincipalKey(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withServicePrincipalKey(SecretBase servicePrincipalKey)"
  name: "withServicePrincipalKey(SecretBase servicePrincipalKey)"
  nameWithType: "ODataLinkedServiceTypeProperties.withServicePrincipalKey(SecretBase servicePrincipalKey)"
  summary: "Set the service<wbr>Principal<wbr>Key property: Specify the secret of your application registered in Azure Active Directory."
  parameters:
  - description: "the servicePrincipalKey value to set."
    name: "servicePrincipalKey"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withServicePrincipalKey(SecretBase servicePrincipalKey)"
  desc: "Set the servicePrincipalKey property: Specify the secret of your application registered in Azure Active Directory. Type: string (or Expression with resultType string)."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withTenant(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withTenant(Object tenant)"
  name: "withTenant(Object tenant)"
  nameWithType: "ODataLinkedServiceTypeProperties.withTenant(Object tenant)"
  summary: "Set the tenant property: Specify the tenant information (domain name or tenant ID) under which your application resides."
  parameters:
  - description: "the tenant value to set."
    name: "tenant"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withTenant(Object tenant)"
  desc: "Set the tenant property: Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string)."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withUrl(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withUrl(Object url)"
  name: "withUrl(Object url)"
  nameWithType: "ODataLinkedServiceTypeProperties.withUrl(Object url)"
  summary: "Set the url property: The URL of the OData service endpoint."
  parameters:
  - description: "the url value to set."
    name: "url"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withUrl(Object url)"
  desc: "Set the url property: The URL of the OData service endpoint. Type: string (or Expression with resultType string)."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "ODataLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: User name of the OData service."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ODataLinkedServiceTypeProperties withUsername(Object username)"
  desc: "Set the username property: User name of the OData service. Type: string (or Expression with resultType string)."
  returns:
    description: "the ODataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ODataLinkedServiceTypeProperties&text=ODataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "OData linked service properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
