### YamlMime:ManagedReference
items:
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter
  id: AbstractAsyncServerAuthFilter
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support
  children:
  - org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.AbstractAsyncServerAuthFilter(boolean)
  - org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.authenticate(T,org.apache.hc.core5.net.URIAuthority,java.lang.String,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.generateChallenge(T,org.apache.hc.core5.net.URIAuthority,java.lang.String,org.apache.hc.core5.http.protocol.HttpContext)
  - org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.generateResponseContent(org.apache.hc.core5.http.HttpResponse)
  - org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.handle(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger,org.apache.hc.core5.http.nio.AsyncFilterChain)
  - org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.parseChallengeResponse(java.lang.String,org.apache.hc.core5.http.protocol.HttpContext)
  langs:
  - java
  name: AbstractAsyncServerAuthFilter<T>
  nameWithType: AbstractAsyncServerAuthFilter<T>
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>
  type: Class
  package: org.apache.hc.core5.http.nio.support
  summary: Abstract asynchronous HTTP request filter that implements standard HTTP authentication handshake.
  syntax:
    content: public abstract class AbstractAsyncServerAuthFilter<T> implements AsyncFilterHandler
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  implements:
  - org.apache.hc.core5.http.nio.AsyncFilterHandler
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.AbstractAsyncServerAuthFilter(boolean)
  id: AbstractAsyncServerAuthFilter(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter
  langs:
  - java
  name: AbstractAsyncServerAuthFilter(boolean respondImmediately)
  nameWithType: AbstractAsyncServerAuthFilter<T>.AbstractAsyncServerAuthFilter(boolean respondImmediately)
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.AbstractAsyncServerAuthFilter(boolean respondImmediately)
  overload: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.AbstractAsyncServerAuthFilter*
  type: Constructor
  package: org.apache.hc.core5.http.nio.support
  syntax:
    content: protected AbstractAsyncServerAuthFilter(boolean respondImmediately)
    parameters:
    - id: respondImmediately
      type: boolean
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.authenticate(T,org.apache.hc.core5.net.URIAuthority,java.lang.String,org.apache.hc.core5.http.protocol.HttpContext)
  id: authenticate(T,org.apache.hc.core5.net.URIAuthority,java.lang.String,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter
  langs:
  - java
  name: authenticate(T challengeResponse, URIAuthority authority, String requestUri, HttpContext context)
  nameWithType: AbstractAsyncServerAuthFilter<T>.authenticate(T challengeResponse, URIAuthority authority, String requestUri, HttpContext context)
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.authenticate(T challengeResponse, URIAuthority authority, String requestUri, HttpContext context)
  overload: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.authenticate*
  type: Method
  package: org.apache.hc.core5.http.nio.support
  summary: Authenticates the client using the authentication token sent by the client as a response to an authentication challenge.
  syntax:
    content: protected abstract boolean authenticate(T challengeResponse, URIAuthority authority, String requestUri, HttpContext context)
    parameters:
    - id: challengeResponse
      type: T
      description: >-
        the authentication token sent by the client
                                  as a response to an authentication challenge.
    - id: authority
      type: org.apache.hc.core5.net.URIAuthority
      description: the URI authority.
    - id: requestUri
      type: java.lang.String
      description: the request URI.
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the actual execution context.
    return:
      type: boolean
      description: <code>true</code> if the client could be successfully authenticated <code>false</code> otherwise.
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.generateChallenge(T,org.apache.hc.core5.net.URIAuthority,java.lang.String,org.apache.hc.core5.http.protocol.HttpContext)
  id: generateChallenge(T,org.apache.hc.core5.net.URIAuthority,java.lang.String,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter
  langs:
  - java
  name: generateChallenge(T challengeResponse, URIAuthority authority, String requestUri, HttpContext context)
  nameWithType: AbstractAsyncServerAuthFilter<T>.generateChallenge(T challengeResponse, URIAuthority authority, String requestUri, HttpContext context)
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.generateChallenge(T challengeResponse, URIAuthority authority, String requestUri, HttpContext context)
  overload: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.generateChallenge*
  type: Method
  package: org.apache.hc.core5.http.nio.support
  summary: Generates an authentication challenge in case of unsuccessful authentication.
  syntax:
    content: protected abstract String generateChallenge(T challengeResponse, URIAuthority authority, String requestUri, HttpContext context)
    parameters:
    - id: challengeResponse
      type: T
      description: >-
        the authentication token sent by the client
                                  as a response to an authentication challenge
                                  or <code>null</code> if the client has not sent any.
    - id: authority
      type: org.apache.hc.core5.net.URIAuthority
      description: the URI authority.
    - id: requestUri
      type: java.lang.String
      description: the request URI.
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the actual execution context.
    return:
      type: java.lang.String
      description: an authorization challenge value.
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.generateResponseContent(org.apache.hc.core5.http.HttpResponse)
  id: generateResponseContent(org.apache.hc.core5.http.HttpResponse)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter
  langs:
  - java
  name: generateResponseContent(HttpResponse unauthorized)
  nameWithType: AbstractAsyncServerAuthFilter<T>.generateResponseContent(HttpResponse unauthorized)
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.generateResponseContent(HttpResponse unauthorized)
  overload: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.generateResponseContent*
  type: Method
  package: org.apache.hc.core5.http.nio.support
  summary: Generates response body for UNAUTHORIZED response.
  syntax:
    content: protected AsyncEntityProducer generateResponseContent(HttpResponse unauthorized)
    parameters:
    - id: unauthorized
      type: org.apache.hc.core5.http.HttpResponse
      description: the response to return as a result of authentication failure.
    return:
      type: org.apache.hc.core5.http.nio.AsyncEntityProducer
      description: the response content entity.
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.handle(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger,org.apache.hc.core5.http.nio.AsyncFilterChain)
  id: handle(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger,org.apache.hc.core5.http.nio.AsyncFilterChain)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter
  langs:
  - java
  name: handle(HttpRequest request, EntityDetails entityDetails, HttpContext context, AsyncFilterChain.ResponseTrigger responseTrigger, AsyncFilterChain chain)
  nameWithType: AbstractAsyncServerAuthFilter<T>.handle(HttpRequest request, EntityDetails entityDetails, HttpContext context, AsyncFilterChain.ResponseTrigger responseTrigger, AsyncFilterChain chain)
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.handle(HttpRequest request, EntityDetails entityDetails, HttpContext context, AsyncFilterChain.ResponseTrigger responseTrigger, AsyncFilterChain chain)
  overload: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.handle*
  type: Method
  package: org.apache.hc.core5.http.nio.support
  summary: Processes the incoming HTTP request and if processing has been completed submits a final response to the client. The handler can choose to send response messages immediately inside the call or asynchronously at some later point. The handler must not use the response trigger after passing control to the next filter with the <xref uid="org.apache.hc.core5.http.nio.AsyncFilterChain.proceed(org.apache.hc.core5.http.HttpRequest,org.apache.hc.core5.http.EntityDetails,org.apache.hc.core5.http.protocol.HttpContext,org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger)" data-throw-if-not-resolved="false">AsyncFilterChain#proceed(HttpRequest, EntityDetails, HttpContext, AsyncFilterChain.ResponseTrigger)</xref> method.
  syntax:
    content: public final AsyncDataConsumer handle(HttpRequest request, EntityDetails entityDetails, HttpContext context, AsyncFilterChain.ResponseTrigger responseTrigger, AsyncFilterChain chain)
    parameters:
    - id: request
      type: org.apache.hc.core5.http.HttpRequest
    - id: entityDetails
      type: org.apache.hc.core5.http.EntityDetails
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
    - id: responseTrigger
      type: org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger
    - id: chain
      type: org.apache.hc.core5.http.nio.AsyncFilterChain
    return:
      type: org.apache.hc.core5.http.nio.AsyncDataConsumer
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
  - type: java.io.IOException
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.parseChallengeResponse(java.lang.String,org.apache.hc.core5.http.protocol.HttpContext)
  id: parseChallengeResponse(java.lang.String,org.apache.hc.core5.http.protocol.HttpContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter
  langs:
  - java
  name: parseChallengeResponse(String authorizationValue, HttpContext context)
  nameWithType: AbstractAsyncServerAuthFilter<T>.parseChallengeResponse(String authorizationValue, HttpContext context)
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.parseChallengeResponse(String authorizationValue, HttpContext context)
  overload: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.parseChallengeResponse*
  type: Method
  package: org.apache.hc.core5.http.nio.support
  summary: Parses authorization header value into an authentication token sent by the client as a response to an authentication challenge.
  syntax:
    content: protected abstract T parseChallengeResponse(String authorizationValue, HttpContext context)
    parameters:
    - id: authorizationValue
      type: java.lang.String
      description: the authorization header value.
    - id: context
      type: org.apache.hc.core5.http.protocol.HttpContext
      description: the actual execution context.
    return:
      type: T
      description: authorization token
  exceptions:
  - type: org.apache.hc.core5.http.HttpException
references:
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.AbstractAsyncServerAuthFilter*
  name: AbstractAsyncServerAuthFilter
  nameWithType: AbstractAsyncServerAuthFilter<T>.AbstractAsyncServerAuthFilter
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.AbstractAsyncServerAuthFilter
  package: org.apache.hc.core5.http.nio.support
- uid: org.apache.hc.core5.http.HttpException
  name: HttpException
  nameWithType: HttpException
  fullName: org.apache.hc.core5.http.HttpException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.hc.core5.http.protocol.HttpContext
  name: HttpContext
  nameWithType: HttpContext
  fullName: org.apache.hc.core5.http.protocol.HttpContext
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.parseChallengeResponse*
  name: parseChallengeResponse
  nameWithType: AbstractAsyncServerAuthFilter<T>.parseChallengeResponse
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.parseChallengeResponse
  package: org.apache.hc.core5.http.nio.support
- uid: org.apache.hc.core5.net.URIAuthority
  name: URIAuthority
  nameWithType: URIAuthority
  fullName: org.apache.hc.core5.net.URIAuthority
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.authenticate*
  name: authenticate
  nameWithType: AbstractAsyncServerAuthFilter<T>.authenticate
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.authenticate
  package: org.apache.hc.core5.http.nio.support
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.generateChallenge*
  name: generateChallenge
  nameWithType: AbstractAsyncServerAuthFilter<T>.generateChallenge
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.generateChallenge
  package: org.apache.hc.core5.http.nio.support
- uid: org.apache.hc.core5.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: org.apache.hc.core5.http.HttpResponse
- uid: org.apache.hc.core5.http.nio.AsyncEntityProducer
  name: AsyncEntityProducer
  nameWithType: AsyncEntityProducer
  fullName: org.apache.hc.core5.http.nio.AsyncEntityProducer
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.generateResponseContent*
  name: generateResponseContent
  nameWithType: AbstractAsyncServerAuthFilter<T>.generateResponseContent
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.generateResponseContent
  package: org.apache.hc.core5.http.nio.support
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: org.apache.hc.core5.http.HttpRequest
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: org.apache.hc.core5.http.HttpRequest
- uid: org.apache.hc.core5.http.EntityDetails
  name: EntityDetails
  nameWithType: EntityDetails
  fullName: org.apache.hc.core5.http.EntityDetails
- uid: org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger
  name: AsyncFilterChain.ResponseTrigger
  nameWithType: AsyncFilterChain.ResponseTrigger
  fullName: org.apache.hc.core5.http.nio.AsyncFilterChain.ResponseTrigger
- uid: org.apache.hc.core5.http.nio.AsyncFilterChain
  name: AsyncFilterChain
  nameWithType: AsyncFilterChain
  fullName: org.apache.hc.core5.http.nio.AsyncFilterChain
- uid: org.apache.hc.core5.http.nio.AsyncDataConsumer
  name: AsyncDataConsumer
  nameWithType: AsyncDataConsumer
  fullName: org.apache.hc.core5.http.nio.AsyncDataConsumer
- uid: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter.handle*
  name: handle
  nameWithType: AbstractAsyncServerAuthFilter<T>.handle
  fullName: org.apache.hc.core5.http.nio.support.AbstractAsyncServerAuthFilter<T>.handle
  package: org.apache.hc.core5.http.nio.support
- uid: org.apache.hc.core5.http.nio.AsyncFilterHandler
  name: AsyncFilterHandler
  nameWithType: AsyncFilterHandler
  fullName: org.apache.hc.core5.http.nio.AsyncFilterHandler
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
