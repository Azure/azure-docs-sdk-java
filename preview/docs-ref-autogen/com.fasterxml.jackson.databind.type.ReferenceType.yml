### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.type.ReferenceType
  id: ReferenceType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type
  children:
  - com.fasterxml.jackson.databind.type.ReferenceType.ReferenceType(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.ReferenceType.ReferenceType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
  - com.fasterxml.jackson.databind.type.ReferenceType._anchorType
  - com.fasterxml.jackson.databind.type.ReferenceType._narrow(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.ReferenceType._referencedType
  - com.fasterxml.jackson.databind.type.ReferenceType.buildCanonicalName()
  - com.fasterxml.jackson.databind.type.ReferenceType.construct(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.ReferenceType.construct(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.ReferenceType.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.type.ReferenceType.getAnchorType()
  - com.fasterxml.jackson.databind.type.ReferenceType.getContentType()
  - com.fasterxml.jackson.databind.type.ReferenceType.getErasedSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.ReferenceType.getGenericSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.ReferenceType.getReferencedType()
  - com.fasterxml.jackson.databind.type.ReferenceType.hasContentType()
  - com.fasterxml.jackson.databind.type.ReferenceType.isAnchorType()
  - com.fasterxml.jackson.databind.type.ReferenceType.isReferenceType()
  - com.fasterxml.jackson.databind.type.ReferenceType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  - com.fasterxml.jackson.databind.type.ReferenceType.toString()
  - com.fasterxml.jackson.databind.type.ReferenceType.upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.ReferenceType.withContentType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.ReferenceType.withContentTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.ReferenceType.withContentValueHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.ReferenceType.withStaticTyping()
  - com.fasterxml.jackson.databind.type.ReferenceType.withTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.ReferenceType.withValueHandler(java.lang.Object)
  langs:
  - java
  name: ReferenceType
  nameWithType: ReferenceType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType
  type: Class
  package: com.fasterxml.jackson.databind.type
  summary: Specialized <xref uid="com.fasterxml.jackson.databind.type.SimpleType" data-throw-if-not-resolved="false">SimpleType</xref> for types that are referential types, that is, values that can be dereferenced to another value (or null), of different type. Referenced type is accessible using <xref uid="com.fasterxml.jackson.databind.type.ReferenceType.getContentType()" data-throw-if-not-resolved="false">#getContentType()</xref>.
  syntax:
    content: public class ReferenceType extends SimpleType
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.core.type.ResolvedType
  - com.fasterxml.jackson.databind.JavaType
  - com.fasterxml.jackson.databind.type.TypeBase
  - com.fasterxml.jackson.databind.type.SimpleType
  inheritedMembers:
  - com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  - com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
  - com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
  - com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
  - com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.getContentType()
  - com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
  - com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
  - com.fasterxml.jackson.databind.JavaType.getErasedSignature()
  - com.fasterxml.jackson.databind.JavaType.getGenericSignature()
  - com.fasterxml.jackson.databind.JavaType.getKeyType()
  - com.fasterxml.jackson.databind.JavaType.getParameterSource()
  - com.fasterxml.jackson.databind.JavaType.getRawClass()
  - com.fasterxml.jackson.databind.JavaType.getReferencedType()
  - com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
  - com.fasterxml.jackson.databind.JavaType.hasHandlers()
  - com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.hasValueHandler()
  - com.fasterxml.jackson.databind.JavaType.hashCode()
  - com.fasterxml.jackson.databind.JavaType.isAbstract()
  - com.fasterxml.jackson.databind.JavaType.isArrayType()
  - com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
  - com.fasterxml.jackson.databind.JavaType.isConcrete()
  - com.fasterxml.jackson.databind.JavaType.isEnumImplType()
  - com.fasterxml.jackson.databind.JavaType.isEnumType()
  - com.fasterxml.jackson.databind.JavaType.isFinal()
  - com.fasterxml.jackson.databind.JavaType.isInterface()
  - com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
  - com.fasterxml.jackson.databind.JavaType.isMapLikeType()
  - com.fasterxml.jackson.databind.JavaType.isPrimitive()
  - com.fasterxml.jackson.databind.JavaType.isThrowable()
  - com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.JavaType.useStaticType()
  - com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.SimpleType._narrow(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.SimpleType.buildCanonicalName()
  - com.fasterxml.jackson.databind.type.SimpleType.construct(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.SimpleType.constructUnsafe(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.SimpleType.equals(java.lang.Object)
  - com.fasterxml.jackson.databind.type.SimpleType.getErasedSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.SimpleType.getGenericSignature(java.lang.StringBuilder)
  - com.fasterxml.jackson.databind.type.SimpleType.hasContentType()
  - com.fasterxml.jackson.databind.type.SimpleType.isContainerType()
  - com.fasterxml.jackson.databind.type.SimpleType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  - com.fasterxml.jackson.databind.type.SimpleType.toString()
  - com.fasterxml.jackson.databind.type.SimpleType.withContentType(com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.type.SimpleType.withContentTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.SimpleType.withContentValueHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.SimpleType.withStaticTyping()
  - com.fasterxml.jackson.databind.type.SimpleType.withTypeHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.SimpleType.withValueHandler(java.lang.Object)
  - com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class<?>,java.lang.StringBuilder,boolean)
  - com.fasterxml.jackson.databind.type.TypeBase.containedType(int)
  - com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount()
  - com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int)
  - com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class<?>)
  - com.fasterxml.jackson.databind.type.TypeBase.getBindings()
  - com.fasterxml.jackson.databind.type.TypeBase.getInterfaces()
  - com.fasterxml.jackson.databind.type.TypeBase.getSuperClass()
  - com.fasterxml.jackson.databind.type.TypeBase.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.type.ReferenceType.ReferenceType(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType)
  id: ReferenceType(com.fasterxml.jackson.databind.type.TypeBase,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: ReferenceType(TypeBase base, JavaType refType)
  nameWithType: ReferenceType.ReferenceType(TypeBase base, JavaType refType)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.ReferenceType(TypeBase base, JavaType refType)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.ReferenceType*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  summary: Constructor used when upgrading into this type (via <xref uid="com.fasterxml.jackson.databind.type.ReferenceType.upgradeFrom*" data-throw-if-not-resolved="false">#upgradeFrom</xref>, the usual way for <xref uid="com.fasterxml.jackson.databind.type.ReferenceType" data-throw-if-not-resolved="false">ReferenceType</xref>s to come into existence. Sets up what is considered the "base" reference type
  syntax:
    content: protected ReferenceType(TypeBase base, JavaType refType)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.type.TypeBase
    - id: refType
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.ReferenceType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
  id: ReferenceType(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: ReferenceType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType refType, JavaType anchorType, Object valueHandler, Object typeHandler, boolean asStatic)
  nameWithType: ReferenceType.ReferenceType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType refType, JavaType anchorType, Object valueHandler, Object typeHandler, boolean asStatic)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.ReferenceType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType refType, JavaType anchorType, Object valueHandler, Object typeHandler, boolean asStatic)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.ReferenceType*
  type: Constructor
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected ReferenceType(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType refType, JavaType anchorType, Object valueHandler, Object typeHandler, boolean asStatic)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: bindings
      type: com.fasterxml.jackson.databind.type.TypeBindings
    - id: superClass
      type: com.fasterxml.jackson.databind.JavaType
    - id: superInts
      type: com.fasterxml.jackson.databind.JavaType[]
    - id: refType
      type: com.fasterxml.jackson.databind.JavaType
    - id: anchorType
      type: com.fasterxml.jackson.databind.JavaType
    - id: valueHandler
      type: java.lang.Object
    - id: typeHandler
      type: java.lang.Object
    - id: asStatic
      type: boolean
- uid: com.fasterxml.jackson.databind.type.ReferenceType._anchorType
  id: _anchorType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: _anchorType
  nameWithType: ReferenceType._anchorType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType._anchorType
  type: Field
  package: com.fasterxml.jackson.databind.type
  summary: Essential type used for type ids, for example if type id is needed for referencing type with polymorphic handling. Typically initialized when a <xref uid="com.fasterxml.jackson.databind.type.SimpleType" data-throw-if-not-resolved="false">SimpleType</xref> is upgraded into reference type, but NOT changed if being sub-classed.
  syntax:
    content: protected final JavaType _anchorType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.ReferenceType._narrow(java.lang.Class<?>)
  id: _narrow(java.lang.Class<?>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: _narrow(Class<?> subclass)
  nameWithType: ReferenceType._narrow(Class<?> subclass)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType._narrow(Class<?> subclass)
  overload: com.fasterxml.jackson.databind.type.ReferenceType._narrow*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected JavaType _narrow(Class<?> subclass)
    parameters:
    - id: subclass
      type: java.lang.Class<?>
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.ReferenceType._referencedType
  id: _referencedType
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: _referencedType
  nameWithType: ReferenceType._referencedType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType._referencedType
  type: Field
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected final JavaType _referencedType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.buildCanonicalName()
  id: buildCanonicalName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: buildCanonicalName()
  nameWithType: ReferenceType.buildCanonicalName()
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.buildCanonicalName()
  overload: com.fasterxml.jackson.databind.type.ReferenceType.buildCanonicalName*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: protected String buildCanonicalName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.type.ReferenceType.construct(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType)
  id: construct(java.lang.Class<?>,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: construct(Class<?> cls, JavaType refType)
  nameWithType: ReferenceType.construct(Class<?> cls, JavaType refType)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.construct(Class<?> cls, JavaType refType)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.construct*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public static ReferenceType construct(Class<?> cls, JavaType refType)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: refType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.type.ReferenceType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.construct(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType)
  id: construct(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: construct(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType refType)
  nameWithType: ReferenceType.construct(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType refType)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.construct(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType refType)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.construct*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public static ReferenceType construct(Class<?> cls, TypeBindings bindings, JavaType superClass, JavaType[] superInts, JavaType refType)
    parameters:
    - id: cls
      type: java.lang.Class<?>
    - id: bindings
      type: com.fasterxml.jackson.databind.type.TypeBindings
    - id: superClass
      type: com.fasterxml.jackson.databind.JavaType
    - id: superInts
      type: com.fasterxml.jackson.databind.JavaType[]
    - id: refType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.type.ReferenceType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: equals(Object o)
  nameWithType: ReferenceType.equals(Object o)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.equals(Object o)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.equals*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.ReferenceType.getAnchorType()
  id: getAnchorType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: getAnchorType()
  nameWithType: ReferenceType.getAnchorType()
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.getAnchorType()
  overload: com.fasterxml.jackson.databind.type.ReferenceType.getAnchorType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public JavaType getAnchorType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.getContentType()
  id: getContentType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: getContentType()
  nameWithType: ReferenceType.getContentType()
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.getContentType()
  overload: com.fasterxml.jackson.databind.type.ReferenceType.getContentType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: 'Method for accessing content type of this type, if type has such a thing: simple types do not, structured types do (like arrays, Collections and Maps)'
  syntax:
    content: public JavaType getContentType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.getErasedSignature(java.lang.StringBuilder)
  id: getErasedSignature(java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: getErasedSignature(StringBuilder sb)
  nameWithType: ReferenceType.getErasedSignature(StringBuilder sb)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.getErasedSignature(StringBuilder sb)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.getErasedSignature*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method for accessing signature without generic type information, in form compatible with all versions of JVM, and specifically used for type descriptions when generating byte code.
  syntax:
    content: public StringBuilder getErasedSignature(StringBuilder sb)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
    return:
      type: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.ReferenceType.getGenericSignature(java.lang.StringBuilder)
  id: getGenericSignature(java.lang.StringBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: getGenericSignature(StringBuilder sb)
  nameWithType: ReferenceType.getGenericSignature(StringBuilder sb)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.getGenericSignature(StringBuilder sb)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.getGenericSignature*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public StringBuilder getGenericSignature(StringBuilder sb)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
    return:
      type: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.ReferenceType.getReferencedType()
  id: getReferencedType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: getReferencedType()
  nameWithType: ReferenceType.getReferencedType()
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.getReferencedType()
  overload: com.fasterxml.jackson.databind.type.ReferenceType.getReferencedType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Method for accessing type of value that instances of this type references, if any.
  syntax:
    content: public JavaType getReferencedType()
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.hasContentType()
  id: hasContentType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: hasContentType()
  nameWithType: ReferenceType.hasContentType()
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.hasContentType()
  overload: com.fasterxml.jackson.databind.type.ReferenceType.hasContentType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Accessor that allows determining whether <xref uid="com.fasterxml.jackson.databind.type.ReferenceType.getContentType()" data-throw-if-not-resolved="false">#getContentType()</xref> should return a non-null value (that is, there is a "content type") or not. True if <xref uid="com.fasterxml.jackson.databind.type.ReferenceType.isContainerType*" data-throw-if-not-resolved="false">#isContainerType()</xref> or <xref uid="com.fasterxml.jackson.databind.type.ReferenceType.isReferenceType()" data-throw-if-not-resolved="false">#isReferenceType()</xref> return true.
  syntax:
    content: public boolean hasContentType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.ReferenceType.isAnchorType()
  id: isAnchorType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: isAnchorType()
  nameWithType: ReferenceType.isAnchorType()
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.isAnchorType()
  overload: com.fasterxml.jackson.databind.type.ReferenceType.isAnchorType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Convenience accessor that allows checking whether this is the anchor type itself; if not, it must be one of supertypes that is also a <xref uid="com.fasterxml.jackson.databind.type.ReferenceType" data-throw-if-not-resolved="false">ReferenceType</xref>
  syntax:
    content: public boolean isAnchorType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.ReferenceType.isReferenceType()
  id: isReferenceType()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: isReferenceType()
  nameWithType: ReferenceType.isReferenceType()
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.isReferenceType()
  overload: com.fasterxml.jackson.databind.type.ReferenceType.isReferenceType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Whether this type is a referential type, meaning that values are basically pointers to "real" values (or null) and not regular values themselves. Typical examples include things like <xref uid="java.util.concurrent.atomic.AtomicReference" data-throw-if-not-resolved="false">java.util.concurrent.atomic.AtomicReference</xref>, and various `Optional` types (in JDK8, Guava).
  syntax:
    content: public boolean isReferenceType()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.type.ReferenceType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  id: refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
  nameWithType: ReferenceType.refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.refine*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will try to create and return a sub-type instance for known parameterized types; for other types will return \`null\` to indicate that no just refinement makes necessary sense, without trying to detect special status through implemented interfaces.
  syntax:
    content: public JavaType refine(Class<?> rawType, TypeBindings bindings, JavaType superClass, JavaType[] superInterfaces)
    parameters:
    - id: rawType
      type: java.lang.Class<?>
    - id: bindings
      type: com.fasterxml.jackson.databind.type.TypeBindings
    - id: superClass
      type: com.fasterxml.jackson.databind.JavaType
    - id: superInterfaces
      type: com.fasterxml.jackson.databind.JavaType[]
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: toString()
  nameWithType: ReferenceType.toString()
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.toString()
  overload: com.fasterxml.jackson.databind.type.ReferenceType.toString*
  type: Method
  package: com.fasterxml.jackson.databind.type
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.type.ReferenceType.upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  id: upgradeFrom(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: upgradeFrom(JavaType baseType, JavaType refdType)
  nameWithType: ReferenceType.upgradeFrom(JavaType baseType, JavaType refdType)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.upgradeFrom(JavaType baseType, JavaType refdType)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.upgradeFrom*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Factory method that can be used to "upgrade" a basic type into collection-like one; usually done via <xref uid="com.fasterxml.jackson.databind.type.TypeModifier" data-throw-if-not-resolved="false">TypeModifier</xref>
  syntax:
    content: public static ReferenceType upgradeFrom(JavaType baseType, JavaType refdType)
    parameters:
    - id: baseType
      type: com.fasterxml.jackson.databind.JavaType
      description: Resolved non-reference type (usually <xref uid="com.fasterxml.jackson.databind.type.SimpleType" data-throw-if-not-resolved="false">SimpleType</xref>) that is being upgraded
    - id: refdType
      type: com.fasterxml.jackson.databind.JavaType
      description: Referenced type; usually the first and only type parameter, but not necessarily
    return:
      type: com.fasterxml.jackson.databind.type.ReferenceType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.withContentType(com.fasterxml.jackson.databind.JavaType)
  id: withContentType(com.fasterxml.jackson.databind.JavaType)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: withContentType(JavaType contentType)
  nameWithType: ReferenceType.withContentType(JavaType contentType)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.withContentType(JavaType contentType)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.withContentType*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that may be called on structured types that have a so-called content type (element of arrays, value type of Maps, referenced type of referential types), and will construct a new instance that is identical to this instance, except that it has specified content type, instead of current one. If content type is already set to given type, `this` is returned. If type does not have a content type (which is the case with `SimpleType`), <xref uid="" data-throw-if-not-resolved="false">IllegalArgumentException</xref> will be thrown.
  syntax:
    content: public JavaType withContentType(JavaType contentType)
    parameters:
    - id: contentType
      type: com.fasterxml.jackson.databind.JavaType
    return:
      type: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.withContentTypeHandler(java.lang.Object)
  id: withContentTypeHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: withContentTypeHandler(Object h)
  nameWithType: ReferenceType.withContentTypeHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.withContentTypeHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.withContentTypeHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will construct a new instance that is identical to this instance, except that it will have specified content type (element type for arrays, value type for Maps and so forth) handler assigned.
  syntax:
    content: public ReferenceType withContentTypeHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.ReferenceType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.withContentValueHandler(java.lang.Object)
  id: withContentValueHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: withContentValueHandler(Object h)
  nameWithType: ReferenceType.withContentValueHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.withContentValueHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.withContentValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will construct a new instance that is identical to this instance, except that it will have specified content value handler assigned.
  syntax:
    content: public ReferenceType withContentValueHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.ReferenceType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.withStaticTyping()
  id: withStaticTyping()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: withStaticTyping()
  nameWithType: ReferenceType.withStaticTyping()
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.withStaticTyping()
  overload: com.fasterxml.jackson.databind.type.ReferenceType.withStaticTyping*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: 'Method that can be called to get a type instance that indicates that values of the type should be handled using "static typing" for purposes of serialization (as opposed to "dynamic" aka runtime typing): meaning that no runtime information is needed for determining serializers to use. The main use case is to allow forcing of specific root value serialization type, and specifically in resolving serializers for contained types (element types for arrays, Collections and Maps).'
  syntax:
    content: public ReferenceType withStaticTyping()
    return:
      type: com.fasterxml.jackson.databind.type.ReferenceType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.withTypeHandler(java.lang.Object)
  id: withTypeHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: withTypeHandler(Object h)
  nameWithType: ReferenceType.withTypeHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.withTypeHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.withTypeHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: "\"Copy method\" that will construct a new instance that is identical to this instance, except that it will have specified type handler assigned."
  syntax:
    content: public ReferenceType withTypeHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.ReferenceType
- uid: com.fasterxml.jackson.databind.type.ReferenceType.withValueHandler(java.lang.Object)
  id: withValueHandler(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.type.ReferenceType
  langs:
  - java
  name: withValueHandler(Object h)
  nameWithType: ReferenceType.withValueHandler(Object h)
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.withValueHandler(Object h)
  overload: com.fasterxml.jackson.databind.type.ReferenceType.withValueHandler*
  type: Method
  package: com.fasterxml.jackson.databind.type
  summary: Mutant factory method that will construct a new instance that is identical to this instance, except that it will have specified value handler assigned.
  syntax:
    content: public ReferenceType withValueHandler(Object h)
    parameters:
    - id: h
      type: java.lang.Object
    return:
      type: com.fasterxml.jackson.databind.type.ReferenceType
references:
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.type.TypeBindings
  name: TypeBindings
  nameWithType: TypeBindings
  fullName: com.fasterxml.jackson.databind.type.TypeBindings
- uid: com.fasterxml.jackson.databind.JavaType
  name: JavaType
  nameWithType: JavaType
  fullName: com.fasterxml.jackson.databind.JavaType
- uid: com.fasterxml.jackson.databind.JavaType[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.JavaType
    name: JavaType
    fullName: com.fasterxml.jackson.databind.JavaType
  - name: '[]'
    fullName: '[]'
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.databind.type.ReferenceType.ReferenceType*
  name: ReferenceType
  nameWithType: ReferenceType.ReferenceType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.ReferenceType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.TypeBase
  name: TypeBase
  nameWithType: TypeBase
  fullName: com.fasterxml.jackson.databind.type.TypeBase
- uid: com.fasterxml.jackson.databind.type.ReferenceType.upgradeFrom*
  name: upgradeFrom
  nameWithType: ReferenceType.upgradeFrom
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.upgradeFrom
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.construct*
  name: construct
  nameWithType: ReferenceType.construct
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.construct
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.withContentType*
  name: withContentType
  nameWithType: ReferenceType.withContentType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.withContentType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.withTypeHandler*
  name: withTypeHandler
  nameWithType: ReferenceType.withTypeHandler
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.withTypeHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.withContentTypeHandler*
  name: withContentTypeHandler
  nameWithType: ReferenceType.withContentTypeHandler
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.withContentTypeHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.withValueHandler*
  name: withValueHandler
  nameWithType: ReferenceType.withValueHandler
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.withValueHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.withContentValueHandler*
  name: withContentValueHandler
  nameWithType: ReferenceType.withContentValueHandler
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.withContentValueHandler
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.withStaticTyping*
  name: withStaticTyping
  nameWithType: ReferenceType.withStaticTyping
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.withStaticTyping
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.refine*
  name: refine
  nameWithType: ReferenceType.refine
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.refine
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.type.ReferenceType.buildCanonicalName*
  name: buildCanonicalName
  nameWithType: ReferenceType.buildCanonicalName
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.buildCanonicalName
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType._narrow*
  name: _narrow
  nameWithType: ReferenceType._narrow
  fullName: com.fasterxml.jackson.databind.type.ReferenceType._narrow
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.getContentType*
  name: getContentType
  nameWithType: ReferenceType.getContentType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.getContentType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.getReferencedType*
  name: getReferencedType
  nameWithType: ReferenceType.getReferencedType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.getReferencedType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.hasContentType*
  name: hasContentType
  nameWithType: ReferenceType.hasContentType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.hasContentType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.isReferenceType*
  name: isReferenceType
  nameWithType: ReferenceType.isReferenceType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.isReferenceType
  package: com.fasterxml.jackson.databind.type
- uid: java.lang.StringBuilder
  spec.java:
  - uid: java.lang.StringBuilder
    name: StringBuilder
    fullName: java.lang.StringBuilder
- uid: com.fasterxml.jackson.databind.type.ReferenceType.getErasedSignature*
  name: getErasedSignature
  nameWithType: ReferenceType.getErasedSignature
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.getErasedSignature
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.getGenericSignature*
  name: getGenericSignature
  nameWithType: ReferenceType.getGenericSignature
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.getGenericSignature
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.getAnchorType*
  name: getAnchorType
  nameWithType: ReferenceType.getAnchorType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.getAnchorType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.isAnchorType*
  name: isAnchorType
  nameWithType: ReferenceType.isAnchorType
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.isAnchorType
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.toString*
  name: toString
  nameWithType: ReferenceType.toString
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.toString
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.ReferenceType.equals*
  name: equals
  nameWithType: ReferenceType.equals
  fullName: com.fasterxml.jackson.databind.type.ReferenceType.equals
  package: com.fasterxml.jackson.databind.type
- uid: com.fasterxml.jackson.databind.type.SimpleType
  name: SimpleType
  nameWithType: SimpleType
  fullName: com.fasterxml.jackson.databind.type.SimpleType
- uid: com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
  name: JavaType.isJavaLangObject()
  nameWithType: JavaType.isJavaLangObject()
  fullName: com.fasterxml.jackson.databind.JavaType.isJavaLangObject()
- uid: com.fasterxml.jackson.databind.JavaType.getRawClass()
  name: JavaType.getRawClass()
  nameWithType: JavaType.getRawClass()
  fullName: com.fasterxml.jackson.databind.JavaType.getRawClass()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
  name: JavaType.isCollectionLikeType()
  nameWithType: JavaType.isCollectionLikeType()
  fullName: com.fasterxml.jackson.databind.JavaType.isCollectionLikeType()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.type.SimpleType.withTypeHandler(java.lang.Object)
  name: SimpleType.withTypeHandler(Object)
  nameWithType: SimpleType.withTypeHandler(Object)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withTypeHandler(java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JavaType.getKeyType()
  name: JavaType.getKeyType()
  nameWithType: JavaType.getKeyType()
  fullName: com.fasterxml.jackson.databind.JavaType.getKeyType()
- uid: com.fasterxml.jackson.databind.JavaType.isFinal()
  name: JavaType.isFinal()
  nameWithType: JavaType.isFinal()
  fullName: com.fasterxml.jackson.databind.JavaType.isFinal()
- uid: com.fasterxml.jackson.databind.type.SimpleType.buildCanonicalName()
  name: SimpleType.buildCanonicalName()
  nameWithType: SimpleType.buildCanonicalName()
  fullName: com.fasterxml.jackson.databind.type.SimpleType.buildCanonicalName()
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount()
  name: TypeBase.containedTypeCount()
  nameWithType: TypeBase.containedTypeCount()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedTypeCount()
- uid: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class<?>)
  name: TypeBase.findSuperType(Class<?>)
  nameWithType: TypeBase.findSuperType(Class<?>)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isEnumType()
  name: JavaType.isEnumType()
  nameWithType: JavaType.isEnumType()
  fullName: com.fasterxml.jackson.databind.JavaType.isEnumType()
- uid: com.fasterxml.jackson.databind.type.SimpleType.constructUnsafe(java.lang.Class<?>)
  name: SimpleType.constructUnsafe(Class<?>)
  nameWithType: SimpleType.constructUnsafe(Class<?>)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.constructUnsafe(java.lang.Class<?>)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.type.SimpleType.withStaticTyping()
  name: SimpleType.withStaticTyping()
  nameWithType: SimpleType.withStaticTyping()
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withStaticTyping()
- uid: com.fasterxml.jackson.databind.type.SimpleType.withContentType(com.fasterxml.jackson.databind.JavaType)
  name: SimpleType.withContentType(JavaType)
  nameWithType: SimpleType.withContentType(JavaType)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withContentType(com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
  name: JavaType.getContentTypeHandler()
  nameWithType: JavaType.getContentTypeHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentTypeHandler()
- uid: com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: TypeBase.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: TypeBase.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.fasterxml.jackson.databind.type.SimpleType._narrow(java.lang.Class<?>)
  name: SimpleType._narrow(Class<?>)
  nameWithType: SimpleType._narrow(Class<?>)
  fullName: com.fasterxml.jackson.databind.type.SimpleType._narrow(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int)
  name: TypeBase.containedTypeName(int)
  nameWithType: TypeBase.containedTypeName(int)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedTypeName(int)
- uid: com.fasterxml.jackson.databind.type.SimpleType.withContentValueHandler(java.lang.Object)
  name: SimpleType.withContentValueHandler(Object)
  nameWithType: SimpleType.withContentValueHandler(Object)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withContentValueHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
  name: JavaType.<T>getValueHandler()
  nameWithType: JavaType.<T>getValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.<T>getValueHandler()
- uid: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class<?>)
  name: TypeBase._bogusSuperClass(Class<?>)
  nameWithType: TypeBase._bogusSuperClass(Class<?>)
  fullName: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isInterface()
  name: JavaType.isInterface()
  nameWithType: JavaType.isInterface()
  fullName: com.fasterxml.jackson.databind.JavaType.isInterface()
- uid: com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
  name: JavaType.<T>getTypeHandler()
  nameWithType: JavaType.<T>getTypeHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.<T>getTypeHandler()
- uid: com.fasterxml.jackson.databind.JavaType.getGenericSignature()
  name: JavaType.getGenericSignature()
  nameWithType: JavaType.getGenericSignature()
  fullName: com.fasterxml.jackson.databind.JavaType.getGenericSignature()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getBindings()
  name: TypeBase.getBindings()
  nameWithType: TypeBase.getBindings()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getBindings()
- uid: com.fasterxml.jackson.databind.JavaType.isConcrete()
  name: JavaType.isConcrete()
  nameWithType: JavaType.isConcrete()
  fullName: com.fasterxml.jackson.databind.JavaType.isConcrete()
- uid: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
  name: JavaType.forcedNarrowBy(Class<?>)
  nameWithType: JavaType.forcedNarrowBy(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.isPrimitive()
  name: JavaType.isPrimitive()
  nameWithType: JavaType.isPrimitive()
  fullName: com.fasterxml.jackson.databind.JavaType.isPrimitive()
- uid: com.fasterxml.jackson.databind.type.SimpleType.construct(java.lang.Class<?>)
  name: SimpleType.construct(Class<?>)
  nameWithType: SimpleType.construct(Class<?>)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.construct(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.JavaType.getContentType()
  name: JavaType.getContentType()
  nameWithType: JavaType.getContentType()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentType()
- uid: com.fasterxml.jackson.databind.JavaType.getReferencedType()
  name: JavaType.getReferencedType()
  nameWithType: JavaType.getReferencedType()
  fullName: com.fasterxml.jackson.databind.JavaType.getReferencedType()
- uid: com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
  name: JavaType.withHandlersFrom(JavaType)
  nameWithType: JavaType.withHandlersFrom(JavaType)
  fullName: com.fasterxml.jackson.databind.JavaType.withHandlersFrom(com.fasterxml.jackson.databind.JavaType)
- uid: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
  name: JavaType.containedTypeOrUnknown(int)
  nameWithType: JavaType.containedTypeOrUnknown(int)
  fullName: com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int)
- uid: com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
  name: JavaType.hasGenericTypes()
  nameWithType: JavaType.hasGenericTypes()
  fullName: com.fasterxml.jackson.databind.JavaType.hasGenericTypes()
- uid: com.fasterxml.jackson.databind.JavaType.useStaticType()
  name: JavaType.useStaticType()
  nameWithType: JavaType.useStaticType()
  fullName: com.fasterxml.jackson.databind.JavaType.useStaticType()
- uid: com.fasterxml.jackson.databind.type.TypeBase.containedType(int)
  name: TypeBase.containedType(int)
  nameWithType: TypeBase.containedType(int)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.containedType(int)
- uid: com.fasterxml.jackson.databind.type.SimpleType.toString()
  name: SimpleType.toString()
  nameWithType: SimpleType.toString()
  fullName: com.fasterxml.jackson.databind.type.SimpleType.toString()
- uid: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
  name: ResolvedType.isReferenceType()
  nameWithType: ResolvedType.isReferenceType()
  fullName: com.fasterxml.jackson.core.type.ResolvedType.isReferenceType()
- uid: com.fasterxml.jackson.databind.type.SimpleType.getErasedSignature(java.lang.StringBuilder)
  name: SimpleType.getErasedSignature(StringBuilder)
  nameWithType: SimpleType.getErasedSignature(StringBuilder)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.getErasedSignature(java.lang.StringBuilder)
- uid: com.fasterxml.jackson.databind.JavaType.hashCode()
  name: JavaType.hashCode()
  nameWithType: JavaType.hashCode()
  fullName: com.fasterxml.jackson.databind.JavaType.hashCode()
- uid: com.fasterxml.jackson.databind.JavaType.getErasedSignature()
  name: JavaType.getErasedSignature()
  nameWithType: JavaType.getErasedSignature()
  fullName: com.fasterxml.jackson.databind.JavaType.getErasedSignature()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getInterfaces()
  name: TypeBase.getInterfaces()
  nameWithType: TypeBase.getInterfaces()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getInterfaces()
- uid: com.fasterxml.jackson.databind.JavaType.isArrayType()
  name: JavaType.isArrayType()
  nameWithType: JavaType.isArrayType()
  fullName: com.fasterxml.jackson.databind.JavaType.isArrayType()
- uid: com.fasterxml.jackson.databind.type.SimpleType.withValueHandler(java.lang.Object)
  name: SimpleType.withValueHandler(Object)
  nameWithType: SimpleType.withValueHandler(Object)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withValueHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
  name: JavaType.isTypeOrSubTypeOf(Class<?>)
  nameWithType: JavaType.isTypeOrSubTypeOf(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.type.SimpleType.hasContentType()
  name: SimpleType.hasContentType()
  nameWithType: SimpleType.hasContentType()
  fullName: com.fasterxml.jackson.databind.type.SimpleType.hasContentType()
- uid: com.fasterxml.jackson.databind.JavaType.hasHandlers()
  name: JavaType.hasHandlers()
  nameWithType: JavaType.hasHandlers()
  fullName: com.fasterxml.jackson.databind.JavaType.hasHandlers()
- uid: com.fasterxml.jackson.databind.type.SimpleType.withContentTypeHandler(java.lang.Object)
  name: SimpleType.withContentTypeHandler(Object)
  nameWithType: SimpleType.withContentTypeHandler(Object)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.withContentTypeHandler(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
  name: JavaType.getContentValueHandler()
  nameWithType: JavaType.getContentValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.getContentValueHandler()
- uid: com.fasterxml.jackson.databind.type.SimpleType.equals(java.lang.Object)
  name: SimpleType.equals(Object)
  nameWithType: SimpleType.equals(Object)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JavaType.getParameterSource()
  name: JavaType.getParameterSource()
  nameWithType: JavaType.getParameterSource()
  fullName: com.fasterxml.jackson.databind.JavaType.getParameterSource()
- uid: com.fasterxml.jackson.databind.JavaType.isMapLikeType()
  name: JavaType.isMapLikeType()
  nameWithType: JavaType.isMapLikeType()
  fullName: com.fasterxml.jackson.databind.JavaType.isMapLikeType()
- uid: com.fasterxml.jackson.databind.JavaType.hasValueHandler()
  name: JavaType.hasValueHandler()
  nameWithType: JavaType.hasValueHandler()
  fullName: com.fasterxml.jackson.databind.JavaType.hasValueHandler()
- uid: com.fasterxml.jackson.databind.type.TypeBase.getSuperClass()
  name: TypeBase.getSuperClass()
  nameWithType: TypeBase.getSuperClass()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.getSuperClass()
- uid: com.fasterxml.jackson.databind.JavaType.isAbstract()
  name: JavaType.isAbstract()
  nameWithType: JavaType.isAbstract()
  fullName: com.fasterxml.jackson.databind.JavaType.isAbstract()
- uid: com.fasterxml.jackson.databind.JavaType.isThrowable()
  name: JavaType.isThrowable()
  nameWithType: JavaType.isThrowable()
  fullName: com.fasterxml.jackson.databind.JavaType.isThrowable()
- uid: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
  name: JavaType.hasRawClass(Class<?>)
  nameWithType: JavaType.hasRawClass(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.type.SimpleType.isContainerType()
  name: SimpleType.isContainerType()
  nameWithType: SimpleType.isContainerType()
  fullName: com.fasterxml.jackson.databind.type.SimpleType.isContainerType()
- uid: com.fasterxml.jackson.databind.type.SimpleType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  name: SimpleType.refine(Class<?>,TypeBindings,JavaType,JavaType[])
  nameWithType: SimpleType.refine(Class<?>,TypeBindings,JavaType,JavaType[])
  fullName: com.fasterxml.jackson.databind.type.SimpleType.refine(java.lang.Class<?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
- uid: com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
  name: TypeBase.toCanonical()
  nameWithType: TypeBase.toCanonical()
  fullName: com.fasterxml.jackson.databind.type.TypeBase.toCanonical()
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
  name: JavaType.isTypeOrSuperTypeOf(Class<?>)
  nameWithType: JavaType.isTypeOrSuperTypeOf(Class<?>)
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class<?>,java.lang.StringBuilder,boolean)
  name: TypeBase._classSignature(Class<?>,StringBuilder,boolean)
  nameWithType: TypeBase._classSignature(Class<?>,StringBuilder,boolean)
  fullName: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class<?>,java.lang.StringBuilder,boolean)
- uid: com.fasterxml.jackson.databind.type.TypeBase.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: TypeBase.serialize(JsonGenerator,SerializerProvider)
  nameWithType: TypeBase.serialize(JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JavaType.isEnumImplType()
  name: JavaType.isEnumImplType()
  nameWithType: JavaType.isEnumImplType()
  fullName: com.fasterxml.jackson.databind.JavaType.isEnumImplType()
- uid: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class<?>)
  name: TypeBase.findTypeParameters(Class<?>)
  nameWithType: TypeBase.findTypeParameters(Class<?>)
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class<?>)
- uid: com.fasterxml.jackson.databind.type.SimpleType.getGenericSignature(java.lang.StringBuilder)
  name: SimpleType.getGenericSignature(StringBuilder)
  nameWithType: SimpleType.getGenericSignature(StringBuilder)
  fullName: com.fasterxml.jackson.databind.type.SimpleType.getGenericSignature(java.lang.StringBuilder)
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class
  name: TypeBase.findSuperType(Class
  nameWithType: TypeBase.findSuperType(Class
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findSuperType(java.lang.Class
- uid: com.fasterxml.jackson.databind.type.SimpleType.constructUnsafe(java.lang.Class
  name: SimpleType.constructUnsafe(Class
  nameWithType: SimpleType.constructUnsafe(Class
  fullName: com.fasterxml.jackson.databind.type.SimpleType.constructUnsafe(java.lang.Class
- uid: com.fasterxml.jackson.databind.type.SimpleType._narrow(java.lang.Class
  name: SimpleType._narrow(Class
  nameWithType: SimpleType._narrow(Class
  fullName: com.fasterxml.jackson.databind.type.SimpleType._narrow(java.lang.Class
- uid: T>getValueHandler()
  name: T>getValueHandler()
  nameWithType: T>getValueHandler()
  fullName: T>getValueHandler()
- uid: com.fasterxml.jackson.databind.JavaType.
  name: JavaType.
  nameWithType: JavaType.
  fullName: com.fasterxml.jackson.databind.JavaType.
- uid: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class
  name: TypeBase._bogusSuperClass(Class
  nameWithType: TypeBase._bogusSuperClass(Class
  fullName: com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(java.lang.Class
- uid: T>getTypeHandler()
  name: T>getTypeHandler()
  nameWithType: T>getTypeHandler()
  fullName: T>getTypeHandler()
- uid: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class
  name: JavaType.forcedNarrowBy(Class
  nameWithType: JavaType.forcedNarrowBy(Class
  fullName: com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(java.lang.Class
- uid: com.fasterxml.jackson.databind.type.SimpleType.construct(java.lang.Class
  name: SimpleType.construct(Class
  nameWithType: SimpleType.construct(Class
  fullName: com.fasterxml.jackson.databind.type.SimpleType.construct(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class
  name: JavaType.isTypeOrSubTypeOf(Class
  nameWithType: JavaType.isTypeOrSubTypeOf(Class
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(java.lang.Class
- uid: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class
  name: JavaType.hasRawClass(Class
  nameWithType: JavaType.hasRawClass(Class
  fullName: com.fasterxml.jackson.databind.JavaType.hasRawClass(java.lang.Class
- uid: com.fasterxml.jackson.databind.type.SimpleType.refine(java.lang.Class
  name: SimpleType.refine(Class
  nameWithType: SimpleType.refine(Class
  fullName: com.fasterxml.jackson.databind.type.SimpleType.refine(java.lang.Class
- uid: ?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
  name: ?>,TypeBindings,JavaType,JavaType[])
  nameWithType: ?>,TypeBindings,JavaType,JavaType[])
  fullName: ?>,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])
- uid: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class
  name: JavaType.isTypeOrSuperTypeOf(Class
  nameWithType: JavaType.isTypeOrSuperTypeOf(Class
  fullName: com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(java.lang.Class
- uid: ?>,java.lang.StringBuilder,boolean)
  name: ?>,StringBuilder,boolean)
  nameWithType: ?>,StringBuilder,boolean)
  fullName: ?>,java.lang.StringBuilder,boolean)
- uid: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class
  name: TypeBase._classSignature(Class
  nameWithType: TypeBase._classSignature(Class
  fullName: com.fasterxml.jackson.databind.type.TypeBase._classSignature(java.lang.Class
- uid: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class
  name: TypeBase.findTypeParameters(Class
  nameWithType: TypeBase.findTypeParameters(Class
  fullName: com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(java.lang.Class
