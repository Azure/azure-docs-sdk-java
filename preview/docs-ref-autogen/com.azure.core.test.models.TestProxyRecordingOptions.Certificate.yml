### YamlMime:JavaType
uid: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate"
fullName: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate"
name: "TestProxyRecordingOptions.Certificate"
nameWithType: "TestProxyRecordingOptions.Certificate"
summary: "Model representing the certificate item object"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public static class **TestProxyRecordingOptions.Certificate**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.test.models.TestProxyRecordingOptions.Certificate?alt=com.azure.core.test.models.TestProxyRecordingOptions.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.Certificate()"
  fullName: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.Certificate()"
  name: "Certificate()"
  nameWithType: "TestProxyRecordingOptions.Certificate.Certificate()"
  syntax: "public Certificate()"
methods:
- uid: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "TestProxyRecordingOptions.Certificate.fromJson(JsonReader jsonReader)"
  summary: "Deserializes an instance of Certificate from the input JSON."
  modifiers:
  - "static"
  parameters:
  - description: "The JSON reader to deserialize the data from."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static TestProxyRecordingOptions.Certificate fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the JSON reader encounters an error while reading the JSON."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Deserializes an instance of Certificate from the input JSON."
  returns:
    description: "An instance of Certificate deserialized from the JSON."
    type: "<xref href=\"com.azure.core.test.models.TestProxyRecordingOptions.Certificate?alt=com.azure.core.test.models.TestProxyRecordingOptions.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.getPemKey()"
  fullName: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.getPemKey()"
  name: "getPemKey()"
  nameWithType: "TestProxyRecordingOptions.Certificate.getPemKey()"
  summary: "Get the cert pem key"
  syntax: "public String getPemKey()"
  desc: "Get the cert pem key"
  returns:
    description: "the cert pem key"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.getPemValue()"
  fullName: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.getPemValue()"
  name: "getPemValue()"
  nameWithType: "TestProxyRecordingOptions.Certificate.getPemValue()"
  summary: "Get the cert pem value"
  syntax: "public String getPemValue()"
  desc: "Get the cert pem value"
  returns:
    description: "the cert pem value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.setPemKey(java.lang.String)"
  fullName: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.setPemKey(String pemKey)"
  name: "setPemKey(String pemKey)"
  nameWithType: "TestProxyRecordingOptions.Certificate.setPemKey(String pemKey)"
  summary: "Get the cert pem key"
  parameters:
  - description: "the cert pem key"
    name: "pemKey"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public TestProxyRecordingOptions.Certificate setPemKey(String pemKey)"
  desc: "Get the cert pem key"
  returns:
    description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Certificate\"></xref> object"
    type: "<xref href=\"com.azure.core.test.models.TestProxyRecordingOptions.Certificate?alt=com.azure.core.test.models.TestProxyRecordingOptions.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.setPemValue(java.lang.String)"
  fullName: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.setPemValue(String pemValue)"
  name: "setPemValue(String pemValue)"
  nameWithType: "TestProxyRecordingOptions.Certificate.setPemValue(String pemValue)"
  summary: "Set the cert pem value"
  parameters:
  - description: "the cert pem value"
    name: "pemValue"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public TestProxyRecordingOptions.Certificate setPemValue(String pemValue)"
  desc: "Set the cert pem value"
  returns:
    description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Certificate\"></xref> object"
    type: "<xref href=\"com.azure.core.test.models.TestProxyRecordingOptions.Certificate?alt=com.azure.core.test.models.TestProxyRecordingOptions.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.core.test.models.TestProxyRecordingOptions.Certificate.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "TestProxyRecordingOptions.Certificate.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Model representing the certificate item object"
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.test.models.TestProxyRecordingOptions.Certificate?alt=com.azure.core.test.models.TestProxyRecordingOptions.Certificate&text=Certificate\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.core.test.models"
artifact: com.azure:azure-core-test:1.27.0-beta.2
