### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyClient.createEcKeyWithResponse*"
fullName: "com.azure.security.keyvault.keys.KeyClient.createEcKeyWithResponse"
name: "createEcKeyWithResponse"
nameWithType: "KeyClient.createEcKeyWithResponse"
members:
- uid: "com.azure.security.keyvault.keys.KeyClient.createEcKeyWithResponse(com.azure.security.keyvault.keys.models.CreateEcKeyOptions,com.azure.core.util.Context)"
  fullName: "com.azure.security.keyvault.keys.KeyClient.createEcKeyWithResponse(CreateEcKeyOptions createEcKeyOptions, Context context)"
  name: "createEcKeyWithResponse(CreateEcKeyOptions createEcKeyOptions, Context context)"
  nameWithType: "KeyClient.createEcKeyWithResponse(CreateEcKeyOptions createEcKeyOptions, Context context)"
  summary: "Creates a new Ec key and stores it in the key vault. The create Ec key operation can be used to create any Ec key type in key vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the `keys/create` permission.\n\nThe <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions\"></xref> parameter is required. The <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions.getCurveName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key curve\"></xref> can be optionally specified. If not specified, default value of <xref uid=\"com.azure.security.keyvault.keys.models.KeyCurveName.P_256\" data-throw-if-not-resolved=\"false\" data-raw-source=\"P-256\"></xref> is used by Azure Key Vault. The <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions.getExpiresOn*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"expires\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions.getNotBefore*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"notBefore\"></xref> values are optional. The <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions.isEnabled*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CreateEcKeyOptions#isEnabled()\"></xref> enabled\\} field is set to true by Azure Key Vault, if not specified.\n\nThe <xref uid=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions.getKeyType*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"keyType\"></xref> indicates the type of key to create. Possible values include: <xref uid=\"com.azure.security.keyvault.keys.models.KeyType.EC\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EC\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.KeyType.EC_HSM\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EC-HSM\"></xref>.\n\n**Code Samples**\n\nCreates a new EC key with P-384 web key curve. The key activates in one day and expires in one year. Prints out the details of the created key.\n\n```java\nCreateEcKeyOptions createEcKeyOptions = new CreateEcKeyOptions(\"keyName\")\n     .setCurveName(KeyCurveName.P_384)\n     .setNotBefore(OffsetDateTime.now().plusDays(1))\n     .setExpiresOn(OffsetDateTime.now().plusYears(1));\n KeyVaultKey ecKey = keyClient.createEcKeyWithResponse(createEcKeyOptions, new Context(key1, value1)).getValue();\n System.out.printf(\"Key is created with name %s and id %s %n\", ecKey.getName(), ecKey.getId());\n```"
  parameters:
  - description: "The key options object containing information about the ec key being created."
    name: "createEcKeyOptions"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.CreateEcKeyOptions?alt=com.azure.security.keyvault.keys.models.CreateEcKeyOptions&text=CreateEcKeyOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<KeyVaultKey> createEcKeyWithResponse(CreateEcKeyOptions createEcKeyOptions, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"created key\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.3.0-beta.3
