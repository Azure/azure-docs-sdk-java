### YamlMime:JavaType
uid: "com.azure.resourcemanager.batchai.BatchAIManager"
fullName: "com.azure.resourcemanager.batchai.BatchAIManager"
name: "BatchAIManager"
nameWithType: "BatchAIManager"
summary: "Entry point to Batch<wbr>AIManager."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BatchAIManager"
methods:
- uid: "com.azure.resourcemanager.batchai.BatchAIManager.authenticate(com.azure.core.credential.TokenCredential,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.batchai.BatchAIManager.authenticate(TokenCredential credential, AzureProfile profile)"
  name: "authenticate(TokenCredential credential, AzureProfile profile)"
  nameWithType: "BatchAIManager.authenticate(TokenCredential credential, AzureProfile profile)"
  summary: "Creates an instance of BatchAI service API entry point."
  modifiers:
  - "static"
  parameters:
  - description: "the credential to use."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static BatchAIManager authenticate(TokenCredential credential, AzureProfile profile)"
  desc: "Creates an instance of BatchAI service API entry point."
  returns:
    description: "the BatchAI service API instance."
    type: "<xref href=\"com.azure.resourcemanager.batchai.BatchAIManager?alt=com.azure.resourcemanager.batchai.BatchAIManager&text=BatchAIManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.BatchAIManager.clusters()"
  fullName: "com.azure.resourcemanager.batchai.BatchAIManager.clusters()"
  name: "clusters()"
  nameWithType: "BatchAIManager.clusters()"
  syntax: "public Clusters clusters()"
  returns:
    description: "Resource collection API of Clusters."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.Clusters?alt=com.azure.resourcemanager.batchai.models.Clusters&text=Clusters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.BatchAIManager.configure()"
  fullName: "com.azure.resourcemanager.batchai.BatchAIManager.configure()"
  name: "configure()"
  nameWithType: "BatchAIManager.configure()"
  summary: "Gets a Configurable instance that can be used to create Batch<wbr>AIManager with optional configuration."
  modifiers:
  - "static"
  syntax: "public static BatchAIManager.Configurable configure()"
  desc: "Gets a Configurable instance that can be used to create BatchAIManager with optional configuration."
  returns:
    description: "the Configurable instance allowing configurations."
    type: "<xref href=\"com.azure.resourcemanager.batchai.BatchAIManager.Configurable?alt=com.azure.resourcemanager.batchai.BatchAIManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.BatchAIManager.experiments()"
  fullName: "com.azure.resourcemanager.batchai.BatchAIManager.experiments()"
  name: "experiments()"
  nameWithType: "BatchAIManager.experiments()"
  syntax: "public Experiments experiments()"
  returns:
    description: "Resource collection API of Experiments."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.Experiments?alt=com.azure.resourcemanager.batchai.models.Experiments&text=Experiments\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.BatchAIManager.fileServers()"
  fullName: "com.azure.resourcemanager.batchai.BatchAIManager.fileServers()"
  name: "fileServers()"
  nameWithType: "BatchAIManager.fileServers()"
  syntax: "public FileServers fileServers()"
  returns:
    description: "Resource collection API of FileServers."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.FileServers?alt=com.azure.resourcemanager.batchai.models.FileServers&text=FileServers\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.BatchAIManager.jobs()"
  fullName: "com.azure.resourcemanager.batchai.BatchAIManager.jobs()"
  name: "jobs()"
  nameWithType: "BatchAIManager.jobs()"
  syntax: "public Jobs jobs()"
  returns:
    description: "Resource collection API of Jobs."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.Jobs?alt=com.azure.resourcemanager.batchai.models.Jobs&text=Jobs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.BatchAIManager.operations()"
  fullName: "com.azure.resourcemanager.batchai.BatchAIManager.operations()"
  name: "operations()"
  nameWithType: "BatchAIManager.operations()"
  syntax: "public Operations operations()"
  returns:
    description: "Resource collection API of Operations."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.Operations?alt=com.azure.resourcemanager.batchai.models.Operations&text=Operations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.BatchAIManager.serviceClient()"
  fullName: "com.azure.resourcemanager.batchai.BatchAIManager.serviceClient()"
  name: "serviceClient()"
  nameWithType: "BatchAIManager.serviceClient()"
  syntax: "public BatchAI serviceClient()"
  returns:
    description: "Wrapped service client BatchAI providing direct access to the underlying auto-generated API\n     implementation, based on Azure REST API."
    type: "<xref href=\"com.azure.resourcemanager.batchai.fluent.BatchAI?alt=com.azure.resourcemanager.batchai.fluent.BatchAI&text=BatchAI\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.BatchAIManager.usages()"
  fullName: "com.azure.resourcemanager.batchai.BatchAIManager.usages()"
  name: "usages()"
  nameWithType: "BatchAIManager.usages()"
  syntax: "public Usages usages()"
  returns:
    description: "Resource collection API of Usages."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.Usages?alt=com.azure.resourcemanager.batchai.models.Usages&text=Usages\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batchai.BatchAIManager.workspaces()"
  fullName: "com.azure.resourcemanager.batchai.BatchAIManager.workspaces()"
  name: "workspaces()"
  nameWithType: "BatchAIManager.workspaces()"
  syntax: "public Workspaces workspaces()"
  returns:
    description: "Resource collection API of Workspaces."
    type: "<xref href=\"com.azure.resourcemanager.batchai.models.Workspaces?alt=com.azure.resourcemanager.batchai.models.Workspaces&text=Workspaces\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Entry point to BatchAIManager. The Azure BatchAI Management API."
metadata: {}
package: "com.azure.resourcemanager.batchai"
artifact: com.azure.resourcemanager:azure-resourcemanager-batchai:1.0.0-beta.1
