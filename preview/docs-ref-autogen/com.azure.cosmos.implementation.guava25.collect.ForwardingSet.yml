### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet
  id: ForwardingSet
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.ForwardingSet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardEquals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardHashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardRemoveAll(java.util.Collection<?>)
  langs:
  - java
  name: ForwardingSet<E>
  nameWithType: ForwardingSet<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A set which forwards all its method calls to another set. Subclasses should override one or more methods to modify the behavior of the backing set as desired per the [decorator pattern][].


    **Warning:** The methods of `ForwardingSet` forward **indiscriminately** to the methods of the delegate. For example, overriding <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.add" data-throw-if-not-resolved="false">#add</xref> alone **will not** change the behavior of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.addAll" data-throw-if-not-resolved="false">#addAll</xref>, which can lead to unexpected behavior. In this case, you should override `addAll` as well, either providing your own implementation, or delegating to the provided `standardAddAll` method.


    **`default` method warning:** This class does *not* forward calls to `default` methods. Instead, it inherits their default implementations. When those implementations invoke methods, they invoke methods on the `ForwardingSet`.


    The `standard` methods are not guaranteed to be thread-safe, even when all of the methods that they depend on are thread-safe.



    [decorator pattern]: http://en.wikipedia.org/wiki/Decorator_pattern
  syntax:
    content: public abstract class ForwardingSet<E> extends ForwardingCollection<E> implements Set<E>
    typeParameters:
    - id: E
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  implements:
  - java.util.Set<E>
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.ForwardingSet()
  id: ForwardingSet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSet
  langs:
  - java
  name: ForwardingSet()
  nameWithType: ForwardingSet<E>.ForwardingSet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.ForwardingSet()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.ForwardingSet*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Constructor for use by subclasses.
  syntax:
    content: protected ForwardingSet()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate()
  id: delegate()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSet
  langs:
  - java
  name: delegate()
  nameWithType: ForwardingSet<E>.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.delegate()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the backing delegate instance that methods are forwarded to. Abstract subclasses generally override this method with an abstract method that has a more specific return type, such as <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate" data-throw-if-not-resolved="false">ForwardingSet#delegate</xref>. Concrete subclasses override this method to supply the instance being decorated.
  syntax:
    content: protected abstract Set<E> delegate()
    return:
      type: java.util.Set<E>
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSet
  langs:
  - java
  name: equals(Object object)
  nameWithType: ForwardingSet<E>.equals(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.equals(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.equals*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public boolean equals(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.hashCode()
  id: hashCode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSet
  langs:
  - java
  name: hashCode()
  nameWithType: ForwardingSet<E>.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.hashCode()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.hashCode*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardEquals(java.lang.Object)
  id: standardEquals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSet
  langs:
  - java
  name: standardEquals(Object object)
  nameWithType: ForwardingSet<E>.standardEquals(Object object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.standardEquals(Object object)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardEquals*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.equals" data-throw-if-not-resolved="false">#equals</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.size" data-throw-if-not-resolved="false">#size</xref> and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.containsAll" data-throw-if-not-resolved="false">#containsAll</xref>. If you override either of those methods, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.equals" data-throw-if-not-resolved="false">#equals</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardEquals(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardHashCode()
  id: standardHashCode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSet
  langs:
  - java
  name: standardHashCode()
  nameWithType: ForwardingSet<E>.standardHashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.standardHashCode()
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardHashCode*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.hashCode" data-throw-if-not-resolved="false">#hashCode</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.iterator" data-throw-if-not-resolved="false">#iterator</xref>. If you override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.iterator" data-throw-if-not-resolved="false">#iterator</xref>, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.equals" data-throw-if-not-resolved="false">#equals</xref> to forward to this implementation.
  syntax:
    content: protected int standardHashCode()
    return:
      type: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardRemoveAll(java.util.Collection<?>)
  id: standardRemoveAll(java.util.Collection<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.ForwardingSet
  langs:
  - java
  name: standardRemoveAll(Collection<?> collection)
  nameWithType: ForwardingSet<E>.standardRemoveAll(Collection<?> collection)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.standardRemoveAll(Collection<?> collection)
  overload: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardRemoveAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: A sensible definition of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.removeAll" data-throw-if-not-resolved="false">#removeAll</xref> in terms of <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.iterator" data-throw-if-not-resolved="false">#iterator</xref> and <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.remove" data-throw-if-not-resolved="false">#remove</xref>. If you override `iterator` or `remove`, you may wish to override <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.removeAll" data-throw-if-not-resolved="false">#removeAll</xref> to forward to this implementation.
  syntax:
    content: protected boolean standardRemoveAll(Collection<?> collection)
    parameters:
    - id: collection
      type: java.util.Collection<?>
    return:
      type: boolean
references:
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.ForwardingSet*
  name: ForwardingSet
  nameWithType: ForwardingSet<E>.ForwardingSet
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.ForwardingSet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Set<E>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate*
  name: delegate
  nameWithType: ForwardingSet<E>.delegate
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.delegate
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.equals*
  name: equals
  nameWithType: ForwardingSet<E>.equals
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.equals
  package: com.azure.cosmos.implementation.guava25.collect
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.hashCode*
  name: hashCode
  nameWithType: ForwardingSet<E>.hashCode
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.hashCode
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Collection<?>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardRemoveAll*
  name: standardRemoveAll
  nameWithType: ForwardingSet<E>.standardRemoveAll
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.standardRemoveAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardEquals*
  name: standardEquals
  nameWithType: ForwardingSet<E>.standardEquals
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.standardEquals
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingSet.standardHashCode*
  name: standardHashCode
  nameWithType: ForwardingSet<E>.standardHashCode
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingSet<E>.standardHashCode
  package: com.azure.cosmos.implementation.guava25.collect
- uid: E
  name: E
  nameWithType: E
  fullName: E
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>
  name: ForwardingCollection<E>
  nameWithType: ForwardingCollection<E>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection<E>
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
  name: ForwardingCollection.addAll(Collection<? extends E>)
  nameWithType: ForwardingCollection.addAll(Collection<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection<? extends E>)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
  name: ForwardingCollection.remove(Object)
  nameWithType: ForwardingCollection.remove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.remove(java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
  name: ForwardingCollection.standardToString()
  nameWithType: ForwardingCollection.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
  name: ForwardingCollection.standardContainsAll(Collection<?>)
  nameWithType: ForwardingCollection.standardContainsAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.delegate()
  name: ForwardingCollection.delegate()
  nameWithType: ForwardingCollection.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.delegate()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
  name: ForwardingCollection.add(E)
  nameWithType: ForwardingCollection.add(E)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.add(E)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
  name: ForwardingCollection.standardClear()
  nameWithType: ForwardingCollection.standardClear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardClear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
  name: ForwardingCollection.contains(Object)
  nameWithType: ForwardingCollection.contains(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.contains(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
  name: ForwardingCollection.retainAll(Collection<?>)
  nameWithType: ForwardingCollection.retainAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
  name: ForwardingCollection.standardToArray()
  nameWithType: ForwardingCollection.standardToArray()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardToArray()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
  name: ForwardingCollection.containsAll(Collection<?>)
  nameWithType: ForwardingCollection.containsAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection<?>)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
  name: ForwardingCollection.standardRetainAll(Collection<?>)
  nameWithType: ForwardingCollection.standardRetainAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection<?>)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
  name: ForwardingCollection.isEmpty()
  nameWithType: ForwardingCollection.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.isEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
  name: ForwardingCollection.clear()
  nameWithType: ForwardingCollection.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.clear()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
  name: ForwardingCollection.<T>toArray(T[])
  nameWithType: ForwardingCollection.<T>toArray(T[])
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>toArray(T[])
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
  name: ForwardingCollection.standardAddAll(Collection<? extends E>)
  nameWithType: ForwardingCollection.standardAddAll(Collection<? extends E>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection<? extends E>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
  name: ForwardingCollection.size()
  nameWithType: ForwardingCollection.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.size()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
  name: ForwardingCollection.toArray()
  nameWithType: ForwardingCollection.toArray()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.toArray()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
  name: ForwardingCollection.standardRemove(Object)
  nameWithType: ForwardingCollection.standardRemove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
  name: ForwardingCollection.removeAll(Collection<?>)
  nameWithType: ForwardingCollection.removeAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)
  name: ForwardingCollection.standardRemoveAll(Collection<?>)
  nameWithType: ForwardingCollection.standardRemoveAll(Collection<?>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection<?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
  name: ForwardingCollection.standardIsEmpty()
  nameWithType: ForwardingCollection.standardIsEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardIsEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
  name: ForwardingCollection.iterator()
  nameWithType: ForwardingCollection.iterator()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.iterator()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  name: ForwardingObject.toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
  name: ForwardingCollection.standardContains(Object)
  nameWithType: ForwardingCollection.standardContains(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContains(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
  name: ForwardingCollection.<T>standardToArray(T[])
  nameWithType: ForwardingCollection.<T>standardToArray(T[])
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.<T>standardToArray(T[])
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
  name: ForwardingCollection
  nameWithType: ForwardingCollection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection
- uid: '? extends E>)'
  name: '? extends E>)'
  nameWithType: '? extends E>)'
  fullName: '? extends E>)'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection
  name: ForwardingCollection.addAll(Collection
  nameWithType: ForwardingCollection.addAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.addAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection
  name: ForwardingCollection.standardContainsAll(Collection
  nameWithType: ForwardingCollection.standardContainsAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardContainsAll(java.util.Collection
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection
  name: ForwardingCollection.retainAll(Collection
  nameWithType: ForwardingCollection.retainAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.retainAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection
  name: ForwardingCollection.containsAll(Collection
  nameWithType: ForwardingCollection.containsAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.containsAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection
  name: ForwardingCollection.standardRetainAll(Collection
  nameWithType: ForwardingCollection.standardRetainAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRetainAll(java.util.Collection
- uid: T>toArray(T[])
  name: T>toArray(T[])
  nameWithType: T>toArray(T[])
  fullName: T>toArray(T[])
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.
  name: ForwardingCollection.
  nameWithType: ForwardingCollection.
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection
  name: ForwardingCollection.standardAddAll(Collection
  nameWithType: ForwardingCollection.standardAddAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardAddAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection
  name: ForwardingCollection.removeAll(Collection
  nameWithType: ForwardingCollection.removeAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.removeAll(java.util.Collection
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection
  name: ForwardingCollection.standardRemoveAll(Collection
  nameWithType: ForwardingCollection.standardRemoveAll(Collection
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingCollection.standardRemoveAll(java.util.Collection
- uid: T>standardToArray(T[])
  name: T>standardToArray(T[])
  nameWithType: T>standardToArray(T[])
  fullName: T>standardToArray(T[])
