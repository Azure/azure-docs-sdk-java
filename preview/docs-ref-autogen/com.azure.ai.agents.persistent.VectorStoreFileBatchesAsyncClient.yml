### YamlMime:JavaType
uid: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient"
fullName: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient"
name: "VectorStoreFileBatchesAsyncClient"
nameWithType: "VectorStoreFileBatchesAsyncClient"
summary: "Initializes a new instance of the asynchronous Persistent<wbr>Agents<wbr>Administration<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **VectorStoreFileBatchesAsyncClient**"
methods:
- uid: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.cancelVectorStoreFileBatch(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.cancelVectorStoreFileBatch(String vectorStoreId, String batchId)"
  name: "cancelVectorStoreFileBatch(String vectorStoreId, String batchId)"
  nameWithType: "VectorStoreFileBatchesAsyncClient.cancelVectorStoreFileBatch(String vectorStoreId, String batchId)"
  summary: "Cancel a vector store file batch."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the file batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<VectorStoreFileBatch> cancelVectorStoreFileBatch(String vectorStoreId, String batchId)"
  desc: "Cancel a vector store file batch. This attempts to cancel the processing of files in this batch as soon as possible."
  returns:
    description: "a batch of files attached to a vector store on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFileBatch?alt=com.azure.ai.agents.persistent.models.VectorStoreFileBatch&text=VectorStoreFileBatch\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.cancelVectorStoreFileBatchWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.cancelVectorStoreFileBatchWithResponse(String vectorStoreId, String batchId, RequestOptions requestOptions)"
  name: "cancelVectorStoreFileBatchWithResponse(String vectorStoreId, String batchId, RequestOptions requestOptions)"
  nameWithType: "VectorStoreFileBatchesAsyncClient.cancelVectorStoreFileBatchWithResponse(String vectorStoreId, String batchId, RequestOptions requestOptions)"
  summary: "Cancel a vector store file batch."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the file batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> cancelVectorStoreFileBatchWithResponse(String vectorStoreId, String batchId, RequestOptions requestOptions)"
  desc: "Cancel a vector store file batch. This attempts to cancel the processing of files in this batch as soon as possible.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     vector_store_id: String (Required)\n     status: String(in_progress/completed/cancelled/failed) (Required)\n     file_counts (Required): {\n         in_progress: int (Required)\n         completed: int (Required)\n         failed: int (Required)\n         cancelled: int (Required)\n         total: int (Required)\n     }\n }\n```"
  returns:
    description: "a batch of files attached to a vector store along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.createVectorStoreFileBatch(java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.createVectorStoreFileBatch(String vectorStoreId)"
  name: "createVectorStoreFileBatch(String vectorStoreId)"
  nameWithType: "VectorStoreFileBatchesAsyncClient.createVectorStoreFileBatch(String vectorStoreId)"
  summary: "Create a vector store file batch."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<VectorStoreFileBatch> createVectorStoreFileBatch(String vectorStoreId)"
  desc: "Create a vector store file batch."
  returns:
    description: "a batch of files attached to a vector store on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFileBatch?alt=com.azure.ai.agents.persistent.models.VectorStoreFileBatch&text=VectorStoreFileBatch\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.createVectorStoreFileBatch(java.lang.String,java.util.List<java.lang.String>,java.util.List<com.azure.ai.agents.persistent.models.VectorStoreDataSource>,com.azure.ai.agents.persistent.models.VectorStoreChunkingStrategyRequest)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.createVectorStoreFileBatch(String vectorStoreId, List<String> fileIds, List<VectorStoreDataSource> dataSources, VectorStoreChunkingStrategyRequest chunkingStrategy)"
  name: "createVectorStoreFileBatch(String vectorStoreId, List<String> fileIds, List<VectorStoreDataSource> dataSources, VectorStoreChunkingStrategyRequest chunkingStrategy)"
  nameWithType: "VectorStoreFileBatchesAsyncClient.createVectorStoreFileBatch(String vectorStoreId, List<String> fileIds, List<VectorStoreDataSource> dataSources, VectorStoreChunkingStrategyRequest chunkingStrategy)"
  summary: "Create a vector store file batch."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "List of file identifiers."
    name: "fileIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "List of Azure assets."
    name: "dataSources"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreDataSource?alt=com.azure.ai.agents.persistent.models.VectorStoreDataSource&text=VectorStoreDataSource\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The chunking strategy used to chunk the file(s). If not set, will use the auto strategy."
    name: "chunkingStrategy"
    type: "<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreChunkingStrategyRequest?alt=com.azure.ai.agents.persistent.models.VectorStoreChunkingStrategyRequest&text=VectorStoreChunkingStrategyRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<VectorStoreFileBatch> createVectorStoreFileBatch(String vectorStoreId, List<String> fileIds, List<VectorStoreDataSource> dataSources, VectorStoreChunkingStrategyRequest chunkingStrategy)"
  desc: "Create a vector store file batch."
  returns:
    description: "a batch of files attached to a vector store on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFileBatch?alt=com.azure.ai.agents.persistent.models.VectorStoreFileBatch&text=VectorStoreFileBatch\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.createVectorStoreFileBatchWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.createVectorStoreFileBatchWithResponse(String vectorStoreId, BinaryData createVectorStoreFileBatchRequest, RequestOptions requestOptions)"
  name: "createVectorStoreFileBatchWithResponse(String vectorStoreId, BinaryData createVectorStoreFileBatchRequest, RequestOptions requestOptions)"
  nameWithType: "VectorStoreFileBatchesAsyncClient.createVectorStoreFileBatchWithResponse(String vectorStoreId, BinaryData createVectorStoreFileBatchRequest, RequestOptions requestOptions)"
  summary: "Create a vector store file batch."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The createVectorStoreFileBatchRequest parameter."
    name: "createVectorStoreFileBatchRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> createVectorStoreFileBatchWithResponse(String vectorStoreId, BinaryData createVectorStoreFileBatchRequest, RequestOptions requestOptions)"
  desc: "Create a vector store file batch.\n\n**Request Body Schema**\n\n```java\n{\n     file_ids (Optional): [\n         String (Optional)\n     ]\n     data_sources (Optional): [\n          (Optional){\n             uri: String (Required)\n             type: String(uri_asset/id_asset) (Required)\n         }\n     ]\n     chunking_strategy (Optional): {\n         type: String(auto/static) (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     vector_store_id: String (Required)\n     status: String(in_progress/completed/cancelled/failed) (Required)\n     file_counts (Required): {\n         in_progress: int (Required)\n         completed: int (Required)\n         failed: int (Required)\n         cancelled: int (Required)\n         total: int (Required)\n     }\n }\n```"
  returns:
    description: "a batch of files attached to a vector store along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.getVectorStoreFileBatch(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.getVectorStoreFileBatch(String vectorStoreId, String batchId)"
  name: "getVectorStoreFileBatch(String vectorStoreId, String batchId)"
  nameWithType: "VectorStoreFileBatchesAsyncClient.getVectorStoreFileBatch(String vectorStoreId, String batchId)"
  summary: "Retrieve a vector store file batch."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the file batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<VectorStoreFileBatch> getVectorStoreFileBatch(String vectorStoreId, String batchId)"
  desc: "Retrieve a vector store file batch."
  returns:
    description: "a batch of files attached to a vector store on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFileBatch?alt=com.azure.ai.agents.persistent.models.VectorStoreFileBatch&text=VectorStoreFileBatch\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.getVectorStoreFileBatchWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.getVectorStoreFileBatchWithResponse(String vectorStoreId, String batchId, RequestOptions requestOptions)"
  name: "getVectorStoreFileBatchWithResponse(String vectorStoreId, String batchId, RequestOptions requestOptions)"
  nameWithType: "VectorStoreFileBatchesAsyncClient.getVectorStoreFileBatchWithResponse(String vectorStoreId, String batchId, RequestOptions requestOptions)"
  summary: "Retrieve a vector store file batch."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the file batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getVectorStoreFileBatchWithResponse(String vectorStoreId, String batchId, RequestOptions requestOptions)"
  desc: "Retrieve a vector store file batch.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     created_at: long (Required)\n     vector_store_id: String (Required)\n     status: String(in_progress/completed/cancelled/failed) (Required)\n     file_counts (Required): {\n         in_progress: int (Required)\n         completed: int (Required)\n         failed: int (Required)\n         cancelled: int (Required)\n         total: int (Required)\n     }\n }\n```"
  returns:
    description: "a batch of files attached to a vector store along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.listVectorStoreFileBatchFiles(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.listVectorStoreFileBatchFiles(String vectorStoreId, String batchId)"
  name: "listVectorStoreFileBatchFiles(String vectorStoreId, String batchId)"
  nameWithType: "VectorStoreFileBatchesAsyncClient.listVectorStoreFileBatchFiles(String vectorStoreId, String batchId)"
  summary: "Returns a list of vector store files in a batch."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the file batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<VectorStoreFile> listVectorStoreFileBatchFiles(String vectorStoreId, String batchId)"
  desc: "Returns a list of vector store files in a batch."
  returns:
    description: "the response data for a requested list of items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFile?alt=com.azure.ai.agents.persistent.models.VectorStoreFile&text=VectorStoreFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.listVectorStoreFileBatchFiles(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.listVectorStoreFileBatchFiles(String vectorStoreId, String batchId, RequestOptions requestOptions)"
  name: "listVectorStoreFileBatchFiles(String vectorStoreId, String batchId, RequestOptions requestOptions)"
  nameWithType: "VectorStoreFileBatchesAsyncClient.listVectorStoreFileBatchFiles(String vectorStoreId, String batchId, RequestOptions requestOptions)"
  summary: "Returns a list of vector store files in a batch."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the file batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listVectorStoreFileBatchFiles(String vectorStoreId, String batchId, RequestOptions requestOptions)"
  desc: "Returns a list of vector store files in a batch.\n\n**Query Parameters**\n\n    | ------ | ------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name   | Type    | Required | Description                                                                                                                                                                                                                                                                           |\n    | filter | String  | No       | Filter by file status. Allowed values: \"in\\_progress\", \"completed\", \"failed\", \"cancelled\".                                                                                                                                                                                            |\n    | limit  | Integer | No       | A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.                                                                                                                                                                            |\n    | order  | String  | No       | Sort order by the created\\_at timestamp of the objects. asc for ascending order and desc for descending order. Allowed values: \"asc\", \"desc\".                                                                                                                                         |\n    | after  | String  | No       | A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include after=obj\\_foo in order to fetch the next page of the list.       |\n    | before | String  | No       | A cursor for use in pagination. before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj\\_foo, your subsequent call can include before=obj\\_foo in order to fetch the previous page of the list. |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     usage_bytes: int (Required)\n     created_at: long (Required)\n     vector_store_id: String (Required)\n     status: String(in_progress/completed/failed/cancelled) (Required)\n     last_error (Required): {\n         code: String(server_error/invalid_file/unsupported_file) (Required)\n         message: String (Required)\n     }\n     chunking_strategy (Required): {\n         type: String(other/static) (Required)\n     }\n }\n```"
  returns:
    description: "the response data for a requested list of items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.listVectorStoreFileBatchFiles(java.lang.String,java.lang.String,com.azure.ai.agents.persistent.models.VectorStoreFileStatusFilter,java.lang.Integer,com.azure.ai.agents.persistent.models.ListSortOrder,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.agents.persistent.VectorStoreFileBatchesAsyncClient.listVectorStoreFileBatchFiles(String vectorStoreId, String batchId, VectorStoreFileStatusFilter filter, Integer limit, ListSortOrder order, String after, String before)"
  name: "listVectorStoreFileBatchFiles(String vectorStoreId, String batchId, VectorStoreFileStatusFilter filter, Integer limit, ListSortOrder order, String after, String before)"
  nameWithType: "VectorStoreFileBatchesAsyncClient.listVectorStoreFileBatchFiles(String vectorStoreId, String batchId, VectorStoreFileStatusFilter filter, Integer limit, ListSortOrder order, String after, String before)"
  summary: "Returns a list of vector store files in a batch."
  parameters:
  - description: "Identifier of the vector store."
    name: "vectorStoreId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Identifier of the file batch."
    name: "batchId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Filter by file status."
    name: "filter"
    type: "<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFileStatusFilter?alt=com.azure.ai.agents.persistent.models.VectorStoreFileStatusFilter&text=VectorStoreFileStatusFilter\" data-throw-if-not-resolved=\"False\" />"
  - description: "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default\n is 20."
    name: "limit"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "Sort order by the created_at timestamp of the objects. asc for ascending order and desc for\n descending order."
    name: "order"
    type: "<xref href=\"com.azure.ai.agents.persistent.models.ListSortOrder?alt=com.azure.ai.agents.persistent.models.ListSortOrder&text=ListSortOrder\" data-throw-if-not-resolved=\"False\" />"
  - description: "A cursor for use in pagination. after is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include after=obj_foo in order to fetch the next page of the list."
    name: "after"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "A cursor for use in pagination. before is an object ID that defines your place in the list. For\n instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can\n include before=obj_foo in order to fetch the previous page of the list."
    name: "before"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedFlux<VectorStoreFile> listVectorStoreFileBatchFiles(String vectorStoreId, String batchId, VectorStoreFileStatusFilter filter, Integer limit, ListSortOrder order, String after, String before)"
  desc: "Returns a list of vector store files in a batch."
  returns:
    description: "the response data for a requested list of items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.agents.persistent.models.VectorStoreFile?alt=com.azure.ai.agents.persistent.models.VectorStoreFile&text=VectorStoreFile\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous PersistentAgentsAdministrationClient type."
metadata: {}
package: "com.azure.ai.agents.persistent"
artifact: com.azure:azure-ai-agents-persistent:1.0.0-beta.1
