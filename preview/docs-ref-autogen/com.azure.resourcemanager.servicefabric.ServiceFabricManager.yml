### YamlMime:JavaType
uid: "com.azure.resourcemanager.servicefabric.ServiceFabricManager"
fullName: "com.azure.resourcemanager.servicefabric.ServiceFabricManager"
name: "ServiceFabricManager"
nameWithType: "ServiceFabricManager"
summary: "Entry point to Service<wbr>Fabric<wbr>Manager."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServiceFabricManager"
methods:
- uid: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.applicationTypeVersions()"
  fullName: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.applicationTypeVersions()"
  name: "applicationTypeVersions()"
  nameWithType: "ServiceFabricManager.applicationTypeVersions()"
  syntax: "public ApplicationTypeVersions applicationTypeVersions()"
  returns:
    description: "Resource collection API of ApplicationTypeVersions."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersions?alt=com.azure.resourcemanager.servicefabric.models.ApplicationTypeVersions&text=ApplicationTypeVersions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.applicationTypes()"
  fullName: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.applicationTypes()"
  name: "applicationTypes()"
  nameWithType: "ServiceFabricManager.applicationTypes()"
  syntax: "public ApplicationTypes applicationTypes()"
  returns:
    description: "Resource collection API of ApplicationTypes."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.ApplicationTypes?alt=com.azure.resourcemanager.servicefabric.models.ApplicationTypes&text=ApplicationTypes\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.applications()"
  fullName: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.applications()"
  name: "applications()"
  nameWithType: "ServiceFabricManager.applications()"
  syntax: "public Applications applications()"
  returns:
    description: "Resource collection API of Applications."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.Applications?alt=com.azure.resourcemanager.servicefabric.models.Applications&text=Applications\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.authenticate(com.azure.core.credential.TokenCredential,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.authenticate(TokenCredential credential, AzureProfile profile)"
  name: "authenticate(TokenCredential credential, AzureProfile profile)"
  nameWithType: "ServiceFabricManager.authenticate(TokenCredential credential, AzureProfile profile)"
  summary: "Creates an instance of Service<wbr>Fabric service API entry point."
  modifiers:
  - "static"
  parameters:
  - description: "the credential to use."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ServiceFabricManager authenticate(TokenCredential credential, AzureProfile profile)"
  desc: "Creates an instance of ServiceFabric service API entry point."
  returns:
    description: "the ServiceFabric service API instance."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.ServiceFabricManager?alt=com.azure.resourcemanager.servicefabric.ServiceFabricManager&text=ServiceFabricManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.clusterVersions()"
  fullName: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.clusterVersions()"
  name: "clusterVersions()"
  nameWithType: "ServiceFabricManager.clusterVersions()"
  syntax: "public ClusterVersions clusterVersions()"
  returns:
    description: "Resource collection API of ClusterVersions."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.ClusterVersions?alt=com.azure.resourcemanager.servicefabric.models.ClusterVersions&text=ClusterVersions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.clusters()"
  fullName: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.clusters()"
  name: "clusters()"
  nameWithType: "ServiceFabricManager.clusters()"
  syntax: "public Clusters clusters()"
  returns:
    description: "Resource collection API of Clusters."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.Clusters?alt=com.azure.resourcemanager.servicefabric.models.Clusters&text=Clusters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.configure()"
  fullName: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.configure()"
  name: "configure()"
  nameWithType: "ServiceFabricManager.configure()"
  summary: "Gets a Configurable instance that can be used to create Service<wbr>Fabric<wbr>Manager with optional configuration."
  modifiers:
  - "static"
  syntax: "public static ServiceFabricManager.Configurable configure()"
  desc: "Gets a Configurable instance that can be used to create ServiceFabricManager with optional configuration."
  returns:
    description: "the Configurable instance allowing configurations."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.ServiceFabricManager.Configurable?alt=com.azure.resourcemanager.servicefabric.ServiceFabricManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.operations()"
  fullName: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.operations()"
  name: "operations()"
  nameWithType: "ServiceFabricManager.operations()"
  syntax: "public Operations operations()"
  returns:
    description: "Resource collection API of Operations."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.Operations?alt=com.azure.resourcemanager.servicefabric.models.Operations&text=Operations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.serviceClient()"
  fullName: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.serviceClient()"
  name: "serviceClient()"
  nameWithType: "ServiceFabricManager.serviceClient()"
  syntax: "public ServiceFabricManagementClient serviceClient()"
  returns:
    description: "Wrapped service client ServiceFabricManagementClient providing direct access to the underlying\n     auto-generated API implementation, based on Azure REST API."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.fluent.ServiceFabricManagementClient?alt=com.azure.resourcemanager.servicefabric.fluent.ServiceFabricManagementClient&text=ServiceFabricManagementClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.services()"
  fullName: "com.azure.resourcemanager.servicefabric.ServiceFabricManager.services()"
  name: "services()"
  nameWithType: "ServiceFabricManager.services()"
  syntax: "public Services services()"
  returns:
    description: "Resource collection API of Services."
    type: "<xref href=\"com.azure.resourcemanager.servicefabric.models.Services?alt=com.azure.resourcemanager.servicefabric.models.Services&text=Services\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Entry point to ServiceFabricManager. Service Fabric Management Client."
metadata: {}
package: "com.azure.resourcemanager.servicefabric"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicefabric:1.0.0-beta.2
