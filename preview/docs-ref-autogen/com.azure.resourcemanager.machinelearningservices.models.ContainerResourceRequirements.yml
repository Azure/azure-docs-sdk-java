### YamlMime:JavaType
uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements"
fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements"
name: "ContainerResourceRequirements"
nameWithType: "ContainerResourceRequirements"
summary: "The resource requirements for the container (cpu and memory)."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ContainerResourceRequirements"
constructors:
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.ContainerResourceRequirements()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.ContainerResourceRequirements()"
  name: "ContainerResourceRequirements()"
  nameWithType: "ContainerResourceRequirements.ContainerResourceRequirements()"
  syntax: "public ContainerResourceRequirements()"
methods:
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.cpu()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.cpu()"
  name: "cpu()"
  nameWithType: "ContainerResourceRequirements.cpu()"
  summary: "Get the cpu property: The minimum amount of CPU cores to be used by the container."
  syntax: "public Double cpu()"
  desc: "Get the cpu property: The minimum amount of CPU cores to be used by the container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/."
  returns:
    description: "the cpu value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.cpuLimit()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.cpuLimit()"
  name: "cpuLimit()"
  nameWithType: "ContainerResourceRequirements.cpuLimit()"
  summary: "Get the cpu<wbr>Limit property: The maximum amount of CPU cores allowed to be used by the container."
  syntax: "public Double cpuLimit()"
  desc: "Get the cpuLimit property: The maximum amount of CPU cores allowed to be used by the container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/."
  returns:
    description: "the cpuLimit value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.fpga()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.fpga()"
  name: "fpga()"
  nameWithType: "ContainerResourceRequirements.fpga()"
  summary: "Get the fpga property: The number of FPGA PCIE devices exposed to the container."
  syntax: "public Integer fpga()"
  desc: "Get the fpga property: The number of FPGA PCIE devices exposed to the container. Must be multiple of 2."
  returns:
    description: "the fpga value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.gpu()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.gpu()"
  name: "gpu()"
  nameWithType: "ContainerResourceRequirements.gpu()"
  summary: "Get the gpu property: The number of GPU cores in the container."
  syntax: "public Integer gpu()"
  desc: "Get the gpu property: The number of GPU cores in the container."
  returns:
    description: "the gpu value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.memoryInGB()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.memoryInGB()"
  name: "memoryInGB()"
  nameWithType: "ContainerResourceRequirements.memoryInGB()"
  summary: "Get the memory<wbr>InGB property: The minimum amount of memory (in GB) to be used by the container."
  syntax: "public Double memoryInGB()"
  desc: "Get the memoryInGB property: The minimum amount of memory (in GB) to be used by the container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/."
  returns:
    description: "the memoryInGB value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.memoryInGBLimit()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.memoryInGBLimit()"
  name: "memoryInGBLimit()"
  nameWithType: "ContainerResourceRequirements.memoryInGBLimit()"
  summary: "Get the memory<wbr>InGBLimit property: The maximum amount of memory (in GB) allowed to be used by the container."
  syntax: "public Double memoryInGBLimit()"
  desc: "Get the memoryInGBLimit property: The maximum amount of memory (in GB) allowed to be used by the container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/."
  returns:
    description: "the memoryInGBLimit value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.validate()"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.validate()"
  name: "validate()"
  nameWithType: "ContainerResourceRequirements.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.withCpu(java.lang.Double)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.withCpu(Double cpu)"
  name: "withCpu(Double cpu)"
  nameWithType: "ContainerResourceRequirements.withCpu(Double cpu)"
  summary: "Set the cpu property: The minimum amount of CPU cores to be used by the container."
  parameters:
  - description: "the cpu value to set."
    name: "cpu"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerResourceRequirements withCpu(Double cpu)"
  desc: "Set the cpu property: The minimum amount of CPU cores to be used by the container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/."
  returns:
    description: "the ContainerResourceRequirements object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements?alt=com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements&text=ContainerResourceRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.withCpuLimit(java.lang.Double)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.withCpuLimit(Double cpuLimit)"
  name: "withCpuLimit(Double cpuLimit)"
  nameWithType: "ContainerResourceRequirements.withCpuLimit(Double cpuLimit)"
  summary: "Set the cpu<wbr>Limit property: The maximum amount of CPU cores allowed to be used by the container."
  parameters:
  - description: "the cpuLimit value to set."
    name: "cpuLimit"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerResourceRequirements withCpuLimit(Double cpuLimit)"
  desc: "Set the cpuLimit property: The maximum amount of CPU cores allowed to be used by the container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/."
  returns:
    description: "the ContainerResourceRequirements object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements?alt=com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements&text=ContainerResourceRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.withFpga(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.withFpga(Integer fpga)"
  name: "withFpga(Integer fpga)"
  nameWithType: "ContainerResourceRequirements.withFpga(Integer fpga)"
  summary: "Set the fpga property: The number of FPGA PCIE devices exposed to the container."
  parameters:
  - description: "the fpga value to set."
    name: "fpga"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerResourceRequirements withFpga(Integer fpga)"
  desc: "Set the fpga property: The number of FPGA PCIE devices exposed to the container. Must be multiple of 2."
  returns:
    description: "the ContainerResourceRequirements object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements?alt=com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements&text=ContainerResourceRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.withGpu(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.withGpu(Integer gpu)"
  name: "withGpu(Integer gpu)"
  nameWithType: "ContainerResourceRequirements.withGpu(Integer gpu)"
  summary: "Set the gpu property: The number of GPU cores in the container."
  parameters:
  - description: "the gpu value to set."
    name: "gpu"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerResourceRequirements withGpu(Integer gpu)"
  desc: "Set the gpu property: The number of GPU cores in the container."
  returns:
    description: "the ContainerResourceRequirements object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements?alt=com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements&text=ContainerResourceRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.withMemoryInGB(java.lang.Double)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.withMemoryInGB(Double memoryInGB)"
  name: "withMemoryInGB(Double memoryInGB)"
  nameWithType: "ContainerResourceRequirements.withMemoryInGB(Double memoryInGB)"
  summary: "Set the memory<wbr>InGB property: The minimum amount of memory (in GB) to be used by the container."
  parameters:
  - description: "the memoryInGB value to set."
    name: "memoryInGB"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerResourceRequirements withMemoryInGB(Double memoryInGB)"
  desc: "Set the memoryInGB property: The minimum amount of memory (in GB) to be used by the container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/."
  returns:
    description: "the ContainerResourceRequirements object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements?alt=com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements&text=ContainerResourceRequirements\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.withMemoryInGBLimit(java.lang.Double)"
  fullName: "com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements.withMemoryInGBLimit(Double memoryInGBLimit)"
  name: "withMemoryInGBLimit(Double memoryInGBLimit)"
  nameWithType: "ContainerResourceRequirements.withMemoryInGBLimit(Double memoryInGBLimit)"
  summary: "Set the memory<wbr>InGBLimit property: The maximum amount of memory (in GB) allowed to be used by the container."
  parameters:
  - description: "the memoryInGBLimit value to set."
    name: "memoryInGBLimit"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerResourceRequirements withMemoryInGBLimit(Double memoryInGBLimit)"
  desc: "Set the memoryInGBLimit property: The maximum amount of memory (in GB) allowed to be used by the container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/."
  returns:
    description: "the ContainerResourceRequirements object itself."
    type: "<xref href=\"com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements?alt=com.azure.resourcemanager.machinelearningservices.models.ContainerResourceRequirements&text=ContainerResourceRequirements\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The resource requirements for the container (cpu and memory)."
metadata: {}
package: "com.azure.resourcemanager.machinelearningservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-machinelearningservices:1.0.0-beta.1
