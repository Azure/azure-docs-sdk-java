### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  id: AbstractCollectionDecorator
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections
  children:
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.<T>toArray(T[])
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.AbstractCollectionDecorator()
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.AbstractCollectionDecorator(java.util.Collection<E>)
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.add(E)
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.addAll(java.util.Collection<? extends E>)
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.clear()
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.contains(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.containsAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.decorated()
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.isEmpty()
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.iterator()
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.remove(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.removeAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.retainAll(java.util.Collection<?>)
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.setCollection(java.util.Collection<E>)
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.size()
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.toArray()
  - com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.toString()
  langs:
  - java
  name: AbstractCollectionDecorator<E>
  nameWithType: AbstractCollectionDecorator<E>
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>
  type: Class
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public abstract class AbstractCollectionDecorator<E> implements Collection<E>, Serializable
    typeParameters:
    - id: E
  inheritance:
  - java.lang.Object
  implements:
  - java.util.Collection<E>
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.<T>toArray(T[])
  id: <T>toArray(T[])
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: <T>toArray(T[] object)
  nameWithType: AbstractCollectionDecorator<E>.<T>toArray(T[] object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.<T>toArray(T[] object)
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.toArray*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public T[] <T>toArray(T[] object)
    parameters:
    - id: object
      type: T[]
    return:
      type: T[]
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.AbstractCollectionDecorator()
  id: AbstractCollectionDecorator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: AbstractCollectionDecorator()
  nameWithType: AbstractCollectionDecorator<E>.AbstractCollectionDecorator()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.AbstractCollectionDecorator()
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.AbstractCollectionDecorator*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.collections
  summary: Constructor only used in deserialization, do not use otherwise.
  syntax:
    content: protected AbstractCollectionDecorator()
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.AbstractCollectionDecorator(java.util.Collection<E>)
  id: AbstractCollectionDecorator(java.util.Collection<E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: AbstractCollectionDecorator(Collection<E> coll)
  nameWithType: AbstractCollectionDecorator<E>.AbstractCollectionDecorator(Collection<E> coll)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.AbstractCollectionDecorator(Collection<E> coll)
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.AbstractCollectionDecorator*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.collections
  summary: Constructor that wraps (not copies).
  syntax:
    content: protected AbstractCollectionDecorator(Collection<E> coll)
    parameters:
    - id: coll
      type: java.util.Collection<E>
      description: the collection to decorate, must not be null
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.add(E)
  id: add(E)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: add(E object)
  nameWithType: AbstractCollectionDecorator<E>.add(E object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.add(E object)
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.add*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public boolean add(E object)
    parameters:
    - id: object
      type: E
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.addAll(java.util.Collection<? extends E>)
  id: addAll(java.util.Collection<? extends E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: addAll(Collection<? extends E> coll)
  nameWithType: AbstractCollectionDecorator<E>.addAll(Collection<? extends E> coll)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.addAll(Collection<? extends E> coll)
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.addAll*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public boolean addAll(Collection<? extends E> coll)
    parameters:
    - id: coll
      type: java.util.Collection<? extends E>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.clear()
  id: clear()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: clear()
  nameWithType: AbstractCollectionDecorator<E>.clear()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.clear()
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.clear*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public void clear()
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.contains(java.lang.Object)
  id: contains(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: contains(Object object)
  nameWithType: AbstractCollectionDecorator<E>.contains(Object object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.contains(Object object)
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.contains*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public boolean contains(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.containsAll(java.util.Collection<?>)
  id: containsAll(java.util.Collection<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: containsAll(Collection<?> coll)
  nameWithType: AbstractCollectionDecorator<E>.containsAll(Collection<?> coll)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.containsAll(Collection<?> coll)
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.containsAll*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public boolean containsAll(Collection<?> coll)
    parameters:
    - id: coll
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.decorated()
  id: decorated()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: decorated()
  nameWithType: AbstractCollectionDecorator<E>.decorated()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.decorated()
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.decorated*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  summary: Gets the collection being decorated. All access to the decorated collection goes via this method.
  syntax:
    content: protected Collection<E> decorated()
    return:
      type: java.util.Collection<E>
      description: the decorated collection
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.isEmpty()
  id: isEmpty()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: isEmpty()
  nameWithType: AbstractCollectionDecorator<E>.isEmpty()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.isEmpty()
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.isEmpty*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public boolean isEmpty()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.iterator()
  id: iterator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: iterator()
  nameWithType: AbstractCollectionDecorator<E>.iterator()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.iterator()
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.iterator*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public Iterator<E> iterator()
    return:
      type: java.util.Iterator<E>
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.remove(java.lang.Object)
  id: remove(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: remove(Object object)
  nameWithType: AbstractCollectionDecorator<E>.remove(Object object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.remove(Object object)
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.remove*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public boolean remove(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.removeAll(java.util.Collection<?>)
  id: removeAll(java.util.Collection<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: removeAll(Collection<?> coll)
  nameWithType: AbstractCollectionDecorator<E>.removeAll(Collection<?> coll)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.removeAll(Collection<?> coll)
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.removeAll*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public boolean removeAll(Collection<?> coll)
    parameters:
    - id: coll
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.retainAll(java.util.Collection<?>)
  id: retainAll(java.util.Collection<?>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: retainAll(Collection<?> coll)
  nameWithType: AbstractCollectionDecorator<E>.retainAll(Collection<?> coll)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.retainAll(Collection<?> coll)
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.retainAll*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public boolean retainAll(Collection<?> coll)
    parameters:
    - id: coll
      type: java.util.Collection<?>
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.setCollection(java.util.Collection<E>)
  id: setCollection(java.util.Collection<E>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: setCollection(Collection<E> coll)
  nameWithType: AbstractCollectionDecorator<E>.setCollection(Collection<E> coll)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.setCollection(Collection<E> coll)
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.setCollection*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  summary: >-
    Sets the collection being decorated.


    **NOTE:** this method should only be used during deserialization
  syntax:
    content: protected void setCollection(Collection<E> coll)
    parameters:
    - id: coll
      type: java.util.Collection<E>
      description: the decorated collection
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.size()
  id: size()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: size()
  nameWithType: AbstractCollectionDecorator<E>.size()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.size()
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.size*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public int size()
    return:
      type: int
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.toArray()
  id: toArray()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: toArray()
  nameWithType: AbstractCollectionDecorator<E>.toArray()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.toArray()
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.toArray*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public Object[] toArray()
    return:
      type: java.lang.Object[]
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.toString()
  id: toString()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator
  langs:
  - java
  name: toString()
  nameWithType: AbstractCollectionDecorator<E>.toString()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.toString()
  overload: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.toString*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
references:
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.AbstractCollectionDecorator*
  name: AbstractCollectionDecorator
  nameWithType: AbstractCollectionDecorator<E>.AbstractCollectionDecorator
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.AbstractCollectionDecorator
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: java.util.Collection<E>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.decorated*
  name: decorated
  nameWithType: AbstractCollectionDecorator<E>.decorated
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.decorated
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.setCollection*
  name: setCollection
  nameWithType: AbstractCollectionDecorator<E>.setCollection
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.setCollection
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: E
  spec.java:
  - uid: E
    name: E
    fullName: E
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.add*
  name: add
  nameWithType: AbstractCollectionDecorator<E>.add
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.add
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: java.util.Collection<? extends E>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: '? extends E'
    name: '? extends E'
    fullName: '? extends E'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.addAll*
  name: addAll
  nameWithType: AbstractCollectionDecorator<E>.addAll
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.addAll
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.clear*
  name: clear
  nameWithType: AbstractCollectionDecorator<E>.clear
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.clear
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.contains*
  name: contains
  nameWithType: AbstractCollectionDecorator<E>.contains
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.contains
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.isEmpty*
  name: isEmpty
  nameWithType: AbstractCollectionDecorator<E>.isEmpty
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.isEmpty
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: java.util.Iterator<E>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: E
    name: E
    fullName: E
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.iterator*
  name: iterator
  nameWithType: AbstractCollectionDecorator<E>.iterator
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.iterator
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.remove*
  name: remove
  nameWithType: AbstractCollectionDecorator<E>.remove
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.remove
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.size*
  name: size
  nameWithType: AbstractCollectionDecorator<E>.size
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.size
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.toArray*
  name: toArray
  nameWithType: AbstractCollectionDecorator<E>.toArray
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.toArray
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: T[]
  spec.java:
  - uid: T
    name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
- uid: java.util.Collection<?>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.containsAll*
  name: containsAll
  nameWithType: AbstractCollectionDecorator<E>.containsAll
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.containsAll
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.removeAll*
  name: removeAll
  nameWithType: AbstractCollectionDecorator<E>.removeAll
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.removeAll
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.retainAll*
  name: retainAll
  nameWithType: AbstractCollectionDecorator<E>.retainAll
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.retainAll
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator.toString*
  name: toString
  nameWithType: AbstractCollectionDecorator<E>.toString
  fullName: com.azure.cosmos.implementation.apachecommons.collections.AbstractCollectionDecorator<E>.toString
  package: com.azure.cosmos.implementation.apachecommons.collections
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: '? extends E'
  name: '? extends E'
  nameWithType: '? extends E'
  fullName: '? extends E'
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
