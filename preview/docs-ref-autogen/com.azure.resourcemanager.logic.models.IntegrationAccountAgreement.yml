### YamlMime:JavaType
uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement"
fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement"
name: "IntegrationAccountAgreement"
nameWithType: "IntegrationAccountAgreement"
summary: "An immutable client-side representation of IntegrationAccountAgreement."
syntax: "public interface IntegrationAccountAgreement"
methods:
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.agreementType()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.agreementType()"
  name: "agreementType()"
  nameWithType: "IntegrationAccountAgreement.agreementType()"
  summary: "Gets the agreementType property: The agreement type."
  modifiers:
  - "abstract"
  syntax: "public abstract AgreementType agreementType()"
  returns:
    description: "the agreementType value."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.AgreementType?alt=com.azure.resourcemanager.logic.models.AgreementType&text=AgreementType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.changedTime()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.changedTime()"
  name: "changedTime()"
  nameWithType: "IntegrationAccountAgreement.changedTime()"
  summary: "Gets the changedTime property: The changed time."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime changedTime()"
  returns:
    description: "the changedTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.content()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.content()"
  name: "content()"
  nameWithType: "IntegrationAccountAgreement.content()"
  summary: "Gets the content property: The agreement content."
  modifiers:
  - "abstract"
  syntax: "public abstract AgreementContent content()"
  returns:
    description: "the content value."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.AgreementContent?alt=com.azure.resourcemanager.logic.models.AgreementContent&text=AgreementContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.createdTime()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.createdTime()"
  name: "createdTime()"
  nameWithType: "IntegrationAccountAgreement.createdTime()"
  summary: "Gets the createdTime property: The created time."
  modifiers:
  - "abstract"
  syntax: "public abstract OffsetDateTime createdTime()"
  returns:
    description: "the createdTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.guestIdentity()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.guestIdentity()"
  name: "guestIdentity()"
  nameWithType: "IntegrationAccountAgreement.guestIdentity()"
  summary: "Gets the guestIdentity property: The business identity of the guest partner."
  modifiers:
  - "abstract"
  syntax: "public abstract BusinessIdentity guestIdentity()"
  returns:
    description: "the guestIdentity value."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.BusinessIdentity?alt=com.azure.resourcemanager.logic.models.BusinessIdentity&text=BusinessIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.guestPartner()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.guestPartner()"
  name: "guestPartner()"
  nameWithType: "IntegrationAccountAgreement.guestPartner()"
  summary: "Gets the guestPartner property: The integration account partner that is set as guest partner for this agreement."
  modifiers:
  - "abstract"
  syntax: "public abstract String guestPartner()"
  returns:
    description: "the guestPartner value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.hostIdentity()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.hostIdentity()"
  name: "hostIdentity()"
  nameWithType: "IntegrationAccountAgreement.hostIdentity()"
  summary: "Gets the hostIdentity property: The business identity of the host partner."
  modifiers:
  - "abstract"
  syntax: "public abstract BusinessIdentity hostIdentity()"
  returns:
    description: "the hostIdentity value."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.BusinessIdentity?alt=com.azure.resourcemanager.logic.models.BusinessIdentity&text=BusinessIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.hostPartner()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.hostPartner()"
  name: "hostPartner()"
  nameWithType: "IntegrationAccountAgreement.hostPartner()"
  summary: "Gets the hostPartner property: The integration account partner that is set as host partner for this agreement."
  modifiers:
  - "abstract"
  syntax: "public abstract String hostPartner()"
  returns:
    description: "the hostPartner value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.id()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.id()"
  name: "id()"
  nameWithType: "IntegrationAccountAgreement.id()"
  summary: "Gets the id property: Fully qualified resource Id for the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.innerModel()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.innerModel()"
  name: "innerModel()"
  nameWithType: "IntegrationAccountAgreement.innerModel()"
  summary: "Gets the inner com.azure.resourcemanager.logic.fluent.models.IntegrationAccountAgreementInner object."
  modifiers:
  - "abstract"
  syntax: "public abstract IntegrationAccountAgreementInner innerModel()"
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.logic.fluent.models.IntegrationAccountAgreementInner?alt=com.azure.resourcemanager.logic.fluent.models.IntegrationAccountAgreementInner&text=IntegrationAccountAgreementInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.listContentCallbackUrl(com.azure.resourcemanager.logic.models.GetCallbackUrlParameters)"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.listContentCallbackUrl(GetCallbackUrlParameters listContentCallbackUrl)"
  name: "listContentCallbackUrl(GetCallbackUrlParameters listContentCallbackUrl)"
  nameWithType: "IntegrationAccountAgreement.listContentCallbackUrl(GetCallbackUrlParameters listContentCallbackUrl)"
  summary: "Get the content callback url."
  modifiers:
  - "abstract"
  parameters:
  - description: "The callback url parameters."
    name: "listContentCallbackUrl"
    type: "<xref href=\"com.azure.resourcemanager.logic.models.GetCallbackUrlParameters?alt=com.azure.resourcemanager.logic.models.GetCallbackUrlParameters&text=GetCallbackUrlParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WorkflowTriggerCallbackUrl listContentCallbackUrl(GetCallbackUrlParameters listContentCallbackUrl)"
  returns:
    description: "the content callback url."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.WorkflowTriggerCallbackUrl?alt=com.azure.resourcemanager.logic.models.WorkflowTriggerCallbackUrl&text=WorkflowTriggerCallbackUrl\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.listContentCallbackUrlWithResponse(com.azure.resourcemanager.logic.models.GetCallbackUrlParameters,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.listContentCallbackUrlWithResponse(GetCallbackUrlParameters listContentCallbackUrl, Context context)"
  name: "listContentCallbackUrlWithResponse(GetCallbackUrlParameters listContentCallbackUrl, Context context)"
  nameWithType: "IntegrationAccountAgreement.listContentCallbackUrlWithResponse(GetCallbackUrlParameters listContentCallbackUrl, Context context)"
  summary: "Get the content callback url."
  modifiers:
  - "abstract"
  parameters:
  - description: "The callback url parameters."
    name: "listContentCallbackUrl"
    type: "<xref href=\"com.azure.resourcemanager.logic.models.GetCallbackUrlParameters?alt=com.azure.resourcemanager.logic.models.GetCallbackUrlParameters&text=GetCallbackUrlParameters\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<WorkflowTriggerCallbackUrl> listContentCallbackUrlWithResponse(GetCallbackUrlParameters listContentCallbackUrl, Context context)"
  returns:
    description: "the content callback url."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.logic.models.WorkflowTriggerCallbackUrl?alt=com.azure.resourcemanager.logic.models.WorkflowTriggerCallbackUrl&text=WorkflowTriggerCallbackUrl\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.location()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.location()"
  name: "location()"
  nameWithType: "IntegrationAccountAgreement.location()"
  summary: "Gets the location property: The geo-location where the resource lives."
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.metadata()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.metadata()"
  name: "metadata()"
  nameWithType: "IntegrationAccountAgreement.metadata()"
  summary: "Gets the metadata property: The metadata."
  modifiers:
  - "abstract"
  syntax: "public abstract Object metadata()"
  returns:
    description: "the metadata value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.name()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.name()"
  name: "name()"
  nameWithType: "IntegrationAccountAgreement.name()"
  summary: "Gets the name property: The name of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.refresh()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.refresh()"
  name: "refresh()"
  nameWithType: "IntegrationAccountAgreement.refresh()"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  syntax: "public abstract IntegrationAccountAgreement refresh()"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.IntegrationAccountAgreement?alt=com.azure.resourcemanager.logic.models.IntegrationAccountAgreement&text=IntegrationAccountAgreement\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.refresh(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.refresh(Context context)"
  name: "refresh(Context context)"
  nameWithType: "IntegrationAccountAgreement.refresh(Context context)"
  summary: "Refreshes the resource to sync with Azure."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract IntegrationAccountAgreement refresh(Context context)"
  returns:
    description: "the refreshed resource."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.IntegrationAccountAgreement?alt=com.azure.resourcemanager.logic.models.IntegrationAccountAgreement&text=IntegrationAccountAgreement\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.region()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.region()"
  name: "region()"
  nameWithType: "IntegrationAccountAgreement.region()"
  summary: "Gets the region of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract Region region()"
  returns:
    description: "the region of the resource."
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.regionName()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.regionName()"
  name: "regionName()"
  nameWithType: "IntegrationAccountAgreement.regionName()"
  summary: "Gets the name of the resource region."
  modifiers:
  - "abstract"
  syntax: "public abstract String regionName()"
  returns:
    description: "the name of the resource region."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.tags()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.tags()"
  name: "tags()"
  nameWithType: "IntegrationAccountAgreement.tags()"
  summary: "Gets the tags property: Resource tags."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.type()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.type()"
  name: "type()"
  nameWithType: "IntegrationAccountAgreement.type()"
  summary: "Gets the type property: The type of the resource."
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.update()"
  fullName: "com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.update()"
  name: "update()"
  nameWithType: "IntegrationAccountAgreement.update()"
  summary: "Begins update for the IntegrationAccountAgreement resource."
  modifiers:
  - "abstract"
  syntax: "public abstract IntegrationAccountAgreement.Update update()"
  returns:
    description: "the stage of resource update."
    type: "<xref href=\"com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.Update?alt=com.azure.resourcemanager.logic.models.IntegrationAccountAgreement.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.logic.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-logic:1.0.0-beta.1
