### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  id: BeanPropertyMap
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl
  children:
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(boolean,java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(boolean,java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(boolean,java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>,java.util.Locale)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,boolean)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._caseInsensitive
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._rename(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.assignIndexes()
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct(java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,boolean)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct(java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,boolean,java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.find(int)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.find(java.lang.String)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.findDeserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertiesInInsertionOrder()
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertyName(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.hasAliases()
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.init(java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.isCaseInsensitive()
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.iterator()
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.remove(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.renameAll(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.size()
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.toString()
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withCaseInsensitivity(boolean)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withoutProperties(java.util.Collection<java.lang.String>)
  - com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  langs:
  - java
  name: BeanPropertyMap
  nameWithType: BeanPropertyMap
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  type: Class
  package: com.fasterxml.jackson.databind.deser.impl
  summary: >-
    Helper class used for storing mapping from property name to <xref uid="com.fasterxml.jackson.databind.deser.SettableBeanProperty" data-throw-if-not-resolved="false">SettableBeanProperty</xref> instances.


    Note that this class is used instead of generic <xref uid="java.util.HashMap" data-throw-if-not-resolved="false">java.util.HashMap</xref> for bit of performance gain (and some memory savings): although default implementation is very good for generic use cases, it can be streamlined a bit for specific use case we have. Even relatively small improvements matter since this is directly on the critical path during deserialization, as it is done for each and every POJO property deserialized.
  syntax:
    content: public class BeanPropertyMap implements Iterable<SettableBeanProperty>, Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.lang.Iterable<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(boolean,java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>)
  id: BeanPropertyMap(boolean,java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: BeanPropertyMap(boolean caseInsensitive, Collection<SettableBeanProperty> props)
  nameWithType: BeanPropertyMap.BeanPropertyMap(boolean caseInsensitive, Collection<SettableBeanProperty> props)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(boolean caseInsensitive, Collection<SettableBeanProperty> props)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public BeanPropertyMap(boolean caseInsensitive, Collection<SettableBeanProperty> props)
    parameters:
    - id: caseInsensitive
      type: boolean
    - id: props
      type: java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(boolean,java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>)
  id: BeanPropertyMap(boolean,java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: BeanPropertyMap(boolean caseInsensitive, Collection<SettableBeanProperty> props, Map<String,List<PropertyName>> aliasDefs)
  nameWithType: BeanPropertyMap.BeanPropertyMap(boolean caseInsensitive, Collection<SettableBeanProperty> props, Map<String,List<PropertyName>> aliasDefs)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(boolean caseInsensitive, Collection<SettableBeanProperty> props, Map<String,List<PropertyName>> aliasDefs)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public BeanPropertyMap(boolean caseInsensitive, Collection<SettableBeanProperty> props, Map<String,List<PropertyName>> aliasDefs)
    parameters:
    - id: caseInsensitive
      type: boolean
    - id: props
      type: java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
    - id: aliasDefs
      type: java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(boolean,java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>,java.util.Locale)
  id: BeanPropertyMap(boolean,java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>,java.util.Locale)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: BeanPropertyMap(boolean caseInsensitive, Collection<SettableBeanProperty> props, Map<String,List<PropertyName>> aliasDefs, Locale locale)
  nameWithType: BeanPropertyMap.BeanPropertyMap(boolean caseInsensitive, Collection<SettableBeanProperty> props, Map<String,List<PropertyName>> aliasDefs, Locale locale)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(boolean caseInsensitive, Collection<SettableBeanProperty> props, Map<String,List<PropertyName>> aliasDefs, Locale locale)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public BeanPropertyMap(boolean caseInsensitive, Collection<SettableBeanProperty> props, Map<String,List<PropertyName>> aliasDefs, Locale locale)
    parameters:
    - id: caseInsensitive
      type: boolean
    - id: props
      type: java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
    - id: aliasDefs
      type: java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>
    - id: locale
      type: java.util.Locale
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,boolean)
  id: BeanPropertyMap(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: BeanPropertyMap(BeanPropertyMap base, boolean caseInsensitive)
  nameWithType: BeanPropertyMap.BeanPropertyMap(BeanPropertyMap base, boolean caseInsensitive)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(BeanPropertyMap base, boolean caseInsensitive)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: protected BeanPropertyMap(BeanPropertyMap base, boolean caseInsensitive)
    parameters:
    - id: base
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
    - id: caseInsensitive
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty,int,int)
  id: BeanPropertyMap(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: BeanPropertyMap(BeanPropertyMap src, SettableBeanProperty newProp, int hashIndex, int orderedIndex)
  nameWithType: BeanPropertyMap.BeanPropertyMap(BeanPropertyMap src, SettableBeanProperty newProp, int hashIndex, int orderedIndex)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(BeanPropertyMap src, SettableBeanProperty newProp, int hashIndex, int orderedIndex)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: private BeanPropertyMap(BeanPropertyMap src, SettableBeanProperty newProp, int hashIndex, int orderedIndex)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
    - id: newProp
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    - id: hashIndex
      type: int
    - id: orderedIndex
      type: int
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String,int)
  id: BeanPropertyMap(com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap,com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.String,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: BeanPropertyMap(BeanPropertyMap src, SettableBeanProperty newProp, String key, int slot)
  nameWithType: BeanPropertyMap.BeanPropertyMap(BeanPropertyMap src, SettableBeanProperty newProp, String key, int slot)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap(BeanPropertyMap src, SettableBeanProperty newProp, String key, int slot)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap*
  type: Constructor
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: private BeanPropertyMap(BeanPropertyMap src, SettableBeanProperty newProp, String key, int slot)
    parameters:
    - id: src
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
    - id: newProp
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    - id: key
      type: java.lang.String
    - id: slot
      type: int
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._caseInsensitive
  id: _caseInsensitive
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: _caseInsensitive
  nameWithType: BeanPropertyMap._caseInsensitive
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._caseInsensitive
  type: Field
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: protected final boolean _caseInsensitive
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._rename(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.util.NameTransformer)
  id: _rename(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.util.NameTransformer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: _rename(SettableBeanProperty prop, NameTransformer xf)
  nameWithType: BeanPropertyMap._rename(SettableBeanProperty prop, NameTransformer xf)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._rename(SettableBeanProperty prop, NameTransformer xf)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._rename*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: protected SettableBeanProperty _rename(SettableBeanProperty prop, NameTransformer xf)
    parameters:
    - id: prop
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    - id: xf
      type: com.fasterxml.jackson.databind.util.NameTransformer
    return:
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.assignIndexes()
  id: assignIndexes()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: assignIndexes()
  nameWithType: BeanPropertyMap.assignIndexes()
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.assignIndexes()
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.assignIndexes*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public BeanPropertyMap assignIndexes()
    return:
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>)
  id: construct(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: construct(MapperConfig<?> config, Collection<SettableBeanProperty> props, Map<String,List<PropertyName>> aliasMapping)
  nameWithType: BeanPropertyMap.construct(MapperConfig<?> config, Collection<SettableBeanProperty> props, Map<String,List<PropertyName>> aliasMapping)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct(MapperConfig<?> config, Collection<SettableBeanProperty> props, Map<String,List<PropertyName>> aliasMapping)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public static BeanPropertyMap construct(MapperConfig<?> config, Collection<SettableBeanProperty> props, Map<String,List<PropertyName>> aliasMapping)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
    - id: props
      type: java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
    - id: aliasMapping
      type: java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>
    return:
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct(java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,boolean)
  id: construct(java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: construct(Collection<SettableBeanProperty> props, boolean caseInsensitive)
  nameWithType: BeanPropertyMap.construct(Collection<SettableBeanProperty> props, boolean caseInsensitive)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct(Collection<SettableBeanProperty> props, boolean caseInsensitive)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public static BeanPropertyMap construct(Collection<SettableBeanProperty> props, boolean caseInsensitive)
    parameters:
    - id: props
      type: java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
    - id: caseInsensitive
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct(java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,boolean,java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>)
  id: construct(java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>,boolean,java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: construct(Collection<SettableBeanProperty> props, boolean caseInsensitive, Map<String,List<PropertyName>> aliasMapping)
  nameWithType: BeanPropertyMap.construct(Collection<SettableBeanProperty> props, boolean caseInsensitive, Map<String,List<PropertyName>> aliasMapping)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct(Collection<SettableBeanProperty> props, boolean caseInsensitive, Map<String,List<PropertyName>> aliasMapping)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public static BeanPropertyMap construct(Collection<SettableBeanProperty> props, boolean caseInsensitive, Map<String,List<PropertyName>> aliasMapping)
    parameters:
    - id: props
      type: java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
    - id: caseInsensitive
      type: boolean
    - id: aliasMapping
      type: java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>
    return:
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.find(int)
  id: find(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: find(int index)
  nameWithType: BeanPropertyMap.find(int index)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.find(int index)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.find*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public SettableBeanProperty find(int index)
    parameters:
    - id: index
      type: int
    return:
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.find(java.lang.String)
  id: find(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: find(String key)
  nameWithType: BeanPropertyMap.find(String key)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.find(String key)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.find*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public SettableBeanProperty find(String key)
    parameters:
    - id: key
      type: java.lang.String
    return:
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.findDeserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  id: findDeserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: findDeserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, String key)
  nameWithType: BeanPropertyMap.findDeserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, String key)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.findDeserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, String key)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.findDeserializeAndSet*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Convenience method that tries to find property with given name, and if it is found, call <xref uid="com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserializeAndSet*" data-throw-if-not-resolved="false">SettableBeanProperty#deserializeAndSet</xref> on it, and return true; or, if not found, return false. Note, too, that if deserialization is attempted, possible exceptions are wrapped if and as necessary, so caller need not handle those.
  syntax:
    content: public boolean findDeserializeAndSet(JsonParser p, DeserializationContext ctxt, Object bean, String key)
    parameters:
    - id: p
      type: com.fasterxml.jackson.core.JsonParser
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
    - id: bean
      type: java.lang.Object
    - id: key
      type: java.lang.String
    return:
      type: boolean
  exceptions:
  - type: java.io.IOException
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertiesInInsertionOrder()
  id: getPropertiesInInsertionOrder()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: getPropertiesInInsertionOrder()
  nameWithType: BeanPropertyMap.getPropertiesInInsertionOrder()
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertiesInInsertionOrder()
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertiesInInsertionOrder*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Method that will re-create initial insertion-ordering of properties contained in this map. Note that if properties have been removed, array may contain nulls; otherwise it should be consecutive.
  syntax:
    content: public SettableBeanProperty[] getPropertiesInInsertionOrder()
    return:
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty[]
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertyName(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  id: getPropertyName(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: getPropertyName(SettableBeanProperty prop)
  nameWithType: BeanPropertyMap.getPropertyName(SettableBeanProperty prop)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertyName(SettableBeanProperty prop)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertyName*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: protected final String getPropertyName(SettableBeanProperty prop)
    parameters:
    - id: prop
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.hasAliases()
  id: hasAliases()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: hasAliases()
  nameWithType: BeanPropertyMap.hasAliases()
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.hasAliases()
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.hasAliases*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public boolean hasAliases()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.init(java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>)
  id: init(java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: init(Collection<SettableBeanProperty> props)
  nameWithType: BeanPropertyMap.init(Collection<SettableBeanProperty> props)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.init(Collection<SettableBeanProperty> props)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.init*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: protected void init(Collection<SettableBeanProperty> props)
    parameters:
    - id: props
      type: java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.isCaseInsensitive()
  id: isCaseInsensitive()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: isCaseInsensitive()
  nameWithType: BeanPropertyMap.isCaseInsensitive()
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.isCaseInsensitive()
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.isCaseInsensitive*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public boolean isCaseInsensitive()
    return:
      type: boolean
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.iterator()
  id: iterator()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: iterator()
  nameWithType: BeanPropertyMap.iterator()
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.iterator()
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.iterator*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Accessor for traversing over all contained properties.
  syntax:
    content: public Iterator<SettableBeanProperty> iterator()
    return:
      type: java.util.Iterator<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.remove(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  id: remove(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: remove(SettableBeanProperty propToRm)
  nameWithType: BeanPropertyMap.remove(SettableBeanProperty propToRm)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.remove(SettableBeanProperty propToRm)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.remove*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: 'Specialized method for removing specified existing entry. NOTE: entry MUST exist, otherwise an exception is thrown.'
  syntax:
    content: public void remove(SettableBeanProperty propToRm)
    parameters:
    - id: propToRm
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.renameAll(com.fasterxml.jackson.databind.util.NameTransformer)
  id: renameAll(com.fasterxml.jackson.databind.util.NameTransformer)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: renameAll(NameTransformer transformer)
  nameWithType: BeanPropertyMap.renameAll(NameTransformer transformer)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.renameAll(NameTransformer transformer)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.renameAll*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Mutant factory method for constructing a map where all entries use given prefix
  syntax:
    content: public BeanPropertyMap renameAll(NameTransformer transformer)
    parameters:
    - id: transformer
      type: com.fasterxml.jackson.databind.util.NameTransformer
    return:
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  id: replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: replace(SettableBeanProperty newProp)
  nameWithType: BeanPropertyMap.replace(SettableBeanProperty newProp)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.replace(SettableBeanProperty newProp)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.replace*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public void replace(SettableBeanProperty newProp)
    parameters:
    - id: newProp
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  id: replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: replace(SettableBeanProperty origProp, SettableBeanProperty newProp)
  nameWithType: BeanPropertyMap.replace(SettableBeanProperty origProp, SettableBeanProperty newProp)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.replace(SettableBeanProperty origProp, SettableBeanProperty newProp)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.replace*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: 'Specialized method that can be used to replace an existing entry (note: entry MUST exist; otherwise exception is thrown) with specified replacement.'
  syntax:
    content: public void replace(SettableBeanProperty origProp, SettableBeanProperty newProp)
    parameters:
    - id: origProp
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    - id: newProp
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.size()
  id: size()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: size()
  nameWithType: BeanPropertyMap.size()
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.size()
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.size*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public int size()
    return:
      type: int
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: toString()
  nameWithType: BeanPropertyMap.toString()
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.toString()
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.toString*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withCaseInsensitivity(boolean)
  id: withCaseInsensitivity(boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: withCaseInsensitivity(boolean state)
  nameWithType: BeanPropertyMap.withCaseInsensitivity(boolean state)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withCaseInsensitivity(boolean state)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withCaseInsensitivity*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Mutant factory method that constructs a new instance if desired case-insensitivity state differs from the state of this instance; if states are the same, returns `this`.
  syntax:
    content: public BeanPropertyMap withCaseInsensitivity(boolean state)
    parameters:
    - id: state
      type: boolean
    return:
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  id: withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: withProperty(SettableBeanProperty newProp)
  nameWithType: BeanPropertyMap.withProperty(SettableBeanProperty newProp)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withProperty(SettableBeanProperty newProp)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withProperty*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Fluent copy method that creates a new instance that is a copy of this instance except for one additional property that is passed as the argument. Note that method does not modify this instance but constructs and returns a new one.
  syntax:
    content: public BeanPropertyMap withProperty(SettableBeanProperty newProp)
    parameters:
    - id: newProp
      type: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    return:
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withoutProperties(java.util.Collection<java.lang.String>)
  id: withoutProperties(java.util.Collection<java.lang.String>)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: withoutProperties(Collection<String> toExclude)
  nameWithType: BeanPropertyMap.withoutProperties(Collection<String> toExclude)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withoutProperties(Collection<String> toExclude)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withoutProperties*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  summary: Mutant factory method that will use this instance as the base, and construct an instance that is otherwise same except for excluding properties with specified names.
  syntax:
    content: public BeanPropertyMap withoutProperties(Collection<String> toExclude)
    parameters:
    - id: toExclude
      type: java.util.Collection<java.lang.String>
    return:
      type: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  id: wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap
  langs:
  - java
  name: wrapAndThrow(Throwable t, Object bean, String fieldName, DeserializationContext ctxt)
  nameWithType: BeanPropertyMap.wrapAndThrow(Throwable t, Object bean, String fieldName, DeserializationContext ctxt)
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.wrapAndThrow(Throwable t, Object bean, String fieldName, DeserializationContext ctxt)
  overload: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.wrapAndThrow*
  type: Method
  package: com.fasterxml.jackson.databind.deser.impl
  syntax:
    content: protected void wrapAndThrow(Throwable t, Object bean, String fieldName, DeserializationContext ctxt)
    parameters:
    - id: t
      type: java.lang.Throwable
    - id: bean
      type: java.lang.Object
    - id: fieldName
      type: java.lang.String
    - id: ctxt
      type: com.fasterxml.jackson.databind.DeserializationContext
  exceptions:
  - type: java.io.IOException
references:
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: java.util.Collection<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    name: SettableBeanProperty
    fullName: com.fasterxml.jackson.databind.deser.SettableBeanProperty
  - name: '>'
    fullName: '>'
- uid: java.util.Map<java.lang.String,java.util.List<com.fasterxml.jackson.databind.PropertyName>>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.PropertyName
    name: PropertyName
    fullName: com.fasterxml.jackson.databind.PropertyName
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: java.util.Locale
  spec.java:
  - uid: java.util.Locale
    name: Locale
    fullName: java.util.Locale
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap*
  name: BeanPropertyMap
  nameWithType: BeanPropertyMap.BeanPropertyMap
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.BeanPropertyMap
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.SettableBeanProperty
  name: SettableBeanProperty
  nameWithType: SettableBeanProperty
  fullName: com.fasterxml.jackson.databind.deser.SettableBeanProperty
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withCaseInsensitivity*
  name: withCaseInsensitivity
  nameWithType: BeanPropertyMap.withCaseInsensitivity
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withCaseInsensitivity
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.init*
  name: init
  nameWithType: BeanPropertyMap.init
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.init
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct*
  name: construct
  nameWithType: BeanPropertyMap.construct
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.construct
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withProperty*
  name: withProperty
  nameWithType: BeanPropertyMap.withProperty
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withProperty
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.assignIndexes*
  name: assignIndexes
  nameWithType: BeanPropertyMap.assignIndexes
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.assignIndexes
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.util.NameTransformer
  name: NameTransformer
  nameWithType: NameTransformer
  fullName: com.fasterxml.jackson.databind.util.NameTransformer
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.renameAll*
  name: renameAll
  nameWithType: BeanPropertyMap.renameAll
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.renameAll
  package: com.fasterxml.jackson.databind.deser.impl
- uid: java.util.Collection<java.lang.String>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withoutProperties*
  name: withoutProperties
  nameWithType: BeanPropertyMap.withoutProperties
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withoutProperties
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.replace*
  name: replace
  nameWithType: BeanPropertyMap.replace
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.replace
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.remove*
  name: remove
  nameWithType: BeanPropertyMap.remove
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.remove
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.size*
  name: size
  nameWithType: BeanPropertyMap.size
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.size
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.isCaseInsensitive*
  name: isCaseInsensitive
  nameWithType: BeanPropertyMap.isCaseInsensitive
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.isCaseInsensitive
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.hasAliases*
  name: hasAliases
  nameWithType: BeanPropertyMap.hasAliases
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.hasAliases
  package: com.fasterxml.jackson.databind.deser.impl
- uid: java.util.Iterator<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
  spec.java:
  - uid: java.util.Iterator
    name: Iterator
    fullName: java.util.Iterator
  - name: <
    fullName: <
  - uid: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    name: SettableBeanProperty
    fullName: com.fasterxml.jackson.databind.deser.SettableBeanProperty
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.iterator*
  name: iterator
  nameWithType: BeanPropertyMap.iterator
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.iterator
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.SettableBeanProperty[]
  spec.java:
  - uid: com.fasterxml.jackson.databind.deser.SettableBeanProperty
    name: SettableBeanProperty
    fullName: com.fasterxml.jackson.databind.deser.SettableBeanProperty
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertiesInInsertionOrder*
  name: getPropertiesInInsertionOrder
  nameWithType: BeanPropertyMap.getPropertiesInInsertionOrder
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertiesInInsertionOrder
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertyName*
  name: getPropertyName
  nameWithType: BeanPropertyMap.getPropertyName
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertyName
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.find*
  name: find
  nameWithType: BeanPropertyMap.find
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.find
  package: com.fasterxml.jackson.databind.deser.impl
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.fasterxml.jackson.core.JsonParser
  name: JsonParser
  nameWithType: JsonParser
  fullName: com.fasterxml.jackson.core.JsonParser
- uid: com.fasterxml.jackson.databind.DeserializationContext
  name: DeserializationContext
  nameWithType: DeserializationContext
  fullName: com.fasterxml.jackson.databind.DeserializationContext
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.findDeserializeAndSet*
  name: findDeserializeAndSet
  nameWithType: BeanPropertyMap.findDeserializeAndSet
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.findDeserializeAndSet
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.toString*
  name: toString
  nameWithType: BeanPropertyMap.toString
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.toString
  package: com.fasterxml.jackson.databind.deser.impl
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._rename*
  name: _rename
  nameWithType: BeanPropertyMap._rename
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._rename
  package: com.fasterxml.jackson.databind.deser.impl
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.wrapAndThrow*
  name: wrapAndThrow
  nameWithType: BeanPropertyMap.wrapAndThrow
  fullName: com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.wrapAndThrow
  package: com.fasterxml.jackson.databind.deser.impl
- uid: java.lang.Iterable<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
  name: Iterable<SettableBeanProperty>
  nameWithType: Iterable<SettableBeanProperty>
  fullName: java.lang.Iterable<com.fasterxml.jackson.databind.deser.SettableBeanProperty>
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: com.fasterxml.jackson.databind.PropertyName
  name: PropertyName
  nameWithType: PropertyName
  fullName: com.fasterxml.jackson.databind.PropertyName
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.util.List
  name: String,List
  nameWithType: String,List
  fullName: java.lang.String,java.util.List
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: java.util.Iterator
  name: Iterator
  nameWithType: Iterator
  fullName: java.util.Iterator
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
