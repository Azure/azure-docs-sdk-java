### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.createHook*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.createHook"
name: "createHook"
nameWithType: "MetricsAdvisorAdministrationAsyncClient.createHook"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.createHook(com.azure.ai.metricsadvisor.models.Hook)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.createHook(Hook hook)"
  name: "createHook(Hook hook)"
  nameWithType: "MetricsAdvisorAdministrationAsyncClient.createHook(Hook hook)"
  summary: "Creates a hook that receives anomaly incident alerts.\n\n**Code sample**\n\n```java\nHook emailHook = new EmailHook(\"email hook\")\n     .setDescription(\"my email hook\")\n     .addEmailToAlert(\"alertme{@literal @}alertme.com\")\n     .setExternalLink(\"https://adwiki.azurewebsites.net/articles/howto/alerts/create-hooks.html\");\n \n metricAdvisorAdministrationAsyncClient.createHook(emailHook)\n     .subscribe(hook -> {\n         EmailHook createdEmailHook = (EmailHook) hook;\n         System.out.printf(\"Hook Id: %s%n\", createdEmailHook.getId());\n         System.out.printf(\"Hook Name: %s%n\", createdEmailHook.getName());\n         System.out.printf(\"Hook Description: %s%n\", createdEmailHook.getDescription());\n         System.out.printf(\"Hook External Link: %s%n\", createdEmailHook.getExternalLink());\n         System.out.printf(\"Hook Emails: %s%n\", String.join(\",\", createdEmailHook.getEmailsToAlert()));\n     });\n```"
  parameters:
  - description: "The hook."
    name: "hook"
    type: "<xref href=\"com.azure.ai.metricsadvisor.models.Hook?alt=com.azure.ai.metricsadvisor.models.Hook&text=Hook\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Hook> createHook(Hook hook)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the created <xref uid=\"com.azure.ai.metricsadvisor.models.Hook\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Hook\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.models.Hook?alt=com.azure.ai.metricsadvisor.models.Hook&text=Hook\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.0.0-beta.1
