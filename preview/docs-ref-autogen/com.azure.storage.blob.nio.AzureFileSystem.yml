### YamlMime:JavaType
uid: "com.azure.storage.blob.nio.AzureFileSystem"
fullName: "com.azure.storage.blob.nio.AzureFileSystem"
name: "AzureFileSystem"
nameWithType: "AzureFileSystem"
summary: "Implement's Java's <xref uid=\"java.nio.file.FileSystem\" data-throw-if-not-resolved=\"false\">FileSystem</xref> interface for Azure Blob Storage.\n\nThe following behavior is specific to this FileSystem:\n\nIn the hierarchy of this file system, an `AzureFileSystem` corresponds to an Azure Blob Storage account. A file store is represented by a container in the storage account. Each container has one root directory.\n\nClosing the file system will not block on outstanding operations. Any operations in progress will be allowed to terminate naturally after the file system is closed, though no further operations may be started after the parent file system is closed.\n\nAll instance of `AzureFileSystem` are opened for read-write access.\n\nFor a more complete description of the uses for the constants described here, please see the instructions for opening and configuring a FileSystem in the docs of <xref uid=\"java.nio.file.spi.FileSystemProvider\" data-throw-if-not-resolved=\"false\">FileSystemProvider</xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.nio.file.FileSystem\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "java.nio.file.FileSystem.close()"
- "java.nio.file.FileSystem.getFileStores()"
- "java.nio.file.FileSystem.getPath(java.lang.String,java.lang.String...)"
- "java.nio.file.FileSystem.getPathMatcher(java.lang.String)"
- "java.nio.file.FileSystem.getRootDirectories()"
- "java.nio.file.FileSystem.getSeparator()"
- "java.nio.file.FileSystem.getUserPrincipalLookupService()"
- "java.nio.file.FileSystem.isOpen()"
- "java.nio.file.FileSystem.isReadOnly()"
- "java.nio.file.FileSystem.newWatchService()"
- "java.nio.file.FileSystem.provider()"
- "java.nio.file.FileSystem.supportedFileAttributeViews()"
syntax: "public final class AzureFileSystem extends FileSystem"
fields:
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_ACCOUNT_KEY"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_DOWNLOAD_RESUME_RETRIES"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_FILE_STORES"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_HTTP_LOG_DETAIL_LEVEL"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_MAX_CONCURRENCY_PER_REQUEST"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_MAX_RETRY_DELAY_IN_MS"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_MAX_TRIES"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_PUT_BLOB_THRESHOLD"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_RETRY_DELAY_IN_MS"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_RETRY_POLICY_TYPE"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_SAS_TOKEN"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_SECONDARY_HOST"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_TRY_TIMEOUT"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_UPLOAD_BLOCK_SIZE"
- "com.azure.storage.blob.nio.AzureFileSystem.AZURE_STORAGE_USE_HTTPS"
methods:
- "com.azure.storage.blob.nio.AzureFileSystem.close()"
- "com.azure.storage.blob.nio.AzureFileSystem.equals(java.lang.Object)"
- "com.azure.storage.blob.nio.AzureFileSystem.getFileStores()"
- "com.azure.storage.blob.nio.AzureFileSystem.getPath(java.lang.String,java.lang.String...)"
- "com.azure.storage.blob.nio.AzureFileSystem.getPathMatcher(java.lang.String)"
- "com.azure.storage.blob.nio.AzureFileSystem.getRootDirectories()"
- "com.azure.storage.blob.nio.AzureFileSystem.getSeparator()"
- "com.azure.storage.blob.nio.AzureFileSystem.getUserPrincipalLookupService()"
- "com.azure.storage.blob.nio.AzureFileSystem.hashCode()"
- "com.azure.storage.blob.nio.AzureFileSystem.isOpen()"
- "com.azure.storage.blob.nio.AzureFileSystem.isReadOnly()"
- "com.azure.storage.blob.nio.AzureFileSystem.newWatchService()"
- "com.azure.storage.blob.nio.AzureFileSystem.provider()"
- "com.azure.storage.blob.nio.AzureFileSystem.supportedFileAttributeViews()"
type: "class"
metadata: {}
package: "com.azure.storage.blob.nio"
artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
