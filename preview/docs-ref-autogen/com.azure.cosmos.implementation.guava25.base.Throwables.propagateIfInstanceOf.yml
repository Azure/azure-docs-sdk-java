### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Throwables.propagateIfInstanceOf*"
fullName: "com.azure.cosmos.implementation.guava25.base.Throwables.<X>propagateIfInstanceOf"
name: "<X>propagateIfInstanceOf"
nameWithType: "Throwables.<X>propagateIfInstanceOf"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Throwables.<X>propagateIfInstanceOf(java.lang.Throwable,java.lang.Class<X>)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Throwables.<X>propagateIfInstanceOf(Throwable throwable, Class<X> declaredType)"
  name: "<X>propagateIfInstanceOf(Throwable throwable, Class<X> declaredType)"
  nameWithType: "Throwables.<X>propagateIfInstanceOf(Throwable throwable, Class<X> declaredType)"
  summary: "Propagates `throwable` exactly as-is, if and only if it is an instance of `declaredType`. Example usage:\n\n```java\ntry {\n   someMethodThatCouldThrowAnything();\n } catch (IKnowWhatToDoWithThisException e) {\n   handle(e);\n } catch (Throwable t) {\n   Throwables.propagateIfInstanceOf(t, IOException.class);\n   Throwables.propagateIfInstanceOf(t, SQLException.class);\n   throw Throwables.propagate(t);\n }\n```"
  parameters:
  - name: "throwable"
    type: "<xref href=\"java.lang.Throwable?alt=java.lang.Throwable&text=Throwable\" data-throw-if-not-resolved=\"False\" />"
  - name: "declaredType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"X?alt=X&text=X\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static void <X>propagateIfInstanceOf(Throwable throwable, Class<X> declaredType)"
  exceptions:
  - type: "<xref href=\"X?alt=X&text=X\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
