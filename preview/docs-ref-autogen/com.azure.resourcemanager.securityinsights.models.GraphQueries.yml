### YamlMime:JavaType
uid: "com.azure.resourcemanager.securityinsights.models.GraphQueries"
fullName: "com.azure.resourcemanager.securityinsights.models.GraphQueries"
name: "GraphQueries"
nameWithType: "GraphQueries"
summary: "The graph query to show the current data status."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **GraphQueries**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.securityinsights.models.GraphQueries?alt=com.azure.resourcemanager.securityinsights.models.GraphQueries&text=GraphQueries\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.securityinsights.models.GraphQueries.GraphQueries()"
  fullName: "com.azure.resourcemanager.securityinsights.models.GraphQueries.GraphQueries()"
  name: "GraphQueries()"
  nameWithType: "GraphQueries.GraphQueries()"
  summary: "Creates an instance of Graph<wbr>Queries class."
  syntax: "public GraphQueries()"
  desc: "Creates an instance of GraphQueries class."
methods:
- uid: "com.azure.resourcemanager.securityinsights.models.GraphQueries.baseQuery()"
  fullName: "com.azure.resourcemanager.securityinsights.models.GraphQueries.baseQuery()"
  name: "baseQuery()"
  nameWithType: "GraphQueries.baseQuery()"
  summary: "Get the base<wbr>Query property: The base query for the graph."
  syntax: "public String baseQuery()"
  desc: "Get the baseQuery property: The base query for the graph."
  returns:
    description: "the baseQuery value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.GraphQueries.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.securityinsights.models.GraphQueries.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "GraphQueries.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Graph<wbr>Queries from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static GraphQueries fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the GraphQueries."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads an instance of GraphQueries from the JsonReader."
  returns:
    description: "An instance of GraphQueries if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.GraphQueries?alt=com.azure.resourcemanager.securityinsights.models.GraphQueries&text=GraphQueries\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.GraphQueries.legend()"
  fullName: "com.azure.resourcemanager.securityinsights.models.GraphQueries.legend()"
  name: "legend()"
  nameWithType: "GraphQueries.legend()"
  summary: "Get the legend property: The legend for the graph."
  syntax: "public String legend()"
  desc: "Get the legend property: The legend for the graph."
  returns:
    description: "the legend value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.GraphQueries.metricName()"
  fullName: "com.azure.resourcemanager.securityinsights.models.GraphQueries.metricName()"
  name: "metricName()"
  nameWithType: "GraphQueries.metricName()"
  summary: "Get the metric<wbr>Name property: the metric that the query is checking."
  syntax: "public String metricName()"
  desc: "Get the metricName property: the metric that the query is checking."
  returns:
    description: "the metricName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.GraphQueries.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.securityinsights.models.GraphQueries.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "GraphQueries.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.GraphQueries.validate()"
  fullName: "com.azure.resourcemanager.securityinsights.models.GraphQueries.validate()"
  name: "validate()"
  nameWithType: "GraphQueries.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.securityinsights.models.GraphQueries.withBaseQuery(java.lang.String)"
  fullName: "com.azure.resourcemanager.securityinsights.models.GraphQueries.withBaseQuery(String baseQuery)"
  name: "withBaseQuery(String baseQuery)"
  nameWithType: "GraphQueries.withBaseQuery(String baseQuery)"
  summary: "Set the base<wbr>Query property: The base query for the graph."
  parameters:
  - description: "the baseQuery value to set."
    name: "baseQuery"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GraphQueries withBaseQuery(String baseQuery)"
  desc: "Set the baseQuery property: The base query for the graph."
  returns:
    description: "the GraphQueries object itself."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.GraphQueries?alt=com.azure.resourcemanager.securityinsights.models.GraphQueries&text=GraphQueries\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.GraphQueries.withLegend(java.lang.String)"
  fullName: "com.azure.resourcemanager.securityinsights.models.GraphQueries.withLegend(String legend)"
  name: "withLegend(String legend)"
  nameWithType: "GraphQueries.withLegend(String legend)"
  summary: "Set the legend property: The legend for the graph."
  parameters:
  - description: "the legend value to set."
    name: "legend"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GraphQueries withLegend(String legend)"
  desc: "Set the legend property: The legend for the graph."
  returns:
    description: "the GraphQueries object itself."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.GraphQueries?alt=com.azure.resourcemanager.securityinsights.models.GraphQueries&text=GraphQueries\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.securityinsights.models.GraphQueries.withMetricName(java.lang.String)"
  fullName: "com.azure.resourcemanager.securityinsights.models.GraphQueries.withMetricName(String metricName)"
  name: "withMetricName(String metricName)"
  nameWithType: "GraphQueries.withMetricName(String metricName)"
  summary: "Set the metric<wbr>Name property: the metric that the query is checking."
  parameters:
  - description: "the metricName value to set."
    name: "metricName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GraphQueries withMetricName(String metricName)"
  desc: "Set the metricName property: the metric that the query is checking."
  returns:
    description: "the GraphQueries object itself."
    type: "<xref href=\"com.azure.resourcemanager.securityinsights.models.GraphQueries?alt=com.azure.resourcemanager.securityinsights.models.GraphQueries&text=GraphQueries\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The graph query to show the current data status."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.securityinsights.models.GraphQueries?alt=com.azure.resourcemanager.securityinsights.models.GraphQueries&text=GraphQueries\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.securityinsights.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-securityinsights:1.0.0-beta.5
