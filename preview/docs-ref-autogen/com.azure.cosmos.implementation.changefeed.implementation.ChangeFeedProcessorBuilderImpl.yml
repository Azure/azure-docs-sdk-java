### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  id: "ChangeFeedProcessorBuilderImpl"
  parent: "com.azure.cosmos.implementation.changefeed.implementation"
  children:
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl()"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl(com.azure.cosmos.implementation.changefeed.PartitionManager)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.build()"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.close()"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.observer(java.lang.Class<? extends com.azure.cosmos.implementation.changefeed.ChangeFeedObserver>)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.observerFactory(com.azure.cosmos.implementation.changefeed.ChangeFeedObserverFactory)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setFeedContainer(com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setHandleChanges(java.util.function.Consumer<java.util.List<com.fasterxml.jackson.databind.JsonNode>>)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setHostName(java.lang.String)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setLeaseContainer(com.azure.cosmos.CosmosAsyncContainer)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setOptions(com.azure.cosmos.models.ChangeFeedProcessorOptions)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.start()"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.stop()"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withCollectionResourceId(java.lang.String)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withDatabaseResourceId(java.lang.String)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withHealthMonitor(com.azure.cosmos.implementation.changefeed.HealthMonitor)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withLeaseStoreManager(com.azure.cosmos.implementation.changefeed.LeaseStoreManager)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withPartitionLoadBalancingStrategy(com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy)"
  - "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withPartitionProcessorFactory(com.azure.cosmos.implementation.changefeed.PartitionProcessorFactory)"
  langs:
  - "java"
  name: "ChangeFeedProcessorBuilderImpl"
  nameWithType: "ChangeFeedProcessorBuilderImpl"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  type: "Class"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Helper class to buildAsyncClient <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\">ChangeFeedProcessor</xref> instances as logical representation of the Azure Cosmos DB database service.\n\n```java\nChangeFeedProcessor.Builder()\n     .setHostName(setHostName)\n     .setFeedContainer(setFeedContainer)\n     .setLeaseContainer(setLeaseContainer)\n     .setHandleChanges(docs -> {\n         // Implementation for handling and processing CosmosItemProperties list goes here\n      })\n     .observer(SampleObserverImpl.class)\n     .buildAsyncClient();\n```"
  syntax:
    content: "public class ChangeFeedProcessorBuilderImpl implements ChangeFeedProcessor.BuilderDefinition, ChangeFeedProcessor, AutoCloseable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.cosmos.ChangeFeedProcessor.BuilderDefinition"
  - "com.azure.cosmos.ChangeFeedProcessor"
  - "java.lang.AutoCloseable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl()"
  id: "ChangeFeedProcessorBuilderImpl()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "ChangeFeedProcessorBuilderImpl()"
  nameWithType: "ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl()"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl(com.azure.cosmos.implementation.changefeed.PartitionManager)"
  id: "ChangeFeedProcessorBuilderImpl(com.azure.cosmos.implementation.changefeed.PartitionManager)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "ChangeFeedProcessorBuilderImpl(PartitionManager partitionManager)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl(PartitionManager partitionManager)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl(PartitionManager partitionManager)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl*"
  type: "Constructor"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl(PartitionManager partitionManager)"
    parameters:
    - id: "partitionManager"
      type: "com.azure.cosmos.implementation.changefeed.PartitionManager"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.build()"
  id: "build()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "build()"
  nameWithType: "ChangeFeedProcessorBuilderImpl.build()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.build()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.build*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Builds a new instance of the <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\">ChangeFeedProcessor</xref> with the specified configuration asynchronously."
  syntax:
    content: "public ChangeFeedProcessor build()"
    return:
      type: "com.azure.cosmos.ChangeFeedProcessor"
      description: "an instance of <xref uid=\"com.azure.cosmos.ChangeFeedProcessor\" data-throw-if-not-resolved=\"false\">ChangeFeedProcessor</xref>."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.close()"
  id: "close()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "close()"
  nameWithType: "ChangeFeedProcessorBuilderImpl.close()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.close()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.close*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public void close()"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.observer(java.lang.Class<? extends com.azure.cosmos.implementation.changefeed.ChangeFeedObserver>)"
  id: "observer(java.lang.Class<? extends com.azure.cosmos.implementation.changefeed.ChangeFeedObserver>)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "observer(Class<? extends ChangeFeedObserver> type)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.observer(Class<? extends ChangeFeedObserver> type)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.observer(Class<? extends ChangeFeedObserver> type)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.observer*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Sets an existing <xref uid=\"com.azure.cosmos.implementation.changefeed.ChangeFeedObserver\" data-throw-if-not-resolved=\"false\">ChangeFeedObserver</xref> type to be used by a <xref uid=\"com.azure.cosmos.implementation.changefeed.ChangeFeedObserverFactory\" data-throw-if-not-resolved=\"false\">ChangeFeedObserverFactory</xref> to process changes."
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl observer(Class<? extends ChangeFeedObserver> type)"
    parameters:
    - id: "type"
      type: "java.lang.Class<? extends com.azure.cosmos.implementation.changefeed.ChangeFeedObserver>"
      description: "the type of <xref uid=\"com.azure.cosmos.implementation.changefeed.ChangeFeedObserver\" data-throw-if-not-resolved=\"false\">ChangeFeedObserver</xref> to be used."
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
      description: "current Builder."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.observerFactory(com.azure.cosmos.implementation.changefeed.ChangeFeedObserverFactory)"
  id: "observerFactory(com.azure.cosmos.implementation.changefeed.ChangeFeedObserverFactory)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "observerFactory(ChangeFeedObserverFactory observerFactory)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.observerFactory(ChangeFeedObserverFactory observerFactory)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.observerFactory(ChangeFeedObserverFactory observerFactory)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.observerFactory*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Sets the <xref uid=\"com.azure.cosmos.implementation.changefeed.ChangeFeedObserverFactory\" data-throw-if-not-resolved=\"false\">ChangeFeedObserverFactory</xref> to be used to generate <xref uid=\"com.azure.cosmos.implementation.changefeed.ChangeFeedObserver\" data-throw-if-not-resolved=\"false\">ChangeFeedObserver</xref>"
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl observerFactory(ChangeFeedObserverFactory observerFactory)"
    parameters:
    - id: "observerFactory"
      type: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserverFactory"
      description: "The instance of <xref uid=\"com.azure.cosmos.implementation.changefeed.ChangeFeedObserverFactory\" data-throw-if-not-resolved=\"false\">ChangeFeedObserverFactory</xref> to use."
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
      description: "current Builder."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setFeedContainer(com.azure.cosmos.CosmosAsyncContainer)"
  id: "setFeedContainer(com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "setFeedContainer(CosmosAsyncContainer feedDocumentClient)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.setFeedContainer(CosmosAsyncContainer feedDocumentClient)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setFeedContainer(CosmosAsyncContainer feedDocumentClient)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setFeedContainer*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Sets and existing <xref uid=\"com.azure.cosmos.CosmosAsyncContainer\" data-throw-if-not-resolved=\"false\">CosmosAsyncContainer</xref> to be used to read from the monitored collection."
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl setFeedContainer(CosmosAsyncContainer feedDocumentClient)"
    parameters:
    - id: "feedDocumentClient"
      type: "com.azure.cosmos.CosmosAsyncContainer"
      description: "the instance of <xref uid=\"com.azure.cosmos.CosmosAsyncContainer\" data-throw-if-not-resolved=\"false\">CosmosAsyncContainer</xref> to be used."
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
      description: "current Builder."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setHandleChanges(java.util.function.Consumer<java.util.List<com.fasterxml.jackson.databind.JsonNode>>)"
  id: "setHandleChanges(java.util.function.Consumer<java.util.List<com.fasterxml.jackson.databind.JsonNode>>)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "setHandleChanges(Consumer<List<JsonNode>> consumer)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.setHandleChanges(Consumer<List<JsonNode>> consumer)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setHandleChanges(Consumer<List<JsonNode>> consumer)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setHandleChanges*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl setHandleChanges(Consumer<List<JsonNode>> consumer)"
    parameters:
    - id: "consumer"
      type: "java.util.function.Consumer<java.util.List<com.fasterxml.jackson.databind.JsonNode>>"
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setHostName(java.lang.String)"
  id: "setHostName(java.lang.String)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "setHostName(String hostName)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.setHostName(String hostName)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setHostName(String hostName)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setHostName*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Sets the host name."
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl setHostName(String hostName)"
    parameters:
    - id: "hostName"
      type: "java.lang.String"
      description: "the name to be used for the host. When using multiple hosts, each host must have a unique name."
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
      description: "current Builder."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setLeaseContainer(com.azure.cosmos.CosmosAsyncContainer)"
  id: "setLeaseContainer(com.azure.cosmos.CosmosAsyncContainer)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "setLeaseContainer(CosmosAsyncContainer leaseDocumentClient)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.setLeaseContainer(CosmosAsyncContainer leaseDocumentClient)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setLeaseContainer(CosmosAsyncContainer leaseDocumentClient)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setLeaseContainer*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Sets an existing <xref uid=\"com.azure.cosmos.CosmosAsyncContainer\" data-throw-if-not-resolved=\"false\">CosmosAsyncContainer</xref> to be used to read from the leases collection."
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl setLeaseContainer(CosmosAsyncContainer leaseDocumentClient)"
    parameters:
    - id: "leaseDocumentClient"
      type: "com.azure.cosmos.CosmosAsyncContainer"
      description: "the instance of <xref uid=\"com.azure.cosmos.CosmosAsyncContainer\" data-throw-if-not-resolved=\"false\">CosmosAsyncContainer</xref> to use."
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
      description: "current Builder."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setOptions(com.azure.cosmos.models.ChangeFeedProcessorOptions)"
  id: "setOptions(com.azure.cosmos.models.ChangeFeedProcessorOptions)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "setOptions(ChangeFeedProcessorOptions changeFeedProcessorOptions)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.setOptions(ChangeFeedProcessorOptions changeFeedProcessorOptions)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setOptions(ChangeFeedProcessorOptions changeFeedProcessorOptions)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setOptions*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Sets the <xref uid=\"com.azure.cosmos.models.ChangeFeedProcessorOptions\" data-throw-if-not-resolved=\"false\">ChangeFeedProcessorOptions</xref> to be used."
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl setOptions(ChangeFeedProcessorOptions changeFeedProcessorOptions)"
    parameters:
    - id: "changeFeedProcessorOptions"
      type: "com.azure.cosmos.models.ChangeFeedProcessorOptions"
      description: "the change feed processor options to use."
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
      description: "current Builder."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.start()"
  id: "start()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "start()"
  nameWithType: "ChangeFeedProcessorBuilderImpl.start()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.start()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.start*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Start listening for changes asynchronously."
  syntax:
    content: "public Mono<Void> start()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
      description: "a representation of the deferred computation of this call."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.stop()"
  id: "stop()"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "stop()"
  nameWithType: "ChangeFeedProcessorBuilderImpl.stop()"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.stop()"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.stop*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Stops listening for changes asynchronously."
  syntax:
    content: "public Mono<Void> stop()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
      description: "a representation of the deferred computation of this call."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withCollectionResourceId(java.lang.String)"
  id: "withCollectionResourceId(java.lang.String)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "withCollectionResourceId(String collectionResourceId)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.withCollectionResourceId(String collectionResourceId)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withCollectionResourceId(String collectionResourceId)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withCollectionResourceId*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Sets the collection resource ID of the monitored collection."
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl withCollectionResourceId(String collectionResourceId)"
    parameters:
    - id: "collectionResourceId"
      type: "java.lang.String"
      description: "the collection resource ID of the monitored collection."
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
      description: "current Builder."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withDatabaseResourceId(java.lang.String)"
  id: "withDatabaseResourceId(java.lang.String)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "withDatabaseResourceId(String databaseResourceId)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.withDatabaseResourceId(String databaseResourceId)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withDatabaseResourceId(String databaseResourceId)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withDatabaseResourceId*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Sets the database resource ID of the monitored collection."
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl withDatabaseResourceId(String databaseResourceId)"
    parameters:
    - id: "databaseResourceId"
      type: "java.lang.String"
      description: "the database resource ID of the monitored collection."
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
      description: "current Builder."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withHealthMonitor(com.azure.cosmos.implementation.changefeed.HealthMonitor)"
  id: "withHealthMonitor(com.azure.cosmos.implementation.changefeed.HealthMonitor)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "withHealthMonitor(HealthMonitor healthMonitor)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.withHealthMonitor(HealthMonitor healthMonitor)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withHealthMonitor(HealthMonitor healthMonitor)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withHealthMonitor*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Sets the <xref uid=\"com.azure.cosmos.implementation.changefeed.HealthMonitor\" data-throw-if-not-resolved=\"false\">HealthMonitor</xref> to be used to monitor unhealthiness situation."
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl withHealthMonitor(HealthMonitor healthMonitor)"
    parameters:
    - id: "healthMonitor"
      type: "com.azure.cosmos.implementation.changefeed.HealthMonitor"
      description: "The instance of <xref uid=\"com.azure.cosmos.implementation.changefeed.HealthMonitor\" data-throw-if-not-resolved=\"false\">HealthMonitor</xref> to use."
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
      description: "current Builder."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withLeaseStoreManager(com.azure.cosmos.implementation.changefeed.LeaseStoreManager)"
  id: "withLeaseStoreManager(com.azure.cosmos.implementation.changefeed.LeaseStoreManager)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "withLeaseStoreManager(LeaseStoreManager leaseStoreManager)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.withLeaseStoreManager(LeaseStoreManager leaseStoreManager)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withLeaseStoreManager(LeaseStoreManager leaseStoreManager)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withLeaseStoreManager*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Sets the <xref uid=\"com.azure.cosmos.implementation.changefeed.LeaseStoreManager\" data-throw-if-not-resolved=\"false\">LeaseStoreManager</xref> to be used to manage leases."
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl withLeaseStoreManager(LeaseStoreManager leaseStoreManager)"
    parameters:
    - id: "leaseStoreManager"
      type: "com.azure.cosmos.implementation.changefeed.LeaseStoreManager"
      description: "the instance of <xref uid=\"com.azure.cosmos.implementation.changefeed.LeaseStoreManager\" data-throw-if-not-resolved=\"false\">LeaseStoreManager</xref> to use."
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
      description: "current Builder."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withPartitionLoadBalancingStrategy(com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy)"
  id: "withPartitionLoadBalancingStrategy(com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "withPartitionLoadBalancingStrategy(PartitionLoadBalancingStrategy loadBalancingStrategy)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.withPartitionLoadBalancingStrategy(PartitionLoadBalancingStrategy loadBalancingStrategy)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withPartitionLoadBalancingStrategy(PartitionLoadBalancingStrategy loadBalancingStrategy)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withPartitionLoadBalancingStrategy*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Sets the <xref uid=\"com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy\" data-throw-if-not-resolved=\"false\">PartitionLoadBalancingStrategy</xref> to be used for partition load balancing."
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl withPartitionLoadBalancingStrategy(PartitionLoadBalancingStrategy loadBalancingStrategy)"
    parameters:
    - id: "loadBalancingStrategy"
      type: "com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy"
      description: "the <xref uid=\"com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy\" data-throw-if-not-resolved=\"false\">PartitionLoadBalancingStrategy</xref> to be used for partition load balancing."
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
      description: "current Builder."
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withPartitionProcessorFactory(com.azure.cosmos.implementation.changefeed.PartitionProcessorFactory)"
  id: "withPartitionProcessorFactory(com.azure.cosmos.implementation.changefeed.PartitionProcessorFactory)"
  parent: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
  langs:
  - "java"
  name: "withPartitionProcessorFactory(PartitionProcessorFactory partitionProcessorFactory)"
  nameWithType: "ChangeFeedProcessorBuilderImpl.withPartitionProcessorFactory(PartitionProcessorFactory partitionProcessorFactory)"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withPartitionProcessorFactory(PartitionProcessorFactory partitionProcessorFactory)"
  overload: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withPartitionProcessorFactory*"
  type: "Method"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
  summary: "Sets the <xref uid=\"com.azure.cosmos.implementation.changefeed.PartitionProcessorFactory\" data-throw-if-not-resolved=\"false\">PartitionProcessorFactory</xref> to be used to create <xref uid=\"com.azure.cosmos.implementation.changefeed.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref> for partition processing."
  syntax:
    content: "public ChangeFeedProcessorBuilderImpl withPartitionProcessorFactory(PartitionProcessorFactory partitionProcessorFactory)"
    parameters:
    - id: "partitionProcessorFactory"
      type: "com.azure.cosmos.implementation.changefeed.PartitionProcessorFactory"
      description: "the instance of <xref uid=\"com.azure.cosmos.implementation.changefeed.PartitionProcessorFactory\" data-throw-if-not-resolved=\"false\">PartitionProcessorFactory</xref> to use."
    return:
      type: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl"
      description: "current Builder."
references:
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl*"
  name: "ChangeFeedProcessorBuilderImpl"
  nameWithType: "ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.ChangeFeedProcessorBuilderImpl"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.PartitionManager"
  name: "PartitionManager"
  nameWithType: "PartitionManager"
  fullName: "com.azure.cosmos.implementation.changefeed.PartitionManager"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.start*"
  name: "start"
  nameWithType: "ChangeFeedProcessorBuilderImpl.start"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.start"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.stop*"
  name: "stop"
  nameWithType: "ChangeFeedProcessorBuilderImpl.stop"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.stop"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setHostName*"
  name: "setHostName"
  nameWithType: "ChangeFeedProcessorBuilderImpl.setHostName"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setHostName"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.CosmosAsyncContainer"
  name: "CosmosAsyncContainer"
  nameWithType: "CosmosAsyncContainer"
  fullName: "com.azure.cosmos.CosmosAsyncContainer"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setFeedContainer*"
  name: "setFeedContainer"
  nameWithType: "ChangeFeedProcessorBuilderImpl.setFeedContainer"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setFeedContainer"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.models.ChangeFeedProcessorOptions"
  name: "ChangeFeedProcessorOptions"
  nameWithType: "ChangeFeedProcessorOptions"
  fullName: "com.azure.cosmos.models.ChangeFeedProcessorOptions"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setOptions*"
  name: "setOptions"
  nameWithType: "ChangeFeedProcessorBuilderImpl.setOptions"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setOptions"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserverFactory"
  name: "ChangeFeedObserverFactory"
  nameWithType: "ChangeFeedObserverFactory"
  fullName: "com.azure.cosmos.implementation.changefeed.ChangeFeedObserverFactory"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.observerFactory*"
  name: "observerFactory"
  nameWithType: "ChangeFeedProcessorBuilderImpl.observerFactory"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.observerFactory"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "java.lang.Class<? extends com.azure.cosmos.implementation.changefeed.ChangeFeedObserver>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "? extends com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
    name: "ChangeFeedObserver"
    fullName: "? extends com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.observer*"
  name: "observer"
  nameWithType: "ChangeFeedProcessorBuilderImpl.observer"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.observer"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "java.util.function.Consumer<java.util.List<com.fasterxml.jackson.databind.JsonNode>>"
  spec.java:
  - uid: "java.util.function.Consumer"
    name: "Consumer"
    fullName: "java.util.function.Consumer"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.fasterxml.jackson.databind.JsonNode"
    name: "JsonNode"
    fullName: "com.fasterxml.jackson.databind.JsonNode"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setHandleChanges*"
  name: "setHandleChanges"
  nameWithType: "ChangeFeedProcessorBuilderImpl.setHandleChanges"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setHandleChanges"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withDatabaseResourceId*"
  name: "withDatabaseResourceId"
  nameWithType: "ChangeFeedProcessorBuilderImpl.withDatabaseResourceId"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withDatabaseResourceId"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withCollectionResourceId*"
  name: "withCollectionResourceId"
  nameWithType: "ChangeFeedProcessorBuilderImpl.withCollectionResourceId"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withCollectionResourceId"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setLeaseContainer*"
  name: "setLeaseContainer"
  nameWithType: "ChangeFeedProcessorBuilderImpl.setLeaseContainer"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.setLeaseContainer"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy"
  name: "PartitionLoadBalancingStrategy"
  nameWithType: "PartitionLoadBalancingStrategy"
  fullName: "com.azure.cosmos.implementation.changefeed.PartitionLoadBalancingStrategy"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withPartitionLoadBalancingStrategy*"
  name: "withPartitionLoadBalancingStrategy"
  nameWithType: "ChangeFeedProcessorBuilderImpl.withPartitionLoadBalancingStrategy"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withPartitionLoadBalancingStrategy"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.PartitionProcessorFactory"
  name: "PartitionProcessorFactory"
  nameWithType: "PartitionProcessorFactory"
  fullName: "com.azure.cosmos.implementation.changefeed.PartitionProcessorFactory"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withPartitionProcessorFactory*"
  name: "withPartitionProcessorFactory"
  nameWithType: "ChangeFeedProcessorBuilderImpl.withPartitionProcessorFactory"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withPartitionProcessorFactory"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.LeaseStoreManager"
  name: "LeaseStoreManager"
  nameWithType: "LeaseStoreManager"
  fullName: "com.azure.cosmos.implementation.changefeed.LeaseStoreManager"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withLeaseStoreManager*"
  name: "withLeaseStoreManager"
  nameWithType: "ChangeFeedProcessorBuilderImpl.withLeaseStoreManager"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withLeaseStoreManager"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.HealthMonitor"
  name: "HealthMonitor"
  nameWithType: "HealthMonitor"
  fullName: "com.azure.cosmos.implementation.changefeed.HealthMonitor"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withHealthMonitor*"
  name: "withHealthMonitor"
  nameWithType: "ChangeFeedProcessorBuilderImpl.withHealthMonitor"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.withHealthMonitor"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.ChangeFeedProcessor"
  name: "ChangeFeedProcessor"
  nameWithType: "ChangeFeedProcessor"
  fullName: "com.azure.cosmos.ChangeFeedProcessor"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.build*"
  name: "build"
  nameWithType: "ChangeFeedProcessorBuilderImpl.build"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.build"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.close*"
  name: "close"
  nameWithType: "ChangeFeedProcessorBuilderImpl.close"
  fullName: "com.azure.cosmos.implementation.changefeed.implementation.ChangeFeedProcessorBuilderImpl.close"
  package: "com.azure.cosmos.implementation.changefeed.implementation"
- uid: "com.azure.cosmos.ChangeFeedProcessor.BuilderDefinition"
  name: "ChangeFeedProcessor.BuilderDefinition"
  nameWithType: "ChangeFeedProcessor.BuilderDefinition"
  fullName: "com.azure.cosmos.ChangeFeedProcessor.BuilderDefinition"
- uid: "java.lang.AutoCloseable"
  name: "AutoCloseable"
  nameWithType: "AutoCloseable"
  fullName: "java.lang.AutoCloseable"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "? extends com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
  name: "? extends ChangeFeedObserver"
  nameWithType: "? extends ChangeFeedObserver"
  fullName: "? extends com.azure.cosmos.implementation.changefeed.ChangeFeedObserver"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "java.util.function.Consumer"
  name: "Consumer"
  nameWithType: "Consumer"
  fullName: "java.util.function.Consumer"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.fasterxml.jackson.databind.JsonNode"
  name: "JsonNode"
  nameWithType: "JsonNode"
  fullName: "com.fasterxml.jackson.databind.JsonNode"
