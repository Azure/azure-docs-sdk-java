### YamlMime:JavaMember
uid: "com.azure.core.util.FluxUtil.toMono*"
fullName: "com.azure.core.util.FluxUtil.<T>toMono"
name: "<T>toMono"
nameWithType: "FluxUtil.<T>toMono"
members:
- uid: "com.azure.core.util.FluxUtil.<T>toMono(com.azure.core.http.rest.Response<T>)"
  fullName: "com.azure.core.util.FluxUtil.<T>toMono(Response<T> response)"
  name: "<T>toMono(Response<T> response)"
  nameWithType: "FluxUtil.<T>toMono(Response<T> response)"
  summary: "Converts the incoming content to Mono."
  parameters:
  - description: "whose <xref uid=\"com.azure.core.http.rest.Response.getValue()\" data-throw-if-not-resolved=\"false\">value</xref> is to be converted"
    name: "response"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Mono<T> <T>toMono(Response<T> response)"
  returns:
    description: "The converted <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref>"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.core.util"
artifact: com.azure:azure-core:1.3.0-beta.1
