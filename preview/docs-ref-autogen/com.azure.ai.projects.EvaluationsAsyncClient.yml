### YamlMime:JavaType
uid: "com.azure.ai.projects.EvaluationsAsyncClient"
fullName: "com.azure.ai.projects.EvaluationsAsyncClient"
name: "EvaluationsAsyncClient"
nameWithType: "EvaluationsAsyncClient"
summary: "Initializes a new instance of the asynchronous AIProject<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **EvaluationsAsyncClient**"
methods:
- uid: "com.azure.ai.projects.EvaluationsAsyncClient.createAgentEvaluation(com.azure.ai.projects.models.AgentEvaluationRequest)"
  fullName: "com.azure.ai.projects.EvaluationsAsyncClient.createAgentEvaluation(AgentEvaluationRequest evaluation)"
  name: "createAgentEvaluation(AgentEvaluationRequest evaluation)"
  nameWithType: "EvaluationsAsyncClient.createAgentEvaluation(AgentEvaluationRequest evaluation)"
  summary: "Creates an agent evaluation run."
  parameters:
  - description: "Agent evaluation to be run."
    name: "evaluation"
    type: "<xref href=\"com.azure.ai.projects.models.AgentEvaluationRequest?alt=com.azure.ai.projects.models.AgentEvaluationRequest&text=AgentEvaluationRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AgentEvaluation> createAgentEvaluation(AgentEvaluationRequest evaluation)"
  desc: "Creates an agent evaluation run."
  returns:
    description: "evaluation response for agent evaluation run on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.projects.models.AgentEvaluation?alt=com.azure.ai.projects.models.AgentEvaluation&text=AgentEvaluation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.projects.EvaluationsAsyncClient.createAgentEvaluationWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.projects.EvaluationsAsyncClient.createAgentEvaluationWithResponse(BinaryData evaluation, RequestOptions requestOptions)"
  name: "createAgentEvaluationWithResponse(BinaryData evaluation, RequestOptions requestOptions)"
  nameWithType: "EvaluationsAsyncClient.createAgentEvaluationWithResponse(BinaryData evaluation, RequestOptions requestOptions)"
  summary: "Creates an agent evaluation run."
  parameters:
  - description: "Agent evaluation to be run."
    name: "evaluation"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> createAgentEvaluationWithResponse(BinaryData evaluation, RequestOptions requestOptions)"
  desc: "Creates an agent evaluation run.\n\n**Request Body Schema**\n\n```java\n{\n     runId: String (Required)\n     threadId: String (Optional)\n     evaluators (Required): {\n         String (Required): {\n             id: String (Required)\n             initParams (Optional): {\n                 String: BinaryData (Required)\n             }\n             dataMapping (Optional): {\n                 String: String (Required)\n             }\n         }\n     }\n     samplingConfiguration (Optional): {\n         name: String (Required)\n         samplingPercent: double (Required)\n         maxRequestRate: double (Required)\n     }\n     redactionConfiguration (Optional): {\n         redactScoreProperties: Boolean (Optional)\n     }\n     appInsightsConnectionString: String (Required)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     status: String (Required)\n     error: String (Optional)\n     result (Optional): [\n          (Optional){\n             evaluator: String (Required)\n             evaluatorId: String (Required)\n             score: double (Required)\n             status: String (Required)\n             reason: String (Optional)\n             version: String (Optional)\n             threadId: String (Optional)\n             runId: String (Required)\n             error: String (Optional)\n             additionalDetails (Optional): {\n                 String: String (Required)\n             }\n         }\n     ]\n }\n```"
  returns:
    description: "evaluation response for agent evaluation run along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.projects.EvaluationsAsyncClient.createEvaluation(com.azure.ai.projects.models.Evaluation)"
  fullName: "com.azure.ai.projects.EvaluationsAsyncClient.createEvaluation(Evaluation evaluation)"
  name: "createEvaluation(Evaluation evaluation)"
  nameWithType: "EvaluationsAsyncClient.createEvaluation(Evaluation evaluation)"
  summary: "Creates an evaluation run."
  parameters:
  - description: "Evaluation to be run."
    name: "evaluation"
    type: "<xref href=\"com.azure.ai.projects.models.Evaluation?alt=com.azure.ai.projects.models.Evaluation&text=Evaluation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Evaluation> createEvaluation(Evaluation evaluation)"
  desc: "Creates an evaluation run."
  returns:
    description: "evaluation Definition on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.projects.models.Evaluation?alt=com.azure.ai.projects.models.Evaluation&text=Evaluation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.projects.EvaluationsAsyncClient.createEvaluationWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.projects.EvaluationsAsyncClient.createEvaluationWithResponse(BinaryData evaluation, RequestOptions requestOptions)"
  name: "createEvaluationWithResponse(BinaryData evaluation, RequestOptions requestOptions)"
  nameWithType: "EvaluationsAsyncClient.createEvaluationWithResponse(BinaryData evaluation, RequestOptions requestOptions)"
  summary: "Creates an evaluation run."
  parameters:
  - description: "Evaluation to be run."
    name: "evaluation"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> createEvaluationWithResponse(BinaryData evaluation, RequestOptions requestOptions)"
  desc: "Creates an evaluation run.\n\n**Request Body Schema**\n\n```java\n{\n     id: String (Required)\n     data (Required): {\n         type: String (Required)\n     }\n     displayName: String (Optional)\n     description: String (Optional)\n     status: String (Optional)\n     tags (Optional): {\n         String: String (Required)\n     }\n     properties (Optional): {\n         String: String (Required)\n     }\n     evaluators (Required): {\n         String (Required): {\n             id: String (Required)\n             initParams (Optional): {\n                 String: BinaryData (Required)\n             }\n             dataMapping (Optional): {\n                 String: String (Required)\n             }\n         }\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     data (Required): {\n         type: String (Required)\n     }\n     displayName: String (Optional)\n     description: String (Optional)\n     status: String (Optional)\n     tags (Optional): {\n         String: String (Required)\n     }\n     properties (Optional): {\n         String: String (Required)\n     }\n     evaluators (Required): {\n         String (Required): {\n             id: String (Required)\n             initParams (Optional): {\n                 String: BinaryData (Required)\n             }\n             dataMapping (Optional): {\n                 String: String (Required)\n             }\n         }\n     }\n }\n```"
  returns:
    description: "evaluation Definition along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.projects.EvaluationsAsyncClient.getEvaluation(java.lang.String)"
  fullName: "com.azure.ai.projects.EvaluationsAsyncClient.getEvaluation(String name)"
  name: "getEvaluation(String name)"
  nameWithType: "EvaluationsAsyncClient.getEvaluation(String name)"
  summary: "Get an evaluation run by name."
  parameters:
  - description: "Identifier of the evaluation."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Evaluation> getEvaluation(String name)"
  desc: "Get an evaluation run by name."
  returns:
    description: "an evaluation run by name on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.projects.models.Evaluation?alt=com.azure.ai.projects.models.Evaluation&text=Evaluation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.projects.EvaluationsAsyncClient.getEvaluationWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.projects.EvaluationsAsyncClient.getEvaluationWithResponse(String name, RequestOptions requestOptions)"
  name: "getEvaluationWithResponse(String name, RequestOptions requestOptions)"
  nameWithType: "EvaluationsAsyncClient.getEvaluationWithResponse(String name, RequestOptions requestOptions)"
  summary: "Get an evaluation run by name."
  parameters:
  - description: "Identifier of the evaluation."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<BinaryData>> getEvaluationWithResponse(String name, RequestOptions requestOptions)"
  desc: "Get an evaluation run by name.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     data (Required): {\n         type: String (Required)\n     }\n     displayName: String (Optional)\n     description: String (Optional)\n     status: String (Optional)\n     tags (Optional): {\n         String: String (Required)\n     }\n     properties (Optional): {\n         String: String (Required)\n     }\n     evaluators (Required): {\n         String (Required): {\n             id: String (Required)\n             initParams (Optional): {\n                 String: BinaryData (Required)\n             }\n             dataMapping (Optional): {\n                 String: String (Required)\n             }\n         }\n     }\n }\n```"
  returns:
    description: "an evaluation run by name along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.projects.EvaluationsAsyncClient.listEvaluations()"
  fullName: "com.azure.ai.projects.EvaluationsAsyncClient.listEvaluations()"
  name: "listEvaluations()"
  nameWithType: "EvaluationsAsyncClient.listEvaluations()"
  summary: "List evaluation runs."
  syntax: "public PagedFlux<Evaluation> listEvaluations()"
  desc: "List evaluation runs."
  returns:
    description: "paged collection of Evaluation items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.projects.models.Evaluation?alt=com.azure.ai.projects.models.Evaluation&text=Evaluation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.projects.EvaluationsAsyncClient.listEvaluations(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.projects.EvaluationsAsyncClient.listEvaluations(RequestOptions requestOptions)"
  name: "listEvaluations(RequestOptions requestOptions)"
  nameWithType: "EvaluationsAsyncClient.listEvaluations(RequestOptions requestOptions)"
  summary: "List evaluation runs."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BinaryData> listEvaluations(RequestOptions requestOptions)"
  desc: "List evaluation runs.\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     data (Required): {\n         type: String (Required)\n     }\n     displayName: String (Optional)\n     description: String (Optional)\n     status: String (Optional)\n     tags (Optional): {\n         String: String (Required)\n     }\n     properties (Optional): {\n         String: String (Required)\n     }\n     evaluators (Required): {\n         String (Required): {\n             id: String (Required)\n             initParams (Optional): {\n                 String: BinaryData (Required)\n             }\n             dataMapping (Optional): {\n                 String: String (Required)\n             }\n         }\n     }\n }\n```"
  returns:
    description: "paged collection of Evaluation items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous AIProjectClient type."
metadata: {}
package: "com.azure.ai.projects"
artifact: com.azure:azure-ai-projects:1.0.0-beta.1
