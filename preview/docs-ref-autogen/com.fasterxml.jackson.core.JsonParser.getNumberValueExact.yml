### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonParser.getNumberValueExact*"
fullName: "com.fasterxml.jackson.core.JsonParser.getNumberValueExact"
name: "getNumberValueExact"
nameWithType: "JsonParser.getNumberValueExact"
members:
- uid: "com.fasterxml.jackson.core.JsonParser.getNumberValueExact()"
  fullName: "com.fasterxml.jackson.core.JsonParser.getNumberValueExact()"
  name: "getNumberValueExact()"
  nameWithType: "JsonParser.getNumberValueExact()"
  summary: "Method similar to <xref uid=\"com.fasterxml.jackson.core.JsonParser.getNumberValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getNumberValue\"></xref> with the difference that for floating-point numbers value returned may be <xref uid=\"java.math.BigDecimal\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BigDecimal\"></xref> if the underlying format does not store floating-point numbers using native representation: for example, textual formats represent numbers as Strings (which are 10-based), and conversion to <xref uid=\"java.lang.Double\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.Double\"></xref> is potentially lossy operation.\n\nDefault implementation simply returns <xref uid=\"com.fasterxml.jackson.core.JsonParser.getNumberValue()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getNumberValue()\"></xref>"
  syntax: "public Number getNumberValueExact()"
  exceptions:
  - description: "Problem with access: <xref uid=\"JsonParseException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParseException\"></xref> if\n    the current token is not numeric, or if decoding of the value fails\n    (invalid format for numbers); plain <xref uid=\"IOException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IOException\"></xref> if underlying\n    content read fails (possible if values are extracted lazily)"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Numeric value of the current token using most accurate representation"
    type: "<xref href=\"java.lang.Number?alt=java.lang.Number&text=Number\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
