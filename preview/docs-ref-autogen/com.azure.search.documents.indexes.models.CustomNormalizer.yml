### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.CustomNormalizer"
fullName: "com.azure.search.documents.indexes.models.CustomNormalizer"
name: "CustomNormalizer"
nameWithType: "CustomNormalizer"
summary: "Allows you to configure normalization for filterable, sortable, and facetable fields, which by default operate with strict matching."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.LexicalNormalizer?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.search.documents.indexes.models.LexicalNormalizer?alt=com.azure.search.documents.indexes.models.LexicalNormalizer&text=LexicalNormalizer\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.search.documents.indexes.models.LexicalNormalizer.fromJson(com.azure.json.JsonReader)?alt=com.azure.search.documents.indexes.models.LexicalNormalizer.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.indexes.models.LexicalNormalizer.getName()?alt=com.azure.search.documents.indexes.models.LexicalNormalizer.getName&text=getName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.indexes.models.LexicalNormalizer.getOdataType()?alt=com.azure.search.documents.indexes.models.LexicalNormalizer.getOdataType&text=getOdataType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.documents.indexes.models.LexicalNormalizer.toJson(com.azure.json.JsonWriter)?alt=com.azure.search.documents.indexes.models.LexicalNormalizer.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **CustomNormalizer**</br> extends <xref href=\"com.azure.search.documents.indexes.models.LexicalNormalizer?alt=com.azure.search.documents.indexes.models.LexicalNormalizer&text=LexicalNormalizer\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.search.documents.indexes.models.CustomNormalizer.CustomNormalizer(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.CustomNormalizer.CustomNormalizer(String name)"
  name: "CustomNormalizer(String name)"
  nameWithType: "CustomNormalizer.CustomNormalizer(String name)"
  summary: "Creates an instance of Custom<wbr>Normalizer class."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public CustomNormalizer(String name)"
  desc: "Creates an instance of CustomNormalizer class."
methods:
- uid: "com.azure.search.documents.indexes.models.CustomNormalizer.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.search.documents.indexes.models.CustomNormalizer.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "CustomNormalizer.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Custom<wbr>Normalizer from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CustomNormalizer fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of CustomNormalizer from the JsonReader."
  returns:
    description: "An instance of CustomNormalizer if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.search.documents.indexes.models.CustomNormalizer?alt=com.azure.search.documents.indexes.models.CustomNormalizer&text=CustomNormalizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.CustomNormalizer.getCharFilters()"
  fullName: "com.azure.search.documents.indexes.models.CustomNormalizer.getCharFilters()"
  name: "getCharFilters()"
  nameWithType: "CustomNormalizer.getCharFilters()"
  summary: "Get the char<wbr>Filters property: A list of character filters used to prepare input text before it is processed."
  syntax: "public List<CharFilterName> getCharFilters()"
  desc: "Get the charFilters property: A list of character filters used to prepare input text before it is processed. For instance, they can replace certain characters or symbols. The filters are run in the order in which they are listed."
  returns:
    description: "the charFilters value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.search.documents.indexes.models.CharFilterName?alt=com.azure.search.documents.indexes.models.CharFilterName&text=CharFilterName\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.CustomNormalizer.getOdataType()"
  fullName: "com.azure.search.documents.indexes.models.CustomNormalizer.getOdataType()"
  name: "getOdataType()"
  nameWithType: "CustomNormalizer.getOdataType()"
  summary: "Get the odata<wbr>Type property: A URI fragment specifying the type of normalizer."
  overridden: "com.azure.search.documents.indexes.models.LexicalNormalizer.getOdataType()"
  syntax: "public String getOdataType()"
  desc: "Get the odataType property: A URI fragment specifying the type of normalizer."
  returns:
    description: "the odataType value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.documents.indexes.models.CustomNormalizer.getTokenFilters()"
  fullName: "com.azure.search.documents.indexes.models.CustomNormalizer.getTokenFilters()"
  name: "getTokenFilters()"
  nameWithType: "CustomNormalizer.getTokenFilters()"
  summary: "Get the token<wbr>Filters property: A list of token filters used to filter out or modify the input token."
  syntax: "public List<TokenFilterName> getTokenFilters()"
  desc: "Get the tokenFilters property: A list of token filters used to filter out or modify the input token. For example, you can specify a lowercase filter that converts all characters to lowercase. The filters are run in the order in which they are listed."
  returns:
    description: "the tokenFilters value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.search.documents.indexes.models.TokenFilterName?alt=com.azure.search.documents.indexes.models.TokenFilterName&text=TokenFilterName\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.documents.indexes.models.CustomNormalizer.setCharFilters(java.util.List<com.azure.search.documents.indexes.models.CharFilterName>)"
  fullName: "com.azure.search.documents.indexes.models.CustomNormalizer.setCharFilters(List<CharFilterName> charFilters)"
  name: "setCharFilters(List<CharFilterName> charFilters)"
  nameWithType: "CustomNormalizer.setCharFilters(List<CharFilterName> charFilters)"
  summary: "Set the char<wbr>Filters property: A list of character filters used to prepare input text before it is processed."
  parameters:
  - description: "the charFilters value to set."
    name: "charFilters"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.search.documents.indexes.models.CharFilterName?alt=com.azure.search.documents.indexes.models.CharFilterName&text=CharFilterName\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CustomNormalizer setCharFilters(List<CharFilterName> charFilters)"
  desc: "Set the charFilters property: A list of character filters used to prepare input text before it is processed. For instance, they can replace certain characters or symbols. The filters are run in the order in which they are listed."
  returns:
    description: "the CustomNormalizer object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.CustomNormalizer?alt=com.azure.search.documents.indexes.models.CustomNormalizer&text=CustomNormalizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.CustomNormalizer.setTokenFilters(java.util.List<com.azure.search.documents.indexes.models.TokenFilterName>)"
  fullName: "com.azure.search.documents.indexes.models.CustomNormalizer.setTokenFilters(List<TokenFilterName> tokenFilters)"
  name: "setTokenFilters(List<TokenFilterName> tokenFilters)"
  nameWithType: "CustomNormalizer.setTokenFilters(List<TokenFilterName> tokenFilters)"
  summary: "Set the token<wbr>Filters property: A list of token filters used to filter out or modify the input token."
  parameters:
  - description: "the tokenFilters value to set."
    name: "tokenFilters"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.search.documents.indexes.models.TokenFilterName?alt=com.azure.search.documents.indexes.models.TokenFilterName&text=TokenFilterName\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CustomNormalizer setTokenFilters(List<TokenFilterName> tokenFilters)"
  desc: "Set the tokenFilters property: A list of token filters used to filter out or modify the input token. For example, you can specify a lowercase filter that converts all characters to lowercase. The filters are run in the order in which they are listed."
  returns:
    description: "the CustomNormalizer object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.CustomNormalizer?alt=com.azure.search.documents.indexes.models.CustomNormalizer&text=CustomNormalizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.CustomNormalizer.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.search.documents.indexes.models.CustomNormalizer.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "CustomNormalizer.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.search.documents.indexes.models.LexicalNormalizer.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Allows you to configure normalization for filterable, sortable, and facetable fields, which by default operate with strict matching. This is a user-defined configuration consisting of at least one or more filters, which modify the token that is stored."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.8.0-beta.1
