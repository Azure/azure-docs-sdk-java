### YamlMime:JavaType
uid: "com.azure.resourcemanager.dynatrace.models.Monitors"
fullName: "com.azure.resourcemanager.dynatrace.models.Monitors"
name: "Monitors"
nameWithType: "Monitors"
summary: "Resource collection API of Monitors."
syntax: "public interface Monitors"
methods:
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.define(String name)"
  name: "define(String name)"
  nameWithType: "Monitors.define(String name)"
  summary: "Begins definition for a new Monitor<wbr>Resource resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MonitorResource.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new MonitorResource resource."
  returns:
    description: "the first stage of the new MonitorResource definition."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResource.DefinitionStages.Blank?alt=com.azure.resourcemanager.dynatrace.models.MonitorResource.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.delete(String resourceGroupName, String monitorName, Context context)"
  name: "delete(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "Monitors.delete(String resourceGroupName, String monitorName, Context context)"
  summary: "Delete a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String monitorName, Context context)"
  desc: "Delete a MonitorResource."
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Monitors.deleteById(String id)"
  summary: "Delete a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Delete a MonitorResource."
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Monitors.deleteByIdWithResponse(String id, Context context)"
  summary: "Delete a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByIdWithResponse(String id, Context context)"
  desc: "Delete a MonitorResource."
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.deleteByResourceGroup(String resourceGroupName, String monitorName)"
  name: "deleteByResourceGroup(String resourceGroupName, String monitorName)"
  nameWithType: "Monitors.deleteByResourceGroup(String resourceGroupName, String monitorName)"
  summary: "Delete a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String monitorName)"
  desc: "Delete a MonitorResource."
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.getAccountCredentials(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.getAccountCredentials(String resourceGroupName, String monitorName)"
  name: "getAccountCredentials(String resourceGroupName, String monitorName)"
  nameWithType: "Monitors.getAccountCredentials(String resourceGroupName, String monitorName)"
  summary: "Gets the user account credentials for a Monitor."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AccountInfoSecure getAccountCredentials(String resourceGroupName, String monitorName)"
  desc: "Gets the user account credentials for a Monitor."
  returns:
    description: "the user account credentials for a Monitor."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.AccountInfoSecure?alt=com.azure.resourcemanager.dynatrace.models.AccountInfoSecure&text=AccountInfoSecure\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.getAccountCredentialsWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.getAccountCredentialsWithResponse(String resourceGroupName, String monitorName, Context context)"
  name: "getAccountCredentialsWithResponse(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "Monitors.getAccountCredentialsWithResponse(String resourceGroupName, String monitorName, Context context)"
  summary: "Gets the user account credentials for a Monitor."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AccountInfoSecure> getAccountCredentialsWithResponse(String resourceGroupName, String monitorName, Context context)"
  desc: "Gets the user account credentials for a Monitor."
  returns:
    description: "the user account credentials for a Monitor along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.AccountInfoSecure?alt=com.azure.resourcemanager.dynatrace.models.AccountInfoSecure&text=AccountInfoSecure\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Monitors.getById(String id)"
  summary: "Get a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MonitorResource getById(String id)"
  desc: "Get a MonitorResource."
  returns:
    description: "a MonitorResource along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResource?alt=com.azure.resourcemanager.dynatrace.models.MonitorResource&text=MonitorResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.getByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.getByIdWithResponse(String id, Context context)"
  name: "getByIdWithResponse(String id, Context context)"
  nameWithType: "Monitors.getByIdWithResponse(String id, Context context)"
  summary: "Get a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MonitorResource> getByIdWithResponse(String id, Context context)"
  desc: "Get a MonitorResource."
  returns:
    description: "a MonitorResource along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResource?alt=com.azure.resourcemanager.dynatrace.models.MonitorResource&text=MonitorResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.getByResourceGroup(String resourceGroupName, String monitorName)"
  name: "getByResourceGroup(String resourceGroupName, String monitorName)"
  nameWithType: "Monitors.getByResourceGroup(String resourceGroupName, String monitorName)"
  summary: "Get a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MonitorResource getByResourceGroup(String resourceGroupName, String monitorName)"
  desc: "Get a MonitorResource."
  returns:
    description: "a MonitorResource."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResource?alt=com.azure.resourcemanager.dynatrace.models.MonitorResource&text=MonitorResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.getByResourceGroupWithResponse(String resourceGroupName, String monitorName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "Monitors.getByResourceGroupWithResponse(String resourceGroupName, String monitorName, Context context)"
  summary: "Get a Monitor<wbr>Resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<MonitorResource> getByResourceGroupWithResponse(String resourceGroupName, String monitorName, Context context)"
  desc: "Get a MonitorResource."
  returns:
    description: "a MonitorResource along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResource?alt=com.azure.resourcemanager.dynatrace.models.MonitorResource&text=MonitorResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.getSsoDetails(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.getSsoDetails(String resourceGroupName, String monitorName)"
  name: "getSsoDetails(String resourceGroupName, String monitorName)"
  nameWithType: "Monitors.getSsoDetails(String resourceGroupName, String monitorName)"
  summary: "Gets the SSO configuration details from the partner."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SsoDetailsResponse getSsoDetails(String resourceGroupName, String monitorName)"
  desc: "Gets the SSO configuration details from the partner."
  returns:
    description: "the SSO configuration details from the partner."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.SsoDetailsResponse?alt=com.azure.resourcemanager.dynatrace.models.SsoDetailsResponse&text=SsoDetailsResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.getSsoDetailsWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.dynatrace.models.SsoDetailsRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.getSsoDetailsWithResponse(String resourceGroupName, String monitorName, SsoDetailsRequest request, Context context)"
  name: "getSsoDetailsWithResponse(String resourceGroupName, String monitorName, SsoDetailsRequest request, Context context)"
  nameWithType: "Monitors.getSsoDetailsWithResponse(String resourceGroupName, String monitorName, SsoDetailsRequest request, Context context)"
  summary: "Gets the SSO configuration details from the partner."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The details of the get sso details request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.SsoDetailsRequest?alt=com.azure.resourcemanager.dynatrace.models.SsoDetailsRequest&text=SsoDetailsRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<SsoDetailsResponse> getSsoDetailsWithResponse(String resourceGroupName, String monitorName, SsoDetailsRequest request, Context context)"
  desc: "Gets the SSO configuration details from the partner."
  returns:
    description: "the SSO configuration details from the partner along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.SsoDetailsResponse?alt=com.azure.resourcemanager.dynatrace.models.SsoDetailsResponse&text=SsoDetailsResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.getVMHostPayload(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.getVMHostPayload(String resourceGroupName, String monitorName)"
  name: "getVMHostPayload(String resourceGroupName, String monitorName)"
  nameWithType: "Monitors.getVMHostPayload(String resourceGroupName, String monitorName)"
  summary: "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract VMExtensionPayload getVMHostPayload(String resourceGroupName, String monitorName)"
  desc: "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM."
  returns:
    description: "response of payload to be passed while installing VM agent."
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.VMExtensionPayload?alt=com.azure.resourcemanager.dynatrace.models.VMExtensionPayload&text=VMExtensionPayload\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.getVMHostPayloadWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.getVMHostPayloadWithResponse(String resourceGroupName, String monitorName, Context context)"
  name: "getVMHostPayloadWithResponse(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "Monitors.getVMHostPayloadWithResponse(String resourceGroupName, String monitorName, Context context)"
  summary: "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<VMExtensionPayload> getVMHostPayloadWithResponse(String resourceGroupName, String monitorName, Context context)"
  desc: "Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM."
  returns:
    description: "response of payload to be passed while installing VM agent along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.VMExtensionPayload?alt=com.azure.resourcemanager.dynatrace.models.VMExtensionPayload&text=VMExtensionPayload\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.list()"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.list()"
  name: "list()"
  nameWithType: "Monitors.list()"
  summary: "List all Monitor<wbr>Resource by subscription<wbr>Id."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<MonitorResource> list()"
  desc: "List all MonitorResource by subscriptionId."
  returns:
    description: "the response of a MonitorResource list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResource?alt=com.azure.resourcemanager.dynatrace.models.MonitorResource&text=MonitorResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.list(Context context)"
  name: "list(Context context)"
  nameWithType: "Monitors.list(Context context)"
  summary: "List all Monitor<wbr>Resource by subscription<wbr>Id."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitorResource> list(Context context)"
  desc: "List all MonitorResource by subscriptionId."
  returns:
    description: "the response of a MonitorResource list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResource?alt=com.azure.resourcemanager.dynatrace.models.MonitorResource&text=MonitorResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.listAppServices(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.listAppServices(String resourceGroupName, String monitorName)"
  name: "listAppServices(String resourceGroupName, String monitorName)"
  nameWithType: "Monitors.listAppServices(String resourceGroupName, String monitorName)"
  summary: "Gets list of App Services with Dynatrace PaaS One<wbr>Agent enabled."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AppServiceInfo> listAppServices(String resourceGroupName, String monitorName)"
  desc: "Gets list of App Services with Dynatrace PaaS OneAgent enabled."
  returns:
    description: "list of App Services with Dynatrace PaaS OneAgent enabled as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.AppServiceInfo?alt=com.azure.resourcemanager.dynatrace.models.AppServiceInfo&text=AppServiceInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.listAppServices(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.listAppServices(String resourceGroupName, String monitorName, Context context)"
  name: "listAppServices(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "Monitors.listAppServices(String resourceGroupName, String monitorName, Context context)"
  summary: "Gets list of App Services with Dynatrace PaaS One<wbr>Agent enabled."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AppServiceInfo> listAppServices(String resourceGroupName, String monitorName, Context context)"
  desc: "Gets list of App Services with Dynatrace PaaS OneAgent enabled."
  returns:
    description: "list of App Services with Dynatrace PaaS OneAgent enabled as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.AppServiceInfo?alt=com.azure.resourcemanager.dynatrace.models.AppServiceInfo&text=AppServiceInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "Monitors.listByResourceGroup(String resourceGroupName)"
  summary: "List Monitor<wbr>Resource resources by resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitorResource> listByResourceGroup(String resourceGroupName)"
  desc: "List MonitorResource resources by resource group."
  returns:
    description: "the response of a MonitorResource list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResource?alt=com.azure.resourcemanager.dynatrace.models.MonitorResource&text=MonitorResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "Monitors.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "List Monitor<wbr>Resource resources by resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitorResource> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "List MonitorResource resources by resource group."
  returns:
    description: "the response of a MonitorResource list operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitorResource?alt=com.azure.resourcemanager.dynatrace.models.MonitorResource&text=MonitorResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.listHosts(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.listHosts(String resourceGroupName, String monitorName)"
  name: "listHosts(String resourceGroupName, String monitorName)"
  nameWithType: "Monitors.listHosts(String resourceGroupName, String monitorName)"
  summary: "List the compute resources currently being monitored by the Dynatrace resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<VMInfo> listHosts(String resourceGroupName, String monitorName)"
  desc: "List the compute resources currently being monitored by the Dynatrace resource."
  returns:
    description: "response of a list VM Host Operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.VMInfo?alt=com.azure.resourcemanager.dynatrace.models.VMInfo&text=VMInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.listHosts(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.listHosts(String resourceGroupName, String monitorName, Context context)"
  name: "listHosts(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "Monitors.listHosts(String resourceGroupName, String monitorName, Context context)"
  summary: "List the compute resources currently being monitored by the Dynatrace resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<VMInfo> listHosts(String resourceGroupName, String monitorName, Context context)"
  desc: "List the compute resources currently being monitored by the Dynatrace resource."
  returns:
    description: "response of a list VM Host Operation as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.VMInfo?alt=com.azure.resourcemanager.dynatrace.models.VMInfo&text=VMInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.listLinkableEnvironments(java.lang.String,java.lang.String,com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request)"
  name: "listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request)"
  nameWithType: "Monitors.listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request)"
  summary: "Gets all the Dynatrace environments that a user can link a azure resource to."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The details of the linkable environment request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest?alt=com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest&text=LinkableEnvironmentRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<LinkableEnvironmentResponse> listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request)"
  desc: "Gets all the Dynatrace environments that a user can link a azure resource to."
  returns:
    description: "all the Dynatrace environments that a user can link a azure resource to as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentResponse?alt=com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentResponse&text=LinkableEnvironmentResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.listLinkableEnvironments(java.lang.String,java.lang.String,com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request, Context context)"
  name: "listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request, Context context)"
  nameWithType: "Monitors.listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request, Context context)"
  summary: "Gets all the Dynatrace environments that a user can link a azure resource to."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The details of the linkable environment request."
    name: "request"
    type: "<xref href=\"com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest?alt=com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentRequest&text=LinkableEnvironmentRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<LinkableEnvironmentResponse> listLinkableEnvironments(String resourceGroupName, String monitorName, LinkableEnvironmentRequest request, Context context)"
  desc: "Gets all the Dynatrace environments that a user can link a azure resource to."
  returns:
    description: "all the Dynatrace environments that a user can link a azure resource to as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentResponse?alt=com.azure.resourcemanager.dynatrace.models.LinkableEnvironmentResponse&text=LinkableEnvironmentResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.listMonitoredResources(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.listMonitoredResources(String resourceGroupName, String monitorName)"
  name: "listMonitoredResources(String resourceGroupName, String monitorName)"
  nameWithType: "Monitors.listMonitoredResources(String resourceGroupName, String monitorName)"
  summary: "List the resources currently being monitored by the Dynatrace monitor resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitoredResource> listMonitoredResources(String resourceGroupName, String monitorName)"
  desc: "List the resources currently being monitored by the Dynatrace monitor resource."
  returns:
    description: "list of all the resources being monitored by Dynatrace monitor resource as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitoredResource?alt=com.azure.resourcemanager.dynatrace.models.MonitoredResource&text=MonitoredResource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.dynatrace.models.Monitors.listMonitoredResources(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.dynatrace.models.Monitors.listMonitoredResources(String resourceGroupName, String monitorName, Context context)"
  name: "listMonitoredResources(String resourceGroupName, String monitorName, Context context)"
  nameWithType: "Monitors.listMonitoredResources(String resourceGroupName, String monitorName, Context context)"
  summary: "List the resources currently being monitored by the Dynatrace monitor resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Monitor resource name."
    name: "monitorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<MonitoredResource> listMonitoredResources(String resourceGroupName, String monitorName, Context context)"
  desc: "List the resources currently being monitored by the Dynatrace monitor resource."
  returns:
    description: "list of all the resources being monitored by Dynatrace monitor resource as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.dynatrace.models.MonitoredResource?alt=com.azure.resourcemanager.dynatrace.models.MonitoredResource&text=MonitoredResource\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Monitors."
metadata: {}
package: "com.azure.resourcemanager.dynatrace.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-dynatrace:1.0.0-beta.1
