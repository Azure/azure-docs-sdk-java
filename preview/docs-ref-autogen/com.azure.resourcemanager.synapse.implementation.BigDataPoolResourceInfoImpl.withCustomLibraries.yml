### YamlMime:JavaMember
uid: "com.azure.resourcemanager.synapse.implementation.BigDataPoolResourceInfoImpl.withCustomLibraries*"
fullName: "com.azure.resourcemanager.synapse.implementation.BigDataPoolResourceInfoImpl.withCustomLibraries"
name: "withCustomLibraries"
nameWithType: "BigDataPoolResourceInfoImpl.withCustomLibraries"
members:
- uid: "com.azure.resourcemanager.synapse.implementation.BigDataPoolResourceInfoImpl.withCustomLibraries(java.util.List<com.azure.resourcemanager.synapse.models.LibraryInfo>)"
  fullName: "com.azure.resourcemanager.synapse.implementation.BigDataPoolResourceInfoImpl.withCustomLibraries(List<LibraryInfo> customLibraries)"
  name: "withCustomLibraries(List<LibraryInfo> customLibraries)"
  nameWithType: "BigDataPoolResourceInfoImpl.withCustomLibraries(List<LibraryInfo> customLibraries)"
  summary: "Specifies the customLibraries property: List of custom libraries/packages associated with the spark pool.."
  parameters:
  - name: "customLibraries"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.synapse.models.LibraryInfo?alt=com.azure.resourcemanager.synapse.models.LibraryInfo&text=LibraryInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BigDataPoolResourceInfoImpl withCustomLibraries(List<LibraryInfo> customLibraries)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.synapse.implementation.BigDataPoolResourceInfoImpl?alt=com.azure.resourcemanager.synapse.implementation.BigDataPoolResourceInfoImpl&text=BigDataPoolResourceInfoImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.synapse.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-synapse:1.0.0-beta.1
