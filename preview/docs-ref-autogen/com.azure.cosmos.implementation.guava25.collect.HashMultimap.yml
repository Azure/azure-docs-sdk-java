### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.HashMultimap
  id: HashMultimap
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.HashMultimap.<K,V>create()
  - com.azure.cosmos.implementation.guava25.collect.HashMultimap.<K,V>create(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.HashMultimap.<K,V>create(int,int)
  langs:
  - java
  name: HashMultimap<K,V>
  nameWithType: HashMultimap<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Implementation of <xref uid="com.azure.cosmos.implementation.guava25.collect.Multimap" data-throw-if-not-resolved="false">Multimap</xref> using hash tables.


    The multimap does not store duplicate key-value pairs. Adding a new key-value pair equal to an existing key-value pair has no effect.


    Keys and values may be null. All optional multimap methods are supported, and all returned views are modifiable.


    This class is not threadsafe when any concurrent operations update the multimap. Concurrent read operations will work correctly. To allow concurrent update operations, wrap your multimap with a call to <xref uid="com.azure.cosmos.implementation.guava25.collect.Multimaps.synchronizedSetMultimap" data-throw-if-not-resolved="false">Multimaps#synchronizedSetMultimap</xref>.
  syntax:
    content: public final class HashMultimap<K,V> extends HashMultimapGwtSerializationDependencies<K,V>
    typeParameters:
    - id: K
    - id: V
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap
  - com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap
  - com.azure.cosmos.implementation.guava25.collect.HashMultimapGwtSerializationDependencies
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.clear()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.containsKey(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.forEach(java.util.function.BiConsumer<? super K,? super V>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.size()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.values()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsValue(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keySet()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keys()
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.toString()
  - com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.asMap()
  - com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.entries()
  - com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.get(K)
  - com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.put(K,V)
  - com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.removeAll(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.replaceValues(K,java.lang.Iterable<? extends V>)
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.HashMultimap.<K,V>create()
  id: <K,V>create()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.HashMultimap
  langs:
  - java
  name: <K,V>create()
  nameWithType: HashMultimap<K,V>.<K,V>create()
  fullName: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>.<K,V>create()
  overload: com.azure.cosmos.implementation.guava25.collect.HashMultimap.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Creates a new, empty `HashMultimap` with the default initial capacities.


    This method will soon be deprecated in favor of `MultimapBuilder.hashKeys().hashSetValues().build()`.
  syntax:
    content: public static HashMultimap<K,V> <K,V>create()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.HashMultimap.<K,V>create(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  id: <K,V>create(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.HashMultimap
  langs:
  - java
  name: <K,V>create(Multimap<? extends K,? extends V> multimap)
  nameWithType: HashMultimap<K,V>.<K,V>create(Multimap<? extends K,? extends V> multimap)
  fullName: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>.<K,V>create(Multimap<? extends K,? extends V> multimap)
  overload: com.azure.cosmos.implementation.guava25.collect.HashMultimap.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Constructs a `HashMultimap` with the same mappings as the specified multimap. If a key-value mapping appears multiple times in the input multimap, it only appears once in the constructed multimap.


    This method will soon be deprecated in favor of `MultimapBuilder.hashKeys().hashSetValues().build(multimap)`.
  syntax:
    content: public static HashMultimap<K,V> <K,V>create(Multimap<? extends K,? extends V> multimap)
    parameters:
    - id: multimap
      type: com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>
      description: the multimap whose contents are copied to this multimap
    return:
      type: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.HashMultimap.<K,V>create(int,int)
  id: <K,V>create(int,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.HashMultimap
  langs:
  - java
  name: <K,V>create(int expectedKeys, int expectedValuesPerKey)
  nameWithType: HashMultimap<K,V>.<K,V>create(int expectedKeys, int expectedValuesPerKey)
  fullName: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>.<K,V>create(int expectedKeys, int expectedValuesPerKey)
  overload: com.azure.cosmos.implementation.guava25.collect.HashMultimap.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    Constructs an empty `HashMultimap` with enough capacity to hold the specified numbers of keys and values without rehashing.


    This method will soon be deprecated in favor of `MultimapBuilder.hashKeys(expectedKeys).hashSetValues(expectedValuesPerKey).build()`.
  syntax:
    content: public static HashMultimap<K,V> <K,V>create(int expectedKeys, int expectedValuesPerKey)
    parameters:
    - id: expectedKeys
      type: int
      description: the expected number of distinct keys
    - id: expectedValuesPerKey
      type: int
      description: the expected average number of values per key
    return:
      type: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.HashMultimap.HashMultimap()
  id: HashMultimap()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.HashMultimap
  langs:
  - java
  name: HashMultimap()
  nameWithType: HashMultimap<K,V>.HashMultimap()
  fullName: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>.HashMultimap()
  overload: com.azure.cosmos.implementation.guava25.collect.HashMultimap.HashMultimap*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private HashMultimap()
- uid: com.azure.cosmos.implementation.guava25.collect.HashMultimap.HashMultimap(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  id: HashMultimap(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.HashMultimap
  langs:
  - java
  name: HashMultimap(Multimap<? extends K,? extends V> multimap)
  nameWithType: HashMultimap<K,V>.HashMultimap(Multimap<? extends K,? extends V> multimap)
  fullName: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>.HashMultimap(Multimap<? extends K,? extends V> multimap)
  overload: com.azure.cosmos.implementation.guava25.collect.HashMultimap.HashMultimap*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private HashMultimap(Multimap<? extends K,? extends V> multimap)
    parameters:
    - id: multimap
      type: com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>
- uid: com.azure.cosmos.implementation.guava25.collect.HashMultimap.HashMultimap(int,int)
  id: HashMultimap(int,int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.HashMultimap
  langs:
  - java
  name: HashMultimap(int expectedKeys, int expectedValuesPerKey)
  nameWithType: HashMultimap<K,V>.HashMultimap(int expectedKeys, int expectedValuesPerKey)
  fullName: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>.HashMultimap(int expectedKeys, int expectedValuesPerKey)
  overload: com.azure.cosmos.implementation.guava25.collect.HashMultimap.HashMultimap*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private HashMultimap(int expectedKeys, int expectedValuesPerKey)
    parameters:
    - id: expectedKeys
      type: int
    - id: expectedValuesPerKey
      type: int
references:
- uid: com.azure.cosmos.implementation.guava25.collect.HashMultimap.HashMultimap*
  name: HashMultimap
  nameWithType: HashMultimap<K,V>.HashMultimap
  fullName: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>.HashMultimap
  package: com.azure.cosmos.implementation.guava25.collect
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.Multimap
    name: Multimap
    fullName: com.azure.cosmos.implementation.guava25.collect.Multimap
  - name: <
    fullName: <
  - uid: '? extends K'
    name: '? extends K'
    fullName: '? extends K'
  - name: ','
    fullName: ','
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.HashMultimap
    name: HashMultimap
    fullName: com.azure.cosmos.implementation.guava25.collect.HashMultimap
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.HashMultimap.create*
  name: <K,V>create
  nameWithType: HashMultimap<K,V>.<K,V>create
  fullName: com.azure.cosmos.implementation.guava25.collect.HashMultimap<K,V>.<K,V>create
  package: com.azure.cosmos.implementation.guava25.collect
- uid: K
  name: K
  nameWithType: K
  fullName: K
- uid: V
  name: V
  nameWithType: V
  fullName: V
- uid: com.azure.cosmos.implementation.guava25.collect.HashMultimapGwtSerializationDependencies<K,V>
  name: HashMultimapGwtSerializationDependencies<K,V>
  nameWithType: HashMultimapGwtSerializationDependencies<K,V>
  fullName: com.azure.cosmos.implementation.guava25.collect.HashMultimapGwtSerializationDependencies<K,V>
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.forEach(java.util.function.BiConsumer<? super K,? super V>)
  name: AbstractMapBasedMultimap.forEach(BiConsumer<? super K,? super V>)
  nameWithType: AbstractMapBasedMultimap.forEach(BiConsumer<? super K,? super V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.forEach(java.util.function.BiConsumer<? super K,? super V>)
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.isEmpty()
  name: AbstractMultimap.isEmpty()
  nameWithType: AbstractMultimap.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.isEmpty()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.asMap()
  name: AbstractSetMultimap.asMap()
  nameWithType: AbstractSetMultimap.asMap()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.asMap()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.get(K)
  name: AbstractSetMultimap.get(K)
  nameWithType: AbstractSetMultimap.get(K)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.get(K)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsValue(java.lang.Object)
  name: AbstractMultimap.containsValue(Object)
  nameWithType: AbstractMultimap.containsValue(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsValue(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.removeAll(java.lang.Object)
  name: AbstractSetMultimap.removeAll(Object)
  nameWithType: AbstractSetMultimap.removeAll(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.removeAll(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.clear()
  name: AbstractMapBasedMultimap.clear()
  nameWithType: AbstractMapBasedMultimap.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.clear()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.toString()
  name: AbstractMultimap.toString()
  nameWithType: AbstractMultimap.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.toString()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>)
  name: AbstractMultimap.putAll(K,Iterable<? extends V>)
  nameWithType: AbstractMultimap.putAll(K,Iterable<? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(K,java.lang.Iterable<? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object)
  name: AbstractMultimap.remove(Object,Object)
  nameWithType: AbstractMultimap.remove(Object,Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.remove(java.lang.Object,java.lang.Object)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.put(K,V)
  name: AbstractSetMultimap.put(K,V)
  nameWithType: AbstractSetMultimap.put(K,V)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.put(K,V)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keySet()
  name: AbstractMultimap.keySet()
  nameWithType: AbstractMultimap.keySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keySet()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.size()
  name: AbstractMapBasedMultimap.size()
  nameWithType: AbstractMapBasedMultimap.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.size()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keys()
  name: AbstractMultimap.keys()
  nameWithType: AbstractMultimap.keys()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.keys()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.hashCode()
  name: AbstractMultimap.hashCode()
  nameWithType: AbstractMultimap.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.values()
  name: AbstractMapBasedMultimap.values()
  nameWithType: AbstractMapBasedMultimap.values()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.values()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.equals(java.lang.Object)
  name: AbstractSetMultimap.equals(Object)
  nameWithType: AbstractSetMultimap.equals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.containsKey(java.lang.Object)
  name: AbstractMapBasedMultimap.containsKey(Object)
  nameWithType: AbstractMapBasedMultimap.containsKey(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.containsKey(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
  name: AbstractMultimap.putAll(Multimap<? extends K,? extends V>)
  nameWithType: AbstractMultimap.putAll(Multimap<? extends K,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap<? extends K,? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object)
  name: AbstractMultimap.containsEntry(Object,Object)
  nameWithType: AbstractMultimap.containsEntry(Object,Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.containsEntry(java.lang.Object,java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.entries()
  name: AbstractSetMultimap.entries()
  nameWithType: AbstractSetMultimap.entries()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.entries()
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.replaceValues(K,java.lang.Iterable<? extends V>)
  name: AbstractSetMultimap.replaceValues(K,Iterable<? extends V>)
  nameWithType: AbstractSetMultimap.replaceValues(K,Iterable<? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.replaceValues(K,java.lang.Iterable<? extends V>)
- uid: '? extends K,? extends V'
  name: '? extends K,? extends V'
  nameWithType: '? extends K,? extends V'
  fullName: '? extends K,? extends V'
- uid: com.azure.cosmos.implementation.guava25.collect.Multimap
  name: Multimap
  nameWithType: Multimap
  fullName: com.azure.cosmos.implementation.guava25.collect.Multimap
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: com.azure.cosmos.implementation.guava25.collect.HashMultimapGwtSerializationDependencies
  name: HashMultimapGwtSerializationDependencies
  nameWithType: HashMultimapGwtSerializationDependencies
  fullName: com.azure.cosmos.implementation.guava25.collect.HashMultimapGwtSerializationDependencies
- uid: '? super K,? super V>)'
  name: '? super K,? super V>)'
  nameWithType: '? super K,? super V>)'
  fullName: '? super K,? super V>)'
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.forEach(java.util.function.BiConsumer
  name: AbstractMapBasedMultimap.forEach(BiConsumer
  nameWithType: AbstractMapBasedMultimap.forEach(BiConsumer
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMapBasedMultimap.forEach(java.util.function.BiConsumer
- uid: '? extends V>)'
  name: '? extends V>)'
  nameWithType: '? extends V>)'
  fullName: '? extends V>)'
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(K,java.lang.Iterable
  name: AbstractMultimap.putAll(K,Iterable
  nameWithType: AbstractMultimap.putAll(K,Iterable
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(K,java.lang.Iterable
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap
  name: AbstractMultimap.putAll(Multimap
  nameWithType: AbstractMultimap.putAll(Multimap
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractMultimap.putAll(com.azure.cosmos.implementation.guava25.collect.Multimap
- uid: '? extends K,? extends V>)'
  name: '? extends K,? extends V>)'
  nameWithType: '? extends K,? extends V>)'
  fullName: '? extends K,? extends V>)'
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.replaceValues(K,java.lang.Iterable
  name: AbstractSetMultimap.replaceValues(K,Iterable
  nameWithType: AbstractSetMultimap.replaceValues(K,Iterable
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSetMultimap.replaceValues(K,java.lang.Iterable
