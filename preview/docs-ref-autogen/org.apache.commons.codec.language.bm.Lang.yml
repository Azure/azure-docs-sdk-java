### YamlMime:JavaType
uid: "org.apache.commons.codec.language.bm.Lang"
fullName: "org.apache.commons.codec.language.bm.Lang"
name: "Lang"
nameWithType: "Lang"
summary: "Language guessing utility.\n\nThis class encapsulates rules used to guess the possible languages that a word originates from. This is done by reference to a whole series of rules distributed in resource files.\n\nInstances of this class are typically managed through the static factory method instance(). Unless you are developing your own language guessing rules, you will not need to interact with this class directly.\n\nThis class is intended to be immutable and thread-safe.\n\n**Lang resources**\n\nLanguage guessing rules are typically loaded from resource files. These are UTF-8 encoded text files. They are systematically named following the pattern:\n\n> org/apache/commons/codec/language/bm/lang.txt\n\nThe format of these resources is the following:\n\n *  **Rules:** whitespace separated strings. There should be 3 columns to each row, and these will be interpreted as:\n    \n    1.  pattern: a regular expression.\n    2.  languages: a '+'-separated list of languages.\n    3.  acceptOnMatch: 'true' or 'false' indicating if a match rules in or rules out the language.\n *  **End-of-line comments:** Any occurrence of '//' will cause all text following on that line to be discarded as a comment.\n *  **Multi-line comments:** Any line starting with '/\\*' will start multi-line commenting mode. This will skip all content until a line ending in '\\*' and '/' is found.\n *  **Blank lines:** All blank lines will be skipped.\n\nPort of lang.php"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Lang"
methods:
- "org.apache.commons.codec.language.bm.Lang.guessLanguage(java.lang.String)"
- "org.apache.commons.codec.language.bm.Lang.guessLanguages(java.lang.String)"
- "org.apache.commons.codec.language.bm.Lang.instance(org.apache.commons.codec.language.bm.NameType)"
- "org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)"
type: "class"
metadata: {}
package: "org.apache.commons.codec.language.bm"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
