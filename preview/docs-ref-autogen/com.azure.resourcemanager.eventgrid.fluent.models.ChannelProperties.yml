### YamlMime:JavaType
uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties"
fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties"
name: "ChannelProperties"
nameWithType: "ChannelProperties"
summary: "Properties of the Channel."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ChannelProperties"
constructors:
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.ChannelProperties()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.ChannelProperties()"
  name: "ChannelProperties()"
  nameWithType: "ChannelProperties.ChannelProperties()"
  syntax: "public ChannelProperties()"
methods:
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.channelType()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.channelType()"
  name: "channelType()"
  nameWithType: "ChannelProperties.channelType()"
  summary: "Get the channel<wbr>Type property: The type of the event channel which represents the direction flow of events."
  syntax: "public ChannelType channelType()"
  desc: "Get the channelType property: The type of the event channel which represents the direction flow of events."
  returns:
    description: "the channelType value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.ChannelType?alt=com.azure.resourcemanager.eventgrid.models.ChannelType&text=ChannelType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.expirationTimeIfNotActivatedUtc()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.expirationTimeIfNotActivatedUtc()"
  name: "expirationTimeIfNotActivatedUtc()"
  nameWithType: "ChannelProperties.expirationTimeIfNotActivatedUtc()"
  summary: "Get the expiration<wbr>Time<wbr>IfNot<wbr>Activated<wbr>Utc property: Expiration time of the channel."
  syntax: "public OffsetDateTime expirationTimeIfNotActivatedUtc()"
  desc: "Get the expirationTimeIfNotActivatedUtc property: Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated, the channel and corresponding partner topic are deleted."
  returns:
    description: "the expirationTimeIfNotActivatedUtc value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.messageForActivation()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.messageForActivation()"
  name: "messageForActivation()"
  nameWithType: "ChannelProperties.messageForActivation()"
  summary: "Get the message<wbr>For<wbr>Activation property: Context or helpful message that can be used during the approval process by the subscriber."
  syntax: "public String messageForActivation()"
  desc: "Get the messageForActivation property: Context or helpful message that can be used during the approval process by the subscriber."
  returns:
    description: "the messageForActivation value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.partnerTopicInfo()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.partnerTopicInfo()"
  name: "partnerTopicInfo()"
  nameWithType: "ChannelProperties.partnerTopicInfo()"
  summary: "Get the partner<wbr>Topic<wbr>Info property: This property should be populated when channel<wbr>Type is Partner<wbr>Topic and represents information about the partner topic resource corresponding to the channel."
  syntax: "public PartnerTopicInfo partnerTopicInfo()"
  desc: "Get the partnerTopicInfo property: This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel."
  returns:
    description: "the partnerTopicInfo value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicInfo?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicInfo&text=PartnerTopicInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ChannelProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Provisioning state of the channel."
  syntax: "public ChannelProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Provisioning state of the channel."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.ChannelProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.ChannelProvisioningState&text=ChannelProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.readinessState()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.readinessState()"
  name: "readinessState()"
  nameWithType: "ChannelProperties.readinessState()"
  summary: "Get the readiness<wbr>State property: The readiness state of the corresponding partner topic."
  syntax: "public ReadinessState readinessState()"
  desc: "Get the readinessState property: The readiness state of the corresponding partner topic."
  returns:
    description: "the readinessState value."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.ReadinessState?alt=com.azure.resourcemanager.eventgrid.models.ReadinessState&text=ReadinessState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.validate()"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.validate()"
  name: "validate()"
  nameWithType: "ChannelProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.withChannelType(com.azure.resourcemanager.eventgrid.models.ChannelType)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.withChannelType(ChannelType channelType)"
  name: "withChannelType(ChannelType channelType)"
  nameWithType: "ChannelProperties.withChannelType(ChannelType channelType)"
  summary: "Set the channel<wbr>Type property: The type of the event channel which represents the direction flow of events."
  parameters:
  - description: "the channelType value to set."
    name: "channelType"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.ChannelType?alt=com.azure.resourcemanager.eventgrid.models.ChannelType&text=ChannelType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChannelProperties withChannelType(ChannelType channelType)"
  desc: "Set the channelType property: The type of the event channel which represents the direction flow of events."
  returns:
    description: "the ChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties?alt=com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties&text=ChannelProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.withExpirationTimeIfNotActivatedUtc(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.withExpirationTimeIfNotActivatedUtc(OffsetDateTime expirationTimeIfNotActivatedUtc)"
  name: "withExpirationTimeIfNotActivatedUtc(OffsetDateTime expirationTimeIfNotActivatedUtc)"
  nameWithType: "ChannelProperties.withExpirationTimeIfNotActivatedUtc(OffsetDateTime expirationTimeIfNotActivatedUtc)"
  summary: "Set the expiration<wbr>Time<wbr>IfNot<wbr>Activated<wbr>Utc property: Expiration time of the channel."
  parameters:
  - description: "the expirationTimeIfNotActivatedUtc value to set."
    name: "expirationTimeIfNotActivatedUtc"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChannelProperties withExpirationTimeIfNotActivatedUtc(OffsetDateTime expirationTimeIfNotActivatedUtc)"
  desc: "Set the expirationTimeIfNotActivatedUtc property: Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated, the channel and corresponding partner topic are deleted."
  returns:
    description: "the ChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties?alt=com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties&text=ChannelProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.withMessageForActivation(java.lang.String)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.withMessageForActivation(String messageForActivation)"
  name: "withMessageForActivation(String messageForActivation)"
  nameWithType: "ChannelProperties.withMessageForActivation(String messageForActivation)"
  summary: "Set the message<wbr>For<wbr>Activation property: Context or helpful message that can be used during the approval process by the subscriber."
  parameters:
  - description: "the messageForActivation value to set."
    name: "messageForActivation"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChannelProperties withMessageForActivation(String messageForActivation)"
  desc: "Set the messageForActivation property: Context or helpful message that can be used during the approval process by the subscriber."
  returns:
    description: "the ChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties?alt=com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties&text=ChannelProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.withPartnerTopicInfo(com.azure.resourcemanager.eventgrid.models.PartnerTopicInfo)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.withPartnerTopicInfo(PartnerTopicInfo partnerTopicInfo)"
  name: "withPartnerTopicInfo(PartnerTopicInfo partnerTopicInfo)"
  nameWithType: "ChannelProperties.withPartnerTopicInfo(PartnerTopicInfo partnerTopicInfo)"
  summary: "Set the partner<wbr>Topic<wbr>Info property: This property should be populated when channel<wbr>Type is Partner<wbr>Topic and represents information about the partner topic resource corresponding to the channel."
  parameters:
  - description: "the partnerTopicInfo value to set."
    name: "partnerTopicInfo"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.PartnerTopicInfo?alt=com.azure.resourcemanager.eventgrid.models.PartnerTopicInfo&text=PartnerTopicInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChannelProperties withPartnerTopicInfo(PartnerTopicInfo partnerTopicInfo)"
  desc: "Set the partnerTopicInfo property: This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel."
  returns:
    description: "the ChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties?alt=com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties&text=ChannelProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.withProvisioningState(com.azure.resourcemanager.eventgrid.models.ChannelProvisioningState)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.withProvisioningState(ChannelProvisioningState provisioningState)"
  name: "withProvisioningState(ChannelProvisioningState provisioningState)"
  nameWithType: "ChannelProperties.withProvisioningState(ChannelProvisioningState provisioningState)"
  summary: "Set the provisioning<wbr>State property: Provisioning state of the channel."
  parameters:
  - description: "the provisioningState value to set."
    name: "provisioningState"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.ChannelProvisioningState?alt=com.azure.resourcemanager.eventgrid.models.ChannelProvisioningState&text=ChannelProvisioningState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChannelProperties withProvisioningState(ChannelProvisioningState provisioningState)"
  desc: "Set the provisioningState property: Provisioning state of the channel."
  returns:
    description: "the ChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties?alt=com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties&text=ChannelProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.withReadinessState(com.azure.resourcemanager.eventgrid.models.ReadinessState)"
  fullName: "com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties.withReadinessState(ReadinessState readinessState)"
  name: "withReadinessState(ReadinessState readinessState)"
  nameWithType: "ChannelProperties.withReadinessState(ReadinessState readinessState)"
  summary: "Set the readiness<wbr>State property: The readiness state of the corresponding partner topic."
  parameters:
  - description: "the readinessState value to set."
    name: "readinessState"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.ReadinessState?alt=com.azure.resourcemanager.eventgrid.models.ReadinessState&text=ReadinessState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ChannelProperties withReadinessState(ReadinessState readinessState)"
  desc: "Set the readinessState property: The readiness state of the corresponding partner topic."
  returns:
    description: "the ChannelProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties?alt=com.azure.resourcemanager.eventgrid.fluent.models.ChannelProperties&text=ChannelProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Properties of the Channel."
metadata: {}
package: "com.azure.resourcemanager.eventgrid.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.2.0-beta.3
