### YamlMime:JavaType
uid: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer"
fullName: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer"
name: "SchemaRegistryApacheAvroSerializer"
nameWithType: "SchemaRegistryApacheAvroSerializer"
summary: "Schema Registry-based serializer implementation for Avro data format using Apache Avro."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SchemaRegistryApacheAvroSerializer implements ObjectSerializer"
methods:
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer.<T>deserialize(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)"
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer.<T>deserializeAsync(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)"
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer.serialize(java.io.OutputStream,java.lang.Object)"
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer.serializeAsync(java.io.OutputStream,java.lang.Object)"
type: "class"
implements:
- "<xref href=\"com.azure.core.util.serializer.ObjectSerializer?alt=com.azure.core.util.serializer.ObjectSerializer&text=ObjectSerializer\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.data.schemaregistry.apacheavro"
artifact: com.azure:azure-data-schemaregistry-apacheavro:1.0.0-beta.8
