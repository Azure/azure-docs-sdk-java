### YamlMime:JavaMember
uid: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeCustomForms*"
fullName: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeCustomForms"
name: "beginRecognizeCustomForms"
nameWithType: "FormRecognizerClient.beginRecognizeCustomForms"
members:
- uid: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeCustomForms(java.lang.String,java.io.InputStream,long)"
  fullName: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeCustomForms(String modelId, InputStream form, long length)"
  name: "beginRecognizeCustomForms(String modelId, InputStream form, long length)"
  nameWithType: "FormRecognizerClient.beginRecognizeCustomForms(String modelId, InputStream form, long length)"
  summary: "Recognizes form data from documents using optical character recognition (OCR) and a custom trained model with or without labels.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nFile form = new File(\"{local/file_path/fileName.jpg}\");\n String modelId = \"{custom_trained_model_id}\";\n byte[] fileContent = Files.readAllBytes(form.toPath());\n try (InputStream targetStream = new ByteArrayInputStream(fileContent)) {\n \n     formRecognizerClient.beginRecognizeCustomForms(modelId, targetStream, form.length())\n         .getFinalResult()\n         .stream()\n         .map(RecognizedForm::getFields)\n         .forEach(formFieldMap -> formFieldMap.forEach((fieldText, formField) -> {\n             System.out.printf(\"Field text: %s%n\", fieldText);\n             System.out.printf(\"Field value data text: %s%n\", formField.getValueData().getText());\n             System.out.printf(\"Confidence score: %.2f%n\", formField.getConfidence());\n         }));\n }\n```"
  parameters:
  - description: "The UUID string format custom trained model Id to be used."
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data of the form to recognize form information from."
    name: "form"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<FormRecognizerOperationResult,List<RecognizedForm>> beginRecognizeCustomForms(String modelId, InputStream form, long length)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the recognize custom form operation until it has completed,\n has failed, or has been cancelled. The completed operation returns a list of <xref uid=\"com.azure.ai.formrecognizer.models.RecognizedForm\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RecognizedForm\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.RecognizedForm?alt=com.azure.ai.formrecognizer.models.RecognizedForm&text=RecognizedForm\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeCustomForms(java.lang.String,java.io.InputStream,long,com.azure.ai.formrecognizer.models.RecognizeCustomFormsOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeCustomForms(String modelId, InputStream form, long length, RecognizeCustomFormsOptions recognizeCustomFormsOptions, Context context)"
  name: "beginRecognizeCustomForms(String modelId, InputStream form, long length, RecognizeCustomFormsOptions recognizeCustomFormsOptions, Context context)"
  nameWithType: "FormRecognizerClient.beginRecognizeCustomForms(String modelId, InputStream form, long length, RecognizeCustomFormsOptions recognizeCustomFormsOptions, Context context)"
  summary: "Recognizes form data from documents using optical character recognition (OCR) and a custom trained model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nFile form = new File(\"{local/file_path/fileName.jpg}\");\n String modelId = \"{custom_trained_model_id}\";\n boolean includeFieldElements = true;\n byte[] fileContent = Files.readAllBytes(form.toPath());\n \n try (InputStream targetStream = new ByteArrayInputStream(fileContent)) {\n     formRecognizerClient.beginRecognizeCustomForms(modelId, targetStream, form.length(),\n         new RecognizeCustomFormsOptions()\n             .setContentType(FormContentType.IMAGE_JPEG)\n             .setFieldElementsIncluded(includeFieldElements)\n             .setPollInterval(Duration.ofSeconds(10)), Context.NONE)\n         .getFinalResult()\n         .stream()\n         .map(RecognizedForm::getFields)\n         .forEach(formFieldMap -> formFieldMap.forEach((fieldText, formField) -> {\n             System.out.printf(\"Field text: %s%n\", fieldText);\n             System.out.printf(\"Field value data text: %s%n\", formField.getValueData().getText());\n             System.out.printf(\"Confidence score: %.2f%n\", formField.getConfidence());\n         }));\n }\n```"
  parameters:
  - description: "The UUID string format custom trained model Id to be used."
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data of the form to recognize form information from."
    name: "form"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional configurable\n <xref uid=\"com.azure.ai.formrecognizer.models.RecognizeCustomFormsOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> that may be passed when recognizing custom forms."
    name: "recognizeCustomFormsOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.models.RecognizeCustomFormsOptions?alt=com.azure.ai.formrecognizer.models.RecognizeCustomFormsOptions&text=RecognizeCustomFormsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<FormRecognizerOperationResult,List<RecognizedForm>> beginRecognizeCustomForms(String modelId, InputStream form, long length, RecognizeCustomFormsOptions recognizeCustomFormsOptions, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the recognize custom form operation until it has completed,\n has failed, or has been cancelled. The completed operation returns a list of <xref uid=\"com.azure.ai.formrecognizer.models.RecognizedForm\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RecognizedForm\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.RecognizedForm?alt=com.azure.ai.formrecognizer.models.RecognizedForm&text=RecognizedForm\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.formrecognizer"
artifact: com.azure:azure-ai-formrecognizer:3.1.0-beta.1
