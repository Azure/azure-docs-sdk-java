### YamlMime:JavaType
uid: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey"
fullName: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey"
name: "EccTokenKey"
nameWithType: "EccTokenKey"
summary: "Required validation properties for tokens generated with Elliptical Curve algorithm."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.TokenKey?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.videoanalyzer.models.TokenKey.kid()"
- "com.azure.resourcemanager.videoanalyzer.models.TokenKey.validate()"
- "com.azure.resourcemanager.videoanalyzer.models.TokenKey.withKid(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EccTokenKey extends TokenKey"
constructors:
- uid: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.EccTokenKey()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.EccTokenKey()"
  name: "EccTokenKey()"
  nameWithType: "EccTokenKey.EccTokenKey()"
  syntax: "public EccTokenKey()"
methods:
- uid: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.alg()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.alg()"
  name: "alg()"
  nameWithType: "EccTokenKey.alg()"
  summary: "Get the alg property: Elliptical curve algorithm to be used: ES256, ES384 or ES512."
  syntax: "public AccessPolicyEccAlgo alg()"
  desc: "Get the alg property: Elliptical curve algorithm to be used: ES256, ES384 or ES512."
  returns:
    description: "the alg value."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEccAlgo?alt=com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEccAlgo&text=AccessPolicyEccAlgo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.validate()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.validate()"
  name: "validate()"
  nameWithType: "EccTokenKey.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.TokenKey.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.withAlg(com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEccAlgo)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.withAlg(AccessPolicyEccAlgo alg)"
  name: "withAlg(AccessPolicyEccAlgo alg)"
  nameWithType: "EccTokenKey.withAlg(AccessPolicyEccAlgo alg)"
  summary: "Set the alg property: Elliptical curve algorithm to be used: ES256, ES384 or ES512."
  parameters:
  - description: "the alg value to set."
    name: "alg"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEccAlgo?alt=com.azure.resourcemanager.videoanalyzer.models.AccessPolicyEccAlgo&text=AccessPolicyEccAlgo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EccTokenKey withAlg(AccessPolicyEccAlgo alg)"
  desc: "Set the alg property: Elliptical curve algorithm to be used: ES256, ES384 or ES512."
  returns:
    description: "the EccTokenKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EccTokenKey?alt=com.azure.resourcemanager.videoanalyzer.models.EccTokenKey&text=EccTokenKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.withKid(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.withKid(String kid)"
  name: "withKid(String kid)"
  nameWithType: "EccTokenKey.withKid(String kid)"
  summary: "Set the kid property: JWT token key id."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.TokenKey.withKid(java.lang.String)"
  parameters:
  - name: "kid"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EccTokenKey withKid(String kid)"
  desc: "Set the kid property: JWT token key id. Validation keys are looked up based on the key id present on the JWT token header."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EccTokenKey?alt=com.azure.resourcemanager.videoanalyzer.models.EccTokenKey&text=EccTokenKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.withX(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.withX(String x)"
  name: "withX(String x)"
  nameWithType: "EccTokenKey.withX(String x)"
  summary: "Set the x property: X coordinate."
  parameters:
  - description: "the x value to set."
    name: "x"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EccTokenKey withX(String x)"
  desc: "Set the x property: X coordinate."
  returns:
    description: "the EccTokenKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EccTokenKey?alt=com.azure.resourcemanager.videoanalyzer.models.EccTokenKey&text=EccTokenKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.withY(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.withY(String y)"
  name: "withY(String y)"
  nameWithType: "EccTokenKey.withY(String y)"
  summary: "Set the y property: Y coordinate."
  parameters:
  - description: "the y value to set."
    name: "y"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EccTokenKey withY(String y)"
  desc: "Set the y property: Y coordinate."
  returns:
    description: "the EccTokenKey object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EccTokenKey?alt=com.azure.resourcemanager.videoanalyzer.models.EccTokenKey&text=EccTokenKey\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.x()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.x()"
  name: "x()"
  nameWithType: "EccTokenKey.x()"
  summary: "Get the x property: X coordinate."
  syntax: "public String x()"
  desc: "Get the x property: X coordinate."
  returns:
    description: "the x value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.y()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EccTokenKey.y()"
  name: "y()"
  nameWithType: "EccTokenKey.y()"
  summary: "Get the y property: Y coordinate."
  syntax: "public String y()"
  desc: "Get the y property: Y coordinate."
  returns:
    description: "the y value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Required validation properties for tokens generated with Elliptical Curve algorithm."
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.5
