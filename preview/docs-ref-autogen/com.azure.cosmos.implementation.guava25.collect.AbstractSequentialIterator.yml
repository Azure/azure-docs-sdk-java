### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator
  id: AbstractSequentialIterator
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.AbstractSequentialIterator(T)
  - com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.computeNext(T)
  - com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.hasNext()
  - com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.next()
  langs:
  - java
  name: AbstractSequentialIterator<T>
  nameWithType: AbstractSequentialIterator<T>
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator<T>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    This class provides a skeletal implementation of the `Iterator` interface for sequences whose next element can always be derived from the previous element. Null elements are not supported, nor is the <xref uid="com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.remove*" data-throw-if-not-resolved="false">#remove()</xref> method.


    Example:


    ```java

    Iterator powersOfTwo =
         new AbstractSequentialIterator(1) {
           protected Integer computeNext(Integer previous) {
             return (previous == 1 << 30) ? null : previous * 2;
           }
         };
    ```
  syntax:
    content: public abstract class AbstractSequentialIterator<T> extends UnmodifiableIterator<T>
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.UnmodifiableIterator
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.UnmodifiableIterator.remove()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.AbstractSequentialIterator(T)
  id: AbstractSequentialIterator(T)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator
  langs:
  - java
  name: AbstractSequentialIterator(T firstOrNull)
  nameWithType: AbstractSequentialIterator<T>.AbstractSequentialIterator(T firstOrNull)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator<T>.AbstractSequentialIterator(T firstOrNull)
  overload: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.AbstractSequentialIterator*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Creates a new iterator with the given first element, or, if `firstOrNull` is null, creates a new empty iterator.
  syntax:
    content: protected AbstractSequentialIterator(T firstOrNull)
    parameters:
    - id: firstOrNull
      type: T
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.computeNext(T)
  id: computeNext(T)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator
  langs:
  - java
  name: computeNext(T previous)
  nameWithType: AbstractSequentialIterator<T>.computeNext(T previous)
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator<T>.computeNext(T previous)
  overload: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.computeNext*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the element that follows `previous`, or returns `null` if no elements remain. This method is invoked during each call to <xref uid="com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.next()" data-throw-if-not-resolved="false">#next()</xref> in order to compute the result of a *future* call to `next()`.
  syntax:
    content: protected abstract T computeNext(T previous)
    parameters:
    - id: previous
      type: T
    return:
      type: T
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.hasNext()
  id: hasNext()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator
  langs:
  - java
  name: hasNext()
  nameWithType: AbstractSequentialIterator<T>.hasNext()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator<T>.hasNext()
  overload: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.hasNext*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public final boolean hasNext()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.next()
  id: next()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator
  langs:
  - java
  name: next()
  nameWithType: AbstractSequentialIterator<T>.next()
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator<T>.next()
  overload: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.next*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public final T next()
    return:
      type: T
references:
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.AbstractSequentialIterator*
  name: AbstractSequentialIterator
  nameWithType: AbstractSequentialIterator<T>.AbstractSequentialIterator
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator<T>.AbstractSequentialIterator
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.computeNext*
  name: computeNext
  nameWithType: AbstractSequentialIterator<T>.computeNext
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator<T>.computeNext
  package: com.azure.cosmos.implementation.guava25.collect
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.hasNext*
  name: hasNext
  nameWithType: AbstractSequentialIterator<T>.hasNext
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator<T>.hasNext
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator.next*
  name: next
  nameWithType: AbstractSequentialIterator<T>.next
  fullName: com.azure.cosmos.implementation.guava25.collect.AbstractSequentialIterator<T>.next
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.UnmodifiableIterator<T>
  name: UnmodifiableIterator<T>
  nameWithType: UnmodifiableIterator<T>
  fullName: com.azure.cosmos.implementation.guava25.collect.UnmodifiableIterator<T>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.UnmodifiableIterator.remove()
  name: UnmodifiableIterator.remove()
  nameWithType: UnmodifiableIterator.remove()
  fullName: com.azure.cosmos.implementation.guava25.collect.UnmodifiableIterator.remove()
- uid: com.azure.cosmos.implementation.guava25.collect.UnmodifiableIterator
  name: UnmodifiableIterator
  nameWithType: UnmodifiableIterator
  fullName: com.azure.cosmos.implementation.guava25.collect.UnmodifiableIterator
