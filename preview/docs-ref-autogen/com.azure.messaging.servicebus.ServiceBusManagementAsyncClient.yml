### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  id: ServiceBusManagementAsyncClient
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus
  children:
  - com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.createQueue(com.azure.messaging.servicebus.models.QueueDescription)
  - com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.createQueueWithResponse(com.azure.messaging.servicebus.models.QueueDescription)
  - com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.deleteQueue(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.deleteQueueWithResponse(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueue(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueRuntimeInfo(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueRuntimeInfoWithResponse(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueWithResponse(java.lang.String)
  - com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.listQueues()
  - com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.updateQueue(com.azure.messaging.servicebus.models.QueueDescription)
  - com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.updateQueueWithResponse(com.azure.messaging.servicebus.models.QueueDescription)
  langs:
  - java
  name: ServiceBusManagementAsyncClient
  nameWithType: ServiceBusManagementAsyncClient
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  type: Class
  package: com.azure.messaging.servicebus
  summary: An **asynchronous** client for managing a Service Bus namespace.
  syntax:
    content: public final class ServiceBusManagementAsyncClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.ServiceBusManagementAsyncClient(com.azure.messaging.servicebus.implementation.ServiceBusManagementClientImpl,com.azure.messaging.servicebus.implementation.ServiceBusManagementSerializer)
  id: ServiceBusManagementAsyncClient(com.azure.messaging.servicebus.implementation.ServiceBusManagementClientImpl,com.azure.messaging.servicebus.implementation.ServiceBusManagementSerializer)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  langs:
  - java
  name: ServiceBusManagementAsyncClient(ServiceBusManagementClientImpl managementClient, ServiceBusManagementSerializer serializer)
  nameWithType: ServiceBusManagementAsyncClient.ServiceBusManagementAsyncClient(ServiceBusManagementClientImpl managementClient, ServiceBusManagementSerializer serializer)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.ServiceBusManagementAsyncClient(ServiceBusManagementClientImpl managementClient, ServiceBusManagementSerializer serializer)
  overload: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.ServiceBusManagementAsyncClient*
  type: Constructor
  package: com.azure.messaging.servicebus
  summary: Creates a new instance with the given management client and serializer.
  syntax:
    content: " ServiceBusManagementAsyncClient(ServiceBusManagementClientImpl managementClient, ServiceBusManagementSerializer serializer)"
    parameters:
    - id: managementClient
      type: com.azure.messaging.servicebus.implementation.ServiceBusManagementClientImpl
      description: Client to make management calls.
    - id: serializer
      type: com.azure.messaging.servicebus.implementation.ServiceBusManagementSerializer
      description: Serializer to deserialize ATOM XML responses.
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.createQueue(com.azure.messaging.servicebus.models.QueueDescription)
  id: createQueue(com.azure.messaging.servicebus.models.QueueDescription)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  langs:
  - java
  name: createQueue(QueueDescription queue)
  nameWithType: ServiceBusManagementAsyncClient.createQueue(QueueDescription queue)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.createQueue(QueueDescription queue)
  overload: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.createQueue*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Creates a queue the <xref uid="com.azure.messaging.servicebus.models.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref>.
  syntax:
    content: public Mono<QueueDescription> createQueue(QueueDescription queue)
    parameters:
    - id: queue
      type: com.azure.messaging.servicebus.models.QueueDescription
      description: Information about the queue to create.
    return:
      type: reactor.core.publisher.Mono<com.azure.messaging.servicebus.models.QueueDescription>
      description: A Mono that completes with information about the created queue.
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.createQueueWithResponse(com.azure.messaging.servicebus.models.QueueDescription)
  id: createQueueWithResponse(com.azure.messaging.servicebus.models.QueueDescription)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  langs:
  - java
  name: createQueueWithResponse(QueueDescription queue)
  nameWithType: ServiceBusManagementAsyncClient.createQueueWithResponse(QueueDescription queue)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.createQueueWithResponse(QueueDescription queue)
  overload: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.createQueueWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Creates a queue and returns the created queue in addition to the HTTP response.
  syntax:
    content: public Mono<Response<QueueDescription>> createQueueWithResponse(QueueDescription queue)
    parameters:
    - id: queue
      type: com.azure.messaging.servicebus.models.QueueDescription
      description: The queue to create.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.QueueDescription>>
      description: A Mono that returns the created queue in addition to the HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.deleteQueue(java.lang.String)
  id: deleteQueue(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  langs:
  - java
  name: deleteQueue(String queueName)
  nameWithType: ServiceBusManagementAsyncClient.deleteQueue(String queueName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.deleteQueue(String queueName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.deleteQueue*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Deletes a queue the matching `queueName`.
  syntax:
    content: public Mono<Void> deleteQueue(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to delete.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: A Mono that completes when the queue is deleted.
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.deleteQueueWithResponse(java.lang.String)
  id: deleteQueueWithResponse(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  langs:
  - java
  name: deleteQueueWithResponse(String queueName)
  nameWithType: ServiceBusManagementAsyncClient.deleteQueueWithResponse(String queueName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.deleteQueueWithResponse(String queueName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.deleteQueueWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Deletes a queue the matching `queueName` and returns the HTTP response.
  syntax:
    content: public Mono<Response<Void>> deleteQueueWithResponse(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to delete.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A Mono that completes when the queue is deleted and returns the HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueue(java.lang.String)
  id: getQueue(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  langs:
  - java
  name: getQueue(String queueName)
  nameWithType: ServiceBusManagementAsyncClient.getQueue(String queueName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueue(String queueName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueue*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets information about the queue.
  syntax:
    content: public Mono<QueueDescription> getQueue(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to get information about.
    return:
      type: reactor.core.publisher.Mono<com.azure.messaging.servicebus.models.QueueDescription>
      description: A Mono that completes with information about the queue.
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueRuntimeInfo(java.lang.String)
  id: getQueueRuntimeInfo(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  langs:
  - java
  name: getQueueRuntimeInfo(String queueName)
  nameWithType: ServiceBusManagementAsyncClient.getQueueRuntimeInfo(String queueName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueRuntimeInfo(String queueName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueRuntimeInfo*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets runtime information about the queue.
  syntax:
    content: public Mono<QueueRuntimeInfo> getQueueRuntimeInfo(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to get information about.
    return:
      type: reactor.core.publisher.Mono<com.azure.messaging.servicebus.models.QueueRuntimeInfo>
      description: A Mono that completes with runtime information about the queue.
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueRuntimeInfoWithResponse(java.lang.String)
  id: getQueueRuntimeInfoWithResponse(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  langs:
  - java
  name: getQueueRuntimeInfoWithResponse(String queueName)
  nameWithType: ServiceBusManagementAsyncClient.getQueueRuntimeInfoWithResponse(String queueName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueRuntimeInfoWithResponse(String queueName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueRuntimeInfoWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets runtime information about the queue along with its HTTP response.
  syntax:
    content: public Mono<Response<QueueRuntimeInfo>> getQueueRuntimeInfoWithResponse(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to get information about.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.QueueRuntimeInfo>>
      description: A Mono that completes with runtime information about the queue and the associated HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueWithResponse(java.lang.String)
  id: getQueueWithResponse(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  langs:
  - java
  name: getQueueWithResponse(String queueName)
  nameWithType: ServiceBusManagementAsyncClient.getQueueWithResponse(String queueName)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueWithResponse(String queueName)
  overload: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Gets information about the queue along with its HTTP response.
  syntax:
    content: public Mono<Response<QueueDescription>> getQueueWithResponse(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of queue to get information about.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.QueueDescription>>
      description: A Mono that completes with information about the queue and the associated HTTP response.
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.listQueues()
  id: listQueues()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  langs:
  - java
  name: listQueues()
  nameWithType: ServiceBusManagementAsyncClient.listQueues()
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.listQueues()
  overload: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.listQueues*
  type: Method
  package: com.azure.messaging.servicebus
  summary: Fetches all the queues in the Service Bus namespace.
  syntax:
    content: public PagedFlux<QueueDescription> listQueues()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.messaging.servicebus.models.QueueDescription>
      description: A Flux of <xref uid="com.azure.messaging.servicebus.models.QueueDescription" data-throw-if-not-resolved="false">queues</xref> in the Service Bus namespace.
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.updateQueue(com.azure.messaging.servicebus.models.QueueDescription)
  id: updateQueue(com.azure.messaging.servicebus.models.QueueDescription)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  langs:
  - java
  name: updateQueue(QueueDescription queue)
  nameWithType: ServiceBusManagementAsyncClient.updateQueue(QueueDescription queue)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.updateQueue(QueueDescription queue)
  overload: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.updateQueue*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Updates a queue with the given <xref uid="com.azure.messaging.servicebus.models.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref>. The <xref uid="com.azure.messaging.servicebus.models.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueue(java.lang.String)" data-throw-if-not-resolved="false">Get queue description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. They are:

     *  <xref uid="com.azure.messaging.servicebus.models.QueueDescription.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.QueueDescription.setLockDuration(java.time.Duration)" data-throw-if-not-resolved="false">LockDuration</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.QueueDescription.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)" data-throw-if-not-resolved="false">DuplicateDetectionHistoryTimeWindow</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.QueueDescription.setMaxDeliveryCount(java.lang.Integer)" data-throw-if-not-resolved="false">MaxDeliveryCount</xref>
  syntax:
    content: public Mono<QueueDescription> updateQueue(QueueDescription queue)
    parameters:
    - id: queue
      type: com.azure.messaging.servicebus.models.QueueDescription
      description: >-
        Information about the queue to update. You must provide all the property values that are desired
             on the updated entity. Any values not provided are set to the service default values.
    return:
      type: reactor.core.publisher.Mono<com.azure.messaging.servicebus.models.QueueDescription>
      description: A Mono that completes with information about the created queue.
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.updateQueueWithResponse(com.azure.messaging.servicebus.models.QueueDescription)
  id: updateQueueWithResponse(com.azure.messaging.servicebus.models.QueueDescription)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.3
  parent: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient
  langs:
  - java
  name: updateQueueWithResponse(QueueDescription queue)
  nameWithType: ServiceBusManagementAsyncClient.updateQueueWithResponse(QueueDescription queue)
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.updateQueueWithResponse(QueueDescription queue)
  overload: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.updateQueueWithResponse*
  type: Method
  package: com.azure.messaging.servicebus
  summary: >-
    Updates a queue with the given <xref uid="com.azure.messaging.servicebus.models.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref>. The <xref uid="com.azure.messaging.servicebus.models.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> must be fully populated as all of the properties are replaced. If a property is not set the service default value is used. The suggested flow is:


    1.  <xref uid="com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueue(java.lang.String)" data-throw-if-not-resolved="false">Get queue description.</xref>

    2.  Update the required elements.

    3.  Pass the updated description into this method.


    There are a subset of properties that can be updated. They are:

     *  <xref uid="com.azure.messaging.servicebus.models.QueueDescription.setDefaultMessageTimeToLive(java.time.Duration)" data-throw-if-not-resolved="false">DefaultMessageTimeToLive</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.QueueDescription.setLockDuration(java.time.Duration)" data-throw-if-not-resolved="false">LockDuration</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.QueueDescription.setDuplicateDetectionHistoryTimeWindow(java.time.Duration)" data-throw-if-not-resolved="false">DuplicateDetectionHistoryTimeWindow</xref>
     *  <xref uid="com.azure.messaging.servicebus.models.QueueDescription.setMaxDeliveryCount(java.lang.Integer)" data-throw-if-not-resolved="false">MaxDeliveryCount</xref>
  syntax:
    content: public Mono<Response<QueueDescription>> updateQueueWithResponse(QueueDescription queue)
    parameters:
    - id: queue
      type: com.azure.messaging.servicebus.models.QueueDescription
      description: >-
        Information about the queue to update. You must provide all the property values that are desired
             on the updated entity. Any values not provided are set to the service default values.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.QueueDescription>>
      description: A Mono that returns the updated queue in addition to the HTTP response.
references:
- uid: com.azure.messaging.servicebus.implementation.ServiceBusManagementClientImpl
  name: ServiceBusManagementClientImpl
  nameWithType: ServiceBusManagementClientImpl
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusManagementClientImpl
- uid: com.azure.messaging.servicebus.implementation.ServiceBusManagementSerializer
  name: ServiceBusManagementSerializer
  nameWithType: ServiceBusManagementSerializer
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusManagementSerializer
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.ServiceBusManagementAsyncClient*
  name: ServiceBusManagementAsyncClient
  nameWithType: ServiceBusManagementAsyncClient.ServiceBusManagementAsyncClient
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.ServiceBusManagementAsyncClient
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.models.QueueDescription
  name: QueueDescription
  nameWithType: QueueDescription
  fullName: com.azure.messaging.servicebus.models.QueueDescription
- uid: reactor.core.publisher.Mono<com.azure.messaging.servicebus.models.QueueDescription>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.QueueDescription
    name: QueueDescription
    fullName: com.azure.messaging.servicebus.models.QueueDescription
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.createQueue*
  name: createQueue
  nameWithType: ServiceBusManagementAsyncClient.createQueue
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.createQueue
  package: com.azure.messaging.servicebus
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.QueueDescription>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.QueueDescription
    name: QueueDescription
    fullName: com.azure.messaging.servicebus.models.QueueDescription
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.createQueueWithResponse*
  name: createQueueWithResponse
  nameWithType: ServiceBusManagementAsyncClient.createQueueWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.createQueueWithResponse
  package: com.azure.messaging.servicebus
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.deleteQueue*
  name: deleteQueue
  nameWithType: ServiceBusManagementAsyncClient.deleteQueue
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.deleteQueue
  package: com.azure.messaging.servicebus
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.deleteQueueWithResponse*
  name: deleteQueueWithResponse
  nameWithType: ServiceBusManagementAsyncClient.deleteQueueWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.deleteQueueWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueue*
  name: getQueue
  nameWithType: ServiceBusManagementAsyncClient.getQueue
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueue
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueWithResponse*
  name: getQueueWithResponse
  nameWithType: ServiceBusManagementAsyncClient.getQueueWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueWithResponse
  package: com.azure.messaging.servicebus
- uid: reactor.core.publisher.Mono<com.azure.messaging.servicebus.models.QueueRuntimeInfo>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.QueueRuntimeInfo
    name: QueueRuntimeInfo
    fullName: com.azure.messaging.servicebus.models.QueueRuntimeInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueRuntimeInfo*
  name: getQueueRuntimeInfo
  nameWithType: ServiceBusManagementAsyncClient.getQueueRuntimeInfo
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueRuntimeInfo
  package: com.azure.messaging.servicebus
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.messaging.servicebus.models.QueueRuntimeInfo>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.QueueRuntimeInfo
    name: QueueRuntimeInfo
    fullName: com.azure.messaging.servicebus.models.QueueRuntimeInfo
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueRuntimeInfoWithResponse*
  name: getQueueRuntimeInfoWithResponse
  nameWithType: ServiceBusManagementAsyncClient.getQueueRuntimeInfoWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.getQueueRuntimeInfoWithResponse
  package: com.azure.messaging.servicebus
- uid: com.azure.core.http.rest.PagedFlux<com.azure.messaging.servicebus.models.QueueDescription>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.messaging.servicebus.models.QueueDescription
    name: QueueDescription
    fullName: com.azure.messaging.servicebus.models.QueueDescription
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.listQueues*
  name: listQueues
  nameWithType: ServiceBusManagementAsyncClient.listQueues
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.listQueues
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.updateQueue*
  name: updateQueue
  nameWithType: ServiceBusManagementAsyncClient.updateQueue
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.updateQueue
  package: com.azure.messaging.servicebus
- uid: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.updateQueueWithResponse*
  name: updateQueueWithResponse
  nameWithType: ServiceBusManagementAsyncClient.updateQueueWithResponse
  fullName: com.azure.messaging.servicebus.ServiceBusManagementAsyncClient.updateQueueWithResponse
  package: com.azure.messaging.servicebus
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.messaging.servicebus.models.QueueRuntimeInfo
  name: QueueRuntimeInfo
  nameWithType: QueueRuntimeInfo
  fullName: com.azure.messaging.servicebus.models.QueueRuntimeInfo
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
