### YamlMime:JavaType
uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties"
fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties"
name: "LinkerProperties"
nameWithType: "LinkerProperties"
summary: "The properties of the linker."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LinkerProperties"
constructors:
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.LinkerProperties()"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.LinkerProperties()"
  name: "LinkerProperties()"
  nameWithType: "LinkerProperties.LinkerProperties()"
  syntax: "public LinkerProperties()"
methods:
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.authInfo()"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.authInfo()"
  name: "authInfo()"
  nameWithType: "LinkerProperties.authInfo()"
  summary: "Get the auth<wbr>Info property: The authentication type."
  syntax: "public AuthInfoBase authInfo()"
  desc: "Get the authInfo property: The authentication type."
  returns:
    description: "the authInfo value."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.AuthInfoBase?alt=com.azure.resourcemanager.servicelinker.models.AuthInfoBase&text=AuthInfoBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.clientType()"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.clientType()"
  name: "clientType()"
  nameWithType: "LinkerProperties.clientType()"
  summary: "Get the client<wbr>Type property: The application client type."
  syntax: "public ClientType clientType()"
  desc: "Get the clientType property: The application client type."
  returns:
    description: "the clientType value."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.ClientType?alt=com.azure.resourcemanager.servicelinker.models.ClientType&text=ClientType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "LinkerProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: The provisioning state."
  syntax: "public String provisioningState()"
  desc: "Get the provisioningState property: The provisioning state."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.scope()"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.scope()"
  name: "scope()"
  nameWithType: "LinkerProperties.scope()"
  summary: "Get the scope property: connection scope in source service."
  syntax: "public String scope()"
  desc: "Get the scope property: connection scope in source service."
  returns:
    description: "the scope value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.secretStore()"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.secretStore()"
  name: "secretStore()"
  nameWithType: "LinkerProperties.secretStore()"
  summary: "Get the secret<wbr>Store property: An option to store secret value in secure place."
  syntax: "public SecretStore secretStore()"
  desc: "Get the secretStore property: An option to store secret value in secure place."
  returns:
    description: "the secretStore value."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.SecretStore?alt=com.azure.resourcemanager.servicelinker.models.SecretStore&text=SecretStore\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.targetService()"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.targetService()"
  name: "targetService()"
  nameWithType: "LinkerProperties.targetService()"
  summary: "Get the target<wbr>Service property: The target service properties."
  syntax: "public TargetServiceBase targetService()"
  desc: "Get the targetService property: The target service properties."
  returns:
    description: "the targetService value."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.TargetServiceBase?alt=com.azure.resourcemanager.servicelinker.models.TargetServiceBase&text=TargetServiceBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.vNetSolution()"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.vNetSolution()"
  name: "vNetSolution()"
  nameWithType: "LinkerProperties.vNetSolution()"
  summary: "Get the v<wbr>Net<wbr>Solution property: The VNet solution."
  syntax: "public VNetSolution vNetSolution()"
  desc: "Get the vNetSolution property: The VNet solution."
  returns:
    description: "the vNetSolution value."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.VNetSolution?alt=com.azure.resourcemanager.servicelinker.models.VNetSolution&text=VNetSolution\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.validate()"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.validate()"
  name: "validate()"
  nameWithType: "LinkerProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.withAuthInfo(com.azure.resourcemanager.servicelinker.models.AuthInfoBase)"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.withAuthInfo(AuthInfoBase authInfo)"
  name: "withAuthInfo(AuthInfoBase authInfo)"
  nameWithType: "LinkerProperties.withAuthInfo(AuthInfoBase authInfo)"
  summary: "Set the auth<wbr>Info property: The authentication type."
  parameters:
  - description: "the authInfo value to set."
    name: "authInfo"
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.AuthInfoBase?alt=com.azure.resourcemanager.servicelinker.models.AuthInfoBase&text=AuthInfoBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LinkerProperties withAuthInfo(AuthInfoBase authInfo)"
  desc: "Set the authInfo property: The authentication type."
  returns:
    description: "the LinkerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties?alt=com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties&text=LinkerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.withClientType(com.azure.resourcemanager.servicelinker.models.ClientType)"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.withClientType(ClientType clientType)"
  name: "withClientType(ClientType clientType)"
  nameWithType: "LinkerProperties.withClientType(ClientType clientType)"
  summary: "Set the client<wbr>Type property: The application client type."
  parameters:
  - description: "the clientType value to set."
    name: "clientType"
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.ClientType?alt=com.azure.resourcemanager.servicelinker.models.ClientType&text=ClientType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LinkerProperties withClientType(ClientType clientType)"
  desc: "Set the clientType property: The application client type."
  returns:
    description: "the LinkerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties?alt=com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties&text=LinkerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.withScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.withScope(String scope)"
  name: "withScope(String scope)"
  nameWithType: "LinkerProperties.withScope(String scope)"
  summary: "Set the scope property: connection scope in source service."
  parameters:
  - description: "the scope value to set."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LinkerProperties withScope(String scope)"
  desc: "Set the scope property: connection scope in source service."
  returns:
    description: "the LinkerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties?alt=com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties&text=LinkerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.withSecretStore(com.azure.resourcemanager.servicelinker.models.SecretStore)"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.withSecretStore(SecretStore secretStore)"
  name: "withSecretStore(SecretStore secretStore)"
  nameWithType: "LinkerProperties.withSecretStore(SecretStore secretStore)"
  summary: "Set the secret<wbr>Store property: An option to store secret value in secure place."
  parameters:
  - description: "the secretStore value to set."
    name: "secretStore"
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.SecretStore?alt=com.azure.resourcemanager.servicelinker.models.SecretStore&text=SecretStore\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LinkerProperties withSecretStore(SecretStore secretStore)"
  desc: "Set the secretStore property: An option to store secret value in secure place."
  returns:
    description: "the LinkerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties?alt=com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties&text=LinkerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.withTargetService(com.azure.resourcemanager.servicelinker.models.TargetServiceBase)"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.withTargetService(TargetServiceBase targetService)"
  name: "withTargetService(TargetServiceBase targetService)"
  nameWithType: "LinkerProperties.withTargetService(TargetServiceBase targetService)"
  summary: "Set the target<wbr>Service property: The target service properties."
  parameters:
  - description: "the targetService value to set."
    name: "targetService"
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.TargetServiceBase?alt=com.azure.resourcemanager.servicelinker.models.TargetServiceBase&text=TargetServiceBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LinkerProperties withTargetService(TargetServiceBase targetService)"
  desc: "Set the targetService property: The target service properties."
  returns:
    description: "the LinkerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties?alt=com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties&text=LinkerProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.withVNetSolution(com.azure.resourcemanager.servicelinker.models.VNetSolution)"
  fullName: "com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties.withVNetSolution(VNetSolution vNetSolution)"
  name: "withVNetSolution(VNetSolution vNetSolution)"
  nameWithType: "LinkerProperties.withVNetSolution(VNetSolution vNetSolution)"
  summary: "Set the v<wbr>Net<wbr>Solution property: The VNet solution."
  parameters:
  - description: "the vNetSolution value to set."
    name: "vNetSolution"
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.models.VNetSolution?alt=com.azure.resourcemanager.servicelinker.models.VNetSolution&text=VNetSolution\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LinkerProperties withVNetSolution(VNetSolution vNetSolution)"
  desc: "Set the vNetSolution property: The VNet solution."
  returns:
    description: "the LinkerProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties?alt=com.azure.resourcemanager.servicelinker.fluent.models.LinkerProperties&text=LinkerProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The properties of the linker."
metadata: {}
package: "com.azure.resourcemanager.servicelinker.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicelinker:1.0.0-beta.2
