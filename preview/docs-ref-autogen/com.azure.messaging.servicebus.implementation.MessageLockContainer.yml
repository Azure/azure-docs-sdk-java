### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.servicebus.implementation.MessageLockContainer"
  id: "MessageLockContainer"
  parent: "com.azure.messaging.servicebus.implementation"
  children:
  - "com.azure.messaging.servicebus.implementation.MessageLockContainer.MessageLockContainer()"
  - "com.azure.messaging.servicebus.implementation.MessageLockContainer.addOrUpdate(java.lang.String,java.time.Instant)"
  - "com.azure.messaging.servicebus.implementation.MessageLockContainer.getLockTokenExpiration(java.lang.String)"
  - "com.azure.messaging.servicebus.implementation.MessageLockContainer.remove(java.lang.String)"
  langs:
  - "java"
  name: "MessageLockContainer"
  nameWithType: "MessageLockContainer"
  fullName: "com.azure.messaging.servicebus.implementation.MessageLockContainer"
  type: "Class"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Container of Message lock and related metadata related."
  syntax:
    content: "public class MessageLockContainer"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.servicebus.implementation.MessageLockContainer.MessageLockContainer()"
  id: "MessageLockContainer()"
  parent: "com.azure.messaging.servicebus.implementation.MessageLockContainer"
  langs:
  - "java"
  name: "MessageLockContainer()"
  nameWithType: "MessageLockContainer.MessageLockContainer()"
  fullName: "com.azure.messaging.servicebus.implementation.MessageLockContainer.MessageLockContainer()"
  overload: "com.azure.messaging.servicebus.implementation.MessageLockContainer.MessageLockContainer*"
  type: "Constructor"
  package: "com.azure.messaging.servicebus.implementation"
  syntax:
    content: "public MessageLockContainer()"
- uid: "com.azure.messaging.servicebus.implementation.MessageLockContainer.addOrUpdate(java.lang.String,java.time.Instant)"
  id: "addOrUpdate(java.lang.String,java.time.Instant)"
  parent: "com.azure.messaging.servicebus.implementation.MessageLockContainer"
  langs:
  - "java"
  name: "addOrUpdate(String lockToken, Instant lockTokenExpiration)"
  nameWithType: "MessageLockContainer.addOrUpdate(String lockToken, Instant lockTokenExpiration)"
  fullName: "com.azure.messaging.servicebus.implementation.MessageLockContainer.addOrUpdate(String lockToken, Instant lockTokenExpiration)"
  overload: "com.azure.messaging.servicebus.implementation.MessageLockContainer.addOrUpdate*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Adds or updates the expiration time on a lock token. If the expiration time in the container is larger than `lockTokenExpiration`, then the current container value is used."
  syntax:
    content: "public Instant addOrUpdate(String lockToken, Instant lockTokenExpiration)"
    parameters:
    - id: "lockToken"
      type: "java.lang.String"
      description: "Token to update associated lock expiration."
    - id: "lockTokenExpiration"
      type: "java.time.Instant"
      description: "Time at which the lock token expires."
    return:
      type: "java.time.Instant"
      description: "The updated value in the container. If the expiration time in the container is larger than\n     <code>lockTokenExpiration</code>, then the current container value is used."
- uid: "com.azure.messaging.servicebus.implementation.MessageLockContainer.getLockTokenExpiration(java.lang.String)"
  id: "getLockTokenExpiration(java.lang.String)"
  parent: "com.azure.messaging.servicebus.implementation.MessageLockContainer"
  langs:
  - "java"
  name: "getLockTokenExpiration(String lockToken)"
  nameWithType: "MessageLockContainer.getLockTokenExpiration(String lockToken)"
  fullName: "com.azure.messaging.servicebus.implementation.MessageLockContainer.getLockTokenExpiration(String lockToken)"
  overload: "com.azure.messaging.servicebus.implementation.MessageLockContainer.getLockTokenExpiration*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Gets the lock expiration given a lock token."
  syntax:
    content: "public Instant getLockTokenExpiration(String lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.lang.String"
      description: "Token to get associated lock expiration for."
    return:
      type: "java.time.Instant"
      description: "An <xref uid=\"java.time.Instant\" data-throw-if-not-resolved=\"false\">Instant</xref> for when the lock expires or <code>null</code> if the <code>lockToken</code> does not exist."
- uid: "com.azure.messaging.servicebus.implementation.MessageLockContainer.remove(java.lang.String)"
  id: "remove(java.lang.String)"
  parent: "com.azure.messaging.servicebus.implementation.MessageLockContainer"
  langs:
  - "java"
  name: "remove(String lockToken)"
  nameWithType: "MessageLockContainer.remove(String lockToken)"
  fullName: "com.azure.messaging.servicebus.implementation.MessageLockContainer.remove(String lockToken)"
  overload: "com.azure.messaging.servicebus.implementation.MessageLockContainer.remove*"
  type: "Method"
  package: "com.azure.messaging.servicebus.implementation"
  summary: "Removes the lock token from the map."
  syntax:
    content: "public void remove(String lockToken)"
    parameters:
    - id: "lockToken"
      type: "java.lang.String"
      description: "Token to remove."
references:
- uid: "com.azure.messaging.servicebus.implementation.MessageLockContainer.MessageLockContainer*"
  name: "MessageLockContainer"
  nameWithType: "MessageLockContainer.MessageLockContainer"
  fullName: "com.azure.messaging.servicebus.implementation.MessageLockContainer.MessageLockContainer"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.time.Instant"
  spec.java:
  - uid: "java.time.Instant"
    name: "Instant"
    fullName: "java.time.Instant"
- uid: "com.azure.messaging.servicebus.implementation.MessageLockContainer.addOrUpdate*"
  name: "addOrUpdate"
  nameWithType: "MessageLockContainer.addOrUpdate"
  fullName: "com.azure.messaging.servicebus.implementation.MessageLockContainer.addOrUpdate"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.implementation.MessageLockContainer.getLockTokenExpiration*"
  name: "getLockTokenExpiration"
  nameWithType: "MessageLockContainer.getLockTokenExpiration"
  fullName: "com.azure.messaging.servicebus.implementation.MessageLockContainer.getLockTokenExpiration"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "com.azure.messaging.servicebus.implementation.MessageLockContainer.remove*"
  name: "remove"
  nameWithType: "MessageLockContainer.remove"
  fullName: "com.azure.messaging.servicebus.implementation.MessageLockContainer.remove"
  package: "com.azure.messaging.servicebus.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
