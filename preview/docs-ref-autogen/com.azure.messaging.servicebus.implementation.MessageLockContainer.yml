### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.implementation.MessageLockContainer
  id: MessageLockContainer
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation
  children:
  - com.azure.messaging.servicebus.implementation.MessageLockContainer.MessageLockContainer(java.time.Duration)
  - com.azure.messaging.servicebus.implementation.MessageLockContainer.addOrUpdate(java.lang.String,java.time.Instant)
  - com.azure.messaging.servicebus.implementation.MessageLockContainer.close()
  - com.azure.messaging.servicebus.implementation.MessageLockContainer.contains(java.lang.String)
  - com.azure.messaging.servicebus.implementation.MessageLockContainer.remove(java.lang.String)
  langs:
  - java
  name: MessageLockContainer
  nameWithType: MessageLockContainer
  fullName: com.azure.messaging.servicebus.implementation.MessageLockContainer
  type: Class
  package: com.azure.messaging.servicebus.implementation
  summary: Container for message locks that are cleaned up periodically.
  syntax:
    content: public class MessageLockContainer implements AutoCloseable
  inheritance:
  - java.lang.Object
  implements:
  - java.lang.AutoCloseable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.implementation.MessageLockContainer.MessageLockContainer(java.time.Duration)
  id: MessageLockContainer(java.time.Duration)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.MessageLockContainer
  langs:
  - java
  name: MessageLockContainer(Duration cleanupInterval)
  nameWithType: MessageLockContainer.MessageLockContainer(Duration cleanupInterval)
  fullName: com.azure.messaging.servicebus.implementation.MessageLockContainer.MessageLockContainer(Duration cleanupInterval)
  overload: com.azure.messaging.servicebus.implementation.MessageLockContainer.MessageLockContainer*
  type: Constructor
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: public MessageLockContainer(Duration cleanupInterval)
    parameters:
    - id: cleanupInterval
      type: java.time.Duration
- uid: com.azure.messaging.servicebus.implementation.MessageLockContainer.addOrUpdate(java.lang.String,java.time.Instant)
  id: addOrUpdate(java.lang.String,java.time.Instant)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.MessageLockContainer
  langs:
  - java
  name: addOrUpdate(String lockToken, Instant lockTokenExpiration)
  nameWithType: MessageLockContainer.addOrUpdate(String lockToken, Instant lockTokenExpiration)
  fullName: com.azure.messaging.servicebus.implementation.MessageLockContainer.addOrUpdate(String lockToken, Instant lockTokenExpiration)
  overload: com.azure.messaging.servicebus.implementation.MessageLockContainer.addOrUpdate*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Adds or updates the expiration time on a lock token. If the expiration time in the container is larger than `lockTokenExpiration`, then the current container value is used.
  syntax:
    content: public Instant addOrUpdate(String lockToken, Instant lockTokenExpiration)
    parameters:
    - id: lockToken
      type: java.lang.String
      description: Token to update associated lock expiration.
    - id: lockTokenExpiration
      type: java.time.Instant
      description: Time at which the lock token expires.
    return:
      type: java.time.Instant
      description: >-
        The updated value in the container. If the expiration time in the container is larger than
             <code>lockTokenExpiration</code>, then the current container value is used.
- uid: com.azure.messaging.servicebus.implementation.MessageLockContainer.close()
  id: close()
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.MessageLockContainer
  langs:
  - java
  name: close()
  nameWithType: MessageLockContainer.close()
  fullName: com.azure.messaging.servicebus.implementation.MessageLockContainer.close()
  overload: com.azure.messaging.servicebus.implementation.MessageLockContainer.close*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  syntax:
    content: public void close()
- uid: com.azure.messaging.servicebus.implementation.MessageLockContainer.contains(java.lang.String)
  id: contains(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.MessageLockContainer
  langs:
  - java
  name: contains(String lockToken)
  nameWithType: MessageLockContainer.contains(String lockToken)
  fullName: com.azure.messaging.servicebus.implementation.MessageLockContainer.contains(String lockToken)
  overload: com.azure.messaging.servicebus.implementation.MessageLockContainer.contains*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Gets whether or not the lock token is held in the container and has not expired.
  syntax:
    content: public boolean contains(String lockToken)
    parameters:
    - id: lockToken
      type: java.lang.String
      description: Lock token to check.
    return:
      type: boolean
      description: <code>true</code> if the lock token is in the container and has not expired; <code>false</code> otherwise.
- uid: com.azure.messaging.servicebus.implementation.MessageLockContainer.remove(java.lang.String)
  id: remove(java.lang.String)
  artifact: com.azure:azure-messaging-servicebus:7.0.0-beta.2
  parent: com.azure.messaging.servicebus.implementation.MessageLockContainer
  langs:
  - java
  name: remove(String lockToken)
  nameWithType: MessageLockContainer.remove(String lockToken)
  fullName: com.azure.messaging.servicebus.implementation.MessageLockContainer.remove(String lockToken)
  overload: com.azure.messaging.servicebus.implementation.MessageLockContainer.remove*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Removes the lock token from the map.
  syntax:
    content: public void remove(String lockToken)
    parameters:
    - id: lockToken
      type: java.lang.String
      description: Token to remove.
references:
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.azure.messaging.servicebus.implementation.MessageLockContainer.MessageLockContainer*
  name: MessageLockContainer
  nameWithType: MessageLockContainer.MessageLockContainer
  fullName: com.azure.messaging.servicebus.implementation.MessageLockContainer.MessageLockContainer
  package: com.azure.messaging.servicebus.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.time.Instant
  spec.java:
  - uid: java.time.Instant
    name: Instant
    fullName: java.time.Instant
- uid: com.azure.messaging.servicebus.implementation.MessageLockContainer.addOrUpdate*
  name: addOrUpdate
  nameWithType: MessageLockContainer.addOrUpdate
  fullName: com.azure.messaging.servicebus.implementation.MessageLockContainer.addOrUpdate
  package: com.azure.messaging.servicebus.implementation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.messaging.servicebus.implementation.MessageLockContainer.contains*
  name: contains
  nameWithType: MessageLockContainer.contains
  fullName: com.azure.messaging.servicebus.implementation.MessageLockContainer.contains
  package: com.azure.messaging.servicebus.implementation
- uid: com.azure.messaging.servicebus.implementation.MessageLockContainer.remove*
  name: remove
  nameWithType: MessageLockContainer.remove
  fullName: com.azure.messaging.servicebus.implementation.MessageLockContainer.remove
  package: com.azure.messaging.servicebus.implementation
- uid: com.azure.messaging.servicebus.implementation.MessageLockContainer.close*
  name: close
  nameWithType: MessageLockContainer.close
  fullName: com.azure.messaging.servicebus.implementation.MessageLockContainer.close
  package: com.azure.messaging.servicebus.implementation
- uid: java.lang.AutoCloseable
  name: AutoCloseable
  nameWithType: AutoCloseable
  fullName: java.lang.AutoCloseable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
