### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder"
fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder"
name: "EventProcessorClientBuilder"
nameWithType: "EventProcessorClientBuilder"
summary: "This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class EventProcessorClientBuilder implements TokenCredentialTrait<EventProcessorClientBuilder>, AzureNamedKeyCredentialTrait<EventProcessorClientBuilder>, ConnectionStringTrait<EventProcessorClientBuilder>, AzureSasCredentialTrait<EventProcessorClientBuilder>, AmqpTrait<EventProcessorClientBuilder>, ConfigurationTrait<EventProcessorClientBuilder>"
constructors:
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.EventProcessorClientBuilder()"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.EventProcessorClientBuilder()"
  name: "EventProcessorClientBuilder()"
  nameWithType: "EventProcessorClientBuilder.EventProcessorClientBuilder()"
  summary: "Creates a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref>."
  syntax: "public EventProcessorClientBuilder()"
  desc: "Creates a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref>."
fields:
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.DEFAULT_LOAD_BALANCING_UPDATE_INTERVAL"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.DEFAULT_LOAD_BALANCING_UPDATE_INTERVAL"
  name: "DEFAULT_LOAD_BALANCING_UPDATE_INTERVAL"
  nameWithType: "EventProcessorClientBuilder.DEFAULT_LOAD_BALANCING_UPDATE_INTERVAL"
  summary: "Default load balancing update interval."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final Duration DEFAULT_LOAD_BALANCING_UPDATE_INTERVAL"
  desc: "Default load balancing update interval. Balancing interval should account for latency between the client and the storage account."
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.DEFAULT_OWNERSHIP_EXPIRATION_INTERVAL"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.DEFAULT_OWNERSHIP_EXPIRATION_INTERVAL"
  name: "DEFAULT_OWNERSHIP_EXPIRATION_INTERVAL"
  nameWithType: "EventProcessorClientBuilder.DEFAULT_OWNERSHIP_EXPIRATION_INTERVAL"
  summary: "Default ownership expiration."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final Duration DEFAULT_OWNERSHIP_EXPIRATION_INTERVAL"
  desc: "Default ownership expiration."
methods:
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.buildEventProcessorClient()"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.buildEventProcessorClient()"
  name: "buildEventProcessorClient()"
  nameWithType: "EventProcessorClientBuilder.buildEventProcessorClient()"
  summary: "This will create a new <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> configured with the options set in this builder."
  syntax: "public EventProcessorClient buildEventProcessorClient()"
  desc: "This will create a new <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> configured with the options set in this builder. Each call to this method will return a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>.\n\nAll partitions processed by this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> will start processing from <xref uid=\"com.azure.messaging.eventhubs.models.EventPosition.earliest()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"earliest\"></xref> available event in the respective partitions."
  returns:
    description: "A new instance of <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClient?alt=com.azure.messaging.eventhubs.EventProcessorClient&text=EventProcessorClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.checkpointStore(com.azure.messaging.eventhubs.CheckpointStore)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.checkpointStore(CheckpointStore checkpointStore)"
  name: "checkpointStore(CheckpointStore checkpointStore)"
  nameWithType: "EventProcessorClientBuilder.checkpointStore(CheckpointStore checkpointStore)"
  summary: "Sets the <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointStore\"></xref> the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> will use for storing partition ownership and checkpoint information."
  parameters:
  - description: "Implementation of <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointStore\"></xref>."
    name: "checkpointStore"
    type: "<xref href=\"com.azure.messaging.eventhubs.CheckpointStore?alt=com.azure.messaging.eventhubs.CheckpointStore&text=CheckpointStore\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder checkpointStore(CheckpointStore checkpointStore)"
  desc: "Sets the <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointStore\"></xref> the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> will use for storing partition ownership and checkpoint information.\n\nUsers can, optionally, provide their own implementation of <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointStore\"></xref> which will store ownership and checkpoint information."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.clientOptions(com.azure.core.util.ClientOptions)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.clientOptions(ClientOptions clientOptions)"
  name: "clientOptions(ClientOptions clientOptions)"
  nameWithType: "EventProcessorClientBuilder.clientOptions(ClientOptions clientOptions)"
  summary: "Sets the client options for the processor client."
  parameters:
  - description: "The client options."
    name: "clientOptions"
    type: "<xref href=\"com.azure.core.util.ClientOptions?alt=com.azure.core.util.ClientOptions&text=ClientOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder clientOptions(ClientOptions clientOptions)"
  desc: "Sets the client options for the processor client. The application id set on the client options will be used for tracing. The headers set on `ClientOptions` are currently not used but can be used in later releases to add to AMQP message."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.configuration(com.azure.core.util.Configuration)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.configuration(Configuration configuration)"
  name: "configuration(Configuration configuration)"
  nameWithType: "EventProcessorClientBuilder.configuration(Configuration configuration)"
  summary: "Sets the configuration store that is used during construction of the service client."
  parameters:
  - description: "The configuration store used to configure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubAsyncClient\"></xref>."
    name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder configuration(Configuration configuration)"
  desc: "Sets the configuration store that is used during construction of the service client. If not specified, the default configuration store is used to configure the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubAsyncClient\"></xref>. Use <xref uid=\"com.azure.core.util.Configuration.NONE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Configuration#NONE\"></xref> to bypass using configuration settings during construction."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(String connectionString)"
  name: "connectionString(String connectionString)"
  nameWithType: "EventProcessorClientBuilder.connectionString(String connectionString)"
  summary: "Sets the credential information given a connection string to the Event Hub instance."
  parameters:
  - description: "The connection string to use for connecting to the Event Hub instance. It is expected\n that the Event Hub name and the shared access key properties are contained in this connection string."
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder connectionString(String connectionString)"
  desc: "Sets the credential information given a connection string to the Event Hub instance.\n\nIf the connection string is copied from the Event Hubs namespace, it will likely not contain the name to the desired Event Hub, which is needed. In this case, the name can be added manually by adding \"EntityPath=EVENT\\_HUB\\_NAME\" to the end of the connection string. For example, \"EntityPath=telemetry-hub\".\n\nIf you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that Event Hub will result in a connection string that contains the name."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String,java.lang.String)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(String connectionString, String eventHubName)"
  name: "connectionString(String connectionString, String eventHubName)"
  nameWithType: "EventProcessorClientBuilder.connectionString(String connectionString, String eventHubName)"
  summary: "Sets the credential information given a connection string to the Event Hubs namespace and name to a specific Event Hub instance."
  parameters:
  - description: "The connection string to use for connecting to the Event Hubs namespace; it is expected\n that the shared access key properties are contained in this connection string, but not the Event Hub name."
    name: "connectionString"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Event Hub to connect the client to."
    name: "eventHubName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder connectionString(String connectionString, String eventHubName)"
  desc: "Sets the credential information given a connection string to the Event Hubs namespace and name to a specific Event Hub instance."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.consumerGroup(java.lang.String)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.consumerGroup(String consumerGroup)"
  name: "consumerGroup(String consumerGroup)"
  nameWithType: "EventProcessorClientBuilder.consumerGroup(String consumerGroup)"
  summary: "Sets the consumer group name from which the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> should consume events."
  parameters:
  - description: "The consumer group name this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> should consume events."
    name: "consumerGroup"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder consumerGroup(String consumerGroup)"
  desc: "Sets the consumer group name from which the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> should consume events."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(com.azure.core.credential.AzureNamedKeyCredential)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(AzureNamedKeyCredential credential)"
  name: "credential(AzureNamedKeyCredential credential)"
  nameWithType: "EventProcessorClientBuilder.credential(AzureNamedKeyCredential credential)"
  summary: "Sets the credential information for which Event Hub instance to connect to, and how to authorize against it."
  parameters:
  - description: "The shared access name and key credential to use for authorization.\n     Access controls may be specified by the Event Hubs namespace or the requested Event Hub,\n     depending on Azure configuration."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.AzureNamedKeyCredential?alt=com.azure.core.credential.AzureNamedKeyCredential&text=AzureNamedKeyCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder credential(AzureNamedKeyCredential credential)"
  desc: "Sets the credential information for which Event Hub instance to connect to, and how to authorize against it."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(com.azure.core.credential.AzureSasCredential)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(AzureSasCredential credential)"
  name: "credential(AzureSasCredential credential)"
  nameWithType: "EventProcessorClientBuilder.credential(AzureSasCredential credential)"
  summary: "Sets the credential information for which Event Hub instance to connect to, and how to authorize against it."
  parameters:
  - description: "The shared access signature credential to use for authorization.\n     Access controls may be specified by the Event Hubs namespace or the requested Event Hub,\n     depending on Azure configuration."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.AzureSasCredential?alt=com.azure.core.credential.AzureSasCredential&text=AzureSasCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder credential(AzureSasCredential credential)"
  desc: "Sets the credential information for which Event Hub instance to connect to, and how to authorize against it."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(com.azure.core.credential.TokenCredential)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(TokenCredential credential)"
  name: "credential(TokenCredential credential)"
  nameWithType: "EventProcessorClientBuilder.credential(TokenCredential credential)"
  summary: "Sets the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authorize requests sent to the service."
  parameters:
  - description: "The token credential to use for authorization. Access controls may be specified by the Event\n Hubs namespace or the requested Event Hub, depending on Azure configuration."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder credential(TokenCredential credential)"
  desc: "Sets the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> used to authorize requests sent to the service. Refer to the Azure SDK for Java [identity and authentication][] documentation for more details on proper usage of the <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenCredential\"></xref> type.\n\n\n[identity and authentication]: https://aka.ms/azsdk/java/docs/identity"
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.AzureNamedKeyCredential)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(String fullyQualifiedNamespace, String eventHubName, AzureNamedKeyCredential credential)"
  name: "credential(String fullyQualifiedNamespace, String eventHubName, AzureNamedKeyCredential credential)"
  nameWithType: "EventProcessorClientBuilder.credential(String fullyQualifiedNamespace, String eventHubName, AzureNamedKeyCredential credential)"
  summary: "Sets the credential information for which Event Hub instance to connect to, and how to authorize against it."
  parameters:
  - description: "The fully qualified name for the Event Hubs namespace. This is likely to be\n     similar to <strong>\"{your-namespace}.servicebus.windows.net\"</strong>."
    name: "fullyQualifiedNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Event Hub to connect the client to."
    name: "eventHubName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The shared access name and key credential to use for authorization.\n     Access controls may be specified by the Event Hubs namespace or the requested Event Hub,\n     depending on Azure configuration."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.AzureNamedKeyCredential?alt=com.azure.core.credential.AzureNamedKeyCredential&text=AzureNamedKeyCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder credential(String fullyQualifiedNamespace, String eventHubName, AzureNamedKeyCredential credential)"
  desc: "Sets the credential information for which Event Hub instance to connect to, and how to authorize against it."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.AzureSasCredential)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(String fullyQualifiedNamespace, String eventHubName, AzureSasCredential credential)"
  name: "credential(String fullyQualifiedNamespace, String eventHubName, AzureSasCredential credential)"
  nameWithType: "EventProcessorClientBuilder.credential(String fullyQualifiedNamespace, String eventHubName, AzureSasCredential credential)"
  summary: "Sets the credential information for which Event Hub instance to connect to, and how to authorize against it."
  parameters:
  - description: "The fully qualified name for the Event Hubs namespace. This is likely to be\n     similar to <strong>\"{your-namespace}.servicebus.windows.net\"</strong>."
    name: "fullyQualifiedNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Event Hub to connect the client to."
    name: "eventHubName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The shared access signature credential to use for authorization.\n     Access controls may be specified by the Event Hubs namespace or the requested Event Hub,\n     depending on Azure configuration."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.AzureSasCredential?alt=com.azure.core.credential.AzureSasCredential&text=AzureSasCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder credential(String fullyQualifiedNamespace, String eventHubName, AzureSasCredential credential)"
  desc: "Sets the credential information for which Event Hub instance to connect to, and how to authorize against it."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(String fullyQualifiedNamespace, String eventHubName, TokenCredential credential)"
  name: "credential(String fullyQualifiedNamespace, String eventHubName, TokenCredential credential)"
  nameWithType: "EventProcessorClientBuilder.credential(String fullyQualifiedNamespace, String eventHubName, TokenCredential credential)"
  summary: "Sets the credential information for which Event Hub instance to connect to, and how to authorize against it."
  parameters:
  - description: "The fully qualified name for the Event Hubs namespace. This is likely to be\n similar to <strong>\"{your-namespace}.servicebus.windows.net\"</strong>."
    name: "fullyQualifiedNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Event Hub to connect the client to."
    name: "eventHubName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The token credential to use for authorization. Access controls may be specified by the Event\n Hubs namespace or the requested Event Hub, depending on Azure configuration."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder credential(String fullyQualifiedNamespace, String eventHubName, TokenCredential credential)"
  desc: "Sets the credential information for which Event Hub instance to connect to, and how to authorize against it."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.customEndpointAddress(java.lang.String)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.customEndpointAddress(String customEndpointAddress)"
  name: "customEndpointAddress(String customEndpointAddress)"
  nameWithType: "EventProcessorClientBuilder.customEndpointAddress(String customEndpointAddress)"
  summary: "Sets a custom endpoint address when connecting to the Event Hubs service."
  parameters:
  - description: "The custom endpoint address."
    name: "customEndpointAddress"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder customEndpointAddress(String customEndpointAddress)"
  desc: "Sets a custom endpoint address when connecting to the Event Hubs service. This can be useful when your network does not allow connecting to the standard Azure Event Hubs endpoint address, but does allow connecting through an intermediary. For example: https://my.custom.endpoint.com:55300.\n\nIf no port is specified, the default port for the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.transportType(com.azure.core.amqp.AmqpTransportType)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"transport type\"></xref> is used."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.eventHubName(java.lang.String)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.eventHubName(String eventHubName)"
  name: "eventHubName(String eventHubName)"
  nameWithType: "EventProcessorClientBuilder.eventHubName(String eventHubName)"
  summary: "Sets the name of the Event Hub to connect the client to."
  parameters:
  - description: "The name of the Event Hub to connect the client to."
    name: "eventHubName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder eventHubName(String eventHubName)"
  desc: "Sets the name of the Event Hub to connect the client to."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.fullyQualifiedNamespace(java.lang.String)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.fullyQualifiedNamespace(String fullyQualifiedNamespace)"
  name: "fullyQualifiedNamespace(String fullyQualifiedNamespace)"
  nameWithType: "EventProcessorClientBuilder.fullyQualifiedNamespace(String fullyQualifiedNamespace)"
  summary: "Sets the fully qualified name for the Event Hubs namespace."
  parameters:
  - description: "The fully qualified name for the Event Hubs namespace. This is likely to be\n     similar to <strong>\"{your-namespace}.servicebus.windows.net\"</strong>."
    name: "fullyQualifiedNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder fullyQualifiedNamespace(String fullyQualifiedNamespace)"
  desc: "Sets the fully qualified name for the Event Hubs namespace."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.initialPartitionEventPosition(java.util.Map<java.lang.String,com.azure.messaging.eventhubs.models.EventPosition>)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.initialPartitionEventPosition(Map<String,EventPosition> initialPartitionEventPosition)"
  name: "initialPartitionEventPosition(Map<String,EventPosition> initialPartitionEventPosition)"
  nameWithType: "EventProcessorClientBuilder.initialPartitionEventPosition(Map<String,EventPosition> initialPartitionEventPosition)"
  summary: "Sets the map containing the event position to use for each partition if a checkpoint for the partition does not exist in <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointStore\"></xref>."
  parameters:
  - description: "Map of initial event positions for partition ids."
    name: "initialPartitionEventPosition"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.messaging.eventhubs.models.EventPosition?alt=com.azure.messaging.eventhubs.models.EventPosition&text=EventPosition\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EventProcessorClientBuilder initialPartitionEventPosition(Map<String,EventPosition> initialPartitionEventPosition)"
  desc: "Sets the map containing the event position to use for each partition if a checkpoint for the partition does not exist in <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointStore\"></xref>. This map is keyed off of the partition id. If there is no checkpoint in <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointStore\"></xref> and there is no entry in this map, the processing of the partition will start from <xref uid=\"com.azure.messaging.eventhubs.models.EventPosition.latest()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"latest\"></xref> position."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.loadBalancingStrategy(com.azure.messaging.eventhubs.LoadBalancingStrategy)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.loadBalancingStrategy(LoadBalancingStrategy loadBalancingStrategy)"
  name: "loadBalancingStrategy(LoadBalancingStrategy loadBalancingStrategy)"
  nameWithType: "EventProcessorClientBuilder.loadBalancingStrategy(LoadBalancingStrategy loadBalancingStrategy)"
  summary: "The <xref uid=\"com.azure.messaging.eventhubs.LoadBalancingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LoadBalancingStrategy\"></xref> the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"event processor\"></xref> will use for claiming partition ownership."
  parameters:
  - description: "The <xref uid=\"com.azure.messaging.eventhubs.LoadBalancingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LoadBalancingStrategy\"></xref> to use."
    name: "loadBalancingStrategy"
    type: "<xref href=\"com.azure.messaging.eventhubs.LoadBalancingStrategy?alt=com.azure.messaging.eventhubs.LoadBalancingStrategy&text=LoadBalancingStrategy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder loadBalancingStrategy(LoadBalancingStrategy loadBalancingStrategy)"
  desc: "The <xref uid=\"com.azure.messaging.eventhubs.LoadBalancingStrategy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LoadBalancingStrategy\"></xref> the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"event processor\"></xref> will use for claiming partition ownership. By default, a <xref uid=\"com.azure.messaging.eventhubs.LoadBalancingStrategy.BALANCED\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Balanced\"></xref> approach will be used."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.loadBalancingUpdateInterval(java.time.Duration)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.loadBalancingUpdateInterval(Duration loadBalancingUpdateInterval)"
  name: "loadBalancingUpdateInterval(Duration loadBalancingUpdateInterval)"
  nameWithType: "EventProcessorClientBuilder.loadBalancingUpdateInterval(Duration loadBalancingUpdateInterval)"
  summary: "The time interval between load balancing update cycles."
  parameters:
  - description: "The time duration between load balancing update cycles."
    name: "loadBalancingUpdateInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder loadBalancingUpdateInterval(Duration loadBalancingUpdateInterval)"
  desc: "The time interval between load balancing update cycles. This is also generally the interval at which ownership of partitions are renewed. By default, this interval is set to 10 seconds."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.partitionOwnershipExpirationInterval(java.time.Duration)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.partitionOwnershipExpirationInterval(Duration partitionOwnershipExpirationInterval)"
  name: "partitionOwnershipExpirationInterval(Duration partitionOwnershipExpirationInterval)"
  nameWithType: "EventProcessorClientBuilder.partitionOwnershipExpirationInterval(Duration partitionOwnershipExpirationInterval)"
  summary: "The time duration after which the ownership of partition expires if it's not renewed by the owning processor instance."
  parameters:
  - description: "The time duration after which the ownership of partition expires."
    name: "partitionOwnershipExpirationInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder partitionOwnershipExpirationInterval(Duration partitionOwnershipExpirationInterval)"
  desc: "The time duration after which the ownership of partition expires if it's not renewed by the owning processor instance. This is the duration that this processor instance will wait before taking over the ownership of partitions previously owned by an inactive processor. By default, this duration is set to a minute."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.prefetchCount(int)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.prefetchCount(int prefetchCount)"
  name: "prefetchCount(int prefetchCount)"
  nameWithType: "EventProcessorClientBuilder.prefetchCount(int prefetchCount)"
  summary: "Sets the count used by the receivers to control the number of events each consumer will actively receive and queue locally without regard to whether a receive operation is currently active."
  parameters:
  - description: "The number of events to queue locally."
    name: "prefetchCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder prefetchCount(int prefetchCount)"
  desc: "Sets the count used by the receivers to control the number of events each consumer will actively receive and queue locally without regard to whether a receive operation is currently active."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventHubClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processError(java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processError(Consumer<ErrorContext> processError)"
  name: "processError(Consumer<ErrorContext> processError)"
  nameWithType: "EventProcessorClientBuilder.processError(Consumer<ErrorContext> processError)"
  summary: "The function that is called when an error occurs while processing events."
  parameters:
  - description: "The callback that's called when an error occurs while processing events."
    name: "processError"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.models.ErrorContext?alt=com.azure.messaging.eventhubs.models.ErrorContext&text=ErrorContext\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EventProcessorClientBuilder processError(Consumer<ErrorContext> processError)"
  desc: "The function that is called when an error occurs while processing events. The input contains the partition information where the error happened."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(Consumer<EventContext> processEvent)"
  name: "processEvent(Consumer<EventContext> processEvent)"
  nameWithType: "EventProcessorClientBuilder.processEvent(Consumer<EventContext> processEvent)"
  summary: "The function that is called for each event received by this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>."
  parameters:
  - description: "The callback that's called when an event is received by this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>."
    name: "processEvent"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.models.EventContext?alt=com.azure.messaging.eventhubs.models.EventContext&text=EventContext\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EventProcessorClientBuilder processEvent(Consumer<EventContext> processEvent)"
  desc: "The function that is called for each event received by this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>. The input contains the partition context and the event data."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>,java.time.Duration)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(Consumer<EventContext> processEvent, Duration maxWaitTime)"
  name: "processEvent(Consumer<EventContext> processEvent, Duration maxWaitTime)"
  nameWithType: "EventProcessorClientBuilder.processEvent(Consumer<EventContext> processEvent, Duration maxWaitTime)"
  summary: "The function that is called for each event received by this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>."
  parameters:
  - description: "The callback that's called when an event is received by this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> or\n when the max wait duration has expired."
    name: "processEvent"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.models.EventContext?alt=com.azure.messaging.eventhubs.models.EventContext&text=EventContext\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The max time duration to wait to receive an event before invoking this handler."
    name: "maxWaitTime"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder processEvent(Consumer<EventContext> processEvent, Duration maxWaitTime)"
  desc: "The function that is called for each event received by this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>. The input contains the partition context and the event data. If the max wait time is set, the receive will wait for that duration to receive an event and if is no event received, the consumer will be invoked with a null event data."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize)"
  name: "processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize)"
  nameWithType: "EventProcessorClientBuilder.processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize)"
  summary: "The function that is called for each event received by this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>."
  parameters:
  - description: "The callback that's called when an event is received by this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> or when the max wait duration has expired."
    name: "processEventBatch"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.models.EventBatchContext?alt=com.azure.messaging.eventhubs.models.EventBatchContext&text=EventBatchContext\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The maximum number of events that will be in the list when this callback is invoked."
    name: "maxBatchSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize)"
  desc: "The function that is called for each event received by this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>. The input contains the partition context and the event data. If the max wait time is set, the receive will wait for that duration to receive an event and if is no event received, the consumer will be invoked with a null event data."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int,java.time.Duration)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize, Duration maxWaitTime)"
  name: "processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize, Duration maxWaitTime)"
  nameWithType: "EventProcessorClientBuilder.processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize, Duration maxWaitTime)"
  summary: "The function that is called for each event received by this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>."
  parameters:
  - description: "The callback that's called when an event is received  or when the max wait duration has\n expired."
    name: "processEventBatch"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.models.EventBatchContext?alt=com.azure.messaging.eventhubs.models.EventBatchContext&text=EventBatchContext\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The maximum number of events that will be in the list when this callback is invoked."
    name: "maxBatchSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The max time duration to wait to receive a batch of events upto the max batch size before\n invoking this callback."
    name: "maxWaitTime"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder processEventBatch(Consumer<EventBatchContext> processEventBatch, int maxBatchSize, Duration maxWaitTime)"
  desc: "The function that is called for each event received by this <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>. The input contains the partition context and the event data. If the max wait time is set, the receive will wait for that duration to receive an event and if is no event received, the consumer will be invoked with a null event data.\n\n```java\nEventProcessorClient eventProcessorClient = new EventProcessorClientBuilder()\n     .consumerGroup(\"consumer-group\")\n     .checkpointStore(new SampleCheckpointStore())\n     .processEventBatch(eventBatchContext -> {\n         eventBatchContext.getEvents().forEach(eventData -> {\n             System.out.printf(\"Partition id = %s and sequence number of event = %s%n\",\n                 eventBatchContext.getPartitionContext().getPartitionId(),\n                 eventData.getSequenceNumber());\n         });\n     }, 50, Duration.ofSeconds(30))\n     .processError(errorContext -> {\n         System.out.printf(\"Error occurred in partition processor for partition %s, %s%n\",\n             errorContext.getPartitionContext().getPartitionId(),\n             errorContext.getThrowable());\n     })\n     .connectionString(connectionString)\n     .buildEventProcessorClient();\n```"
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionClose(java.util.function.Consumer<com.azure.messaging.eventhubs.models.CloseContext>)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionClose(Consumer<CloseContext> closePartition)"
  name: "processPartitionClose(Consumer<CloseContext> closePartition)"
  nameWithType: "EventProcessorClientBuilder.processPartitionClose(Consumer<CloseContext> closePartition)"
  summary: "The function that is called when a processing for a partition stops."
  parameters:
  - description: "The callback that's called after processing for a partition stops."
    name: "closePartition"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.models.CloseContext?alt=com.azure.messaging.eventhubs.models.CloseContext&text=CloseContext\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EventProcessorClientBuilder processPartitionClose(Consumer<CloseContext> closePartition)"
  desc: "The function that is called when a processing for a partition stops. The input contains the partition information along with the reason for stopping the event processing for this partition."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionInitialization(java.util.function.Consumer<com.azure.messaging.eventhubs.models.InitializationContext>)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.processPartitionInitialization(Consumer<InitializationContext> initializePartition)"
  name: "processPartitionInitialization(Consumer<InitializationContext> initializePartition)"
  nameWithType: "EventProcessorClientBuilder.processPartitionInitialization(Consumer<InitializationContext> initializePartition)"
  summary: "The function that is called before processing starts for a partition."
  parameters:
  - description: "The callback that's called before processing starts for a partition"
    name: "initializePartition"
    type: "<xref href=\"java.util.function.Consumer?alt=java.util.function.Consumer&text=Consumer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.models.InitializationContext?alt=com.azure.messaging.eventhubs.models.InitializationContext&text=InitializationContext\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EventProcessorClientBuilder processPartitionInitialization(Consumer<InitializationContext> initializePartition)"
  desc: "The function that is called before processing starts for a partition. The input contains the partition information along with a default starting position for processing events that will be used in the case of a checkpoint unavailable in <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointStore\"></xref>. Users can update this position if a different starting position is preferred."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.proxyOptions(com.azure.core.amqp.ProxyOptions)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.proxyOptions(ProxyOptions proxyOptions)"
  name: "proxyOptions(ProxyOptions proxyOptions)"
  nameWithType: "EventProcessorClientBuilder.proxyOptions(ProxyOptions proxyOptions)"
  summary: "Sets the proxy configuration to use for <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubAsyncClient\"></xref>."
  parameters:
  - description: "The proxy options to use."
    name: "proxyOptions"
    type: "<xref href=\"com.azure.core.amqp.ProxyOptions?alt=com.azure.core.amqp.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder proxyOptions(ProxyOptions proxyOptions)"
  desc: "Sets the proxy configuration to use for <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubAsyncClient\"></xref>. When a proxy is configured, <xref uid=\"com.azure.core.amqp.AmqpTransportType.AMQP_WEB_SOCKETS\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpTransportType#AMQP_WEB_SOCKETS\"></xref> must be used for the transport type."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.retry(com.azure.core.amqp.AmqpRetryOptions)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.retry(AmqpRetryOptions retryOptions)"
  name: "retry(AmqpRetryOptions retryOptions)"
  nameWithType: "EventProcessorClientBuilder.retry(AmqpRetryOptions retryOptions)"
  summary: "Sets the retry policy for <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubAsyncClient\"></xref>."
  deprecatedTag: "Replaced by <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.retryOptions(com.azure.core.amqp.AmqpRetryOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#retryOptions(AmqpRetryOptions)\"></xref>."
  parameters:
  - description: "The retry policy to use."
    name: "retryOptions"
    type: "<xref href=\"com.azure.core.amqp.AmqpRetryOptions?alt=com.azure.core.amqp.AmqpRetryOptions&text=AmqpRetryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic EventProcessorClientBuilder retry(AmqpRetryOptions retryOptions)"
  desc: "Sets the retry policy for <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubAsyncClient\"></xref>. If not specified, the default retry options are used."
  hasDeprecatedTag: true
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.retryOptions(com.azure.core.amqp.AmqpRetryOptions)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.retryOptions(AmqpRetryOptions retryOptions)"
  name: "retryOptions(AmqpRetryOptions retryOptions)"
  nameWithType: "EventProcessorClientBuilder.retryOptions(AmqpRetryOptions retryOptions)"
  summary: "Sets the retry policy for <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubAsyncClient\"></xref>."
  parameters:
  - description: "The retry options to use."
    name: "retryOptions"
    type: "<xref href=\"com.azure.core.amqp.AmqpRetryOptions?alt=com.azure.core.amqp.AmqpRetryOptions&text=AmqpRetryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder retryOptions(AmqpRetryOptions retryOptions)"
  desc: "Sets the retry policy for <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventHubAsyncClient\"></xref>. If not specified, the default retry options are used."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)"
  name: "trackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)"
  nameWithType: "EventProcessorClientBuilder.trackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)"
  summary: "Sets whether or not the event processor should request information on the last enqueued event on its associated partition, and track that information as events are received."
  parameters:
  - description: "<code>true</code> if the resulting events will keep track of the last enqueued\n information for that partition; <code>false</code> otherwise."
    name: "trackLastEnqueuedEventProperties"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder trackLastEnqueuedEventProperties(boolean trackLastEnqueuedEventProperties)"
  desc: "Sets whether or not the event processor should request information on the last enqueued event on its associated partition, and track that information as events are received.\n\nWhen information about the partition's last enqueued event is being tracked, each event received from the Event Hubs service will carry metadata about the partition that it otherwise would not. This results in a small amount of additional network bandwidth consumption that is generally a favorable trade-off when considered against periodically making requests for partition properties using the Event Hub client."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.transportType(com.azure.core.amqp.AmqpTransportType)"
  fullName: "com.azure.messaging.eventhubs.EventProcessorClientBuilder.transportType(AmqpTransportType transport)"
  name: "transportType(AmqpTransportType transport)"
  nameWithType: "EventProcessorClientBuilder.transportType(AmqpTransportType transport)"
  summary: "Sets the transport type by which all the communication with Azure Event Hubs occurs."
  parameters:
  - description: "The transport type to use."
    name: "transport"
    type: "<xref href=\"com.azure.core.amqp.AmqpTransportType?alt=com.azure.core.amqp.AmqpTransportType&text=AmqpTransportType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventProcessorClientBuilder transportType(AmqpTransportType transport)"
  desc: "Sets the transport type by which all the communication with Azure Event Hubs occurs. Default value is <xref uid=\"com.azure.core.amqp.AmqpTransportType.AMQP\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpTransportType#AMQP\"></xref>."
  returns:
    description: "The updated <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClientBuilder\"></xref> object."
    type: "<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>. Calling <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.buildEventProcessorClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#buildEventProcessorClient()\"></xref> constructs a new instance of <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>.\n\nTo create an instance of <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>, the **following fields are required**:\n\n *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.consumerGroup(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Consumer group name\"></xref>.\n *  <xref uid=\"com.azure.messaging.eventhubs.CheckpointStore\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CheckpointStore\"></xref> \\- An implementation of CheckpointStore that stores checkpoint and partition ownership information to enable load balancing and checkpointing processed events.\n *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEvent(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventContext>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"processEvent\"></xref> or <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.processEventBatch(java.util.function.Consumer<com.azure.messaging.eventhubs.models.EventBatchContext>,int,java.time.Duration)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"processEventBatch\"></xref> \\- A callback that processes events received from the Event Hub.\n *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.processError(java.util.function.Consumer<com.azure.messaging.eventhubs.models.ErrorContext>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"processError\"></xref> \\- A callback that handles errors that may occur while running the EventProcessorClient.\n *  Credentials to perform operations against Azure Event Hubs. They can be set by using one of the following methods:\n    \n     *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"connectionString(String)\"></xref> with a connection string to a specific Event Hub.\n     *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.connectionString(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"connectionString(String, String)\"></xref> with an Event Hub *namespace* connection string and the Event Hub name.\n     *  <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder.credential(java.lang.String,java.lang.String,com.azure.core.credential.TokenCredential)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"credential(String, String, TokenCredential)\"></xref> with the fully qualified namespace, Event Hub name, and a set of credentials authorized to use the Event Hub.\n\n**Creating an <xref uid=\"com.azure.messaging.eventhubs.EventProcessorClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EventProcessorClient\"></xref>**\n\n```java\npublic EventProcessorClient createEventProcessor() {\n     String connectionString = \"Endpoint={endpoint};SharedAccessKeyName={sharedAccessKeyName};\"\n         + \"SharedAccessKey={sharedAccessKey};EntityPath={eventHubName}\";\n\n     EventProcessorClient eventProcessorClient = new EventProcessorClientBuilder()\n         .consumerGroup(\"consumer-group\")\n         .checkpointStore(new SampleCheckpointStore())\n         .processEvent(eventContext -> {\n             System.out.printf(\"Partition id = %s and sequence number of event = %s%n\",\n                 eventContext.getPartitionContext().getPartitionId(),\n                 eventContext.getEventData().getSequenceNumber());\n         })\n         .processError(errorContext -> {\n             System.out.printf(\"Error occurred in partition processor for partition %s, %s%n\",\n                 errorContext.getPartitionContext().getPartitionId(),\n                 errorContext.getThrowable());\n         })\n         .connectionString(connectionString)\n         .buildEventProcessorClient();\n     return eventProcessorClient;\n }\n```"
implements:
- "<xref href=\"com.azure.core.amqp.client.traits.AmqpTrait?alt=com.azure.core.amqp.client.traits.AmqpTrait&text=AmqpTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.AzureNamedKeyCredentialTrait?alt=com.azure.core.client.traits.AzureNamedKeyCredentialTrait&text=AzureNamedKeyCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.AzureSasCredentialTrait?alt=com.azure.core.client.traits.AzureSasCredentialTrait&text=AzureSasCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.ConfigurationTrait?alt=com.azure.core.client.traits.ConfigurationTrait&text=ConfigurationTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.ConnectionStringTrait?alt=com.azure.core.client.traits.ConnectionStringTrait&text=ConnectionStringTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.core.client.traits.TokenCredentialTrait?alt=com.azure.core.client.traits.TokenCredentialTrait&text=TokenCredentialTrait\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.messaging.eventhubs.EventProcessorClientBuilder?alt=com.azure.messaging.eventhubs.EventProcessorClientBuilder&text=EventProcessorClientBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.messaging.eventhubs"
artifact: com.azure:azure-messaging-eventhubs:5.13.0-beta.1
