### YamlMime:JavaType
uid: "com.azure.core.experimental.http.DynamicRequest"
fullName: "com.azure.core.experimental.http.DynamicRequest"
name: "DynamicRequest"
nameWithType: "DynamicRequest"
summary: "This class facilitates constructing and sending a HTTP request."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DynamicRequest**"
constructors:
- uid: "com.azure.core.experimental.http.DynamicRequest.DynamicRequest(com.azure.core.util.serializer.ObjectSerializer,com.azure.core.http.HttpPipeline)"
  fullName: "com.azure.core.experimental.http.DynamicRequest.DynamicRequest(ObjectSerializer objectSerializer, HttpPipeline httpPipeline)"
  name: "DynamicRequest(ObjectSerializer objectSerializer, HttpPipeline httpPipeline)"
  nameWithType: "DynamicRequest.DynamicRequest(ObjectSerializer objectSerializer, HttpPipeline httpPipeline)"
  summary: "Creates an instance of the Dynamic request."
  parameters:
  - description: "a serializer for serializing and deserializing payloads"
    name: "objectSerializer"
    type: "<xref href=\"com.azure.core.util.serializer.ObjectSerializer?alt=com.azure.core.util.serializer.ObjectSerializer&text=ObjectSerializer\" data-throw-if-not-resolved=\"False\" />"
  - description: "the pipeline to send the actual HTTP request"
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest(ObjectSerializer objectSerializer, HttpPipeline httpPipeline)"
  desc: "Creates an instance of the Dynamic request. The `objectSerializer` provided to this constructor will be used to serialize the request and the `httpPipeline` configured with a series of <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Http pipeline policies\"></xref> will be applied before sending the request."
methods:
- uid: "com.azure.core.experimental.http.DynamicRequest.addHeader(com.azure.core.http.HttpHeader)"
  fullName: "com.azure.core.experimental.http.DynamicRequest.addHeader(HttpHeader httpHeader)"
  name: "addHeader(HttpHeader httpHeader)"
  nameWithType: "DynamicRequest.addHeader(HttpHeader httpHeader)"
  summary: "Adds a header to the HTTP request"
  parameters:
  - description: "the header to add"
    name: "httpHeader"
    type: "<xref href=\"com.azure.core.http.HttpHeader?alt=com.azure.core.http.HttpHeader&text=HttpHeader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest addHeader(HttpHeader httpHeader)"
  desc: "Adds a header to the HTTP request"
  returns:
    description: "the modified DynamicRequest object"
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.addHeader(com.azure.core.http.HttpHeaderName,java.lang.String)"
  fullName: "com.azure.core.experimental.http.DynamicRequest.addHeader(HttpHeaderName header, String value)"
  name: "addHeader(HttpHeaderName header, String value)"
  nameWithType: "DynamicRequest.addHeader(HttpHeaderName header, String value)"
  summary: "Adds a header to the HTTP request."
  parameters:
  - description: "the header key"
    name: "header"
    type: "<xref href=\"com.azure.core.http.HttpHeaderName?alt=com.azure.core.http.HttpHeaderName&text=HttpHeaderName\" data-throw-if-not-resolved=\"False\" />"
  - description: "the header value"
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DynamicRequest addHeader(HttpHeaderName header, String value)"
  desc: "Adds a header to the HTTP request."
  returns:
    description: "the modified DynamicRequest object"
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.addHeader(java.lang.String,java.lang.String)"
  fullName: "com.azure.core.experimental.http.DynamicRequest.addHeader(String header, String value)"
  name: "addHeader(String header, String value)"
  nameWithType: "DynamicRequest.addHeader(String header, String value)"
  summary: "Adds a header to the HTTP request."
  deprecatedTag: "Use <xref uid=\"com.azure.core.experimental.http.DynamicRequest.addHeader(com.azure.core.http.HttpHeaderName,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#addHeader(HttpHeaderName, String)\"></xref> as it provides better performance."
  parameters:
  - description: "the header key"
    name: "header"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the header value"
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Deprecated.html\">@Deprecated</a></br>public DynamicRequest addHeader(String header, String value)"
  desc: "Adds a header to the HTTP request."
  hasDeprecatedTag: true
  returns:
    description: "the modified DynamicRequest object"
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.addQueryParam(java.lang.String,java.lang.String)"
  fullName: "com.azure.core.experimental.http.DynamicRequest.addQueryParam(String parameterName, String value)"
  name: "addQueryParam(String parameterName, String value)"
  nameWithType: "DynamicRequest.addQueryParam(String parameterName, String value)"
  summary: "Adds a query parameter to the request URL."
  parameters:
  - description: "the name of the query parameter"
    name: "parameterName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the value of the query parameter"
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DynamicRequest addQueryParam(String parameterName, String value)"
  desc: "Adds a query parameter to the request URL."
  returns:
    description: "the modified DynamicRequest object"
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.getHttpPipeline()"
  fullName: "com.azure.core.experimental.http.DynamicRequest.getHttpPipeline()"
  name: "getHttpPipeline()"
  nameWithType: "DynamicRequest.getHttpPipeline()"
  summary: "Returns the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> used for sending this request."
  syntax: "public HttpPipeline getHttpPipeline()"
  desc: "Returns the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> used for sending this request."
  returns:
    description: "the pipeline to sending HTTP requests used by this DynamicRequest"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.getObjectSerializer()"
  fullName: "com.azure.core.experimental.http.DynamicRequest.getObjectSerializer()"
  name: "getObjectSerializer()"
  nameWithType: "DynamicRequest.getObjectSerializer()"
  summary: "Returns the <xref uid=\"com.azure.core.util.serializer.ObjectSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectSerializer\"></xref> used for serializing this request."
  syntax: "public ObjectSerializer getObjectSerializer()"
  desc: "Returns the <xref uid=\"com.azure.core.util.serializer.ObjectSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectSerializer\"></xref> used for serializing this request."
  returns:
    description: "the underlying serializer used by this DynamicRequest"
    type: "<xref href=\"com.azure.core.util.serializer.ObjectSerializer?alt=com.azure.core.util.serializer.ObjectSerializer&text=ObjectSerializer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.send()"
  fullName: "com.azure.core.experimental.http.DynamicRequest.send()"
  name: "send()"
  nameWithType: "DynamicRequest.send()"
  summary: "Sends the request through the HTTP pipeline synchronously."
  syntax: "public DynamicResponse send()"
  desc: "Sends the request through the HTTP pipeline synchronously."
  returns:
    description: "the dynamic response received from the API"
    type: "<xref href=\"com.azure.core.experimental.http.DynamicResponse?alt=com.azure.core.experimental.http.DynamicResponse&text=DynamicResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.send(com.azure.core.util.Context)"
  fullName: "com.azure.core.experimental.http.DynamicRequest.send(Context context)"
  name: "send(Context context)"
  nameWithType: "DynamicRequest.send(Context context)"
  summary: "Sends the request through the HTTP pipeline synchronously."
  parameters:
  - description: "the context to send with the request"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicResponse send(Context context)"
  desc: "Sends the request through the HTTP pipeline synchronously."
  returns:
    description: "the dynamic response received from the API"
    type: "<xref href=\"com.azure.core.experimental.http.DynamicResponse?alt=com.azure.core.experimental.http.DynamicResponse&text=DynamicResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.sendAsync()"
  fullName: "com.azure.core.experimental.http.DynamicRequest.sendAsync()"
  name: "sendAsync()"
  nameWithType: "DynamicRequest.sendAsync()"
  summary: "Sends the request through the HTTP pipeline asynchronously."
  syntax: "public Mono<DynamicResponse> sendAsync()"
  desc: "Sends the request through the HTTP pipeline asynchronously."
  returns:
    description: "the reactor publisher for the dynamic response to subscribe to"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.experimental.http.DynamicResponse?alt=com.azure.core.experimental.http.DynamicResponse&text=DynamicResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.experimental.http.DynamicRequest.setBody(java.lang.Object)"
  fullName: "com.azure.core.experimental.http.DynamicRequest.setBody(Object body)"
  name: "setBody(Object body)"
  nameWithType: "DynamicRequest.setBody(Object body)"
  summary: "Sets the body on the HTTP request."
  parameters:
  - description: "the body object that will be serialized"
    name: "body"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public DynamicRequest setBody(Object body)"
  desc: "Sets the body on the HTTP request. The object is serialized using <xref uid=\"com.azure.core.util.serializer.ObjectSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectSerializer\"></xref> provided in the constructor of this request."
  returns:
    description: "the modified DynamicRequest object"
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.setBody(java.lang.String)"
  fullName: "com.azure.core.experimental.http.DynamicRequest.setBody(String body)"
  name: "setBody(String body)"
  nameWithType: "DynamicRequest.setBody(String body)"
  summary: "Sets the string representation of the request body."
  parameters:
  - description: "the serialized body content"
    name: "body"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DynamicRequest setBody(String body)"
  desc: "Sets the string representation of the request body. The <xref uid=\"com.azure.core.util.serializer.ObjectSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectSerializer\"></xref> is not used if body is represented as string."
  returns:
    description: "the modified DynamicRequest object"
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.setHeaders(com.azure.core.http.HttpHeaders)"
  fullName: "com.azure.core.experimental.http.DynamicRequest.setHeaders(HttpHeaders httpHeaders)"
  name: "setHeaders(HttpHeaders httpHeaders)"
  nameWithType: "DynamicRequest.setHeaders(HttpHeaders httpHeaders)"
  summary: "Sets the headers on the HTTP request."
  parameters:
  - description: "the new headers to replace all existing headers"
    name: "httpHeaders"
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest setHeaders(HttpHeaders httpHeaders)"
  desc: "Sets the headers on the HTTP request. This overwrites all existing HTTP headers for this request."
  returns:
    description: "the modified DynamicRequest object"
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.setHttpMethod(com.azure.core.http.HttpMethod)"
  fullName: "com.azure.core.experimental.http.DynamicRequest.setHttpMethod(HttpMethod httpMethod)"
  name: "setHttpMethod(HttpMethod httpMethod)"
  nameWithType: "DynamicRequest.setHttpMethod(HttpMethod httpMethod)"
  summary: "Sets the HTTP method for this request."
  parameters:
  - description: "the HTTP method for the request"
    name: "httpMethod"
    type: "<xref href=\"com.azure.core.http.HttpMethod?alt=com.azure.core.http.HttpMethod&text=HttpMethod\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DynamicRequest setHttpMethod(HttpMethod httpMethod)"
  desc: "Sets the HTTP method for this request."
  returns:
    description: "the modified DynamicRequest object"
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.setPathParam(java.lang.String,java.lang.String)"
  fullName: "com.azure.core.experimental.http.DynamicRequest.setPathParam(String parameterName, String value)"
  name: "setPathParam(String parameterName, String value)"
  nameWithType: "DynamicRequest.setPathParam(String parameterName, String value)"
  summary: "Sets the value for a specific path parameter in the URL."
  parameters:
  - description: "the path parameter's name in the curly braces"
    name: "parameterName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the String value to replace the path parameter"
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DynamicRequest setPathParam(String parameterName, String value)"
  desc: "Sets the value for a specific path parameter in the URL. The path parameter must be wrapped in a pair of curly braces, like \"\\{paramName\\}\"."
  returns:
    description: "the modified DynamicRequest object"
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.http.DynamicRequest.setUrl(java.lang.String)"
  fullName: "com.azure.core.experimental.http.DynamicRequest.setUrl(String url)"
  name: "setUrl(String url)"
  nameWithType: "DynamicRequest.setUrl(String url)"
  summary: "Sets the URL for the HTTP request."
  parameters:
  - description: "the URL for the request"
    name: "url"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DynamicRequest setUrl(String url)"
  desc: "Sets the URL for the HTTP request."
  returns:
    description: "the modified DynamicRequest object"
    type: "<xref href=\"com.azure.core.experimental.http.DynamicRequest?alt=com.azure.core.experimental.http.DynamicRequest&text=DynamicRequest\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This class facilitates constructing and sending a HTTP request. <xref uid=\"com.azure.core.experimental.http.DynamicRequest\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicRequest\"></xref> can be used to configure the endpoint to which the request is sent, the request headers, path params, query params and the request body.\n\nAn instance of <xref uid=\"com.azure.core.experimental.http.DynamicRequest\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicRequest\"></xref> can be created by either directly calling the constructor with an <xref uid=\"com.azure.core.util.serializer.ObjectSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ObjectSerializer\"></xref> and <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> or obtained from a service client that preconfigures known components of the request like URL, path params etc.\n\nTo demonstrate how this class can be used to construct a request, let's use a Pet Store service as an example. The list of APIs available on this service are [documented in the swagger definition.][]\n\n**Creating an instance of DynamicRequest using the constructor**\n\n```java\nObjectSerializer serializer = JsonSerializerProviders.createInstance(true);\n HttpPipeline pipeline = new HttpPipelineBuilder().build();\n DynamicRequest dynamicRequest = new DynamicRequest(serializer, pipeline);\n```\n\nAn Azure service client may provide methods that are specific to the service which returns an instance <xref uid=\"com.azure.core.experimental.http.DynamicRequest\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DynamicRequest\"></xref> that comes preconfigured with some request components like the endpoint, required path params, headers etc.\n\n**Configuring the request with a path param and making a HTTP GET request**\n\nContinuing with the pet store example, getting information about a pet requires making a [HTTP GET call to the pet service][] and setting the pet id in path param as shown in the sample below.\n\n```java\nDynamicResponse response = dynamicRequest\n     .setUrl(\"https://petstore.example.com/pet/{petId}\") // may already be set if request is created from a client\n     .setPathParam(\"petId\", \"2343245\")\n     .send(); // makes the service call\n```\n\n**Configuring the request with JSON body and making a HTTP POST request**\n\nTo [add a new pet to the pet store][], a HTTP POST call should be made to the service with the details of the pet that is to be added. The details of the pet are included as the request body in JSON format. The JSON structure for the request is defined as follows:\n\n```java\n{\n   \"id\": 0,\n   \"category\": {\n     \"id\": 0,\n     \"name\": \"string\"\n   },\n   \"name\": \"doggie\",\n   \"photoUrls\": [\n     \"string\"\n   ],\n   \"tags\": [\n     {\n       \"id\": 0,\n       \"name\": \"string\"\n     }\n   ],\n   \"status\": \"available\"\n }\n```\n\nTo create a concrete request, Json builder provided in javax package is used here for demonstration. However, any other Json building library can be used to achieve similar results.\n\n```java\nJsonArray photoUrls = Json.createArrayBuilder()\n     .add(\"https://imgur.com/pet1\")\n     .add(\"https://imgur.com/pet2\")\n     .build();\n\n JsonArray tags = Json.createArrayBuilder()\n     .add(Json.createObjectBuilder()\n         .add(\"id\", 0)\n         .add(\"name\", \"Labrador\")\n         .build())\n     .add(Json.createObjectBuilder()\n         .add(\"id\", 1)\n         .add(\"name\", \"2021\")\n         .build())\n     .build();\n\n JsonObject requestBody = Json.createObjectBuilder()\n     .add(\"id\", 0)\n     .add(\"name\", \"foo\")\n     .add(\"status\", \"available\")\n     .add(\"category\", Json.createObjectBuilder().add(\"id\", 0).add(\"name\", \"dog\"))\n     .add(\"photoUrls\", photoUrls)\n     .add(\"tags\", tags)\n     .build();\n\n String requestBodyStr = requestBody.toString();\n```\n\nNow, this string representation of the JSON request can be set as body of DynamicRequest\n\n```java\nDynamicResponse response = dynamicRequest\n     .setUrl(\"https://petstore.example.com/pet\") // may already be set if request is created from a client\n     .addHeader(HttpHeaderName.CONTENT_TYPE, \"application/json\")\n     .setBody(requestBodyStr)\n     .send(); // makes the service call\n```\n\n\n[documented in the swagger definition.]: https://petstore.swagger.io/#/pet\n[HTTP GET call to the pet service]: https://petstore.swagger.io/#/pet/getPetById\n[add a new pet to the pet store]: https://petstore.swagger.io/#/pet/addPet"
metadata: {}
package: "com.azure.core.experimental.http"
artifact: com.azure:azure-core-experimental:1.0.0-beta.46
