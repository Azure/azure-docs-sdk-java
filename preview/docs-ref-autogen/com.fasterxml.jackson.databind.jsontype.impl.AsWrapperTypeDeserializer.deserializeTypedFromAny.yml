### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer.deserializeTypedFromAny*"
fullName: "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer.deserializeTypedFromAny"
name: "deserializeTypedFromAny"
nameWithType: "AsWrapperTypeDeserializer.deserializeTypedFromAny"
members:
- uid: "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
  fullName: "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer.deserializeTypedFromAny(JsonParser jp, DeserializationContext ctxt)"
  name: "deserializeTypedFromAny(JsonParser jp, DeserializationContext ctxt)"
  nameWithType: "AsWrapperTypeDeserializer.deserializeTypedFromAny(JsonParser jp, DeserializationContext ctxt)"
  summary: "Method called to let this type deserializer handle deserialization of \"typed\" object, when value itself may have been serialized using any kind of JSON value (Array, Object, scalar). Should only be called if JSON serialization is polymorphic (not Java type); for example when using JSON node representation, or \"untyped\" Java object (which may be Map, Collection, wrapper/primitive etc)."
  overridden: "com.fasterxml.jackson.databind.jsontype.TypeDeserializer.deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)"
  parameters:
  - name: "jp"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonParser?alt=com.fasterxml.jackson.core.JsonParser&text=JsonParser\" data-throw-if-not-resolved=\"False\" />"
  - name: "ctxt"
    type: "<xref href=\"com.fasterxml.jackson.databind.DeserializationContext?alt=com.fasterxml.jackson.databind.DeserializationContext&text=DeserializationContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Object deserializeTypedFromAny(JsonParser jp, DeserializationContext ctxt)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.jsontype.impl"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
