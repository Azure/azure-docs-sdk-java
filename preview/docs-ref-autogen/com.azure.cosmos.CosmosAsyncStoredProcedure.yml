### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure
  id: CosmosAsyncStoredProcedure
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos
  children:
  - com.azure.cosmos.CosmosAsyncStoredProcedure.delete()
  - com.azure.cosmos.CosmosAsyncStoredProcedure.delete(com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  - com.azure.cosmos.CosmosAsyncStoredProcedure.execute(java.util.List<java.lang.Object>,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  - com.azure.cosmos.CosmosAsyncStoredProcedure.getId()
  - com.azure.cosmos.CosmosAsyncStoredProcedure.read()
  - com.azure.cosmos.CosmosAsyncStoredProcedure.read(com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  - com.azure.cosmos.CosmosAsyncStoredProcedure.replace(com.azure.cosmos.models.CosmosStoredProcedureProperties)
  - com.azure.cosmos.CosmosAsyncStoredProcedure.replace(com.azure.cosmos.models.CosmosStoredProcedureProperties,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  langs:
  - java
  name: CosmosAsyncStoredProcedure
  nameWithType: CosmosAsyncStoredProcedure
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure
  type: Class
  package: com.azure.cosmos
  summary: The type Cosmos async stored procedure.
  syntax:
    content: public class CosmosAsyncStoredProcedure
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.CosmosAsyncStoredProcedure(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)
  id: CosmosAsyncStoredProcedure(java.lang.String,com.azure.cosmos.CosmosAsyncContainer)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosAsyncStoredProcedure
  langs:
  - java
  name: CosmosAsyncStoredProcedure(String id, CosmosAsyncContainer cosmosContainer)
  nameWithType: CosmosAsyncStoredProcedure.CosmosAsyncStoredProcedure(String id, CosmosAsyncContainer cosmosContainer)
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.CosmosAsyncStoredProcedure(String id, CosmosAsyncContainer cosmosContainer)
  overload: com.azure.cosmos.CosmosAsyncStoredProcedure.CosmosAsyncStoredProcedure*
  type: Constructor
  package: com.azure.cosmos
  syntax:
    content: " CosmosAsyncStoredProcedure(String id, CosmosAsyncContainer cosmosContainer)"
    parameters:
    - id: id
      type: java.lang.String
    - id: cosmosContainer
      type: com.azure.cosmos.CosmosAsyncContainer
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.delete()
  id: delete()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosAsyncStoredProcedure
  langs:
  - java
  name: delete()
  nameWithType: CosmosAsyncStoredProcedure.delete()
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.delete()
  overload: com.azure.cosmos.CosmosAsyncStoredProcedure.delete*
  type: Method
  package: com.azure.cosmos
  summary: >-
    Deletes a stored procedure


    After subscription the operation will be performed. The <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> upon successful completion will contain a single resource response for the deleted stored procedure. In case of failure the <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> will error.
  syntax:
    content: public Mono<CosmosStoredProcedureResponse> delete()
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosStoredProcedureResponse>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the single resource response for the deleted stored procedure or an error.
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.delete(com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  id: delete(com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosAsyncStoredProcedure
  langs:
  - java
  name: delete(CosmosStoredProcedureRequestOptions options)
  nameWithType: CosmosAsyncStoredProcedure.delete(CosmosStoredProcedureRequestOptions options)
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.delete(CosmosStoredProcedureRequestOptions options)
  overload: com.azure.cosmos.CosmosAsyncStoredProcedure.delete*
  type: Method
  package: com.azure.cosmos
  summary: >-
    Deletes a stored procedure


    After subscription the operation will be performed. The <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> upon successful completion will contain a single resource response for the deleted stored procedure. In case of failure the <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> will error.
  syntax:
    content: public Mono<CosmosStoredProcedureResponse> delete(CosmosStoredProcedureRequestOptions options)
    parameters:
    - id: options
      type: com.azure.cosmos.models.CosmosStoredProcedureRequestOptions
      description: the request options.
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosStoredProcedureResponse>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the single resource response for the deleted stored procedure or an error.
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.execute(java.util.List<java.lang.Object>,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  id: execute(java.util.List<java.lang.Object>,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosAsyncStoredProcedure
  langs:
  - java
  name: execute(List<Object> procedureParams, CosmosStoredProcedureRequestOptions options)
  nameWithType: CosmosAsyncStoredProcedure.execute(List<Object> procedureParams, CosmosStoredProcedureRequestOptions options)
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.execute(List<Object> procedureParams, CosmosStoredProcedureRequestOptions options)
  overload: com.azure.cosmos.CosmosAsyncStoredProcedure.execute*
  type: Method
  package: com.azure.cosmos
  summary: >-
    Executes a stored procedure


    After subscription the operation will be performed. The <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> upon successful completion will contain a single resource response with the stored procedure response. In case of failure the <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> will error.
  syntax:
    content: public Mono<CosmosStoredProcedureResponse> execute(List<Object> procedureParams, CosmosStoredProcedureRequestOptions options)
    parameters:
    - id: procedureParams
      type: java.util.List<java.lang.Object>
      description: the list of procedure parameter values.
    - id: options
      type: com.azure.cosmos.models.CosmosStoredProcedureRequestOptions
      description: the request options.
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosStoredProcedureResponse>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the single resource response with the stored procedure response or an error.
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.getId()
  id: getId()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosAsyncStoredProcedure
  langs:
  - java
  name: getId()
  nameWithType: CosmosAsyncStoredProcedure.getId()
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.getId()
  overload: com.azure.cosmos.CosmosAsyncStoredProcedure.getId*
  type: Method
  package: com.azure.cosmos
  summary: Get the id of the <xref uid="com.azure.cosmos.CosmosAsyncStoredProcedure" data-throw-if-not-resolved="false">CosmosAsyncStoredProcedure</xref>
  syntax:
    content: public String getId()
    return:
      type: java.lang.String
      description: the id of the <xref uid="com.azure.cosmos.CosmosAsyncStoredProcedure" data-throw-if-not-resolved="false">CosmosAsyncStoredProcedure</xref>
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.read()
  id: read()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosAsyncStoredProcedure
  langs:
  - java
  name: read()
  nameWithType: CosmosAsyncStoredProcedure.read()
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.read()
  overload: com.azure.cosmos.CosmosAsyncStoredProcedure.read*
  type: Method
  package: com.azure.cosmos
  summary: >-
    Read a stored procedure


    After subscription the operation will be performed. The <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> upon successful completion will contain a single resource response with the read stored procedure. In case of failure the <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> will error.
  syntax:
    content: public Mono<CosmosStoredProcedureResponse> read()
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosStoredProcedureResponse>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the single resource response with the read stored procedure or an error.
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.read(com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  id: read(com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosAsyncStoredProcedure
  langs:
  - java
  name: read(CosmosStoredProcedureRequestOptions options)
  nameWithType: CosmosAsyncStoredProcedure.read(CosmosStoredProcedureRequestOptions options)
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.read(CosmosStoredProcedureRequestOptions options)
  overload: com.azure.cosmos.CosmosAsyncStoredProcedure.read*
  type: Method
  package: com.azure.cosmos
  summary: >-
    Read a stored procedure


    After subscription the operation will be performed. The <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> upon successful completion will contain a single resource response with the read stored procedure. In case of failure the <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> will error.
  syntax:
    content: public Mono<CosmosStoredProcedureResponse> read(CosmosStoredProcedureRequestOptions options)
    parameters:
    - id: options
      type: com.azure.cosmos.models.CosmosStoredProcedureRequestOptions
      description: the request options.
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosStoredProcedureResponse>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the single resource response with the read stored procedure or an error.
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.replace(com.azure.cosmos.models.CosmosStoredProcedureProperties)
  id: replace(com.azure.cosmos.models.CosmosStoredProcedureProperties)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosAsyncStoredProcedure
  langs:
  - java
  name: replace(CosmosStoredProcedureProperties storedProcedureProperties)
  nameWithType: CosmosAsyncStoredProcedure.replace(CosmosStoredProcedureProperties storedProcedureProperties)
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.replace(CosmosStoredProcedureProperties storedProcedureProperties)
  overload: com.azure.cosmos.CosmosAsyncStoredProcedure.replace*
  type: Method
  package: com.azure.cosmos
  summary: >-
    Replaces a stored procedure.


    After subscription the operation will be performed. The <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> upon successful completion will contain a single resource response with the replaced stored procedure. In case of failure the <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> will error.
  syntax:
    content: public Mono<CosmosStoredProcedureResponse> replace(CosmosStoredProcedureProperties storedProcedureProperties)
    parameters:
    - id: storedProcedureProperties
      type: com.azure.cosmos.models.CosmosStoredProcedureProperties
      description: the stored procedure properties
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosStoredProcedureResponse>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the single resource response with the replaced stored procedure or an error.
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.replace(com.azure.cosmos.models.CosmosStoredProcedureProperties,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  id: replace(com.azure.cosmos.models.CosmosStoredProcedureProperties,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.CosmosAsyncStoredProcedure
  langs:
  - java
  name: replace(CosmosStoredProcedureProperties storedProcedureProperties, CosmosStoredProcedureRequestOptions options)
  nameWithType: CosmosAsyncStoredProcedure.replace(CosmosStoredProcedureProperties storedProcedureProperties, CosmosStoredProcedureRequestOptions options)
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.replace(CosmosStoredProcedureProperties storedProcedureProperties, CosmosStoredProcedureRequestOptions options)
  overload: com.azure.cosmos.CosmosAsyncStoredProcedure.replace*
  type: Method
  package: com.azure.cosmos
  summary: >-
    Replaces a stored procedure.


    After subscription the operation will be performed. The <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> upon successful completion will contain a single resource response with the replaced stored procedure. In case of failure the <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> will error.
  syntax:
    content: public Mono<CosmosStoredProcedureResponse> replace(CosmosStoredProcedureProperties storedProcedureProperties, CosmosStoredProcedureRequestOptions options)
    parameters:
    - id: storedProcedureProperties
      type: com.azure.cosmos.models.CosmosStoredProcedureProperties
      description: the stored procedure properties.
    - id: options
      type: com.azure.cosmos.models.CosmosStoredProcedureRequestOptions
      description: the request options.
    return:
      type: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosStoredProcedureResponse>
      description: an <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> containing the single resource response with the replaced stored procedure or an error.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.CosmosAsyncContainer
  name: CosmosAsyncContainer
  nameWithType: CosmosAsyncContainer
  fullName: com.azure.cosmos.CosmosAsyncContainer
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.CosmosAsyncStoredProcedure*
  name: CosmosAsyncStoredProcedure
  nameWithType: CosmosAsyncStoredProcedure.CosmosAsyncStoredProcedure
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.CosmosAsyncStoredProcedure
  package: com.azure.cosmos
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.getId*
  name: getId
  nameWithType: CosmosAsyncStoredProcedure.getId
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.getId
  package: com.azure.cosmos
- uid: reactor.core.publisher.Mono<com.azure.cosmos.models.CosmosStoredProcedureResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CosmosStoredProcedureResponse
    name: CosmosStoredProcedureResponse
    fullName: com.azure.cosmos.models.CosmosStoredProcedureResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.read*
  name: read
  nameWithType: CosmosAsyncStoredProcedure.read
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.read
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.CosmosStoredProcedureRequestOptions
  name: CosmosStoredProcedureRequestOptions
  nameWithType: CosmosStoredProcedureRequestOptions
  fullName: com.azure.cosmos.models.CosmosStoredProcedureRequestOptions
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.delete*
  name: delete
  nameWithType: CosmosAsyncStoredProcedure.delete
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.delete
  package: com.azure.cosmos
- uid: java.util.List<java.lang.Object>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.execute*
  name: execute
  nameWithType: CosmosAsyncStoredProcedure.execute
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.execute
  package: com.azure.cosmos
- uid: com.azure.cosmos.models.CosmosStoredProcedureProperties
  name: CosmosStoredProcedureProperties
  nameWithType: CosmosStoredProcedureProperties
  fullName: com.azure.cosmos.models.CosmosStoredProcedureProperties
- uid: com.azure.cosmos.CosmosAsyncStoredProcedure.replace*
  name: replace
  nameWithType: CosmosAsyncStoredProcedure.replace
  fullName: com.azure.cosmos.CosmosAsyncStoredProcedure.replace
  package: com.azure.cosmos
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.cosmos.models.CosmosStoredProcedureResponse
  name: CosmosStoredProcedureResponse
  nameWithType: CosmosStoredProcedureResponse
  fullName: com.azure.cosmos.models.CosmosStoredProcedureResponse
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.Object
  name: Object
  nameWithType: Object
  fullName: java.lang.Object
