### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties"
name: "ExecutePowerQueryActivityTypeProperties"
nameWithType: "ExecutePowerQueryActivityTypeProperties"
summary: "Execute power query data flow activity properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.compute()"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.continueOnError()"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.dataFlow()"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.integrationRuntime()"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.runConcurrently()"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.sourceStagingConcurrency()"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.staging()"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.traceLevel()"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.validate()"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withCompute(com.azure.resourcemanager.datafactory.models.ExecuteDataFlowActivityTypePropertiesCompute)"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withContinueOnError(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withDataFlow(com.azure.resourcemanager.datafactory.models.DataFlowReference)"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withIntegrationRuntime(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withRunConcurrently(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withSourceStagingConcurrency(java.lang.Object)"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withStaging(com.azure.resourcemanager.datafactory.models.DataFlowStagingInfo)"
- "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withTraceLevel(java.lang.Object)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ExecutePowerQueryActivityTypeProperties extends ExecuteDataFlowActivityTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.ExecutePowerQueryActivityTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.ExecutePowerQueryActivityTypeProperties()"
  name: "ExecutePowerQueryActivityTypeProperties()"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.ExecutePowerQueryActivityTypeProperties()"
  syntax: "public ExecutePowerQueryActivityTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.queries()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.queries()"
  name: "queries()"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.queries()"
  summary: "Get the queries property: List of mapping for Power Query mashup query to sink dataset(s)."
  syntax: "public List<PowerQuerySinkMapping> queries()"
  desc: "Get the queries property: List of mapping for Power Query mashup query to sink dataset(s)."
  returns:
    description: "the queries value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping&text=PowerQuerySinkMapping\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.sinks()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.sinks()"
  name: "sinks()"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.sinks()"
  summary: "Get the sinks property: (Deprecated."
  syntax: "public Map<String,PowerQuerySink> sinks()"
  desc: "Get the sinks property: (Deprecated. Please use Queries). List of Power Query activity sinks mapped to a queryName."
  returns:
    description: "the sinks value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySink?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySink&text=PowerQuerySink\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.validate()"
  name: "validate()"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withCompute(com.azure.resourcemanager.datafactory.models.ExecuteDataFlowActivityTypePropertiesCompute)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withCompute(ExecuteDataFlowActivityTypePropertiesCompute compute)"
  name: "withCompute(ExecuteDataFlowActivityTypePropertiesCompute compute)"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.withCompute(ExecuteDataFlowActivityTypePropertiesCompute compute)"
  summary: "Set the compute property: Compute properties for data flow activity."
  overridden: "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withCompute(com.azure.resourcemanager.datafactory.models.ExecuteDataFlowActivityTypePropertiesCompute)"
  parameters:
  - name: "compute"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.ExecuteDataFlowActivityTypePropertiesCompute?alt=com.azure.resourcemanager.datafactory.models.ExecuteDataFlowActivityTypePropertiesCompute&text=ExecuteDataFlowActivityTypePropertiesCompute\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExecutePowerQueryActivityTypeProperties withCompute(ExecuteDataFlowActivityTypePropertiesCompute compute)"
  desc: "Set the compute property: Compute properties for data flow activity."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties&text=ExecutePowerQueryActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withContinueOnError(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withContinueOnError(Object continueOnError)"
  name: "withContinueOnError(Object continueOnError)"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.withContinueOnError(Object continueOnError)"
  summary: "Set the continue<wbr>OnError property: Continue on error setting used for data flow execution."
  overridden: "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withContinueOnError(java.lang.Object)"
  parameters:
  - name: "continueOnError"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExecutePowerQueryActivityTypeProperties withContinueOnError(Object continueOnError)"
  desc: "Set the continueOnError property: Continue on error setting used for data flow execution. Enables processing to continue if a sink fails. Type: boolean (or Expression with resultType boolean)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties&text=ExecutePowerQueryActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withDataFlow(com.azure.resourcemanager.datafactory.models.DataFlowReference)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withDataFlow(DataFlowReference dataFlow)"
  name: "withDataFlow(DataFlowReference dataFlow)"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.withDataFlow(DataFlowReference dataFlow)"
  summary: "Set the data<wbr>Flow property: Data flow reference."
  overridden: "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withDataFlow(com.azure.resourcemanager.datafactory.models.DataFlowReference)"
  parameters:
  - name: "dataFlow"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowReference?alt=com.azure.resourcemanager.datafactory.models.DataFlowReference&text=DataFlowReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExecutePowerQueryActivityTypeProperties withDataFlow(DataFlowReference dataFlow)"
  desc: "Set the dataFlow property: Data flow reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties&text=ExecutePowerQueryActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withIntegrationRuntime(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withIntegrationRuntime(IntegrationRuntimeReference integrationRuntime)"
  name: "withIntegrationRuntime(IntegrationRuntimeReference integrationRuntime)"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.withIntegrationRuntime(IntegrationRuntimeReference integrationRuntime)"
  summary: "Set the integration<wbr>Runtime property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withIntegrationRuntime(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "integrationRuntime"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExecutePowerQueryActivityTypeProperties withIntegrationRuntime(IntegrationRuntimeReference integrationRuntime)"
  desc: "Set the integrationRuntime property: The integration runtime reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties&text=ExecutePowerQueryActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withQueries(java.util.List<com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withQueries(List<PowerQuerySinkMapping> queries)"
  name: "withQueries(List<PowerQuerySinkMapping> queries)"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.withQueries(List<PowerQuerySinkMapping> queries)"
  summary: "Set the queries property: List of mapping for Power Query mashup query to sink dataset(s)."
  parameters:
  - description: "the queries value to set."
    name: "queries"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySinkMapping&text=PowerQuerySinkMapping\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ExecutePowerQueryActivityTypeProperties withQueries(List<PowerQuerySinkMapping> queries)"
  desc: "Set the queries property: List of mapping for Power Query mashup query to sink dataset(s)."
  returns:
    description: "the ExecutePowerQueryActivityTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties&text=ExecutePowerQueryActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withRunConcurrently(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withRunConcurrently(Object runConcurrently)"
  name: "withRunConcurrently(Object runConcurrently)"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.withRunConcurrently(Object runConcurrently)"
  summary: "Set the run<wbr>Concurrently property: Concurrent run setting used for data flow execution."
  overridden: "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withRunConcurrently(java.lang.Object)"
  parameters:
  - name: "runConcurrently"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExecutePowerQueryActivityTypeProperties withRunConcurrently(Object runConcurrently)"
  desc: "Set the runConcurrently property: Concurrent run setting used for data flow execution. Allows sinks with the same save order to be processed concurrently. Type: boolean (or Expression with resultType boolean)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties&text=ExecutePowerQueryActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withSinks(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.PowerQuerySink>)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withSinks(Map<String,PowerQuerySink> sinks)"
  name: "withSinks(Map<String,PowerQuerySink> sinks)"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.withSinks(Map<String,PowerQuerySink> sinks)"
  summary: "Set the sinks property: (Deprecated."
  parameters:
  - description: "the sinks value to set."
    name: "sinks"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.PowerQuerySink?alt=com.azure.resourcemanager.datafactory.models.PowerQuerySink&text=PowerQuerySink\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ExecutePowerQueryActivityTypeProperties withSinks(Map<String,PowerQuerySink> sinks)"
  desc: "Set the sinks property: (Deprecated. Please use Queries). List of Power Query activity sinks mapped to a queryName."
  returns:
    description: "the ExecutePowerQueryActivityTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties&text=ExecutePowerQueryActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withSourceStagingConcurrency(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withSourceStagingConcurrency(Object sourceStagingConcurrency)"
  name: "withSourceStagingConcurrency(Object sourceStagingConcurrency)"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.withSourceStagingConcurrency(Object sourceStagingConcurrency)"
  summary: "Set the source<wbr>Staging<wbr>Concurrency property: Specify number of parallel staging for sources applicable to the sink."
  overridden: "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withSourceStagingConcurrency(java.lang.Object)"
  parameters:
  - name: "sourceStagingConcurrency"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExecutePowerQueryActivityTypeProperties withSourceStagingConcurrency(Object sourceStagingConcurrency)"
  desc: "Set the sourceStagingConcurrency property: Specify number of parallel staging for sources applicable to the sink. Type: integer (or Expression with resultType integer)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties&text=ExecutePowerQueryActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withStaging(com.azure.resourcemanager.datafactory.models.DataFlowStagingInfo)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withStaging(DataFlowStagingInfo staging)"
  name: "withStaging(DataFlowStagingInfo staging)"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.withStaging(DataFlowStagingInfo staging)"
  summary: "Set the staging property: Staging info for execute data flow activity."
  overridden: "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withStaging(com.azure.resourcemanager.datafactory.models.DataFlowStagingInfo)"
  parameters:
  - name: "staging"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowStagingInfo?alt=com.azure.resourcemanager.datafactory.models.DataFlowStagingInfo&text=DataFlowStagingInfo\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExecutePowerQueryActivityTypeProperties withStaging(DataFlowStagingInfo staging)"
  desc: "Set the staging property: Staging info for execute data flow activity."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties&text=ExecutePowerQueryActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withTraceLevel(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties.withTraceLevel(Object traceLevel)"
  name: "withTraceLevel(Object traceLevel)"
  nameWithType: "ExecutePowerQueryActivityTypeProperties.withTraceLevel(Object traceLevel)"
  summary: "Set the trace<wbr>Level property: Trace level setting used for data flow monitoring output."
  overridden: "com.azure.resourcemanager.datafactory.fluent.models.ExecuteDataFlowActivityTypeProperties.withTraceLevel(java.lang.Object)"
  parameters:
  - name: "traceLevel"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExecutePowerQueryActivityTypeProperties withTraceLevel(Object traceLevel)"
  desc: "Set the traceLevel property: Trace level setting used for data flow monitoring output. Supported values are: 'coarse', 'fine', and 'none'. Type: string (or Expression with resultType string)."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.ExecutePowerQueryActivityTypeProperties&text=ExecutePowerQueryActivityTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Execute power query data flow activity properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
