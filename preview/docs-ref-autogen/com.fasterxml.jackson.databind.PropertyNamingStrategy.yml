### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy
  id: PropertyNamingStrategy
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind
  children:
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.KEBAB_CASE
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.KebabCaseStrategy
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.LOWER_CAMEL_CASE
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.LOWER_CASE
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.LOWER_DOT_CASE
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerCaseStrategy
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerDotCaseStrategy
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.PASCAL_CASE_TO_CAMEL_CASE
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.PascalCaseStrategy
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategy()
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.SNAKE_CASE
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.UPPER_CAMEL_CASE
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.UpperCamelCaseStrategy
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String)
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String)
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String)
  - com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String)
  langs:
  - java
  name: PropertyNamingStrategy
  nameWithType: PropertyNamingStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy
  type: Class
  package: com.fasterxml.jackson.databind
  summary: >-
    Class that defines how names of JSON properties ("external names") are derived from names of POJO methods and fields ("internal names"), in cases where they are not auto-detected and no explicit annotations exist for naming. Methods are passed information about POJO member for which name is needed, as well as default name that would be used if no custom strategy was used.


    Default (empty) implementation returns suggested ("default") name unmodified.


    Note that the strategy is guaranteed to be called once per logical property (which may be represented by multiple members; such as pair of a getter and a setter), but may be called for each: implementations should not count on exact number of times, and should work for any member that represent a property.


    In absence of a registered custom strategy, default Java property naming strategy is used, which leaves field names as is, and removes set/get/is prefix from methods (as well as lower-cases initial sequence of capitalized characters).
  syntax:
    content: public class PropertyNamingStrategy implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
  id: CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
  nameWithType: PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static final PropertyNamingStrategy CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
    return:
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.KEBAB_CASE
  id: KEBAB_CASE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: KEBAB_CASE
  nameWithType: PropertyNamingStrategy.KEBAB_CASE
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.KEBAB_CASE
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Naming convention used in languages like Lisp, where words are in lower-case letters, separated by hyphens. See <xref uid="" data-throw-if-not-resolved="false">KebabCaseStrategy</xref> for details.
  syntax:
    content: public static final PropertyNamingStrategy KEBAB_CASE
    return:
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.LOWER_CAMEL_CASE
  id: LOWER_CAMEL_CASE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: LOWER_CAMEL_CASE
  nameWithType: PropertyNamingStrategy.LOWER_CAMEL_CASE
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.LOWER_CAMEL_CASE
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Naming convention used in Java, where words other than first are capitalized and no separator is used between words. Since this is the native Java naming convention, naming strategy will not do any transformation between names in data (JSON) and POJOS.
  syntax:
    content: public static final PropertyNamingStrategy LOWER_CAMEL_CASE
    return:
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.LOWER_CASE
  id: LOWER_CASE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: LOWER_CASE
  nameWithType: PropertyNamingStrategy.LOWER_CASE
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.LOWER_CASE
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Naming convention in which all words of the logical name are in lower case, and no separator is used between words. See <xref uid="" data-throw-if-not-resolved="false">LowerCaseStrategy</xref> for details.
  syntax:
    content: public static final PropertyNamingStrategy LOWER_CASE
    return:
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.LOWER_DOT_CASE
  id: LOWER_DOT_CASE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: LOWER_DOT_CASE
  nameWithType: PropertyNamingStrategy.LOWER_DOT_CASE
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.LOWER_DOT_CASE
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Naming convention widely used as configuration properties name, where words are in lower-case letters, separated by dots. See <xref uid="" data-throw-if-not-resolved="false">LowerDotCaseStrategy</xref> for details.
  syntax:
    content: public static final PropertyNamingStrategy LOWER_DOT_CASE
    return:
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.PASCAL_CASE_TO_CAMEL_CASE
  id: PASCAL_CASE_TO_CAMEL_CASE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: PASCAL_CASE_TO_CAMEL_CASE
  nameWithType: PropertyNamingStrategy.PASCAL_CASE_TO_CAMEL_CASE
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.PASCAL_CASE_TO_CAMEL_CASE
  type: Field
  package: com.fasterxml.jackson.databind
  syntax:
    content: public static final PropertyNamingStrategy PASCAL_CASE_TO_CAMEL_CASE
    return:
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategy()
  id: PropertyNamingStrategy()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: PropertyNamingStrategy()
  nameWithType: PropertyNamingStrategy.PropertyNamingStrategy()
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategy()
  overload: com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategy*
  type: Constructor
  package: com.fasterxml.jackson.databind
  syntax:
    content: public PropertyNamingStrategy()
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.SNAKE_CASE
  id: SNAKE_CASE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: SNAKE_CASE
  nameWithType: PropertyNamingStrategy.SNAKE_CASE
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.SNAKE_CASE
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Naming convention used in languages like C, where words are in lower-case letters, separated by underscores. See <xref uid="" data-throw-if-not-resolved="false">SnakeCaseStrategy</xref> for details.
  syntax:
    content: public static final PropertyNamingStrategy SNAKE_CASE
    return:
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.UPPER_CAMEL_CASE
  id: UPPER_CAMEL_CASE
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: UPPER_CAMEL_CASE
  nameWithType: PropertyNamingStrategy.UPPER_CAMEL_CASE
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.UPPER_CAMEL_CASE
  type: Field
  package: com.fasterxml.jackson.databind
  summary: Naming convention used in languages like Pascal, where words are capitalized and no separator is used between words. See <xref uid="" data-throw-if-not-resolved="false">PascalCaseStrategy</xref> for details.
  syntax:
    content: public static final PropertyNamingStrategy UPPER_CAMEL_CASE
    return:
      type: com.fasterxml.jackson.databind.PropertyNamingStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String)
  id: nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: nameForConstructorParameter(MapperConfig<?> config, AnnotatedParameter ctorParam, String defaultName)
  nameWithType: PropertyNamingStrategy.nameForConstructorParameter(MapperConfig<?> config, AnnotatedParameter ctorParam, String defaultName)
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForConstructorParameter(MapperConfig<?> config, AnnotatedParameter ctorParam, String defaultName)
  overload: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForConstructorParameter*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method called to find external name (name used in JSON) for given logical POJO property, as defined by given constructor parameter; typically called when building a deserializer (but not necessarily only then).
  syntax:
    content: public String nameForConstructorParameter(MapperConfig<?> config, AnnotatedParameter ctorParam, String defaultName)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
      description: >-
        Configuration in used: either <code>SerializationConfig</code>
           or <code>DeserializationConfig</code>, depending on whether method is called
           during serialization or deserialization
    - id: ctorParam
      type: com.fasterxml.jackson.databind.introspect.AnnotatedParameter
      description: Constructor parameter used to pass property.
    - id: defaultName
      type: java.lang.String
      description: Default name that would be used for property in absence of custom strategy
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String)
  id: nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: nameForField(MapperConfig<?> config, AnnotatedField field, String defaultName)
  nameWithType: PropertyNamingStrategy.nameForField(MapperConfig<?> config, AnnotatedField field, String defaultName)
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForField(MapperConfig<?> config, AnnotatedField field, String defaultName)
  overload: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForField*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method called to find external name (name used in JSON) for given logical POJO property, as defined by given field.
  syntax:
    content: public String nameForField(MapperConfig<?> config, AnnotatedField field, String defaultName)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
      description: >-
        Configuration in used: either <code>SerializationConfig</code>
           or <code>DeserializationConfig</code>, depending on whether method is called
           during serialization or deserialization
    - id: field
      type: com.fasterxml.jackson.databind.introspect.AnnotatedField
      description: Field used to access property
    - id: defaultName
      type: java.lang.String
      description: Default name that would be used for property in absence of custom strategy
    return:
      type: java.lang.String
      description: Logical name to use for property that the field represents
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String)
  id: nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: nameForGetterMethod(MapperConfig<?> config, AnnotatedMethod method, String defaultName)
  nameWithType: PropertyNamingStrategy.nameForGetterMethod(MapperConfig<?> config, AnnotatedMethod method, String defaultName)
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForGetterMethod(MapperConfig<?> config, AnnotatedMethod method, String defaultName)
  overload: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForGetterMethod*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method called to find external name (name used in JSON) for given logical POJO property, as defined by given getter method; typically called when building a serializer. (but not always -- when using "getter-as-setter", may be called during deserialization)
  syntax:
    content: public String nameForGetterMethod(MapperConfig<?> config, AnnotatedMethod method, String defaultName)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
      description: >-
        Configuration in used: either <code>SerializationConfig</code>
           or <code>DeserializationConfig</code>, depending on whether method is called
           during serialization or deserialization
    - id: method
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
      description: Method used to access property.
    - id: defaultName
      type: java.lang.String
      description: Default name that would be used for property in absence of custom strategy
    return:
      type: java.lang.String
      description: Logical name to use for property that the method represents
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String)
  id: nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig<?>,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.databind.PropertyNamingStrategy
  langs:
  - java
  name: nameForSetterMethod(MapperConfig<?> config, AnnotatedMethod method, String defaultName)
  nameWithType: PropertyNamingStrategy.nameForSetterMethod(MapperConfig<?> config, AnnotatedMethod method, String defaultName)
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForSetterMethod(MapperConfig<?> config, AnnotatedMethod method, String defaultName)
  overload: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForSetterMethod*
  type: Method
  package: com.fasterxml.jackson.databind
  summary: Method called to find external name (name used in JSON) for given logical POJO property, as defined by given setter method; typically called when building a deserializer (but not necessarily only then).
  syntax:
    content: public String nameForSetterMethod(MapperConfig<?> config, AnnotatedMethod method, String defaultName)
    parameters:
    - id: config
      type: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
      description: >-
        Configuration in used: either <code>SerializationConfig</code>
           or <code>DeserializationConfig</code>, depending on whether method is called
           during serialization or deserialization
    - id: method
      type: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
      description: Method used to access property.
    - id: defaultName
      type: java.lang.String
      description: Default name that would be used for property in absence of custom strategy
    return:
      type: java.lang.String
      description: Logical name to use for property that the method represents
references:
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategy*
  name: PropertyNamingStrategy
  nameWithType: PropertyNamingStrategy.PropertyNamingStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategy
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig<?>
  spec.java:
  - uid: com.fasterxml.jackson.databind.cfg.MapperConfig
    name: MapperConfig
    fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedField
  name: AnnotatedField
  nameWithType: AnnotatedField
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedField
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForField*
  name: nameForField
  nameWithType: PropertyNamingStrategy.nameForField
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForField
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
  name: AnnotatedMethod
  nameWithType: AnnotatedMethod
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedMethod
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForGetterMethod*
  name: nameForGetterMethod
  nameWithType: PropertyNamingStrategy.nameForGetterMethod
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForGetterMethod
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForSetterMethod*
  name: nameForSetterMethod
  nameWithType: PropertyNamingStrategy.nameForSetterMethod
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForSetterMethod
  package: com.fasterxml.jackson.databind
- uid: com.fasterxml.jackson.databind.introspect.AnnotatedParameter
  name: AnnotatedParameter
  nameWithType: AnnotatedParameter
  fullName: com.fasterxml.jackson.databind.introspect.AnnotatedParameter
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForConstructorParameter*
  name: nameForConstructorParameter
  nameWithType: PropertyNamingStrategy.nameForConstructorParameter
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.nameForConstructorParameter
  package: com.fasterxml.jackson.databind
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.KebabCaseStrategy
  name: PropertyNamingStrategy.KebabCaseStrategy
  nameWithType: PropertyNamingStrategy.KebabCaseStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.KebabCaseStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerCaseStrategy
  name: PropertyNamingStrategy.LowerCaseStrategy
  nameWithType: PropertyNamingStrategy.LowerCaseStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerCaseStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy
  name: PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy
  nameWithType: PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerDotCaseStrategy
  name: PropertyNamingStrategy.LowerDotCaseStrategy
  nameWithType: PropertyNamingStrategy.LowerDotCaseStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerDotCaseStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.PascalCaseStrategy
  name: PropertyNamingStrategy.PascalCaseStrategy
  nameWithType: PropertyNamingStrategy.PascalCaseStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.PascalCaseStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase
  name: PropertyNamingStrategy.PropertyNamingStrategyBase
  nameWithType: PropertyNamingStrategy.PropertyNamingStrategyBase
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.PropertyNamingStrategyBase
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy
  name: PropertyNamingStrategy.SnakeCaseStrategy
  nameWithType: PropertyNamingStrategy.SnakeCaseStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy
- uid: com.fasterxml.jackson.databind.PropertyNamingStrategy.UpperCamelCaseStrategy
  name: PropertyNamingStrategy.UpperCamelCaseStrategy
  nameWithType: PropertyNamingStrategy.UpperCamelCaseStrategy
  fullName: com.fasterxml.jackson.databind.PropertyNamingStrategy.UpperCamelCaseStrategy
- uid: com.fasterxml.jackson.databind.cfg.MapperConfig
  name: MapperConfig
  nameWithType: MapperConfig
  fullName: com.fasterxml.jackson.databind.cfg.MapperConfig
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
