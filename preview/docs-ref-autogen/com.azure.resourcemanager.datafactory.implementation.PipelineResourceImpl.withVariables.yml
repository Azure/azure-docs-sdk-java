### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datafactory.implementation.PipelineResourceImpl.withVariables*"
fullName: "com.azure.resourcemanager.datafactory.implementation.PipelineResourceImpl.withVariables"
name: "withVariables"
nameWithType: "PipelineResourceImpl.withVariables"
members:
- uid: "com.azure.resourcemanager.datafactory.implementation.PipelineResourceImpl.withVariables(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.VariableSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.implementation.PipelineResourceImpl.withVariables(Map<String,VariableSpecification> variables)"
  name: "withVariables(Map<String,VariableSpecification> variables)"
  nameWithType: "PipelineResourceImpl.withVariables(Map<String,VariableSpecification> variables)"
  summary: "Specifies the variables property: List of variables for pipeline.."
  parameters:
  - name: "variables"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.VariableSpecification?alt=com.azure.resourcemanager.datafactory.models.VariableSpecification&text=VariableSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PipelineResourceImpl withVariables(Map<String,VariableSpecification> variables)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.implementation.PipelineResourceImpl?alt=com.azure.resourcemanager.datafactory.implementation.PipelineResourceImpl&text=PipelineResourceImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datafactory.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.1
