### YamlMime:JavaMember
uid: "org.apache.commons.codec.digest.Md5Crypt.md5Crypt*"
fullName: "org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
name: "md5Crypt"
nameWithType: "Md5Crypt.md5Crypt"
members:
- uid: "org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[])"
  fullName: "org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[] keyBytes)"
  name: "md5Crypt(byte[] keyBytes)"
  nameWithType: "Md5Crypt.md5Crypt(byte[] keyBytes)"
  summary: "Generates a libc6 crypt() compatible \"$1$\" hash value.\n\nSee <xref uid=\"org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#md5Crypt(byte[], String)\"></xref> for details.\n\nA salt is generated for you using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ThreadLocalRandom\"></xref>; for more secure salts consider using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref> to generate your own salts and calling <xref uid=\"org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#md5Crypt(byte[], String)\"></xref>."
  parameters:
  - description: "plaintext string to hash."
    name: "keyBytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static String md5Crypt(byte[] keyBytes)"
  returns:
    description: "the hash value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String)"
  fullName: "org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[] keyBytes, String salt)"
  name: "md5Crypt(byte[] keyBytes, String salt)"
  nameWithType: "Md5Crypt.md5Crypt(byte[] keyBytes, String salt)"
  summary: "Generates a libc crypt() compatible \"$1$\" MD5 based hash value.\n\nSee <xref uid=\"org.apache.commons.codec.digest.Crypt.crypt(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Crypt#crypt(String, String)\"></xref> for details. We use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref> for seed generation by default."
  parameters:
  - description: "plaintext string to hash."
    name: "keyBytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "salt string including the prefix and optionally garbage at the end. The salt may be null, in which\n            case a salt is generated for you using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ThreadLocalRandom\"></xref>; for more secure salts consider using\n            <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref> to generate your own salts."
    name: "salt"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String md5Crypt(byte[] keyBytes, String salt)"
  returns:
    description: "the hash value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)"
  fullName: "org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[] keyBytes, String salt, String prefix)"
  name: "md5Crypt(byte[] keyBytes, String salt, String prefix)"
  nameWithType: "Md5Crypt.md5Crypt(byte[] keyBytes, String salt, String prefix)"
  summary: "Generates a libc6 crypt() \"$1$\" or Apache htpasswd \"$apr1$\" hash value.\n\nSee <xref uid=\"org.apache.commons.codec.digest.Crypt.crypt(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Crypt#crypt(String, String)\"></xref> or <xref uid=\"org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#apr1Crypt(String, String)\"></xref> for details. We use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"by default\"></xref>."
  parameters:
  - description: "plaintext string to hash."
    name: "keyBytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "real salt value without prefix or \"rounds=\". The salt may be null, in which case a salt\n            is generated for you using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ThreadLocalRandom\"></xref>; for more secure salts consider\n            using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref> to generate your own salts."
    name: "salt"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "salt prefix"
    name: "prefix"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String md5Crypt(byte[] keyBytes, String salt, String prefix)"
  returns:
    description: "the hash value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String,java.util.Random)"
  fullName: "org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[] keyBytes, String salt, String prefix, Random random)"
  name: "md5Crypt(byte[] keyBytes, String salt, String prefix, Random random)"
  nameWithType: "Md5Crypt.md5Crypt(byte[] keyBytes, String salt, String prefix, Random random)"
  summary: "Generates a libc6 crypt() \"$1$\" or Apache htpasswd \"$apr1$\" hash value.\n\nSee <xref uid=\"org.apache.commons.codec.digest.Crypt.crypt(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Crypt#crypt(String, String)\"></xref> or <xref uid=\"org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#apr1Crypt(String, String)\"></xref> for details."
  parameters:
  - description: "plaintext string to hash."
    name: "keyBytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "real salt value without prefix or \"rounds=\". The salt may be null, in which case a salt\n            is generated for you using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ThreadLocalRandom\"></xref>; for more secure salts consider\n            using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref> to generate your own salts."
    name: "salt"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "salt prefix"
    name: "prefix"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the instance of <xref uid=\"java.util.Random\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Random\"></xref> to use for generating the salt. Consider using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref>\n            or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ThreadLocalRandom\"></xref>."
    name: "random"
    type: "<xref href=\"java.util.Random?alt=java.util.Random&text=Random\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String md5Crypt(byte[] keyBytes, String salt, String prefix, Random random)"
  returns:
    description: "the hash value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.util.Random)"
  fullName: "org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[] keyBytes, Random random)"
  name: "md5Crypt(byte[] keyBytes, Random random)"
  nameWithType: "Md5Crypt.md5Crypt(byte[] keyBytes, Random random)"
  summary: "Generates a libc6 crypt() compatible \"$1$\" hash value.\n\nSee <xref uid=\"org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#md5Crypt(byte[], String)\"></xref> for details.\n\nA salt is generated for you using the instance of <xref uid=\"java.util.Random\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Random\"></xref> you supply."
  parameters:
  - description: "plaintext string to hash."
    name: "keyBytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the instance of <xref uid=\"java.util.Random\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Random\"></xref> to use for generating the salt. Consider using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecureRandom\"></xref>\n            or <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ThreadLocalRandom\"></xref>."
    name: "random"
    type: "<xref href=\"java.util.Random?alt=java.util.Random&text=Random\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String md5Crypt(byte[] keyBytes, Random random)"
  returns:
    description: "the hash value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "org.apache.commons.codec.digest"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
