### YamlMime:JavaMember
uid: "com.fasterxml.jackson.annotation.JsonIncludeProperties.Value.withOverrides*"
fullName: "com.fasterxml.jackson.annotation.JsonIncludeProperties.Value.withOverrides"
name: "withOverrides"
nameWithType: "JsonIncludeProperties.Value.withOverrides"
members:
- uid: "com.fasterxml.jackson.annotation.JsonIncludeProperties.Value.withOverrides(com.fasterxml.jackson.annotation.JsonIncludeProperties.Value)"
  fullName: "com.fasterxml.jackson.annotation.JsonIncludeProperties.Value.withOverrides(JsonIncludeProperties.Value overrides)"
  name: "withOverrides(JsonIncludeProperties.Value overrides)"
  nameWithType: "JsonIncludeProperties.Value.withOverrides(JsonIncludeProperties.Value overrides)"
  summary: "Mutant factory method to override the current value with an another, merging the included fields so that only entries that exist in both original and override set are included, taking into account that \"undefined\" <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Value\"></xref>s do not count (\"undefined\" meaning that `getIncluded()` returns `null`). So: overriding with \"undefined\" returns original `Value` as-is; overriding an \"undefined\" `Value` returns override `Value` as-is."
  parameters:
  - name: "overrides"
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonIncludeProperties.Value?alt=com.fasterxml.jackson.annotation.JsonIncludeProperties.Value&text=Value\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonIncludeProperties.Value withOverrides(JsonIncludeProperties.Value overrides)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.annotation.JsonIncludeProperties.Value?alt=com.fasterxml.jackson.annotation.JsonIncludeProperties.Value&text=Value\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
