### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.models.SparkServerType"
fullName: "com.azure.analytics.synapse.artifacts.models.SparkServerType"
name: "SparkServerType"
nameWithType: "SparkServerType"
summary: "Defines values for Spark<wbr>Server<wbr>Type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.util.ExpandableStringEnum?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.util.ExpandableStringEnum.<T>fromString(java.lang.String,java.lang.Class<T>)"
- "com.azure.core.util.ExpandableStringEnum.<T>values(java.lang.Class<T>)"
- "com.azure.core.util.ExpandableStringEnum.equals(java.lang.Object)"
- "com.azure.core.util.ExpandableStringEnum.hashCode()"
- "com.azure.core.util.ExpandableStringEnum.toString()"
- "java.lang.Object.clone()"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkServerType extends ExpandableStringEnum<SparkServerType>"
constructors:
- uid: "com.azure.analytics.synapse.artifacts.models.SparkServerType.SparkServerType()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkServerType.SparkServerType()"
  name: "SparkServerType()"
  nameWithType: "SparkServerType.SparkServerType()"
  syntax: "public SparkServerType()"
fields:
- uid: "com.azure.analytics.synapse.artifacts.models.SparkServerType.SHARK_SERVER"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkServerType.SHARK_SERVER"
  name: "SHARK_SERVER"
  nameWithType: "SparkServerType.SHARK_SERVER"
  summary: "Static value Shark<wbr>Server for Spark<wbr>Server<wbr>Type."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkServerType?alt=com.azure.analytics.synapse.artifacts.models.SparkServerType&text=SparkServerType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final SparkServerType SHARK_SERVER"
  desc: "Static value SharkServer for SparkServerType."
- uid: "com.azure.analytics.synapse.artifacts.models.SparkServerType.SHARK_SERVER2"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkServerType.SHARK_SERVER2"
  name: "SHARK_SERVER2"
  nameWithType: "SparkServerType.SHARK_SERVER2"
  summary: "Static value Shark<wbr>Server2 for Spark<wbr>Server<wbr>Type."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkServerType?alt=com.azure.analytics.synapse.artifacts.models.SparkServerType&text=SparkServerType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final SparkServerType SHARK_SERVER2"
  desc: "Static value SharkServer2 for SparkServerType."
- uid: "com.azure.analytics.synapse.artifacts.models.SparkServerType.SPARK_THRIFT_SERVER"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkServerType.SPARK_THRIFT_SERVER"
  name: "SPARK_THRIFT_SERVER"
  nameWithType: "SparkServerType.SPARK_THRIFT_SERVER"
  summary: "Static value Spark<wbr>Thrift<wbr>Server for Spark<wbr>Server<wbr>Type."
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkServerType?alt=com.azure.analytics.synapse.artifacts.models.SparkServerType&text=SparkServerType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final SparkServerType SPARK_THRIFT_SERVER"
  desc: "Static value SparkThriftServer for SparkServerType."
methods:
- uid: "com.azure.analytics.synapse.artifacts.models.SparkServerType.fromString(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkServerType.fromString(String name)"
  name: "fromString(String name)"
  nameWithType: "SparkServerType.fromString(String name)"
  summary: "Creates or finds a Spark<wbr>Server<wbr>Type from its string representation."
  modifiers:
  - "static"
  parameters:
  - description: "a name to look for."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SparkServerType fromString(String name)"
  desc: "Creates or finds a SparkServerType from its string representation."
  returns:
    description: "the corresponding SparkServerType."
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkServerType?alt=com.azure.analytics.synapse.artifacts.models.SparkServerType&text=SparkServerType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.artifacts.models.SparkServerType.values()"
  fullName: "com.azure.analytics.synapse.artifacts.models.SparkServerType.values()"
  name: "values()"
  nameWithType: "SparkServerType.values()"
  modifiers:
  - "static"
  syntax: "public static Collection<SparkServerType> values()"
  returns:
    description: "known SparkServerType values."
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.SparkServerType?alt=com.azure.analytics.synapse.artifacts.models.SparkServerType&text=SparkServerType\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Defines values for SparkServerType."
metadata: {}
package: "com.azure.analytics.synapse.artifacts.models"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
