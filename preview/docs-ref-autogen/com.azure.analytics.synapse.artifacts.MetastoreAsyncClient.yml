### YamlMime:JavaType
uid: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient"
fullName: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient"
name: "MetastoreAsyncClient"
nameWithType: "MetastoreAsyncClient"
summary: "Initializes a new instance of the asynchronous Artifacts<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class MetastoreAsyncClient"
methods:
- uid: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.delete(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.delete(String id)"
  name: "delete(String id)"
  nameWithType: "MetastoreAsyncClient.delete(String id)"
  summary: "Remove files in Syms."
  parameters:
  - description: "The id parameter."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> delete(String id)"
  desc: "Remove files in Syms."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.deleteWithResponse(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.deleteWithResponse(String id)"
  name: "deleteWithResponse(String id)"
  nameWithType: "MetastoreAsyncClient.deleteWithResponse(String id)"
  summary: "Remove files in Syms."
  parameters:
  - description: "The id parameter."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<Void>> deleteWithResponse(String id)"
  desc: "Remove files in Syms."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.getDatabaseOperations(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.getDatabaseOperations(String id)"
  name: "getDatabaseOperations(String id)"
  nameWithType: "MetastoreAsyncClient.getDatabaseOperations(String id)"
  summary: "Gets status of the database."
  parameters:
  - description: "The id parameter."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<MetastoreRequestSuccessResponse> getDatabaseOperations(String id)"
  desc: "Gets status of the database."
  returns:
    description: "status of the database on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.MetastoreRequestSuccessResponse?alt=com.azure.analytics.synapse.artifacts.models.MetastoreRequestSuccessResponse&text=MetastoreRequestSuccessResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.getDatabaseOperationsWithResponse(java.lang.String)"
  fullName: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.getDatabaseOperationsWithResponse(String id)"
  name: "getDatabaseOperationsWithResponse(String id)"
  nameWithType: "MetastoreAsyncClient.getDatabaseOperationsWithResponse(String id)"
  summary: "Gets status of the database."
  parameters:
  - description: "The id parameter."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<MetastoreRequestSuccessResponse>> getDatabaseOperationsWithResponse(String id)"
  desc: "Gets status of the database."
  returns:
    description: "status of the database along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.MetastoreRequestSuccessResponse?alt=com.azure.analytics.synapse.artifacts.models.MetastoreRequestSuccessResponse&text=MetastoreRequestSuccessResponse\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.register(java.lang.String,com.azure.analytics.synapse.artifacts.models.MetastoreRegisterObject)"
  fullName: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.register(String id, MetastoreRegisterObject registerBody)"
  name: "register(String id, MetastoreRegisterObject registerBody)"
  nameWithType: "MetastoreAsyncClient.register(String id, MetastoreRegisterObject registerBody)"
  summary: "Register files in Syms."
  parameters:
  - description: "The name of the database to be created. The name can contain only alphanumeric characters and should\n     not exceed 24 characters."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The body for the register request."
    name: "registerBody"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.MetastoreRegisterObject?alt=com.azure.analytics.synapse.artifacts.models.MetastoreRegisterObject&text=MetastoreRegisterObject\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<MetastoreRegistrationResponse> register(String id, MetastoreRegisterObject registerBody)"
  desc: "Register files in Syms."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.MetastoreRegistrationResponse?alt=com.azure.analytics.synapse.artifacts.models.MetastoreRegistrationResponse&text=MetastoreRegistrationResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.registerWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.MetastoreRegisterObject)"
  fullName: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.registerWithResponse(String id, MetastoreRegisterObject registerBody)"
  name: "registerWithResponse(String id, MetastoreRegisterObject registerBody)"
  nameWithType: "MetastoreAsyncClient.registerWithResponse(String id, MetastoreRegisterObject registerBody)"
  summary: "Register files in Syms."
  parameters:
  - description: "The name of the database to be created. The name can contain only alphanumeric characters and should\n     not exceed 24 characters."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The body for the register request."
    name: "registerBody"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.MetastoreRegisterObject?alt=com.azure.analytics.synapse.artifacts.models.MetastoreRegisterObject&text=MetastoreRegisterObject\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<MetastoreRegistrationResponse>> registerWithResponse(String id, MetastoreRegisterObject registerBody)"
  desc: "Register files in Syms."
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.MetastoreRegistrationResponse?alt=com.azure.analytics.synapse.artifacts.models.MetastoreRegistrationResponse&text=MetastoreRegistrationResponse\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.update(java.lang.String,com.azure.analytics.synapse.artifacts.models.MetastoreUpdateObject)"
  fullName: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.update(String id, MetastoreUpdateObject updateBody)"
  name: "update(String id, MetastoreUpdateObject updateBody)"
  nameWithType: "MetastoreAsyncClient.update(String id, MetastoreUpdateObject updateBody)"
  summary: "Update files in Syms."
  parameters:
  - description: "The name of the database to be updated."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The body for the update request."
    name: "updateBody"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.MetastoreUpdateObject?alt=com.azure.analytics.synapse.artifacts.models.MetastoreUpdateObject&text=MetastoreUpdateObject\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<MetastoreUpdationResponse> update(String id, MetastoreUpdateObject updateBody)"
  desc: "Update files in Syms."
  returns:
    description: "the response body on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.MetastoreUpdationResponse?alt=com.azure.analytics.synapse.artifacts.models.MetastoreUpdationResponse&text=MetastoreUpdationResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.updateWithResponse(java.lang.String,com.azure.analytics.synapse.artifacts.models.MetastoreUpdateObject)"
  fullName: "com.azure.analytics.synapse.artifacts.MetastoreAsyncClient.updateWithResponse(String id, MetastoreUpdateObject updateBody)"
  name: "updateWithResponse(String id, MetastoreUpdateObject updateBody)"
  nameWithType: "MetastoreAsyncClient.updateWithResponse(String id, MetastoreUpdateObject updateBody)"
  summary: "Update files in Syms."
  parameters:
  - description: "The name of the database to be updated."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The body for the update request."
    name: "updateBody"
    type: "<xref href=\"com.azure.analytics.synapse.artifacts.models.MetastoreUpdateObject?alt=com.azure.analytics.synapse.artifacts.models.MetastoreUpdateObject&text=MetastoreUpdateObject\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<MetastoreUpdationResponse>> updateWithResponse(String id, MetastoreUpdateObject updateBody)"
  desc: "Update files in Syms."
  returns:
    description: "the response body along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.analytics.synapse.artifacts.models.MetastoreUpdationResponse?alt=com.azure.analytics.synapse.artifacts.models.MetastoreUpdationResponse&text=MetastoreUpdationResponse\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "class"
desc: "Initializes a new instance of the asynchronous ArtifactsClient type."
metadata: {}
package: "com.azure.analytics.synapse.artifacts"
artifact: com.azure:azure-analytics-synapse-artifacts:1.0.0-beta.10
