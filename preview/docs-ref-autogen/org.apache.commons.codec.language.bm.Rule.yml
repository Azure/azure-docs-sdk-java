### YamlMime:ManagedReference
items:
- uid: org.apache.commons.codec.language.bm.Rule
  id: Rule
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm
  children:
  - org.apache.commons.codec.language.bm.Rule.ALL
  - org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER
  - org.apache.commons.codec.language.bm.Rule.Phoneme
  - org.apache.commons.codec.language.bm.Rule.PhonemeExpr
  - org.apache.commons.codec.language.bm.Rule.PhonemeList
  - org.apache.commons.codec.language.bm.Rule.RPattern
  - org.apache.commons.codec.language.bm.Rule.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule.PhonemeExpr)
  - org.apache.commons.codec.language.bm.Rule.getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)
  - org.apache.commons.codec.language.bm.Rule.getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages.LanguageSet)
  - org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)
  - org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages.LanguageSet)
  - org.apache.commons.codec.language.bm.Rule.getLContext()
  - org.apache.commons.codec.language.bm.Rule.getPattern()
  - org.apache.commons.codec.language.bm.Rule.getPhoneme()
  - org.apache.commons.codec.language.bm.Rule.getRContext()
  - org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)
  langs:
  - java
  name: Rule
  nameWithType: Rule
  fullName: org.apache.commons.codec.language.bm.Rule
  type: Class
  package: org.apache.commons.codec.language.bm
  summary: "A phoneme rule.\n\nRules have a pattern, left context, right context, output phoneme, set of languages for which they apply and a logical flag indicating if all languages must be in play. A rule matches if:\n\n *  the pattern matches at the current position\n *  the string up until the beginning of the pattern matches the left context\n *  the string from the end of the pattern matches the right context\n *  logical is ALL and all languages are in scope; or\n *  logical is any other value and at least one language is in scope\n\nRules are typically generated by parsing rules resources. In normal use, there will be no need for the user to explicitly construct their own.\n\nRules are immutable and thread-safe.\n\n**Rules resources**\n\nRules are typically loaded from resource files. These are UTF-8 encoded text files. They are systematically named following the pattern:\n\n> org/apache/commons/codec/language/bm/$\\{NameType\\#getName\\}\\_$\\{RuleType\\#getName\\}\\_$\\{language\\}.txt\n\nThe format of these resources is the following:\n\n *  **Rules:** whitespace separated, double-quoted strings. There should be 4 columns to each row, and these will be interpreted as:\n    \n    1.  pattern\n    2.  left context\n    3.  right context\n    4.  phoneme\n *  **End-of-line comments:** Any occurrence of '//' will cause all text following on that line to be discarded as a comment.\n *  **Multi-line comments:** Any line starting with '/\\*' will start multi-line commenting mode. This will skip all content until a line ending in '\\*' and '/' is found.\n *  **Blank lines:** All blank lines will be skipped."
  syntax:
    content: public class Rule
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: org.apache.commons.codec.language.bm.Rule.ALL
  id: ALL
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule
  langs:
  - java
  name: ALL
  nameWithType: Rule.ALL
  fullName: org.apache.commons.codec.language.bm.Rule.ALL
  type: Field
  package: org.apache.commons.codec.language.bm
  syntax:
    content: public static final String ALL
    return:
      type: java.lang.String
- uid: org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER
  id: ALL_STRINGS_RMATCHER
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule
  langs:
  - java
  name: ALL_STRINGS_RMATCHER
  nameWithType: Rule.ALL_STRINGS_RMATCHER
  fullName: org.apache.commons.codec.language.bm.Rule.ALL_STRINGS_RMATCHER
  type: Field
  package: org.apache.commons.codec.language.bm
  syntax:
    content: public static final Rule.RPattern ALL_STRINGS_RMATCHER
    return:
      type: org.apache.commons.codec.language.bm.Rule.RPattern
- uid: org.apache.commons.codec.language.bm.Rule.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule.PhonemeExpr)
  id: Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule.PhonemeExpr)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule
  langs:
  - java
  name: Rule(String pattern, String lContext, String rContext, Rule.PhonemeExpr phoneme)
  nameWithType: Rule.Rule(String pattern, String lContext, String rContext, Rule.PhonemeExpr phoneme)
  fullName: org.apache.commons.codec.language.bm.Rule.Rule(String pattern, String lContext, String rContext, Rule.PhonemeExpr phoneme)
  overload: org.apache.commons.codec.language.bm.Rule.Rule*
  type: Constructor
  package: org.apache.commons.codec.language.bm
  summary: Creates a new rule.
  syntax:
    content: public Rule(String pattern, String lContext, String rContext, Rule.PhonemeExpr phoneme)
    parameters:
    - id: pattern
      type: java.lang.String
      description: the pattern
    - id: lContext
      type: java.lang.String
      description: the left context
    - id: rContext
      type: java.lang.String
      description: the right context
    - id: phoneme
      type: org.apache.commons.codec.language.bm.Rule.PhonemeExpr
      description: the resulting phoneme
- uid: org.apache.commons.codec.language.bm.Rule.getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)
  id: getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule
  langs:
  - java
  name: getInstance(NameType nameType, RuleType rt, String lang)
  nameWithType: Rule.getInstance(NameType nameType, RuleType rt, String lang)
  fullName: org.apache.commons.codec.language.bm.Rule.getInstance(NameType nameType, RuleType rt, String lang)
  overload: org.apache.commons.codec.language.bm.Rule.getInstance*
  type: Method
  package: org.apache.commons.codec.language.bm
  summary: Gets rules for a combination of name type, rule type and a single language.
  syntax:
    content: public static List<Rule> getInstance(NameType nameType, RuleType rt, String lang)
    parameters:
    - id: nameType
      type: org.apache.commons.codec.language.bm.NameType
      description: the NameType to consider
    - id: rt
      type: org.apache.commons.codec.language.bm.RuleType
      description: the RuleType to consider
    - id: lang
      type: java.lang.String
      description: the language to consider
    return:
      type: java.util.List<org.apache.commons.codec.language.bm.Rule>
      description: a list of Rules that apply
- uid: org.apache.commons.codec.language.bm.Rule.getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages.LanguageSet)
  id: getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages.LanguageSet)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule
  langs:
  - java
  name: getInstance(NameType nameType, RuleType rt, Languages.LanguageSet langs)
  nameWithType: Rule.getInstance(NameType nameType, RuleType rt, Languages.LanguageSet langs)
  fullName: org.apache.commons.codec.language.bm.Rule.getInstance(NameType nameType, RuleType rt, Languages.LanguageSet langs)
  overload: org.apache.commons.codec.language.bm.Rule.getInstance*
  type: Method
  package: org.apache.commons.codec.language.bm
  summary: Gets rules for a combination of name type, rule type and languages.
  syntax:
    content: public static List<Rule> getInstance(NameType nameType, RuleType rt, Languages.LanguageSet langs)
    parameters:
    - id: nameType
      type: org.apache.commons.codec.language.bm.NameType
      description: the NameType to consider
    - id: rt
      type: org.apache.commons.codec.language.bm.RuleType
      description: the RuleType to consider
    - id: langs
      type: org.apache.commons.codec.language.bm.Languages.LanguageSet
      description: the set of languages to consider
    return:
      type: java.util.List<org.apache.commons.codec.language.bm.Rule>
      description: a list of Rules that apply
- uid: org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)
  id: getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule
  langs:
  - java
  name: getInstanceMap(NameType nameType, RuleType rt, String lang)
  nameWithType: Rule.getInstanceMap(NameType nameType, RuleType rt, String lang)
  fullName: org.apache.commons.codec.language.bm.Rule.getInstanceMap(NameType nameType, RuleType rt, String lang)
  overload: org.apache.commons.codec.language.bm.Rule.getInstanceMap*
  type: Method
  package: org.apache.commons.codec.language.bm
  summary: Gets rules for a combination of name type, rule type and a single language.
  syntax:
    content: public static Map<String,List<Rule>> getInstanceMap(NameType nameType, RuleType rt, String lang)
    parameters:
    - id: nameType
      type: org.apache.commons.codec.language.bm.NameType
      description: the NameType to consider
    - id: rt
      type: org.apache.commons.codec.language.bm.RuleType
      description: the RuleType to consider
    - id: lang
      type: java.lang.String
      description: the language to consider
    return:
      type: java.util.Map<java.lang.String,java.util.List<org.apache.commons.codec.language.bm.Rule>>
      description: a map containing all Rules that apply, grouped by the first character of the rule pattern
- uid: org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages.LanguageSet)
  id: getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages.LanguageSet)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule
  langs:
  - java
  name: getInstanceMap(NameType nameType, RuleType rt, Languages.LanguageSet langs)
  nameWithType: Rule.getInstanceMap(NameType nameType, RuleType rt, Languages.LanguageSet langs)
  fullName: org.apache.commons.codec.language.bm.Rule.getInstanceMap(NameType nameType, RuleType rt, Languages.LanguageSet langs)
  overload: org.apache.commons.codec.language.bm.Rule.getInstanceMap*
  type: Method
  package: org.apache.commons.codec.language.bm
  summary: Gets rules for a combination of name type, rule type and languages.
  syntax:
    content: public static Map<String,List<Rule>> getInstanceMap(NameType nameType, RuleType rt, Languages.LanguageSet langs)
    parameters:
    - id: nameType
      type: org.apache.commons.codec.language.bm.NameType
      description: the NameType to consider
    - id: rt
      type: org.apache.commons.codec.language.bm.RuleType
      description: the RuleType to consider
    - id: langs
      type: org.apache.commons.codec.language.bm.Languages.LanguageSet
      description: the set of languages to consider
    return:
      type: java.util.Map<java.lang.String,java.util.List<org.apache.commons.codec.language.bm.Rule>>
      description: a map containing all Rules that apply, grouped by the first character of the rule pattern
- uid: org.apache.commons.codec.language.bm.Rule.getLContext()
  id: getLContext()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule
  langs:
  - java
  name: getLContext()
  nameWithType: Rule.getLContext()
  fullName: org.apache.commons.codec.language.bm.Rule.getLContext()
  overload: org.apache.commons.codec.language.bm.Rule.getLContext*
  type: Method
  package: org.apache.commons.codec.language.bm
  summary: Gets the left context. This is a regular expression that must match to the left of the pattern.
  syntax:
    content: public Rule.RPattern getLContext()
    return:
      type: org.apache.commons.codec.language.bm.Rule.RPattern
      description: the left context Pattern
- uid: org.apache.commons.codec.language.bm.Rule.getPattern()
  id: getPattern()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule
  langs:
  - java
  name: getPattern()
  nameWithType: Rule.getPattern()
  fullName: org.apache.commons.codec.language.bm.Rule.getPattern()
  overload: org.apache.commons.codec.language.bm.Rule.getPattern*
  type: Method
  package: org.apache.commons.codec.language.bm
  summary: Gets the pattern. This is a string-literal that must exactly match.
  syntax:
    content: public String getPattern()
    return:
      type: java.lang.String
      description: the pattern
- uid: org.apache.commons.codec.language.bm.Rule.getPhoneme()
  id: getPhoneme()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule
  langs:
  - java
  name: getPhoneme()
  nameWithType: Rule.getPhoneme()
  fullName: org.apache.commons.codec.language.bm.Rule.getPhoneme()
  overload: org.apache.commons.codec.language.bm.Rule.getPhoneme*
  type: Method
  package: org.apache.commons.codec.language.bm
  summary: Gets the phoneme. If the rule matches, this is the phoneme associated with the pattern match.
  syntax:
    content: public Rule.PhonemeExpr getPhoneme()
    return:
      type: org.apache.commons.codec.language.bm.Rule.PhonemeExpr
      description: the phoneme
- uid: org.apache.commons.codec.language.bm.Rule.getRContext()
  id: getRContext()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule
  langs:
  - java
  name: getRContext()
  nameWithType: Rule.getRContext()
  fullName: org.apache.commons.codec.language.bm.Rule.getRContext()
  overload: org.apache.commons.codec.language.bm.Rule.getRContext*
  type: Method
  package: org.apache.commons.codec.language.bm
  summary: Gets the right context. This is a regular expression that must match to the right of the pattern.
  syntax:
    content: public Rule.RPattern getRContext()
    return:
      type: org.apache.commons.codec.language.bm.Rule.RPattern
      description: the right context Pattern
- uid: org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)
  id: patternAndContextMatches(java.lang.CharSequence,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.commons.codec.language.bm.Rule
  langs:
  - java
  name: patternAndContextMatches(CharSequence input, int i)
  nameWithType: Rule.patternAndContextMatches(CharSequence input, int i)
  fullName: org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(CharSequence input, int i)
  overload: org.apache.commons.codec.language.bm.Rule.patternAndContextMatches*
  type: Method
  package: org.apache.commons.codec.language.bm
  summary: Decides if the pattern and context match the input starting at a position. It is a match if the `lContext` matches `input` up to `i`, `pattern` matches at i and `rContext` matches from the end of the match of `pattern` to the end of `input`.
  syntax:
    content: public boolean patternAndContextMatches(CharSequence input, int i)
    parameters:
    - id: input
      type: java.lang.CharSequence
      description: the input String
    - id: i
      type: int
      description: the int position within the input
    return:
      type: boolean
      description: true if the pattern and left/right context match, false otherwise
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: org.apache.commons.codec.language.bm.Rule.PhonemeExpr
  name: Rule.PhonemeExpr
  nameWithType: Rule.PhonemeExpr
  fullName: org.apache.commons.codec.language.bm.Rule.PhonemeExpr
- uid: org.apache.commons.codec.language.bm.Rule.Rule*
  name: Rule
  nameWithType: Rule.Rule
  fullName: org.apache.commons.codec.language.bm.Rule.Rule
  package: org.apache.commons.codec.language.bm
- uid: org.apache.commons.codec.language.bm.NameType
  name: NameType
  nameWithType: NameType
  fullName: org.apache.commons.codec.language.bm.NameType
- uid: org.apache.commons.codec.language.bm.RuleType
  name: RuleType
  nameWithType: RuleType
  fullName: org.apache.commons.codec.language.bm.RuleType
- uid: org.apache.commons.codec.language.bm.Languages.LanguageSet
  name: Languages.LanguageSet
  nameWithType: Languages.LanguageSet
  fullName: org.apache.commons.codec.language.bm.Languages.LanguageSet
- uid: java.util.List<org.apache.commons.codec.language.bm.Rule>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: org.apache.commons.codec.language.bm.Rule
    name: Rule
    fullName: org.apache.commons.codec.language.bm.Rule
  - name: '>'
    fullName: '>'
- uid: org.apache.commons.codec.language.bm.Rule.getInstance*
  name: getInstance
  nameWithType: Rule.getInstance
  fullName: org.apache.commons.codec.language.bm.Rule.getInstance
  package: org.apache.commons.codec.language.bm
- uid: java.util.Map<java.lang.String,java.util.List<org.apache.commons.codec.language.bm.Rule>>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: org.apache.commons.codec.language.bm.Rule
    name: Rule
    fullName: org.apache.commons.codec.language.bm.Rule
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: org.apache.commons.codec.language.bm.Rule.getInstanceMap*
  name: getInstanceMap
  nameWithType: Rule.getInstanceMap
  fullName: org.apache.commons.codec.language.bm.Rule.getInstanceMap
  package: org.apache.commons.codec.language.bm
- uid: org.apache.commons.codec.language.bm.Rule.RPattern
  name: Rule.RPattern
  nameWithType: Rule.RPattern
  fullName: org.apache.commons.codec.language.bm.Rule.RPattern
- uid: org.apache.commons.codec.language.bm.Rule.getLContext*
  name: getLContext
  nameWithType: Rule.getLContext
  fullName: org.apache.commons.codec.language.bm.Rule.getLContext
  package: org.apache.commons.codec.language.bm
- uid: org.apache.commons.codec.language.bm.Rule.getPattern*
  name: getPattern
  nameWithType: Rule.getPattern
  fullName: org.apache.commons.codec.language.bm.Rule.getPattern
  package: org.apache.commons.codec.language.bm
- uid: org.apache.commons.codec.language.bm.Rule.getPhoneme*
  name: getPhoneme
  nameWithType: Rule.getPhoneme
  fullName: org.apache.commons.codec.language.bm.Rule.getPhoneme
  package: org.apache.commons.codec.language.bm
- uid: org.apache.commons.codec.language.bm.Rule.getRContext*
  name: getRContext
  nameWithType: Rule.getRContext
  fullName: org.apache.commons.codec.language.bm.Rule.getRContext
  package: org.apache.commons.codec.language.bm
- uid: java.lang.CharSequence
  spec.java:
  - uid: java.lang.CharSequence
    name: CharSequence
    fullName: java.lang.CharSequence
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.commons.codec.language.bm.Rule.patternAndContextMatches*
  name: patternAndContextMatches
  nameWithType: Rule.patternAndContextMatches
  fullName: org.apache.commons.codec.language.bm.Rule.patternAndContextMatches
  package: org.apache.commons.codec.language.bm
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.apache.commons.codec.language.bm.Rule.Phoneme
  name: Rule.Phoneme
  nameWithType: Rule.Phoneme
  fullName: org.apache.commons.codec.language.bm.Rule.Phoneme
- uid: org.apache.commons.codec.language.bm.Rule.PhonemeList
  name: Rule.PhonemeList
  nameWithType: Rule.PhonemeList
  fullName: org.apache.commons.codec.language.bm.Rule.PhonemeList
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.util.List
  name: String,List
  nameWithType: String,List
  fullName: java.lang.String,java.util.List
