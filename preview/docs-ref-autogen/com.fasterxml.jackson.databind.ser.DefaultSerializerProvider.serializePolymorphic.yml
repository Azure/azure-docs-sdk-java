### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializePolymorphic*"
fullName: "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializePolymorphic"
name: "serializePolymorphic"
nameWithType: "DefaultSerializerProvider.serializePolymorphic"
members:
- uid: "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializePolymorphic(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>,com.fasterxml.jackson.databind.jsontype.TypeSerializer)"
  fullName: "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializePolymorphic(JsonGenerator gen, Object value, JavaType rootType, JsonSerializer<Object> valueSer, TypeSerializer typeSer)"
  name: "serializePolymorphic(JsonGenerator gen, Object value, JavaType rootType, JsonSerializer<Object> valueSer, TypeSerializer typeSer)"
  nameWithType: "DefaultSerializerProvider.serializePolymorphic(JsonGenerator gen, Object value, JavaType rootType, JsonSerializer<Object> valueSer, TypeSerializer typeSer)"
  summary: "Alternate serialization call used for polymorphic types, when <xref uid=\"com.fasterxml.jackson.databind.jsontype.TypeSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeSerializer\"></xref> is already known, but the actual serializer may or may not be."
  parameters:
  - name: "gen"
    type: "<xref href=\"com.fasterxml.jackson.core.JsonGenerator?alt=com.fasterxml.jackson.core.JsonGenerator&text=JsonGenerator\" data-throw-if-not-resolved=\"False\" />"
  - name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  - name: "rootType"
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
  - name: "valueSer"
    type: "<xref href=\"com.fasterxml.jackson.databind.JsonSerializer?alt=com.fasterxml.jackson.databind.JsonSerializer&text=JsonSerializer\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "typeSer"
    type: "<xref href=\"com.fasterxml.jackson.databind.jsontype.TypeSerializer?alt=com.fasterxml.jackson.databind.jsontype.TypeSerializer&text=TypeSerializer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void serializePolymorphic(JsonGenerator gen, Object value, JavaType rootType, JsonSerializer<Object> valueSer, TypeSerializer typeSer)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
