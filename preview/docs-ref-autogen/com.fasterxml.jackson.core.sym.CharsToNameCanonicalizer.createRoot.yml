### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot*"
fullName: "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot"
name: "createRoot"
nameWithType: "CharsToNameCanonicalizer.createRoot"
members:
- uid: "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot()"
  fullName: "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot()"
  name: "createRoot()"
  nameWithType: "CharsToNameCanonicalizer.createRoot()"
  summary: "Method called to create root canonicalizer for a <xref uid=\"com.fasterxml.jackson.core.JsonFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.JsonFactory\"></xref> instance. Root instance is never used directly; its main use is for storing and sharing underlying symbol arrays as needed."
  syntax: "public static CharsToNameCanonicalizer createRoot()"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer?alt=com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer&text=CharsToNameCanonicalizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(int)"
  fullName: "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(int seed)"
  name: "createRoot(int seed)"
  nameWithType: "CharsToNameCanonicalizer.createRoot(int seed)"
  parameters:
  - name: "seed"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected static CharsToNameCanonicalizer createRoot(int seed)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer?alt=com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer&text=CharsToNameCanonicalizer\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core.sym"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
