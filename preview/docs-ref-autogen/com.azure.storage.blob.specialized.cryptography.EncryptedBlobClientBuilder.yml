### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  id: EncryptedBlobClientBuilder
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography
  children:
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.EncryptedBlobClientBuilder()
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobAsyncClient(com.azure.storage.blob.BlobAsyncClient)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobClient(com.azure.storage.blob.BlobClient)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobName(java.lang.String)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobAsyncClient()
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobClient()
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.configuration(com.azure.core.util.Configuration)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.connectionString(java.lang.String)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.containerName(java.lang.String)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential(com.azure.core.credential.TokenCredential)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.customerProvidedKey(com.azure.storage.blob.models.CustomerProvidedKey)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint(java.lang.String)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.getDefaultHttpLogOptions()
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpClient(com.azure.core.http.HttpClient)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.key(com.azure.core.cryptography.AsyncKeyEncryptionKey,java.lang.String)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.keyResolver(com.azure.core.cryptography.AsyncKeyEncryptionKeyResolver)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.sasToken(java.lang.String)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.serviceVersion(com.azure.storage.blob.BlobServiceVersion)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.setAnonymousAccess()
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.snapshot(java.lang.String)
  - com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.versionId(java.lang.String)
  langs:
  - java
  name: EncryptedBlobClientBuilder
  nameWithType: EncryptedBlobClientBuilder
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  type: Class
  package: com.azure.storage.blob.specialized.cryptography
  summary: >-
    This class provides a fluent builder API to help aid the configuration and instantiation of Storage Blob clients.


    The following information must be provided on this builder:

     *  Endpoint set through <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint(java.lang.String)" data-throw-if-not-resolved="false">#endpoint(String)</xref>, including the container name and blob name, in the format of `https://{accountName}.blob.core.windows.net/{containerName}/{blobName}`.
     *  Container and blob name if not specified in the <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint(java.lang.String)" data-throw-if-not-resolved="false">#endpoint(String)</xref>, set through <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.containerName(java.lang.String)" data-throw-if-not-resolved="false">#containerName(String)</xref> and <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobName(java.lang.String)" data-throw-if-not-resolved="false">#blobName(String)</xref> respectively.
     *  Credential set through <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)" data-throw-if-not-resolved="false">#credential(StorageSharedKeyCredential)</xref> , <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.sasToken(java.lang.String)" data-throw-if-not-resolved="false">#sasToken(String)</xref>, or <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.connectionString(java.lang.String)" data-throw-if-not-resolved="false">#connectionString(String)</xref> if the container is not publicly accessible.
     *  Key and key wrapping algorithm (for encryption) and/or key resolver (for decryption) must be specified through <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.key(com.azure.core.cryptography.AsyncKeyEncryptionKey,java.lang.String)" data-throw-if-not-resolved="false">#key(AsyncKeyEncryptionKey, String)</xref> and <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.keyResolver(com.azure.core.cryptography.AsyncKeyEncryptionKeyResolver)" data-throw-if-not-resolved="false">#keyResolver(AsyncKeyEncryptionKeyResolver)</xref>

    Once all the configurations are set on this builder use the following mapping to construct the given client:

     *  <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobClient()" data-throw-if-not-resolved="false">EncryptedBlobClientBuilder#buildEncryptedBlobClient()</xref> \- <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient" data-throw-if-not-resolved="false">EncryptedBlobClient</xref>
     *  <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobAsyncClient()" data-throw-if-not-resolved="false">EncryptedBlobClientBuilder#buildEncryptedBlobAsyncClient()</xref> \- <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient" data-throw-if-not-resolved="false">EncryptedBlobAsyncClient</xref>
  syntax:
    content: public final class EncryptedBlobClientBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.EncryptedBlobClientBuilder()
  id: EncryptedBlobClientBuilder()
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: EncryptedBlobClientBuilder()
  nameWithType: EncryptedBlobClientBuilder.EncryptedBlobClientBuilder()
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.EncryptedBlobClientBuilder()
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.EncryptedBlobClientBuilder*
  type: Constructor
  package: com.azure.storage.blob.specialized.cryptography
  summary: Creates a new instance of the EncryptedBlobClientBuilder
  syntax:
    content: public EncryptedBlobClientBuilder()
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  id: addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: addPolicy(HttpPipelinePolicy pipelinePolicy)
  nameWithType: EncryptedBlobClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.addPolicy*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Adds a <xref uid="com.azure.core.http.policy.HttpPipelinePolicy" data-throw-if-not-resolved="false">HttpPipelinePolicy</xref> to apply on each request sent. The policy will be added after the retry policy. If the method is called multiple times, all policies will be added and their order preserved.
  syntax:
    content: public EncryptedBlobClientBuilder addPolicy(HttpPipelinePolicy pipelinePolicy)
    parameters:
    - id: pipelinePolicy
      type: com.azure.core.http.policy.HttpPipelinePolicy
      description: a pipeline policy
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobAsyncClient(com.azure.storage.blob.BlobAsyncClient)
  id: blobAsyncClient(com.azure.storage.blob.BlobAsyncClient)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: blobAsyncClient(BlobAsyncClient blobAsyncClient)
  nameWithType: EncryptedBlobClientBuilder.blobAsyncClient(BlobAsyncClient blobAsyncClient)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobAsyncClient(BlobAsyncClient blobAsyncClient)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobAsyncClient*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: >-
    Configures the builder based on the passed <xref uid="com.azure.storage.blob.BlobAsyncClient" data-throw-if-not-resolved="false">BlobAsyncClient</xref>. This will set the <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref>, <xref uid="" data-throw-if-not-resolved="false">URL</xref> and <xref uid="com.azure.storage.blob.BlobServiceVersion" data-throw-if-not-resolved="false">BlobServiceVersion</xref> that are used to interact with the service. Note that the underlying pipeline should not already be configured for encryption/decryption.


    If `pipeline` is set, all other settings are ignored, aside from <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint(java.lang.String)" data-throw-if-not-resolved="false">endpoint</xref> and <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.serviceVersion(com.azure.storage.blob.BlobServiceVersion)" data-throw-if-not-resolved="false">serviceVersion</xref>.


    Note that for security reasons, this method does not copy over the <xref uid="com.azure.storage.blob.models.CustomerProvidedKey" data-throw-if-not-resolved="false">CustomerProvidedKey</xref> and encryption scope properties from the provided client. To set CPK, please use <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.customerProvidedKey(com.azure.storage.blob.models.CustomerProvidedKey)" data-throw-if-not-resolved="false">#customerProvidedKey(CustomerProvidedKey)</xref>.
  syntax:
    content: public EncryptedBlobClientBuilder blobAsyncClient(BlobAsyncClient blobAsyncClient)
    parameters:
    - id: blobAsyncClient
      type: com.azure.storage.blob.BlobAsyncClient
      description: BlobAsyncClient used to configure the builder.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobClient(com.azure.storage.blob.BlobClient)
  id: blobClient(com.azure.storage.blob.BlobClient)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: blobClient(BlobClient blobClient)
  nameWithType: EncryptedBlobClientBuilder.blobClient(BlobClient blobClient)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobClient(BlobClient blobClient)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobClient*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: >-
    Configures the builder based on the passed <xref uid="com.azure.storage.blob.BlobClient" data-throw-if-not-resolved="false">BlobClient</xref>. This will set the <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref>, <xref uid="" data-throw-if-not-resolved="false">URL</xref> and <xref uid="com.azure.storage.blob.BlobServiceVersion" data-throw-if-not-resolved="false">BlobServiceVersion</xref> that are used to interact with the service. Note that the underlying pipeline should not already be configured for encryption/decryption.


    If `pipeline` is set, all other settings are ignored, aside from <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint(java.lang.String)" data-throw-if-not-resolved="false">endpoint</xref> and <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.serviceVersion(com.azure.storage.blob.BlobServiceVersion)" data-throw-if-not-resolved="false">serviceVersion</xref>.


    Note that for security reasons, this method does not copy over the <xref uid="com.azure.storage.blob.models.CustomerProvidedKey" data-throw-if-not-resolved="false">CustomerProvidedKey</xref> and encryption scope properties from the provided client. To set CPK, please use <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.customerProvidedKey(com.azure.storage.blob.models.CustomerProvidedKey)" data-throw-if-not-resolved="false">#customerProvidedKey(CustomerProvidedKey)</xref>.
  syntax:
    content: public EncryptedBlobClientBuilder blobClient(BlobClient blobClient)
    parameters:
    - id: blobClient
      type: com.azure.storage.blob.BlobClient
      description: BlobClient used to configure the builder.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobName(java.lang.String)
  id: blobName(java.lang.String)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: blobName(String blobName)
  nameWithType: EncryptedBlobClientBuilder.blobName(String blobName)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobName(String blobName)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobName*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the name of the blob.
  syntax:
    content: public EncryptedBlobClientBuilder blobName(String blobName)
    parameters:
    - id: blobName
      type: java.lang.String
      description: Name of the blob.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobAsyncClient()
  id: buildEncryptedBlobAsyncClient()
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: buildEncryptedBlobAsyncClient()
  nameWithType: EncryptedBlobClientBuilder.buildEncryptedBlobAsyncClient()
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobAsyncClient()
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobAsyncClient*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: >-
    Creates a <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient" data-throw-if-not-resolved="false">EncryptedBlobAsyncClient</xref> based on options set in the Builder.


    **Code Samples**


    ```java

    EncryptedBlobClient client = new EncryptedBlobClientBuilder()
         .key(key, keyWrapAlgorithm)
         .keyResolver(keyResolver)
         .connectionString(connectionString)
         .buildEncryptedBlobClient();
    ```
  syntax:
    content: public EncryptedBlobAsyncClient buildEncryptedBlobAsyncClient()
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient
      description: a <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient" data-throw-if-not-resolved="false">EncryptedBlobAsyncClient</xref> created from the configurations in this builder.
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobClient()
  id: buildEncryptedBlobClient()
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: buildEncryptedBlobClient()
  nameWithType: EncryptedBlobClientBuilder.buildEncryptedBlobClient()
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobClient()
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobClient*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: >-
    Creates a <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient" data-throw-if-not-resolved="false">EncryptedBlobClient</xref> based on options set in the Builder.


    **Code Samples**


    ```java

    EncryptedBlobAsyncClient client = new EncryptedBlobClientBuilder()
         .key(key, keyWrapAlgorithm)
         .keyResolver(keyResolver)
         .connectionString(connectionString)
         .buildEncryptedBlobAsyncClient();
    ```
  syntax:
    content: public EncryptedBlobClient buildEncryptedBlobClient()
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient
      description: a <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient" data-throw-if-not-resolved="false">EncryptedBlobClient</xref> created from the configurations in this builder.
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.configuration(com.azure.core.util.Configuration)
  id: configuration(com.azure.core.util.Configuration)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: configuration(Configuration configuration)
  nameWithType: EncryptedBlobClientBuilder.configuration(Configuration configuration)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.configuration(Configuration configuration)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.configuration*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the configuration object used to retrieve environment configuration values during building of the client.
  syntax:
    content: public EncryptedBlobClientBuilder configuration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.azure.core.util.Configuration
      description: Configuration store used to retrieve environment configurations.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.connectionString(java.lang.String)
  id: connectionString(java.lang.String)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: connectionString(String connectionString)
  nameWithType: EncryptedBlobClientBuilder.connectionString(String connectionString)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.connectionString(String connectionString)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.connectionString*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the connection string to connect to the service.
  syntax:
    content: public EncryptedBlobClientBuilder connectionString(String connectionString)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: Connection string of the storage account.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.containerName(java.lang.String)
  id: containerName(java.lang.String)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: containerName(String containerName)
  nameWithType: EncryptedBlobClientBuilder.containerName(String containerName)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.containerName(String containerName)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.containerName*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the name of the container that contains the blob.
  syntax:
    content: public EncryptedBlobClientBuilder containerName(String containerName)
    parameters:
    - id: containerName
      type: java.lang.String
      description: >-
        Name of the container. If the value <code>null</code> or empty the root container, <code>$root</code>,
         will be used.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential(com.azure.core.credential.TokenCredential)
  id: credential(com.azure.core.credential.TokenCredential)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: credential(TokenCredential credential)
  nameWithType: EncryptedBlobClientBuilder.credential(TokenCredential credential)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential(TokenCredential credential)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the <xref uid="com.azure.core.credential.TokenCredential" data-throw-if-not-resolved="false">TokenCredential</xref> used to authorize requests sent to the service.
  syntax:
    content: public EncryptedBlobClientBuilder credential(TokenCredential credential)
    parameters:
    - id: credential
      type: com.azure.core.credential.TokenCredential
      description: <xref uid="com.azure.core.credential.TokenCredential" data-throw-if-not-resolved="false">TokenCredential</xref>.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)
  id: credential(com.azure.storage.common.StorageSharedKeyCredential)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: credential(StorageSharedKeyCredential credential)
  nameWithType: EncryptedBlobClientBuilder.credential(StorageSharedKeyCredential credential)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential(StorageSharedKeyCredential credential)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the <xref uid="com.azure.storage.common.StorageSharedKeyCredential" data-throw-if-not-resolved="false">StorageSharedKeyCredential</xref> used to authorize requests sent to the service.
  syntax:
    content: public EncryptedBlobClientBuilder credential(StorageSharedKeyCredential credential)
    parameters:
    - id: credential
      type: com.azure.storage.common.StorageSharedKeyCredential
      description: <xref uid="com.azure.storage.common.StorageSharedKeyCredential" data-throw-if-not-resolved="false">StorageSharedKeyCredential</xref>.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.customerProvidedKey(com.azure.storage.blob.models.CustomerProvidedKey)
  id: customerProvidedKey(com.azure.storage.blob.models.CustomerProvidedKey)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: customerProvidedKey(CustomerProvidedKey customerProvidedKey)
  nameWithType: EncryptedBlobClientBuilder.customerProvidedKey(CustomerProvidedKey customerProvidedKey)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.customerProvidedKey(CustomerProvidedKey customerProvidedKey)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.customerProvidedKey*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the <xref uid="com.azure.storage.blob.models.CustomerProvidedKey" data-throw-if-not-resolved="false">customer provided key</xref> that is used to encrypt blob contents on the server.
  syntax:
    content: public EncryptedBlobClientBuilder customerProvidedKey(CustomerProvidedKey customerProvidedKey)
    parameters:
    - id: customerProvidedKey
      type: com.azure.storage.blob.models.CustomerProvidedKey
      description: <xref uid="com.azure.storage.blob.models.CustomerProvidedKey" data-throw-if-not-resolved="false">CustomerProvidedKey</xref>
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint(java.lang.String)
  id: endpoint(java.lang.String)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: endpoint(String endpoint)
  nameWithType: EncryptedBlobClientBuilder.endpoint(String endpoint)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint(String endpoint)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: >-
    Sets the service endpoint, additionally parses it for information (SAS token, container name, blob name)


    If the endpoint is to a blob in the root container, this method will fail as it will interpret the blob name as the container name. With only one path element, it is impossible to distinguish between a container name and a blob in the root container, so it is assumed to be the container name as this is much more common. When working with blobs in the root container, it is best to set the endpoint to the account url and specify the blob name separately using the <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobName(java.lang.String)" data-throw-if-not-resolved="false">blobName</xref> method.
  syntax:
    content: public EncryptedBlobClientBuilder endpoint(String endpoint)
    parameters:
    - id: endpoint
      type: java.lang.String
      description: URL of the service
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.getDefaultHttpLogOptions()
  id: getDefaultHttpLogOptions()
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: getDefaultHttpLogOptions()
  nameWithType: EncryptedBlobClientBuilder.getDefaultHttpLogOptions()
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.getDefaultHttpLogOptions()
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.getDefaultHttpLogOptions*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Gets the default Storage whitelist log headers and query parameters.
  syntax:
    content: public static HttpLogOptions getDefaultHttpLogOptions()
    return:
      type: com.azure.core.http.policy.HttpLogOptions
      description: the default http log options.
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpClient(com.azure.core.http.HttpClient)
  id: httpClient(com.azure.core.http.HttpClient)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: httpClient(HttpClient httpClient)
  nameWithType: EncryptedBlobClientBuilder.httpClient(HttpClient httpClient)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpClient(HttpClient httpClient)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpClient*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the <xref uid="com.azure.core.http.HttpClient" data-throw-if-not-resolved="false">HttpClient</xref> to use for sending a receiving requests to and from the service.
  syntax:
    content: public EncryptedBlobClientBuilder httpClient(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: com.azure.core.http.HttpClient
      description: HttpClient to use for requests.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  id: httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: httpLogOptions(HttpLogOptions logOptions)
  nameWithType: EncryptedBlobClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpLogOptions*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the <xref uid="com.azure.core.http.policy.HttpLogOptions" data-throw-if-not-resolved="false">HttpLogOptions</xref> for service requests.
  syntax:
    content: public EncryptedBlobClientBuilder httpLogOptions(HttpLogOptions logOptions)
    parameters:
    - id: logOptions
      type: com.azure.core.http.policy.HttpLogOptions
      description: The logging configuration to use when sending and receiving HTTP requests/responses.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.key(com.azure.core.cryptography.AsyncKeyEncryptionKey,java.lang.String)
  id: key(com.azure.core.cryptography.AsyncKeyEncryptionKey,java.lang.String)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: key(AsyncKeyEncryptionKey key, String keyWrapAlgorithm)
  nameWithType: EncryptedBlobClientBuilder.key(AsyncKeyEncryptionKey key, String keyWrapAlgorithm)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.key(AsyncKeyEncryptionKey key, String keyWrapAlgorithm)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.key*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the encryption key parameters for the client
  syntax:
    content: public EncryptedBlobClientBuilder key(AsyncKeyEncryptionKey key, String keyWrapAlgorithm)
    parameters:
    - id: key
      type: com.azure.core.cryptography.AsyncKeyEncryptionKey
      description: An object of type <xref uid="com.azure.core.cryptography.AsyncKeyEncryptionKey" data-throw-if-not-resolved="false">AsyncKeyEncryptionKey</xref> that is used to wrap/unwrap the content encryption key
    - id: keyWrapAlgorithm
      type: java.lang.String
      description: The <xref uid="java.lang.String" data-throw-if-not-resolved="false">String</xref> used to wrap the key.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.keyResolver(com.azure.core.cryptography.AsyncKeyEncryptionKeyResolver)
  id: keyResolver(com.azure.core.cryptography.AsyncKeyEncryptionKeyResolver)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: keyResolver(AsyncKeyEncryptionKeyResolver keyResolver)
  nameWithType: EncryptedBlobClientBuilder.keyResolver(AsyncKeyEncryptionKeyResolver keyResolver)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.keyResolver(AsyncKeyEncryptionKeyResolver keyResolver)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.keyResolver*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the encryption parameters for this client
  syntax:
    content: public EncryptedBlobClientBuilder keyResolver(AsyncKeyEncryptionKeyResolver keyResolver)
    parameters:
    - id: keyResolver
      type: com.azure.core.cryptography.AsyncKeyEncryptionKeyResolver
      description: The key resolver used to select the correct key for decrypting existing blobs.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  id: pipeline(com.azure.core.http.HttpPipeline)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: pipeline(HttpPipeline httpPipeline)
  nameWithType: EncryptedBlobClientBuilder.pipeline(HttpPipeline httpPipeline)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.pipeline(HttpPipeline httpPipeline)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.pipeline*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: >-
    Sets the <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref> to use for the service client, and adds a decryption policy if one is not present. Note that the underlying pipeline should not already be configured for encryption/decryption.


    If `pipeline` is set, all other settings are ignored, aside from <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint(java.lang.String)" data-throw-if-not-resolved="false">endpoint</xref> and <xref uid="com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.customerProvidedKey(com.azure.storage.blob.models.CustomerProvidedKey)" data-throw-if-not-resolved="false">customer provided key</xref>.
  syntax:
    content: public EncryptedBlobClientBuilder pipeline(HttpPipeline httpPipeline)
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: HttpPipeline to use for sending service requests and receiving responses.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)
  id: retryOptions(com.azure.storage.common.policy.RequestRetryOptions)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: retryOptions(RequestRetryOptions retryOptions)
  nameWithType: EncryptedBlobClientBuilder.retryOptions(RequestRetryOptions retryOptions)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.retryOptions(RequestRetryOptions retryOptions)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.retryOptions*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the request retry options for all the requests made through the client.
  syntax:
    content: public EncryptedBlobClientBuilder retryOptions(RequestRetryOptions retryOptions)
    parameters:
    - id: retryOptions
      type: com.azure.storage.common.policy.RequestRetryOptions
      description: <xref uid="com.azure.storage.common.policy.RequestRetryOptions" data-throw-if-not-resolved="false">RequestRetryOptions</xref>.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.sasToken(java.lang.String)
  id: sasToken(java.lang.String)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: sasToken(String sasToken)
  nameWithType: EncryptedBlobClientBuilder.sasToken(String sasToken)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.sasToken(String sasToken)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.sasToken*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the SAS token used to authorize requests sent to the service.
  syntax:
    content: public EncryptedBlobClientBuilder sasToken(String sasToken)
    parameters:
    - id: sasToken
      type: java.lang.String
      description: The SAS token to use for authenticating requests.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.serviceVersion(com.azure.storage.blob.BlobServiceVersion)
  id: serviceVersion(com.azure.storage.blob.BlobServiceVersion)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: serviceVersion(BlobServiceVersion version)
  nameWithType: EncryptedBlobClientBuilder.serviceVersion(BlobServiceVersion version)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.serviceVersion(BlobServiceVersion version)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.serviceVersion*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: >-
    Sets the <xref uid="com.azure.storage.blob.BlobServiceVersion" data-throw-if-not-resolved="false">BlobServiceVersion</xref> that is used when making API requests.


    If a service version is not provided, the service version that will be used will be the latest known service version based on the version of the client library being used. If no service version is specified, updating to a newer version of the client library will have the result of potentially moving to a newer service version.


    Targeting a specific service version may also mean that the service will return an error for newer APIs.
  syntax:
    content: public EncryptedBlobClientBuilder serviceVersion(BlobServiceVersion version)
    parameters:
    - id: version
      type: com.azure.storage.blob.BlobServiceVersion
      description: <xref uid="com.azure.storage.blob.BlobServiceVersion" data-throw-if-not-resolved="false">BlobServiceVersion</xref> of the service to be used when making requests.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.setAnonymousAccess()
  id: setAnonymousAccess()
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: setAnonymousAccess()
  nameWithType: EncryptedBlobClientBuilder.setAnonymousAccess()
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.setAnonymousAccess()
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.setAnonymousAccess*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: >-
    Clears the credential used to authorize the request.


    This is for blobs that are publicly accessible.
  syntax:
    content: public EncryptedBlobClientBuilder setAnonymousAccess()
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.snapshot(java.lang.String)
  id: snapshot(java.lang.String)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: snapshot(String snapshot)
  nameWithType: EncryptedBlobClientBuilder.snapshot(String snapshot)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.snapshot(String snapshot)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.snapshot*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the snapshot identifier of the blob.
  syntax:
    content: public EncryptedBlobClientBuilder snapshot(String snapshot)
    parameters:
    - id: snapshot
      type: java.lang.String
      description: Snapshot identifier for the blob.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.versionId(java.lang.String)
  id: versionId(java.lang.String)
  artifact: com.azure:azure-storage-blob-cryptography:12.8.0-beta.1
  parent: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
  langs:
  - java
  name: versionId(String versionId)
  nameWithType: EncryptedBlobClientBuilder.versionId(String versionId)
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.versionId(String versionId)
  overload: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.versionId*
  type: Method
  package: com.azure.storage.blob.specialized.cryptography
  summary: Sets the version identifier of the blob.
  syntax:
    content: public EncryptedBlobClientBuilder versionId(String versionId)
    parameters:
    - id: versionId
      type: java.lang.String
      description: Version identifier for the blob, pass <code>null</code> to interact with the latest blob version.
    return:
      type: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder
      description: the updated EncryptedBlobClientBuilder object
references:
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.EncryptedBlobClientBuilder*
  name: EncryptedBlobClientBuilder
  nameWithType: EncryptedBlobClientBuilder.EncryptedBlobClientBuilder
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.EncryptedBlobClientBuilder
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient
  name: EncryptedBlobClient
  nameWithType: EncryptedBlobClient
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobClient*
  name: buildEncryptedBlobClient
  nameWithType: EncryptedBlobClientBuilder.buildEncryptedBlobClient
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobClient
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient
  name: EncryptedBlobAsyncClient
  nameWithType: EncryptedBlobAsyncClient
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobAsyncClient*
  name: buildEncryptedBlobAsyncClient
  nameWithType: EncryptedBlobClientBuilder.buildEncryptedBlobAsyncClient
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobAsyncClient
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.core.cryptography.AsyncKeyEncryptionKey
  spec.java:
  - uid: com.azure.core.cryptography.AsyncKeyEncryptionKey
    name: AsyncKeyEncryptionKey
    fullName: com.azure.core.cryptography.AsyncKeyEncryptionKey
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.key*
  name: key
  nameWithType: EncryptedBlobClientBuilder.key
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.key
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.core.cryptography.AsyncKeyEncryptionKeyResolver
  spec.java:
  - uid: com.azure.core.cryptography.AsyncKeyEncryptionKeyResolver
    name: AsyncKeyEncryptionKeyResolver
    fullName: com.azure.core.cryptography.AsyncKeyEncryptionKeyResolver
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.keyResolver*
  name: keyResolver
  nameWithType: EncryptedBlobClientBuilder.keyResolver
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.keyResolver
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.common.StorageSharedKeyCredential
  spec.java:
  - uid: com.azure.storage.common.StorageSharedKeyCredential
    name: StorageSharedKeyCredential
    fullName: com.azure.storage.common.StorageSharedKeyCredential
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential*
  name: credential
  nameWithType: EncryptedBlobClientBuilder.credential
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.core.credential.TokenCredential
  spec.java:
  - uid: com.azure.core.credential.TokenCredential
    name: TokenCredential
    fullName: com.azure.core.credential.TokenCredential
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.sasToken*
  name: sasToken
  nameWithType: EncryptedBlobClientBuilder.sasToken
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.sasToken
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.setAnonymousAccess*
  name: setAnonymousAccess
  nameWithType: EncryptedBlobClientBuilder.setAnonymousAccess
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.setAnonymousAccess
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.connectionString*
  name: connectionString
  nameWithType: EncryptedBlobClientBuilder.connectionString
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.connectionString
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint*
  name: endpoint
  nameWithType: EncryptedBlobClientBuilder.endpoint
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.containerName*
  name: containerName
  nameWithType: EncryptedBlobClientBuilder.containerName
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.containerName
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobName*
  name: blobName
  nameWithType: EncryptedBlobClientBuilder.blobName
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobName
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.snapshot*
  name: snapshot
  nameWithType: EncryptedBlobClientBuilder.snapshot
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.snapshot
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.versionId*
  name: versionId
  nameWithType: EncryptedBlobClientBuilder.versionId
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.versionId
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.core.http.HttpClient
  spec.java:
  - uid: com.azure.core.http.HttpClient
    name: HttpClient
    fullName: com.azure.core.http.HttpClient
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpClient*
  name: httpClient
  nameWithType: EncryptedBlobClientBuilder.httpClient
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpClient
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  spec.java:
  - uid: com.azure.core.http.policy.HttpPipelinePolicy
    name: HttpPipelinePolicy
    fullName: com.azure.core.http.policy.HttpPipelinePolicy
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.addPolicy*
  name: addPolicy
  nameWithType: EncryptedBlobClientBuilder.addPolicy
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.addPolicy
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.core.http.policy.HttpLogOptions
  spec.java:
  - uid: com.azure.core.http.policy.HttpLogOptions
    name: HttpLogOptions
    fullName: com.azure.core.http.policy.HttpLogOptions
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpLogOptions*
  name: httpLogOptions
  nameWithType: EncryptedBlobClientBuilder.httpLogOptions
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpLogOptions
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.getDefaultHttpLogOptions*
  name: getDefaultHttpLogOptions
  nameWithType: EncryptedBlobClientBuilder.getDefaultHttpLogOptions
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.getDefaultHttpLogOptions
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.core.util.Configuration
  spec.java:
  - uid: com.azure.core.util.Configuration
    name: Configuration
    fullName: com.azure.core.util.Configuration
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.configuration*
  name: configuration
  nameWithType: EncryptedBlobClientBuilder.configuration
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.configuration
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.common.policy.RequestRetryOptions
  spec.java:
  - uid: com.azure.storage.common.policy.RequestRetryOptions
    name: RequestRetryOptions
    fullName: com.azure.storage.common.policy.RequestRetryOptions
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.retryOptions*
  name: retryOptions
  nameWithType: EncryptedBlobClientBuilder.retryOptions
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.retryOptions
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.pipeline*
  name: pipeline
  nameWithType: EncryptedBlobClientBuilder.pipeline
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.pipeline
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.BlobServiceVersion
  spec.java:
  - uid: com.azure.storage.blob.BlobServiceVersion
    name: BlobServiceVersion
    fullName: com.azure.storage.blob.BlobServiceVersion
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.serviceVersion*
  name: serviceVersion
  nameWithType: EncryptedBlobClientBuilder.serviceVersion
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.serviceVersion
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.models.CustomerProvidedKey
  spec.java:
  - uid: com.azure.storage.blob.models.CustomerProvidedKey
    name: CustomerProvidedKey
    fullName: com.azure.storage.blob.models.CustomerProvidedKey
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.customerProvidedKey*
  name: customerProvidedKey
  nameWithType: EncryptedBlobClientBuilder.customerProvidedKey
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.customerProvidedKey
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.BlobClient
  spec.java:
  - uid: com.azure.storage.blob.BlobClient
    name: BlobClient
    fullName: com.azure.storage.blob.BlobClient
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobClient*
  name: blobClient
  nameWithType: EncryptedBlobClientBuilder.blobClient
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobClient
  package: com.azure.storage.blob.specialized.cryptography
- uid: com.azure.storage.blob.BlobAsyncClient
  spec.java:
  - uid: com.azure.storage.blob.BlobAsyncClient
    name: BlobAsyncClient
    fullName: com.azure.storage.blob.BlobAsyncClient
- uid: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobAsyncClient*
  name: blobAsyncClient
  nameWithType: EncryptedBlobClientBuilder.blobAsyncClient
  fullName: com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobAsyncClient
  package: com.azure.storage.blob.specialized.cryptography
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
