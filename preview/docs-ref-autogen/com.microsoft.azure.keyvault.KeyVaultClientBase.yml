### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase
  id: KeyVaultClientBase
  parent: com.microsoft.azure.keyvault
  children:
  - com.microsoft.azure.keyvault.KeyVaultClientBase.acceptLanguage()
  - com.microsoft.azure.keyvault.KeyVaultClientBase.apiVersion()
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificate(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateAsync(String,String,final ServiceCallback<BackupCertificateResult>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupKey(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync(String,String,final ServiceCallback<BackupKeyResult>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecret(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync(String,String,final ServiceCallback<BackupSecretResult>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccount(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountAsync(String,String,final ServiceCallback<BackupStorageResult>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateOperation>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String,String,final ServiceCallback<CertificateOperation>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createKey(String,String,JsonWebKeyType)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createKey(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String,String,JsonWebKeyType)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String,String,JsonWebKeyType,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync(String,String,JsonWebKeyType)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.decrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.decryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificate(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContacts(String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync(String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsWithServiceResponseAsync(String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuer(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperation(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKey(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinition(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionAsync(String,String,String,final ServiceCallback<DeletedSasDefinitionBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecret(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccount(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountAsync(String,String,final ServiceCallback<DeletedStorageBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.encrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.encryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.generateClientRequestId()
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getAzureClient()
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificate(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContacts(String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync(String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsWithServiceResponseAsync(String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuer(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String,final Integer,final ListOperationCallback<CertificateIssuerItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String,final ListOperationCallback<CertificateIssuerItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync(final String,final ServiceFuture<List<CertificateIssuerItem>>,final ListOperationCallback<CertificateIssuerItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperation(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicy(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync(String,String,final ServiceCallback<CertificatePolicy>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates(final String,final Integer,final Boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String,final Integer,final Boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String,final Integer,final Boolean,final ListOperationCallback<CertificateItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String,final ListOperationCallback<CertificateItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync(final String,final Integer,final Boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String,final String,final Integer,final ListOperationCallback<CertificateItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String,final String,final ListOperationCallback<CertificateItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificate(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates(final String,final Integer,final Boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String,final Integer,final Boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String,final Integer,final Boolean,final ListOperationCallback<DeletedCertificateItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String,final ListOperationCallback<DeletedCertificateItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync(final String,final ServiceFuture<List<DeletedCertificateItem>>,final ListOperationCallback<DeletedCertificateItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync(final String,final Integer,final Boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKey(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String,final Integer,final ListOperationCallback<DeletedKeyItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String,final ListOperationCallback<DeletedKeyItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync(final String,final ServiceFuture<List<DeletedKeyItem>>,final ListOperationCallback<DeletedKeyItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinition(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionAsync(String,String,String,final ServiceCallback<DeletedSasDefinitionBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitions(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitions(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String,final String,final Integer,final ListOperationCallback<DeletedSasDefinitionItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String,final String,final ListOperationCallback<DeletedSasDefinitionItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextAsync(final String,final ServiceFuture<List<DeletedSasDefinitionItem>>,final ListOperationCallback<DeletedSasDefinitionItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecret(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String,final Integer,final ListOperationCallback<DeletedSecretItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String,final ListOperationCallback<DeletedSecretItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync(final String,final ServiceFuture<List<DeletedSecretItem>>,final ListOperationCallback<DeletedSecretItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccount(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountAsync(String,String,final ServiceCallback<DeletedStorageBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccounts(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccounts(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync(final String,final Integer,final ListOperationCallback<DeletedStorageAccountItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync(final String,final ListOperationCallback<DeletedStorageAccountItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextAsync(final String,final ServiceFuture<List<DeletedStorageAccountItem>>,final ListOperationCallback<DeletedStorageAccountItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKey(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String,final Integer,final ListOperationCallback<KeyItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String,final ListOperationCallback<KeyItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String,final String,final Integer,final ListOperationCallback<KeyItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String,final String,final ListOperationCallback<KeyItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinition(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionAsync(String,String,String,final ServiceCallback<SasDefinitionBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitions(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitions(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync(final String,final String,final Integer,final ListOperationCallback<SasDefinitionItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync(final String,final String,final ListOperationCallback<SasDefinitionItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextAsync(final String,final ServiceFuture<List<SasDefinitionItem>>,final ListOperationCallback<SasDefinitionItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecret(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String,final Integer,final ListOperationCallback<SecretItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String,final ListOperationCallback<SecretItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String,final String,final Integer,final ListOperationCallback<SecretItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String,final String,final ListOperationCallback<SecretItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync(final String,final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync(final String,final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccount(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountAsync(String,String,final ServiceCallback<StorageBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccounts(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccounts(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync(final String,final Integer,final ListOperationCallback<StorageAccountItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync(final String,final ListOperationCallback<StorageAccountItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNext(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextAsync(final String,final ServiceFuture<List<StorageAccountItem>>,final ListOperationCallback<StorageAccountItem>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync(final String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync(final String,final Integer)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importKey(String,String,JsonWebKey)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importKey(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String,String,JsonWebKey)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String,String,JsonWebKey,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync(String,String,JsonWebKey)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.longRunningOperationRetryTimeout()
  - com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate(String,String,List<byte[]>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String,String,List<byte[]>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String,String,List<byte[]>,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificate(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKey(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecret(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccount(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificate(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync(String,String,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKey(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync(String,String,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinition(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionAsync(String,String,String,final ServiceCallback<SasDefinitionBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecret(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync(String,String,final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccount(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountAsync(String,String,final ServiceCallback<StorageBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKey(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyAsync(String,String,String,final ServiceCallback<StorageBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restClient()
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificate(String,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateAsync(String,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateAsync(String,byte [],final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateWithServiceResponseAsync(String,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKey(String,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync(String,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync(String,byte [],final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyWithServiceResponseAsync(String,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecret(String,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync(String,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync(String,byte [],final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretWithServiceResponseAsync(String,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccount(String,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountAsync(String,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountAsync(String,byte [],final ServiceCallback<StorageBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountWithServiceResponseAsync(String,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContacts(String,Contacts)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync(String,Contacts)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync(String,Contacts,final ServiceCallback<Contacts>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsWithServiceResponseAsync(String,Contacts)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String,String,String,final ServiceCallback<IssuerBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinition(String,String,String,String,SasTokenType,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinition(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync(String,String,String,String,SasTokenType,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync(String,String,String,String,SasTokenType,String,final ServiceCallback<SasDefinitionBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>,final ServiceCallback<SasDefinitionBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync(String,String,String,String,SasTokenType,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret(String,String,String,Map<String, String>,String,SecretAttributes)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes,final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccount(String,String,String,String,boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccount(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync(String,String,String,String,boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync(String,String,String,String,boolean,final ServiceCallback<StorageBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>,final ServiceCallback<StorageBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountWithServiceResponseAsync(String,String,String,String,boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountWithServiceResponseAsync(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.sign(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.signWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperation(String,String,boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync(String,String,boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync(String,String,boolean,final ServiceCallback<CertificateOperation>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationWithServiceResponseAsync(String,String,boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicy(String,String,CertificatePolicy)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync(String,String,CertificatePolicy)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync(String,String,CertificatePolicy,final ServiceCallback<CertificatePolicy>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyWithServiceResponseAsync(String,String,CertificatePolicy)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinition(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinition(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync(String,String,String,final ServiceCallback<SasDefinitionBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>,final ServiceCallback<SasDefinitionBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret(String,String,String,String,SecretAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>,final ServiceCallback<SecretBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccount(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccount(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync(String,String,final ServiceCallback<StorageBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>,final ServiceCallback<StorageBundle>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync(String,String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.userAgent()
  - com.microsoft.azure.keyvault.KeyVaultClientBase.verify(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [],final ServiceCallback<KeyVerifyResult>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.verifyWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.withAcceptLanguage(String)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.withGenerateClientRequestId(boolean)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.withLongRunningOperationRetryTimeout(int)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  - com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  - com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: KeyVaultClientBase
  nameWithType: KeyVaultClientBase
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase
  type: Interface
  source:
    remote: &o0
      path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
      branch: master
      repo: https://github.com/Azure/azure-sdk-for-java
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 70
  package: com.microsoft.azure.keyvault
  summary: "<p>The interface for KeyVaultClientBase class. </p>"
  syntax: &o1
    content: public interface KeyVaultClientBase
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.acceptLanguage()
  id: acceptLanguage()
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: acceptLanguage()
  nameWithType: KeyVaultClientBase.acceptLanguage()
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.acceptLanguage()
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.acceptLanguage*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 103
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets Gets or sets the preferred language for the response..</p>\r\n<p></p>"
  syntax:
    content: public String acceptLanguage()
    return:
      type: "26831127"
      description: <p>the acceptLanguage value. </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.apiVersion()
  id: apiVersion()
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: apiVersion()
  nameWithType: KeyVaultClientBase.apiVersion()
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.apiVersion()
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.apiVersion*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 96
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets Client API version..</p>\r\n<p></p>"
  syntax:
    content: public String apiVersion()
    return:
      type: "26831127"
      description: <p>the apiVersion value. </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificate(String,String)
  id: backupCertificate(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.backupCertificate(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificate(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3812
  package: com.microsoft.azure.keyvault
  summary: "<p>Backs up the specified certificate. Requests that a backup of the specified certificate be downloaded to the client. All versions of the certificate will be downloaded. This operation requires the certificates/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public BackupCertificateResult backupCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.BackupCertificateResult
      description: <p>the BackupCertificateResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateAsync(String,String)
  id: backupCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.backupCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3835
  package: com.microsoft.azure.keyvault
  summary: "<p>Backs up the specified certificate. Requests that a backup of the specified certificate be downloaded to the client. All versions of the certificate will be downloaded. This operation requires the certificates/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<BackupCertificateResult> backupCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.BackupCertificateResulta08ddfce
      description: <p>the observable to the BackupCertificateResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateAsync(String,String,final ServiceCallback<BackupCertificateResult>)
  id: backupCertificateAsync(String,String,final ServiceCallback<BackupCertificateResult>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<BackupCertificateResult> serviceCallback)
  nameWithType: KeyVaultClientBase.backupCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<BackupCertificateResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<BackupCertificateResult> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3824
  package: com.microsoft.azure.keyvault
  summary: "<p>Backs up the specified certificate. Requests that a backup of the specified certificate be downloaded to the client. All versions of the certificate will be downloaded. This operation requires the certificates/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<BackupCertificateResult> backupCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<BackupCertificateResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.BackupCertificateResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.BackupCertificateResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateWithServiceResponseAsync(String,String)
  id: backupCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.backupCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3846
  package: com.microsoft.azure.keyvault
  summary: "<p>Backs up the specified certificate. Requests that a backup of the specified certificate be downloaded to the client. All versions of the certificate will be downloaded. This operation requires the certificates/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<BackupCertificateResult>> backupCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.BackupCertificateResulte7daa122
      description: <p>the observable to the BackupCertificateResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKey(String,String)
  id: backupKey(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.backupKey(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKey(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 785
  package: com.microsoft.azure.keyvault
  summary: "<p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area. This operation requires the key/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public BackupKeyResult backupKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: com.microsoft.azure.keyvault.models.BackupKeyResult
      description: <p>the BackupKeyResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync(String,String)
  id: backupKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.backupKeyAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 808
  package: com.microsoft.azure.keyvault
  summary: "<p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area. This operation requires the key/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<BackupKeyResult> backupKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.BackupKeyResulta08ddfce
      description: <p>the observable to the BackupKeyResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync(String,String,final ServiceCallback<BackupKeyResult>)
  id: backupKeyAsync(String,String,final ServiceCallback<BackupKeyResult>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
  nameWithType: KeyVaultClientBase.backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 797
  package: com.microsoft.azure.keyvault
  summary: "<p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area. This operation requires the key/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<BackupKeyResult> backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.BackupKeyResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.BackupKeyResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyWithServiceResponseAsync(String,String)
  id: backupKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 819
  package: com.microsoft.azure.keyvault
  summary: "<p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area. This operation requires the key/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<BackupKeyResult>> backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.BackupKeyResulte7daa122
      description: <p>the observable to the BackupKeyResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecret(String,String)
  id: backupSecret(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.backupSecret(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecret(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2205
  package: com.microsoft.azure.keyvault
  summary: "<p>Backs up the specified secret. Requests that a backup of the specified secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the secrets/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public BackupSecretResult backupSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.BackupSecretResult
      description: <p>the BackupSecretResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync(String,String)
  id: backupSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.backupSecretAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2228
  package: com.microsoft.azure.keyvault
  summary: "<p>Backs up the specified secret. Requests that a backup of the specified secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the secrets/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<BackupSecretResult> backupSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.BackupSecretResulta08ddfce
      description: <p>the observable to the BackupSecretResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync(String,String,final ServiceCallback<BackupSecretResult>)
  id: backupSecretAsync(String,String,final ServiceCallback<BackupSecretResult>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
  nameWithType: KeyVaultClientBase.backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2217
  package: com.microsoft.azure.keyvault
  summary: "<p>Backs up the specified secret. Requests that a backup of the specified secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the secrets/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<BackupSecretResult> backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.BackupSecretResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.BackupSecretResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretWithServiceResponseAsync(String,String)
  id: backupSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2239
  package: com.microsoft.azure.keyvault
  summary: "<p>Backs up the specified secret. Requests that a backup of the specified secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the secrets/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<BackupSecretResult>> backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.BackupSecretResulte7daa122
      description: <p>the observable to the BackupSecretResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccount(String,String)
  id: backupStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.backupStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccount(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4449
  package: com.microsoft.azure.keyvault
  summary: "<p>Backs up the specified storage account. Requests that a backup of the specified storage account be downloaded to the client. This operation requires the storage/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public BackupStorageResult backupStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.BackupStorageResult
      description: <p>the BackupStorageResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountAsync(String,String)
  id: backupStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4472
  package: com.microsoft.azure.keyvault
  summary: "<p>Backs up the specified storage account. Requests that a backup of the specified storage account be downloaded to the client. This operation requires the storage/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<BackupStorageResult> backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.BackupStorageResulta08ddfce
      description: <p>the observable to the BackupStorageResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountAsync(String,String,final ServiceCallback<BackupStorageResult>)
  id: backupStorageAccountAsync(String,String,final ServiceCallback<BackupStorageResult>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<BackupStorageResult> serviceCallback)
  nameWithType: KeyVaultClientBase.backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<BackupStorageResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<BackupStorageResult> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4461
  package: com.microsoft.azure.keyvault
  summary: "<p>Backs up the specified storage account. Requests that a backup of the specified storage account be downloaded to the client. This operation requires the storage/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<BackupStorageResult> backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<BackupStorageResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.BackupStorageResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.BackupStorageResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountWithServiceResponseAsync(String,String)
  id: backupStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: backupStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.backupStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4483
  package: com.microsoft.azure.keyvault
  summary: "<p>Backs up the specified storage account. Requests that a backup of the specified storage account be downloaded to the client. This operation requires the storage/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<BackupStorageResult>> backupStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.BackupStorageResulte7daa122
      description: <p>the observable to the BackupStorageResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate(String,String)
  id: createCertificate(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.createCertificate(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2977
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateOperation createCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateOperation
      description: <p>the CertificateOperation object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: createCertificate(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3026
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateOperation createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateOperation
      description: <p>the CertificateOperation object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String,String)
  id: createCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3000
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3055
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateOperation>)
  id: createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3041
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String,String,final ServiceCallback<CertificateOperation>)
  id: createCertificateAsync(String,String,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2989
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync(String,String)
  id: createCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3011
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateOperatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: createCertificateWithServiceResponseAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3069
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateOperatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createKey(String,String,JsonWebKeyType)
  id: createKey(String,String,JsonWebKeyType)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  nameWithType: KeyVaultClientBase.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 155
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createKey(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  id: createKey(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  nameWithType: KeyVaultClientBase.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 210
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: '<p>The key size in bits. For example: 2048, 3072, or 4096 for RSA. </p>'
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models.JsonWebKeyCurveName
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'P-256K' </p>"
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String,String,JsonWebKeyType)
  id: createKeyAsync(String,String,JsonWebKeyType)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  nameWithType: KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 180
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String,String,JsonWebKeyType,final ServiceCallback<KeyBundle>)
  id: createKeyAsync(String,String,JsonWebKeyType,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 168
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  id: createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  nameWithType: KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 245
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: '<p>The key size in bits. For example: 2048, 3072, or 4096 for RSA. </p>'
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models.JsonWebKeyCurveName
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'P-256K' </p>"
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName,final ServiceCallback<KeyBundle>)
  id: createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 228
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: '<p>The key size in bits. For example: 2048, 3072, or 4096 for RSA. </p>'
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models.JsonWebKeyCurveName
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'P-256K' </p>"
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync(String,String,JsonWebKeyType)
  id: createKeyWithServiceResponseAsync(String,String,JsonWebKeyType)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  nameWithType: KeyVaultClientBase.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 192
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  id: createKeyWithServiceResponseAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  nameWithType: KeyVaultClientBase.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 262
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: '<p>The key size in bits. For example: 2048, 3072, or 4096 for RSA. </p>'
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models.JsonWebKeyCurveName
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'P-256K' </p>"
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.decrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: decrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.decrypt*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 941
  package: com.microsoft.azure.keyvault
  summary: "<p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/decrypt permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyOperationResult decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyOperationResult
      description: <p>the KeyOperationResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 970
  package: com.microsoft.azure.keyvault
  summary: "<p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/decrypt permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyOperationResult> decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  id: decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBase.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 956
  package: com.microsoft.azure.keyvault
  summary: "<p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/decrypt permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyOperationResult> decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: decryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 984
  package: com.microsoft.azure.keyvault
  summary: "<p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/decrypt permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyOperationResulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificate(String,String)
  id: deleteCertificate(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.deleteCertificate(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificate(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2392
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object. This operation requires the certificates/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedCertificateBundle deleteCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
      description: <p>the DeletedCertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync(String,String)
  id: deleteCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.deleteCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2415
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object. This operation requires the certificates/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedCertificateBundle> deleteCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
      description: <p>the observable to the DeletedCertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  id: deleteCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2404
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object. This operation requires the certificates/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedCertificateBundle> deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContacts(String)
  id: deleteCertificateContacts(String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateContacts(String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.deleteCertificateContacts(String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContacts(String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContacts*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2528
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Contacts deleteCertificateContacts(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>the Contacts object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync(String)
  id: deleteCertificateContactsAsync(String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateContactsAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.deleteCertificateContactsAsync(String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync(String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2549
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Contacts> deleteCertificateContactsAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the observable to the Contacts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  id: deleteCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2539
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Contacts> deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsWithServiceResponseAsync(String)
  id: deleteCertificateContactsWithServiceResponseAsync(String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2559
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Contacts>> deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.Contactse7daa122
      description: <p>the observable to the Contacts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuer(String,String)
  id: deleteCertificateIssuer(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuer*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2930
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault. This operation requires the certificates/manageissuers/deleteissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public IssuerBundle deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: com.microsoft.azure.keyvault.models.IssuerBundle
      description: <p>the IssuerBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync(String,String)
  id: deleteCertificateIssuerAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2953
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault. This operation requires the certificates/manageissuers/deleteissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IssuerBundle> deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  id: deleteCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2942
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault. This operation requires the certificates/manageissuers/deleteissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IssuerBundle> deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerWithServiceResponseAsync(String,String)
  id: deleteCertificateIssuerWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2964
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault. This operation requires the certificates/manageissuers/deleteissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperation(String,String)
  id: deleteCertificateOperation(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateOperation(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.deleteCertificateOperation(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperation(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperation*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3656
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes the creation operation for a specific certificate. Deletes the creation operation for a specified certificate that is in the process of being created. The certificate is no longer created. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateOperation deleteCertificateOperation(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateOperation
      description: <p>the CertificateOperation object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync(String,String)
  id: deleteCertificateOperationAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3679
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes the creation operation for a specific certificate. Deletes the creation operation for a specified certificate that is in the process of being created. The certificate is no longer created. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateOperation> deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  id: deleteCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3668
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes the creation operation for a specific certificate. Deletes the creation operation for a specified certificate that is in the process of being created. The certificate is no longer created. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateOperation> deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationWithServiceResponseAsync(String,String)
  id: deleteCertificateOperationWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3690
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes the creation operation for a specific certificate. Deletes the creation operation for a specified certificate that is in the process of being created. The certificate is no longer created. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateOperatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateWithServiceResponseAsync(String,String)
  id: deleteCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2426
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object. This operation requires the certificates/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedCertificateBundle>> deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedCertificateBundlee7daa122
      description: <p>the observable to the DeletedCertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKey(String,String)
  id: deleteKey(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.deleteKey(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKey(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 388
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the keys/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedKeyBundle deleteKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedKeyBundle
      description: <p>the DeletedKeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync(String,String)
  id: deleteKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.deleteKeyAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 411
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the keys/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedKeyBundle> deleteKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
      description: <p>the observable to the DeletedKeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  id: deleteKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 400
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the keys/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedKeyBundle> deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyWithServiceResponseAsync(String,String)
  id: deleteKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 422
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the keys/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedKeyBundle>> deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedKeyBundlee7daa122
      description: <p>the observable to the DeletedKeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinition(String,String,String)
  id: deleteSasDefinition(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.deleteSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinition*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5190
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedSasDefinitionBundle deleteSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
      description: <p>the DeletedSasDefinitionBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionAsync(String,String,String)
  id: deleteSasDefinitionAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5213
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedSasDefinitionBundle> deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
      description: <p>the observable to the DeletedSasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionAsync(String,String,String,final ServiceCallback<DeletedSasDefinitionBundle>)
  id: deleteSasDefinitionAsync(String,String,String,final ServiceCallback<DeletedSasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5202
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedSasDefinitionBundle> deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionWithServiceResponseAsync(String,String,String)
  id: deleteSasDefinitionWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.deleteSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5224
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedSasDefinitionBundle>> deleteSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlee7daa122
      description: <p>the observable to the DeletedSasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecret(String,String)
  id: deleteSecret(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.deleteSecret(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecret(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1579
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret. This operation requires the secrets/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedSecretBundle deleteSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedSecretBundle
      description: <p>the DeletedSecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync(String,String)
  id: deleteSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.deleteSecretAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1602
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret. This operation requires the secrets/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedSecretBundle> deleteSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
      description: <p>the observable to the DeletedSecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  id: deleteSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1591
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret. This operation requires the secrets/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedSecretBundle> deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretWithServiceResponseAsync(String,String)
  id: deleteSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1613
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret. This operation requires the secrets/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedSecretBundle>> deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedSecretBundlee7daa122
      description: <p>the observable to the DeletedSecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccount(String,String)
  id: deleteStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.deleteStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccount(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4542
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a storage account. This operation requires the storage/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedStorageBundle deleteStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedStorageBundle
      description: <p>the DeletedStorageBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountAsync(String,String)
  id: deleteStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4563
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a storage account. This operation requires the storage/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedStorageBundle> deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
      description: <p>the observable to the DeletedStorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountAsync(String,String,final ServiceCallback<DeletedStorageBundle>)
  id: deleteStorageAccountAsync(String,String,final ServiceCallback<DeletedStorageBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4553
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a storage account. This operation requires the storage/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedStorageBundle> deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountWithServiceResponseAsync(String,String)
  id: deleteStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: deleteStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.deleteStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4573
  package: com.microsoft.azure.keyvault
  summary: "<p>Deletes a storage account. This operation requires the storage/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedStorageBundle>> deleteStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedStorageBundlee7daa122
      description: <p>the observable to the DeletedStorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.encrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: encrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.encrypt*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 882
  package: com.microsoft.azure.keyvault
  summary: "<p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/encypt permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyOperationResult encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyOperationResult
      description: <p>the KeyOperationResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 911
  package: com.microsoft.azure.keyvault
  summary: "<p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/encypt permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyOperationResult> encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  id: encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBase.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 897
  package: com.microsoft.azure.keyvault
  summary: "<p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/encypt permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyOperationResult> encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: encryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 925
  package: com.microsoft.azure.keyvault
  summary: "<p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/encypt permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyOperationResulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.generateClientRequestId()
  id: generateClientRequestId()
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: generateClientRequestId()
  nameWithType: KeyVaultClientBase.generateClientRequestId()
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.generateClientRequestId()
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.generateClientRequestId*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 133
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..</p>\r\n<p></p>"
  syntax:
    content: public boolean generateClientRequestId()
    return:
      type: 4fc6e284
      description: <p>the generateClientRequestId value. </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getAzureClient()
  id: getAzureClient()
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getAzureClient()
  nameWithType: KeyVaultClientBase.getAzureClient()
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getAzureClient()
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getAzureClient*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 82
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the <xref uid=\"\" data-throw-if-not-resolved=\"false\">AzureClient</xref> used for long running operations. </p>"
  syntax:
    content: public AzureClient getAzureClient()
    return:
      type: c1c26e8d
      description: <p>the azure client; </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificate(String,String,String)
  id: getCertificate(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBase.getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3508
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets information about a certificate. Gets information about a specific certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync(String,String,String)
  id: getCertificateAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBase.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3533
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets information about a certificate. Gets information about a specific certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  id: getCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3521
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets information about a certificate. Gets information about a specific certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContacts(String)
  id: getCertificateContacts(String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateContacts(String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificateContacts(String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContacts(String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContacts*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2485
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Contacts getCertificateContacts(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>the Contacts object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync(String)
  id: getCertificateContactsAsync(String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateContactsAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificateContactsAsync(String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync(String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2506
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Contacts> getCertificateContactsAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the observable to the Contacts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  id: getCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2496
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Contacts> getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsWithServiceResponseAsync(String)
  id: getCertificateContactsWithServiceResponseAsync(String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2516
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Contacts>> getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.Contactse7daa122
      description: <p>the observable to the Contacts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuer(String,String)
  id: getCertificateIssuer(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuer(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.getCertificateIssuer(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuer(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuer*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2883
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public IssuerBundle getCertificateIssuer(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: com.microsoft.azure.keyvault.models.IssuerBundle
      description: <p>the IssuerBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync(String,String)
  id: getCertificateIssuerAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2906
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IssuerBundle> getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  id: getCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2895
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IssuerBundle> getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers(final String)
  id: getCertificateIssuers(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuers(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificateIssuers(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2571
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateIssuerItem> getCertificateIssuers(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
      description: <p>the PagedList&lt;CertificateIssuerItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers(final String,final Integer)
  id: getCertificateIssuers(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2614
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateIssuerItem> getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
      description: <p>the PagedList&lt;CertificateIssuerItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String)
  id: getCertificateIssuersAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuersAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2592
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String,final Integer)
  id: getCertificateIssuersAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2637
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String,final Integer,final ListOperationCallback<CertificateIssuerItem>)
  id: getCertificateIssuersAsync(final String,final Integer,final ListOperationCallback<CertificateIssuerItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2626
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String,final ListOperationCallback<CertificateIssuerItem>)
  id: getCertificateIssuersAsync(final String,final ListOperationCallback<CertificateIssuerItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2582
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNext(final String)
  id: getCertificateIssuersNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuersNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificateIssuersNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5829
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateIssuerItem> getCertificateIssuersNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
      description: <p>the PagedList&lt;CertificateIssuerItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync(final String)
  id: getCertificateIssuersNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuersNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificateIssuersNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5851
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateIssuerItem>> getCertificateIssuersNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync(final String,final ServiceFuture<List<CertificateIssuerItem>>,final ListOperationCallback<CertificateIssuerItem>)
  id: getCertificateIssuersNextAsync(final String,final ServiceFuture<List<CertificateIssuerItem>>,final ListOperationCallback<CertificateIssuerItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5841
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateIssuerItem>> getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextWithServiceResponseAsync(final String)
  id: getCertificateIssuersNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5861
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateIssuerItem>>> getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateIssuerItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync(final String)
  id: getCertificateIssuersWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2602
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateIssuerItem>>> getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateIssuerItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync(final String,final Integer)
  id: getCertificateIssuersWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2648
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateIssuerItem>>> getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateIssuerItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerWithServiceResponseAsync(String,String)
  id: getCertificateIssuerWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2917
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperation(String,String)
  id: getCertificateOperation(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateOperation(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getCertificateOperation(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperation(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperation*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3609
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the creation operation of a certificate. Gets the creation operation associated with a specified certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateOperation getCertificateOperation(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateOperation
      description: <p>the CertificateOperation object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync(String,String)
  id: getCertificateOperationAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3632
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the creation operation of a certificate. Gets the creation operation associated with a specified certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateOperation> getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  id: getCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3621
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the creation operation of a certificate. Gets the creation operation associated with a specified certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateOperation> getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationWithServiceResponseAsync(String,String)
  id: getCertificateOperationWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3643
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the creation operation of a certificate. Gets the creation operation associated with a specified certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateOperatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicy(String,String)
  id: getCertificatePolicy(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatePolicy(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getCertificatePolicy(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicy(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicy*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3296
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificatePolicy getCertificatePolicy(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>the CertificatePolicy object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync(String,String)
  id: getCertificatePolicyAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3319
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificatePolicy> getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
      description: <p>the observable to the CertificatePolicy object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync(String,String,final ServiceCallback<CertificatePolicy>)
  id: getCertificatePolicyAsync(String,String,final ServiceCallback<CertificatePolicy>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3308
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificatePolicy> getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyWithServiceResponseAsync(String,String)
  id: getCertificatePolicyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3330
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificatePolicy>> getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificatePolicye7daa122
      description: <p>the observable to the CertificatePolicy object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates(final String)
  id: getCertificates(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificates(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificates(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2298
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateItem> getCertificates(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates(final String,final Integer,final Boolean)
  id: getCertificates(final String,final Integer,final Boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  nameWithType: KeyVaultClientBase.getCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2342
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateItem> getCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String)
  id: getCertificatesAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatesAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2319
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String,final Integer,final Boolean)
  id: getCertificatesAsync(final String,final Integer,final Boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  nameWithType: KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2367
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String,final Integer,final Boolean,final ListOperationCallback<CertificateItem>)
  id: getCertificatesAsync(final String,final Integer,final Boolean,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<CertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2355
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String,final ListOperationCallback<CertificateItem>)
  id: getCertificatesAsync(final String,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2309
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNext(final String)
  id: getCertificatesNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatesNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificatesNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5785
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateItem> getCertificatesNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync(final String)
  id: getCertificatesNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatesNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificatesNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5807
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificatesNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  id: getCertificatesNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5797
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextWithServiceResponseAsync(final String)
  id: getCertificatesNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5817
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync(final String)
  id: getCertificatesWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2329
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync(final String,final Integer,final Boolean)
  id: getCertificatesWithServiceResponseAsync(final String,final Integer,final Boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  nameWithType: KeyVaultClientBase.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2379
  package: com.microsoft.azure.keyvault
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions(final String,final String)
  id: getCertificateVersions(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateVersions(final String vaultBaseUrl, final String certificateName)
  nameWithType: KeyVaultClientBase.getCertificateVersions(final String vaultBaseUrl, final String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions(final String vaultBaseUrl, final String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3199
  package: com.microsoft.azure.keyvault
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateItem> getCertificateVersions(final String vaultBaseUrl, final String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions(final String,final String,final Integer)
  id: getCertificateVersions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3246
  package: com.microsoft.azure.keyvault
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateItem> getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String,final String)
  id: getCertificateVersionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
  nameWithType: KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3222
  package: com.microsoft.azure.keyvault
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String,final String,final Integer)
  id: getCertificateVersionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3271
  package: com.microsoft.azure.keyvault
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String,final String,final Integer,final ListOperationCallback<CertificateItem>)
  id: getCertificateVersionsAsync(final String,final String,final Integer,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3259
  package: com.microsoft.azure.keyvault
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String,final String,final ListOperationCallback<CertificateItem>)
  id: getCertificateVersionsAsync(final String,final String,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3211
  package: com.microsoft.azure.keyvault
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNext(final String)
  id: getCertificateVersionsNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateVersionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificateVersionsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5873
  package: com.microsoft.azure.keyvault
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateItem> getCertificateVersionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync(final String)
  id: getCertificateVersionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateVersionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificateVersionsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5895
  package: com.microsoft.azure.keyvault
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificateVersionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  id: getCertificateVersionsNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5885
  package: com.microsoft.azure.keyvault
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextWithServiceResponseAsync(final String)
  id: getCertificateVersionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5905
  package: com.microsoft.azure.keyvault
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync(final String,final String)
  id: getCertificateVersionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
  nameWithType: KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3233
  package: com.microsoft.azure.keyvault
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync(final String,final String,final Integer)
  id: getCertificateVersionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3283
  package: com.microsoft.azure.keyvault
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateWithServiceResponseAsync(String,String,String)
  id: getCertificateWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBase.getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3545
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets information about a certificate. Gets information about a specific certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificate(String,String)
  id: getDeletedCertificate(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getDeletedCertificate(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificate(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3999
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedCertificateBundle getDeletedCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
      description: <p>the DeletedCertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync(String,String)
  id: getDeletedCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4022
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedCertificateBundle> getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
      description: <p>the observable to the DeletedCertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  id: getDeletedCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4011
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedCertificateBundle> getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates(final String)
  id: getDeletedCertificates(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificates(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedCertificates(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3905
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedCertificateItem> getDeletedCertificates(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
      description: <p>the PagedList&lt;DeletedCertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates(final String,final Integer,final Boolean)
  id: getDeletedCertificates(final String,final Integer,final Boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  nameWithType: KeyVaultClientBase.getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3949
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedCertificateItem> getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
      description: <p>the PagedList&lt;DeletedCertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String)
  id: getDeletedCertificatesAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificatesAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3926
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String,final Integer,final Boolean)
  id: getDeletedCertificatesAsync(final String,final Integer,final Boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3974
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String,final Integer,final Boolean,final ListOperationCallback<DeletedCertificateItem>)
  id: getDeletedCertificatesAsync(final String,final Integer,final Boolean,final ListOperationCallback<DeletedCertificateItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3962
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String,final ListOperationCallback<DeletedCertificateItem>)
  id: getDeletedCertificatesAsync(final String,final ListOperationCallback<DeletedCertificateItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3916
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNext(final String)
  id: getDeletedCertificatesNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificatesNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5917
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedCertificateItem> getDeletedCertificatesNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
      description: <p>the PagedList&lt;DeletedCertificateItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync(final String)
  id: getDeletedCertificatesNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificatesNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5939
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedCertificateItem>> getDeletedCertificatesNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync(final String,final ServiceFuture<List<DeletedCertificateItem>>,final ListOperationCallback<DeletedCertificateItem>)
  id: getDeletedCertificatesNextAsync(final String,final ServiceFuture<List<DeletedCertificateItem>>,final ListOperationCallback<DeletedCertificateItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5929
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedCertificateItem>> getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextWithServiceResponseAsync(final String)
  id: getDeletedCertificatesNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5949
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedCertificateItem>>> getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedCertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync(final String)
  id: getDeletedCertificatesWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3936
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedCertificateItem>>> getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedCertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync(final String,final Integer,final Boolean)
  id: getDeletedCertificatesWithServiceResponseAsync(final String,final Integer,final Boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  nameWithType: KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3986
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedCertificateItem>>> getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedCertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateWithServiceResponseAsync(String,String)
  id: getDeletedCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4033
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedCertificateBundle>> getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedCertificateBundlee7daa122
      description: <p>the observable to the DeletedCertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKey(String,String)
  id: getDeletedKey(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.getDeletedKey(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKey(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1326
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the public part of a deleted key. The Get Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedKeyBundle getDeletedKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedKeyBundle
      description: <p>the DeletedKeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync(String,String)
  id: getDeletedKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.getDeletedKeyAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1349
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the public part of a deleted key. The Get Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedKeyBundle> getDeletedKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
      description: <p>the observable to the DeletedKeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  id: getDeletedKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1338
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the public part of a deleted key. The Get Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedKeyBundle> getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys(final String)
  id: getDeletedKeys(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeys(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedKeys(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1236
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedKeyItem> getDeletedKeys(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
      description: <p>the PagedList&lt;DeletedKeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys(final String,final Integer)
  id: getDeletedKeys(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1279
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedKeyItem> getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
      description: <p>the PagedList&lt;DeletedKeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String)
  id: getDeletedKeysAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeysAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1257
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String,final Integer)
  id: getDeletedKeysAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1302
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String,final Integer,final ListOperationCallback<DeletedKeyItem>)
  id: getDeletedKeysAsync(final String,final Integer,final ListOperationCallback<DeletedKeyItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1291
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String,final ListOperationCallback<DeletedKeyItem>)
  id: getDeletedKeysAsync(final String,final ListOperationCallback<DeletedKeyItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1247
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNext(final String)
  id: getDeletedKeysNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeysNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedKeysNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5609
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedKeyItem> getDeletedKeysNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
      description: <p>the PagedList&lt;DeletedKeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync(final String)
  id: getDeletedKeysNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeysNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedKeysNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5631
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedKeyItem>> getDeletedKeysNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync(final String,final ServiceFuture<List<DeletedKeyItem>>,final ListOperationCallback<DeletedKeyItem>)
  id: getDeletedKeysNextAsync(final String,final ServiceFuture<List<DeletedKeyItem>>,final ListOperationCallback<DeletedKeyItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5621
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedKeyItem>> getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextWithServiceResponseAsync(final String)
  id: getDeletedKeysNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5641
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedKeyItem>>> getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedKeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync(final String)
  id: getDeletedKeysWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1267
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedKeyItem>>> getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedKeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync(final String,final Integer)
  id: getDeletedKeysWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1313
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedKeyItem>>> getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedKeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyWithServiceResponseAsync(String,String)
  id: getDeletedKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1360
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the public part of a deleted key. The Get Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedKeyBundle>> getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedKeyBundlee7daa122
      description: <p>the observable to the DeletedKeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinition(String,String,String)
  id: getDeletedSasDefinition(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinition*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5089
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the specified deleted sas definition. The Get Deleted SAS Definition operation returns the specified deleted SAS definition along with its attributes. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedSasDefinitionBundle getDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
      description: <p>the DeletedSasDefinitionBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionAsync(String,String,String)
  id: getDeletedSasDefinitionAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5114
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the specified deleted sas definition. The Get Deleted SAS Definition operation returns the specified deleted SAS definition along with its attributes. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedSasDefinitionBundle> getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
      description: <p>the observable to the DeletedSasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionAsync(String,String,String,final ServiceCallback<DeletedSasDefinitionBundle>)
  id: getDeletedSasDefinitionAsync(String,String,String,final ServiceCallback<DeletedSasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5102
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the specified deleted sas definition. The Get Deleted SAS Definition operation returns the specified deleted SAS definition along with its attributes. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedSasDefinitionBundle> getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitions(final String,final String)
  id: getDeletedSasDefinitions(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitions*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4991
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedSasDefinitionItem> getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
      description: <p>the PagedList&lt;DeletedSasDefinitionItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitions(final String,final String,final Integer)
  id: getDeletedSasDefinitions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitions*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5038
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedSasDefinitionItem> getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
      description: <p>the PagedList&lt;DeletedSasDefinitionItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String,final String)
  id: getDeletedSasDefinitionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5014
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedSasDefinitionItem>> getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSasDefinitionItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String,final String,final Integer)
  id: getDeletedSasDefinitionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5063
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedSasDefinitionItem>> getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSasDefinitionItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String,final String,final Integer,final ListOperationCallback<DeletedSasDefinitionItem>)
  id: getDeletedSasDefinitionsAsync(final String,final String,final Integer,final ListOperationCallback<DeletedSasDefinitionItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5051
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedSasDefinitionItem>> getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String,final String,final ListOperationCallback<DeletedSasDefinitionItem>)
  id: getDeletedSasDefinitionsAsync(final String,final String,final ListOperationCallback<DeletedSasDefinitionItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5003
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedSasDefinitionItem>> getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNext(final String)
  id: getDeletedSasDefinitionsNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 6085
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedSasDefinitionItem> getDeletedSasDefinitionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
      description: <p>the PagedList&lt;DeletedSasDefinitionItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextAsync(final String)
  id: getDeletedSasDefinitionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 6107
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedSasDefinitionItem>> getDeletedSasDefinitionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSasDefinitionItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextAsync(final String,final ServiceFuture<List<DeletedSasDefinitionItem>>,final ListOperationCallback<DeletedSasDefinitionItem>)
  id: getDeletedSasDefinitionsNextAsync(final String,final ServiceFuture<List<DeletedSasDefinitionItem>>,final ListOperationCallback<DeletedSasDefinitionItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSasDefinitionItem>> serviceFuture, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSasDefinitionItem>> serviceFuture, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSasDefinitionItem>> serviceFuture, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 6097
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedSasDefinitionItem>> getDeletedSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSasDefinitionItem>> serviceFuture, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextWithServiceResponseAsync(final String)
  id: getDeletedSasDefinitionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 6117
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSasDefinitionItem>>> getDeletedSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSasDefinitionItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync(final String,final String)
  id: getDeletedSasDefinitionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5025
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSasDefinitionItem>>> getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSasDefinitionItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync(final String,final String,final Integer)
  id: getDeletedSasDefinitionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5075
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSasDefinitionItem>>> getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSasDefinitionItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionWithServiceResponseAsync(String,String,String)
  id: getDeletedSasDefinitionWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5126
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the specified deleted sas definition. The Get Deleted SAS Definition operation returns the specified deleted SAS definition along with its attributes. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedSasDefinitionBundle>> getDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlee7daa122
      description: <p>the observable to the DeletedSasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecret(String,String)
  id: getDeletedSecret(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.getDeletedSecret(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecret(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2065
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the specified deleted secret. The Get Deleted Secret operation returns the specified deleted secret along with its attributes. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedSecretBundle getDeletedSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedSecretBundle
      description: <p>the DeletedSecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync(String,String)
  id: getDeletedSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.getDeletedSecretAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2088
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the specified deleted secret. The Get Deleted Secret operation returns the specified deleted secret along with its attributes. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedSecretBundle> getDeletedSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
      description: <p>the observable to the DeletedSecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  id: getDeletedSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2077
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the specified deleted secret. The Get Deleted Secret operation returns the specified deleted secret along with its attributes. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedSecretBundle> getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets(final String)
  id: getDeletedSecrets(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecrets(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedSecrets(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1975
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedSecretItem> getDeletedSecrets(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
      description: <p>the PagedList&lt;DeletedSecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets(final String,final Integer)
  id: getDeletedSecrets(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2018
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedSecretItem> getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
      description: <p>the PagedList&lt;DeletedSecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String)
  id: getDeletedSecretsAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretsAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1996
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String,final Integer)
  id: getDeletedSecretsAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2041
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String,final Integer,final ListOperationCallback<DeletedSecretItem>)
  id: getDeletedSecretsAsync(final String,final Integer,final ListOperationCallback<DeletedSecretItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2030
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String,final ListOperationCallback<DeletedSecretItem>)
  id: getDeletedSecretsAsync(final String,final ListOperationCallback<DeletedSecretItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1986
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNext(final String)
  id: getDeletedSecretsNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedSecretsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5741
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedSecretItem> getDeletedSecretsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
      description: <p>the PagedList&lt;DeletedSecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync(final String)
  id: getDeletedSecretsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedSecretsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5763
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedSecretItem>> getDeletedSecretsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync(final String,final ServiceFuture<List<DeletedSecretItem>>,final ListOperationCallback<DeletedSecretItem>)
  id: getDeletedSecretsNextAsync(final String,final ServiceFuture<List<DeletedSecretItem>>,final ListOperationCallback<DeletedSecretItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5753
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedSecretItem>> getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextWithServiceResponseAsync(final String)
  id: getDeletedSecretsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5773
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSecretItem>>> getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedSecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync(final String)
  id: getDeletedSecretsWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2006
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSecretItem>>> getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedSecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync(final String,final Integer)
  id: getDeletedSecretsWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2052
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSecretItem>>> getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedSecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretWithServiceResponseAsync(String,String)
  id: getDeletedSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2099
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the specified deleted secret. The Get Deleted Secret operation returns the specified deleted secret along with its attributes. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedSecretBundle>> getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedSecretBundlee7daa122
      description: <p>the observable to the DeletedSecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccount(String,String)
  id: getDeletedStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4309
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the specified deleted storage account. The Get Deleted Storage Account operation returns the specified deleted storage account along with its attributes. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedStorageBundle getDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedStorageBundle
      description: <p>the DeletedStorageBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountAsync(String,String)
  id: getDeletedStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4332
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the specified deleted storage account. The Get Deleted Storage Account operation returns the specified deleted storage account along with its attributes. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedStorageBundle> getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
      description: <p>the observable to the DeletedStorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountAsync(String,String,final ServiceCallback<DeletedStorageBundle>)
  id: getDeletedStorageAccountAsync(String,String,final ServiceCallback<DeletedStorageBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4321
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the specified deleted storage account. The Get Deleted Storage Account operation returns the specified deleted storage account along with its attributes. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedStorageBundle> getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccounts(final String)
  id: getDeletedStorageAccounts(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccounts(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccounts(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccounts(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccounts*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4219
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedStorageAccountItem> getDeletedStorageAccounts(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
      description: <p>the PagedList&lt;DeletedStorageAccountItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccounts(final String,final Integer)
  id: getDeletedStorageAccounts(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccounts*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4262
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedStorageAccountItem> getDeletedStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
      description: <p>the PagedList&lt;DeletedStorageAccountItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync(final String)
  id: getDeletedStorageAccountsAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountsAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4240
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedStorageAccountItem>> getDeletedStorageAccountsAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedStorageAccountItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync(final String,final Integer)
  id: getDeletedStorageAccountsAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4285
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedStorageAccountItem>> getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedStorageAccountItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync(final String,final Integer,final ListOperationCallback<DeletedStorageAccountItem>)
  id: getDeletedStorageAccountsAsync(final String,final Integer,final ListOperationCallback<DeletedStorageAccountItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4274
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedStorageAccountItem>> getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync(final String,final ListOperationCallback<DeletedStorageAccountItem>)
  id: getDeletedStorageAccountsAsync(final String,final ListOperationCallback<DeletedStorageAccountItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4230
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedStorageAccountItem>> getDeletedStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNext(final String)
  id: getDeletedStorageAccountsNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 6001
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedStorageAccountItem> getDeletedStorageAccountsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
      description: <p>the PagedList&lt;DeletedStorageAccountItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextAsync(final String)
  id: getDeletedStorageAccountsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 6023
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedStorageAccountItem>> getDeletedStorageAccountsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedStorageAccountItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextAsync(final String,final ServiceFuture<List<DeletedStorageAccountItem>>,final ListOperationCallback<DeletedStorageAccountItem>)
  id: getDeletedStorageAccountsNextAsync(final String,final ServiceFuture<List<DeletedStorageAccountItem>>,final ListOperationCallback<DeletedStorageAccountItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedStorageAccountItem>> serviceFuture, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedStorageAccountItem>> serviceFuture, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedStorageAccountItem>> serviceFuture, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 6013
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedStorageAccountItem>> getDeletedStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedStorageAccountItem>> serviceFuture, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextWithServiceResponseAsync(final String)
  id: getDeletedStorageAccountsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 6033
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedStorageAccountItem>>> getDeletedStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedStorageAccountItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedStorageAccountItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync(final String)
  id: getDeletedStorageAccountsWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4250
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedStorageAccountItem>>> getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedStorageAccountItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedStorageAccountItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync(final String,final Integer)
  id: getDeletedStorageAccountsWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4296
  package: com.microsoft.azure.keyvault
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedStorageAccountItem>>> getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedStorageAccountItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedStorageAccountItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountWithServiceResponseAsync(String,String)
  id: getDeletedStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4343
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the specified deleted storage account. The Get Deleted Storage Account operation returns the specified deleted storage account along with its attributes. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedStorageBundle>> getDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedStorageBundlee7daa122
      description: <p>the observable to the DeletedStorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKey(String,String,String)
  id: getKey(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKey(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBase.getKey(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKey(String vaultBaseUrl, String keyName, String keyVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 549
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle getKey(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync(String,String,String)
  id: getKeyAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBase.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 574
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  id: getKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 562
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys(final String)
  id: getKeys(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeys(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getKeys(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 695
  package: com.microsoft.azure.keyvault
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<KeyItem> getKeys(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys(final String,final Integer)
  id: getKeys(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeys(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getKeys(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 738
  package: com.microsoft.azure.keyvault
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<KeyItem> getKeys(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String)
  id: getKeysAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeysAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 716
  package: com.microsoft.azure.keyvault
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<KeyItem>> getKeysAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String,final Integer)
  id: getKeysAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 761
  package: com.microsoft.azure.keyvault
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<KeyItem>> getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String,final Integer,final ListOperationCallback<KeyItem>)
  id: getKeysAsync(final String,final Integer,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 750
  package: com.microsoft.azure.keyvault
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String,final ListOperationCallback<KeyItem>)
  id: getKeysAsync(final String,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 706
  package: com.microsoft.azure.keyvault
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNext(final String)
  id: getKeysNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeysNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getKeysNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5565
  package: com.microsoft.azure.keyvault
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<KeyItem> getKeysNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync(final String)
  id: getKeysNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeysNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getKeysNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5587
  package: com.microsoft.azure.keyvault
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<KeyItem>> getKeysNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  id: getKeysNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5577
  package: com.microsoft.azure.keyvault
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextWithServiceResponseAsync(final String)
  id: getKeysNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeysNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getKeysNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5597
  package: com.microsoft.azure.keyvault
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeysNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync(final String)
  id: getKeysWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeysWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getKeysWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 726
  package: com.microsoft.azure.keyvault
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeysWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync(final String,final Integer)
  id: getKeysWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 772
  package: com.microsoft.azure.keyvault
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions(final String,final String)
  id: getKeyVersions(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyVersions(final String vaultBaseUrl, final String keyName)
  nameWithType: KeyVaultClientBase.getKeyVersions(final String vaultBaseUrl, final String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions(final String vaultBaseUrl, final String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 599
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<KeyItem> getKeyVersions(final String vaultBaseUrl, final String keyName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions(final String,final String,final Integer)
  id: getKeyVersions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 646
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<KeyItem> getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String,final String)
  id: getKeyVersionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
  nameWithType: KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 622
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String,final String,final Integer)
  id: getKeyVersionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 671
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String,final String,final Integer,final ListOperationCallback<KeyItem>)
  id: getKeyVersionsAsync(final String,final String,final Integer,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 659
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String,final String,final ListOperationCallback<KeyItem>)
  id: getKeyVersionsAsync(final String,final String,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 611
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNext(final String)
  id: getKeyVersionsNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyVersionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getKeyVersionsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5521
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<KeyItem> getKeyVersionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync(final String)
  id: getKeyVersionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyVersionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getKeyVersionsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5543
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<KeyItem>> getKeyVersionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  id: getKeyVersionsNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5533
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextWithServiceResponseAsync(final String)
  id: getKeyVersionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5553
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync(final String,final String)
  id: getKeyVersionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
  nameWithType: KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 633
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync(final String,final String,final Integer)
  id: getKeyVersionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 683
  package: com.microsoft.azure.keyvault
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyWithServiceResponseAsync(String,String,String)
  id: getKeyWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBase.getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 586
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinition(String,String,String)
  id: getSasDefinition(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.getSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinition*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5237
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public SasDefinitionBundle getSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SasDefinitionBundle
      description: <p>the SasDefinitionBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionAsync(String,String,String)
  id: getSasDefinitionAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5260
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SasDefinitionBundle> getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the observable to the SasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionAsync(String,String,String,final ServiceCallback<SasDefinitionBundle>)
  id: getSasDefinitionAsync(String,String,String,final ServiceCallback<SasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5249
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SasDefinitionBundle> getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitions(final String,final String)
  id: getSasDefinitions(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
  nameWithType: KeyVaultClientBase.getSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitions*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4901
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SasDefinitionItem> getSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
      description: <p>the PagedList&lt;SasDefinitionItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitions(final String,final String,final Integer)
  id: getSasDefinitions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitions*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4944
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SasDefinitionItem> getSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
      description: <p>the PagedList&lt;SasDefinitionItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync(final String,final String)
  id: getSasDefinitionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
  nameWithType: KeyVaultClientBase.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4922
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SasDefinitionItem>> getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the observable to the PagedList&lt;SasDefinitionItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync(final String,final String,final Integer)
  id: getSasDefinitionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4967
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SasDefinitionItem>> getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the observable to the PagedList&lt;SasDefinitionItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync(final String,final String,final Integer,final ListOperationCallback<SasDefinitionItem>)
  id: getSasDefinitionsAsync(final String,final String,final Integer,final ListOperationCallback<SasDefinitionItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4956
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SasDefinitionItem>> getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<SasDefinitionItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync(final String,final String,final ListOperationCallback<SasDefinitionItem>)
  id: getSasDefinitionsAsync(final String,final String,final ListOperationCallback<SasDefinitionItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4912
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SasDefinitionItem>> getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<SasDefinitionItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNext(final String)
  id: getSasDefinitionsNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSasDefinitionsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 6044
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SasDefinitionItem> getSasDefinitionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
      description: <p>the PagedList&lt;SasDefinitionItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextAsync(final String)
  id: getSasDefinitionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSasDefinitionsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 6064
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SasDefinitionItem>> getSasDefinitionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the observable to the PagedList&lt;SasDefinitionItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextAsync(final String,final ServiceFuture<List<SasDefinitionItem>>,final ListOperationCallback<SasDefinitionItem>)
  id: getSasDefinitionsNextAsync(final String,final ServiceFuture<List<SasDefinitionItem>>,final ListOperationCallback<SasDefinitionItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<SasDefinitionItem>> serviceFuture, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<SasDefinitionItem>> serviceFuture, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<SasDefinitionItem>> serviceFuture, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 6055
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SasDefinitionItem>> getSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<SasDefinitionItem>> serviceFuture, final ListOperationCallback<SasDefinitionItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextWithServiceResponseAsync(final String)
  id: getSasDefinitionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 6073
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SasDefinitionItem>>> getSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SasDefinitionItem2646ccb0
      description: <p>the observable to the PagedList&lt;SasDefinitionItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync(final String,final String)
  id: getSasDefinitionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
  nameWithType: KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4932
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SasDefinitionItem>>> getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SasDefinitionItem2646ccb0
      description: <p>the observable to the PagedList&lt;SasDefinitionItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync(final String,final String,final Integer)
  id: getSasDefinitionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4978
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SasDefinitionItem>>> getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SasDefinitionItem2646ccb0
      description: <p>the observable to the PagedList&lt;SasDefinitionItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionWithServiceResponseAsync(String,String,String)
  id: getSasDefinitionWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.getSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5271
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SasDefinitionBundle>> getSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
      description: <p>the observable to the SasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecret(String,String,String)
  id: getSecret(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecret(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBase.getSecret(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecret(String vaultBaseUrl, String secretName, String secretVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1740
  package: com.microsoft.azure.keyvault
  summary: "<p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle getSecret(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync(String,String,String)
  id: getSecretAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBase.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1765
  package: com.microsoft.azure.keyvault
  summary: "<p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  id: getSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1753
  package: com.microsoft.azure.keyvault
  summary: "<p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets(final String)
  id: getSecrets(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecrets(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getSecrets(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1789
  package: com.microsoft.azure.keyvault
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SecretItem> getSecrets(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets(final String,final Integer)
  id: getSecrets(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecrets(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSecrets(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1832
  package: com.microsoft.azure.keyvault
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SecretItem> getSecrets(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String)
  id: getSecretsAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretsAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1810
  package: com.microsoft.azure.keyvault
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SecretItem>> getSecretsAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String,final Integer)
  id: getSecretsAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1855
  package: com.microsoft.azure.keyvault
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SecretItem>> getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String,final Integer,final ListOperationCallback<SecretItem>)
  id: getSecretsAsync(final String,final Integer,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1844
  package: com.microsoft.azure.keyvault
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String,final ListOperationCallback<SecretItem>)
  id: getSecretsAsync(final String,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1800
  package: com.microsoft.azure.keyvault
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNext(final String)
  id: getSecretsNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSecretsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5653
  package: com.microsoft.azure.keyvault
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SecretItem> getSecretsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync(final String)
  id: getSecretsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSecretsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5675
  package: com.microsoft.azure.keyvault
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SecretItem>> getSecretsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  id: getSecretsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5665
  package: com.microsoft.azure.keyvault
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextWithServiceResponseAsync(final String)
  id: getSecretsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSecretsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5685
  package: com.microsoft.azure.keyvault
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync(final String)
  id: getSecretsWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1820
  package: com.microsoft.azure.keyvault
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync(final String,final Integer)
  id: getSecretsWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1866
  package: com.microsoft.azure.keyvault
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions(final String,final String)
  id: getSecretVersions(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretVersions(final String vaultBaseUrl, final String secretName)
  nameWithType: KeyVaultClientBase.getSecretVersions(final String vaultBaseUrl, final String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions(final String vaultBaseUrl, final String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1879
  package: com.microsoft.azure.keyvault
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SecretItem> getSecretVersions(final String vaultBaseUrl, final String secretName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions(final String,final String,final Integer)
  id: getSecretVersions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1926
  package: com.microsoft.azure.keyvault
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SecretItem> getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String,final String)
  id: getSecretVersionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
  nameWithType: KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1902
  package: com.microsoft.azure.keyvault
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String,final String,final Integer)
  id: getSecretVersionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1951
  package: com.microsoft.azure.keyvault
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String,final String,final Integer,final ListOperationCallback<SecretItem>)
  id: getSecretVersionsAsync(final String,final String,final Integer,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1939
  package: com.microsoft.azure.keyvault
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String,final String,final ListOperationCallback<SecretItem>)
  id: getSecretVersionsAsync(final String,final String,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1891
  package: com.microsoft.azure.keyvault
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNext(final String)
  id: getSecretVersionsNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretVersionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSecretVersionsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5697
  package: com.microsoft.azure.keyvault
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SecretItem> getSecretVersionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync(final String)
  id: getSecretVersionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretVersionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSecretVersionsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5719
  package: com.microsoft.azure.keyvault
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SecretItem>> getSecretVersionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  id: getSecretVersionsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5709
  package: com.microsoft.azure.keyvault
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextWithServiceResponseAsync(final String)
  id: getSecretVersionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5729
  package: com.microsoft.azure.keyvault
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync(final String,final String)
  id: getSecretVersionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
  nameWithType: KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1913
  package: com.microsoft.azure.keyvault
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync(final String,final String,final Integer)
  id: getSecretVersionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1963
  package: com.microsoft.azure.keyvault
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretWithServiceResponseAsync(String,String,String)
  id: getSecretWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBase.getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1777
  package: com.microsoft.azure.keyvault
  summary: "<p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccount(String,String)
  id: getStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.getStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccount(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4585
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets information about a specified storage account. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle getStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountAsync(String,String)
  id: getStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.getStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4606
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets information about a specified storage account. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> getStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountAsync(String,String,final ServiceCallback<StorageBundle>)
  id: getStorageAccountAsync(String,String,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.getStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4596
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets information about a specified storage account. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> getStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccounts(final String)
  id: getStorageAccounts(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccounts(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getStorageAccounts(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccounts(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccounts*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4137
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<StorageAccountItem> getStorageAccounts(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
      description: <p>the PagedList&lt;StorageAccountItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccounts(final String,final Integer)
  id: getStorageAccounts(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccounts*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4176
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<StorageAccountItem> getStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
      description: <p>the PagedList&lt;StorageAccountItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync(final String)
  id: getStorageAccountsAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountsAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getStorageAccountsAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4156
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<StorageAccountItem>> getStorageAccountsAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the observable to the PagedList&lt;StorageAccountItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync(final String,final Integer)
  id: getStorageAccountsAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4197
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<StorageAccountItem>> getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the observable to the PagedList&lt;StorageAccountItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync(final String,final Integer,final ListOperationCallback<StorageAccountItem>)
  id: getStorageAccountsAsync(final String,final Integer,final ListOperationCallback<StorageAccountItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<StorageAccountItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<StorageAccountItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<StorageAccountItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4187
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<StorageAccountItem>> getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<StorageAccountItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync(final String,final ListOperationCallback<StorageAccountItem>)
  id: getStorageAccountsAsync(final String,final ListOperationCallback<StorageAccountItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<StorageAccountItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<StorageAccountItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<StorageAccountItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4147
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<StorageAccountItem>> getStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<StorageAccountItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNext(final String)
  id: getStorageAccountsNext(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getStorageAccountsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNext(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNext*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5960
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<StorageAccountItem> getStorageAccountsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
      description: <p>the PagedList&lt;StorageAccountItem&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextAsync(final String)
  id: getStorageAccountsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getStorageAccountsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5980
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<StorageAccountItem>> getStorageAccountsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the observable to the PagedList&lt;StorageAccountItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextAsync(final String,final ServiceFuture<List<StorageAccountItem>>,final ListOperationCallback<StorageAccountItem>)
  id: getStorageAccountsNextAsync(final String,final ServiceFuture<List<StorageAccountItem>>,final ListOperationCallback<StorageAccountItem>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<StorageAccountItem>> serviceFuture, final ListOperationCallback<StorageAccountItem> serviceCallback)
  nameWithType: KeyVaultClientBase.getStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<StorageAccountItem>> serviceFuture, final ListOperationCallback<StorageAccountItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<StorageAccountItem>> serviceFuture, final ListOperationCallback<StorageAccountItem> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5971
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<StorageAccountItem>> getStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<StorageAccountItem>> serviceFuture, final ListOperationCallback<StorageAccountItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextWithServiceResponseAsync(final String)
  id: getStorageAccountsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBase.getStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5989
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<StorageAccountItem>>> getStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.StorageAccountItem2646ccb0
      description: <p>the observable to the PagedList&lt;StorageAccountItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync(final String)
  id: getStorageAccountsWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4165
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<StorageAccountItem>>> getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.StorageAccountItem2646ccb0
      description: <p>the observable to the PagedList&lt;StorageAccountItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync(final String,final Integer)
  id: getStorageAccountsWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4207
  package: com.microsoft.azure.keyvault
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<StorageAccountItem>>> getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.StorageAccountItem2646ccb0
      description: <p>the observable to the PagedList&lt;StorageAccountItem&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountWithServiceResponseAsync(String,String)
  id: getStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: getStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.getStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4616
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets information about a specified storage account. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> getStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate(String,String,String)
  id: importCertificate(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: KeyVaultClientBase.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3083
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: importCertificate(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3137
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String,String,String)
  id: importCertificateAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3108
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  id: importCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3096
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3170
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  id: importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3154
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync(String,String,String)
  id: importCertificateWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: KeyVaultClientBase.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3120
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: importCertificateWithServiceResponseAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3186
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importKey(String,String,JsonWebKey)
  id: importKey(String,String,JsonWebKey)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: KeyVaultClientBase.importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 276
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importKey(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  id: importKey(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 329
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String,String,JsonWebKey)
  id: importKeyAsync(String,String,JsonWebKey)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 301
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  id: importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 360
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  id: importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 345
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String,String,JsonWebKey,final ServiceCallback<KeyBundle>)
  id: importKeyAsync(String,String,JsonWebKey,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 289
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync(String,String,JsonWebKey)
  id: importKeyWithServiceResponseAsync(String,String,JsonWebKey)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: KeyVaultClientBase.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 313
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  id: importKeyWithServiceResponseAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 375
  package: com.microsoft.azure.keyvault
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.longRunningOperationRetryTimeout()
  id: longRunningOperationRetryTimeout()
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: longRunningOperationRetryTimeout()
  nameWithType: KeyVaultClientBase.longRunningOperationRetryTimeout()
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.longRunningOperationRetryTimeout()
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.longRunningOperationRetryTimeout*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 118
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30..</p>\r\n<p></p>"
  syntax:
    content: public int longRunningOperationRetryTimeout()
    return:
      type: f75371fa
      description: <p>the longRunningOperationRetryTimeout value. </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate(String,String,List<byte[]>)
  id: mergeCertificate(String,String,List<byte[]>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  nameWithType: KeyVaultClientBase.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3704
  package: com.microsoft.azure.keyvault
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  id: mergeCertificate(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3756
  package: com.microsoft.azure.keyvault
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String,String,List<byte[]>)
  id: mergeCertificateAsync(String,String,List<byte[]>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  nameWithType: KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3729
  package: com.microsoft.azure.keyvault
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  id: mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3785
  package: com.microsoft.azure.keyvault
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  id: mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3771
  package: com.microsoft.azure.keyvault
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String,String,List<byte[]>,final ServiceCallback<CertificateBundle>)
  id: mergeCertificateAsync(String,String,List<byte[]>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3717
  package: com.microsoft.azure.keyvault
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>)
  id: mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  nameWithType: KeyVaultClientBase.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3741
  package: com.microsoft.azure.keyvault
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  id: mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3799
  package: com.microsoft.azure.keyvault
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificate(String,String)
  id: purgeDeletedCertificate(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4045
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. This operation requires the certificate/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public void purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync(String,String)
  id: purgeDeletedCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4068
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. This operation requires the certificate/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync(String,String,final ServiceCallback<Void>)
  id: purgeDeletedCertificateAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBase.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4057
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. This operation requires the certificate/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateWithServiceResponseAsync(String,String)
  id: purgeDeletedCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4079
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. This operation requires the certificate/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKey(String,String)
  id: purgeDeletedKey(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.purgeDeletedKey(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKey(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1372
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified key. The Purge Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public void purgeDeletedKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync(String,String)
  id: purgeDeletedKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1395
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified key. The Purge Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync(String,String,final ServiceCallback<Void>)
  id: purgeDeletedKeyAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBase.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1384
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified key. The Purge Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyWithServiceResponseAsync(String,String)
  id: purgeDeletedKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1406
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified key. The Purge Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecret(String,String)
  id: purgeDeletedSecret(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.purgeDeletedSecret(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecret(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2111
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified secret. The purge deleted secret operation removes the secret permanently, without the possibility of recovery. This operation can only be enabled on a soft-delete enabled vault. This operation requires the secrets/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public void purgeDeletedSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync(String,String)
  id: purgeDeletedSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2134
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified secret. The purge deleted secret operation removes the secret permanently, without the possibility of recovery. This operation can only be enabled on a soft-delete enabled vault. This operation requires the secrets/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync(String,String,final ServiceCallback<Void>)
  id: purgeDeletedSecretAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBase.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2123
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified secret. The purge deleted secret operation removes the secret permanently, without the possibility of recovery. This operation can only be enabled on a soft-delete enabled vault. This operation requires the secrets/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretWithServiceResponseAsync(String,String)
  id: purgeDeletedSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2145
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified secret. The purge deleted secret operation removes the secret permanently, without the possibility of recovery. This operation can only be enabled on a soft-delete enabled vault. This operation requires the secrets/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccount(String,String)
  id: purgeDeletedStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.purgeDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4355
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified storage account. The purge deleted storage account operation removes the secret permanently, without the possibility of recovery. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public void purgeDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountAsync(String,String)
  id: purgeDeletedStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4378
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified storage account. The purge deleted storage account operation removes the secret permanently, without the possibility of recovery. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountAsync(String,String,final ServiceCallback<Void>)
  id: purgeDeletedStorageAccountAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBase.purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4367
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified storage account. The purge deleted storage account operation removes the secret permanently, without the possibility of recovery. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountWithServiceResponseAsync(String,String)
  id: purgeDeletedStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: purgeDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.purgeDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4389
  package: com.microsoft.azure.keyvault
  summary: "<p>Permanently deletes the specified storage account. The purge deleted storage account operation removes the secret permanently, without the possibility of recovery. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificate(String,String)
  id: recoverDeletedCertificate(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4092
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes). This operation requires the certificates/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync(String,String)
  id: recoverDeletedCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4115
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes). This operation requires the certificates/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync(String,String,final ServiceCallback<CertificateBundle>)
  id: recoverDeletedCertificateAsync(String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4104
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes). This operation requires the certificates/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateWithServiceResponseAsync(String,String)
  id: recoverDeletedCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBase.recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4126
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes). This operation requires the certificates/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKey(String,String)
  id: recoverDeletedKey(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.recoverDeletedKey(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKey(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1419
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted key to its latest version. The Recover Deleted Key operation is applicable for deleted keys in soft-delete enabled vaults. It recovers the deleted key back to its latest version under /keys. An attempt to recover an non-deleted key will return an error. Consider this the inverse of the delete operation on soft-delete enabled vaults. This operation requires the keys/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle recoverDeletedKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync(String,String)
  id: recoverDeletedKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1442
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted key to its latest version. The Recover Deleted Key operation is applicable for deleted keys in soft-delete enabled vaults. It recovers the deleted key back to its latest version under /keys. An attempt to recover an non-deleted key will return an error. Consider this the inverse of the delete operation on soft-delete enabled vaults. This operation requires the keys/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync(String,String,final ServiceCallback<KeyBundle>)
  id: recoverDeletedKeyAsync(String,String,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1431
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted key to its latest version. The Recover Deleted Key operation is applicable for deleted keys in soft-delete enabled vaults. It recovers the deleted key back to its latest version under /keys. An attempt to recover an non-deleted key will return an error. Consider this the inverse of the delete operation on soft-delete enabled vaults. This operation requires the keys/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyWithServiceResponseAsync(String,String)
  id: recoverDeletedKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBase.recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1453
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted key to its latest version. The Recover Deleted Key operation is applicable for deleted keys in soft-delete enabled vaults. It recovers the deleted key back to its latest version under /keys. An attempt to recover an non-deleted key will return an error. Consider this the inverse of the delete operation on soft-delete enabled vaults. This operation requires the keys/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinition(String,String,String)
  id: recoverDeletedSasDefinition(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.recoverDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinition*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5140
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted SAS definition. Recovers the deleted SAS definition for the specified storage account. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public SasDefinitionBundle recoverDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SasDefinitionBundle
      description: <p>the SasDefinitionBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionAsync(String,String,String)
  id: recoverDeletedSasDefinitionAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5165
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted SAS definition. Recovers the deleted SAS definition for the specified storage account. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SasDefinitionBundle> recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the observable to the SasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionAsync(String,String,String,final ServiceCallback<SasDefinitionBundle>)
  id: recoverDeletedSasDefinitionAsync(String,String,String,final ServiceCallback<SasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5153
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted SAS definition. Recovers the deleted SAS definition for the specified storage account. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SasDefinitionBundle> recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionWithServiceResponseAsync(String,String,String)
  id: recoverDeletedSasDefinitionWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.recoverDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5177
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted SAS definition. Recovers the deleted SAS definition for the specified storage account. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SasDefinitionBundle>> recoverDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
      description: <p>the observable to the SasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecret(String,String)
  id: recoverDeletedSecret(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.recoverDeletedSecret(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecret(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2158
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted secret to the latest version. Recovers the deleted secret in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the secrets/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle recoverDeletedSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync(String,String)
  id: recoverDeletedSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2181
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted secret to the latest version. Recovers the deleted secret in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the secrets/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync(String,String,final ServiceCallback<SecretBundle>)
  id: recoverDeletedSecretAsync(String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2170
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted secret to the latest version. Recovers the deleted secret in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the secrets/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretWithServiceResponseAsync(String,String)
  id: recoverDeletedSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBase.recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2192
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted secret to the latest version. Recovers the deleted secret in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the secrets/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccount(String,String)
  id: recoverDeletedStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.recoverDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4402
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted storage account. Recovers the deleted storage account in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle recoverDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountAsync(String,String)
  id: recoverDeletedStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4425
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted storage account. Recovers the deleted storage account in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountAsync(String,String,final ServiceCallback<StorageBundle>)
  id: recoverDeletedStorageAccountAsync(String,String,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4414
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted storage account. Recovers the deleted storage account in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountWithServiceResponseAsync(String,String)
  id: recoverDeletedStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: recoverDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.recoverDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4436
  package: com.microsoft.azure.keyvault
  summary: "<p>Recovers the deleted storage account. Recovers the deleted storage account in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> recoverDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKey(String,String,String)
  id: regenerateStorageAccountKey(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: regenerateStorageAccountKey(String vaultBaseUrl, String storageAccountName, String keyName)
  nameWithType: KeyVaultClientBase.regenerateStorageAccountKey(String vaultBaseUrl, String storageAccountName, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKey(String vaultBaseUrl, String storageAccountName, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4855
  package: com.microsoft.azure.keyvault
  summary: "<p>Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle regenerateStorageAccountKey(String vaultBaseUrl, String storageAccountName, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: keyName
      type: "26831127"
      description: <p>The storage account key name. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyAsync(String,String,String)
  id: regenerateStorageAccountKeyAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName)
  nameWithType: KeyVaultClientBase.regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4878
  package: com.microsoft.azure.keyvault
  summary: "<p>Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: keyName
      type: "26831127"
      description: <p>The storage account key name. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyAsync(String,String,String,final ServiceCallback<StorageBundle>)
  id: regenerateStorageAccountKeyAsync(String,String,String,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName, final ServiceCallback<StorageBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4867
  package: com.microsoft.azure.keyvault
  summary: "<p>Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: keyName
      type: "26831127"
      description: <p>The storage account key name. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyWithServiceResponseAsync(String,String,String)
  id: regenerateStorageAccountKeyWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: regenerateStorageAccountKeyWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String keyName)
  nameWithType: KeyVaultClientBase.regenerateStorageAccountKeyWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String keyName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String keyName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4889
  package: com.microsoft.azure.keyvault
  summary: "<p>Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> regenerateStorageAccountKeyWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: keyName
      type: "26831127"
      description: <p>The storage account key name. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restClient()
  id: restClient()
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restClient()
  nameWithType: KeyVaultClientBase.restClient()
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restClient()
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restClient*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 76
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the REST client.</p>\r\n<p></p>"
  syntax:
    content: public RestClient restClient()
    return:
      type: 9545a295
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">RestClient</xref> object. </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificate(String,byte [])
  id: restoreCertificate(String,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreCertificate(String vaultBaseUrl, byte[] certificateBundleBackup)
  nameWithType: KeyVaultClientBase.restoreCertificate(String vaultBaseUrl, byte[] certificateBundleBackup)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificate(String vaultBaseUrl, byte[] certificateBundleBackup)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3859
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up certificate to a vault. Restores a backed up certificate, and all its versions, to a vault. This operation requires the certificates/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle restoreCertificate(String vaultBaseUrl, byte[] certificateBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a certificate bundle. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateAsync(String,byte [])
  id: restoreCertificateAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
  nameWithType: KeyVaultClientBase.restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3882
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up certificate to a vault. Restores a backed up certificate, and all its versions, to a vault. This operation requires the certificates/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a certificate bundle. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateAsync(String,byte [],final ServiceCallback<CertificateBundle>)
  id: restoreCertificateAsync(String,byte [],final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3871
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up certificate to a vault. Restores a backed up certificate, and all its versions, to a vault. This operation requires the certificates/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a certificate bundle. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateWithServiceResponseAsync(String,byte [])
  id: restoreCertificateWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreCertificateWithServiceResponseAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
  nameWithType: KeyVaultClientBase.restoreCertificateWithServiceResponseAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateWithServiceResponseAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3893
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up certificate to a vault. Restores a backed up certificate, and all its versions, to a vault. This operation requires the certificates/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> restoreCertificateWithServiceResponseAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a certificate bundle. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKey(String,byte [])
  id: restoreKey(String,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
  nameWithType: KeyVaultClientBase.restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 832
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault. This operation requires the keys/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync(String,byte [])
  id: restoreKeyAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  nameWithType: KeyVaultClientBase.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 855
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault. This operation requires the keys/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync(String,byte [],final ServiceCallback<KeyBundle>)
  id: restoreKeyAsync(String,byte [],final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 844
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault. This operation requires the keys/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyWithServiceResponseAsync(String,byte [])
  id: restoreKeyWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  nameWithType: KeyVaultClientBase.restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 866
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault. This operation requires the keys/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecret(String,byte [])
  id: restoreSecret(String,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
  nameWithType: KeyVaultClientBase.restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2252
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up secret to a vault. Restores a backed up secret, and all its versions, to a vault. This operation requires the secrets/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync(String,byte [])
  id: restoreSecretAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  nameWithType: KeyVaultClientBase.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2275
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up secret to a vault. Restores a backed up secret, and all its versions, to a vault. This operation requires the secrets/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync(String,byte [],final ServiceCallback<SecretBundle>)
  id: restoreSecretAsync(String,byte [],final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2264
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up secret to a vault. Restores a backed up secret, and all its versions, to a vault. This operation requires the secrets/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretWithServiceResponseAsync(String,byte [])
  id: restoreSecretWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  nameWithType: KeyVaultClientBase.restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2286
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up secret to a vault. Restores a backed up secret, and all its versions, to a vault. This operation requires the secrets/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccount(String,byte [])
  id: restoreStorageAccount(String,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreStorageAccount(String vaultBaseUrl, byte[] storageBundleBackup)
  nameWithType: KeyVaultClientBase.restoreStorageAccount(String vaultBaseUrl, byte[] storageBundleBackup)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccount(String vaultBaseUrl, byte[] storageBundleBackup)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4496
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up storage account to a vault. Restores a backed up storage account to a vault. This operation requires the storage/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle restoreStorageAccount(String vaultBaseUrl, byte[] storageBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountAsync(String,byte [])
  id: restoreStorageAccountAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup)
  nameWithType: KeyVaultClientBase.restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4519
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up storage account to a vault. Restores a backed up storage account to a vault. This operation requires the storage/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountAsync(String,byte [],final ServiceCallback<StorageBundle>)
  id: restoreStorageAccountAsync(String,byte [],final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup, final ServiceCallback<StorageBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4508
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up storage account to a vault. Restores a backed up storage account to a vault. This operation requires the storage/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountWithServiceResponseAsync(String,byte [])
  id: restoreStorageAccountWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: restoreStorageAccountWithServiceResponseAsync(String vaultBaseUrl, byte[] storageBundleBackup)
  nameWithType: KeyVaultClientBase.restoreStorageAccountWithServiceResponseAsync(String vaultBaseUrl, byte[] storageBundleBackup)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountWithServiceResponseAsync(String vaultBaseUrl, byte[] storageBundleBackup)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4530
  package: com.microsoft.azure.keyvault
  summary: "<p>Restores a backed up storage account to a vault. Restores a backed up storage account to a vault. This operation requires the storage/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> restoreStorageAccountWithServiceResponseAsync(String vaultBaseUrl, byte[] storageBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContacts(String,Contacts)
  id: setCertificateContacts(String,Contacts)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setCertificateContacts(String vaultBaseUrl, Contacts contacts)
  nameWithType: KeyVaultClientBase.setCertificateContacts(String vaultBaseUrl, Contacts contacts)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContacts(String vaultBaseUrl, Contacts contacts)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContacts*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2439
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Contacts setCertificateContacts(String vaultBaseUrl, Contacts contacts)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>The contacts for the key vault certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>the Contacts object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync(String,Contacts)
  id: setCertificateContactsAsync(String,Contacts)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
  nameWithType: KeyVaultClientBase.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2462
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Contacts> setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>The contacts for the key vault certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the observable to the Contacts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync(String,Contacts,final ServiceCallback<Contacts>)
  id: setCertificateContactsAsync(String,Contacts,final ServiceCallback<Contacts>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
  nameWithType: KeyVaultClientBase.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2451
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Contacts> setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>The contacts for the key vault certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsWithServiceResponseAsync(String,Contacts)
  id: setCertificateContactsWithServiceResponseAsync(String,Contacts)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
  nameWithType: KeyVaultClientBase.setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2473
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Contacts>> setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>The contacts for the key vault certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.Contactse7daa122
      description: <p>the observable to the Contacts object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer(String,String,String)
  id: setCertificateIssuer(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
  nameWithType: KeyVaultClientBase.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2662
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public IssuerBundle setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    return:
      type: com.microsoft.azure.keyvault.models.IssuerBundle
      description: <p>the IssuerBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  id: setCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBase.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2715
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public IssuerBundle setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: com.microsoft.azure.keyvault.models.IssuerBundle
      description: <p>the IssuerBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String,String,String)
  id: setCertificateIssuerAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
  nameWithType: KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2687
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String,String,String,final ServiceCallback<IssuerBundle>)
  id: setCertificateIssuerAsync(String,String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2675
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  id: setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2746
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  id: setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2731
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync(String,String,String)
  id: setCertificateIssuerWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
  nameWithType: KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2699
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  id: setCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2761
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinition(String,String,String,String,SasTokenType,String)
  id: setSasDefinition(String,String,String,String,SasTokenType,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  nameWithType: KeyVaultClientBase.setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinition*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5287
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public SasDefinitionBundle setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SasDefinitionBundle
      description: <p>the SasDefinitionBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinition(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  id: setSasDefinition(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinition*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5347
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public SasDefinitionBundle setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SasDefinitionBundle
      description: <p>the SasDefinitionBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync(String,String,String,String,SasTokenType,String)
  id: setSasDefinitionAsync(String,String,String,String,SasTokenType,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  nameWithType: KeyVaultClientBase.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5316
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SasDefinitionBundle> setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the observable to the SasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync(String,String,String,String,SasTokenType,String,final ServiceCallback<SasDefinitionBundle>)
  id: setSasDefinitionAsync(String,String,String,String,SasTokenType,String,final ServiceCallback<SasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5302
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SasDefinitionBundle> setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, final ServiceCallback<SasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  id: setSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5380
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SasDefinitionBundle> setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the observable to the SasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>,final ServiceCallback<SasDefinitionBundle>)
  id: setSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>,final ServiceCallback<SasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5364
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SasDefinitionBundle> setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync(String,String,String,String,SasTokenType,String)
  id: setSasDefinitionWithServiceResponseAsync(String,String,String,String,SasTokenType,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  nameWithType: KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5330
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SasDefinitionBundle>> setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
      description: <p>the observable to the SasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  id: setSasDefinitionWithServiceResponseAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5396
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SasDefinitionBundle>> setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
      description: <p>the observable to the SasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret(String,String,String)
  id: setSecret(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSecret(String vaultBaseUrl, String secretName, String value)
  nameWithType: KeyVaultClientBase.setSecret(String vaultBaseUrl, String secretName, String value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret(String vaultBaseUrl, String secretName, String value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1467
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle setSecret(String vaultBaseUrl, String secretName, String value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret(String,String,String,Map<String, String>,String,SecretAttributes)
  id: setSecret(String,String,String,Map<String, String>,String,SecretAttributes)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  nameWithType: KeyVaultClientBase.setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1520
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String,String,String)
  id: setSecretAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value)
  nameWithType: KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1492
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  id: setSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1480
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  id: setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  nameWithType: KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1551
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes,final ServiceCallback<SecretBundle>)
  id: setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1536
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync(String,String,String)
  id: setSecretWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
  nameWithType: KeyVaultClientBase.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1504
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  id: setSecretWithServiceResponseAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  nameWithType: KeyVaultClientBase.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1566
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccount(String,String,String,String,boolean)
  id: setStorageAccount(String,String,String,String,boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  nameWithType: KeyVaultClientBase.setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4631
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccount(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>)
  id: setStorageAccount(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4688
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync(String,String,String,String,boolean)
  id: setStorageAccountAsync(String,String,String,String,boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  nameWithType: KeyVaultClientBase.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4658
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync(String,String,String,String,boolean,final ServiceCallback<StorageBundle>)
  id: setStorageAccountAsync(String,String,String,String,boolean,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, final ServiceCallback<StorageBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4645
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>)
  id: setStorageAccountAsync(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4721
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>,final ServiceCallback<StorageBundle>)
  id: setStorageAccountAsync(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4705
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountWithServiceResponseAsync(String,String,String,String,boolean)
  id: setStorageAccountWithServiceResponseAsync(String,String,String,String,boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  nameWithType: KeyVaultClientBase.setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4671
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountWithServiceResponseAsync(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>)
  id: setStorageAccountWithServiceResponseAsync(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4737
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.sign(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  id: sign(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.sign*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1000
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key. This operation requires the keys/sign permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyOperationResult sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyOperationResult
      description: <p>the KeyOperationResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  id: signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1029
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key. This operation requires the keys/sign permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyOperationResult> signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  id: signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBase.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1015
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key. This operation requires the keys/sign permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyOperationResult> signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.signWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  id: signWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.signWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1043
  package: com.microsoft.azure.keyvault
  summary: "<p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key. This operation requires the keys/sign permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyOperationResulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: unwrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1181
  package: com.microsoft.azure.keyvault
  summary: "<p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/unwrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyOperationResult unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyOperationResult
      description: <p>the KeyOperationResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1210
  package: com.microsoft.azure.keyvault
  summary: "<p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/unwrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyOperationResult> unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  id: unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBase.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1196
  package: com.microsoft.azure.keyvault
  summary: "<p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/unwrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyOperationResult> unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: unwrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1224
  package: com.microsoft.azure.keyvault
  summary: "<p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/unwrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyOperationResulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate(String,String,String)
  id: updateCertificate(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBase.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3395
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: updateCertificate(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3448
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String,String,String)
  id: updateCertificateAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3420
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3479
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  id: updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3464
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  id: updateCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3408
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer(String,String)
  id: updateCertificateIssuer(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateIssuer(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.updateCertificateIssuer(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2774
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public IssuerBundle updateCertificateIssuer(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: com.microsoft.azure.keyvault.models.IssuerBundle
      description: <p>the IssuerBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  id: updateCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBase.updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2824
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public IssuerBundle updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: com.microsoft.azure.keyvault.models.IssuerBundle
      description: <p>the IssuerBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String,String)
  id: updateCertificateIssuerAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2797
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  id: updateCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2786
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  id: updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2855
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  id: updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2840
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync(String,String)
  id: updateCertificateIssuerWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2808
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  id: updateCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 2870
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperation(String,String,boolean)
  id: updateCertificateOperation(String,String,boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  nameWithType: KeyVaultClientBase.updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperation*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3559
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates a certificate operation. Updates a certificate creation operation that is already in progress. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateOperation updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateOperation
      description: <p>the CertificateOperation object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync(String,String,boolean)
  id: updateCertificateOperationAsync(String,String,boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  nameWithType: KeyVaultClientBase.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3584
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates a certificate operation. Updates a certificate creation operation that is already in progress. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateOperation> updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync(String,String,boolean,final ServiceCallback<CertificateOperation>)
  id: updateCertificateOperationAsync(String,String,boolean,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBase.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3572
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates a certificate operation. Updates a certificate creation operation that is already in progress. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateOperation> updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationWithServiceResponseAsync(String,String,boolean)
  id: updateCertificateOperationWithServiceResponseAsync(String,String,boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  nameWithType: KeyVaultClientBase.updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3596
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates a certificate operation. Updates a certificate creation operation that is already in progress. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateOperatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicy(String,String,CertificatePolicy)
  id: updateCertificatePolicy(String,String,CertificatePolicy)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  nameWithType: KeyVaultClientBase.updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicy*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3344
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificatePolicy updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The policy for the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>the CertificatePolicy object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync(String,String,CertificatePolicy)
  id: updateCertificatePolicyAsync(String,String,CertificatePolicy)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  nameWithType: KeyVaultClientBase.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3369
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificatePolicy> updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The policy for the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
      description: <p>the observable to the CertificatePolicy object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync(String,String,CertificatePolicy,final ServiceCallback<CertificatePolicy>)
  id: updateCertificatePolicyAsync(String,String,CertificatePolicy,final ServiceCallback<CertificatePolicy>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
  nameWithType: KeyVaultClientBase.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3357
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificatePolicy> updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The policy for the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyWithServiceResponseAsync(String,String,CertificatePolicy)
  id: updateCertificatePolicyWithServiceResponseAsync(String,String,CertificatePolicy)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  nameWithType: KeyVaultClientBase.updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3381
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificatePolicy>> updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The policy for the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificatePolicye7daa122
      description: <p>the observable to the CertificatePolicy object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync(String,String,String)
  id: updateCertificateWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBase.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3432
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  id: updateCertificateWithServiceResponseAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 3494
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey(String,String,String)
  id: updateKey(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateKey(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBase.updateKey(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey(String vaultBaseUrl, String keyName, String keyVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 436
  package: com.microsoft.azure.keyvault
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle updateKey(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  id: updateKey(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 489
  package: com.microsoft.azure.keyvault
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String,String,String)
  id: updateKeyAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 461
  package: com.microsoft.azure.keyvault
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  id: updateKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 449
  package: com.microsoft.azure.keyvault
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  id: updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 520
  package: com.microsoft.azure.keyvault
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  id: updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 505
  package: com.microsoft.azure.keyvault
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync(String,String,String)
  id: updateKeyWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBase.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 473
  package: com.microsoft.azure.keyvault
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  id: updateKeyWithServiceResponseAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 535
  package: com.microsoft.azure.keyvault
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinition(String,String,String)
  id: updateSasDefinition(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinition*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5409
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public SasDefinitionBundle updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SasDefinitionBundle
      description: <p>the SasDefinitionBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinition(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  id: updateSasDefinition(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinition*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5460
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public SasDefinitionBundle updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SasDefinitionBundle
      description: <p>the SasDefinitionBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync(String,String,String)
  id: updateSasDefinitionAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5432
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SasDefinitionBundle> updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the observable to the SasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync(String,String,String,final ServiceCallback<SasDefinitionBundle>)
  id: updateSasDefinitionAsync(String,String,String,final ServiceCallback<SasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5421
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SasDefinitionBundle> updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  id: updateSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5493
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SasDefinitionBundle> updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the observable to the SasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>,final ServiceCallback<SasDefinitionBundle>)
  id: updateSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>,final ServiceCallback<SasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5477
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SasDefinitionBundle> updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync(String,String,String)
  id: updateSasDefinitionWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5443
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SasDefinitionBundle>> updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
      description: <p>the observable to the SasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  id: updateSasDefinitionWithServiceResponseAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 5509
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SasDefinitionBundle>> updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
      description: <p>the observable to the SasDefinitionBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret(String,String,String)
  id: updateSecret(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBase.updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1627
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret(String,String,String,String,SecretAttributes,Map<String, String>)
  id: updateSecret(String,String,String,String,SecretAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1680
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String,String,String)
  id: updateSecretAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1652
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  id: updateSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1640
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  id: updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1711
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>,final ServiceCallback<SecretBundle>)
  id: updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1696
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync(String,String,String)
  id: updateSecretWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBase.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1664
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  id: updateSecretWithServiceResponseAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1726
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccount(String,String)
  id: updateStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.updateStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccount(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4749
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle updateStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccount(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>)
  id: updateStorageAccount(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateStorageAccount(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateStorageAccount(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccount(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccount*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4796
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle updateStorageAccount(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>The current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 866c2227
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync(String,String)
  id: updateStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4770
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync(String,String,final ServiceCallback<StorageBundle>)
  id: updateStorageAccountAsync(String,String,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4760
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>)
  id: updateStorageAccountAsync(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4827
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>The current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 866c2227
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>,final ServiceCallback<StorageBundle>)
  id: updateStorageAccountAsync(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBase.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4812
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>The current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 866c2227
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync(String,String)
  id: updateStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4780
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>)
  id: updateStorageAccountWithServiceResponseAsync(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 4842
  package: com.microsoft.azure.keyvault
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>The current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 866c2227
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.userAgent()
  id: userAgent()
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: userAgent()
  nameWithType: KeyVaultClientBase.userAgent()
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.userAgent()
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.userAgent*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 89
  package: com.microsoft.azure.keyvault
  summary: "<p>Gets the User-Agent header for the client.</p>\r\n<p></p>"
  syntax:
    content: public String userAgent()
    return:
      type: "26831127"
      description: <p>the user agent string. </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.verify(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  id: verify(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: KeyVaultClientBase.verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.verify*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1060
  package: com.microsoft.azure.keyvault
  summary: "<p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key. This operation requires the keys/verify permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyVerifyResult verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyVerifyResult
      description: <p>the KeyVerifyResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  id: verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: KeyVaultClientBase.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1091
  package: com.microsoft.azure.keyvault
  summary: "<p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key. This operation requires the keys/verify permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyVerifyResult> verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyVerifyResulta08ddfce
      description: <p>the observable to the KeyVerifyResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [],final ServiceCallback<KeyVerifyResult>)
  id: verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [],final ServiceCallback<KeyVerifyResult>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  nameWithType: KeyVaultClientBase.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1076
  package: com.microsoft.azure.keyvault
  summary: "<p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key. This operation requires the keys/verify permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyVerifyResult> verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyVerifyResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyVerifyResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  id: verifyWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: KeyVaultClientBase.verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1106
  package: com.microsoft.azure.keyvault
  summary: "<p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key. This operation requires the keys/verify permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyVerifyResult>> verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyVerifyResulte7daa122
      description: <p>the observable to the KeyVerifyResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.withAcceptLanguage(String)
  id: withAcceptLanguage(String)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: withAcceptLanguage(String acceptLanguage)
  nameWithType: KeyVaultClientBase.withAcceptLanguage(String acceptLanguage)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.withAcceptLanguage(String acceptLanguage)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.withAcceptLanguage*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 111
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets Gets or sets the preferred language for the response..</p>\r\n<p></p>"
  syntax:
    content: public KeyVaultClientBase withAcceptLanguage(String acceptLanguage)
    parameters:
    - id: acceptLanguage
      type: "26831127"
      description: <p>the acceptLanguage value. </p>
    return:
      type: com.microsoft.azure.keyvault.KeyVaultClientBase
      description: <p>the service client itself </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.withGenerateClientRequestId(boolean)
  id: withGenerateClientRequestId(boolean)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: withGenerateClientRequestId(boolean generateClientRequestId)
  nameWithType: KeyVaultClientBase.withGenerateClientRequestId(boolean generateClientRequestId)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.withGenerateClientRequestId(boolean generateClientRequestId)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.withGenerateClientRequestId*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 141
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..</p>\r\n<p></p>"
  syntax:
    content: public KeyVaultClientBase withGenerateClientRequestId(boolean generateClientRequestId)
    parameters:
    - id: generateClientRequestId
      type: 4fc6e284
      description: <p>the generateClientRequestId value. </p>
    return:
      type: com.microsoft.azure.keyvault.KeyVaultClientBase
      description: <p>the service client itself </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.withLongRunningOperationRetryTimeout(int)
  id: withLongRunningOperationRetryTimeout(int)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  nameWithType: KeyVaultClientBase.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.withLongRunningOperationRetryTimeout*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 126
  package: com.microsoft.azure.keyvault
  summary: "<p>Sets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30..</p>\r\n<p></p>"
  syntax:
    content: public KeyVaultClientBase withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
    parameters:
    - id: longRunningOperationRetryTimeout
      type: f75371fa
      description: <p>the longRunningOperationRetryTimeout value. </p>
    return:
      type: com.microsoft.azure.keyvault.KeyVaultClientBase
      description: <p>the service client itself </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: wrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKey*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1122
  package: com.microsoft.azure.keyvault
  summary: "<p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/wrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyOperationResult wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyOperationResult
      description: <p>the KeyOperationResult object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: a4c35d80
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1151
  package: com.microsoft.azure.keyvault
  summary: "<p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/wrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyOperationResult> wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  id: wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBase.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1137
  package: com.microsoft.azure.keyvault
  summary: "<p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/wrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyOperationResult> wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  id: wrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.KeyVaultClientBase
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  langs:
  - java
  name: wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBase.wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  overload: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: sdk/keyvault/microsoft-azure-keyvault/src/main/java/com/microsoft/azure/keyvault/KeyVaultClientBase.java
    startLine: 1165
  package: com.microsoft.azure.keyvault
  summary: "<p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/wrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyOperationResulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 9545a295
  spec.java:
  - name: RestClient
    fullName: RestClient
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restClient*
  name: restClient
  nameWithType: KeyVaultClientBase.restClient
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restClient
  package: com.microsoft.azure.keyvault
- uid: c1c26e8d
  spec.java:
  - name: AzureClient
    fullName: AzureClient
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getAzureClient*
  name: getAzureClient
  nameWithType: KeyVaultClientBase.getAzureClient
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getAzureClient
  package: com.microsoft.azure.keyvault
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.userAgent*
  name: userAgent
  nameWithType: KeyVaultClientBase.userAgent
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.userAgent
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.apiVersion*
  name: apiVersion
  nameWithType: KeyVaultClientBase.apiVersion
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.apiVersion
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.acceptLanguage*
  name: acceptLanguage
  nameWithType: KeyVaultClientBase.acceptLanguage
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.acceptLanguage
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.withAcceptLanguage*
  name: withAcceptLanguage
  nameWithType: KeyVaultClientBase.withAcceptLanguage
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.withAcceptLanguage
  package: com.microsoft.azure.keyvault
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.longRunningOperationRetryTimeout*
  name: longRunningOperationRetryTimeout
  nameWithType: KeyVaultClientBase.longRunningOperationRetryTimeout
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.longRunningOperationRetryTimeout
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.withLongRunningOperationRetryTimeout*
  name: withLongRunningOperationRetryTimeout
  nameWithType: KeyVaultClientBase.withLongRunningOperationRetryTimeout
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.withLongRunningOperationRetryTimeout
  package: com.microsoft.azure.keyvault
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.generateClientRequestId*
  name: generateClientRequestId
  nameWithType: KeyVaultClientBase.generateClientRequestId
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.generateClientRequestId
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.withGenerateClientRequestId*
  name: withGenerateClientRequestId
  nameWithType: KeyVaultClientBase.withGenerateClientRequestId
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.withGenerateClientRequestId
  package: com.microsoft.azure.keyvault
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: a4c35d80
  spec.java:
  - name: KeyVaultErrorException
    fullName: KeyVaultErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createKey*
  name: createKey
  nameWithType: KeyVaultClientBase.createKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createKey
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.KeyBundle
    name: KeyBundle
    fullName: com.microsoft.azure.keyvault.models.KeyBundle
    href: com.microsoft.azure.keyvault.models.KeyBundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.KeyBundle
    name: KeyBundle
    fullName: com.microsoft.azure.keyvault.models.KeyBundle
    href: com.microsoft.azure.keyvault.models.KeyBundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync*
  name: createKeyAsync
  nameWithType: KeyVaultClientBase.createKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.KeyBundle
    name: KeyBundle
    fullName: com.microsoft.azure.keyvault.models.KeyBundle
    href: com.microsoft.azure.keyvault.models.KeyBundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.KeyBundle
    name: KeyBundle
    fullName: com.microsoft.azure.keyvault.models.KeyBundle
    href: com.microsoft.azure.keyvault.models.KeyBundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync*
  name: createKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.createKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.keyvault.webkey.JsonWebKeyOperation
    name: JsonWebKeyOperation
    fullName: com.microsoft.azure.keyvault.webkey.JsonWebKeyOperation
    href: com.microsoft.azure.keyvault.webkey.JsonWebKeyOperation.yml
  - name: '>'
    fullName: '>'
- uid: 689c8cb5
  spec.java:
  - name: Map<String, String>
    fullName: Map<String, String>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importKey*
  name: importKey
  nameWithType: KeyVaultClientBase.importKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync*
  name: importKeyAsync
  nameWithType: KeyVaultClientBase.importKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync*
  name: importKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.importKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKey*
  name: deleteKey
  nameWithType: KeyVaultClientBase.deleteKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKey
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.DeletedKeyBundle
    name: DeletedKeyBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyBundle
    href: com.microsoft.azure.keyvault.models.DeletedKeyBundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.DeletedKeyBundle
    name: DeletedKeyBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyBundle
    href: com.microsoft.azure.keyvault.models.DeletedKeyBundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync*
  name: deleteKeyAsync
  nameWithType: KeyVaultClientBase.deleteKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.DeletedKeyBundle
    name: DeletedKeyBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyBundle
    href: com.microsoft.azure.keyvault.models.DeletedKeyBundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.DeletedKeyBundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.DeletedKeyBundle
    name: DeletedKeyBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyBundle
    href: com.microsoft.azure.keyvault.models.DeletedKeyBundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyWithServiceResponseAsync*
  name: deleteKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey*
  name: updateKey
  nameWithType: KeyVaultClientBase.updateKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync*
  name: updateKeyAsync
  nameWithType: KeyVaultClientBase.updateKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync*
  name: updateKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKey*
  name: getKey
  nameWithType: KeyVaultClientBase.getKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync*
  name: getKeyAsync
  nameWithType: KeyVaultClientBase.getKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyWithServiceResponseAsync*
  name: getKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models.KeyItem
    name: KeyItem
    fullName: com.microsoft.azure.keyvault.models.KeyItem
    href: com.microsoft.azure.keyvault.models.KeyItem.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions*
  name: getKeyVersions
  nameWithType: KeyVaultClientBase.getKeyVersions
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersions
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models.KeyItem
    name: KeyItem
    fullName: com.microsoft.azure.keyvault.models.KeyItem
    href: com.microsoft.azure.keyvault.models.KeyItem.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.KeyItem
    name: KeyItem
    fullName: com.microsoft.azure.keyvault.models.KeyItem
    href: com.microsoft.azure.keyvault.models.KeyItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync*
  name: getKeyVersionsAsync
  nameWithType: KeyVaultClientBase.getKeyVersionsAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models.KeyItem
    name: KeyItem
    fullName: com.microsoft.azure.keyvault.models.KeyItem
    href: com.microsoft.azure.keyvault.models.KeyItem.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models.KeyItem
    name: KeyItem
    fullName: com.microsoft.azure.keyvault.models.KeyItem
    href: com.microsoft.azure.keyvault.models.KeyItem.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync*
  name: getKeyVersionsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 3437983f
  spec.java:
  - name: final Integer
    fullName: final Integer
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys*
  name: getKeys
  nameWithType: KeyVaultClientBase.getKeys
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeys
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync*
  name: getKeysAsync
  nameWithType: KeyVaultClientBase.getKeysAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync*
  name: getKeysWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getKeysWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKey*
  name: backupKey
  nameWithType: KeyVaultClientBase.backupKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKey
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.BackupKeyResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.BackupKeyResult
    name: BackupKeyResult
    fullName: com.microsoft.azure.keyvault.models.BackupKeyResult
    href: com.microsoft.azure.keyvault.models.BackupKeyResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.BackupKeyResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.BackupKeyResult
    name: BackupKeyResult
    fullName: com.microsoft.azure.keyvault.models.BackupKeyResult
    href: com.microsoft.azure.keyvault.models.BackupKeyResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync*
  name: backupKeyAsync
  nameWithType: KeyVaultClientBase.backupKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.BackupKeyResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.BackupKeyResult
    name: BackupKeyResult
    fullName: com.microsoft.azure.keyvault.models.BackupKeyResult
    href: com.microsoft.azure.keyvault.models.BackupKeyResult.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.BackupKeyResulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.BackupKeyResult
    name: BackupKeyResult
    fullName: com.microsoft.azure.keyvault.models.BackupKeyResult
    href: com.microsoft.azure.keyvault.models.BackupKeyResult.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyWithServiceResponseAsync*
  name: backupKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.backupKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKey*
  name: restoreKey
  nameWithType: KeyVaultClientBase.restoreKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync*
  name: restoreKeyAsync
  nameWithType: KeyVaultClientBase.restoreKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyWithServiceResponseAsync*
  name: restoreKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.restoreKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.encrypt*
  name: encrypt
  nameWithType: KeyVaultClientBase.encrypt
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.encrypt
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.KeyOperationResult
    name: KeyOperationResult
    fullName: com.microsoft.azure.keyvault.models.KeyOperationResult
    href: com.microsoft.azure.keyvault.models.KeyOperationResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.KeyOperationResult
    name: KeyOperationResult
    fullName: com.microsoft.azure.keyvault.models.KeyOperationResult
    href: com.microsoft.azure.keyvault.models.KeyOperationResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync*
  name: encryptAsync
  nameWithType: KeyVaultClientBase.encryptAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.KeyOperationResult
    name: KeyOperationResult
    fullName: com.microsoft.azure.keyvault.models.KeyOperationResult
    href: com.microsoft.azure.keyvault.models.KeyOperationResult.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.KeyOperationResulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.KeyOperationResult
    name: KeyOperationResult
    fullName: com.microsoft.azure.keyvault.models.KeyOperationResult
    href: com.microsoft.azure.keyvault.models.KeyOperationResult.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptWithServiceResponseAsync*
  name: encryptWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.encryptWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.encryptWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.decrypt*
  name: decrypt
  nameWithType: KeyVaultClientBase.decrypt
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.decrypt
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync*
  name: decryptAsync
  nameWithType: KeyVaultClientBase.decryptAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptWithServiceResponseAsync*
  name: decryptWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.decryptWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.decryptWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.sign*
  name: sign
  nameWithType: KeyVaultClientBase.sign
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.sign
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync*
  name: signAsync
  nameWithType: KeyVaultClientBase.signAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.signAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.signWithServiceResponseAsync*
  name: signWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.signWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.signWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.verify*
  name: verify
  nameWithType: KeyVaultClientBase.verify
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.verify
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.KeyVerifyResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.KeyVerifyResult
    name: KeyVerifyResult
    fullName: com.microsoft.azure.keyvault.models.KeyVerifyResult
    href: com.microsoft.azure.keyvault.models.KeyVerifyResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.KeyVerifyResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.KeyVerifyResult
    name: KeyVerifyResult
    fullName: com.microsoft.azure.keyvault.models.KeyVerifyResult
    href: com.microsoft.azure.keyvault.models.KeyVerifyResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync*
  name: verifyAsync
  nameWithType: KeyVaultClientBase.verifyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.KeyVerifyResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.KeyVerifyResult
    name: KeyVerifyResult
    fullName: com.microsoft.azure.keyvault.models.KeyVerifyResult
    href: com.microsoft.azure.keyvault.models.KeyVerifyResult.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.KeyVerifyResulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.KeyVerifyResult
    name: KeyVerifyResult
    fullName: com.microsoft.azure.keyvault.models.KeyVerifyResult
    href: com.microsoft.azure.keyvault.models.KeyVerifyResult.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyWithServiceResponseAsync*
  name: verifyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.verifyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.verifyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKey*
  name: wrapKey
  nameWithType: KeyVaultClientBase.wrapKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync*
  name: wrapKeyAsync
  nameWithType: KeyVaultClientBase.wrapKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyWithServiceResponseAsync*
  name: wrapKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.wrapKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.wrapKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKey*
  name: unwrapKey
  nameWithType: KeyVaultClientBase.unwrapKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync*
  name: unwrapKeyAsync
  nameWithType: KeyVaultClientBase.unwrapKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyWithServiceResponseAsync*
  name: unwrapKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.unwrapKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.unwrapKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models.DeletedKeyItem
    name: DeletedKeyItem
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
    href: com.microsoft.azure.keyvault.models.DeletedKeyItem.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys*
  name: getDeletedKeys
  nameWithType: KeyVaultClientBase.getDeletedKeys
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeys
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models.DeletedKeyItem
    name: DeletedKeyItem
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
    href: com.microsoft.azure.keyvault.models.DeletedKeyItem.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.DeletedKeyItem
    name: DeletedKeyItem
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
    href: com.microsoft.azure.keyvault.models.DeletedKeyItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync*
  name: getDeletedKeysAsync
  nameWithType: KeyVaultClientBase.getDeletedKeysAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models.DeletedKeyItem
    name: DeletedKeyItem
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
    href: com.microsoft.azure.keyvault.models.DeletedKeyItem.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models.DeletedKeyItem2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models.DeletedKeyItem
    name: DeletedKeyItem
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
    href: com.microsoft.azure.keyvault.models.DeletedKeyItem.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync*
  name: getDeletedKeysWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKey*
  name: getDeletedKey
  nameWithType: KeyVaultClientBase.getDeletedKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync*
  name: getDeletedKeyAsync
  nameWithType: KeyVaultClientBase.getDeletedKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyWithServiceResponseAsync*
  name: getDeletedKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKey*
  name: purgeDeletedKey
  nameWithType: KeyVaultClientBase.purgeDeletedKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKey
  package: com.microsoft.azure.keyvault
- uid: 1c186eb5
  spec.java:
  - name: final ServiceCallback<Void>
    fullName: final ServiceCallback<Void>
- uid: aa81d378
  spec.java:
  - name: ServiceFuture<Void>
    fullName: ServiceFuture<Void>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync*
  name: purgeDeletedKeyAsync
  nameWithType: KeyVaultClientBase.purgeDeletedKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyAsync
  package: com.microsoft.azure.keyvault
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: 27015fa1
  spec.java:
  - name: Observable<ServiceResponse<Void>>
    fullName: Observable<ServiceResponse<Void>>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyWithServiceResponseAsync*
  name: purgeDeletedKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.purgeDeletedKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKey*
  name: recoverDeletedKey
  nameWithType: KeyVaultClientBase.recoverDeletedKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync*
  name: recoverDeletedKeyAsync
  nameWithType: KeyVaultClientBase.recoverDeletedKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyWithServiceResponseAsync*
  name: recoverDeletedKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.recoverDeletedKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret*
  name: setSecret
  nameWithType: KeyVaultClientBase.setSecret
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecret
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.SecretBundle
    name: SecretBundle
    fullName: com.microsoft.azure.keyvault.models.SecretBundle
    href: com.microsoft.azure.keyvault.models.SecretBundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.SecretBundle
    name: SecretBundle
    fullName: com.microsoft.azure.keyvault.models.SecretBundle
    href: com.microsoft.azure.keyvault.models.SecretBundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync*
  name: setSecretAsync
  nameWithType: KeyVaultClientBase.setSecretAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.SecretBundle
    name: SecretBundle
    fullName: com.microsoft.azure.keyvault.models.SecretBundle
    href: com.microsoft.azure.keyvault.models.SecretBundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.SecretBundle
    name: SecretBundle
    fullName: com.microsoft.azure.keyvault.models.SecretBundle
    href: com.microsoft.azure.keyvault.models.SecretBundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync*
  name: setSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.setSecretWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecret*
  name: deleteSecret
  nameWithType: KeyVaultClientBase.deleteSecret
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecret
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.DeletedSecretBundle
    name: DeletedSecretBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretBundle
    href: com.microsoft.azure.keyvault.models.DeletedSecretBundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.DeletedSecretBundle
    name: DeletedSecretBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretBundle
    href: com.microsoft.azure.keyvault.models.DeletedSecretBundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync*
  name: deleteSecretAsync
  nameWithType: KeyVaultClientBase.deleteSecretAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.DeletedSecretBundle
    name: DeletedSecretBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretBundle
    href: com.microsoft.azure.keyvault.models.DeletedSecretBundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.DeletedSecretBundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.DeletedSecretBundle
    name: DeletedSecretBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretBundle
    href: com.microsoft.azure.keyvault.models.DeletedSecretBundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretWithServiceResponseAsync*
  name: deleteSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteSecretWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret*
  name: updateSecret
  nameWithType: KeyVaultClientBase.updateSecret
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecret
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync*
  name: updateSecretAsync
  nameWithType: KeyVaultClientBase.updateSecretAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync*
  name: updateSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateSecretWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecret*
  name: getSecret
  nameWithType: KeyVaultClientBase.getSecret
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecret
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync*
  name: getSecretAsync
  nameWithType: KeyVaultClientBase.getSecretAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretWithServiceResponseAsync*
  name: getSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSecretWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models.SecretItem
    name: SecretItem
    fullName: com.microsoft.azure.keyvault.models.SecretItem
    href: com.microsoft.azure.keyvault.models.SecretItem.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets*
  name: getSecrets
  nameWithType: KeyVaultClientBase.getSecrets
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecrets
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models.SecretItem
    name: SecretItem
    fullName: com.microsoft.azure.keyvault.models.SecretItem
    href: com.microsoft.azure.keyvault.models.SecretItem.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.SecretItem
    name: SecretItem
    fullName: com.microsoft.azure.keyvault.models.SecretItem
    href: com.microsoft.azure.keyvault.models.SecretItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync*
  name: getSecretsAsync
  nameWithType: KeyVaultClientBase.getSecretsAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models.SecretItem
    name: SecretItem
    fullName: com.microsoft.azure.keyvault.models.SecretItem
    href: com.microsoft.azure.keyvault.models.SecretItem.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models.SecretItem
    name: SecretItem
    fullName: com.microsoft.azure.keyvault.models.SecretItem
    href: com.microsoft.azure.keyvault.models.SecretItem.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync*
  name: getSecretsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSecretsWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions*
  name: getSecretVersions
  nameWithType: KeyVaultClientBase.getSecretVersions
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersions
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync*
  name: getSecretVersionsAsync
  nameWithType: KeyVaultClientBase.getSecretVersionsAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync*
  name: getSecretVersionsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models.DeletedSecretItem
    name: DeletedSecretItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
    href: com.microsoft.azure.keyvault.models.DeletedSecretItem.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets*
  name: getDeletedSecrets
  nameWithType: KeyVaultClientBase.getDeletedSecrets
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecrets
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models.DeletedSecretItem
    name: DeletedSecretItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
    href: com.microsoft.azure.keyvault.models.DeletedSecretItem.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.DeletedSecretItem
    name: DeletedSecretItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
    href: com.microsoft.azure.keyvault.models.DeletedSecretItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync*
  name: getDeletedSecretsAsync
  nameWithType: KeyVaultClientBase.getDeletedSecretsAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models.DeletedSecretItem
    name: DeletedSecretItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
    href: com.microsoft.azure.keyvault.models.DeletedSecretItem.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models.DeletedSecretItem2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models.DeletedSecretItem
    name: DeletedSecretItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
    href: com.microsoft.azure.keyvault.models.DeletedSecretItem.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync*
  name: getDeletedSecretsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecret*
  name: getDeletedSecret
  nameWithType: KeyVaultClientBase.getDeletedSecret
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecret
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync*
  name: getDeletedSecretAsync
  nameWithType: KeyVaultClientBase.getDeletedSecretAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretWithServiceResponseAsync*
  name: getDeletedSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedSecretWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecret*
  name: purgeDeletedSecret
  nameWithType: KeyVaultClientBase.purgeDeletedSecret
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecret
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync*
  name: purgeDeletedSecretAsync
  nameWithType: KeyVaultClientBase.purgeDeletedSecretAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretWithServiceResponseAsync*
  name: purgeDeletedSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.purgeDeletedSecretWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecret*
  name: recoverDeletedSecret
  nameWithType: KeyVaultClientBase.recoverDeletedSecret
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecret
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync*
  name: recoverDeletedSecretAsync
  nameWithType: KeyVaultClientBase.recoverDeletedSecretAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretWithServiceResponseAsync*
  name: recoverDeletedSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.recoverDeletedSecretWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecret*
  name: backupSecret
  nameWithType: KeyVaultClientBase.backupSecret
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecret
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.BackupSecretResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.BackupSecretResult
    name: BackupSecretResult
    fullName: com.microsoft.azure.keyvault.models.BackupSecretResult
    href: com.microsoft.azure.keyvault.models.BackupSecretResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.BackupSecretResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.BackupSecretResult
    name: BackupSecretResult
    fullName: com.microsoft.azure.keyvault.models.BackupSecretResult
    href: com.microsoft.azure.keyvault.models.BackupSecretResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync*
  name: backupSecretAsync
  nameWithType: KeyVaultClientBase.backupSecretAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.BackupSecretResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.BackupSecretResult
    name: BackupSecretResult
    fullName: com.microsoft.azure.keyvault.models.BackupSecretResult
    href: com.microsoft.azure.keyvault.models.BackupSecretResult.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.BackupSecretResulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.BackupSecretResult
    name: BackupSecretResult
    fullName: com.microsoft.azure.keyvault.models.BackupSecretResult
    href: com.microsoft.azure.keyvault.models.BackupSecretResult.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretWithServiceResponseAsync*
  name: backupSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.backupSecretWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecret*
  name: restoreSecret
  nameWithType: KeyVaultClientBase.restoreSecret
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecret
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync*
  name: restoreSecretAsync
  nameWithType: KeyVaultClientBase.restoreSecretAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretWithServiceResponseAsync*
  name: restoreSecretWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.restoreSecretWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreSecretWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models.CertificateItem
    name: CertificateItem
    fullName: com.microsoft.azure.keyvault.models.CertificateItem
    href: com.microsoft.azure.keyvault.models.CertificateItem.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates*
  name: getCertificates
  nameWithType: KeyVaultClientBase.getCertificates
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificates
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models.CertificateItem
    name: CertificateItem
    fullName: com.microsoft.azure.keyvault.models.CertificateItem
    href: com.microsoft.azure.keyvault.models.CertificateItem.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.CertificateItem
    name: CertificateItem
    fullName: com.microsoft.azure.keyvault.models.CertificateItem
    href: com.microsoft.azure.keyvault.models.CertificateItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync*
  name: getCertificatesAsync
  nameWithType: KeyVaultClientBase.getCertificatesAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models.CertificateItem
    name: CertificateItem
    fullName: com.microsoft.azure.keyvault.models.CertificateItem
    href: com.microsoft.azure.keyvault.models.CertificateItem.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models.CertificateItem
    name: CertificateItem
    fullName: com.microsoft.azure.keyvault.models.CertificateItem
    href: com.microsoft.azure.keyvault.models.CertificateItem.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync*
  name: getCertificatesWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificatesWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 2ec468d1
  spec.java:
  - name: final Boolean
    fullName: final Boolean
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificate*
  name: deleteCertificate
  nameWithType: KeyVaultClientBase.deleteCertificate
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificate
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
    name: DeletedCertificateBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
    href: com.microsoft.azure.keyvault.models.DeletedCertificateBundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
    name: DeletedCertificateBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
    href: com.microsoft.azure.keyvault.models.DeletedCertificateBundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync*
  name: deleteCertificateAsync
  nameWithType: KeyVaultClientBase.deleteCertificateAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
    name: DeletedCertificateBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
    href: com.microsoft.azure.keyvault.models.DeletedCertificateBundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.DeletedCertificateBundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
    name: DeletedCertificateBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
    href: com.microsoft.azure.keyvault.models.DeletedCertificateBundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateWithServiceResponseAsync*
  name: deleteCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteCertificateWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContacts*
  name: setCertificateContacts
  nameWithType: KeyVaultClientBase.setCertificateContacts
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContacts
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.Contactsa08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.Contacts
    name: Contacts
    fullName: com.microsoft.azure.keyvault.models.Contacts
    href: com.microsoft.azure.keyvault.models.Contacts.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.Contactsa08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.Contacts
    name: Contacts
    fullName: com.microsoft.azure.keyvault.models.Contacts
    href: com.microsoft.azure.keyvault.models.Contacts.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync*
  name: setCertificateContactsAsync
  nameWithType: KeyVaultClientBase.setCertificateContactsAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.Contactsa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.Contacts
    name: Contacts
    fullName: com.microsoft.azure.keyvault.models.Contacts
    href: com.microsoft.azure.keyvault.models.Contacts.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.Contactse7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.Contacts
    name: Contacts
    fullName: com.microsoft.azure.keyvault.models.Contacts
    href: com.microsoft.azure.keyvault.models.Contacts.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsWithServiceResponseAsync*
  name: setCertificateContactsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.setCertificateContactsWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateContactsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContacts*
  name: getCertificateContacts
  nameWithType: KeyVaultClientBase.getCertificateContacts
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContacts
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync*
  name: getCertificateContactsAsync
  nameWithType: KeyVaultClientBase.getCertificateContactsAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsWithServiceResponseAsync*
  name: getCertificateContactsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateContactsWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateContactsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContacts*
  name: deleteCertificateContacts
  nameWithType: KeyVaultClientBase.deleteCertificateContacts
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContacts
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync*
  name: deleteCertificateContactsAsync
  nameWithType: KeyVaultClientBase.deleteCertificateContactsAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsWithServiceResponseAsync*
  name: deleteCertificateContactsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteCertificateContactsWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateContactsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    name: CertificateIssuerItem
    fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    href: com.microsoft.azure.keyvault.models.CertificateIssuerItem.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers*
  name: getCertificateIssuers
  nameWithType: KeyVaultClientBase.getCertificateIssuers
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuers
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    name: CertificateIssuerItem
    fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    href: com.microsoft.azure.keyvault.models.CertificateIssuerItem.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    name: CertificateIssuerItem
    fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    href: com.microsoft.azure.keyvault.models.CertificateIssuerItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync*
  name: getCertificateIssuersAsync
  nameWithType: KeyVaultClientBase.getCertificateIssuersAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    name: CertificateIssuerItem
    fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    href: com.microsoft.azure.keyvault.models.CertificateIssuerItem.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models.CertificateIssuerItem2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    name: CertificateIssuerItem
    fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    href: com.microsoft.azure.keyvault.models.CertificateIssuerItem.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync*
  name: getCertificateIssuersWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer*
  name: setCertificateIssuer
  nameWithType: KeyVaultClientBase.setCertificateIssuer
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuer
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.IssuerBundle
    name: IssuerBundle
    fullName: com.microsoft.azure.keyvault.models.IssuerBundle
    href: com.microsoft.azure.keyvault.models.IssuerBundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.IssuerBundle
    name: IssuerBundle
    fullName: com.microsoft.azure.keyvault.models.IssuerBundle
    href: com.microsoft.azure.keyvault.models.IssuerBundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync*
  name: setCertificateIssuerAsync
  nameWithType: KeyVaultClientBase.setCertificateIssuerAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.IssuerBundle
    name: IssuerBundle
    fullName: com.microsoft.azure.keyvault.models.IssuerBundle
    href: com.microsoft.azure.keyvault.models.IssuerBundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.IssuerBundle
    name: IssuerBundle
    fullName: com.microsoft.azure.keyvault.models.IssuerBundle
    href: com.microsoft.azure.keyvault.models.IssuerBundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync*
  name: setCertificateIssuerWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setCertificateIssuerWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer*
  name: updateCertificateIssuer
  nameWithType: KeyVaultClientBase.updateCertificateIssuer
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuer
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync*
  name: updateCertificateIssuerAsync
  nameWithType: KeyVaultClientBase.updateCertificateIssuerAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync*
  name: updateCertificateIssuerWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateIssuerWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuer*
  name: getCertificateIssuer
  nameWithType: KeyVaultClientBase.getCertificateIssuer
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuer
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync*
  name: getCertificateIssuerAsync
  nameWithType: KeyVaultClientBase.getCertificateIssuerAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerWithServiceResponseAsync*
  name: getCertificateIssuerWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateIssuerWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuerWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuer*
  name: deleteCertificateIssuer
  nameWithType: KeyVaultClientBase.deleteCertificateIssuer
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuer
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync*
  name: deleteCertificateIssuerAsync
  nameWithType: KeyVaultClientBase.deleteCertificateIssuerAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerWithServiceResponseAsync*
  name: deleteCertificateIssuerWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteCertificateIssuerWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateIssuerWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate*
  name: createCertificate
  nameWithType: KeyVaultClientBase.createCertificate
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificate
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.CertificateOperation
    name: CertificateOperation
    fullName: com.microsoft.azure.keyvault.models.CertificateOperation
    href: com.microsoft.azure.keyvault.models.CertificateOperation.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.CertificateOperation
    name: CertificateOperation
    fullName: com.microsoft.azure.keyvault.models.CertificateOperation
    href: com.microsoft.azure.keyvault.models.CertificateOperation.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync*
  name: createCertificateAsync
  nameWithType: KeyVaultClientBase.createCertificateAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.CertificateOperation
    name: CertificateOperation
    fullName: com.microsoft.azure.keyvault.models.CertificateOperation
    href: com.microsoft.azure.keyvault.models.CertificateOperation.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.CertificateOperatione7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.CertificateOperation
    name: CertificateOperation
    fullName: com.microsoft.azure.keyvault.models.CertificateOperation
    href: com.microsoft.azure.keyvault.models.CertificateOperation.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync*
  name: createCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.createCertificateWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.createCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate*
  name: importCertificate
  nameWithType: KeyVaultClientBase.importCertificate
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificate
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.CertificateBundle
    name: CertificateBundle
    fullName: com.microsoft.azure.keyvault.models.CertificateBundle
    href: com.microsoft.azure.keyvault.models.CertificateBundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.CertificateBundle
    name: CertificateBundle
    fullName: com.microsoft.azure.keyvault.models.CertificateBundle
    href: com.microsoft.azure.keyvault.models.CertificateBundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync*
  name: importCertificateAsync
  nameWithType: KeyVaultClientBase.importCertificateAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.CertificateBundle
    name: CertificateBundle
    fullName: com.microsoft.azure.keyvault.models.CertificateBundle
    href: com.microsoft.azure.keyvault.models.CertificateBundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.CertificateBundle
    name: CertificateBundle
    fullName: com.microsoft.azure.keyvault.models.CertificateBundle
    href: com.microsoft.azure.keyvault.models.CertificateBundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync*
  name: importCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.importCertificateWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.importCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions*
  name: getCertificateVersions
  nameWithType: KeyVaultClientBase.getCertificateVersions
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersions
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync*
  name: getCertificateVersionsAsync
  nameWithType: KeyVaultClientBase.getCertificateVersionsAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync*
  name: getCertificateVersionsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicy*
  name: getCertificatePolicy
  nameWithType: KeyVaultClientBase.getCertificatePolicy
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicy
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.CertificatePolicy
    name: CertificatePolicy
    fullName: com.microsoft.azure.keyvault.models.CertificatePolicy
    href: com.microsoft.azure.keyvault.models.CertificatePolicy.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.CertificatePolicy
    name: CertificatePolicy
    fullName: com.microsoft.azure.keyvault.models.CertificatePolicy
    href: com.microsoft.azure.keyvault.models.CertificatePolicy.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync*
  name: getCertificatePolicyAsync
  nameWithType: KeyVaultClientBase.getCertificatePolicyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.CertificatePolicy
    name: CertificatePolicy
    fullName: com.microsoft.azure.keyvault.models.CertificatePolicy
    href: com.microsoft.azure.keyvault.models.CertificatePolicy.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.CertificatePolicye7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.CertificatePolicy
    name: CertificatePolicy
    fullName: com.microsoft.azure.keyvault.models.CertificatePolicy
    href: com.microsoft.azure.keyvault.models.CertificatePolicy.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyWithServiceResponseAsync*
  name: getCertificatePolicyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificatePolicyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatePolicyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicy*
  name: updateCertificatePolicy
  nameWithType: KeyVaultClientBase.updateCertificatePolicy
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicy
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync*
  name: updateCertificatePolicyAsync
  nameWithType: KeyVaultClientBase.updateCertificatePolicyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyWithServiceResponseAsync*
  name: updateCertificatePolicyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateCertificatePolicyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificatePolicyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate*
  name: updateCertificate
  nameWithType: KeyVaultClientBase.updateCertificate
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync*
  name: updateCertificateAsync
  nameWithType: KeyVaultClientBase.updateCertificateAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync*
  name: updateCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateCertificateWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificate*
  name: getCertificate
  nameWithType: KeyVaultClientBase.getCertificate
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync*
  name: getCertificateAsync
  nameWithType: KeyVaultClientBase.getCertificateAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateWithServiceResponseAsync*
  name: getCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperation*
  name: updateCertificateOperation
  nameWithType: KeyVaultClientBase.updateCertificateOperation
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperation
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync*
  name: updateCertificateOperationAsync
  nameWithType: KeyVaultClientBase.updateCertificateOperationAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationWithServiceResponseAsync*
  name: updateCertificateOperationWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateCertificateOperationWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateCertificateOperationWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperation*
  name: getCertificateOperation
  nameWithType: KeyVaultClientBase.getCertificateOperation
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperation
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync*
  name: getCertificateOperationAsync
  nameWithType: KeyVaultClientBase.getCertificateOperationAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationWithServiceResponseAsync*
  name: getCertificateOperationWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateOperationWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateOperationWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperation*
  name: deleteCertificateOperation
  nameWithType: KeyVaultClientBase.deleteCertificateOperation
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperation
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync*
  name: deleteCertificateOperationAsync
  nameWithType: KeyVaultClientBase.deleteCertificateOperationAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationWithServiceResponseAsync*
  name: deleteCertificateOperationWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteCertificateOperationWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteCertificateOperationWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: ec5d9e1e
  spec.java:
  - name: List<byte[]>
    fullName: List<byte[]>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate*
  name: mergeCertificate
  nameWithType: KeyVaultClientBase.mergeCertificate
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync*
  name: mergeCertificateAsync
  nameWithType: KeyVaultClientBase.mergeCertificateAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync*
  name: mergeCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.mergeCertificateWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.mergeCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificate*
  name: backupCertificate
  nameWithType: KeyVaultClientBase.backupCertificate
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificate
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.BackupCertificateResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.BackupCertificateResult
    name: BackupCertificateResult
    fullName: com.microsoft.azure.keyvault.models.BackupCertificateResult
    href: com.microsoft.azure.keyvault.models.BackupCertificateResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.BackupCertificateResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.BackupCertificateResult
    name: BackupCertificateResult
    fullName: com.microsoft.azure.keyvault.models.BackupCertificateResult
    href: com.microsoft.azure.keyvault.models.BackupCertificateResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateAsync*
  name: backupCertificateAsync
  nameWithType: KeyVaultClientBase.backupCertificateAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.BackupCertificateResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.BackupCertificateResult
    name: BackupCertificateResult
    fullName: com.microsoft.azure.keyvault.models.BackupCertificateResult
    href: com.microsoft.azure.keyvault.models.BackupCertificateResult.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.BackupCertificateResulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.BackupCertificateResult
    name: BackupCertificateResult
    fullName: com.microsoft.azure.keyvault.models.BackupCertificateResult
    href: com.microsoft.azure.keyvault.models.BackupCertificateResult.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateWithServiceResponseAsync*
  name: backupCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.backupCertificateWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificate*
  name: restoreCertificate
  nameWithType: KeyVaultClientBase.restoreCertificate
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateAsync*
  name: restoreCertificateAsync
  nameWithType: KeyVaultClientBase.restoreCertificateAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateWithServiceResponseAsync*
  name: restoreCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.restoreCertificateWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    name: DeletedCertificateItem
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    href: com.microsoft.azure.keyvault.models.DeletedCertificateItem.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates*
  name: getDeletedCertificates
  nameWithType: KeyVaultClientBase.getDeletedCertificates
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificates
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    name: DeletedCertificateItem
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    href: com.microsoft.azure.keyvault.models.DeletedCertificateItem.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    name: DeletedCertificateItem
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    href: com.microsoft.azure.keyvault.models.DeletedCertificateItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync*
  name: getDeletedCertificatesAsync
  nameWithType: KeyVaultClientBase.getDeletedCertificatesAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    name: DeletedCertificateItem
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    href: com.microsoft.azure.keyvault.models.DeletedCertificateItem.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models.DeletedCertificateItem2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    name: DeletedCertificateItem
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    href: com.microsoft.azure.keyvault.models.DeletedCertificateItem.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync*
  name: getDeletedCertificatesWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificate*
  name: getDeletedCertificate
  nameWithType: KeyVaultClientBase.getDeletedCertificate
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync*
  name: getDeletedCertificateAsync
  nameWithType: KeyVaultClientBase.getDeletedCertificateAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateWithServiceResponseAsync*
  name: getDeletedCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedCertificateWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificate*
  name: purgeDeletedCertificate
  nameWithType: KeyVaultClientBase.purgeDeletedCertificate
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync*
  name: purgeDeletedCertificateAsync
  nameWithType: KeyVaultClientBase.purgeDeletedCertificateAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateWithServiceResponseAsync*
  name: purgeDeletedCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.purgeDeletedCertificateWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificate*
  name: recoverDeletedCertificate
  nameWithType: KeyVaultClientBase.recoverDeletedCertificate
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificate
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync*
  name: recoverDeletedCertificateAsync
  nameWithType: KeyVaultClientBase.recoverDeletedCertificateAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateWithServiceResponseAsync*
  name: recoverDeletedCertificateWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.recoverDeletedCertificateWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedCertificateWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models.StorageAccountItem
    name: StorageAccountItem
    fullName: com.microsoft.azure.keyvault.models.StorageAccountItem
    href: com.microsoft.azure.keyvault.models.StorageAccountItem.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccounts*
  name: getStorageAccounts
  nameWithType: KeyVaultClientBase.getStorageAccounts
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccounts
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models.StorageAccountItem
    name: StorageAccountItem
    fullName: com.microsoft.azure.keyvault.models.StorageAccountItem
    href: com.microsoft.azure.keyvault.models.StorageAccountItem.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.StorageAccountItem
    name: StorageAccountItem
    fullName: com.microsoft.azure.keyvault.models.StorageAccountItem
    href: com.microsoft.azure.keyvault.models.StorageAccountItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync*
  name: getStorageAccountsAsync
  nameWithType: KeyVaultClientBase.getStorageAccountsAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models.StorageAccountItem
    name: StorageAccountItem
    fullName: com.microsoft.azure.keyvault.models.StorageAccountItem
    href: com.microsoft.azure.keyvault.models.StorageAccountItem.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models.StorageAccountItem2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models.StorageAccountItem
    name: StorageAccountItem
    fullName: com.microsoft.azure.keyvault.models.StorageAccountItem
    href: com.microsoft.azure.keyvault.models.StorageAccountItem.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync*
  name: getStorageAccountsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
    name: DeletedStorageAccountItem
    fullName: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
    href: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccounts*
  name: getDeletedStorageAccounts
  nameWithType: KeyVaultClientBase.getDeletedStorageAccounts
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccounts
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
    name: DeletedStorageAccountItem
    fullName: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
    href: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
    name: DeletedStorageAccountItem
    fullName: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
    href: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync*
  name: getDeletedStorageAccountsAsync
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
    name: DeletedStorageAccountItem
    fullName: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
    href: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models.DeletedStorageAccountItem2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
    name: DeletedStorageAccountItem
    fullName: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
    href: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync*
  name: getDeletedStorageAccountsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccount*
  name: getDeletedStorageAccount
  nameWithType: KeyVaultClientBase.getDeletedStorageAccount
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccount
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.DeletedStorageBundle
    name: DeletedStorageBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedStorageBundle
    href: com.microsoft.azure.keyvault.models.DeletedStorageBundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.DeletedStorageBundle
    name: DeletedStorageBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedStorageBundle
    href: com.microsoft.azure.keyvault.models.DeletedStorageBundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountAsync*
  name: getDeletedStorageAccountAsync
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.DeletedStorageBundle
    name: DeletedStorageBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedStorageBundle
    href: com.microsoft.azure.keyvault.models.DeletedStorageBundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.DeletedStorageBundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.DeletedStorageBundle
    name: DeletedStorageBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedStorageBundle
    href: com.microsoft.azure.keyvault.models.DeletedStorageBundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountWithServiceResponseAsync*
  name: getDeletedStorageAccountWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccount*
  name: purgeDeletedStorageAccount
  nameWithType: KeyVaultClientBase.purgeDeletedStorageAccount
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccount
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountAsync*
  name: purgeDeletedStorageAccountAsync
  nameWithType: KeyVaultClientBase.purgeDeletedStorageAccountAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountWithServiceResponseAsync*
  name: purgeDeletedStorageAccountWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.purgeDeletedStorageAccountWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.purgeDeletedStorageAccountWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccount*
  name: recoverDeletedStorageAccount
  nameWithType: KeyVaultClientBase.recoverDeletedStorageAccount
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccount
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.StorageBundle
    name: StorageBundle
    fullName: com.microsoft.azure.keyvault.models.StorageBundle
    href: com.microsoft.azure.keyvault.models.StorageBundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.StorageBundle
    name: StorageBundle
    fullName: com.microsoft.azure.keyvault.models.StorageBundle
    href: com.microsoft.azure.keyvault.models.StorageBundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountAsync*
  name: recoverDeletedStorageAccountAsync
  nameWithType: KeyVaultClientBase.recoverDeletedStorageAccountAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.StorageBundle
    name: StorageBundle
    fullName: com.microsoft.azure.keyvault.models.StorageBundle
    href: com.microsoft.azure.keyvault.models.StorageBundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.StorageBundle
    name: StorageBundle
    fullName: com.microsoft.azure.keyvault.models.StorageBundle
    href: com.microsoft.azure.keyvault.models.StorageBundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountWithServiceResponseAsync*
  name: recoverDeletedStorageAccountWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.recoverDeletedStorageAccountWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedStorageAccountWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccount*
  name: backupStorageAccount
  nameWithType: KeyVaultClientBase.backupStorageAccount
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccount
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.BackupStorageResulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.BackupStorageResult
    name: BackupStorageResult
    fullName: com.microsoft.azure.keyvault.models.BackupStorageResult
    href: com.microsoft.azure.keyvault.models.BackupStorageResult.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.BackupStorageResulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.BackupStorageResult
    name: BackupStorageResult
    fullName: com.microsoft.azure.keyvault.models.BackupStorageResult
    href: com.microsoft.azure.keyvault.models.BackupStorageResult.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountAsync*
  name: backupStorageAccountAsync
  nameWithType: KeyVaultClientBase.backupStorageAccountAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.BackupStorageResulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.BackupStorageResult
    name: BackupStorageResult
    fullName: com.microsoft.azure.keyvault.models.BackupStorageResult
    href: com.microsoft.azure.keyvault.models.BackupStorageResult.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.BackupStorageResulte7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.BackupStorageResult
    name: BackupStorageResult
    fullName: com.microsoft.azure.keyvault.models.BackupStorageResult
    href: com.microsoft.azure.keyvault.models.BackupStorageResult.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountWithServiceResponseAsync*
  name: backupStorageAccountWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.backupStorageAccountWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.backupStorageAccountWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccount*
  name: restoreStorageAccount
  nameWithType: KeyVaultClientBase.restoreStorageAccount
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccount
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountAsync*
  name: restoreStorageAccountAsync
  nameWithType: KeyVaultClientBase.restoreStorageAccountAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountWithServiceResponseAsync*
  name: restoreStorageAccountWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.restoreStorageAccountWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.restoreStorageAccountWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccount*
  name: deleteStorageAccount
  nameWithType: KeyVaultClientBase.deleteStorageAccount
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccount
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountAsync*
  name: deleteStorageAccountAsync
  nameWithType: KeyVaultClientBase.deleteStorageAccountAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountWithServiceResponseAsync*
  name: deleteStorageAccountWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteStorageAccountWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteStorageAccountWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccount*
  name: getStorageAccount
  nameWithType: KeyVaultClientBase.getStorageAccount
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccount
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountAsync*
  name: getStorageAccountAsync
  nameWithType: KeyVaultClientBase.getStorageAccountAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountWithServiceResponseAsync*
  name: getStorageAccountWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getStorageAccountWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccount*
  name: setStorageAccount
  nameWithType: KeyVaultClientBase.setStorageAccount
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccount
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync*
  name: setStorageAccountAsync
  nameWithType: KeyVaultClientBase.setStorageAccountAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountWithServiceResponseAsync*
  name: setStorageAccountWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.setStorageAccountWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setStorageAccountWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccount*
  name: updateStorageAccount
  nameWithType: KeyVaultClientBase.updateStorageAccount
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccount
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync*
  name: updateStorageAccountAsync
  nameWithType: KeyVaultClientBase.updateStorageAccountAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync*
  name: updateStorageAccountWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateStorageAccountWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKey*
  name: regenerateStorageAccountKey
  nameWithType: KeyVaultClientBase.regenerateStorageAccountKey
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKey
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyAsync*
  name: regenerateStorageAccountKeyAsync
  nameWithType: KeyVaultClientBase.regenerateStorageAccountKeyAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyWithServiceResponseAsync*
  name: regenerateStorageAccountKeyWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.regenerateStorageAccountKeyWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.regenerateStorageAccountKeyWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models.SasDefinitionItem
    name: SasDefinitionItem
    fullName: com.microsoft.azure.keyvault.models.SasDefinitionItem
    href: com.microsoft.azure.keyvault.models.SasDefinitionItem.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitions*
  name: getSasDefinitions
  nameWithType: KeyVaultClientBase.getSasDefinitions
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitions
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models.SasDefinitionItem
    name: SasDefinitionItem
    fullName: com.microsoft.azure.keyvault.models.SasDefinitionItem
    href: com.microsoft.azure.keyvault.models.SasDefinitionItem.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.SasDefinitionItem
    name: SasDefinitionItem
    fullName: com.microsoft.azure.keyvault.models.SasDefinitionItem
    href: com.microsoft.azure.keyvault.models.SasDefinitionItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync*
  name: getSasDefinitionsAsync
  nameWithType: KeyVaultClientBase.getSasDefinitionsAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models.SasDefinitionItem
    name: SasDefinitionItem
    fullName: com.microsoft.azure.keyvault.models.SasDefinitionItem
    href: com.microsoft.azure.keyvault.models.SasDefinitionItem.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models.SasDefinitionItem2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models.SasDefinitionItem
    name: SasDefinitionItem
    fullName: com.microsoft.azure.keyvault.models.SasDefinitionItem
    href: com.microsoft.azure.keyvault.models.SasDefinitionItem.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync*
  name: getSasDefinitionsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: 36b27be0com.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
    name: DeletedSasDefinitionItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
    href: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitions*
  name: getDeletedSasDefinitions
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitions
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitions
  package: com.microsoft.azure.keyvault
- uid: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
    name: DeletedSasDefinitionItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
    href: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
    name: DeletedSasDefinitionItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
    href: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync*
  name: getDeletedSasDefinitionsAsync
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsAsync
  package: com.microsoft.azure.keyvault
- uid: 32da0907com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
    name: DeletedSasDefinitionItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
    href: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem.yml
  - name: '>>'
    fullName: '>>'
- uid: f9d74917com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem2646ccb0
  spec.java:
  - name: Observable<ServiceResponse<Page<
    fullName: Observable<ServiceResponse<Page<
  - uid: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
    name: DeletedSasDefinitionItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
    href: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem.yml
  - name: '>>>'
    fullName: '>>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync*
  name: getDeletedSasDefinitionsWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinition*
  name: getDeletedSasDefinition
  nameWithType: KeyVaultClientBase.getDeletedSasDefinition
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinition
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
    name: DeletedSasDefinitionBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
    href: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
    name: DeletedSasDefinitionBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
    href: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionAsync*
  name: getDeletedSasDefinitionAsync
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
    name: DeletedSasDefinitionBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
    href: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
    name: DeletedSasDefinitionBundle
    fullName: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
    href: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionWithServiceResponseAsync*
  name: getDeletedSasDefinitionWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinition*
  name: recoverDeletedSasDefinition
  nameWithType: KeyVaultClientBase.recoverDeletedSasDefinition
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinition
  package: com.microsoft.azure.keyvault
- uid: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.keyvault.models.SasDefinitionBundle
    name: SasDefinitionBundle
    fullName: com.microsoft.azure.keyvault.models.SasDefinitionBundle
    href: com.microsoft.azure.keyvault.models.SasDefinitionBundle.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.keyvault.models.SasDefinitionBundle
    name: SasDefinitionBundle
    fullName: com.microsoft.azure.keyvault.models.SasDefinitionBundle
    href: com.microsoft.azure.keyvault.models.SasDefinitionBundle.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionAsync*
  name: recoverDeletedSasDefinitionAsync
  nameWithType: KeyVaultClientBase.recoverDeletedSasDefinitionAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionAsync
  package: com.microsoft.azure.keyvault
- uid: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.keyvault.models.SasDefinitionBundle
    name: SasDefinitionBundle
    fullName: com.microsoft.azure.keyvault.models.SasDefinitionBundle
    href: com.microsoft.azure.keyvault.models.SasDefinitionBundle.yml
  - name: '>'
    fullName: '>'
- uid: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
  spec.java:
  - name: Observable<ServiceResponse<
    fullName: Observable<ServiceResponse<
  - uid: com.microsoft.azure.keyvault.models.SasDefinitionBundle
    name: SasDefinitionBundle
    fullName: com.microsoft.azure.keyvault.models.SasDefinitionBundle
    href: com.microsoft.azure.keyvault.models.SasDefinitionBundle.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionWithServiceResponseAsync*
  name: recoverDeletedSasDefinitionWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.recoverDeletedSasDefinitionWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.recoverDeletedSasDefinitionWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinition*
  name: deleteSasDefinition
  nameWithType: KeyVaultClientBase.deleteSasDefinition
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinition
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionAsync*
  name: deleteSasDefinitionAsync
  nameWithType: KeyVaultClientBase.deleteSasDefinitionAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionWithServiceResponseAsync*
  name: deleteSasDefinitionWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.deleteSasDefinitionWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.deleteSasDefinitionWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinition*
  name: getSasDefinition
  nameWithType: KeyVaultClientBase.getSasDefinition
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinition
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionAsync*
  name: getSasDefinitionAsync
  nameWithType: KeyVaultClientBase.getSasDefinitionAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionWithServiceResponseAsync*
  name: getSasDefinitionWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSasDefinitionWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinition*
  name: setSasDefinition
  nameWithType: KeyVaultClientBase.setSasDefinition
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinition
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync*
  name: setSasDefinitionAsync
  nameWithType: KeyVaultClientBase.setSasDefinitionAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync*
  name: setSasDefinitionWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.setSasDefinitionWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinition*
  name: updateSasDefinition
  nameWithType: KeyVaultClientBase.updateSasDefinition
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinition
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync*
  name: updateSasDefinitionAsync
  nameWithType: KeyVaultClientBase.updateSasDefinitionAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync*
  name: updateSasDefinitionWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.updateSasDefinitionWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNext*
  name: getKeyVersionsNext
  nameWithType: KeyVaultClientBase.getKeyVersionsNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models.KeyIteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.KeyItem
    name: KeyItem
    fullName: com.microsoft.azure.keyvault.models.KeyItem
    href: com.microsoft.azure.keyvault.models.KeyItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync*
  name: getKeyVersionsNextAsync
  nameWithType: KeyVaultClientBase.getKeyVersionsNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextWithServiceResponseAsync*
  name: getKeyVersionsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getKeyVersionsNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeyVersionsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNext*
  name: getKeysNext
  nameWithType: KeyVaultClientBase.getKeysNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNext
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync*
  name: getKeysNextAsync
  nameWithType: KeyVaultClientBase.getKeysNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextWithServiceResponseAsync*
  name: getKeysNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getKeysNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getKeysNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNext*
  name: getDeletedKeysNext
  nameWithType: KeyVaultClientBase.getDeletedKeysNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.DeletedKeyItem
    name: DeletedKeyItem
    fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
    href: com.microsoft.azure.keyvault.models.DeletedKeyItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync*
  name: getDeletedKeysNextAsync
  nameWithType: KeyVaultClientBase.getDeletedKeysNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextWithServiceResponseAsync*
  name: getDeletedKeysNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedKeysNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedKeysNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNext*
  name: getSecretsNext
  nameWithType: KeyVaultClientBase.getSecretsNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models.SecretIteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.SecretItem
    name: SecretItem
    fullName: com.microsoft.azure.keyvault.models.SecretItem
    href: com.microsoft.azure.keyvault.models.SecretItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync*
  name: getSecretsNextAsync
  nameWithType: KeyVaultClientBase.getSecretsNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextWithServiceResponseAsync*
  name: getSecretsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSecretsNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNext*
  name: getSecretVersionsNext
  nameWithType: KeyVaultClientBase.getSecretVersionsNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNext
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync*
  name: getSecretVersionsNextAsync
  nameWithType: KeyVaultClientBase.getSecretVersionsNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextWithServiceResponseAsync*
  name: getSecretVersionsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSecretVersionsNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSecretVersionsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNext*
  name: getDeletedSecretsNext
  nameWithType: KeyVaultClientBase.getDeletedSecretsNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.DeletedSecretItem
    name: DeletedSecretItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
    href: com.microsoft.azure.keyvault.models.DeletedSecretItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync*
  name: getDeletedSecretsNextAsync
  nameWithType: KeyVaultClientBase.getDeletedSecretsNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextWithServiceResponseAsync*
  name: getDeletedSecretsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedSecretsNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSecretsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNext*
  name: getCertificatesNext
  nameWithType: KeyVaultClientBase.getCertificatesNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models.CertificateIteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.CertificateItem
    name: CertificateItem
    fullName: com.microsoft.azure.keyvault.models.CertificateItem
    href: com.microsoft.azure.keyvault.models.CertificateItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync*
  name: getCertificatesNextAsync
  nameWithType: KeyVaultClientBase.getCertificatesNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextWithServiceResponseAsync*
  name: getCertificatesNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificatesNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificatesNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNext*
  name: getCertificateIssuersNext
  nameWithType: KeyVaultClientBase.getCertificateIssuersNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    name: CertificateIssuerItem
    fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
    href: com.microsoft.azure.keyvault.models.CertificateIssuerItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync*
  name: getCertificateIssuersNextAsync
  nameWithType: KeyVaultClientBase.getCertificateIssuersNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextWithServiceResponseAsync*
  name: getCertificateIssuersNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateIssuersNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateIssuersNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNext*
  name: getCertificateVersionsNext
  nameWithType: KeyVaultClientBase.getCertificateVersionsNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNext
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync*
  name: getCertificateVersionsNextAsync
  nameWithType: KeyVaultClientBase.getCertificateVersionsNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextWithServiceResponseAsync*
  name: getCertificateVersionsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getCertificateVersionsNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getCertificateVersionsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNext*
  name: getDeletedCertificatesNext
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    name: DeletedCertificateItem
    fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
    href: com.microsoft.azure.keyvault.models.DeletedCertificateItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync*
  name: getDeletedCertificatesNextAsync
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextWithServiceResponseAsync*
  name: getDeletedCertificatesNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedCertificatesNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedCertificatesNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNext*
  name: getStorageAccountsNext
  nameWithType: KeyVaultClientBase.getStorageAccountsNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.StorageAccountItem
    name: StorageAccountItem
    fullName: com.microsoft.azure.keyvault.models.StorageAccountItem
    href: com.microsoft.azure.keyvault.models.StorageAccountItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextAsync*
  name: getStorageAccountsNextAsync
  nameWithType: KeyVaultClientBase.getStorageAccountsNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextWithServiceResponseAsync*
  name: getStorageAccountsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getStorageAccountsNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getStorageAccountsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNext*
  name: getDeletedStorageAccountsNext
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
    name: DeletedStorageAccountItem
    fullName: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
    href: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextAsync*
  name: getDeletedStorageAccountsNextAsync
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextWithServiceResponseAsync*
  name: getDeletedStorageAccountsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedStorageAccountsNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedStorageAccountsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNext*
  name: getSasDefinitionsNext
  nameWithType: KeyVaultClientBase.getSasDefinitionsNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.SasDefinitionItem
    name: SasDefinitionItem
    fullName: com.microsoft.azure.keyvault.models.SasDefinitionItem
    href: com.microsoft.azure.keyvault.models.SasDefinitionItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextAsync*
  name: getSasDefinitionsNextAsync
  nameWithType: KeyVaultClientBase.getSasDefinitionsNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextWithServiceResponseAsync*
  name: getSasDefinitionsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getSasDefinitionsNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getSasDefinitionsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNext*
  name: getDeletedSasDefinitionsNext
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsNext
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNext
  package: com.microsoft.azure.keyvault
- uid: bd82102acom.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
    name: DeletedSasDefinitionItem
    fullName: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
    href: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextAsync*
  name: getDeletedSasDefinitionsNextAsync
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsNextAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextWithServiceResponseAsync*
  name: getDeletedSasDefinitionsNextWithServiceResponseAsync
  nameWithType: KeyVaultClientBase.getDeletedSasDefinitionsNextWithServiceResponseAsync
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase.getDeletedSasDefinitionsNextWithServiceResponseAsync
  package: com.microsoft.azure.keyvault
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  parent: com.microsoft.azure.keyvault.implementation
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: KeyVaultClientBaseImpl
  nameWithType: KeyVaultClientBaseImpl
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  type: Class
  summary: "<p>Initializes a new instance of the KeyVaultClientBaseImpl class. </p>"
  syntax:
    content: public class KeyVaultClientBaseImpl
- uid: com.microsoft.azure.keyvault.KeyVaultClientCustom
  parent: com.microsoft.azure.keyvault
  href: com.microsoft.azure.keyvault.KeyVaultClientCustom.yml
  name: KeyVaultClientCustom
  nameWithType: KeyVaultClientCustom
  fullName: com.microsoft.azure.keyvault.KeyVaultClientCustom
  type: Interface
  summary: "<p>The interface for the Key Vault Client custom class. Maintains some backwards compatibility functionalities. </p>"
  syntax:
    content: public interface KeyVaultClientCustom
- uid: com.microsoft.azure.keyvault.KeyVaultClientCustom.restClient()
  parent: com.microsoft.azure.keyvault.KeyVaultClientCustom
  href: com.microsoft.azure.keyvault.KeyVaultClientCustom.yml
  name: restClient()
  nameWithType: KeyVaultClientCustom.restClient()
  fullName: com.microsoft.azure.keyvault.KeyVaultClientCustom.restClient()
  type: Method
  syntax:
    content: public RestClient restClient()
    return:
      type: 9545a295
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">RestClient</xref> instance. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getAzureClient()
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getAzureClient()
  nameWithType: KeyVaultClientBaseImpl.getAzureClient()
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getAzureClient()
  type: Method
  summary: "<p>Gets the <xref uid=\"\" data-throw-if-not-resolved=\"false\">AzureClient</xref> used for long running operations. </p>"
  syntax:
    content: public AzureClient getAzureClient()
    return:
      type: c1c26e8d
      description: <p>the azure client; </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.userAgent()
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: userAgent()
  nameWithType: KeyVaultClientBaseImpl.userAgent()
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.userAgent()
  type: Method
  summary: "<p>Gets the User-Agent header for the client.</p>\r\n<p></p>"
  syntax:
    content: public String userAgent()
    return:
      type: "26831127"
      description: <p>the user agent string. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.apiVersion()
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: apiVersion()
  nameWithType: KeyVaultClientBaseImpl.apiVersion()
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.apiVersion()
  type: Method
  summary: "<p>Gets Client API version.</p>\r\n<p></p>"
  syntax:
    content: public String apiVersion()
    return:
      type: "26831127"
      description: <p>the apiVersion value. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.acceptLanguage()
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: acceptLanguage()
  nameWithType: KeyVaultClientBaseImpl.acceptLanguage()
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.acceptLanguage()
  type: Method
  summary: "<p>Gets Gets or sets the preferred language for the response.</p>\r\n<p></p>"
  syntax:
    content: public String acceptLanguage()
    return:
      type: "26831127"
      description: <p>the acceptLanguage value. </p>
- uid: com.microsoft.azure.keyvault.KeyVaultClientBase
  parent: com.microsoft.azure.keyvault
  href: com.microsoft.azure.keyvault.KeyVaultClientBase.yml
  name: KeyVaultClientBase
  nameWithType: KeyVaultClientBase
  fullName: com.microsoft.azure.keyvault.KeyVaultClientBase
  type: Interface
  summary: "<p>The interface for KeyVaultClientBase class. </p>"
  syntax: *o1
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.withAcceptLanguage(String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: withAcceptLanguage(String acceptLanguage)
  nameWithType: KeyVaultClientBaseImpl.withAcceptLanguage(String acceptLanguage)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.withAcceptLanguage(String acceptLanguage)
  type: Method
  summary: "<p>Sets Gets or sets the preferred language for the response.</p>\r\n<p></p>"
  syntax:
    content: public KeyVaultClientBaseImpl withAcceptLanguage(String acceptLanguage)
    parameters:
    - id: acceptLanguage
      type: "26831127"
      description: <p>the acceptLanguage value. </p>
    return:
      type: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
      description: <p>the service client itself </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.longRunningOperationRetryTimeout()
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: longRunningOperationRetryTimeout()
  nameWithType: KeyVaultClientBaseImpl.longRunningOperationRetryTimeout()
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.longRunningOperationRetryTimeout()
  type: Method
  summary: "<p>Gets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30.</p>\r\n<p></p>"
  syntax:
    content: public int longRunningOperationRetryTimeout()
    return:
      type: f75371fa
      description: <p>the longRunningOperationRetryTimeout value. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.withLongRunningOperationRetryTimeout(int)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  nameWithType: KeyVaultClientBaseImpl.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
  type: Method
  summary: "<p>Sets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30.</p>\r\n<p></p>"
  syntax:
    content: public KeyVaultClientBaseImpl withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)
    parameters:
    - id: longRunningOperationRetryTimeout
      type: f75371fa
      description: <p>the longRunningOperationRetryTimeout value. </p>
    return:
      type: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
      description: <p>the service client itself </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.generateClientRequestId()
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: generateClientRequestId()
  nameWithType: KeyVaultClientBaseImpl.generateClientRequestId()
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.generateClientRequestId()
  type: Method
  summary: "<p>Gets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.</p>\r\n<p></p>"
  syntax:
    content: public boolean generateClientRequestId()
    return:
      type: 4fc6e284
      description: <p>the generateClientRequestId value. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.withGenerateClientRequestId(boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: withGenerateClientRequestId(boolean generateClientRequestId)
  nameWithType: KeyVaultClientBaseImpl.withGenerateClientRequestId(boolean generateClientRequestId)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.withGenerateClientRequestId(boolean generateClientRequestId)
  type: Method
  summary: "<p>Sets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.</p>\r\n<p></p>"
  syntax:
    content: public KeyVaultClientBaseImpl withGenerateClientRequestId(boolean generateClientRequestId)
    parameters:
    - id: generateClientRequestId
      type: 4fc6e284
      description: <p>the generateClientRequestId value. </p>
    return:
      type: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
      description: <p>the service client itself </p>
- uid: com.microsoft.azure.keyvault.models.KeyBundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.KeyBundle.yml
  name: KeyBundle
  nameWithType: KeyBundle
  fullName: com.microsoft.azure.keyvault.models.KeyBundle
  type: Class
  summary: "<p>A KeyBundle consisting of a WebKey plus its attributes. </p>"
  syntax:
    content: public class KeyBundle extends KeyBundle
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKey(String,String,JsonWebKeyType)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  nameWithType: KeyVaultClientBaseImpl.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  type: Method
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
  parent: com.microsoft.azure.keyvault.webkey
  href: com.microsoft.azure.keyvault.webkey.JsonWebKeyType.yml
  name: JsonWebKeyType
  nameWithType: JsonWebKeyType
  fullName: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
  type: Class
  summary: "<p>Defines values for JsonWebKeyType. </p>"
  syntax:
    content: public class JsonWebKeyType
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyAsync(String,String,JsonWebKeyType,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyAsync(String,String,JsonWebKeyType)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  nameWithType: KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  type: Method
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyWithServiceResponseAsync(String,String,JsonWebKeyType)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  nameWithType: KeyVaultClientBaseImpl.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
  type: Method
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKey(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  nameWithType: KeyVaultClientBaseImpl.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  type: Method
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle createKey(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: '<p>The key size in bits. For example: 2048, 3072, or 4096 for RSA. </p>'
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models.JsonWebKeyCurveName
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'P-256K' </p>"
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.webkey.JsonWebKeyOperation
  parent: com.microsoft.azure.keyvault.webkey
  href: com.microsoft.azure.keyvault.webkey.JsonWebKeyOperation.yml
  name: JsonWebKeyOperation
  nameWithType: JsonWebKeyOperation
  fullName: com.microsoft.azure.keyvault.webkey.JsonWebKeyOperation
  type: Class
  summary: "<p>Defines values for JsonWebKeyOperation. </p>"
  syntax:
    content: public class JsonWebKeyOperation
- uid: com.microsoft.azure.keyvault.models.KeyAttributes
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.KeyAttributes.yml
  name: KeyAttributes
  nameWithType: KeyAttributes
  fullName: com.microsoft.azure.keyvault.models.KeyAttributes
  type: Class
  summary: "<p>The attributes of a key managed by the key vault service. </p>"
  syntax:
    content: public class KeyAttributes extends Attributes
- uid: com.microsoft.azure.keyvault.models.JsonWebKeyCurveName
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.JsonWebKeyCurveName.yml
  name: JsonWebKeyCurveName
  nameWithType: JsonWebKeyCurveName
  fullName: com.microsoft.azure.keyvault.models.JsonWebKeyCurveName
  type: Class
  summary: "<p>Defines values for JsonWebKeyCurveName. </p>"
  syntax:
    content: public class JsonWebKeyCurveName
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: '<p>The key size in bits. For example: 2048, 3072, or 4096 for RSA. </p>'
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models.JsonWebKeyCurveName
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'P-256K' </p>"
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  nameWithType: KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  type: Method
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> createKeyAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: '<p>The key size in bits. For example: 2048, 3072, or 4096 for RSA. </p>'
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models.JsonWebKeyCurveName
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'P-256K' </p>"
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyWithServiceResponseAsync(String,String,JsonWebKeyType,Integer,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,JsonWebKeyCurveName)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  nameWithType: KeyVaultClientBaseImpl.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
  type: Method
  summary: "<p>Creates a new key, stores it, then returns key parameters and attributes to the client. The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> createKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKeyType kty, Integer keySize, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, JsonWebKeyCurveName curve)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name for the new key. The system will generate the version name for the new key. </p>
    - id: kty
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyType
      description: "<p>The type of key to create. For valid values, see JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA', 'RSA-HSM', 'oct' </p>"
    - id: keySize
      type: 08effaa0
      description: '<p>The key size in bits. For example: 2048, 3072, or 4096 for RSA. </p>'
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>the List&lt;JsonWebKeyOperation&gt; value </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: curve
      type: com.microsoft.azure.keyvault.models.JsonWebKeyCurveName
      description: "<p>Elliptic curve name. For valid values, see JsonWebKeyCurveName. Possible values include: 'P-256', 'P-384', 'P-521', 'P-256K' </p>"
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKey(String,String,JsonWebKey)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: KeyVaultClientBaseImpl.importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
  type: Method
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle importKey(String vaultBaseUrl, String keyName, JsonWebKey key)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.webkey.JsonWebKey
  parent: com.microsoft.azure.keyvault.webkey
  href: com.microsoft.azure.keyvault.webkey.JsonWebKey.yml
  name: JsonWebKey
  nameWithType: JsonWebKey
  fullName: com.microsoft.azure.keyvault.webkey.JsonWebKey
  type: Class
  summary: "<p>As of <a href=\"http://tools.ietf.org/html/draft-ietf-jose-json-web-key-18\">http://tools.ietf.org/html/draft-ietf-jose-json-web-key-18</a>. </p>"
  syntax:
    content: public class JsonWebKey
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyAsync(String,String,JsonWebKey,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyAsync(String,String,JsonWebKey)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  type: Method
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyWithServiceResponseAsync(String,String,JsonWebKey)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  nameWithType: KeyVaultClientBaseImpl.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
  type: Method
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKey(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle importKey(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> importKeyAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyWithServiceResponseAsync(String,String,JsonWebKey,Boolean,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Imports an externally created key, stores it, and returns key parameters and attributes to the client. The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> importKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, JsonWebKey key, Boolean hsm, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>Name for the imported key. </p>
    - id: key
      type: com.microsoft.azure.keyvault.webkey.JsonWebKey
      description: <p>The Json web key </p>
    - id: hsm
      type: 866c2227
      description: <p>Whether to import as a hardware key (HSM) or software key. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>The key management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.models.DeletedKeyBundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.DeletedKeyBundle.yml
  name: DeletedKeyBundle
  nameWithType: DeletedKeyBundle
  fullName: com.microsoft.azure.keyvault.models.DeletedKeyBundle
  type: Class
  summary: "<p>A DeletedKeyBundle consisting of a WebKey plus its Attributes and deletion info. </p>"
  syntax:
    content: public class DeletedKeyBundle extends KeyBundle
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteKey(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.deleteKey(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteKey(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the keys/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedKeyBundle deleteKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedKeyBundle
      description: <p>the DeletedKeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  type: Method
  summary: "<p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the keys/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedKeyBundle> deleteKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.deleteKeyAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteKeyAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the keys/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedKeyBundle> deleteKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
      description: <p>the observable to the DeletedKeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Deletes a key of any type from storage in Azure Key Vault. The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the keys/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedKeyBundle>> deleteKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to delete. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedKeyBundlee7daa122
      description: <p>the observable to the DeletedKeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKey(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateKey(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBaseImpl.updateKey(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKey(String vaultBaseUrl, String keyName, String keyVersion)
  type: Method
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle updateKey(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  type: Method
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBaseImpl.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  type: Method
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKey(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle updateKey(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> updateKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyWithServiceResponseAsync(String,String,String,List<JsonWebKeyOperation>,KeyAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Azure Key Vault. In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> updateKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, List<JsonWebKeyOperation> keyOps, KeyAttributes keyAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of key to update. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key to update. </p>
    - id: keyOps
      type: 5618da2dcom.microsoft.azure.keyvault.webkey.JsonWebKeyOperationa08ddfce
      description: <p>Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. </p>
    - id: keyAttributes
      type: com.microsoft.azure.keyvault.models.KeyAttributes
      description: <p>the KeyAttributes value </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKey(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKey(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBaseImpl.getKey(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKey(String vaultBaseUrl, String keyName, String keyVersion)
  type: Method
  summary: "<p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle getKey(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyAsync(String,String,String,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: "<p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBaseImpl.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
  type: Method
  summary: "<p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> getKeyAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  nameWithType: KeyVaultClientBaseImpl.getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
  type: Method
  summary: "<p>Gets the public part of a stored key. The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> getKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key to get. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>Adding the version parameter retrieves a specific version of a key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.models.KeyItem
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.KeyItem.yml
  name: KeyItem
  nameWithType: KeyItem
  fullName: com.microsoft.azure.keyvault.models.KeyItem
  type: Class
  summary: "<p>The key item containing key metadata. </p>"
  syntax:
    content: public class KeyItem
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersions(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyVersions(final String vaultBaseUrl, final String keyName)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersions(final String vaultBaseUrl, final String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersions(final String vaultBaseUrl, final String keyName)
  type: Method
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<KeyItem> getKeyVersions(final String vaultBaseUrl, final String keyName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsAsync(final String,final String,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
  type: Method
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
  type: Method
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
  type: Method
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  type: Method
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<KeyItem> getKeyVersions(final String vaultBaseUrl, final String keyName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsAsync(final String,final String,final Integer,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  type: Method
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  type: Method
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<KeyItem>> getKeyVersionsAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
  type: Method
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeyVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String keyName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: 3d93591e
      description: <p>The name of the key. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeys(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeys(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getKeys(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeys(final String vaultBaseUrl)
  type: Method
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<KeyItem> getKeys(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysAsync(final String,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
  type: Method
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeysAsync(final String vaultBaseUrl, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeysAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<KeyItem>> getKeysAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeysWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getKeysWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeysWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeys(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeys(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getKeys(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeys(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<KeyItem> getKeys(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysAsync(final String,final Integer,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
  type: Method
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<KeyItem>> getKeysAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.models.BackupKeyResult
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.BackupKeyResult.yml
  name: BackupKeyResult
  nameWithType: BackupKeyResult
  fullName: com.microsoft.azure.keyvault.models.BackupKeyResult
  type: Class
  summary: "<p>The backup key result, containing the backup blob. </p>"
  syntax:
    content: public class BackupKeyResult
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupKey(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.backupKey(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupKey(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area. This operation requires the key/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public BackupKeyResult backupKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: com.microsoft.azure.keyvault.models.BackupKeyResult
      description: <p>the BackupKeyResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupKeyAsync(String,String,final ServiceCallback<BackupKeyResult>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
  type: Method
  summary: "<p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area. This operation requires the key/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<BackupKeyResult> backupKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<BackupKeyResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.BackupKeyResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.BackupKeyResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.backupKeyAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupKeyAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area. This operation requires the key/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<BackupKeyResult> backupKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.BackupKeyResulta08ddfce
      description: <p>the observable to the BackupKeyResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Requests that a backup of the specified key be downloaded to the client. The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area. This operation requires the key/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<BackupKeyResult>> backupKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.BackupKeyResulte7daa122
      description: <p>the observable to the BackupKeyResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreKey(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
  type: Method
  summary: "<p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault. This operation requires the keys/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle restoreKey(String vaultBaseUrl, byte[] keyBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreKeyAsync(String,byte [],final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: "<p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault. This operation requires the keys/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreKeyAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  type: Method
  summary: "<p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault. This operation requires the keys/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> restoreKeyAsync(String vaultBaseUrl, byte[] keyBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreKeyWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
  type: Method
  summary: "<p>Restores a backed up key to a vault. Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault. This operation requires the keys/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> restoreKeyWithServiceResponseAsync(String vaultBaseUrl, byte[] keyBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a key bundle. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.models.KeyOperationResult
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.KeyOperationResult.yml
  name: KeyOperationResult
  nameWithType: KeyOperationResult
  fullName: com.microsoft.azure.keyvault.models.KeyOperationResult
  type: Class
  summary: "<p>The key operation result. </p>"
  syntax:
    content: public class KeyOperationResult
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.encrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/encypt permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyOperationResult encrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyOperationResult
      description: <p>the KeyOperationResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
  parent: com.microsoft.azure.keyvault.webkey
  href: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm.yml
  name: JsonWebKeyEncryptionAlgorithm
  nameWithType: JsonWebKeyEncryptionAlgorithm
  fullName: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
  type: Class
  summary: "<p>Defines values for JsonWebKeyEncryptionAlgorithm. </p>"
  syntax:
    content: public class JsonWebKeyEncryptionAlgorithm
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  type: Method
  summary: "<p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/encypt permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyOperationResult> encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.encryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/encypt permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyOperationResult> encryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.encryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Encrypts an arbitrary sequence of bytes using an encryption key that is stored in a key vault. The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/encypt permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> encryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyOperationResulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.decrypt(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/decrypt permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyOperationResult decrypt(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyOperationResult
      description: <p>the KeyOperationResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  type: Method
  summary: "<p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/decrypt permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyOperationResult> decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.decryptAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/decrypt permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyOperationResult> decryptAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.decryptWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Decrypts a single block of encrypted data. The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/decrypt permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> decryptWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyOperationResulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.sign(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key. This operation requires the keys/sign permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyOperationResult sign(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyOperationResult
      description: <p>the KeyOperationResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
  parent: com.microsoft.azure.keyvault.webkey
  href: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm.yml
  name: JsonWebKeySignatureAlgorithm
  nameWithType: JsonWebKeySignatureAlgorithm
  fullName: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
  type: Class
  summary: "<p>Defines values for JsonWebKeySignatureAlgorithm. </p>"
  syntax:
    content: public class JsonWebKeySignatureAlgorithm
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  type: Method
  summary: "<p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key. This operation requires the keys/sign permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyOperationResult> signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.signAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key. This operation requires the keys/sign permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyOperationResult> signAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.signWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Creates a signature from a digest using the specified key. The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key. This operation requires the keys/sign permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> signWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyOperationResulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.models.KeyVerifyResult
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.KeyVerifyResult.yml
  name: KeyVerifyResult
  nameWithType: KeyVerifyResult
  fullName: com.microsoft.azure.keyvault.models.KeyVerifyResult
  type: Class
  summary: "<p>The key verify result. </p>"
  syntax:
    content: public class KeyVerifyResult
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.verify(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: KeyVaultClientBaseImpl.verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  type: Method
  summary: "<p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key. This operation requires the keys/verify permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyVerifyResult verify(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyVerifyResult
      description: <p>the KeyVerifyResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [],final ServiceCallback<KeyVerifyResult>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
  type: Method
  summary: "<p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key. This operation requires the keys/verify permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyVerifyResult> verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature, final ServiceCallback<KeyVerifyResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyVerifyResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyVerifyResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.verifyAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: KeyVaultClientBaseImpl.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  type: Method
  summary: "<p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key. This operation requires the keys/verify permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyVerifyResult> verifyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyVerifyResulta08ddfce
      description: <p>the observable to the KeyVerifyResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.verifyWithServiceResponseAsync(String,String,String,JsonWebKeySignatureAlgorithm,byte [],byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  nameWithType: KeyVaultClientBaseImpl.verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
  type: Method
  summary: "<p>Verifies a signature using a specified key. The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key. This operation requires the keys/verify permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyVerifyResult>> verifyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeySignatureAlgorithm algorithm, byte[] digest, byte[] signature)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeySignatureAlgorithm
      description: "<p>The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. Possible values include: 'PS256', 'PS384', 'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K' </p>"
    - id: digest
      type: ccd9418d
      description: <p>The digest used for signing. </p>
    - id: signature
      type: ccd9418d
      description: <p>The signature to be verified. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyVerifyResulte7daa122
      description: <p>the observable to the KeyVerifyResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.wrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/wrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyOperationResult wrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyOperationResult
      description: <p>the KeyOperationResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  type: Method
  summary: "<p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/wrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyOperationResult> wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.wrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/wrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyOperationResult> wrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.wrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Wraps a symmetric key using a specified key. The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/wrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> wrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyOperationResulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.unwrapKey(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/unwrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyOperationResult unwrapKey(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyOperationResult
      description: <p>the KeyOperationResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [],final ServiceCallback<KeyOperationResult>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
  type: Method
  summary: "<p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/unwrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyOperationResult> unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value, final ServiceCallback<KeyOperationResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.unwrapKeyAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/unwrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyOperationResult> unwrapKeyAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyOperationResulta08ddfce
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.unwrapKeyWithServiceResponseAsync(String,String,String,JsonWebKeyEncryptionAlgorithm,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  nameWithType: KeyVaultClientBaseImpl.unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
  type: Method
  summary: "<p>Unwraps a symmetric key using the specified key that was initially used for wrapping that key. The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/unwrapKey permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyOperationResult>> unwrapKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName, String keyVersion, JsonWebKeyEncryptionAlgorithm algorithm, byte[] value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: keyVersion
      type: "26831127"
      description: <p>The version of the key. </p>
    - id: algorithm
      type: com.microsoft.azure.keyvault.webkey.JsonWebKeyEncryptionAlgorithm
      description: "<p>algorithm identifier. Possible values include: 'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5' </p>"
    - id: value
      type: ccd9418d
      description: <p>the Base64Url value </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyOperationResulte7daa122
      description: <p>the observable to the KeyOperationResult object </p>
- uid: com.microsoft.azure.keyvault.models.DeletedKeyItem
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.DeletedKeyItem.yml
  name: DeletedKeyItem
  nameWithType: DeletedKeyItem
  fullName: com.microsoft.azure.keyvault.models.DeletedKeyItem
  type: Class
  summary: "<p>The deleted key item containing the deleted key metadata and information about deletion. </p>"
  syntax:
    content: public class DeletedKeyItem extends KeyItem
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeys(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeys(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeys(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeys(final String vaultBaseUrl)
  type: Method
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedKeyItem> getDeletedKeys(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
      description: <p>the PagedList&lt;DeletedKeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysAsync(final String,final ListOperationCallback<DeletedKeyItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  type: Method
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedKeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeysAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedKeyItem>>> getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedKeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeys(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedKeyItem> getDeletedKeys(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
      description: <p>the PagedList&lt;DeletedKeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysAsync(final String,final Integer,final ListOperationCallback<DeletedKeyItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  type: Method
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedKeyItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedKeyItem>> getDeletedKeysAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedKeyItem>>> getDeletedKeysWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedKeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKey(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKey(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKey(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Gets the public part of a deleted key. The Get Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedKeyBundle getDeletedKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedKeyBundle
      description: <p>the DeletedKeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeyAsync(String,String,final ServiceCallback<DeletedKeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
  type: Method
  summary: "<p>Gets the public part of a deleted key. The Get Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedKeyBundle> getDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<DeletedKeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeyAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeyAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Gets the public part of a deleted key. The Get Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedKeyBundle> getDeletedKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedKeyBundlea08ddfce
      description: <p>the observable to the DeletedKeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Gets the public part of a deleted key. The Get Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedKeyBundle>> getDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedKeyBundlee7daa122
      description: <p>the observable to the DeletedKeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedKey(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedKey(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedKey(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Permanently deletes the specified key. The Purge Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public void purgeDeletedKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedKeyAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: "<p>Permanently deletes the specified key. The Purge Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> purgeDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Permanently deletes the specified key. The Purge Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> purgeDeletedKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Permanently deletes the specified key. The Purge Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the key </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedKey(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedKey(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedKey(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedKey(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Recovers the deleted key to its latest version. The Recover Deleted Key operation is applicable for deleted keys in soft-delete enabled vaults. It recovers the deleted key back to its latest version under /keys. An attempt to recover an non-deleted key will return an error. Consider this the inverse of the delete operation on soft-delete enabled vaults. This operation requires the keys/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public KeyBundle recoverDeletedKey(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key. </p>
    return:
      type: com.microsoft.azure.keyvault.models.KeyBundle
      description: <p>the KeyBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedKeyAsync(String,String,final ServiceCallback<KeyBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
  type: Method
  summary: "<p>Recovers the deleted key to its latest version. The Recover Deleted Key operation is applicable for deleted keys in soft-delete enabled vaults. It recovers the deleted key back to its latest version under /keys. An attempt to recover an non-deleted key will return an error. Consider this the inverse of the delete operation on soft-delete enabled vaults. This operation requires the keys/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<KeyBundle> recoverDeletedKeyAsync(String vaultBaseUrl, String keyName, final ServiceCallback<KeyBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedKeyAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Recovers the deleted key to its latest version. The Recover Deleted Key operation is applicable for deleted keys in soft-delete enabled vaults. It recovers the deleted key back to its latest version under /keys. An attempt to recover an non-deleted key will return an error. Consider this the inverse of the delete operation on soft-delete enabled vaults. This operation requires the keys/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<KeyBundle> recoverDeletedKeyAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.KeyBundlea08ddfce
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedKeyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
  type: Method
  summary: "<p>Recovers the deleted key to its latest version. The Recover Deleted Key operation is applicable for deleted keys in soft-delete enabled vaults. It recovers the deleted key back to its latest version under /keys. An attempt to recover an non-deleted key will return an error. Consider this the inverse of the delete operation on soft-delete enabled vaults. This operation requires the keys/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<KeyBundle>> recoverDeletedKeyWithServiceResponseAsync(String vaultBaseUrl, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: keyName
      type: "26831127"
      description: <p>The name of the deleted key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.KeyBundlee7daa122
      description: <p>the observable to the KeyBundle object </p>
- uid: com.microsoft.azure.keyvault.models.SecretBundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.SecretBundle.yml
  name: SecretBundle
  nameWithType: SecretBundle
  fullName: com.microsoft.azure.keyvault.models.SecretBundle
  type: Class
  summary: "<p>A secret consisting of a value, id and its attributes. </p>"
  syntax:
    content: public class SecretBundle
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecret(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSecret(String vaultBaseUrl, String secretName, String value)
  nameWithType: KeyVaultClientBaseImpl.setSecret(String vaultBaseUrl, String secretName, String value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecret(String vaultBaseUrl, String secretName, String value)
  type: Method
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle setSecret(String vaultBaseUrl, String secretName, String value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value)
  nameWithType: KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value)
  type: Method
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
  nameWithType: KeyVaultClientBaseImpl.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
  type: Method
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecret(String,String,String,Map<String, String>,String,SecretAttributes)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  nameWithType: KeyVaultClientBaseImpl.setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  type: Method
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle setSecret(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.models.SecretAttributes
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.SecretAttributes.yml
  name: SecretAttributes
  nameWithType: SecretAttributes
  fullName: com.microsoft.azure.keyvault.models.SecretAttributes
  type: Class
  summary: "<p>The secret management attributes. </p>"
  syntax:
    content: public class SecretAttributes
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  nameWithType: KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  type: Method
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> setSecretAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretWithServiceResponseAsync(String,String,String,Map<String, String>,String,SecretAttributes)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  nameWithType: KeyVaultClientBaseImpl.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
  type: Method
  summary: "<p>Sets a secret in a specified key vault. The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> setSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String value, Map<String, String> tags, String contentType, SecretAttributes secretAttributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: value
      type: "26831127"
      description: <p>The value of the secret. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.models.DeletedSecretBundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.DeletedSecretBundle.yml
  name: DeletedSecretBundle
  nameWithType: DeletedSecretBundle
  fullName: com.microsoft.azure.keyvault.models.DeletedSecretBundle
  type: Class
  summary: "<p>A Deleted Secret consisting of its previous id, attributes and its tags, as well as information on when it will be purged. </p>"
  syntax:
    content: public class DeletedSecretBundle extends SecretBundle
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSecret(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.deleteSecret(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSecret(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret. This operation requires the secrets/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedSecretBundle deleteSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedSecretBundle
      description: <p>the DeletedSecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  type: Method
  summary: "<p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret. This operation requires the secrets/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedSecretBundle> deleteSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.deleteSecretAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSecretAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret. This operation requires the secrets/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedSecretBundle> deleteSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
      description: <p>the observable to the DeletedSecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Deletes a secret from a specified key vault. The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret. This operation requires the secrets/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedSecretBundle>> deleteSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedSecretBundlee7daa122
      description: <p>the observable to the DeletedSecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecret(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBaseImpl.updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
  type: Method
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle updateSecret(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  type: Method
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBaseImpl.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  type: Method
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecret(String,String,String,String,SecretAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle updateSecret(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> updateSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretWithServiceResponseAsync(String,String,String,String,SecretAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Updates the attributes associated with a specified secret in a given key vault. The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> updateSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion, String contentType, SecretAttributes secretAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: contentType
      type: "26831127"
      description: <p>Type of the secret value such as a password. </p>
    - id: secretAttributes
      type: com.microsoft.azure.keyvault.models.SecretAttributes
      description: <p>The secret management attributes. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecret(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecret(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBaseImpl.getSecret(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecret(String vaultBaseUrl, String secretName, String secretVersion)
  type: Method
  summary: "<p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle getSecret(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretAsync(String,String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: "<p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBaseImpl.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
  type: Method
  summary: "<p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> getSecretAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  nameWithType: KeyVaultClientBaseImpl.getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
  type: Method
  summary: "<p>Get a specified secret from a given key vault. The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> getSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName, String secretVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: secretVersion
      type: "26831127"
      description: <p>The version of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.models.SecretItem
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.SecretItem.yml
  name: SecretItem
  nameWithType: SecretItem
  fullName: com.microsoft.azure.keyvault.models.SecretItem
  type: Class
  summary: "<p>The secret item containing secret metadata. </p>"
  syntax:
    content: public class SecretItem
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecrets(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecrets(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getSecrets(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecrets(final String vaultBaseUrl)
  type: Method
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SecretItem> getSecrets(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsAsync(final String,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
  type: Method
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretsAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SecretItem>> getSecretsAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretsWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecrets(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecrets(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSecrets(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecrets(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SecretItem> getSecrets(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsAsync(final String,final Integer,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  type: Method
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SecretItem>> getSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersions(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretVersions(final String vaultBaseUrl, final String secretName)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersions(final String vaultBaseUrl, final String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersions(final String vaultBaseUrl, final String secretName)
  type: Method
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SecretItem> getSecretVersions(final String vaultBaseUrl, final String secretName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsAsync(final String,final String,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
  type: Method
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
  type: Method
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
  type: Method
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  type: Method
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SecretItem> getSecretVersions(final String vaultBaseUrl, final String secretName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsAsync(final String,final String,final Integer,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
  type: Method
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  type: Method
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SecretItem>> getSecretVersionsAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
  type: Method
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String secretName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: 3d93591e
      description: <p>The name of the secret. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified, the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.models.DeletedSecretItem
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.DeletedSecretItem.yml
  name: DeletedSecretItem
  nameWithType: DeletedSecretItem
  fullName: com.microsoft.azure.keyvault.models.DeletedSecretItem
  type: Class
  summary: "<p>The deleted secret item containing metadata about the deleted secret. </p>"
  syntax:
    content: public class DeletedSecretItem extends SecretItem
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecrets(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecrets(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecrets(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecrets(final String vaultBaseUrl)
  type: Method
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedSecretItem> getDeletedSecrets(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
      description: <p>the PagedList&lt;DeletedSecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String,final ListOperationCallback<DeletedSecretItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  type: Method
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedSecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretsAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSecretItem>>> getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedSecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecrets(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedSecretItem> getDeletedSecrets(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
      description: <p>the PagedList&lt;DeletedSecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String,final Integer,final ListOperationCallback<DeletedSecretItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  type: Method
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedSecretItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedSecretItem>> getDeletedSecretsAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSecretItem>>> getDeletedSecretsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedSecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecret(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecret(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecret(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Gets the specified deleted secret. The Get Deleted Secret operation returns the specified deleted secret along with its attributes. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedSecretBundle getDeletedSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedSecretBundle
      description: <p>the DeletedSecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretAsync(String,String,final ServiceCallback<DeletedSecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
  type: Method
  summary: "<p>Gets the specified deleted secret. The Get Deleted Secret operation returns the specified deleted secret along with its attributes. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedSecretBundle> getDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<DeletedSecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Gets the specified deleted secret. The Get Deleted Secret operation returns the specified deleted secret along with its attributes. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedSecretBundle> getDeletedSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedSecretBundlea08ddfce
      description: <p>the observable to the DeletedSecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Gets the specified deleted secret. The Get Deleted Secret operation returns the specified deleted secret along with its attributes. This operation requires the secrets/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedSecretBundle>> getDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedSecretBundlee7daa122
      description: <p>the observable to the DeletedSecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedSecret(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedSecret(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedSecret(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Permanently deletes the specified secret. The purge deleted secret operation removes the secret permanently, without the possibility of recovery. This operation can only be enabled on a soft-delete enabled vault. This operation requires the secrets/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public void purgeDeletedSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedSecretAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: "<p>Permanently deletes the specified secret. The purge deleted secret operation removes the secret permanently, without the possibility of recovery. This operation can only be enabled on a soft-delete enabled vault. This operation requires the secrets/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> purgeDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Permanently deletes the specified secret. The purge deleted secret operation removes the secret permanently, without the possibility of recovery. This operation can only be enabled on a soft-delete enabled vault. This operation requires the secrets/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> purgeDeletedSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Permanently deletes the specified secret. The purge deleted secret operation removes the secret permanently, without the possibility of recovery. This operation can only be enabled on a soft-delete enabled vault. This operation requires the secrets/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSecret(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedSecret(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSecret(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Recovers the deleted secret to the latest version. Recovers the deleted secret in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the secrets/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle recoverDeletedSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSecretAsync(String,String,final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: "<p>Recovers the deleted secret to the latest version. Recovers the deleted secret in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the secrets/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> recoverDeletedSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Recovers the deleted secret to the latest version. Recovers the deleted secret in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the secrets/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> recoverDeletedSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Recovers the deleted secret to the latest version. Recovers the deleted secret in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the secrets/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> recoverDeletedSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the deleted secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.models.BackupSecretResult
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.BackupSecretResult.yml
  name: BackupSecretResult
  nameWithType: BackupSecretResult
  fullName: com.microsoft.azure.keyvault.models.BackupSecretResult
  type: Class
  summary: "<p>The backup secret result, containing the backup blob. </p>"
  syntax:
    content: public class BackupSecretResult
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupSecret(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupSecret(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.backupSecret(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupSecret(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Backs up the specified secret. Requests that a backup of the specified secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the secrets/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public BackupSecretResult backupSecret(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: com.microsoft.azure.keyvault.models.BackupSecretResult
      description: <p>the BackupSecretResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupSecretAsync(String,String,final ServiceCallback<BackupSecretResult>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
  type: Method
  summary: "<p>Backs up the specified secret. Requests that a backup of the specified secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the secrets/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<BackupSecretResult> backupSecretAsync(String vaultBaseUrl, String secretName, final ServiceCallback<BackupSecretResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.BackupSecretResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.BackupSecretResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupSecretAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupSecretAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.backupSecretAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupSecretAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Backs up the specified secret. Requests that a backup of the specified secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the secrets/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<BackupSecretResult> backupSecretAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.BackupSecretResulta08ddfce
      description: <p>the observable to the BackupSecretResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupSecretWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  nameWithType: KeyVaultClientBaseImpl.backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
  type: Method
  summary: "<p>Backs up the specified secret. Requests that a backup of the specified secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the secrets/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<BackupSecretResult>> backupSecretWithServiceResponseAsync(String vaultBaseUrl, String secretName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretName
      type: "26831127"
      description: <p>The name of the secret. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.BackupSecretResulte7daa122
      description: <p>the observable to the BackupSecretResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreSecret(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
  type: Method
  summary: "<p>Restores a backed up secret to a vault. Restores a backed up secret, and all its versions, to a vault. This operation requires the secrets/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public SecretBundle restoreSecret(String vaultBaseUrl, byte[] secretBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SecretBundle
      description: <p>the SecretBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreSecretAsync(String,byte [],final ServiceCallback<SecretBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
  type: Method
  summary: "<p>Restores a backed up secret to a vault. Restores a backed up secret, and all its versions, to a vault. This operation requires the secrets/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SecretBundle> restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup, final ServiceCallback<SecretBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreSecretAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  type: Method
  summary: "<p>Restores a backed up secret to a vault. Restores a backed up secret, and all its versions, to a vault. This operation requires the secrets/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SecretBundle> restoreSecretAsync(String vaultBaseUrl, byte[] secretBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SecretBundlea08ddfce
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreSecretWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
  type: Method
  summary: "<p>Restores a backed up secret to a vault. Restores a backed up secret, and all its versions, to a vault. This operation requires the secrets/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SecretBundle>> restoreSecretWithServiceResponseAsync(String vaultBaseUrl, byte[] secretBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: secretBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a secret bundle. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SecretBundlee7daa122
      description: <p>the observable to the SecretBundle object </p>
- uid: com.microsoft.azure.keyvault.models.CertificateItem
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.CertificateItem.yml
  name: CertificateItem
  nameWithType: CertificateItem
  fullName: com.microsoft.azure.keyvault.models.CertificateItem
  type: Class
  summary: "<p>The certificate item containing certificate metadata. </p>"
  syntax:
    content: public class CertificateItem
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificates(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificates(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificates(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificates(final String vaultBaseUrl)
  type: Method
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateItem> getCertificates(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesAsync(final String,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
  type: Method
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatesAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificates(final String,final Integer,final Boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  nameWithType: KeyVaultClientBaseImpl.getCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  type: Method
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateItem> getCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesAsync(final String,final Integer,final Boolean,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<CertificateItem> serviceCallback)
  type: Method
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesAsync(final String,final Integer,final Boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  type: Method
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesWithServiceResponseAsync(final String,final Integer,final Boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  type: Method
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.DeletedCertificateBundle.yml
  name: DeletedCertificateBundle
  nameWithType: DeletedCertificateBundle
  fullName: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
  type: Class
  summary: "<p>A Deleted Certificate consisting of its previous id, attributes and its tags, as well as information on when it will be purged. </p>"
  syntax:
    content: public class DeletedCertificateBundle extends CertificateBundle
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificate(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificate(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificate(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object. This operation requires the certificates/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedCertificateBundle deleteCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
      description: <p>the DeletedCertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  type: Method
  summary: "<p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object. This operation requires the certificates/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedCertificateBundle> deleteCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object. This operation requires the certificates/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedCertificateBundle> deleteCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
      description: <p>the observable to the DeletedCertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Deletes a certificate from a specified key vault. Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object. This operation requires the certificates/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedCertificateBundle>> deleteCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedCertificateBundlee7daa122
      description: <p>the observable to the DeletedCertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.models.Contacts
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.Contacts.yml
  name: Contacts
  nameWithType: Contacts
  fullName: com.microsoft.azure.keyvault.models.Contacts
  type: Class
  summary: "<p>The contacts for the vault certificates. </p>"
  syntax:
    content: public class Contacts
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateContacts(String,Contacts)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setCertificateContacts(String vaultBaseUrl, Contacts contacts)
  nameWithType: KeyVaultClientBaseImpl.setCertificateContacts(String vaultBaseUrl, Contacts contacts)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateContacts(String vaultBaseUrl, Contacts contacts)
  type: Method
  summary: "<p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Contacts setCertificateContacts(String vaultBaseUrl, Contacts contacts)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>The contacts for the key vault certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>the Contacts object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateContactsAsync(String,Contacts,final ServiceCallback<Contacts>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
  type: Method
  summary: "<p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Contacts> setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts, final ServiceCallback<Contacts> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>The contacts for the key vault certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateContactsAsync(String,Contacts)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
  nameWithType: KeyVaultClientBaseImpl.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
  type: Method
  summary: "<p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Contacts> setCertificateContactsAsync(String vaultBaseUrl, Contacts contacts)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>The contacts for the key vault certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the observable to the Contacts object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateContactsWithServiceResponseAsync(String,Contacts)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
  nameWithType: KeyVaultClientBaseImpl.setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
  type: Method
  summary: "<p>Sets the certificate contacts for the specified key vault. Sets the certificate contacts for the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Contacts>> setCertificateContactsWithServiceResponseAsync(String vaultBaseUrl, Contacts contacts)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: contacts
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>The contacts for the key vault certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.Contactse7daa122
      description: <p>the observable to the Contacts object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateContacts(String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateContacts(String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificateContacts(String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateContacts(String vaultBaseUrl)
  type: Method
  summary: "<p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Contacts getCertificateContacts(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>the Contacts object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  type: Method
  summary: "<p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Contacts> getCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateContactsAsync(String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateContactsAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificateContactsAsync(String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateContactsAsync(String vaultBaseUrl)
  type: Method
  summary: "<p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Contacts> getCertificateContactsAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the observable to the Contacts object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateContactsWithServiceResponseAsync(String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  type: Method
  summary: "<p>Lists the certificate contacts for a specified key vault. The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Contacts>> getCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.Contactse7daa122
      description: <p>the observable to the Contacts object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateContacts(String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateContacts(String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateContacts(String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateContacts(String vaultBaseUrl)
  type: Method
  summary: "<p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Contacts deleteCertificateContacts(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: com.microsoft.azure.keyvault.models.Contacts
      description: <p>the Contacts object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateContactsAsync(String,final ServiceCallback<Contacts>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
  type: Method
  summary: "<p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Contacts> deleteCertificateContactsAsync(String vaultBaseUrl, final ServiceCallback<Contacts> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateContactsAsync(String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateContactsAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateContactsAsync(String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateContactsAsync(String vaultBaseUrl)
  type: Method
  summary: "<p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Contacts> deleteCertificateContactsAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.Contactsa08ddfce
      description: <p>the observable to the Contacts object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateContactsWithServiceResponseAsync(String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
  type: Method
  summary: "<p>Deletes the certificate contacts for a specified key vault. Deletes the certificate contacts for a specified key vault certificate. This operation requires the certificates/managecontacts permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Contacts>> deleteCertificateContactsWithServiceResponseAsync(String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.Contactse7daa122
      description: <p>the observable to the Contacts object </p>
- uid: com.microsoft.azure.keyvault.models.CertificateIssuerItem
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.CertificateIssuerItem.yml
  name: CertificateIssuerItem
  nameWithType: CertificateIssuerItem
  fullName: com.microsoft.azure.keyvault.models.CertificateIssuerItem
  type: Class
  summary: "<p>The certificate issuer item containing certificate issuer metadata. </p>"
  syntax:
    content: public class CertificateIssuerItem
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuers(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuers(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuers(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuers(final String vaultBaseUrl)
  type: Method
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateIssuerItem> getCertificateIssuers(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
      description: <p>the PagedList&lt;CertificateIssuerItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String,final ListOperationCallback<CertificateIssuerItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  type: Method
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuersAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateIssuerItem>>> getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateIssuerItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuers(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateIssuerItem> getCertificateIssuers(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
      description: <p>the PagedList&lt;CertificateIssuerItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String,final Integer,final ListOperationCallback<CertificateIssuerItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  type: Method
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateIssuerItem>> getCertificateIssuersAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateIssuerItem>>> getCertificateIssuersWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateIssuerItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.models.IssuerBundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.IssuerBundle.yml
  name: IssuerBundle
  nameWithType: IssuerBundle
  fullName: com.microsoft.azure.keyvault.models.IssuerBundle
  type: Class
  summary: "<p>The issuer for Key Vault certificate. </p>"
  syntax:
    content: public class IssuerBundle extends IssuerBundle
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuer(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
  type: Method
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public IssuerBundle setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    return:
      type: com.microsoft.azure.keyvault.models.IssuerBundle
      description: <p>the IssuerBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerAsync(String,String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
  type: Method
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
  type: Method
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
  type: Method
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  type: Method
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public IssuerBundle setCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: com.microsoft.azure.keyvault.models.IssuerBundle
      description: <p>the IssuerBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.models.IssuerCredentials
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.IssuerCredentials.yml
  name: IssuerCredentials
  nameWithType: IssuerCredentials
  fullName: com.microsoft.azure.keyvault.models.IssuerCredentials
  type: Class
  summary: "<p>The credentials to be used for the certificate issuer. </p>"
  syntax:
    content: public class IssuerCredentials
- uid: com.microsoft.azure.keyvault.models.OrganizationDetails
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.OrganizationDetails.yml
  name: OrganizationDetails
  nameWithType: OrganizationDetails
  fullName: com.microsoft.azure.keyvault.models.OrganizationDetails
  type: Class
  summary: "<p>Details of the organization of the certificate issuer. </p>"
  syntax:
    content: public class OrganizationDetails
- uid: com.microsoft.azure.keyvault.models.IssuerAttributes
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.IssuerAttributes.yml
  name: IssuerAttributes
  nameWithType: IssuerAttributes
  fullName: com.microsoft.azure.keyvault.models.IssuerAttributes
  type: Class
  summary: "<p>The attributes of an issuer managed by the Key Vault service. </p>"
  syntax:
    content: public class IssuerAttributes
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  type: Method
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  type: Method
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IssuerBundle> setCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBaseImpl.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  type: Method
  summary: "<p>Sets the specified certificate issuer. The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> setCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuer(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateIssuer(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuer(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuer(String vaultBaseUrl, String issuerName)
  type: Method
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public IssuerBundle updateCertificateIssuer(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: com.microsoft.azure.keyvault.models.IssuerBundle
      description: <p>the IssuerBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  type: Method
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  type: Method
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  type: Method
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuer(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  type: Method
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public IssuerBundle updateCertificateIssuer(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: com.microsoft.azure.keyvault.models.IssuerBundle
      description: <p>the IssuerBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
  type: Method
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  type: Method
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IssuerBundle> updateCertificateIssuerAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerWithServiceResponseAsync(String,String,String,IssuerCredentials,OrganizationDetails,IssuerAttributes)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
  type: Method
  summary: "<p>Updates the specified certificate issuer. The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> updateCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName, String provider, IssuerCredentials credentials, OrganizationDetails organizationDetails, IssuerAttributes attributes)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: provider
      type: "26831127"
      description: <p>The issuer provider. </p>
    - id: credentials
      type: com.microsoft.azure.keyvault.models.IssuerCredentials
      description: <p>The credentials to be used for the issuer. </p>
    - id: organizationDetails
      type: com.microsoft.azure.keyvault.models.OrganizationDetails
      description: <p>Details of the organization as provided to the issuer. </p>
    - id: attributes
      type: com.microsoft.azure.keyvault.models.IssuerAttributes
      description: <p>Attributes of the issuer object. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuer(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuer(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuer(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuer(String vaultBaseUrl, String issuerName)
  type: Method
  summary: "<p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public IssuerBundle getCertificateIssuer(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: com.microsoft.azure.keyvault.models.IssuerBundle
      description: <p>the IssuerBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  type: Method
  summary: "<p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IssuerBundle> getCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuerAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  type: Method
  summary: "<p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IssuerBundle> getCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuerWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  type: Method
  summary: "<p>Lists the specified certificate issuer. The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> getCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateIssuer(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
  type: Method
  summary: "<p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault. This operation requires the certificates/manageissuers/deleteissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public IssuerBundle deleteCertificateIssuer(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: com.microsoft.azure.keyvault.models.IssuerBundle
      description: <p>the IssuerBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateIssuerAsync(String,String,final ServiceCallback<IssuerBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
  type: Method
  summary: "<p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault. This operation requires the certificates/manageissuers/deleteissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<IssuerBundle> deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName, final ServiceCallback<IssuerBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateIssuerAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
  type: Method
  summary: "<p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault. This operation requires the certificates/manageissuers/deleteissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<IssuerBundle> deleteCertificateIssuerAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.IssuerBundlea08ddfce
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateIssuerWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
  type: Method
  summary: "<p>Deletes the specified certificate issuer. The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault. This operation requires the certificates/manageissuers/deleteissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<IssuerBundle>> deleteCertificateIssuerWithServiceResponseAsync(String vaultBaseUrl, String issuerName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: issuerName
      type: "26831127"
      description: <p>The name of the issuer. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.IssuerBundlee7daa122
      description: <p>the observable to the IssuerBundle object </p>
- uid: com.microsoft.azure.keyvault.models.CertificateOperation
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.CertificateOperation.yml
  name: CertificateOperation
  nameWithType: CertificateOperation
  fullName: com.microsoft.azure.keyvault.models.CertificateOperation
  type: Class
  summary: "<p>A certificate operation is returned in case of asynchronous requests. </p>"
  syntax:
    content: public class CertificateOperation extends CertificateOperation
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificate(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.createCertificate(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificate(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateOperation createCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateOperation
      description: <p>the CertificateOperation object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateAsync(String,String,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  type: Method
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateOperatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificate(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateOperation createCertificate(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateOperation
      description: <p>the CertificateOperation object if successful. </p>
- uid: com.microsoft.azure.keyvault.models.CertificatePolicy
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.CertificatePolicy.yml
  name: CertificatePolicy
  nameWithType: CertificatePolicy
  fullName: com.microsoft.azure.keyvault.models.CertificatePolicy
  type: Class
  summary: "<p>Management policy for a certificate. </p>"
  syntax:
    content: public class CertificatePolicy
- uid: com.microsoft.azure.keyvault.models.CertificateAttributes
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.CertificateAttributes.yml
  name: CertificateAttributes
  nameWithType: CertificateAttributes
  fullName: com.microsoft.azure.keyvault.models.CertificateAttributes
  type: Class
  summary: "<p>The certificate management attributes. </p>"
  syntax:
    content: public class CertificateAttributes extends Attributes
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
  type: Method
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateOperation> createCertificateAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateWithServiceResponseAsync(String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Creates a new certificate. If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> createCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateOperatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.models.CertificateBundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.CertificateBundle.yml
  name: CertificateBundle
  nameWithType: CertificateBundle
  fullName: com.microsoft.azure.keyvault.models.CertificateBundle
  type: Class
  summary: "<p>A certificate bundle consists of a certificate (X509) plus its attributes. </p>"
  syntax:
    content: public class CertificateBundle extends CertificateBundle
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificate(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: KeyVaultClientBaseImpl.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  type: Method
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  type: Method
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: KeyVaultClientBaseImpl.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  type: Method
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificate(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle importCertificate(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> importCertificateAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateWithServiceResponseAsync(String,String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Imports a certificate into a specified key vault. Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> importCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String base64EncodedCertificate, String password, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: base64EncodedCertificate
      type: "26831127"
      description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    - id: password
      type: "26831127"
      description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersions(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateVersions(final String vaultBaseUrl, final String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersions(final String vaultBaseUrl, final String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersions(final String vaultBaseUrl, final String certificateName)
  type: Method
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateItem> getCertificateVersions(final String vaultBaseUrl, final String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String,final String,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
  type: Method
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
  type: Method
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
  type: Method
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  type: Method
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateItem> getCertificateVersions(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String,final String,final Integer,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
  type: Method
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  type: Method
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificateVersionsAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
  type: Method
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificateVersionsWithServiceResponseAsync(final String vaultBaseUrl, final String certificateName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: 3d93591e
      description: <p>The name of the certificate. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatePolicy(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatePolicy(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificatePolicy(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatePolicy(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificatePolicy getCertificatePolicy(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>the CertificatePolicy object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatePolicyAsync(String,String,final ServiceCallback<CertificatePolicy>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
  type: Method
  summary: "<p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificatePolicy> getCertificatePolicyAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificatePolicy> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatePolicyAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificatePolicy> getCertificatePolicyAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
      description: <p>the observable to the CertificatePolicy object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatePolicyWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Lists the policy for a certificate. The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificatePolicy>> getCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in a given key vault. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificatePolicye7daa122
      description: <p>the observable to the CertificatePolicy object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificatePolicy(String,String,CertificatePolicy)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  nameWithType: KeyVaultClientBaseImpl.updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  type: Method
  summary: "<p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificatePolicy updateCertificatePolicy(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The policy for the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>the CertificatePolicy object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificatePolicyAsync(String,String,CertificatePolicy,final ServiceCallback<CertificatePolicy>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
  type: Method
  summary: "<p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificatePolicy> updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy, final ServiceCallback<CertificatePolicy> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The policy for the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificatePolicyAsync(String,String,CertificatePolicy)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  nameWithType: KeyVaultClientBaseImpl.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  type: Method
  summary: "<p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificatePolicy> updateCertificatePolicyAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The policy for the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificatePolicya08ddfce
      description: <p>the observable to the CertificatePolicy object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificatePolicyWithServiceResponseAsync(String,String,CertificatePolicy)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  nameWithType: KeyVaultClientBaseImpl.updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
  type: Method
  summary: "<p>Updates the policy for a certificate. Set specified members in the certificate policy. Leave others as null. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificatePolicy>> updateCertificatePolicyWithServiceResponseAsync(String vaultBaseUrl, String certificateName, CertificatePolicy certificatePolicy)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The policy for the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificatePolicye7daa122
      description: <p>the observable to the CertificatePolicy object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificate(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBaseImpl.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificate(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle updateCertificate(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> updateCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateWithServiceResponseAsync(String,String,String,CertificatePolicy,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given certificate. The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> updateCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion, CertificatePolicy certificatePolicy, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given key vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: certificatePolicy
      type: com.microsoft.azure.keyvault.models.CertificatePolicy
      description: <p>The management policy for the certificate. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificate(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBaseImpl.getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
  type: Method
  summary: "<p>Gets information about a certificate. Gets information about a specific certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle getCertificate(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: "<p>Gets information about a certificate. Gets information about a specific certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBaseImpl.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  type: Method
  summary: "<p>Gets information about a certificate. Gets information about a specific certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  nameWithType: KeyVaultClientBaseImpl.getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
  type: Method
  summary: "<p>Gets information about a certificate. Gets information about a specific certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> getCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, String certificateVersion)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate in the given vault. </p>
    - id: certificateVersion
      type: "26831127"
      description: <p>The version of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateOperation(String,String,boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  type: Method
  summary: "<p>Updates a certificate operation. Updates a certificate creation operation that is already in progress. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateOperation updateCertificateOperation(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateOperation
      description: <p>the CertificateOperation object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateOperationAsync(String,String,boolean,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
  type: Method
  summary: "<p>Updates a certificate operation. Updates a certificate creation operation that is already in progress. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateOperation> updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateOperationAsync(String,String,boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  type: Method
  summary: "<p>Updates a certificate operation. Updates a certificate creation operation that is already in progress. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateOperation> updateCertificateOperationAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateOperationWithServiceResponseAsync(String,String,boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  nameWithType: KeyVaultClientBaseImpl.updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
  type: Method
  summary: "<p>Updates a certificate operation. Updates a certificate creation operation that is already in progress. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> updateCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName, boolean cancellationRequested)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: cancellationRequested
      type: 4fc6e284
      description: <p>Indicates if cancellation was requested on the certificate operation. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateOperatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateOperation(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateOperation(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateOperation(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateOperation(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Gets the creation operation of a certificate. Gets the creation operation associated with a specified certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateOperation getCertificateOperation(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateOperation
      description: <p>the CertificateOperation object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  type: Method
  summary: "<p>Gets the creation operation of a certificate. Gets the creation operation associated with a specified certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateOperation> getCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateOperationAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Gets the creation operation of a certificate. Gets the creation operation associated with a specified certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateOperation> getCertificateOperationAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateOperationWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Gets the creation operation of a certificate. Gets the creation operation associated with a specified certificate. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> getCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateOperatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateOperation(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateOperation(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateOperation(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateOperation(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Deletes the creation operation for a specific certificate. Deletes the creation operation for a specified certificate that is in the process of being created. The certificate is no longer created. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateOperation deleteCertificateOperation(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateOperation
      description: <p>the CertificateOperation object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateOperationAsync(String,String,final ServiceCallback<CertificateOperation>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
  type: Method
  summary: "<p>Deletes the creation operation for a specific certificate. Deletes the creation operation for a specified certificate that is in the process of being created. The certificate is no longer created. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateOperation> deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateOperation> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateOperationAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Deletes the creation operation for a specific certificate. Deletes the creation operation for a specified certificate that is in the process of being created. The certificate is no longer created. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateOperation> deleteCertificateOperationAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateOperationa08ddfce
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateOperationWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Deletes the creation operation for a specific certificate. Deletes the creation operation for a specified certificate that is in the process of being created. The certificate is no longer created. This operation requires the certificates/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateOperation>> deleteCertificateOperationWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateOperatione7daa122
      description: <p>the observable to the CertificateOperation object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificate(String,String,List<byte[]>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  type: Method
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateAsync(String,String,List<byte[]>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateAsync(String,String,List<byte[]>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  type: Method
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
  type: Method
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificate(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle mergeCertificate(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> mergeCertificateAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateWithServiceResponseAsync(String,String,List<byte[]>,CertificateAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Merges a certificate or a certificate chain with a key pair existing on the server. The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> mergeCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName, List<byte[]> x509Certificates, CertificateAttributes certificateAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: x509Certificates
      type: ec5d9e1e
      description: <p>The certificate or the certificate chain to merge. </p>
    - id: certificateAttributes
      type: com.microsoft.azure.keyvault.models.CertificateAttributes
      description: <p>The attributes of the certificate (optional). </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.models.BackupCertificateResult
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.BackupCertificateResult.yml
  name: BackupCertificateResult
  nameWithType: BackupCertificateResult
  fullName: com.microsoft.azure.keyvault.models.BackupCertificateResult
  type: Class
  summary: "<p>The backup certificate result, containing the backup blob. </p>"
  syntax:
    content: public class BackupCertificateResult
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupCertificate(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.backupCertificate(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupCertificate(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Backs up the specified certificate. Requests that a backup of the specified certificate be downloaded to the client. All versions of the certificate will be downloaded. This operation requires the certificates/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public BackupCertificateResult backupCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: com.microsoft.azure.keyvault.models.BackupCertificateResult
      description: <p>the BackupCertificateResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupCertificateAsync(String,String,final ServiceCallback<BackupCertificateResult>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<BackupCertificateResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.backupCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<BackupCertificateResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<BackupCertificateResult> serviceCallback)
  type: Method
  summary: "<p>Backs up the specified certificate. Requests that a backup of the specified certificate be downloaded to the client. All versions of the certificate will be downloaded. This operation requires the certificates/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<BackupCertificateResult> backupCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<BackupCertificateResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.BackupCertificateResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.BackupCertificateResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.backupCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupCertificateAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Backs up the specified certificate. Requests that a backup of the specified certificate be downloaded to the client. All versions of the certificate will be downloaded. This operation requires the certificates/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<BackupCertificateResult> backupCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.BackupCertificateResulta08ddfce
      description: <p>the observable to the BackupCertificateResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.backupCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Backs up the specified certificate. Requests that a backup of the specified certificate be downloaded to the client. All versions of the certificate will be downloaded. This operation requires the certificates/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<BackupCertificateResult>> backupCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.BackupCertificateResulte7daa122
      description: <p>the observable to the BackupCertificateResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreCertificate(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreCertificate(String vaultBaseUrl, byte[] certificateBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreCertificate(String vaultBaseUrl, byte[] certificateBundleBackup)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreCertificate(String vaultBaseUrl, byte[] certificateBundleBackup)
  type: Method
  summary: "<p>Restores a backed up certificate to a vault. Restores a backed up certificate, and all its versions, to a vault. This operation requires the certificates/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle restoreCertificate(String vaultBaseUrl, byte[] certificateBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a certificate bundle. </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreCertificateAsync(String,byte [],final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: "<p>Restores a backed up certificate to a vault. Restores a backed up certificate, and all its versions, to a vault. This operation requires the certificates/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a certificate bundle. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreCertificateAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
  type: Method
  summary: "<p>Restores a backed up certificate to a vault. Restores a backed up certificate, and all its versions, to a vault. This operation requires the certificates/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> restoreCertificateAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a certificate bundle. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreCertificateWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreCertificateWithServiceResponseAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreCertificateWithServiceResponseAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreCertificateWithServiceResponseAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
  type: Method
  summary: "<p>Restores a backed up certificate to a vault. Restores a backed up certificate, and all its versions, to a vault. This operation requires the certificates/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> restoreCertificateWithServiceResponseAsync(String vaultBaseUrl, byte[] certificateBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a certificate bundle. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.models.DeletedCertificateItem
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.DeletedCertificateItem.yml
  name: DeletedCertificateItem
  nameWithType: DeletedCertificateItem
  fullName: com.microsoft.azure.keyvault.models.DeletedCertificateItem
  type: Class
  summary: "<p>The deleted certificate item containing metadata about the deleted certificate. </p>"
  syntax:
    content: public class DeletedCertificateItem extends CertificateItem
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificates(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificates(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificates(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificates(final String vaultBaseUrl)
  type: Method
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedCertificateItem> getDeletedCertificates(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
      description: <p>the PagedList&lt;DeletedCertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String,final ListOperationCallback<DeletedCertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  type: Method
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificatesAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedCertificateItem>>> getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedCertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificates(final String,final Integer,final Boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  type: Method
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedCertificateItem> getDeletedCertificates(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
      description: <p>the PagedList&lt;DeletedCertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String,final Integer,final Boolean,final ListOperationCallback<DeletedCertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  type: Method
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String,final Integer,final Boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  type: Method
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedCertificateItem>> getDeletedCertificatesAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesWithServiceResponseAsync(final String,final Integer,final Boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
  type: Method
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedCertificateItem>>> getDeletedCertificatesWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults, final Boolean includePending)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: includePending
      type: 2ec468d1
      description: <p>Specifies whether to include certificates which are not completely provisioned. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedCertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificate(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificate(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificate(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedCertificateBundle getDeletedCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedCertificateBundle
      description: <p>the DeletedCertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificateAsync(String,String,final ServiceCallback<DeletedCertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
  type: Method
  summary: "<p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedCertificateBundle> getDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<DeletedCertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedCertificateBundle> getDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedCertificateBundlea08ddfce
      description: <p>the observable to the DeletedCertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Retrieves information about the specified deleted certificate. The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level. This operation requires the certificates/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedCertificateBundle>> getDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedCertificateBundlee7daa122
      description: <p>the observable to the DeletedCertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedCertificate(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. This operation requires the certificate/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public void purgeDeletedCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedCertificateAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: "<p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. This operation requires the certificate/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. This operation requires the certificate/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> purgeDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Permanently deletes the specified deleted certificate. The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. This operation requires the certificate/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the certificate </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedCertificate(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes). This operation requires the certificates/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public CertificateBundle recoverDeletedCertificate(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    return:
      type: com.microsoft.azure.keyvault.models.CertificateBundle
      description: <p>the CertificateBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedCertificateAsync(String,String,final ServiceCallback<CertificateBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  type: Method
  summary: "<p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes). This operation requires the certificates/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CertificateBundle> recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedCertificateAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes). This operation requires the certificates/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CertificateBundle> recoverDeletedCertificateAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.CertificateBundlea08ddfce
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedCertificateWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
  type: Method
  summary: "<p>Recovers the deleted certificate back to its current version under /certificates. The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes). This operation requires the certificates/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<CertificateBundle>> recoverDeletedCertificateWithServiceResponseAsync(String vaultBaseUrl, String certificateName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: certificateName
      type: "26831127"
      description: <p>The name of the deleted certificate </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.CertificateBundlee7daa122
      description: <p>the observable to the CertificateBundle object </p>
- uid: com.microsoft.azure.keyvault.models.StorageAccountItem
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.StorageAccountItem.yml
  name: StorageAccountItem
  nameWithType: StorageAccountItem
  fullName: com.microsoft.azure.keyvault.models.StorageAccountItem
  type: Class
  summary: "<p>The storage account item containing storage account metadata. </p>"
  syntax:
    content: public class StorageAccountItem
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccounts(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccounts(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccounts(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccounts(final String vaultBaseUrl)
  type: Method
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<StorageAccountItem> getStorageAccounts(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
      description: <p>the PagedList&lt;StorageAccountItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsAsync(final String,final ListOperationCallback<StorageAccountItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<StorageAccountItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<StorageAccountItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<StorageAccountItem> serviceCallback)
  type: Method
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<StorageAccountItem>> getStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<StorageAccountItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountsAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountsAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<StorageAccountItem>> getStorageAccountsAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the observable to the PagedList&lt;StorageAccountItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<StorageAccountItem>>> getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.StorageAccountItem2646ccb0
      description: <p>the observable to the PagedList&lt;StorageAccountItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccounts(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<StorageAccountItem> getStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
      description: <p>the PagedList&lt;StorageAccountItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsAsync(final String,final Integer,final ListOperationCallback<StorageAccountItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<StorageAccountItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<StorageAccountItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<StorageAccountItem> serviceCallback)
  type: Method
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<StorageAccountItem>> getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<StorageAccountItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<StorageAccountItem>> getStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the observable to the PagedList&lt;StorageAccountItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<StorageAccountItem>>> getStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.StorageAccountItem2646ccb0
      description: <p>the observable to the PagedList&lt;StorageAccountItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem.yml
  name: DeletedStorageAccountItem
  nameWithType: DeletedStorageAccountItem
  fullName: com.microsoft.azure.keyvault.models.DeletedStorageAccountItem
  type: Class
  summary: "<p>The deleted storage account item containing metadata about the deleted storage account. </p>"
  syntax:
    content: public class DeletedStorageAccountItem extends StorageAccountItem
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccounts(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccounts(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccounts(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccounts(final String vaultBaseUrl)
  type: Method
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedStorageAccountItem> getDeletedStorageAccounts(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
      description: <p>the PagedList&lt;DeletedStorageAccountItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsAsync(final String,final ListOperationCallback<DeletedStorageAccountItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  type: Method
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedStorageAccountItem>> getDeletedStorageAccountsAsync(final String vaultBaseUrl, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountsAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountsAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedStorageAccountItem>> getDeletedStorageAccountsAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedStorageAccountItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
  type: Method
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedStorageAccountItem>>> getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedStorageAccountItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedStorageAccountItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccounts(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedStorageAccountItem> getDeletedStorageAccounts(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
      description: <p>the PagedList&lt;DeletedStorageAccountItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsAsync(final String,final Integer,final ListOperationCallback<DeletedStorageAccountItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  type: Method
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedStorageAccountItem>> getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedStorageAccountItem>> getDeletedStorageAccountsAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedStorageAccountItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsWithServiceResponseAsync(final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
  type: Method
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedStorageAccountItem>>> getDeletedStorageAccountsWithServiceResponseAsync(final String vaultBaseUrl, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedStorageAccountItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedStorageAccountItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.models.DeletedStorageBundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.DeletedStorageBundle.yml
  name: DeletedStorageBundle
  nameWithType: DeletedStorageBundle
  fullName: com.microsoft.azure.keyvault.models.DeletedStorageBundle
  type: Class
  summary: "<p>A deleted storage account bundle consisting of its previous id, attributes and its tags, as well as information on when it will be purged. </p>"
  syntax:
    content: public class DeletedStorageBundle extends StorageBundle
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Gets the specified deleted storage account. The Get Deleted Storage Account operation returns the specified deleted storage account along with its attributes. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedStorageBundle getDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedStorageBundle
      description: <p>the DeletedStorageBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountAsync(String,String,final ServiceCallback<DeletedStorageBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
  type: Method
  summary: "<p>Gets the specified deleted storage account. The Get Deleted Storage Account operation returns the specified deleted storage account along with its attributes. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedStorageBundle> getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Gets the specified deleted storage account. The Get Deleted Storage Account operation returns the specified deleted storage account along with its attributes. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedStorageBundle> getDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
      description: <p>the observable to the DeletedStorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Gets the specified deleted storage account. The Get Deleted Storage Account operation returns the specified deleted storage account along with its attributes. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedStorageBundle>> getDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedStorageBundlee7daa122
      description: <p>the observable to the DeletedStorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Permanently deletes the specified storage account. The purge deleted storage account operation removes the secret permanently, without the possibility of recovery. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public void purgeDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedStorageAccountAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<Void> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: "<p>Permanently deletes the specified storage account. The purge deleted storage account operation removes the secret permanently, without the possibility of recovery. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Permanently deletes the specified storage account. The purge deleted storage account operation removes the secret permanently, without the possibility of recovery. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> purgeDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: purgeDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.purgeDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.purgeDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Permanently deletes the specified storage account. The purge deleted storage account operation removes the secret permanently, without the possibility of recovery. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/purge permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Void>> purgeDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: 27015fa1
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponse</xref> object if successful. </p>
- uid: com.microsoft.azure.keyvault.models.StorageBundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.StorageBundle.yml
  name: StorageBundle
  nameWithType: StorageBundle
  fullName: com.microsoft.azure.keyvault.models.StorageBundle
  type: Class
  summary: "<p>A Storage account bundle consists of key vault storage account details plus its attributes. </p>"
  syntax:
    content: public class StorageBundle
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Recovers the deleted storage account. Recovers the deleted storage account in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle recoverDeletedStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedStorageAccountAsync(String,String,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  type: Method
  summary: "<p>Recovers the deleted storage account. Recovers the deleted storage account in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Recovers the deleted storage account. Recovers the deleted storage account in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> recoverDeletedStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Recovers the deleted storage account. Recovers the deleted storage account in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> recoverDeletedStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.models.BackupStorageResult
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.BackupStorageResult.yml
  name: BackupStorageResult
  nameWithType: BackupStorageResult
  fullName: com.microsoft.azure.keyvault.models.BackupStorageResult
  type: Class
  summary: "<p>The backup storage result, containing the backup blob. </p>"
  syntax:
    content: public class BackupStorageResult
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.backupStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupStorageAccount(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Backs up the specified storage account. Requests that a backup of the specified storage account be downloaded to the client. This operation requires the storage/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public BackupStorageResult backupStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.BackupStorageResult
      description: <p>the BackupStorageResult object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupStorageAccountAsync(String,String,final ServiceCallback<BackupStorageResult>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<BackupStorageResult> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<BackupStorageResult> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<BackupStorageResult> serviceCallback)
  type: Method
  summary: "<p>Backs up the specified storage account. Requests that a backup of the specified storage account be downloaded to the client. This operation requires the storage/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<BackupStorageResult> backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<BackupStorageResult> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.BackupStorageResulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.BackupStorageResulta08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Backs up the specified storage account. Requests that a backup of the specified storage account be downloaded to the client. This operation requires the storage/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<BackupStorageResult> backupStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.BackupStorageResulta08ddfce
      description: <p>the observable to the BackupStorageResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: backupStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.backupStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.backupStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Backs up the specified storage account. Requests that a backup of the specified storage account be downloaded to the client. This operation requires the storage/backup permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<BackupStorageResult>> backupStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.BackupStorageResulte7daa122
      description: <p>the observable to the BackupStorageResult object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreStorageAccount(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreStorageAccount(String vaultBaseUrl, byte[] storageBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreStorageAccount(String vaultBaseUrl, byte[] storageBundleBackup)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreStorageAccount(String vaultBaseUrl, byte[] storageBundleBackup)
  type: Method
  summary: "<p>Restores a backed up storage account to a vault. Restores a backed up storage account to a vault. This operation requires the storage/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle restoreStorageAccount(String vaultBaseUrl, byte[] storageBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreStorageAccountAsync(String,byte [],final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup, final ServiceCallback<StorageBundle> serviceCallback)
  type: Method
  summary: "<p>Restores a backed up storage account to a vault. Restores a backed up storage account to a vault. This operation requires the storage/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreStorageAccountAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup)
  type: Method
  summary: "<p>Restores a backed up storage account to a vault. Restores a backed up storage account to a vault. This operation requires the storage/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> restoreStorageAccountAsync(String vaultBaseUrl, byte[] storageBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreStorageAccountWithServiceResponseAsync(String,byte [])
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: restoreStorageAccountWithServiceResponseAsync(String vaultBaseUrl, byte[] storageBundleBackup)
  nameWithType: KeyVaultClientBaseImpl.restoreStorageAccountWithServiceResponseAsync(String vaultBaseUrl, byte[] storageBundleBackup)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.restoreStorageAccountWithServiceResponseAsync(String vaultBaseUrl, byte[] storageBundleBackup)
  type: Method
  summary: "<p>Restores a backed up storage account to a vault. Restores a backed up storage account to a vault. This operation requires the storage/restore permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> restoreStorageAccountWithServiceResponseAsync(String vaultBaseUrl, byte[] storageBundleBackup)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageBundleBackup
      type: ccd9418d
      description: <p>The backup blob associated with a storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.deleteStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteStorageAccount(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Deletes a storage account. This operation requires the storage/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedStorageBundle deleteStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedStorageBundle
      description: <p>the DeletedStorageBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteStorageAccountAsync(String,String,final ServiceCallback<DeletedStorageBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
  type: Method
  summary: "<p>Deletes a storage account. This operation requires the storage/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedStorageBundle> deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<DeletedStorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Deletes a storage account. This operation requires the storage/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedStorageBundle> deleteStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedStorageBundlea08ddfce
      description: <p>the observable to the DeletedStorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.deleteStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Deletes a storage account. This operation requires the storage/delete permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedStorageBundle>> deleteStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedStorageBundlee7daa122
      description: <p>the observable to the DeletedStorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccount(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Gets information about a specified storage account. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle getStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountAsync(String,String,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  type: Method
  summary: "<p>Gets information about a specified storage account. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> getStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Gets information about a specified storage account. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> getStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Gets information about a specified storage account. This operation requires the storage/get permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> getStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccount(String,String,String,String,boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  nameWithType: KeyVaultClientBaseImpl.setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  type: Method
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccountAsync(String,String,String,String,boolean,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, final ServiceCallback<StorageBundle> serviceCallback)
  type: Method
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccountAsync(String,String,String,String,boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  nameWithType: KeyVaultClientBaseImpl.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  type: Method
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccountWithServiceResponseAsync(String,String,String,String,boolean)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  nameWithType: KeyVaultClientBaseImpl.setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
  type: Method
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccount(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle setStorageAccount(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.models.StorageAccountAttributes
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.StorageAccountAttributes.yml
  name: StorageAccountAttributes
  nameWithType: StorageAccountAttributes
  fullName: com.microsoft.azure.keyvault.models.StorageAccountAttributes
  type: Class
  summary: "<p>The storage account management attributes. </p>"
  syntax:
    content: public class StorageAccountAttributes
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccountAsync(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
  type: Method
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccountAsync(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> setStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccountWithServiceResponseAsync(String,String,String,String,boolean,String,StorageAccountAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Creates or updates a new storage account. This operation requires the storage/set permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> setStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String resourceId, String activeKeyName, boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: resourceId
      type: "26831127"
      description: <p>Storage account resource id. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>Current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 4fc6e284
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccount(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateStorageAccount(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.updateStorageAccount(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccount(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle updateStorageAccount(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccountAsync(String,String,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccountAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccountWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccount(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateStorageAccount(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateStorageAccount(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccount(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle updateStorageAccount(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>The current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 866c2227
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccountAsync(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>The current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 866c2227
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccountAsync(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> updateStorageAccountAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>The current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 866c2227
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccountWithServiceResponseAsync(String,String,String,Boolean,String,StorageAccountAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> updateStorageAccountWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String activeKeyName, Boolean autoRegenerateKey, String regenerationPeriod, StorageAccountAttributes storageAccountAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: activeKeyName
      type: "26831127"
      description: <p>The current active storage account key name. </p>
    - id: autoRegenerateKey
      type: 866c2227
      description: <p>whether keyvault should manage the storage account for the user. </p>
    - id: regenerationPeriod
      type: "26831127"
      description: <p>The key regeneration time duration specified in ISO-8601 format. </p>
    - id: storageAccountAttributes
      type: com.microsoft.azure.keyvault.models.StorageAccountAttributes
      description: <p>The attributes of the storage account. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.regenerateStorageAccountKey(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: regenerateStorageAccountKey(String vaultBaseUrl, String storageAccountName, String keyName)
  nameWithType: KeyVaultClientBaseImpl.regenerateStorageAccountKey(String vaultBaseUrl, String storageAccountName, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.regenerateStorageAccountKey(String vaultBaseUrl, String storageAccountName, String keyName)
  type: Method
  summary: "<p>Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.</p>\r\n<p></p>"
  syntax:
    content: public StorageBundle regenerateStorageAccountKey(String vaultBaseUrl, String storageAccountName, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: keyName
      type: "26831127"
      description: <p>The storage account key name. </p>
    return:
      type: com.microsoft.azure.keyvault.models.StorageBundle
      description: <p>the StorageBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.regenerateStorageAccountKeyAsync(String,String,String,final ServiceCallback<StorageBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName, final ServiceCallback<StorageBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName, final ServiceCallback<StorageBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName, final ServiceCallback<StorageBundle> serviceCallback)
  type: Method
  summary: "<p>Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<StorageBundle> regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName, final ServiceCallback<StorageBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: keyName
      type: "26831127"
      description: <p>The storage account key name. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.regenerateStorageAccountKeyAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName)
  nameWithType: KeyVaultClientBaseImpl.regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName)
  type: Method
  summary: "<p>Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<StorageBundle> regenerateStorageAccountKeyAsync(String vaultBaseUrl, String storageAccountName, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: keyName
      type: "26831127"
      description: <p>The storage account key name. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.StorageBundlea08ddfce
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.regenerateStorageAccountKeyWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: regenerateStorageAccountKeyWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String keyName)
  nameWithType: KeyVaultClientBaseImpl.regenerateStorageAccountKeyWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String keyName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.regenerateStorageAccountKeyWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String keyName)
  type: Method
  summary: "<p>Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<StorageBundle>> regenerateStorageAccountKeyWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String keyName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: keyName
      type: "26831127"
      description: <p>The storage account key name. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.StorageBundlee7daa122
      description: <p>the observable to the StorageBundle object </p>
- uid: com.microsoft.azure.keyvault.models.SasDefinitionItem
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.SasDefinitionItem.yml
  name: SasDefinitionItem
  nameWithType: SasDefinitionItem
  fullName: com.microsoft.azure.keyvault.models.SasDefinitionItem
  type: Class
  summary: "<p>The SAS definition item containing storage SAS definition metadata. </p>"
  syntax:
    content: public class SasDefinitionItem
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitions(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
  type: Method
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SasDefinitionItem> getSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
      description: <p>the PagedList&lt;SasDefinitionItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsAsync(final String,final String,final ListOperationCallback<SasDefinitionItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  type: Method
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SasDefinitionItem>> getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<SasDefinitionItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
  type: Method
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SasDefinitionItem>> getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the observable to the PagedList&lt;SasDefinitionItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
  type: Method
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SasDefinitionItem>>> getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SasDefinitionItem2646ccb0
      description: <p>the observable to the PagedList&lt;SasDefinitionItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  type: Method
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SasDefinitionItem> getSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
      description: <p>the PagedList&lt;SasDefinitionItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsAsync(final String,final String,final Integer,final ListOperationCallback<SasDefinitionItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  type: Method
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SasDefinitionItem>> getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<SasDefinitionItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  type: Method
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SasDefinitionItem>> getSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the observable to the PagedList&lt;SasDefinitionItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  type: Method
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SasDefinitionItem>>> getSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SasDefinitionItem2646ccb0
      description: <p>the observable to the PagedList&lt;SasDefinitionItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem.yml
  name: DeletedSasDefinitionItem
  nameWithType: DeletedSasDefinitionItem
  fullName: com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem
  type: Class
  summary: "<p>The deleted SAS definition item containing metadata about the deleted SAS definition. </p>"
  syntax:
    content: public class DeletedSasDefinitionItem extends SasDefinitionItem
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitions(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
  type: Method
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedSasDefinitionItem> getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
      description: <p>the PagedList&lt;DeletedSasDefinitionItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsAsync(final String,final String,final ListOperationCallback<DeletedSasDefinitionItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  type: Method
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedSasDefinitionItem>> getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
  type: Method
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedSasDefinitionItem>> getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSasDefinitionItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsWithServiceResponseAsync(final String,final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
  type: Method
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSasDefinitionItem>>> getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSasDefinitionItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitions(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  type: Method
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedSasDefinitionItem> getDeletedSasDefinitions(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
      description: <p>the PagedList&lt;DeletedSasDefinitionItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsAsync(final String,final String,final Integer,final ListOperationCallback<DeletedSasDefinitionItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  type: Method
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedSasDefinitionItem>> getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  type: Method
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedSasDefinitionItem>> getDeletedSasDefinitionsAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSasDefinitionItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsWithServiceResponseAsync(final String,final String,final Integer)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
  type: Method
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSasDefinitionItem>>> getDeletedSasDefinitionsWithServiceResponseAsync(final String vaultBaseUrl, final String storageAccountName, final Integer maxresults)
    parameters:
    - id: vaultBaseUrl
      type: 3d93591e
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: 3d93591e
      description: <p>The name of the storage account. </p>
    - id: maxresults
      type: 3437983f
      description: <p>Maximum number of results to return in a page. If not specified the service will return up to 25 results. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSasDefinitionItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle.yml
  name: DeletedSasDefinitionBundle
  nameWithType: DeletedSasDefinitionBundle
  fullName: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
  type: Class
  summary: "<p>A deleted SAS definition bundle consisting of its previous id, attributes and its tags, as well as information on when it will be purged. </p>"
  syntax:
    content: public class DeletedSasDefinitionBundle extends SasDefinitionBundle
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinition(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Gets the specified deleted sas definition. The Get Deleted SAS Definition operation returns the specified deleted SAS definition along with its attributes. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedSasDefinitionBundle getDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
      description: <p>the DeletedSasDefinitionBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionAsync(String,String,String,final ServiceCallback<DeletedSasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
  type: Method
  summary: "<p>Gets the specified deleted sas definition. The Get Deleted SAS Definition operation returns the specified deleted SAS definition along with its attributes. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedSasDefinitionBundle> getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Gets the specified deleted sas definition. The Get Deleted SAS Definition operation returns the specified deleted SAS definition along with its attributes. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedSasDefinitionBundle> getDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
      description: <p>the observable to the DeletedSasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Gets the specified deleted sas definition. The Get Deleted SAS Definition operation returns the specified deleted SAS definition along with its attributes. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedSasDefinitionBundle>> getDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlee7daa122
      description: <p>the observable to the DeletedSasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.models.SasDefinitionBundle
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.SasDefinitionBundle.yml
  name: SasDefinitionBundle
  nameWithType: SasDefinitionBundle
  fullName: com.microsoft.azure.keyvault.models.SasDefinitionBundle
  type: Class
  summary: "<p>A SAS definition bundle consists of key vault SAS definition details plus its attributes. </p>"
  syntax:
    content: public class SasDefinitionBundle
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSasDefinition(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Recovers the deleted SAS definition. Recovers the deleted SAS definition for the specified storage account. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public SasDefinitionBundle recoverDeletedSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SasDefinitionBundle
      description: <p>the SasDefinitionBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSasDefinitionAsync(String,String,String,final ServiceCallback<SasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  type: Method
  summary: "<p>Recovers the deleted SAS definition. Recovers the deleted SAS definition for the specified storage account. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SasDefinitionBundle> recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSasDefinitionAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Recovers the deleted SAS definition. Recovers the deleted SAS definition for the specified storage account. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SasDefinitionBundle> recoverDeletedSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the observable to the SasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSasDefinitionWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: recoverDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.recoverDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.recoverDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Recovers the deleted SAS definition. Recovers the deleted SAS definition for the specified storage account. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SasDefinitionBundle>> recoverDeletedSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
      description: <p>the observable to the SasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSasDefinition(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.deleteSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.</p>\r\n<p></p>"
  syntax:
    content: public DeletedSasDefinitionBundle deleteSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundle
      description: <p>the DeletedSasDefinitionBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSasDefinitionAsync(String,String,String,final ServiceCallback<DeletedSasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
  type: Method
  summary: "<p>Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<DeletedSasDefinitionBundle> deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<DeletedSasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSasDefinitionAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<DeletedSasDefinitionBundle> deleteSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlea08ddfce
      description: <p>the observable to the DeletedSasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSasDefinitionWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: deleteSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.deleteSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.deleteSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<DeletedSasDefinitionBundle>> deleteSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.DeletedSasDefinitionBundlee7daa122
      description: <p>the observable to the DeletedSasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinition(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public SasDefinitionBundle getSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SasDefinitionBundle
      description: <p>the SasDefinitionBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionAsync(String,String,String,final ServiceCallback<SasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  type: Method
  summary: "<p>Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SasDefinitionBundle> getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SasDefinitionBundle> getSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the observable to the SasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SasDefinitionBundle>> getSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
      description: <p>the observable to the SasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinition(String,String,String,String,SasTokenType,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  nameWithType: KeyVaultClientBaseImpl.setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  type: Method
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public SasDefinitionBundle setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SasDefinitionBundle
      description: <p>the SasDefinitionBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.models.SasTokenType
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.SasTokenType.yml
  name: SasTokenType
  nameWithType: SasTokenType
  fullName: com.microsoft.azure.keyvault.models.SasTokenType
  type: Class
  summary: "<p>Defines values for SasTokenType. </p>"
  syntax:
    content: public class SasTokenType
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinitionAsync(String,String,String,String,SasTokenType,String,final ServiceCallback<SasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  type: Method
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SasDefinitionBundle> setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, final ServiceCallback<SasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinitionAsync(String,String,String,String,SasTokenType,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  nameWithType: KeyVaultClientBaseImpl.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  type: Method
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SasDefinitionBundle> setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the observable to the SasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinitionWithServiceResponseAsync(String,String,String,String,SasTokenType,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  nameWithType: KeyVaultClientBaseImpl.setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
  type: Method
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SasDefinitionBundle>> setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
      description: <p>the observable to the SasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinition(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public SasDefinitionBundle setSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SasDefinitionBundle
      description: <p>the SasDefinitionBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
  parent: com.microsoft.azure.keyvault.models
  href: com.microsoft.azure.keyvault.models.SasDefinitionAttributes.yml
  name: SasDefinitionAttributes
  nameWithType: SasDefinitionAttributes
  fullName: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
  type: Class
  summary: "<p>The SAS definition management attributes. </p>"
  syntax:
    content: public class SasDefinitionAttributes
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>,final ServiceCallback<SasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  type: Method
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SasDefinitionBundle> setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SasDefinitionBundle> setSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the observable to the SasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinitionWithServiceResponseAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SasDefinitionBundle>> setSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
      description: <p>the observable to the SasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinition(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public SasDefinitionBundle updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SasDefinitionBundle
      description: <p>the SasDefinitionBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinitionAsync(String,String,String,final ServiceCallback<SasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SasDefinitionBundle> updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, final ServiceCallback<SasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinitionAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SasDefinitionBundle> updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the observable to the SasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinitionWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  nameWithType: KeyVaultClientBaseImpl.updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SasDefinitionBundle>> updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
      description: <p>the observable to the SasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinition(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public SasDefinitionBundle updateSasDefinition(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: com.microsoft.azure.keyvault.models.SasDefinitionBundle
      description: <p>the SasDefinitionBundle object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>,final ServiceCallback<SasDefinitionBundle>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<SasDefinitionBundle> updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags, final ServiceCallback<SasDefinitionBundle> serviceCallback)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinitionAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<SasDefinitionBundle> updateSasDefinitionAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.keyvault.models.SasDefinitionBundlea08ddfce
      description: <p>the observable to the SasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinitionWithServiceResponseAsync(String,String,String,String,SasTokenType,String,SasDefinitionAttributes,Map<String, String>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  nameWithType: KeyVaultClientBaseImpl.updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
  type: Method
  summary: "<p>Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<SasDefinitionBundle>> updateSasDefinitionWithServiceResponseAsync(String vaultBaseUrl, String storageAccountName, String sasDefinitionName, String templateUri, SasTokenType sasType, String validityPeriod, SasDefinitionAttributes sasDefinitionAttributes, Map<String, String> tags)
    parameters:
    - id: vaultBaseUrl
      type: "26831127"
      description: <p>The vault name, for example <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a>. </p>
    - id: storageAccountName
      type: "26831127"
      description: <p>The name of the storage account. </p>
    - id: sasDefinitionName
      type: "26831127"
      description: <p>The name of the SAS definition. </p>
    - id: templateUri
      type: "26831127"
      description: <p>The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template. </p>
    - id: sasType
      type: com.microsoft.azure.keyvault.models.SasTokenType
      description: "<p>The type of SAS token the SAS definition will create. Possible values include: 'account', 'service' </p>"
    - id: validityPeriod
      type: "26831127"
      description: <p>The validity period of SAS tokens created according to the SAS definition. </p>
    - id: sasDefinitionAttributes
      type: com.microsoft.azure.keyvault.models.SasDefinitionAttributes
      description: <p>The attributes of the SAS definition. </p>
    - id: tags
      type: 689c8cb5
      description: <p>Application specific metadata in the form of key-value pairs. </p>
    return:
      type: fc480ba2com.microsoft.azure.keyvault.models.SasDefinitionBundlee7daa122
      description: <p>the observable to the SasDefinitionBundle object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyVersionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsNext(final String nextPageLink)
  type: Method
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<KeyItem> getKeyVersionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  type: Method
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeyVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyVersionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<KeyItem>> getKeyVersionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>Retrieves a list of individual key versions with the same key name. The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeyVersionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeysNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getKeysNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysNext(final String nextPageLink)
  type: Method
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<KeyItem> getKeysNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the PagedList&lt;KeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysNextAsync(final String,final ServiceFuture<List<KeyItem>>,final ListOperationCallback<KeyItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
  type: Method
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<KeyItem>> getKeysNextAsync(final String nextPageLink, final ServiceFuture<List<KeyItem>> serviceFuture, final ListOperationCallback<KeyItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.KeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeysNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getKeysNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<KeyItem>> getKeysNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.KeyIteme7daa122
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getKeysNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getKeysNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getKeysNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>List keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<KeyItem>>> getKeysNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.KeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;KeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeysNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysNext(final String nextPageLink)
  type: Method
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedKeyItem> getDeletedKeysNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
      description: <p>the PagedList&lt;DeletedKeyItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysNextAsync(final String,final ServiceFuture<List<DeletedKeyItem>>,final ListOperationCallback<DeletedKeyItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
  type: Method
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedKeyItem>> getDeletedKeysNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedKeyItem>> serviceFuture, final ListOperationCallback<DeletedKeyItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedKeyItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeysNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedKeyItem>> getDeletedKeysNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedKeyIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>Lists the deleted keys in the specified vault. Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedKeyItem>>> getDeletedKeysNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedKeyItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedKeyItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSecretsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsNext(final String nextPageLink)
  type: Method
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SecretItem> getSecretsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  type: Method
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSecretsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SecretItem>> getSecretsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSecretsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>List secrets in a specified key vault. The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretVersionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsNext(final String nextPageLink)
  type: Method
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SecretItem> getSecretVersionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the PagedList&lt;SecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsNextAsync(final String,final ServiceFuture<List<SecretItem>>,final ListOperationCallback<SecretItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
  type: Method
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SecretItem>> getSecretVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<SecretItem>> serviceFuture, final ListOperationCallback<SecretItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretVersionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SecretItem>> getSecretVersionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SecretIteme7daa122
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>List all versions of the specified secret. The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SecretItem>>> getSecretVersionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;SecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsNext(final String nextPageLink)
  type: Method
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedSecretItem> getDeletedSecretsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
      description: <p>the PagedList&lt;DeletedSecretItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsNextAsync(final String,final ServiceFuture<List<DeletedSecretItem>>,final ListOperationCallback<DeletedSecretItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
  type: Method
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedSecretItem>> getDeletedSecretsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSecretItem>> serviceFuture, final ListOperationCallback<DeletedSecretItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSecretItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedSecretItem>> getDeletedSecretsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedSecretIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>Lists deleted secrets for the specified vault. The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSecretItem>>> getDeletedSecretsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedSecretItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSecretItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatesNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesNext(final String nextPageLink)
  type: Method
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateItem> getCertificatesNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  type: Method
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatesNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificatesNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>List certificates in a specified key vault. The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificatesNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuersNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersNext(final String nextPageLink)
  type: Method
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateIssuerItem> getCertificateIssuersNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
      description: <p>the PagedList&lt;CertificateIssuerItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersNextAsync(final String,final ServiceFuture<List<CertificateIssuerItem>>,final ListOperationCallback<CertificateIssuerItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
  type: Method
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateIssuerItem>> getCertificateIssuersNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateIssuerItem>> serviceFuture, final ListOperationCallback<CertificateIssuerItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateIssuerItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuersNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateIssuerItem>> getCertificateIssuersNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIssuerIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>List certificate issuers for a specified key vault. The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateIssuerItem>>> getCertificateIssuersNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateIssuerItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateIssuerItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateVersionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsNext(final String nextPageLink)
  type: Method
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CertificateItem> getCertificateVersionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the PagedList&lt;CertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsNextAsync(final String,final ServiceFuture<List<CertificateItem>>,final ListOperationCallback<CertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
  type: Method
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CertificateItem>> getCertificateVersionsNextAsync(final String nextPageLink, final ServiceFuture<List<CertificateItem>> serviceFuture, final ListOperationCallback<CertificateItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.CertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateVersionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CertificateItem>> getCertificateVersionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.CertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>List the versions of a certificate. The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<CertificateItem>>> getCertificateVersionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.CertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;CertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificatesNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesNext(final String nextPageLink)
  type: Method
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedCertificateItem> getDeletedCertificatesNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
      description: <p>the PagedList&lt;DeletedCertificateItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesNextAsync(final String,final ServiceFuture<List<DeletedCertificateItem>>,final ListOperationCallback<DeletedCertificateItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
  type: Method
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedCertificateItem>> getDeletedCertificatesNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedCertificateItem>> serviceFuture, final ListOperationCallback<DeletedCertificateItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedCertificateItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificatesNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedCertificateItem>> getDeletedCertificatesNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedCertificateIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>Lists the deleted certificates in the specified vault currently available for recovery. The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedCertificateItem>>> getDeletedCertificatesNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedCertificateItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedCertificateItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsNext(final String nextPageLink)
  type: Method
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<StorageAccountItem> getStorageAccountsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
      description: <p>the PagedList&lt;StorageAccountItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsNextAsync(final String,final ServiceFuture<List<StorageAccountItem>>,final ListOperationCallback<StorageAccountItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<StorageAccountItem>> serviceFuture, final ListOperationCallback<StorageAccountItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<StorageAccountItem>> serviceFuture, final ListOperationCallback<StorageAccountItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<StorageAccountItem>> serviceFuture, final ListOperationCallback<StorageAccountItem> serviceCallback)
  type: Method
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<StorageAccountItem>> getStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<StorageAccountItem>> serviceFuture, final ListOperationCallback<StorageAccountItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.StorageAccountItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<StorageAccountItem>> getStorageAccountsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.StorageAccountIteme7daa122
      description: <p>the observable to the PagedList&lt;StorageAccountItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>List storage accounts managed by the specified key vault. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<StorageAccountItem>>> getStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.StorageAccountItem2646ccb0
      description: <p>the observable to the PagedList&lt;StorageAccountItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsNext(final String nextPageLink)
  type: Method
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedStorageAccountItem> getDeletedStorageAccountsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
      description: <p>the PagedList&lt;DeletedStorageAccountItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsNextAsync(final String,final ServiceFuture<List<DeletedStorageAccountItem>>,final ListOperationCallback<DeletedStorageAccountItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedStorageAccountItem>> serviceFuture, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedStorageAccountItem>> serviceFuture, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedStorageAccountItem>> serviceFuture, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
  type: Method
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedStorageAccountItem>> getDeletedStorageAccountsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedStorageAccountItem>> serviceFuture, final ListOperationCallback<DeletedStorageAccountItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedStorageAccountItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedStorageAccountItem>> getDeletedStorageAccountsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedStorageAccountIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedStorageAccountItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>Lists deleted storage accounts for the specified vault. The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedStorageAccountItem>>> getDeletedStorageAccountsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedStorageAccountItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedStorageAccountItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsNext(final String nextPageLink)
  type: Method
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<SasDefinitionItem> getSasDefinitionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
      description: <p>the PagedList&lt;SasDefinitionItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsNextAsync(final String,final ServiceFuture<List<SasDefinitionItem>>,final ListOperationCallback<SasDefinitionItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<SasDefinitionItem>> serviceFuture, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<SasDefinitionItem>> serviceFuture, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<SasDefinitionItem>> serviceFuture, final ListOperationCallback<SasDefinitionItem> serviceCallback)
  type: Method
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<SasDefinitionItem>> getSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<SasDefinitionItem>> serviceFuture, final ListOperationCallback<SasDefinitionItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.SasDefinitionItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<SasDefinitionItem>> getSasDefinitionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.SasDefinitionIteme7daa122
      description: <p>the observable to the PagedList&lt;SasDefinitionItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<SasDefinitionItem>>> getSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.SasDefinitionItem2646ccb0
      description: <p>the observable to the PagedList&lt;SasDefinitionItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsNext(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionsNext(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionsNext(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsNext(final String nextPageLink)
  type: Method
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<DeletedSasDefinitionItem> getDeletedSasDefinitionsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
      description: <p>the PagedList&lt;DeletedSasDefinitionItem&gt; object if successful. </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsNextAsync(final String,final ServiceFuture<List<DeletedSasDefinitionItem>>,final ListOperationCallback<DeletedSasDefinitionItem>)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSasDefinitionItem>> serviceFuture, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSasDefinitionItem>> serviceFuture, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSasDefinitionItem>> serviceFuture, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
  type: Method
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<DeletedSasDefinitionItem>> getDeletedSasDefinitionsNextAsync(final String nextPageLink, final ServiceFuture<List<DeletedSasDefinitionItem>> serviceFuture, final ListOperationCallback<DeletedSasDefinitionItem> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.keyvault.models.DeletedSasDefinitionItema08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsNextAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionsNextAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsNextAsync(final String nextPageLink)
  type: Method
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<DeletedSasDefinitionItem>> getDeletedSasDefinitionsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.keyvault.models.DeletedSasDefinitionIteme7daa122
      description: <p>the observable to the PagedList&lt;DeletedSasDefinitionItem&gt; object </p>
- uid: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl
  href: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.yml
  name: getDeletedSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: KeyVaultClientBaseImpl.getDeletedSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.keyvault.implementation.KeyVaultClientBaseImpl.getDeletedSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: "<p>Lists deleted SAS definitions for the specified vault and storage account. The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponse<Page<DeletedSasDefinitionItem>>> getDeletedSasDefinitionsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: f9d74917com.microsoft.azure.keyvault.models.DeletedSasDefinitionItem2646ccb0
      description: <p>the observable to the PagedList&lt;DeletedSasDefinitionItem&gt; object </p>
