### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  id: AbstractMapDecorator
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map
  children:
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.AbstractMapDecorator()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.AbstractMapDecorator(java.util.Map<K,V>)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.clear()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.containsKey(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.containsValue(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.decorated()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.entrySet()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.equals(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.get(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.hashCode()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.isEmpty()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.keySet()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.put(K,V)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.putAll(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.remove(java.lang.Object)
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.size()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.toString()
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.values()
  langs:
  - java
  name: AbstractMapDecorator<K,V>
  nameWithType: AbstractMapDecorator<K,V>
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>
  type: Class
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public abstract class AbstractMapDecorator<K,V> extends AbstractIterableMap<K,V>
    typeParameters:
    - id: K
    - id: V
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractIterableMap
  inheritedMembers:
  - com.azure.cosmos.implementation.apachecommons.collections.map.AbstractIterableMap.mapIterator()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.AbstractMapDecorator()
  id: AbstractMapDecorator()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: AbstractMapDecorator()
  nameWithType: AbstractMapDecorator<K,V>.AbstractMapDecorator()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.AbstractMapDecorator()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.AbstractMapDecorator*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  summary: Constructor only used in deserialization, do not use otherwise.
  syntax:
    content: protected AbstractMapDecorator()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.AbstractMapDecorator(java.util.Map<K,V>)
  id: AbstractMapDecorator(java.util.Map<K,V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: AbstractMapDecorator(Map<K,V> map)
  nameWithType: AbstractMapDecorator<K,V>.AbstractMapDecorator(Map<K,V> map)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.AbstractMapDecorator(Map<K,V> map)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.AbstractMapDecorator*
  type: Constructor
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  summary: Constructor that wraps (not copies).
  syntax:
    content: protected AbstractMapDecorator(Map<K,V> map)
    parameters:
    - id: map
      type: java.util.Map<K,V>
      description: the map to decorate, must not be null
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.clear()
  id: clear()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: clear()
  nameWithType: AbstractMapDecorator<K,V>.clear()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.clear()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.clear*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public void clear()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.containsKey(java.lang.Object)
  id: containsKey(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: containsKey(Object key)
  nameWithType: AbstractMapDecorator<K,V>.containsKey(Object key)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.containsKey(Object key)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.containsKey*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public boolean containsKey(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.containsValue(java.lang.Object)
  id: containsValue(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: containsValue(Object value)
  nameWithType: AbstractMapDecorator<K,V>.containsValue(Object value)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.containsValue(Object value)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.containsValue*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public boolean containsValue(Object value)
    parameters:
    - id: value
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.decorated()
  id: decorated()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: decorated()
  nameWithType: AbstractMapDecorator<K,V>.decorated()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.decorated()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.decorated*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  summary: Gets the map being decorated.
  syntax:
    content: protected Map<K,V> decorated()
    return:
      type: java.util.Map<K,V>
      description: the decorated map
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.entrySet()
  id: entrySet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: entrySet()
  nameWithType: AbstractMapDecorator<K,V>.entrySet()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.entrySet()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.entrySet*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public Set<Map.Entry<K,V>> entrySet()
    return:
      type: java.util.Set<java.util.Map.Entry<K,V>>
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: equals(Object object)
  nameWithType: AbstractMapDecorator<K,V>.equals(Object object)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.equals(Object object)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.equals*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public boolean equals(Object object)
    parameters:
    - id: object
      type: java.lang.Object
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.get(java.lang.Object)
  id: get(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: get(Object key)
  nameWithType: AbstractMapDecorator<K,V>.get(Object key)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.get(Object key)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.get*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public V get(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: V
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.hashCode()
  id: hashCode()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: hashCode()
  nameWithType: AbstractMapDecorator<K,V>.hashCode()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.hashCode()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.hashCode*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.isEmpty()
  id: isEmpty()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: isEmpty()
  nameWithType: AbstractMapDecorator<K,V>.isEmpty()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.isEmpty()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.isEmpty*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public boolean isEmpty()
    return:
      type: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.keySet()
  id: keySet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: keySet()
  nameWithType: AbstractMapDecorator<K,V>.keySet()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.keySet()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.keySet*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public Set<K> keySet()
    return:
      type: java.util.Set<K>
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.put(K,V)
  id: put(K,V)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: put(K key, V value)
  nameWithType: AbstractMapDecorator<K,V>.put(K key, V value)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.put(K key, V value)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.put*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public V put(K key, V value)
    parameters:
    - id: key
      type: K
    - id: value
      type: V
    return:
      type: V
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.putAll(java.util.Map<? extends K,? extends V>)
  id: putAll(java.util.Map<? extends K,? extends V>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: putAll(Map<? extends K,? extends V> mapToCopy)
  nameWithType: AbstractMapDecorator<K,V>.putAll(Map<? extends K,? extends V> mapToCopy)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.putAll(Map<? extends K,? extends V> mapToCopy)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.putAll*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public void putAll(Map<? extends K,? extends V> mapToCopy)
    parameters:
    - id: mapToCopy
      type: java.util.Map<? extends K,? extends V>
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.remove(java.lang.Object)
  id: remove(java.lang.Object)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: remove(Object key)
  nameWithType: AbstractMapDecorator<K,V>.remove(Object key)
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.remove(Object key)
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.remove*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public V remove(Object key)
    parameters:
    - id: key
      type: java.lang.Object
    return:
      type: V
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.size()
  id: size()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: size()
  nameWithType: AbstractMapDecorator<K,V>.size()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.size()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.size*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public int size()
    return:
      type: int
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.toString()
  id: toString()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: toString()
  nameWithType: AbstractMapDecorator<K,V>.toString()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.toString()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.toString*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.values()
  id: values()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator
  langs:
  - java
  name: values()
  nameWithType: AbstractMapDecorator<K,V>.values()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.values()
  overload: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.values*
  type: Method
  package: com.azure.cosmos.implementation.apachecommons.collections.map
  syntax:
    content: public Collection<V> values()
    return:
      type: java.util.Collection<V>
references:
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.AbstractMapDecorator*
  name: AbstractMapDecorator
  nameWithType: AbstractMapDecorator<K,V>.AbstractMapDecorator
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.AbstractMapDecorator
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: java.util.Map<K,V>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.decorated*
  name: decorated
  nameWithType: AbstractMapDecorator<K,V>.decorated
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.decorated
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.clear*
  name: clear
  nameWithType: AbstractMapDecorator<K,V>.clear
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.clear
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.containsKey*
  name: containsKey
  nameWithType: AbstractMapDecorator<K,V>.containsKey
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.containsKey
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.containsValue*
  name: containsValue
  nameWithType: AbstractMapDecorator<K,V>.containsValue
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.containsValue
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: java.util.Set<java.util.Map.Entry<K,V>>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.util.Map.Entry
    name: Entry
    fullName: java.util.Map.Entry
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: ','
    fullName: ','
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.entrySet*
  name: entrySet
  nameWithType: AbstractMapDecorator<K,V>.entrySet
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.entrySet
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: V
  spec.java:
  - uid: V
    name: V
    fullName: V
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.get*
  name: get
  nameWithType: AbstractMapDecorator<K,V>.get
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.get
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.isEmpty*
  name: isEmpty
  nameWithType: AbstractMapDecorator<K,V>.isEmpty
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.isEmpty
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: java.util.Set<K>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: K
    name: K
    fullName: K
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.keySet*
  name: keySet
  nameWithType: AbstractMapDecorator<K,V>.keySet
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.keySet
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: K
  spec.java:
  - uid: K
    name: K
    fullName: K
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.put*
  name: put
  nameWithType: AbstractMapDecorator<K,V>.put
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.put
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: java.util.Map<? extends K,? extends V>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: '? extends K'
    name: '? extends K'
    fullName: '? extends K'
  - name: ','
    fullName: ','
  - uid: '? extends V'
    name: '? extends V'
    fullName: '? extends V'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.putAll*
  name: putAll
  nameWithType: AbstractMapDecorator<K,V>.putAll
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.putAll
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.remove*
  name: remove
  nameWithType: AbstractMapDecorator<K,V>.remove
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.remove
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.size*
  name: size
  nameWithType: AbstractMapDecorator<K,V>.size
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.size
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: java.util.Collection<V>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: V
    name: V
    fullName: V
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.values*
  name: values
  nameWithType: AbstractMapDecorator<K,V>.values
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.values
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.equals*
  name: equals
  nameWithType: AbstractMapDecorator<K,V>.equals
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.equals
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.hashCode*
  name: hashCode
  nameWithType: AbstractMapDecorator<K,V>.hashCode
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.hashCode
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator.toString*
  name: toString
  nameWithType: AbstractMapDecorator<K,V>.toString
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractMapDecorator<K,V>.toString
  package: com.azure.cosmos.implementation.apachecommons.collections.map
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractIterableMap<K,V>
  name: AbstractIterableMap<K,V>
  nameWithType: AbstractIterableMap<K,V>
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractIterableMap<K,V>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractIterableMap.mapIterator()
  name: AbstractIterableMap.mapIterator()
  nameWithType: AbstractIterableMap.mapIterator()
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractIterableMap.mapIterator()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: K,V
  name: K,V
  nameWithType: K,V
  fullName: K,V
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.util.Map.Entry
  name: Map.Entry
  nameWithType: Map.Entry
  fullName: java.util.Map.Entry
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: '? extends K,? extends V'
  name: '? extends K,? extends V'
  nameWithType: '? extends K,? extends V'
  fullName: '? extends K,? extends V'
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractIterableMap
  name: AbstractIterableMap
  nameWithType: AbstractIterableMap
  fullName: com.azure.cosmos.implementation.apachecommons.collections.map.AbstractIterableMap
