### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService"
fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService"
name: "Db2LinkedService"
nameWithType: "Db2LinkedService"
summary: "Linked service for DB2 data source."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedService?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.LinkedService.additionalProperties()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.annotations()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.connectVia()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.description()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.parameters()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Db2LinkedService extends LinkedService"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.Db2LinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.Db2LinkedService()"
  name: "Db2LinkedService()"
  nameWithType: "Db2LinkedService.Db2LinkedService()"
  syntax: "public Db2LinkedService()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.authenticationType()"
  name: "authenticationType()"
  nameWithType: "Db2LinkedService.authenticationType()"
  summary: "Get the authentication<wbr>Type property: Authentication<wbr>Type to be used for connection."
  syntax: "public Db2AuthenticationType authenticationType()"
  desc: "Get the authenticationType property: AuthenticationType to be used for connection. It is mutually exclusive with connectionString property."
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2AuthenticationType?alt=com.azure.resourcemanager.datafactory.models.Db2AuthenticationType&text=Db2AuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.certificateCommonName()"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.certificateCommonName()"
  name: "certificateCommonName()"
  nameWithType: "Db2LinkedService.certificateCommonName()"
  summary: "Get the certificate<wbr>Common<wbr>Name property: Certificate Common Name when TLS is enabled."
  syntax: "public Object certificateCommonName()"
  desc: "Get the certificateCommonName property: Certificate Common Name when TLS is enabled. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
  returns:
    description: "the certificateCommonName value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.connectionString()"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.connectionString()"
  name: "connectionString()"
  nameWithType: "Db2LinkedService.connectionString()"
  summary: "Get the connection<wbr>String property: The connection string."
  syntax: "public Object connectionString()"
  desc: "Get the connectionString property: The connection string. It is mutually exclusive with server, database, authenticationType, userName, packageCollection and certificateCommonName property. Type: string, SecureString or AzureKeyVaultSecretReference."
  returns:
    description: "the connectionString value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.database()"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.database()"
  name: "database()"
  nameWithType: "Db2LinkedService.database()"
  summary: "Get the database property: Database name for connection."
  syntax: "public Object database()"
  desc: "Get the database property: Database name for connection. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
  returns:
    description: "the database value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "Db2LinkedService.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.packageCollection()"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.packageCollection()"
  name: "packageCollection()"
  nameWithType: "Db2LinkedService.packageCollection()"
  summary: "Get the package<wbr>Collection property: Under where packages are created when querying database."
  syntax: "public Object packageCollection()"
  desc: "Get the packageCollection property: Under where packages are created when querying database. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
  returns:
    description: "the packageCollection value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.password()"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.password()"
  name: "password()"
  nameWithType: "Db2LinkedService.password()"
  summary: "Get the password property: Password for authentication."
  syntax: "public SecretBase password()"
  desc: "Get the password property: Password for authentication."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.server()"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.server()"
  name: "server()"
  nameWithType: "Db2LinkedService.server()"
  summary: "Get the server property: Server name for connection."
  syntax: "public Object server()"
  desc: "Get the server property: Server name for connection. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
  returns:
    description: "the server value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.username()"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.username()"
  name: "username()"
  nameWithType: "Db2LinkedService.username()"
  summary: "Get the username property: Username for authentication."
  syntax: "public Object username()"
  desc: "Get the username property: Username for authentication. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.validate()"
  name: "validate()"
  nameWithType: "Db2LinkedService.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withAnnotations(List<Object> annotations)"
  name: "withAnnotations(List<Object> annotations)"
  nameWithType: "Db2LinkedService.withAnnotations(List<Object> annotations)"
  summary: "Set the annotations property: List of tags that can be used for describing the linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withAnnotations(java.util.List<java.lang.Object>)"
  parameters:
  - name: "annotations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Db2LinkedService withAnnotations(List<Object> annotations)"
  desc: "Set the annotations property: List of tags that can be used for describing the linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withAuthenticationType(com.azure.resourcemanager.datafactory.models.Db2AuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withAuthenticationType(Db2AuthenticationType authenticationType)"
  name: "withAuthenticationType(Db2AuthenticationType authenticationType)"
  nameWithType: "Db2LinkedService.withAuthenticationType(Db2AuthenticationType authenticationType)"
  summary: "Set the authentication<wbr>Type property: Authentication<wbr>Type to be used for connection."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2AuthenticationType?alt=com.azure.resourcemanager.datafactory.models.Db2AuthenticationType&text=Db2AuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Db2LinkedService withAuthenticationType(Db2AuthenticationType authenticationType)"
  desc: "Set the authenticationType property: AuthenticationType to be used for connection. It is mutually exclusive with connectionString property."
  returns:
    description: "the Db2LinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withCertificateCommonName(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withCertificateCommonName(Object certificateCommonName)"
  name: "withCertificateCommonName(Object certificateCommonName)"
  nameWithType: "Db2LinkedService.withCertificateCommonName(Object certificateCommonName)"
  summary: "Set the certificate<wbr>Common<wbr>Name property: Certificate Common Name when TLS is enabled."
  parameters:
  - description: "the certificateCommonName value to set."
    name: "certificateCommonName"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Db2LinkedService withCertificateCommonName(Object certificateCommonName)"
  desc: "Set the certificateCommonName property: Certificate Common Name when TLS is enabled. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
  returns:
    description: "the Db2LinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  name: "withConnectVia(IntegrationRuntimeReference connectVia)"
  nameWithType: "Db2LinkedService.withConnectVia(IntegrationRuntimeReference connectVia)"
  summary: "Set the connect<wbr>Via property: The integration runtime reference."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withConnectVia(com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference)"
  parameters:
  - name: "connectVia"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference?alt=com.azure.resourcemanager.datafactory.models.IntegrationRuntimeReference&text=IntegrationRuntimeReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Db2LinkedService withConnectVia(IntegrationRuntimeReference connectVia)"
  desc: "Set the connectVia property: The integration runtime reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withConnectionString(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withConnectionString(Object connectionString)"
  name: "withConnectionString(Object connectionString)"
  nameWithType: "Db2LinkedService.withConnectionString(Object connectionString)"
  summary: "Set the connection<wbr>String property: The connection string."
  parameters:
  - description: "the connectionString value to set."
    name: "connectionString"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Db2LinkedService withConnectionString(Object connectionString)"
  desc: "Set the connectionString property: The connection string. It is mutually exclusive with server, database, authenticationType, userName, packageCollection and certificateCommonName property. Type: string, SecureString or AzureKeyVaultSecretReference."
  returns:
    description: "the Db2LinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withDatabase(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withDatabase(Object database)"
  name: "withDatabase(Object database)"
  nameWithType: "Db2LinkedService.withDatabase(Object database)"
  summary: "Set the database property: Database name for connection."
  parameters:
  - description: "the database value to set."
    name: "database"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Db2LinkedService withDatabase(Object database)"
  desc: "Set the database property: Database name for connection. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
  returns:
    description: "the Db2LinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "Db2LinkedService.withDescription(String description)"
  summary: "Set the description property: Linked service description."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Db2LinkedService withDescription(String description)"
  desc: "Set the description property: Linked service description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "Db2LinkedService.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Db2LinkedService withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
  returns:
    description: "the Db2LinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withPackageCollection(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withPackageCollection(Object packageCollection)"
  name: "withPackageCollection(Object packageCollection)"
  nameWithType: "Db2LinkedService.withPackageCollection(Object packageCollection)"
  summary: "Set the package<wbr>Collection property: Under where packages are created when querying database."
  parameters:
  - description: "the packageCollection value to set."
    name: "packageCollection"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Db2LinkedService withPackageCollection(Object packageCollection)"
  desc: "Set the packageCollection property: Under where packages are created when querying database. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
  returns:
    description: "the Db2LinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  name: "withParameters(Map<String,ParameterSpecification> parameters)"
  nameWithType: "Db2LinkedService.withParameters(Map<String,ParameterSpecification> parameters)"
  summary: "Set the parameters property: Parameters for linked service."
  overridden: "com.azure.resourcemanager.datafactory.models.LinkedService.withParameters(java.util.Map<java.lang.String,com.azure.resourcemanager.datafactory.models.ParameterSpecification>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.datafactory.models.ParameterSpecification?alt=com.azure.resourcemanager.datafactory.models.ParameterSpecification&text=ParameterSpecification\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Db2LinkedService withParameters(Map<String,ParameterSpecification> parameters)"
  desc: "Set the parameters property: Parameters for linked service."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "Db2LinkedService.withPassword(SecretBase password)"
  summary: "Set the password property: Password for authentication."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Db2LinkedService withPassword(SecretBase password)"
  desc: "Set the password property: Password for authentication."
  returns:
    description: "the Db2LinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withServer(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withServer(Object server)"
  name: "withServer(Object server)"
  nameWithType: "Db2LinkedService.withServer(Object server)"
  summary: "Set the server property: Server name for connection."
  parameters:
  - description: "the server value to set."
    name: "server"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Db2LinkedService withServer(Object server)"
  desc: "Set the server property: Server name for connection. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
  returns:
    description: "the Db2LinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.models.Db2LinkedService.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "Db2LinkedService.withUsername(Object username)"
  summary: "Set the username property: Username for authentication."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Db2LinkedService withUsername(Object username)"
  desc: "Set the username property: Username for authentication. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string)."
  returns:
    description: "the Db2LinkedService object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Db2LinkedService?alt=com.azure.resourcemanager.datafactory.models.Db2LinkedService&text=Db2LinkedService\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Linked service for DB2 data source."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
