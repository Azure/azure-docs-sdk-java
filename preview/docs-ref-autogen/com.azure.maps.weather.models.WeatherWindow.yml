### YamlMime:JavaType
uid: "com.azure.maps.weather.models.WeatherWindow"
fullName: "com.azure.maps.weather.models.WeatherWindow"
name: "WeatherWindow"
nameWithType: "WeatherWindow"
summary: "Forecast window for the storm."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **WeatherWindow**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.models.WeatherWindow?alt=com.azure.maps.weather.models.WeatherWindow&text=WeatherWindow\" data-throw-if-not-resolved=\"False\" />&gt;"
methods:
- uid: "com.azure.maps.weather.models.WeatherWindow.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.maps.weather.models.WeatherWindow.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "WeatherWindow.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Weather<wbr>Window from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static WeatherWindow fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the WeatherWindow."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of WeatherWindow from the JsonReader."
  returns:
    description: "An instance of WeatherWindow if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.maps.weather.models.WeatherWindow?alt=com.azure.maps.weather.models.WeatherWindow&text=WeatherWindow\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.WeatherWindow.getBeginStatus()"
  fullName: "com.azure.maps.weather.models.WeatherWindow.getBeginStatus()"
  name: "getBeginStatus()"
  nameWithType: "WeatherWindow.getBeginStatus()"
  summary: "Get the begin<wbr>Status property: Storm status at the beginning of the window."
  syntax: "public String getBeginStatus()"
  desc: "Get the beginStatus property: Storm status at the beginning of the window."
  returns:
    description: "the beginStatus value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.maps.weather.models.WeatherWindow.getBeginTimestamp()"
  fullName: "com.azure.maps.weather.models.WeatherWindow.getBeginTimestamp()"
  name: "getBeginTimestamp()"
  nameWithType: "WeatherWindow.getBeginTimestamp()"
  summary: "Get the begin<wbr>Timestamp property: Date<wbr>Time of the beginning of the window of movement, displayed in ISO8601 format."
  syntax: "public OffsetDateTime getBeginTimestamp()"
  desc: "Get the beginTimestamp property: DateTime of the beginning of the window of movement, displayed in ISO8601 format."
  returns:
    description: "the beginTimestamp value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.maps.weather.models.WeatherWindow.getBottomRight()"
  fullName: "com.azure.maps.weather.models.WeatherWindow.getBottomRight()"
  name: "getBottomRight()"
  nameWithType: "WeatherWindow.getBottomRight()"
  summary: "Get the bottom<wbr>Right property: Location of the point on the right side of the window at the end of the timeframe."
  syntax: "public GeoPosition getBottomRight()"
  desc: "Get the bottomRight property: Location of the point on the right side of the window at the end of the timeframe."
  returns:
    description: "the bottomRight value."
    type: "<xref href=\"com.azure.core.models.GeoPosition?alt=com.azure.core.models.GeoPosition&text=GeoPosition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.WeatherWindow.getEndStatus()"
  fullName: "com.azure.maps.weather.models.WeatherWindow.getEndStatus()"
  name: "getEndStatus()"
  nameWithType: "WeatherWindow.getEndStatus()"
  summary: "Get the end<wbr>Status property: Storm status at the end of the window."
  syntax: "public String getEndStatus()"
  desc: "Get the endStatus property: Storm status at the end of the window."
  returns:
    description: "the endStatus value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.maps.weather.models.WeatherWindow.getEndTimestamp()"
  fullName: "com.azure.maps.weather.models.WeatherWindow.getEndTimestamp()"
  name: "getEndTimestamp()"
  nameWithType: "WeatherWindow.getEndTimestamp()"
  summary: "Get the end<wbr>Timestamp property: Date<wbr>Time of the end of the window of movement, displayed in ISO8601 format."
  syntax: "public OffsetDateTime getEndTimestamp()"
  desc: "Get the endTimestamp property: DateTime of the end of the window of movement, displayed in ISO8601 format."
  returns:
    description: "the endTimestamp value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.maps.weather.models.WeatherWindow.getPolygon()"
  fullName: "com.azure.maps.weather.models.WeatherWindow.getPolygon()"
  name: "getPolygon()"
  nameWithType: "WeatherWindow.getPolygon()"
  summary: "Return Geo<wbr>Polygon"
  syntax: "public GeoPolygon getPolygon()"
  desc: "Return GeoPolygon"
  returns:
    description: "Returns a <xref uid=\"com.azure.core.models.GeoPolygon\" data-throw-if-not-resolved=\"false\" data-raw-source=\"GeoPolygon\"></xref> for this weather window"
    type: "<xref href=\"com.azure.core.models.GeoPolygon?alt=com.azure.core.models.GeoPolygon&text=GeoPolygon\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.WeatherWindow.getTopLeft()"
  fullName: "com.azure.maps.weather.models.WeatherWindow.getTopLeft()"
  name: "getTopLeft()"
  nameWithType: "WeatherWindow.getTopLeft()"
  summary: "Get the top<wbr>Left property: Location of the point on the left side of the window at the time of the timeframe."
  syntax: "public GeoPosition getTopLeft()"
  desc: "Get the topLeft property: Location of the point on the left side of the window at the time of the timeframe."
  returns:
    description: "the topLeft value."
    type: "<xref href=\"com.azure.core.models.GeoPosition?alt=com.azure.core.models.GeoPosition&text=GeoPosition\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.maps.weather.models.WeatherWindow.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.maps.weather.models.WeatherWindow.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "WeatherWindow.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Forecast window for the storm."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.maps.weather.models.WeatherWindow?alt=com.azure.maps.weather.models.WeatherWindow&text=WeatherWindow\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.maps.weather.models"
artifact: com.azure:azure-maps-weather:1.0.0-beta.3
