### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.annotation.JsonSubTypes.Type
  id: Type
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation
  children:
  - com.fasterxml.jackson.annotation.JsonSubTypes.Type.name()
  - com.fasterxml.jackson.annotation.JsonSubTypes.Type.value()
  langs:
  - java
  name: JsonSubTypes.Type
  nameWithType: JsonSubTypes.Type
  fullName: com.fasterxml.jackson.annotation.JsonSubTypes.Type
  type: Interface
  package: com.fasterxml.jackson.annotation
  summary: Definition of a subtype, along with optional name. If name is missing, class of the type will be checked for <xref uid="com.fasterxml.jackson.annotation.JsonTypeName" data-throw-if-not-resolved="false">JsonTypeName</xref> annotation; and if that is also missing or empty, a default name will be constructed by type id mechanism. Default name is usually based on class name.
  syntax:
    content: public static interface JsonSubTypes.Type implements Annotation
  implements:
  - java.lang.annotation.Annotation
- uid: com.fasterxml.jackson.annotation.JsonSubTypes.Type.name()
  id: name()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSubTypes.Type
  langs:
  - java
  name: name()
  nameWithType: JsonSubTypes.Type.name()
  fullName: com.fasterxml.jackson.annotation.JsonSubTypes.Type.name()
  overload: com.fasterxml.jackson.annotation.JsonSubTypes.Type.name*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Logical type name used as the type identifier for the class
  syntax:
    content: public abstract String name()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonSubTypes.Type.value()
  id: value()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.annotation.JsonSubTypes.Type
  langs:
  - java
  name: value()
  nameWithType: JsonSubTypes.Type.value()
  fullName: com.fasterxml.jackson.annotation.JsonSubTypes.Type.value()
  overload: com.fasterxml.jackson.annotation.JsonSubTypes.Type.value*
  type: Method
  package: com.fasterxml.jackson.annotation
  summary: Class of the subtype
  syntax:
    content: public abstract Class<?> value()
    return:
      type: java.lang.Class<?>
references:
- uid: java.lang.Class<?>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.fasterxml.jackson.annotation.JsonSubTypes.Type.value*
  name: value
  nameWithType: JsonSubTypes.Type.value
  fullName: com.fasterxml.jackson.annotation.JsonSubTypes.Type.value
  package: com.fasterxml.jackson.annotation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.annotation.JsonSubTypes.Type.name*
  name: name
  nameWithType: JsonSubTypes.Type.name
  fullName: com.fasterxml.jackson.annotation.JsonSubTypes.Type.name
  package: com.fasterxml.jackson.annotation
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
