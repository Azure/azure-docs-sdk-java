### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension"
fullName: "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension"
name: "ReactiveCosmosRepositoryConfigurationExtension"
nameWithType: "ReactiveCosmosRepositoryConfigurationExtension"
summary: "Configuration extension class based on <xref uid=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RepositoryConfigurationExtensionSupport\"></xref> provide options to set reactive repository support."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfiguration(org.springframework.beans.factory.config.BeanDefinition,T)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader,boolean)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getConfigurationInspectionClassLoader(org.springframework.core.io.ResourceLoader)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getDefaultNamedQueryLocation()"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingAnnotations()"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingTypes()"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModuleName()"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModulePrefix()"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.hasBean(java.lang.Class<?>,org.springframework.beans.factory.support.BeanDefinitionRegistry)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(org.springframework.data.repository.core.RepositoryMetadata)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.RepositoryConfigurationSource)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.XmlRepositoryConfigurationSource)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.data.repository.config.RepositoryConfigurationSource)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerIfNotAlreadyRegistered(java.util.function.Supplier<org.springframework.beans.factory.support.AbstractBeanDefinition>,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.Object)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerLazyIfNotAlreadyRegistered(java.util.function.Supplier<org.springframework.beans.factory.support.AbstractBeanDefinition>,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.Object)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerWithSourceAndGeneratedBeanName(org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)"
- "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(org.springframework.data.repository.core.RepositoryMetadata)"
syntax: "public class ReactiveCosmosRepositoryConfigurationExtension extends RepositoryConfigurationExtensionSupport"
constructors:
- "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.ReactiveCosmosRepositoryConfigurationExtension()"
methods:
- "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingAnnotations()"
- "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingTypes()"
- "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModuleName()"
- "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModulePrefix()"
- "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getRepositoryFactoryBeanClassName()"
- "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource)"
- "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.data.repository.config.RepositoryConfigurationSource)"
- "com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.useRepositoryConfiguration(org.springframework.data.repository.core.RepositoryMetadata)"
type: "class"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.config"
artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
