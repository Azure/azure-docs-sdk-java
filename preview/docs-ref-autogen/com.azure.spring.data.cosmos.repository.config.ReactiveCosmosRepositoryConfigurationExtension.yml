### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension
  id: ReactiveCosmosRepositoryConfigurationExtension
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config
  children:
  - com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.ReactiveCosmosRepositoryConfigurationExtension()
  - com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingAnnotations()
  - com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingTypes()
  - com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModuleName()
  - com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModulePrefix()
  - com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getRepositoryFactoryBeanClassName()
  - com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource)
  - com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.data.repository.config.RepositoryConfigurationSource)
  - com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.useRepositoryConfiguration(org.springframework.data.repository.core.RepositoryMetadata)
  langs:
  - java
  name: ReactiveCosmosRepositoryConfigurationExtension
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension
  type: Class
  package: com.azure.spring.data.cosmos.repository.config
  summary: Configuration extension class based on <xref uid="org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport" data-throw-if-not-resolved="false">RepositoryConfigurationExtensionSupport</xref> provide options to set reactive repository support.
  syntax:
    content: public class ReactiveCosmosRepositoryConfigurationExtension extends RepositoryConfigurationExtensionSupport
  inheritance:
  - java.lang.Object
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfiguration(org.springframework.beans.factory.config.BeanDefinition,T)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader,boolean)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getConfigurationInspectionClassLoader(org.springframework.core.io.ResourceLoader)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getDefaultNamedQueryLocation()
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingAnnotations()
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingTypes()
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModuleName()
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModulePrefix()
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.hasBean(java.lang.Class<?>,org.springframework.beans.factory.support.BeanDefinitionRegistry)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(org.springframework.data.repository.core.RepositoryMetadata)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.RepositoryConfigurationSource)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.XmlRepositoryConfigurationSource)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.data.repository.config.RepositoryConfigurationSource)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerIfNotAlreadyRegistered(java.util.function.Supplier<org.springframework.beans.factory.support.AbstractBeanDefinition>,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.Object)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerLazyIfNotAlreadyRegistered(java.util.function.Supplier<org.springframework.beans.factory.support.AbstractBeanDefinition>,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.Object)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerWithSourceAndGeneratedBeanName(org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)
  - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(org.springframework.data.repository.core.RepositoryMetadata)
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.ReactiveCosmosRepositoryConfigurationExtension()
  id: ReactiveCosmosRepositoryConfigurationExtension()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension
  langs:
  - java
  name: ReactiveCosmosRepositoryConfigurationExtension()
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.ReactiveCosmosRepositoryConfigurationExtension()
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.ReactiveCosmosRepositoryConfigurationExtension()
  overload: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.ReactiveCosmosRepositoryConfigurationExtension*
  type: Constructor
  package: com.azure.spring.data.cosmos.repository.config
  syntax:
    content: public ReactiveCosmosRepositoryConfigurationExtension()
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingAnnotations()
  id: getIdentifyingAnnotations()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension
  langs:
  - java
  name: getIdentifyingAnnotations()
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingAnnotations()
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingAnnotations()
  overload: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingAnnotations*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  syntax:
    content: protected Collection<Class<? extends Annotation>> getIdentifyingAnnotations()
    return:
      type: java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>>
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingTypes()
  id: getIdentifyingTypes()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension
  langs:
  - java
  name: getIdentifyingTypes()
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingTypes()
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingTypes()
  overload: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingTypes*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  syntax:
    content: protected Collection<Class<?>> getIdentifyingTypes()
    return:
      type: java.util.Collection<java.lang.Class<?>>
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModuleName()
  id: getModuleName()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension
  langs:
  - java
  name: getModuleName()
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.getModuleName()
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModuleName()
  overload: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModuleName*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  syntax:
    content: public String getModuleName()
    return:
      type: java.lang.String
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModulePrefix()
  id: getModulePrefix()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension
  langs:
  - java
  name: getModulePrefix()
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.getModulePrefix()
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModulePrefix()
  overload: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModulePrefix*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  syntax:
    content: public String getModulePrefix()
    return:
      type: java.lang.String
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getRepositoryFactoryBeanClassName()
  id: getRepositoryFactoryBeanClassName()
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension
  langs:
  - java
  name: getRepositoryFactoryBeanClassName()
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.getRepositoryFactoryBeanClassName()
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getRepositoryFactoryBeanClassName()
  overload: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getRepositoryFactoryBeanClassName*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  summary: Return the name of the repository factory bean class.
  syntax:
    content: public String getRepositoryFactoryBeanClassName()
    return:
      type: java.lang.String
      description: String value of bean name
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource)
  id: postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension
  langs:
  - java
  name: postProcess(BeanDefinitionBuilder builder, AnnotationRepositoryConfigurationSource source)
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.postProcess(BeanDefinitionBuilder builder, AnnotationRepositoryConfigurationSource source)
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.postProcess(BeanDefinitionBuilder builder, AnnotationRepositoryConfigurationSource source)
  overload: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.postProcess*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  syntax:
    content: public void postProcess(BeanDefinitionBuilder builder, AnnotationRepositoryConfigurationSource source)
    parameters:
    - id: builder
      type: org.springframework.beans.factory.support.BeanDefinitionBuilder
    - id: source
      type: org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.data.repository.config.RepositoryConfigurationSource)
  id: registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.data.repository.config.RepositoryConfigurationSource)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension
  langs:
  - java
  name: registerBeansForRoot(BeanDefinitionRegistry registry, RepositoryConfigurationSource config)
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.registerBeansForRoot(BeanDefinitionRegistry registry, RepositoryConfigurationSource config)
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.registerBeansForRoot(BeanDefinitionRegistry registry, RepositoryConfigurationSource config)
  overload: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.registerBeansForRoot*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  syntax:
    content: public void registerBeansForRoot(BeanDefinitionRegistry registry, RepositoryConfigurationSource config)
    parameters:
    - id: registry
      type: org.springframework.beans.factory.support.BeanDefinitionRegistry
    - id: config
      type: org.springframework.data.repository.config.RepositoryConfigurationSource
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.useRepositoryConfiguration(org.springframework.data.repository.core.RepositoryMetadata)
  id: useRepositoryConfiguration(org.springframework.data.repository.core.RepositoryMetadata)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension
  langs:
  - java
  name: useRepositoryConfiguration(RepositoryMetadata metadata)
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.useRepositoryConfiguration(RepositoryMetadata metadata)
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.useRepositoryConfiguration(RepositoryMetadata metadata)
  overload: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.useRepositoryConfiguration*
  type: Method
  package: com.azure.spring.data.cosmos.repository.config
  syntax:
    content: protected boolean useRepositoryConfiguration(RepositoryMetadata metadata)
    parameters:
    - id: metadata
      type: org.springframework.data.repository.core.RepositoryMetadata
    return:
      type: boolean
references:
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.ReactiveCosmosRepositoryConfigurationExtension*
  name: ReactiveCosmosRepositoryConfigurationExtension
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.ReactiveCosmosRepositoryConfigurationExtension
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.ReactiveCosmosRepositoryConfigurationExtension
  package: com.azure.spring.data.cosmos.repository.config
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModuleName*
  name: getModuleName
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.getModuleName
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModuleName
  package: com.azure.spring.data.cosmos.repository.config
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModulePrefix*
  name: getModulePrefix
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.getModulePrefix
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getModulePrefix
  package: com.azure.spring.data.cosmos.repository.config
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getRepositoryFactoryBeanClassName*
  name: getRepositoryFactoryBeanClassName
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.getRepositoryFactoryBeanClassName
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getRepositoryFactoryBeanClassName
  package: com.azure.spring.data.cosmos.repository.config
- uid: java.util.Collection<java.lang.Class<?>>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingTypes*
  name: getIdentifyingTypes
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingTypes
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingTypes
  package: com.azure.spring.data.cosmos.repository.config
- uid: java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends java.lang.annotation.Annotation'
    name: Annotation
    fullName: '? extends java.lang.annotation.Annotation'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingAnnotations*
  name: getIdentifyingAnnotations
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingAnnotations
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.getIdentifyingAnnotations
  package: com.azure.spring.data.cosmos.repository.config
- uid: org.springframework.beans.factory.support.BeanDefinitionRegistry
  spec.java:
  - uid: org.springframework.beans.factory.support.BeanDefinitionRegistry
    name: BeanDefinitionRegistry
    fullName: org.springframework.beans.factory.support.BeanDefinitionRegistry
- uid: org.springframework.data.repository.config.RepositoryConfigurationSource
  spec.java:
  - uid: org.springframework.data.repository.config.RepositoryConfigurationSource
    name: RepositoryConfigurationSource
    fullName: org.springframework.data.repository.config.RepositoryConfigurationSource
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.registerBeansForRoot*
  name: registerBeansForRoot
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.registerBeansForRoot
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.registerBeansForRoot
  package: com.azure.spring.data.cosmos.repository.config
- uid: org.springframework.beans.factory.support.BeanDefinitionBuilder
  spec.java:
  - uid: org.springframework.beans.factory.support.BeanDefinitionBuilder
    name: BeanDefinitionBuilder
    fullName: org.springframework.beans.factory.support.BeanDefinitionBuilder
- uid: org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource
  spec.java:
  - uid: org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource
    name: AnnotationRepositoryConfigurationSource
    fullName: org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.postProcess*
  name: postProcess
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.postProcess
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.postProcess
  package: com.azure.spring.data.cosmos.repository.config
- uid: org.springframework.data.repository.core.RepositoryMetadata
  spec.java:
  - uid: org.springframework.data.repository.core.RepositoryMetadata
    name: RepositoryMetadata
    fullName: org.springframework.data.repository.core.RepositoryMetadata
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.useRepositoryConfiguration*
  name: useRepositoryConfiguration
  nameWithType: ReactiveCosmosRepositoryConfigurationExtension.useRepositoryConfiguration
  fullName: com.azure.spring.data.cosmos.repository.config.ReactiveCosmosRepositoryConfigurationExtension.useRepositoryConfiguration
  package: com.azure.spring.data.cosmos.repository.config
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport
  name: RepositoryConfigurationExtensionSupport
  nameWithType: RepositoryConfigurationExtensionSupport
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getDefaultNamedQueryLocation()
  name: RepositoryConfigurationExtensionSupport.getDefaultNamedQueryLocation()
  nameWithType: RepositoryConfigurationExtensionSupport.getDefaultNamedQueryLocation()
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getDefaultNamedQueryLocation()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerIfNotAlreadyRegistered(java.util.function.Supplier<org.springframework.beans.factory.support.AbstractBeanDefinition>,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.Object)
  name: RepositoryConfigurationExtensionSupport.registerIfNotAlreadyRegistered(Supplier<AbstractBeanDefinition>,BeanDefinitionRegistry,String,Object)
  nameWithType: RepositoryConfigurationExtensionSupport.registerIfNotAlreadyRegistered(Supplier<AbstractBeanDefinition>,BeanDefinitionRegistry,String,Object)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerIfNotAlreadyRegistered(java.util.function.Supplier<org.springframework.beans.factory.support.AbstractBeanDefinition>,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.Object)
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModulePrefix()
  name: RepositoryConfigurationExtensionSupport.getModulePrefix()
  nameWithType: RepositoryConfigurationExtensionSupport.getModulePrefix()
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModulePrefix()
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.RepositoryConfigurationSource)
  name: RepositoryConfigurationExtensionSupport.postProcess(BeanDefinitionBuilder,RepositoryConfigurationSource)
  nameWithType: RepositoryConfigurationExtensionSupport.postProcess(BeanDefinitionBuilder,RepositoryConfigurationSource)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.RepositoryConfigurationSource)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModuleName()
  name: RepositoryConfigurationExtensionSupport.getModuleName()
  nameWithType: RepositoryConfigurationExtensionSupport.getModuleName()
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getModuleName()
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingAnnotations()
  name: RepositoryConfigurationExtensionSupport.getIdentifyingAnnotations()
  nameWithType: RepositoryConfigurationExtensionSupport.getIdentifyingAnnotations()
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingAnnotations()
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfiguration(org.springframework.beans.factory.config.BeanDefinition,T)
  name: RepositoryConfigurationExtensionSupport.<T>getRepositoryConfiguration(BeanDefinition,T)
  nameWithType: RepositoryConfigurationExtensionSupport.<T>getRepositoryConfiguration(BeanDefinition,T)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfiguration(org.springframework.beans.factory.config.BeanDefinition,T)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getConfigurationInspectionClassLoader(org.springframework.core.io.ResourceLoader)
  name: RepositoryConfigurationExtensionSupport.getConfigurationInspectionClassLoader(ResourceLoader)
  nameWithType: RepositoryConfigurationExtensionSupport.getConfigurationInspectionClassLoader(ResourceLoader)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getConfigurationInspectionClassLoader(org.springframework.core.io.ResourceLoader)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.hasBean(java.lang.Class<?>,org.springframework.beans.factory.support.BeanDefinitionRegistry)
  name: RepositoryConfigurationExtensionSupport.hasBean(Class<?>,BeanDefinitionRegistry)
  nameWithType: RepositoryConfigurationExtensionSupport.hasBean(Class<?>,BeanDefinitionRegistry)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.hasBean(java.lang.Class<?>,org.springframework.beans.factory.support.BeanDefinitionRegistry)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader)
  name: RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,ResourceLoader)
  nameWithType: RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,ResourceLoader)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.data.repository.config.RepositoryConfigurationSource)
  name: RepositoryConfigurationExtensionSupport.registerBeansForRoot(BeanDefinitionRegistry,RepositoryConfigurationSource)
  nameWithType: RepositoryConfigurationExtensionSupport.registerBeansForRoot(BeanDefinitionRegistry,RepositoryConfigurationSource)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.data.repository.config.RepositoryConfigurationSource)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader,boolean)
  name: RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,ResourceLoader,boolean)
  nameWithType: RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,ResourceLoader,boolean)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.<T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader,boolean)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(org.springframework.data.repository.core.RepositoryMetadata)
  name: RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(RepositoryMetadata)
  nameWithType: RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(RepositoryMetadata)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(org.springframework.data.repository.core.RepositoryMetadata)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingTypes()
  name: RepositoryConfigurationExtensionSupport.getIdentifyingTypes()
  nameWithType: RepositoryConfigurationExtensionSupport.getIdentifyingTypes()
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getIdentifyingTypes()
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.XmlRepositoryConfigurationSource)
  name: RepositoryConfigurationExtensionSupport.postProcess(BeanDefinitionBuilder,XmlRepositoryConfigurationSource)
  nameWithType: RepositoryConfigurationExtensionSupport.postProcess(BeanDefinitionBuilder,XmlRepositoryConfigurationSource)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.XmlRepositoryConfigurationSource)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(org.springframework.data.repository.core.RepositoryMetadata)
  name: RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryMetadata)
  nameWithType: RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryMetadata)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(org.springframework.data.repository.core.RepositoryMetadata)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerLazyIfNotAlreadyRegistered(java.util.function.Supplier<org.springframework.beans.factory.support.AbstractBeanDefinition>,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.Object)
  name: RepositoryConfigurationExtensionSupport.registerLazyIfNotAlreadyRegistered(Supplier<AbstractBeanDefinition>,BeanDefinitionRegistry,String,Object)
  nameWithType: RepositoryConfigurationExtensionSupport.registerLazyIfNotAlreadyRegistered(Supplier<AbstractBeanDefinition>,BeanDefinitionRegistry,String,Object)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerLazyIfNotAlreadyRegistered(java.util.function.Supplier<org.springframework.beans.factory.support.AbstractBeanDefinition>,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.Object)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerWithSourceAndGeneratedBeanName(org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)
  name: RepositoryConfigurationExtensionSupport.registerWithSourceAndGeneratedBeanName(AbstractBeanDefinition,BeanDefinitionRegistry,Object)
  nameWithType: RepositoryConfigurationExtensionSupport.registerWithSourceAndGeneratedBeanName(AbstractBeanDefinition,BeanDefinitionRegistry,Object)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerWithSourceAndGeneratedBeanName(org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource)
  name: RepositoryConfigurationExtensionSupport.postProcess(BeanDefinitionBuilder,AnnotationRepositoryConfigurationSource)
  nameWithType: RepositoryConfigurationExtensionSupport.postProcess(BeanDefinitionBuilder,AnnotationRepositoryConfigurationSource)
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource)
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: '? extends java.lang.annotation.Annotation'
  name: '? extends Annotation'
  nameWithType: '? extends Annotation'
  fullName: '? extends java.lang.annotation.Annotation'
- uid: org.springframework.beans.factory.support.AbstractBeanDefinition>,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.Object)
  name: AbstractBeanDefinition>,BeanDefinitionRegistry,String,Object)
  nameWithType: AbstractBeanDefinition>,BeanDefinitionRegistry,String,Object)
  fullName: org.springframework.beans.factory.support.AbstractBeanDefinition>,org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String,java.lang.Object)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerIfNotAlreadyRegistered(java.util.function.Supplier
  name: RepositoryConfigurationExtensionSupport.registerIfNotAlreadyRegistered(Supplier
  nameWithType: RepositoryConfigurationExtensionSupport.registerIfNotAlreadyRegistered(Supplier
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerIfNotAlreadyRegistered(java.util.function.Supplier
- uid: T>getRepositoryConfiguration(org.springframework.beans.factory.config.BeanDefinition,T)
  name: T>getRepositoryConfiguration(BeanDefinition,T)
  nameWithType: T>getRepositoryConfiguration(BeanDefinition,T)
  fullName: T>getRepositoryConfiguration(org.springframework.beans.factory.config.BeanDefinition,T)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.
  name: RepositoryConfigurationExtensionSupport.
  nameWithType: RepositoryConfigurationExtensionSupport.
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.
- uid: ?>,org.springframework.beans.factory.support.BeanDefinitionRegistry)
  name: ?>,BeanDefinitionRegistry)
  nameWithType: ?>,BeanDefinitionRegistry)
  fullName: ?>,org.springframework.beans.factory.support.BeanDefinitionRegistry)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.hasBean(java.lang.Class
  name: RepositoryConfigurationExtensionSupport.hasBean(Class
  nameWithType: RepositoryConfigurationExtensionSupport.hasBean(Class
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.hasBean(java.lang.Class
- uid: T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader)
  name: T>getRepositoryConfigurations(T,ResourceLoader)
  nameWithType: T>getRepositoryConfigurations(T,ResourceLoader)
  fullName: T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader)
- uid: T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader,boolean)
  name: T>getRepositoryConfigurations(T,ResourceLoader,boolean)
  nameWithType: T>getRepositoryConfigurations(T,ResourceLoader,boolean)
  fullName: T>getRepositoryConfigurations(T,org.springframework.core.io.ResourceLoader,boolean)
- uid: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerLazyIfNotAlreadyRegistered(java.util.function.Supplier
  name: RepositoryConfigurationExtensionSupport.registerLazyIfNotAlreadyRegistered(Supplier
  nameWithType: RepositoryConfigurationExtensionSupport.registerLazyIfNotAlreadyRegistered(Supplier
  fullName: org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.registerLazyIfNotAlreadyRegistered(java.util.function.Supplier
