### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.base.Predicates.containsPattern*"
fullName: "com.azure.cosmos.implementation.guava25.base.Predicates.containsPattern"
name: "containsPattern"
nameWithType: "Predicates.containsPattern"
members:
- uid: "com.azure.cosmos.implementation.guava25.base.Predicates.containsPattern(java.lang.String)"
  fullName: "com.azure.cosmos.implementation.guava25.base.Predicates.containsPattern(String pattern)"
  name: "containsPattern(String pattern)"
  nameWithType: "Predicates.containsPattern(String pattern)"
  summary: "Returns a predicate that evaluates to `true` if the `CharSequence` being tested contains any match for the given regular expression pattern. The test used is equivalent to `Pattern.compile(pattern).matcher(arg).find()`"
  parameters:
  - name: "pattern"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Predicate<CharSequence> containsPattern(String pattern)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.base.Predicate?alt=com.azure.cosmos.implementation.guava25.base.Predicate&text=Predicate\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.CharSequence?alt=java.lang.CharSequence&text=CharSequence\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.base"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
