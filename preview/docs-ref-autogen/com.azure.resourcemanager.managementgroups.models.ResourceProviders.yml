### YamlMime:JavaType
uid: "com.azure.resourcemanager.managementgroups.models.ResourceProviders"
fullName: "com.azure.resourcemanager.managementgroups.models.ResourceProviders"
name: "ResourceProviders"
nameWithType: "ResourceProviders"
summary: "Resource collection API of Resource<wbr>Providers."
syntax: "public interface **ResourceProviders**"
methods:
- uid: "com.azure.resourcemanager.managementgroups.models.ResourceProviders.checkNameAvailability(com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityRequest)"
  fullName: "com.azure.resourcemanager.managementgroups.models.ResourceProviders.checkNameAvailability(CheckNameAvailabilityRequest checkNameAvailabilityRequest)"
  name: "checkNameAvailability(CheckNameAvailabilityRequest checkNameAvailabilityRequest)"
  nameWithType: "ResourceProviders.checkNameAvailability(CheckNameAvailabilityRequest checkNameAvailabilityRequest)"
  summary: "Checks if the specified management group name is valid and unique."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group name availability check parameters."
    name: "checkNameAvailabilityRequest"
    type: "<xref href=\"com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityRequest?alt=com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityRequest&text=CheckNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityResult checkNameAvailability(CheckNameAvailabilityRequest checkNameAvailabilityRequest)"
  desc: "Checks if the specified management group name is valid and unique."
  returns:
    description: "describes the result of the request to check management group name availability."
    type: "<xref href=\"com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityResult?alt=com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managementgroups.models.ResourceProviders.checkNameAvailabilityWithResponse(com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.managementgroups.models.ResourceProviders.checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest checkNameAvailabilityRequest, Context context)"
  name: "checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest checkNameAvailabilityRequest, Context context)"
  nameWithType: "ResourceProviders.checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest checkNameAvailabilityRequest, Context context)"
  summary: "Checks if the specified management group name is valid and unique."
  modifiers:
  - "abstract"
  parameters:
  - description: "Management group name availability check parameters."
    name: "checkNameAvailabilityRequest"
    type: "<xref href=\"com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityRequest?alt=com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityRequest&text=CheckNameAvailabilityRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CheckNameAvailabilityResult> checkNameAvailabilityWithResponse(CheckNameAvailabilityRequest checkNameAvailabilityRequest, Context context)"
  desc: "Checks if the specified management group name is valid and unique."
  returns:
    description: "describes the result of the request to check management group name availability along with\n <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityResult?alt=com.azure.resourcemanager.managementgroups.models.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.managementgroups.models.ResourceProviders.startTenantBackfill()"
  fullName: "com.azure.resourcemanager.managementgroups.models.ResourceProviders.startTenantBackfill()"
  name: "startTenantBackfill()"
  nameWithType: "ResourceProviders.startTenantBackfill()"
  summary: "Starts backfilling subscriptions for the Tenant."
  modifiers:
  - "abstract"
  syntax: "public abstract TenantBackfillStatusResult startTenantBackfill()"
  desc: "Starts backfilling subscriptions for the Tenant."
  returns:
    description: "the tenant backfill status."
    type: "<xref href=\"com.azure.resourcemanager.managementgroups.models.TenantBackfillStatusResult?alt=com.azure.resourcemanager.managementgroups.models.TenantBackfillStatusResult&text=TenantBackfillStatusResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managementgroups.models.ResourceProviders.startTenantBackfillWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.managementgroups.models.ResourceProviders.startTenantBackfillWithResponse(Context context)"
  name: "startTenantBackfillWithResponse(Context context)"
  nameWithType: "ResourceProviders.startTenantBackfillWithResponse(Context context)"
  summary: "Starts backfilling subscriptions for the Tenant."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<TenantBackfillStatusResult> startTenantBackfillWithResponse(Context context)"
  desc: "Starts backfilling subscriptions for the Tenant."
  returns:
    description: "the tenant backfill status along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.managementgroups.models.TenantBackfillStatusResult?alt=com.azure.resourcemanager.managementgroups.models.TenantBackfillStatusResult&text=TenantBackfillStatusResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.managementgroups.models.ResourceProviders.tenantBackfillStatus()"
  fullName: "com.azure.resourcemanager.managementgroups.models.ResourceProviders.tenantBackfillStatus()"
  name: "tenantBackfillStatus()"
  nameWithType: "ResourceProviders.tenantBackfillStatus()"
  summary: "Gets tenant backfill status."
  modifiers:
  - "abstract"
  syntax: "public abstract TenantBackfillStatusResult tenantBackfillStatus()"
  desc: "Gets tenant backfill status."
  returns:
    description: "tenant backfill status."
    type: "<xref href=\"com.azure.resourcemanager.managementgroups.models.TenantBackfillStatusResult?alt=com.azure.resourcemanager.managementgroups.models.TenantBackfillStatusResult&text=TenantBackfillStatusResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.managementgroups.models.ResourceProviders.tenantBackfillStatusWithResponse(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.managementgroups.models.ResourceProviders.tenantBackfillStatusWithResponse(Context context)"
  name: "tenantBackfillStatusWithResponse(Context context)"
  nameWithType: "ResourceProviders.tenantBackfillStatusWithResponse(Context context)"
  summary: "Gets tenant backfill status."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<TenantBackfillStatusResult> tenantBackfillStatusWithResponse(Context context)"
  desc: "Gets tenant backfill status."
  returns:
    description: "tenant backfill status along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.managementgroups.models.TenantBackfillStatusResult?alt=com.azure.resourcemanager.managementgroups.models.TenantBackfillStatusResult&text=TenantBackfillStatusResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of ResourceProviders."
metadata: {}
package: "com.azure.resourcemanager.managementgroups.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-managementgroups:1.0.0-beta.2
