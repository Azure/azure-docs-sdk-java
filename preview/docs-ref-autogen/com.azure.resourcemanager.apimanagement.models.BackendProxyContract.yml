### YamlMime:JavaType
uid: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract"
fullName: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract"
name: "BackendProxyContract"
nameWithType: "BackendProxyContract"
summary: "Details of the Backend Web<wbr>Proxy Server to use in the Request to Backend."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class BackendProxyContract"
constructors:
- uid: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.BackendProxyContract()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.BackendProxyContract()"
  name: "BackendProxyContract()"
  nameWithType: "BackendProxyContract.BackendProxyContract()"
  syntax: "public BackendProxyContract()"
methods:
- uid: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.password()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.password()"
  name: "password()"
  nameWithType: "BackendProxyContract.password()"
  summary: "Get the password property: Password to connect to the Web<wbr>Proxy Server."
  syntax: "public String password()"
  desc: "Get the password property: Password to connect to the WebProxy Server."
  returns:
    description: "the password value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.url()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.url()"
  name: "url()"
  nameWithType: "BackendProxyContract.url()"
  summary: "Get the url property: Web<wbr>Proxy Server Absolute<wbr>Uri property which includes the entire URI stored in the Uri instance, including all fragments and query strings."
  syntax: "public String url()"
  desc: "Get the url property: WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings."
  returns:
    description: "the url value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.username()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.username()"
  name: "username()"
  nameWithType: "BackendProxyContract.username()"
  summary: "Get the username property: Username to connect to the Web<wbr>Proxy server."
  syntax: "public String username()"
  desc: "Get the username property: Username to connect to the WebProxy server."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.validate()"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.validate()"
  name: "validate()"
  nameWithType: "BackendProxyContract.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.withPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.withPassword(String password)"
  name: "withPassword(String password)"
  nameWithType: "BackendProxyContract.withPassword(String password)"
  summary: "Set the password property: Password to connect to the Web<wbr>Proxy Server."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BackendProxyContract withPassword(String password)"
  desc: "Set the password property: Password to connect to the WebProxy Server."
  returns:
    description: "the BackendProxyContract object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendProxyContract?alt=com.azure.resourcemanager.apimanagement.models.BackendProxyContract&text=BackendProxyContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.withUrl(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.withUrl(String url)"
  name: "withUrl(String url)"
  nameWithType: "BackendProxyContract.withUrl(String url)"
  summary: "Set the url property: Web<wbr>Proxy Server Absolute<wbr>Uri property which includes the entire URI stored in the Uri instance, including all fragments and query strings."
  parameters:
  - description: "the url value to set."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BackendProxyContract withUrl(String url)"
  desc: "Set the url property: WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings."
  returns:
    description: "the BackendProxyContract object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendProxyContract?alt=com.azure.resourcemanager.apimanagement.models.BackendProxyContract&text=BackendProxyContract\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.withUsername(java.lang.String)"
  fullName: "com.azure.resourcemanager.apimanagement.models.BackendProxyContract.withUsername(String username)"
  name: "withUsername(String username)"
  nameWithType: "BackendProxyContract.withUsername(String username)"
  summary: "Set the username property: Username to connect to the Web<wbr>Proxy server."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BackendProxyContract withUsername(String username)"
  desc: "Set the username property: Username to connect to the WebProxy server."
  returns:
    description: "the BackendProxyContract object itself."
    type: "<xref href=\"com.azure.resourcemanager.apimanagement.models.BackendProxyContract?alt=com.azure.resourcemanager.apimanagement.models.BackendProxyContract&text=BackendProxyContract\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Details of the Backend WebProxy Server to use in the Request to Backend."
metadata: {}
package: "com.azure.resourcemanager.apimanagement.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-apimanagement:1.0.0-beta.3
