### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap
  id: MutableClassToInstanceMap
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect
  children:
  - com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.<B>create()
  - com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.<B>create(java.util.Map<java.lang.Class<? extends B>,B>)
  - com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.<T>getInstance(java.lang.Class<T>)
  - com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.<T>putInstance(java.lang.Class<T>,T)
  - com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.delegate()
  - com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.entrySet()
  - com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.put(java.lang.Class<? extends B>,B)
  - com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.putAll(java.util.Map<? extends java.lang.Class<? extends B>,? extends B>)
  langs:
  - java
  name: MutableClassToInstanceMap<B>
  nameWithType: MutableClassToInstanceMap<B>
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>
  type: Class
  package: com.azure.cosmos.implementation.guava25.collect
  summary: >-
    A mutable class-to-instance map backed by an arbitrary user-provided map. See also <xref uid="com.azure.cosmos.implementation.guava25.collect.ImmutableClassToInstanceMap" data-throw-if-not-resolved="false">ImmutableClassToInstanceMap</xref>.


    See the Guava User Guide article on [ `ClassToInstanceMap`][_ClassToInstanceMap].



    [_ClassToInstanceMap]: https://github.com/google/guava/wiki/NewCollectionTypesExplained#classtoinstancemap
  syntax:
    content: public final class MutableClassToInstanceMap<B> extends ForwardingMap<Class<? extends B>,B> implements ClassToInstanceMap<B>, Serializable
    typeParameters:
    - id: B
  inheritance:
  - java.lang.Object
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  implements:
  - com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap<B>
  - java.io.Serializable
  inheritedMembers:
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.delegate()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.keySet()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put(K,V)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingMap.values()
  - com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  - java.lang.Object.clone()
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.<B>create()
  id: <B>create()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap
  langs:
  - java
  name: <B>create()
  nameWithType: MutableClassToInstanceMap<B>.<B>create()
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.<B>create()
  overload: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new `MutableClassToInstanceMap` instance backed by a <xref uid="java.util.HashMap" data-throw-if-not-resolved="false">HashMap</xref> using the default initial capacity and load factor.
  syntax:
    content: public static MutableClassToInstanceMap<B> <B>create()
    return:
      type: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.<B>create(java.util.Map<java.lang.Class<? extends B>,B>)
  id: <B>create(java.util.Map<java.lang.Class<? extends B>,B>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap
  langs:
  - java
  name: <B>create(Map<Class<? extends B>,B> backingMap)
  nameWithType: MutableClassToInstanceMap<B>.<B>create(Map<Class<? extends B>,B> backingMap)
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.<B>create(Map<Class<? extends B>,B> backingMap)
  overload: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.create*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns a new `MutableClassToInstanceMap` instance backed by a given empty `backingMap`. The caller surrenders control of the backing map, and thus should not allow any direct references to it to remain accessible.
  syntax:
    content: public static MutableClassToInstanceMap<B> <B>create(Map<Class<? extends B>,B> backingMap)
    parameters:
    - id: backingMap
      type: java.util.Map<java.lang.Class<? extends B>,B>
    return:
      type: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.<T>getInstance(java.lang.Class<T>)
  id: <T>getInstance(java.lang.Class<T>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap
  langs:
  - java
  name: <T>getInstance(Class<T> type)
  nameWithType: MutableClassToInstanceMap<B>.<T>getInstance(Class<T> type)
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.<T>getInstance(Class<T> type)
  overload: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.getInstance*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the value the specified class is mapped to, or `null` if no entry for this class is present. This will only return a value that was bound to this specific class, not a value that may have been bound to a subtype.
  syntax:
    content: public T <T>getInstance(Class<T> type)
    parameters:
    - id: type
      type: java.lang.Class<T>
    return:
      type: T
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.<T>putInstance(java.lang.Class<T>,T)
  id: <T>putInstance(java.lang.Class<T>,T)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap
  langs:
  - java
  name: <T>putInstance(Class<T> type, T value)
  nameWithType: MutableClassToInstanceMap<B>.<T>putInstance(Class<T> type, T value)
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.<T>putInstance(Class<T> type, T value)
  overload: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.putInstance*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Maps the specified class to the specified value. Does *not* associate this value with any of the class's supertypes.
  syntax:
    content: public T <T>putInstance(Class<T> type, T value)
    parameters:
    - id: type
      type: java.lang.Class<T>
    - id: value
      type: T
    return:
      type: T
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.MutableClassToInstanceMap(java.util.Map<java.lang.Class<? extends B>,B>)
  id: MutableClassToInstanceMap(java.util.Map<java.lang.Class<? extends B>,B>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap
  langs:
  - java
  name: MutableClassToInstanceMap(Map<Class<? extends B>,B> delegate)
  nameWithType: MutableClassToInstanceMap<B>.MutableClassToInstanceMap(Map<Class<? extends B>,B> delegate)
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.MutableClassToInstanceMap(Map<Class<? extends B>,B> delegate)
  overload: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.MutableClassToInstanceMap*
  type: Constructor
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: private MutableClassToInstanceMap(Map<Class<? extends B>,B> delegate)
    parameters:
    - id: delegate
      type: java.util.Map<java.lang.Class<? extends B>,B>
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.delegate()
  id: delegate()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap
  langs:
  - java
  name: delegate()
  nameWithType: MutableClassToInstanceMap<B>.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.delegate()
  overload: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.delegate*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  summary: Returns the backing delegate instance that methods are forwarded to. Abstract subclasses generally override this method with an abstract method that has a more specific return type, such as <xref uid="com.azure.cosmos.implementation.guava25.collect.ForwardingSet.delegate" data-throw-if-not-resolved="false">ForwardingSet#delegate</xref>. Concrete subclasses override this method to supply the instance being decorated.
  syntax:
    content: protected Map<Class<? extends B>,B> delegate()
    return:
      type: java.util.Map<java.lang.Class<? extends B>,B>
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.entrySet()
  id: entrySet()
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap
  langs:
  - java
  name: entrySet()
  nameWithType: MutableClassToInstanceMap<B>.entrySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.entrySet()
  overload: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.entrySet*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public Set<Map.Entry<Class<? extends B>,B>> entrySet()
    return:
      type: java.util.Set<java.util.Map.Entry<java.lang.Class<? extends B>,B>>
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.put(java.lang.Class<? extends B>,B)
  id: put(java.lang.Class<? extends B>,B)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap
  langs:
  - java
  name: put(Class<? extends B> key, B value)
  nameWithType: MutableClassToInstanceMap<B>.put(Class<? extends B> key, B value)
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.put(Class<? extends B> key, B value)
  overload: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.put*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public B put(Class<? extends B> key, B value)
    parameters:
    - id: key
      type: java.lang.Class<? extends B>
    - id: value
      type: B
    return:
      type: B
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.putAll(java.util.Map<? extends java.lang.Class<? extends B>,? extends B>)
  id: putAll(java.util.Map<? extends java.lang.Class<? extends B>,? extends B>)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap
  langs:
  - java
  name: putAll(Map<? extends Class<? extends B>,? extends B> map)
  nameWithType: MutableClassToInstanceMap<B>.putAll(Map<? extends Class<? extends B>,? extends B> map)
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.putAll(Map<? extends Class<? extends B>,? extends B> map)
  overload: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.putAll*
  type: Method
  package: com.azure.cosmos.implementation.guava25.collect
  syntax:
    content: public void putAll(Map<? extends Class<? extends B>,? extends B> map)
    parameters:
    - id: map
      type: java.util.Map<? extends java.lang.Class<? extends B>,? extends B>
references:
- uid: java.util.Map<java.lang.Class<? extends B>,B>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends B'
    name: '? extends B'
    fullName: '? extends B'
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: B
    name: B
    fullName: B
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.MutableClassToInstanceMap*
  name: MutableClassToInstanceMap
  nameWithType: MutableClassToInstanceMap<B>.MutableClassToInstanceMap
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.MutableClassToInstanceMap
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>
  spec.java:
  - uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap
    name: MutableClassToInstanceMap
    fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap
  - name: <
    fullName: <
  - uid: B
    name: B
    fullName: B
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.create*
  name: <B>create
  nameWithType: MutableClassToInstanceMap<B>.<B>create
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.<B>create
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.delegate*
  name: delegate
  nameWithType: MutableClassToInstanceMap<B>.delegate
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.delegate
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Set<java.util.Map.Entry<java.lang.Class<? extends B>,B>>
  spec.java:
  - uid: java.util.Set
    name: Set
    fullName: java.util.Set
  - name: <
    fullName: <
  - uid: java.util.Map.Entry
    name: Entry
    fullName: java.util.Map.Entry
  - name: <
    fullName: <
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends B'
    name: '? extends B'
    fullName: '? extends B'
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: B
    name: B
    fullName: B
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.entrySet*
  name: entrySet
  nameWithType: MutableClassToInstanceMap<B>.entrySet
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.entrySet
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Class<? extends B>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: '? extends B'
    name: '? extends B'
    fullName: '? extends B'
  - name: '>'
    fullName: '>'
- uid: B
  spec.java:
  - uid: B
    name: B
    fullName: B
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.put*
  name: put
  nameWithType: MutableClassToInstanceMap<B>.put
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.put
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.util.Map<? extends java.lang.Class<? extends B>,? extends B>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: '? extends java.lang.Class'
    name: Class
    fullName: '? extends java.lang.Class'
  - name: <
    fullName: <
  - uid: '? extends B'
    name: '? extends B'
    fullName: '? extends B'
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: '? extends B'
    name: '? extends B'
    fullName: '? extends B'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.putAll*
  name: putAll
  nameWithType: MutableClassToInstanceMap<B>.putAll
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.putAll
  package: com.azure.cosmos.implementation.guava25.collect
- uid: java.lang.Class<T>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: T
  spec.java:
  - uid: T
    name: T
    fullName: T
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.putInstance*
  name: <T>putInstance
  nameWithType: MutableClassToInstanceMap<B>.<T>putInstance
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.<T>putInstance
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap.getInstance*
  name: <T>getInstance
  nameWithType: MutableClassToInstanceMap<B>.<T>getInstance
  fullName: com.azure.cosmos.implementation.guava25.collect.MutableClassToInstanceMap<B>.<T>getInstance
  package: com.azure.cosmos.implementation.guava25.collect
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<java.lang.Class<? extends B>,B>
  name: ForwardingMap<Class<? extends B>,B>
  nameWithType: ForwardingMap<Class<? extends B>,B>
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap<java.lang.Class<? extends B>,B>
- uid: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap<B>
  name: ClassToInstanceMap<B>
  nameWithType: ClassToInstanceMap<B>
  fullName: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap<B>
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
  name: ForwardingMap.equals(Object)
  nameWithType: ForwardingMap.equals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.equals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.keySet()
  name: ForwardingMap.keySet()
  nameWithType: ForwardingMap.keySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.keySet()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet()
  name: ForwardingMap.entrySet()
  nameWithType: ForwardingMap.entrySet()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.entrySet()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
  name: ForwardingMap.standardHashCode()
  nameWithType: ForwardingMap.standardHashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardHashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
  name: ForwardingMap.standardContainsValue(Object)
  nameWithType: ForwardingMap.standardContainsValue(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsValue(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue(java.lang.Object)
  name: ForwardingMap.containsValue(Object)
  nameWithType: ForwardingMap.containsValue(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsValue(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove(java.lang.Object)
  name: ForwardingMap.remove(Object)
  nameWithType: ForwardingMap.remove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.remove(java.lang.Object)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear()
  name: ForwardingMap.clear()
  nameWithType: ForwardingMap.clear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.clear()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
  name: ForwardingMap.standardClear()
  nameWithType: ForwardingMap.standardClear()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardClear()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
  name: ForwardingMap.size()
  nameWithType: ForwardingMap.size()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.size()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
  name: ForwardingMap.hashCode()
  nameWithType: ForwardingMap.hashCode()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.hashCode()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
  name: ForwardingMap.standardContainsKey(Object)
  nameWithType: ForwardingMap.standardContainsKey(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardContainsKey(java.lang.Object)
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
  name: ForwardingMap.standardToString()
  nameWithType: ForwardingMap.standardToString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardToString()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
  name: ForwardingMap.standardPutAll(Map<? extends K,? extends V>)
  nameWithType: ForwardingMap.standardPutAll(Map<? extends K,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map<? extends K,? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map<? extends K,? extends V>)
  name: ForwardingMap.putAll(Map<? extends K,? extends V>)
  nameWithType: ForwardingMap.putAll(Map<? extends K,? extends V>)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map<? extends K,? extends V>)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.values()
  name: ForwardingMap.values()
  nameWithType: ForwardingMap.values()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.values()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
  name: ForwardingMap.get(Object)
  nameWithType: ForwardingMap.get(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.get(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put(K,V)
  name: ForwardingMap.put(K,V)
  nameWithType: ForwardingMap.put(K,V)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.put(K,V)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
  name: ForwardingMap.standardRemove(Object)
  nameWithType: ForwardingMap.standardRemove(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardRemove(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
  name: ForwardingMap.standardIsEmpty()
  nameWithType: ForwardingMap.standardIsEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardIsEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.delegate()
  name: ForwardingMap.delegate()
  nameWithType: ForwardingMap.delegate()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.delegate()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
  name: ForwardingObject.toString()
  nameWithType: ForwardingObject.toString()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingObject.toString()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
  name: ForwardingMap.isEmpty()
  nameWithType: ForwardingMap.isEmpty()
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.isEmpty()
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
  name: ForwardingMap.standardEquals(Object)
  nameWithType: ForwardingMap.standardEquals(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardEquals(java.lang.Object)
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
  name: ForwardingMap.containsKey(Object)
  nameWithType: ForwardingMap.containsKey(Object)
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.containsKey(java.lang.Object)
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
- uid: '? extends B>,B'
  name: '? extends B>,B'
  nameWithType: '? extends B>,B'
  fullName: '? extends B>,B'
- uid: java.util.Map.Entry
  name: Map.Entry
  nameWithType: Map.Entry
  fullName: java.util.Map.Entry
- uid: java.util.Set
  name: Set
  nameWithType: Set
  fullName: java.util.Set
- uid: '? extends B'
  name: '? extends B'
  nameWithType: '? extends B'
  fullName: '? extends B'
- uid: '? extends java.lang.Class'
  name: '? extends Class'
  nameWithType: '? extends Class'
  fullName: '? extends java.lang.Class'
- uid: '? extends B>,? extends B'
  name: '? extends B>,? extends B'
  nameWithType: '? extends B>,? extends B'
  fullName: '? extends B>,? extends B'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
  name: ForwardingMap
  nameWithType: ForwardingMap
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap
- uid: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap
  name: ClassToInstanceMap
  nameWithType: ClassToInstanceMap
  fullName: com.azure.cosmos.implementation.guava25.collect.ClassToInstanceMap
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map
  name: ForwardingMap.standardPutAll(Map
  nameWithType: ForwardingMap.standardPutAll(Map
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.standardPutAll(java.util.Map
- uid: '? extends K,? extends V>)'
  name: '? extends K,? extends V>)'
  nameWithType: '? extends K,? extends V>)'
  fullName: '? extends K,? extends V>)'
- uid: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map
  name: ForwardingMap.putAll(Map
  nameWithType: ForwardingMap.putAll(Map
  fullName: com.azure.cosmos.implementation.guava25.collect.ForwardingMap.putAll(java.util.Map
