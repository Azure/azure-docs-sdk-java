### YamlMime:JavaMember
uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.updateIssuer*"
fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.updateIssuer"
name: "updateIssuer"
nameWithType: "CertificateAsyncClient.updateIssuer"
members:
- uid: "com.azure.security.keyvault.certificates.CertificateAsyncClient.updateIssuer(com.azure.security.keyvault.certificates.models.CertificateIssuer)"
  fullName: "com.azure.security.keyvault.certificates.CertificateAsyncClient.updateIssuer(CertificateIssuer issuer)"
  name: "updateIssuer(CertificateIssuer issuer)"
  nameWithType: "CertificateAsyncClient.updateIssuer(CertificateIssuer issuer)"
  summary: "Updates the specified certificate issuer. The UpdateCertificateIssuer operation updates the specified attributes of the certificate issuer entity. This operation requires the certificates/setissuers permission.\n\n**Code Samples**\n\nGets the certificate issuer, changes its attributes/properties then updates it in the Azure Key Vault. Prints out the returned certificate issuer details when a response has been received.\n\n```java\ncertificateAsyncClient.getIssuer(\"issuerName\")\n     .subscriberContext(Context.of(key1, value1, key2, value2))\n     .subscribe(issuerResponseValue -> {\n         CertificateIssuer issuer = issuerResponseValue;\n         //Update the enabled status of the issuer.\n         issuer.setEnabled(false);\n         certificateAsyncClient.updateIssuer(issuer)\n             .subscribe(issuerResponse ->\n                 System.out.printf(\"Issuer's enabled status %s %n\",\n                     issuerResponse.isEnabled().toString()));\n     });\n```"
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateIssuer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"issuer\"></xref> with updated properties. Use\n <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateIssuer.CertificateIssuer(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CertificateIssuer#CertificateIssuer(String)\"></xref> to initialize the issuer object"
    name: "issuer"
    type: "<xref href=\"com.azure.security.keyvault.certificates.models.CertificateIssuer?alt=com.azure.security.keyvault.certificates.models.CertificateIssuer&text=CertificateIssuer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CertificateIssuer> updateIssuer(CertificateIssuer issuer)"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the <xref uid=\"com.azure.security.keyvault.certificates.models.CertificateIssuer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"updated issuer\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.certificates.models.CertificateIssuer?alt=com.azure.security.keyvault.certificates.models.CertificateIssuer&text=CertificateIssuer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.certificates"
artifact: com.azure:azure-security-keyvault-certificates:4.2.0-beta.2
