### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.Base64Variant
  id: Base64Variant
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core
  children:
  - com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_INVALID
  - com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_PADDING
  - com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,int)
  - com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant,java.lang.String,int)
  - com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String,java.lang.String,boolean,char,int)
  - com.fasterxml.jackson.core.Base64Variant._reportBase64EOF()
  - com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char,int,java.lang.String)
  - com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String)
  - com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder)
  - com.fasterxml.jackson.core.Base64Variant.decodeBase64Byte(byte)
  - com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(char)
  - com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(int)
  - com.fasterxml.jackson.core.Base64Variant.encode(byte[])
  - com.fasterxml.jackson.core.Base64Variant.encode(byte[],boolean)
  - com.fasterxml.jackson.core.Base64Variant.encode(byte[],boolean,java.lang.String)
  - com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsByte(int)
  - com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsChar(int)
  - com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int,byte[],int)
  - com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int,char[],int)
  - com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(java.lang.StringBuilder,int)
  - com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int,int,byte[],int)
  - com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int,int,char[],int)
  - com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(java.lang.StringBuilder,int,int)
  - com.fasterxml.jackson.core.Base64Variant.equals(java.lang.Object)
  - com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()
  - com.fasterxml.jackson.core.Base64Variant.getName()
  - com.fasterxml.jackson.core.Base64Variant.getPaddingByte()
  - com.fasterxml.jackson.core.Base64Variant.getPaddingChar()
  - com.fasterxml.jackson.core.Base64Variant.hashCode()
  - com.fasterxml.jackson.core.Base64Variant.missingPaddingMessage()
  - com.fasterxml.jackson.core.Base64Variant.readResolve()
  - com.fasterxml.jackson.core.Base64Variant.toString()
  - com.fasterxml.jackson.core.Base64Variant.usesPadding()
  - com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(char)
  - com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(int)
  langs:
  - java
  name: Base64Variant
  nameWithType: Base64Variant
  fullName: com.fasterxml.jackson.core.Base64Variant
  type: Class
  package: com.fasterxml.jackson.core
  summary: >-
    Class used to define specific details of which variant of Base64 encoding/decoding is to be used. Although there is somewhat standard basic version (so-called "MIME Base64"), other variants exists, see [Base64 Wikipedia entry][] for details.



    [Base64 Wikipedia entry]: http://en.wikipedia.org/wiki/Base64
  syntax:
    content: public final class Base64Variant implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_INVALID
  id: BASE64_VALUE_INVALID
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: BASE64_VALUE_INVALID
  nameWithType: Base64Variant.BASE64_VALUE_INVALID
  fullName: com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_INVALID
  type: Field
  package: com.fasterxml.jackson.core
  summary: Marker used to denote ascii characters that do not correspond to a 6-bit value (in this variant), and is not used as a padding character.
  syntax:
    content: public static final int BASE64_VALUE_INVALID
    return:
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_PADDING
  id: BASE64_VALUE_PADDING
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: BASE64_VALUE_PADDING
  nameWithType: Base64Variant.BASE64_VALUE_PADDING
  fullName: com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_PADDING
  type: Field
  package: com.fasterxml.jackson.core
  summary: Marker used to denote ascii character (in decoding table) that is the padding character using this variant (if any).
  syntax:
    content: public static final int BASE64_VALUE_PADDING
    return:
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,int)
  id: Base64Variant(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: Base64Variant(Base64Variant base, String name, boolean usesPadding, char paddingChar, int maxLineLength)
  nameWithType: Base64Variant.Base64Variant(Base64Variant base, String name, boolean usesPadding, char paddingChar, int maxLineLength)
  fullName: com.fasterxml.jackson.core.Base64Variant.Base64Variant(Base64Variant base, String name, boolean usesPadding, char paddingChar, int maxLineLength)
  overload: com.fasterxml.jackson.core.Base64Variant.Base64Variant*
  type: Constructor
  package: com.fasterxml.jackson.core
  summary: "\"Copy constructor\" that can be used when the base alphabet is identical to one used by another variant, but other details (padding, maximum line length) differ"
  syntax:
    content: public Base64Variant(Base64Variant base, String name, boolean usesPadding, char paddingChar, int maxLineLength)
    parameters:
    - id: base
      type: com.fasterxml.jackson.core.Base64Variant
    - id: name
      type: java.lang.String
    - id: usesPadding
      type: boolean
    - id: paddingChar
      type: char
    - id: maxLineLength
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant,java.lang.String,int)
  id: Base64Variant(com.fasterxml.jackson.core.Base64Variant,java.lang.String,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: Base64Variant(Base64Variant base, String name, int maxLineLength)
  nameWithType: Base64Variant.Base64Variant(Base64Variant base, String name, int maxLineLength)
  fullName: com.fasterxml.jackson.core.Base64Variant.Base64Variant(Base64Variant base, String name, int maxLineLength)
  overload: com.fasterxml.jackson.core.Base64Variant.Base64Variant*
  type: Constructor
  package: com.fasterxml.jackson.core
  summary: "\"Copy constructor\" that can be used when the base alphabet is identical to one used by another variant except for the maximum line length (and obviously, name)."
  syntax:
    content: public Base64Variant(Base64Variant base, String name, int maxLineLength)
    parameters:
    - id: base
      type: com.fasterxml.jackson.core.Base64Variant
    - id: name
      type: java.lang.String
    - id: maxLineLength
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String,java.lang.String,boolean,char,int)
  id: Base64Variant(java.lang.String,java.lang.String,boolean,char,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: Base64Variant(String name, String base64Alphabet, boolean usesPadding, char paddingChar, int maxLineLength)
  nameWithType: Base64Variant.Base64Variant(String name, String base64Alphabet, boolean usesPadding, char paddingChar, int maxLineLength)
  fullName: com.fasterxml.jackson.core.Base64Variant.Base64Variant(String name, String base64Alphabet, boolean usesPadding, char paddingChar, int maxLineLength)
  overload: com.fasterxml.jackson.core.Base64Variant.Base64Variant*
  type: Constructor
  package: com.fasterxml.jackson.core
  syntax:
    content: public Base64Variant(String name, String base64Alphabet, boolean usesPadding, char paddingChar, int maxLineLength)
    parameters:
    - id: name
      type: java.lang.String
    - id: base64Alphabet
      type: java.lang.String
    - id: usesPadding
      type: boolean
    - id: paddingChar
      type: char
    - id: maxLineLength
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant._reportBase64EOF()
  id: _reportBase64EOF()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: _reportBase64EOF()
  nameWithType: Base64Variant._reportBase64EOF()
  fullName: com.fasterxml.jackson.core.Base64Variant._reportBase64EOF()
  overload: com.fasterxml.jackson.core.Base64Variant._reportBase64EOF*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: protected void _reportBase64EOF()
  exceptions:
  - type: java.lang.IllegalArgumentException
- uid: com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char,int,java.lang.String)
  id: _reportInvalidBase64(char,int,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: _reportInvalidBase64(char ch, int bindex, String msg)
  nameWithType: Base64Variant._reportInvalidBase64(char ch, int bindex, String msg)
  fullName: com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char ch, int bindex, String msg)
  overload: com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: protected void _reportInvalidBase64(char ch, int bindex, String msg)
    parameters:
    - id: ch
      type: char
    - id: bindex
      type: int
      description: >-
        Relative index within base64 character unit; between 0
           and 3 (as unit has exactly 4 characters)
    - id: msg
      type: java.lang.String
  exceptions:
  - type: java.lang.IllegalArgumentException
- uid: com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String)
  id: decode(java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: decode(String input)
  nameWithType: Base64Variant.decode(String input)
  fullName: com.fasterxml.jackson.core.Base64Variant.decode(String input)
  overload: com.fasterxml.jackson.core.Base64Variant.decode*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Convenience method for decoding contents of a Base64-encoded String, using this variant's settings.
  syntax:
    content: public byte[] decode(String input)
    parameters:
    - id: input
      type: java.lang.String
    return:
      type: byte[]
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: if input is not valid base64 encoded data
- uid: com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder)
  id: decode(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: decode(String str, ByteArrayBuilder builder)
  nameWithType: Base64Variant.decode(String str, ByteArrayBuilder builder)
  fullName: com.fasterxml.jackson.core.Base64Variant.decode(String str, ByteArrayBuilder builder)
  overload: com.fasterxml.jackson.core.Base64Variant.decode*
  type: Method
  package: com.fasterxml.jackson.core
  summary: >-
    Convenience method for decoding contents of a Base64-encoded String, using this variant's settings and appending decoded binary data using provided <xref uid="com.fasterxml.jackson.core.util.ByteArrayBuilder" data-throw-if-not-resolved="false">ByteArrayBuilder</xref>.


    NOTE: builder will NOT be reset before decoding (nor cleared afterwards); assumption is that caller will ensure it is given in proper state, and used as appropriate afterwards.
  syntax:
    content: public void decode(String str, ByteArrayBuilder builder)
    parameters:
    - id: str
      type: java.lang.String
    - id: builder
      type: com.fasterxml.jackson.core.util.ByteArrayBuilder
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: if input is not valid base64 encoded data
- uid: com.fasterxml.jackson.core.Base64Variant.decodeBase64Byte(byte)
  id: decodeBase64Byte(byte)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: decodeBase64Byte(byte b)
  nameWithType: Base64Variant.decodeBase64Byte(byte b)
  fullName: com.fasterxml.jackson.core.Base64Variant.decodeBase64Byte(byte b)
  overload: com.fasterxml.jackson.core.Base64Variant.decodeBase64Byte*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public int decodeBase64Byte(byte b)
    parameters:
    - id: b
      type: byte
    return:
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(char)
  id: decodeBase64Char(char)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: decodeBase64Char(char c)
  nameWithType: Base64Variant.decodeBase64Char(char c)
  fullName: com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(char c)
  overload: com.fasterxml.jackson.core.Base64Variant.decodeBase64Char*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public int decodeBase64Char(char c)
    parameters:
    - id: c
      type: char
    return:
      type: int
      description: 6-bit decoded value, if valid character;
- uid: com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(int)
  id: decodeBase64Char(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: decodeBase64Char(int ch)
  nameWithType: Base64Variant.decodeBase64Char(int ch)
  fullName: com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(int ch)
  overload: com.fasterxml.jackson.core.Base64Variant.decodeBase64Char*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public int decodeBase64Char(int ch)
    parameters:
    - id: ch
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.encode(byte[])
  id: encode(byte[])
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: encode(byte[] input)
  nameWithType: Base64Variant.encode(byte[] input)
  fullName: com.fasterxml.jackson.core.Base64Variant.encode(byte[] input)
  overload: com.fasterxml.jackson.core.Base64Variant.encode*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Convenience method for converting given byte array as base64 encoded String using this variant's settings. Resulting value is "raw", that is, not enclosed in double-quotes.
  syntax:
    content: public String encode(byte[] input)
    parameters:
    - id: input
      type: byte[]
      description: Byte array to encode
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.Base64Variant.encode(byte[],boolean)
  id: encode(byte[],boolean)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: encode(byte[] input, boolean addQuotes)
  nameWithType: Base64Variant.encode(byte[] input, boolean addQuotes)
  fullName: com.fasterxml.jackson.core.Base64Variant.encode(byte[] input, boolean addQuotes)
  overload: com.fasterxml.jackson.core.Base64Variant.encode*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Convenience method for converting given byte array as base64 encoded String using this variant's settings, optionally enclosed in double-quotes. Linefeeds added, if needed, are expressed as 2-character JSON (and Java source) escape sequence of backslash + \`n\`.
  syntax:
    content: public String encode(byte[] input, boolean addQuotes)
    parameters:
    - id: input
      type: byte[]
      description: Byte array to encode
    - id: addQuotes
      type: boolean
      description: Whether to surround resulting value in double quotes or not
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.Base64Variant.encode(byte[],boolean,java.lang.String)
  id: encode(byte[],boolean,java.lang.String)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: encode(byte[] input, boolean addQuotes, String linefeed)
  nameWithType: Base64Variant.encode(byte[] input, boolean addQuotes, String linefeed)
  fullName: com.fasterxml.jackson.core.Base64Variant.encode(byte[] input, boolean addQuotes, String linefeed)
  overload: com.fasterxml.jackson.core.Base64Variant.encode*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Convenience method for converting given byte array as base64 encoded String using this variant's settings, optionally enclosed in double-quotes. Linefeed character to use is passed explicitly.
  syntax:
    content: public String encode(byte[] input, boolean addQuotes, String linefeed)
    parameters:
    - id: input
      type: byte[]
      description: Byte array to encode
    - id: addQuotes
      type: boolean
      description: Whether to surround resulting value in double quotes or not
    - id: linefeed
      type: java.lang.String
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsByte(int)
  id: encodeBase64BitsAsByte(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: encodeBase64BitsAsByte(int value)
  nameWithType: Base64Variant.encodeBase64BitsAsByte(int value)
  fullName: com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsByte(int value)
  overload: com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsByte*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public byte encodeBase64BitsAsByte(int value)
    parameters:
    - id: value
      type: int
    return:
      type: byte
- uid: com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsChar(int)
  id: encodeBase64BitsAsChar(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: encodeBase64BitsAsChar(int value)
  nameWithType: Base64Variant.encodeBase64BitsAsChar(int value)
  fullName: com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsChar(int value)
  overload: com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsChar*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public char encodeBase64BitsAsChar(int value)
    parameters:
    - id: value
      type: int
    return:
      type: char
- uid: com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int,byte[],int)
  id: encodeBase64Chunk(int,byte[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: encodeBase64Chunk(int b24, byte[] buffer, int ptr)
  nameWithType: Base64Variant.encodeBase64Chunk(int b24, byte[] buffer, int ptr)
  fullName: com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int b24, byte[] buffer, int ptr)
  overload: com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that encodes given right-aligned (LSB) 24-bit value into 4 base64 bytes (ascii), stored in given result buffer.
  syntax:
    content: public int encodeBase64Chunk(int b24, byte[] buffer, int ptr)
    parameters:
    - id: b24
      type: int
    - id: buffer
      type: byte[]
    - id: ptr
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int,char[],int)
  id: encodeBase64Chunk(int,char[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: encodeBase64Chunk(int b24, char[] buffer, int ptr)
  nameWithType: Base64Variant.encodeBase64Chunk(int b24, char[] buffer, int ptr)
  fullName: com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int b24, char[] buffer, int ptr)
  overload: com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that encodes given right-aligned (LSB) 24-bit value into 4 base64 characters, stored in given result buffer.
  syntax:
    content: public int encodeBase64Chunk(int b24, char[] buffer, int ptr)
    parameters:
    - id: b24
      type: int
    - id: buffer
      type: char[]
    - id: ptr
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(java.lang.StringBuilder,int)
  id: encodeBase64Chunk(java.lang.StringBuilder,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: encodeBase64Chunk(StringBuilder sb, int b24)
  nameWithType: Base64Variant.encodeBase64Chunk(StringBuilder sb, int b24)
  fullName: com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(StringBuilder sb, int b24)
  overload: com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public void encodeBase64Chunk(StringBuilder sb, int b24)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
    - id: b24
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int,int,byte[],int)
  id: encodeBase64Partial(int,int,byte[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: encodeBase64Partial(int bits, int outputBytes, byte[] buffer, int outPtr)
  nameWithType: Base64Variant.encodeBase64Partial(int bits, int outputBytes, byte[] buffer, int outPtr)
  fullName: com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int bits, int outputBytes, byte[] buffer, int outPtr)
  overload: com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that outputs partial chunk (which only encodes one or two bytes of data). Data given is still aligned same as if it as full data; that is, missing data is at the "right end" (LSB) of int.
  syntax:
    content: public int encodeBase64Partial(int bits, int outputBytes, byte[] buffer, int outPtr)
    parameters:
    - id: bits
      type: int
    - id: outputBytes
      type: int
      description: Number of encoded bytes included (either 1 or 2)
    - id: buffer
      type: byte[]
    - id: outPtr
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int,int,char[],int)
  id: encodeBase64Partial(int,int,char[],int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: encodeBase64Partial(int bits, int outputBytes, char[] buffer, int outPtr)
  nameWithType: Base64Variant.encodeBase64Partial(int bits, int outputBytes, char[] buffer, int outPtr)
  fullName: com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int bits, int outputBytes, char[] buffer, int outPtr)
  overload: com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method that outputs partial chunk (which only encodes one or two bytes of data). Data given is still aligned same as if it as full data; that is, missing data is at the "right end" (LSB) of int.
  syntax:
    content: public int encodeBase64Partial(int bits, int outputBytes, char[] buffer, int outPtr)
    parameters:
    - id: bits
      type: int
    - id: outputBytes
      type: int
      description: Number of encoded bytes included (either 1 or 2)
    - id: buffer
      type: char[]
    - id: outPtr
      type: int
    return:
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(java.lang.StringBuilder,int,int)
  id: encodeBase64Partial(java.lang.StringBuilder,int,int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: encodeBase64Partial(StringBuilder sb, int bits, int outputBytes)
  nameWithType: Base64Variant.encodeBase64Partial(StringBuilder sb, int bits, int outputBytes)
  fullName: com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(StringBuilder sb, int bits, int outputBytes)
  overload: com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public void encodeBase64Partial(StringBuilder sb, int bits, int outputBytes)
    parameters:
    - id: sb
      type: java.lang.StringBuilder
    - id: bits
      type: int
    - id: outputBytes
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.equals(java.lang.Object)
  id: equals(java.lang.Object)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: equals(Object o)
  nameWithType: Base64Variant.equals(Object o)
  fullName: com.fasterxml.jackson.core.Base64Variant.equals(Object o)
  overload: com.fasterxml.jackson.core.Base64Variant.equals*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public boolean equals(Object o)
    parameters:
    - id: o
      type: java.lang.Object
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()
  id: getMaxLineLength()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: getMaxLineLength()
  nameWithType: Base64Variant.getMaxLineLength()
  fullName: com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()
  overload: com.fasterxml.jackson.core.Base64Variant.getMaxLineLength*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public int getMaxLineLength()
    return:
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.getName()
  id: getName()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: getName()
  nameWithType: Base64Variant.getName()
  fullName: com.fasterxml.jackson.core.Base64Variant.getName()
  overload: com.fasterxml.jackson.core.Base64Variant.getName*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public String getName()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.Base64Variant.getPaddingByte()
  id: getPaddingByte()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: getPaddingByte()
  nameWithType: Base64Variant.getPaddingByte()
  fullName: com.fasterxml.jackson.core.Base64Variant.getPaddingByte()
  overload: com.fasterxml.jackson.core.Base64Variant.getPaddingByte*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public byte getPaddingByte()
    return:
      type: byte
- uid: com.fasterxml.jackson.core.Base64Variant.getPaddingChar()
  id: getPaddingChar()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: getPaddingChar()
  nameWithType: Base64Variant.getPaddingChar()
  fullName: com.fasterxml.jackson.core.Base64Variant.getPaddingChar()
  overload: com.fasterxml.jackson.core.Base64Variant.getPaddingChar*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public char getPaddingChar()
    return:
      type: char
- uid: com.fasterxml.jackson.core.Base64Variant.hashCode()
  id: hashCode()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: hashCode()
  nameWithType: Base64Variant.hashCode()
  fullName: com.fasterxml.jackson.core.Base64Variant.hashCode()
  overload: com.fasterxml.jackson.core.Base64Variant.hashCode*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public int hashCode()
    return:
      type: int
- uid: com.fasterxml.jackson.core.Base64Variant.missingPaddingMessage()
  id: missingPaddingMessage()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: missingPaddingMessage()
  nameWithType: Base64Variant.missingPaddingMessage()
  fullName: com.fasterxml.jackson.core.Base64Variant.missingPaddingMessage()
  overload: com.fasterxml.jackson.core.Base64Variant.missingPaddingMessage*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Helper method that will construct a message to use in exceptions for cases where input ends prematurely in place where padding would be expected.
  syntax:
    content: public String missingPaddingMessage()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.Base64Variant.readResolve()
  id: readResolve()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: readResolve()
  nameWithType: Base64Variant.readResolve()
  fullName: com.fasterxml.jackson.core.Base64Variant.readResolve()
  overload: com.fasterxml.jackson.core.Base64Variant.readResolve*
  type: Method
  package: com.fasterxml.jackson.core
  summary: Method used to "demote" deserialized instances back to canonical ones
  syntax:
    content: protected Object readResolve()
    return:
      type: java.lang.Object
- uid: com.fasterxml.jackson.core.Base64Variant.toString()
  id: toString()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: toString()
  nameWithType: Base64Variant.toString()
  fullName: com.fasterxml.jackson.core.Base64Variant.toString()
  overload: com.fasterxml.jackson.core.Base64Variant.toString*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public String toString()
    return:
      type: java.lang.String
- uid: com.fasterxml.jackson.core.Base64Variant.usesPadding()
  id: usesPadding()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: usesPadding()
  nameWithType: Base64Variant.usesPadding()
  fullName: com.fasterxml.jackson.core.Base64Variant.usesPadding()
  overload: com.fasterxml.jackson.core.Base64Variant.usesPadding*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public boolean usesPadding()
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(char)
  id: usesPaddingChar(char)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: usesPaddingChar(char c)
  nameWithType: Base64Variant.usesPaddingChar(char c)
  fullName: com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(char c)
  overload: com.fasterxml.jackson.core.Base64Variant.usesPaddingChar*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public boolean usesPaddingChar(char c)
    parameters:
    - id: c
      type: char
    return:
      type: boolean
- uid: com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(int)
  id: usesPaddingChar(int)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.Base64Variant
  langs:
  - java
  name: usesPaddingChar(int ch)
  nameWithType: Base64Variant.usesPaddingChar(int ch)
  fullName: com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(int ch)
  overload: com.fasterxml.jackson.core.Base64Variant.usesPaddingChar*
  type: Method
  package: com.fasterxml.jackson.core
  syntax:
    content: public boolean usesPaddingChar(int ch)
    parameters:
    - id: ch
      type: int
    return:
      type: boolean
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: char
  spec.java:
  - uid: char
    name: char
    fullName: char
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.fasterxml.jackson.core.Base64Variant.Base64Variant*
  name: Base64Variant
  nameWithType: Base64Variant.Base64Variant
  fullName: com.fasterxml.jackson.core.Base64Variant.Base64Variant
  package: com.fasterxml.jackson.core
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.fasterxml.jackson.core.Base64Variant.readResolve*
  name: readResolve
  nameWithType: Base64Variant.readResolve
  fullName: com.fasterxml.jackson.core.Base64Variant.readResolve
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant.getName*
  name: getName
  nameWithType: Base64Variant.getName
  fullName: com.fasterxml.jackson.core.Base64Variant.getName
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant.usesPadding*
  name: usesPadding
  nameWithType: Base64Variant.usesPadding
  fullName: com.fasterxml.jackson.core.Base64Variant.usesPadding
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant.usesPaddingChar*
  name: usesPaddingChar
  nameWithType: Base64Variant.usesPaddingChar
  fullName: com.fasterxml.jackson.core.Base64Variant.usesPaddingChar
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant.getPaddingChar*
  name: getPaddingChar
  nameWithType: Base64Variant.getPaddingChar
  fullName: com.fasterxml.jackson.core.Base64Variant.getPaddingChar
  package: com.fasterxml.jackson.core
- uid: byte
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
- uid: com.fasterxml.jackson.core.Base64Variant.getPaddingByte*
  name: getPaddingByte
  nameWithType: Base64Variant.getPaddingByte
  fullName: com.fasterxml.jackson.core.Base64Variant.getPaddingByte
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant.getMaxLineLength*
  name: getMaxLineLength
  nameWithType: Base64Variant.getMaxLineLength
  fullName: com.fasterxml.jackson.core.Base64Variant.getMaxLineLength
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant.decodeBase64Char*
  name: decodeBase64Char
  nameWithType: Base64Variant.decodeBase64Char
  fullName: com.fasterxml.jackson.core.Base64Variant.decodeBase64Char
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant.decodeBase64Byte*
  name: decodeBase64Byte
  nameWithType: Base64Variant.decodeBase64Byte
  fullName: com.fasterxml.jackson.core.Base64Variant.decodeBase64Byte
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsChar*
  name: encodeBase64BitsAsChar
  nameWithType: Base64Variant.encodeBase64BitsAsChar
  fullName: com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsChar
  package: com.fasterxml.jackson.core
- uid: char[]
  spec.java:
  - uid: char
    name: char
    fullName: char
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk*
  name: encodeBase64Chunk
  nameWithType: Base64Variant.encodeBase64Chunk
  fullName: com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk
  package: com.fasterxml.jackson.core
- uid: java.lang.StringBuilder
  spec.java:
  - uid: java.lang.StringBuilder
    name: StringBuilder
    fullName: java.lang.StringBuilder
- uid: com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial*
  name: encodeBase64Partial
  nameWithType: Base64Variant.encodeBase64Partial
  fullName: com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsByte*
  name: encodeBase64BitsAsByte
  nameWithType: Base64Variant.encodeBase64BitsAsByte
  fullName: com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsByte
  package: com.fasterxml.jackson.core
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.fasterxml.jackson.core.Base64Variant.encode*
  name: encode
  nameWithType: Base64Variant.encode
  fullName: com.fasterxml.jackson.core.Base64Variant.encode
  package: com.fasterxml.jackson.core
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: com.fasterxml.jackson.core.Base64Variant.decode*
  name: decode
  nameWithType: Base64Variant.decode
  fullName: com.fasterxml.jackson.core.Base64Variant.decode
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.util.ByteArrayBuilder
  name: ByteArrayBuilder
  nameWithType: ByteArrayBuilder
  fullName: com.fasterxml.jackson.core.util.ByteArrayBuilder
- uid: com.fasterxml.jackson.core.Base64Variant.toString*
  name: toString
  nameWithType: Base64Variant.toString
  fullName: com.fasterxml.jackson.core.Base64Variant.toString
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant.equals*
  name: equals
  nameWithType: Base64Variant.equals
  fullName: com.fasterxml.jackson.core.Base64Variant.equals
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant.hashCode*
  name: hashCode
  nameWithType: Base64Variant.hashCode
  fullName: com.fasterxml.jackson.core.Base64Variant.hashCode
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64*
  name: _reportInvalidBase64
  nameWithType: Base64Variant._reportInvalidBase64
  fullName: com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant._reportBase64EOF*
  name: _reportBase64EOF
  nameWithType: Base64Variant._reportBase64EOF
  fullName: com.fasterxml.jackson.core.Base64Variant._reportBase64EOF
  package: com.fasterxml.jackson.core
- uid: com.fasterxml.jackson.core.Base64Variant.missingPaddingMessage*
  name: missingPaddingMessage
  nameWithType: Base64Variant.missingPaddingMessage
  fullName: com.fasterxml.jackson.core.Base64Variant.missingPaddingMessage
  package: com.fasterxml.jackson.core
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
