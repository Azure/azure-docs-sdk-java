### YamlMime:JavaType
uid: "com.fasterxml.jackson.core.Base64Variant"
fullName: "com.fasterxml.jackson.core.Base64Variant"
name: "Base64Variant"
nameWithType: "Base64Variant"
summary: "Class used to define specific details of which variant of Base64 encoding/decoding is to be used. Although there is somewhat standard basic version (so-called \"MIME Base64\"), other variants exists, see [Base64 Wikipedia entry][] for details.\n\n\n[Base64 Wikipedia entry]: http://en.wikipedia.org/wiki/Base64"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class Base64Variant implements Serializable"
constructors:
- "com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant,java.lang.String,boolean,char,int)"
- "com.fasterxml.jackson.core.Base64Variant.Base64Variant(com.fasterxml.jackson.core.Base64Variant,java.lang.String,int)"
- "com.fasterxml.jackson.core.Base64Variant.Base64Variant(java.lang.String,java.lang.String,boolean,char,int)"
fields:
- "com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_INVALID"
- "com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_PADDING"
methods:
- "com.fasterxml.jackson.core.Base64Variant._reportBase64EOF()"
- "com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char,int,java.lang.String)"
- "com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String)"
- "com.fasterxml.jackson.core.Base64Variant.decode(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder)"
- "com.fasterxml.jackson.core.Base64Variant.decodeBase64Byte(byte)"
- "com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(char)"
- "com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(int)"
- "com.fasterxml.jackson.core.Base64Variant.encode(byte[])"
- "com.fasterxml.jackson.core.Base64Variant.encode(byte[],boolean)"
- "com.fasterxml.jackson.core.Base64Variant.encode(byte[],boolean,java.lang.String)"
- "com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsByte(int)"
- "com.fasterxml.jackson.core.Base64Variant.encodeBase64BitsAsChar(int)"
- "com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int,byte[],int)"
- "com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(int,char[],int)"
- "com.fasterxml.jackson.core.Base64Variant.encodeBase64Chunk(java.lang.StringBuilder,int)"
- "com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int,int,byte[],int)"
- "com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int,int,char[],int)"
- "com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(java.lang.StringBuilder,int,int)"
- "com.fasterxml.jackson.core.Base64Variant.equals(java.lang.Object)"
- "com.fasterxml.jackson.core.Base64Variant.getMaxLineLength()"
- "com.fasterxml.jackson.core.Base64Variant.getName()"
- "com.fasterxml.jackson.core.Base64Variant.getPaddingByte()"
- "com.fasterxml.jackson.core.Base64Variant.getPaddingChar()"
- "com.fasterxml.jackson.core.Base64Variant.hashCode()"
- "com.fasterxml.jackson.core.Base64Variant.missingPaddingMessage()"
- "com.fasterxml.jackson.core.Base64Variant.readResolve()"
- "com.fasterxml.jackson.core.Base64Variant.toString()"
- "com.fasterxml.jackson.core.Base64Variant.usesPadding()"
- "com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(char)"
- "com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(int)"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
