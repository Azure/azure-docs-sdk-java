### YamlMime:ManagedReference
items:
- uid: com.azure.core.annotation.Host
  id: Host
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.annotation
  children:
  - com.azure.core.annotation.Host.value()
  langs:
  - java
  name: Host
  nameWithType: Host
  fullName: com.azure.core.annotation.Host
  type: Interface
  package: com.azure.core.annotation
  summary: >-
    Annotation for parameterized host name targeting a REST service.


    This is the 'host' field or 'x-ms-parameterized-host.hostTemplate' field in a Swagger document. parameters are enclosed in \{\}s, e.g. \{accountName\}. An HTTP client must accept the parameterized host as the base URL for the request, replacing the parameters during runtime with the actual values users provide.


    For parameterized hosts, parameters annotated with <xref uid="com.azure.core.annotation.HostParam" data-throw-if-not-resolved="false">HostParam</xref> must be provided. See Java docs in <xref uid="com.azure.core.annotation.HostParam" data-throw-if-not-resolved="false">HostParam</xref> for directions for host parameters.


    The host's value must contain the scheme/protocol and the host. The host's value may contain the port number.


    **Example 1: Static annotation**


    ```java

    @Host("https://management.azure.com")
      interface VirtualMachinesService {
       @GET("subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft
       .Compute/virtualMachines/{vmName}")
        VirtualMachine getByResourceGroup(@PathParam("resourceGroupName") String rgName, @PathParam("vmName") String
        vmName, @PathParam("subscriptionId") String subscriptionId);
      }
    ```


    **Example 2: Dynamic annotation**


    ```java

    @Host("https://{vaultName}.vault.azure.net:443")
      interface KeyVaultService {
        @GET("secrets/{secretName}")
         Secret get(@HostParam("vaultName") String vaultName, @PathParam("secretName") String secretName);
      }
    ```
  syntax:
    content: public interface Host implements Annotation
  implements:
  - java.lang.annotation.Annotation
- uid: com.azure.core.annotation.Host.value()
  id: value()
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.annotation.Host
  langs:
  - java
  name: value()
  nameWithType: Host.value()
  fullName: com.azure.core.annotation.Host.value()
  overload: com.azure.core.annotation.Host.value*
  type: Method
  package: com.azure.core.annotation
  summary: Get the protocol/scheme, host, and optional port number in a single string.
  syntax:
    content: public abstract String value()
    return:
      type: java.lang.String
      description: The protocol/scheme, host, and optional port number in a single string.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.annotation.Host.value*
  name: value
  nameWithType: Host.value
  fullName: com.azure.core.annotation.Host.value
  package: com.azure.core.annotation
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
