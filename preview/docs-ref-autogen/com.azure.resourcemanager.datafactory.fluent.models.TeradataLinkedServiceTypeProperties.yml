### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties"
fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties"
name: "TeradataLinkedServiceTypeProperties"
nameWithType: "TeradataLinkedServiceTypeProperties"
summary: "Teradata linked service properties."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TeradataLinkedServiceTypeProperties"
constructors:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.TeradataLinkedServiceTypeProperties()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.TeradataLinkedServiceTypeProperties()"
  name: "TeradataLinkedServiceTypeProperties()"
  nameWithType: "TeradataLinkedServiceTypeProperties.TeradataLinkedServiceTypeProperties()"
  syntax: "public TeradataLinkedServiceTypeProperties()"
methods:
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.authenticationType()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.authenticationType()"
  name: "authenticationType()"
  nameWithType: "TeradataLinkedServiceTypeProperties.authenticationType()"
  summary: "Get the authentication<wbr>Type property: Authentication<wbr>Type to be used for connection."
  syntax: "public TeradataAuthenticationType authenticationType()"
  desc: "Get the authenticationType property: AuthenticationType to be used for connection."
  returns:
    description: "the authenticationType value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeradataAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.TeradataAuthenticationType&text=TeradataAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.connectionString()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.connectionString()"
  name: "connectionString()"
  nameWithType: "TeradataLinkedServiceTypeProperties.connectionString()"
  summary: "Get the connection<wbr>String property: Teradata ODBC connection string."
  syntax: "public Object connectionString()"
  desc: "Get the connectionString property: Teradata ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
  returns:
    description: "the connectionString value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.encryptedCredential()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.encryptedCredential()"
  name: "encryptedCredential()"
  nameWithType: "TeradataLinkedServiceTypeProperties.encryptedCredential()"
  summary: "Get the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  syntax: "public Object encryptedCredential()"
  desc: "Get the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the encryptedCredential value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.password()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.password()"
  name: "password()"
  nameWithType: "TeradataLinkedServiceTypeProperties.password()"
  summary: "Get the password property: Password for authentication."
  syntax: "public SecretBase password()"
  desc: "Get the password property: Password for authentication."
  returns:
    description: "the password value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.server()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.server()"
  name: "server()"
  nameWithType: "TeradataLinkedServiceTypeProperties.server()"
  summary: "Get the server property: Server name for connection."
  syntax: "public Object server()"
  desc: "Get the server property: Server name for connection. Type: string (or Expression with resultType string)."
  returns:
    description: "the server value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.username()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.username()"
  name: "username()"
  nameWithType: "TeradataLinkedServiceTypeProperties.username()"
  summary: "Get the username property: Username for authentication."
  syntax: "public Object username()"
  desc: "Get the username property: Username for authentication. Type: string (or Expression with resultType string)."
  returns:
    description: "the username value."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.validate()"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.validate()"
  name: "validate()"
  nameWithType: "TeradataLinkedServiceTypeProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.withAuthenticationType(com.azure.resourcemanager.datafactory.models.TeradataAuthenticationType)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.withAuthenticationType(TeradataAuthenticationType authenticationType)"
  name: "withAuthenticationType(TeradataAuthenticationType authenticationType)"
  nameWithType: "TeradataLinkedServiceTypeProperties.withAuthenticationType(TeradataAuthenticationType authenticationType)"
  summary: "Set the authentication<wbr>Type property: Authentication<wbr>Type to be used for connection."
  parameters:
  - description: "the authenticationType value to set."
    name: "authenticationType"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.TeradataAuthenticationType?alt=com.azure.resourcemanager.datafactory.models.TeradataAuthenticationType&text=TeradataAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeradataLinkedServiceTypeProperties withAuthenticationType(TeradataAuthenticationType authenticationType)"
  desc: "Set the authenticationType property: AuthenticationType to be used for connection."
  returns:
    description: "the TeradataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties&text=TeradataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.withConnectionString(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.withConnectionString(Object connectionString)"
  name: "withConnectionString(Object connectionString)"
  nameWithType: "TeradataLinkedServiceTypeProperties.withConnectionString(Object connectionString)"
  summary: "Set the connection<wbr>String property: Teradata ODBC connection string."
  parameters:
  - description: "the connectionString value to set."
    name: "connectionString"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeradataLinkedServiceTypeProperties withConnectionString(Object connectionString)"
  desc: "Set the connectionString property: Teradata ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference."
  returns:
    description: "the TeradataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties&text=TeradataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.withEncryptedCredential(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  name: "withEncryptedCredential(Object encryptedCredential)"
  nameWithType: "TeradataLinkedServiceTypeProperties.withEncryptedCredential(Object encryptedCredential)"
  summary: "Set the encrypted<wbr>Credential property: The encrypted credential used for authentication."
  parameters:
  - description: "the encryptedCredential value to set."
    name: "encryptedCredential"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeradataLinkedServiceTypeProperties withEncryptedCredential(Object encryptedCredential)"
  desc: "Set the encryptedCredential property: The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
  returns:
    description: "the TeradataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties&text=TeradataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.withPassword(com.azure.resourcemanager.datafactory.models.SecretBase)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.withPassword(SecretBase password)"
  name: "withPassword(SecretBase password)"
  nameWithType: "TeradataLinkedServiceTypeProperties.withPassword(SecretBase password)"
  summary: "Set the password property: Password for authentication."
  parameters:
  - description: "the password value to set."
    name: "password"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.SecretBase?alt=com.azure.resourcemanager.datafactory.models.SecretBase&text=SecretBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeradataLinkedServiceTypeProperties withPassword(SecretBase password)"
  desc: "Set the password property: Password for authentication."
  returns:
    description: "the TeradataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties&text=TeradataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.withServer(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.withServer(Object server)"
  name: "withServer(Object server)"
  nameWithType: "TeradataLinkedServiceTypeProperties.withServer(Object server)"
  summary: "Set the server property: Server name for connection."
  parameters:
  - description: "the server value to set."
    name: "server"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeradataLinkedServiceTypeProperties withServer(Object server)"
  desc: "Set the server property: Server name for connection. Type: string (or Expression with resultType string)."
  returns:
    description: "the TeradataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties&text=TeradataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.withUsername(java.lang.Object)"
  fullName: "com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties.withUsername(Object username)"
  name: "withUsername(Object username)"
  nameWithType: "TeradataLinkedServiceTypeProperties.withUsername(Object username)"
  summary: "Set the username property: Username for authentication."
  parameters:
  - description: "the username value to set."
    name: "username"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TeradataLinkedServiceTypeProperties withUsername(Object username)"
  desc: "Set the username property: Username for authentication. Type: string (or Expression with resultType string)."
  returns:
    description: "the TeradataLinkedServiceTypeProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties?alt=com.azure.resourcemanager.datafactory.fluent.models.TeradataLinkedServiceTypeProperties&text=TeradataLinkedServiceTypeProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Teradata linked service properties."
metadata: {}
package: "com.azure.resourcemanager.datafactory.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
