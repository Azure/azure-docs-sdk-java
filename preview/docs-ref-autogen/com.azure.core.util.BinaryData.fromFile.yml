### YamlMime:JavaMember
uid: "com.azure.core.util.BinaryData.fromFile*"
fullName: "com.azure.core.util.BinaryData.fromFile"
name: "fromFile"
nameWithType: "BinaryData.fromFile"
members:
- uid: "com.azure.core.util.BinaryData.fromFile(java.nio.file.Path)"
  fullName: "com.azure.core.util.BinaryData.fromFile(Path file)"
  name: "fromFile(Path file)"
  nameWithType: "BinaryData.fromFile(Path file)"
  summary: "Creates a <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref> that uses the content of the file at <xref uid=\"java.nio.file.Path\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Path\"></xref> as its data. This method checks for the existence of the file at the time of creating an instance of <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref>. The file, however, is not read until there is an attempt to read the contents of the returned BinaryData instance.\n\n**Create an instance from a file**\n\n```java\nBinaryData binaryData = BinaryData.fromFile(new File(\"path/to/file\").toPath());\n System.out.println(new String(binaryData.toBytes(), StandardCharsets.UTF_8));\n```"
  parameters:
  - description: "The <xref uid=\"java.nio.file.Path\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Path\"></xref> that will be the <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref> data."
    name: "file"
    type: "<xref href=\"java.nio.file.Path?alt=java.nio.file.Path&text=Path\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static BinaryData fromFile(Path file)"
  returns:
    description: "A new <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref>."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.BinaryData.fromFile(java.nio.file.Path,int)"
  fullName: "com.azure.core.util.BinaryData.fromFile(Path file, int chunkSize)"
  name: "fromFile(Path file, int chunkSize)"
  nameWithType: "BinaryData.fromFile(Path file, int chunkSize)"
  summary: "Creates a <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref> that uses the content of the file at <xref uid=\"java.nio.file.Path\" data-throw-if-not-resolved=\"false\" data-raw-source=\"file\"></xref> as its data. This method checks for the existence of the file at the time of creating an instance of <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref>. The file, however, is not read until there is an attempt to read the contents of the returned BinaryData instance.\n\n**Create an instance from a file**\n\n```java\nBinaryData binaryData = BinaryData.fromFile(new File(\"path/to/file\").toPath(), 8092);\n System.out.println(new String(binaryData.toBytes(), StandardCharsets.UTF_8));\n```"
  parameters:
  - description: "The <xref uid=\"java.nio.file.Path\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Path\"></xref> that will be the <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref> data."
    name: "file"
    type: "<xref href=\"java.nio.file.Path?alt=java.nio.file.Path&text=Path\" data-throw-if-not-resolved=\"False\" />"
  - description: "The requested size for each read of the path."
    name: "chunkSize"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static BinaryData fromFile(Path file, int chunkSize)"
  returns:
    description: "A new <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref>."
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.core.util"
artifact: com.azure:azure-core:1.22.0-beta.1
