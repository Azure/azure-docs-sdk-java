### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.Factories"
fullName: "com.azure.resourcemanager.datafactory.models.Factories"
name: "Factories"
nameWithType: "Factories"
summary: "Resource collection API of Factories."
syntax: "public interface Factories"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.Factories.configureFactoryRepo(java.lang.String,com.azure.resourcemanager.datafactory.models.FactoryRepoUpdate)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.configureFactoryRepo(String locationId, FactoryRepoUpdate factoryRepoUpdate)"
  name: "configureFactoryRepo(String locationId, FactoryRepoUpdate factoryRepoUpdate)"
  nameWithType: "Factories.configureFactoryRepo(String locationId, FactoryRepoUpdate factoryRepoUpdate)"
  summary: "Updates a factory's repo information."
  modifiers:
  - "abstract"
  parameters:
  - description: "The location identifier."
    name: "locationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update factory repo request definition."
    name: "factoryRepoUpdate"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FactoryRepoUpdate?alt=com.azure.resourcemanager.datafactory.models.FactoryRepoUpdate&text=FactoryRepoUpdate\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Factory configureFactoryRepo(String locationId, FactoryRepoUpdate factoryRepoUpdate)"
  desc: "Updates a factory's repo information."
  returns:
    description: "factory resource type."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.configureFactoryRepoWithResponse(java.lang.String,com.azure.resourcemanager.datafactory.models.FactoryRepoUpdate,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.configureFactoryRepoWithResponse(String locationId, FactoryRepoUpdate factoryRepoUpdate, Context context)"
  name: "configureFactoryRepoWithResponse(String locationId, FactoryRepoUpdate factoryRepoUpdate, Context context)"
  nameWithType: "Factories.configureFactoryRepoWithResponse(String locationId, FactoryRepoUpdate factoryRepoUpdate, Context context)"
  summary: "Updates a factory's repo information."
  modifiers:
  - "abstract"
  parameters:
  - description: "The location identifier."
    name: "locationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Update factory repo request definition."
    name: "factoryRepoUpdate"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.FactoryRepoUpdate?alt=com.azure.resourcemanager.datafactory.models.FactoryRepoUpdate&text=FactoryRepoUpdate\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Factory> configureFactoryRepoWithResponse(String locationId, FactoryRepoUpdate factoryRepoUpdate, Context context)"
  desc: "Updates a factory's repo information."
  returns:
    description: "factory resource type along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.define(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.define(String name)"
  name: "define(String name)"
  nameWithType: "Factories.define(String name)"
  summary: "Begins definition for a new Factory resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "resource name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Factory.DefinitionStages.Blank define(String name)"
  desc: "Begins definition for a new Factory resource."
  returns:
    description: "the first stage of the new Factory definition."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Factory.DefinitionStages.Blank?alt=com.azure.resourcemanager.datafactory.models.Factory.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.deleteById(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.deleteById(String id)"
  name: "deleteById(String id)"
  nameWithType: "Factories.deleteById(String id)"
  summary: "Deletes a factory."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteById(String id)"
  desc: "Deletes a factory."
- uid: "com.azure.resourcemanager.datafactory.models.Factories.deleteByIdWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.deleteByIdWithResponse(String id, Context context)"
  name: "deleteByIdWithResponse(String id, Context context)"
  nameWithType: "Factories.deleteByIdWithResponse(String id, Context context)"
  summary: "Deletes a factory."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteByIdWithResponse(String id, Context context)"
  desc: "Deletes a factory."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.deleteByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.deleteByResourceGroup(String resourceGroupName, String factoryName)"
  name: "deleteByResourceGroup(String resourceGroupName, String factoryName)"
  nameWithType: "Factories.deleteByResourceGroup(String resourceGroupName, String factoryName)"
  summary: "Deletes a factory."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteByResourceGroup(String resourceGroupName, String factoryName)"
  desc: "Deletes a factory."
- uid: "com.azure.resourcemanager.datafactory.models.Factories.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.deleteWithResponse(String resourceGroupName, String factoryName, Context context)"
  name: "deleteWithResponse(String resourceGroupName, String factoryName, Context context)"
  nameWithType: "Factories.deleteWithResponse(String resourceGroupName, String factoryName, Context context)"
  summary: "Deletes a factory."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> deleteWithResponse(String resourceGroupName, String factoryName, Context context)"
  desc: "Deletes a factory."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.getById(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.getById(String id)"
  name: "getById(String id)"
  nameWithType: "Factories.getById(String id)"
  summary: "Gets a factory."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Factory getById(String id)"
  desc: "Gets a factory."
  returns:
    description: "a factory along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.getByIdWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.getByIdWithResponse(String id, String ifNoneMatch, Context context)"
  name: "getByIdWithResponse(String id, String ifNoneMatch, Context context)"
  nameWithType: "Factories.getByIdWithResponse(String id, String ifNoneMatch, Context context)"
  summary: "Gets a factory."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the factory entity. Should only be specified for get. If the ETag matches the existing\n     entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Factory> getByIdWithResponse(String id, String ifNoneMatch, Context context)"
  desc: "Gets a factory."
  returns:
    description: "a factory along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.getByResourceGroup(String resourceGroupName, String factoryName)"
  name: "getByResourceGroup(String resourceGroupName, String factoryName)"
  nameWithType: "Factories.getByResourceGroup(String resourceGroupName, String factoryName)"
  summary: "Gets a factory."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Factory getByResourceGroup(String resourceGroupName, String factoryName)"
  desc: "Gets a factory."
  returns:
    description: "a factory."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.getByResourceGroupWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.getByResourceGroupWithResponse(String resourceGroupName, String factoryName, String ifNoneMatch, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String factoryName, String ifNoneMatch, Context context)"
  nameWithType: "Factories.getByResourceGroupWithResponse(String resourceGroupName, String factoryName, String ifNoneMatch, Context context)"
  summary: "Gets a factory."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the factory entity. Should only be specified for get. If the ETag matches the existing\n     entity tag, or if * was provided, then no content will be returned."
    name: "ifNoneMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Factory> getByResourceGroupWithResponse(String resourceGroupName, String factoryName, String ifNoneMatch, Context context)"
  desc: "Gets a factory."
  returns:
    description: "a factory along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.getDataPlaneAccess(java.lang.String,java.lang.String,com.azure.resourcemanager.datafactory.models.UserAccessPolicy)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.getDataPlaneAccess(String resourceGroupName, String factoryName, UserAccessPolicy policy)"
  name: "getDataPlaneAccess(String resourceGroupName, String factoryName, UserAccessPolicy policy)"
  nameWithType: "Factories.getDataPlaneAccess(String resourceGroupName, String factoryName, UserAccessPolicy policy)"
  summary: "Get Data Plane access."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Data Plane user access policy definition."
    name: "policy"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.UserAccessPolicy?alt=com.azure.resourcemanager.datafactory.models.UserAccessPolicy&text=UserAccessPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AccessPolicyResponse getDataPlaneAccess(String resourceGroupName, String factoryName, UserAccessPolicy policy)"
  desc: "Get Data Plane access."
  returns:
    description: "data Plane access."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.AccessPolicyResponse?alt=com.azure.resourcemanager.datafactory.models.AccessPolicyResponse&text=AccessPolicyResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.getDataPlaneAccessWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.datafactory.models.UserAccessPolicy,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.getDataPlaneAccessWithResponse(String resourceGroupName, String factoryName, UserAccessPolicy policy, Context context)"
  name: "getDataPlaneAccessWithResponse(String resourceGroupName, String factoryName, UserAccessPolicy policy, Context context)"
  nameWithType: "Factories.getDataPlaneAccessWithResponse(String resourceGroupName, String factoryName, UserAccessPolicy policy, Context context)"
  summary: "Get Data Plane access."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Data Plane user access policy definition."
    name: "policy"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.UserAccessPolicy?alt=com.azure.resourcemanager.datafactory.models.UserAccessPolicy&text=UserAccessPolicy\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<AccessPolicyResponse> getDataPlaneAccessWithResponse(String resourceGroupName, String factoryName, UserAccessPolicy policy, Context context)"
  desc: "Get Data Plane access."
  returns:
    description: "data Plane access along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.AccessPolicyResponse?alt=com.azure.resourcemanager.datafactory.models.AccessPolicyResponse&text=AccessPolicyResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.getGitHubAccessToken(java.lang.String,java.lang.String,com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.getGitHubAccessToken(String resourceGroupName, String factoryName, GitHubAccessTokenRequest gitHubAccessTokenRequest)"
  name: "getGitHubAccessToken(String resourceGroupName, String factoryName, GitHubAccessTokenRequest gitHubAccessTokenRequest)"
  nameWithType: "Factories.getGitHubAccessToken(String resourceGroupName, String factoryName, GitHubAccessTokenRequest gitHubAccessTokenRequest)"
  summary: "Get Git<wbr>Hub Access Token."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Get GitHub access token request definition."
    name: "gitHubAccessTokenRequest"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest?alt=com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest&text=GitHubAccessTokenRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract GitHubAccessTokenResponse getGitHubAccessToken(String resourceGroupName, String factoryName, GitHubAccessTokenRequest gitHubAccessTokenRequest)"
  desc: "Get GitHub Access Token."
  returns:
    description: "gitHub Access Token."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GitHubAccessTokenResponse?alt=com.azure.resourcemanager.datafactory.models.GitHubAccessTokenResponse&text=GitHubAccessTokenResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.getGitHubAccessTokenWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.getGitHubAccessTokenWithResponse(String resourceGroupName, String factoryName, GitHubAccessTokenRequest gitHubAccessTokenRequest, Context context)"
  name: "getGitHubAccessTokenWithResponse(String resourceGroupName, String factoryName, GitHubAccessTokenRequest gitHubAccessTokenRequest, Context context)"
  nameWithType: "Factories.getGitHubAccessTokenWithResponse(String resourceGroupName, String factoryName, GitHubAccessTokenRequest gitHubAccessTokenRequest, Context context)"
  summary: "Get Git<wbr>Hub Access Token."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The factory name."
    name: "factoryName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Get GitHub access token request definition."
    name: "gitHubAccessTokenRequest"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest?alt=com.azure.resourcemanager.datafactory.models.GitHubAccessTokenRequest&text=GitHubAccessTokenRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<GitHubAccessTokenResponse> getGitHubAccessTokenWithResponse(String resourceGroupName, String factoryName, GitHubAccessTokenRequest gitHubAccessTokenRequest, Context context)"
  desc: "Get GitHub Access Token."
  returns:
    description: "gitHub Access Token along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.GitHubAccessTokenResponse?alt=com.azure.resourcemanager.datafactory.models.GitHubAccessTokenResponse&text=GitHubAccessTokenResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.list()"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.list()"
  name: "list()"
  nameWithType: "Factories.list()"
  summary: "Lists factories under the specified subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<Factory> list()"
  desc: "Lists factories under the specified subscription."
  returns:
    description: "a list of factory resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.list(com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.list(Context context)"
  name: "list(Context context)"
  nameWithType: "Factories.list(Context context)"
  summary: "Lists factories under the specified subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Factory> list(Context context)"
  desc: "Lists factories under the specified subscription."
  returns:
    description: "a list of factory resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "Factories.listByResourceGroup(String resourceGroupName)"
  summary: "Lists factories."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Factory> listByResourceGroup(String resourceGroupName)"
  desc: "Lists factories."
  returns:
    description: "a list of factory resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datafactory.models.Factories.listByResourceGroup(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.datafactory.models.Factories.listByResourceGroup(String resourceGroupName, Context context)"
  name: "listByResourceGroup(String resourceGroupName, Context context)"
  nameWithType: "Factories.listByResourceGroup(String resourceGroupName, Context context)"
  summary: "Lists factories."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource group name."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<Factory> listByResourceGroup(String resourceGroupName, Context context)"
  desc: "Lists factories."
  returns:
    description: "a list of factory resources as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datafactory.models.Factory?alt=com.azure.resourcemanager.datafactory.models.Factory&text=Factory\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of Factories."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
