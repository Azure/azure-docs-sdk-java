### YamlMime:JavaMember
uid: "org.apache.hc.core5.http.impl.bootstrap.AsyncServer.listen*"
fullName: "org.apache.hc.core5.http.impl.bootstrap.AsyncServer.listen"
name: "listen"
nameWithType: "AsyncServer.listen"
members:
- uid: "org.apache.hc.core5.http.impl.bootstrap.AsyncServer.listen(java.net.SocketAddress)"
  fullName: "org.apache.hc.core5.http.impl.bootstrap.AsyncServer.listen(SocketAddress address)"
  name: "listen(SocketAddress address)"
  nameWithType: "AsyncServer.listen(SocketAddress address)"
  parameters:
  - name: "address"
    type: "<xref href=\"java.net.SocketAddress?alt=java.net.SocketAddress&text=SocketAddress\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Future<ListenerEndpoint> listen(SocketAddress address)"
  returns:
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.hc.core5.reactor.ListenerEndpoint?alt=org.apache.hc.core5.reactor.ListenerEndpoint&text=ListenerEndpoint\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "org.apache.hc.core5.http.impl.bootstrap.AsyncServer.listen(java.net.SocketAddress,org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.reactor.ListenerEndpoint>)"
  fullName: "org.apache.hc.core5.http.impl.bootstrap.AsyncServer.listen(SocketAddress address, FutureCallback<ListenerEndpoint> callback)"
  name: "listen(SocketAddress address, FutureCallback<ListenerEndpoint> callback)"
  nameWithType: "AsyncServer.listen(SocketAddress address, FutureCallback<ListenerEndpoint> callback)"
  summary: "Opens a new listener endpoint with the given socket address. Once the endpoint is fully initialized it starts accepting incoming connections and propagates I/O activity notifications to the I/O event dispatcher."
  parameters:
  - name: "address"
    type: "<xref href=\"java.net.SocketAddress?alt=java.net.SocketAddress&text=SocketAddress\" data-throw-if-not-resolved=\"False\" />"
  - name: "callback"
    type: "<xref href=\"org.apache.hc.core5.concurrent.FutureCallback?alt=org.apache.hc.core5.concurrent.FutureCallback&text=FutureCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.hc.core5.reactor.ListenerEndpoint?alt=org.apache.hc.core5.reactor.ListenerEndpoint&text=ListenerEndpoint\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Future<ListenerEndpoint> listen(SocketAddress address, FutureCallback<ListenerEndpoint> callback)"
  returns:
    type: "<xref href=\"java.util.concurrent.Future?alt=java.util.concurrent.Future&text=Future\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"org.apache.hc.core5.reactor.ListenerEndpoint?alt=org.apache.hc.core5.reactor.ListenerEndpoint&text=ListenerEndpoint\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "org.apache.hc.core5.http.impl.bootstrap"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
