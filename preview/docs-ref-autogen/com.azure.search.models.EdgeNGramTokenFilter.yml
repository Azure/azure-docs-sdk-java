### YamlMime:ManagedReference
items:
- uid: "com.azure.search.models.EdgeNGramTokenFilter"
  id: "EdgeNGramTokenFilter"
  parent: "com.azure.search.models"
  children:
  - "com.azure.search.models.EdgeNGramTokenFilter.EdgeNGramTokenFilter()"
  - "com.azure.search.models.EdgeNGramTokenFilter.getMaxGram()"
  - "com.azure.search.models.EdgeNGramTokenFilter.getMinGram()"
  - "com.azure.search.models.EdgeNGramTokenFilter.getSide()"
  - "com.azure.search.models.EdgeNGramTokenFilter.setMaxGram(java.lang.Integer)"
  - "com.azure.search.models.EdgeNGramTokenFilter.setMinGram(java.lang.Integer)"
  - "com.azure.search.models.EdgeNGramTokenFilter.setSide(com.azure.search.models.EdgeNGramTokenFilterSide)"
  langs:
  - "java"
  name: "EdgeNGramTokenFilter"
  nameWithType: "EdgeNGramTokenFilter"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter"
  type: "Class"
  package: "com.azure.search.models"
  summary: "Generates n-grams of the given size(s) starting from the front or the back of an input token. This token filter is implemented using Apache Lucene."
  syntax:
    content: "public final class EdgeNGramTokenFilter extends TokenFilter"
  inheritance:
  - "java.lang.Object"
  - "com.azure.search.models.TokenFilter"
  inheritedMembers:
  - "com.azure.search.models.TokenFilter.getName()"
  - "com.azure.search.models.TokenFilter.setName(java.lang.String)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.search.models.EdgeNGramTokenFilter.EdgeNGramTokenFilter()"
  id: "EdgeNGramTokenFilter()"
  parent: "com.azure.search.models.EdgeNGramTokenFilter"
  langs:
  - "java"
  name: "EdgeNGramTokenFilter()"
  nameWithType: "EdgeNGramTokenFilter.EdgeNGramTokenFilter()"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.EdgeNGramTokenFilter()"
  overload: "com.azure.search.models.EdgeNGramTokenFilter.EdgeNGramTokenFilter*"
  type: "Constructor"
  package: "com.azure.search.models"
  syntax:
    content: "public EdgeNGramTokenFilter()"
- uid: "com.azure.search.models.EdgeNGramTokenFilter.getMaxGram()"
  id: "getMaxGram()"
  parent: "com.azure.search.models.EdgeNGramTokenFilter"
  langs:
  - "java"
  name: "getMaxGram()"
  nameWithType: "EdgeNGramTokenFilter.getMaxGram()"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.getMaxGram()"
  overload: "com.azure.search.models.EdgeNGramTokenFilter.getMaxGram*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Get the maxGram property: The maximum n-gram length. Default is 2."
  syntax:
    content: "public Integer getMaxGram()"
    return:
      type: "java.lang.Integer"
      description: "the maxGram value."
- uid: "com.azure.search.models.EdgeNGramTokenFilter.getMinGram()"
  id: "getMinGram()"
  parent: "com.azure.search.models.EdgeNGramTokenFilter"
  langs:
  - "java"
  name: "getMinGram()"
  nameWithType: "EdgeNGramTokenFilter.getMinGram()"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.getMinGram()"
  overload: "com.azure.search.models.EdgeNGramTokenFilter.getMinGram*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Get the minGram property: The minimum n-gram length. Default is 1. Must be less than the value of maxGram."
  syntax:
    content: "public Integer getMinGram()"
    return:
      type: "java.lang.Integer"
      description: "the minGram value."
- uid: "com.azure.search.models.EdgeNGramTokenFilter.getSide()"
  id: "getSide()"
  parent: "com.azure.search.models.EdgeNGramTokenFilter"
  langs:
  - "java"
  name: "getSide()"
  nameWithType: "EdgeNGramTokenFilter.getSide()"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.getSide()"
  overload: "com.azure.search.models.EdgeNGramTokenFilter.getSide*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Get the side property: Specifies which side of the input the n-gram should be generated from. Default is \"front\". Possible values include: 'front', 'back'."
  syntax:
    content: "public EdgeNGramTokenFilterSide getSide()"
    return:
      type: "com.azure.search.models.EdgeNGramTokenFilterSide"
      description: "the side value."
- uid: "com.azure.search.models.EdgeNGramTokenFilter.setMaxGram(java.lang.Integer)"
  id: "setMaxGram(java.lang.Integer)"
  parent: "com.azure.search.models.EdgeNGramTokenFilter"
  langs:
  - "java"
  name: "setMaxGram(Integer maxGram)"
  nameWithType: "EdgeNGramTokenFilter.setMaxGram(Integer maxGram)"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.setMaxGram(Integer maxGram)"
  overload: "com.azure.search.models.EdgeNGramTokenFilter.setMaxGram*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Set the maxGram property: The maximum n-gram length. Default is 2."
  syntax:
    content: "public EdgeNGramTokenFilter setMaxGram(Integer maxGram)"
    parameters:
    - id: "maxGram"
      type: "java.lang.Integer"
      description: "the maxGram value to set."
    return:
      type: "com.azure.search.models.EdgeNGramTokenFilter"
      description: "the EdgeNGramTokenFilter object itself."
- uid: "com.azure.search.models.EdgeNGramTokenFilter.setMinGram(java.lang.Integer)"
  id: "setMinGram(java.lang.Integer)"
  parent: "com.azure.search.models.EdgeNGramTokenFilter"
  langs:
  - "java"
  name: "setMinGram(Integer minGram)"
  nameWithType: "EdgeNGramTokenFilter.setMinGram(Integer minGram)"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.setMinGram(Integer minGram)"
  overload: "com.azure.search.models.EdgeNGramTokenFilter.setMinGram*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Set the minGram property: The minimum n-gram length. Default is 1. Must be less than the value of maxGram."
  syntax:
    content: "public EdgeNGramTokenFilter setMinGram(Integer minGram)"
    parameters:
    - id: "minGram"
      type: "java.lang.Integer"
      description: "the minGram value to set."
    return:
      type: "com.azure.search.models.EdgeNGramTokenFilter"
      description: "the EdgeNGramTokenFilter object itself."
- uid: "com.azure.search.models.EdgeNGramTokenFilter.setSide(com.azure.search.models.EdgeNGramTokenFilterSide)"
  id: "setSide(com.azure.search.models.EdgeNGramTokenFilterSide)"
  parent: "com.azure.search.models.EdgeNGramTokenFilter"
  langs:
  - "java"
  name: "setSide(EdgeNGramTokenFilterSide side)"
  nameWithType: "EdgeNGramTokenFilter.setSide(EdgeNGramTokenFilterSide side)"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.setSide(EdgeNGramTokenFilterSide side)"
  overload: "com.azure.search.models.EdgeNGramTokenFilter.setSide*"
  type: "Method"
  package: "com.azure.search.models"
  summary: "Set the side property: Specifies which side of the input the n-gram should be generated from. Default is \"front\". Possible values include: 'front', 'back'."
  syntax:
    content: "public EdgeNGramTokenFilter setSide(EdgeNGramTokenFilterSide side)"
    parameters:
    - id: "side"
      type: "com.azure.search.models.EdgeNGramTokenFilterSide"
      description: "the side value to set."
    return:
      type: "com.azure.search.models.EdgeNGramTokenFilter"
      description: "the EdgeNGramTokenFilter object itself."
references:
- uid: "com.azure.search.models.EdgeNGramTokenFilter.EdgeNGramTokenFilter*"
  name: "EdgeNGramTokenFilter"
  nameWithType: "EdgeNGramTokenFilter.EdgeNGramTokenFilter"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.EdgeNGramTokenFilter"
  package: "com.azure.search.models"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.search.models.EdgeNGramTokenFilter.getMinGram*"
  name: "getMinGram"
  nameWithType: "EdgeNGramTokenFilter.getMinGram"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.getMinGram"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.EdgeNGramTokenFilter.setMinGram*"
  name: "setMinGram"
  nameWithType: "EdgeNGramTokenFilter.setMinGram"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.setMinGram"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.EdgeNGramTokenFilter.getMaxGram*"
  name: "getMaxGram"
  nameWithType: "EdgeNGramTokenFilter.getMaxGram"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.getMaxGram"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.EdgeNGramTokenFilter.setMaxGram*"
  name: "setMaxGram"
  nameWithType: "EdgeNGramTokenFilter.setMaxGram"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.setMaxGram"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.EdgeNGramTokenFilterSide"
  name: "EdgeNGramTokenFilterSide"
  nameWithType: "EdgeNGramTokenFilterSide"
  fullName: "com.azure.search.models.EdgeNGramTokenFilterSide"
- uid: "com.azure.search.models.EdgeNGramTokenFilter.getSide*"
  name: "getSide"
  nameWithType: "EdgeNGramTokenFilter.getSide"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.getSide"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.EdgeNGramTokenFilter.setSide*"
  name: "setSide"
  nameWithType: "EdgeNGramTokenFilter.setSide"
  fullName: "com.azure.search.models.EdgeNGramTokenFilter.setSide"
  package: "com.azure.search.models"
- uid: "com.azure.search.models.TokenFilter"
  name: "TokenFilter"
  nameWithType: "TokenFilter"
  fullName: "com.azure.search.models.TokenFilter"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "com.azure.search.models.TokenFilter.getName()"
  name: "TokenFilter.getName()"
  nameWithType: "TokenFilter.getName()"
  fullName: "com.azure.search.models.TokenFilter.getName()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.azure.search.models.TokenFilter.setName(java.lang.String)"
  name: "TokenFilter.setName(String)"
  nameWithType: "TokenFilter.setName(String)"
  fullName: "com.azure.search.models.TokenFilter.setName(java.lang.String)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
