### YamlMime:JavaType
uid: "com.azure.resourcemanager.synapse.models.SparkConfigProperties"
fullName: "com.azure.resourcemanager.synapse.models.SparkConfigProperties"
name: "SparkConfigProperties"
nameWithType: "SparkConfigProperties"
summary: "Spark pool Config Properties Spark<wbr>Config Properties for a Big Data pool powered by Apache Spark."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SparkConfigProperties**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.synapse.models.SparkConfigProperties?alt=com.azure.resourcemanager.synapse.models.SparkConfigProperties&text=SparkConfigProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.SparkConfigProperties()"
  fullName: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.SparkConfigProperties()"
  name: "SparkConfigProperties()"
  nameWithType: "SparkConfigProperties.SparkConfigProperties()"
  summary: "Creates an instance of Spark<wbr>Config<wbr>Properties class."
  syntax: "public SparkConfigProperties()"
  desc: "Creates an instance of SparkConfigProperties class."
methods:
- uid: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.configurationType()"
  fullName: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.configurationType()"
  name: "configurationType()"
  nameWithType: "SparkConfigProperties.configurationType()"
  summary: "Get the configuration<wbr>Type property: The type of the spark config properties file."
  syntax: "public ConfigurationType configurationType()"
  desc: "Get the configurationType property: The type of the spark config properties file."
  returns:
    description: "the configurationType value."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.ConfigurationType?alt=com.azure.resourcemanager.synapse.models.ConfigurationType&text=ConfigurationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.content()"
  fullName: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.content()"
  name: "content()"
  nameWithType: "SparkConfigProperties.content()"
  summary: "Get the content property: The spark config properties."
  syntax: "public String content()"
  desc: "Get the content property: The spark config properties."
  returns:
    description: "the content value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.filename()"
  fullName: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.filename()"
  name: "filename()"
  nameWithType: "SparkConfigProperties.filename()"
  summary: "Get the filename property: The filename of the spark config properties file."
  syntax: "public String filename()"
  desc: "Get the filename property: The filename of the spark config properties file."
  returns:
    description: "the filename value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "SparkConfigProperties.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Spark<wbr>Config<wbr>Properties from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static SparkConfigProperties fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the SparkConfigProperties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of SparkConfigProperties from the JsonReader."
  returns:
    description: "An instance of SparkConfigProperties if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.SparkConfigProperties?alt=com.azure.resourcemanager.synapse.models.SparkConfigProperties&text=SparkConfigProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.time()"
  fullName: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.time()"
  name: "time()"
  nameWithType: "SparkConfigProperties.time()"
  summary: "Get the time property: The last update time of the spark config properties file."
  syntax: "public OffsetDateTime time()"
  desc: "Get the time property: The last update time of the spark config properties file."
  returns:
    description: "the time value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "SparkConfigProperties.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.validate()"
  fullName: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.validate()"
  name: "validate()"
  nameWithType: "SparkConfigProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.withConfigurationType(com.azure.resourcemanager.synapse.models.ConfigurationType)"
  fullName: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.withConfigurationType(ConfigurationType configurationType)"
  name: "withConfigurationType(ConfigurationType configurationType)"
  nameWithType: "SparkConfigProperties.withConfigurationType(ConfigurationType configurationType)"
  summary: "Set the configuration<wbr>Type property: The type of the spark config properties file."
  parameters:
  - description: "the configurationType value to set."
    name: "configurationType"
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.ConfigurationType?alt=com.azure.resourcemanager.synapse.models.ConfigurationType&text=ConfigurationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkConfigProperties withConfigurationType(ConfigurationType configurationType)"
  desc: "Set the configurationType property: The type of the spark config properties file."
  returns:
    description: "the SparkConfigProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.SparkConfigProperties?alt=com.azure.resourcemanager.synapse.models.SparkConfigProperties&text=SparkConfigProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.withContent(java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.withContent(String content)"
  name: "withContent(String content)"
  nameWithType: "SparkConfigProperties.withContent(String content)"
  summary: "Set the content property: The spark config properties."
  parameters:
  - description: "the content value to set."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SparkConfigProperties withContent(String content)"
  desc: "Set the content property: The spark config properties."
  returns:
    description: "the SparkConfigProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.SparkConfigProperties?alt=com.azure.resourcemanager.synapse.models.SparkConfigProperties&text=SparkConfigProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.withFilename(java.lang.String)"
  fullName: "com.azure.resourcemanager.synapse.models.SparkConfigProperties.withFilename(String filename)"
  name: "withFilename(String filename)"
  nameWithType: "SparkConfigProperties.withFilename(String filename)"
  summary: "Set the filename property: The filename of the spark config properties file."
  parameters:
  - description: "the filename value to set."
    name: "filename"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SparkConfigProperties withFilename(String filename)"
  desc: "Set the filename property: The filename of the spark config properties file."
  returns:
    description: "the SparkConfigProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.synapse.models.SparkConfigProperties?alt=com.azure.resourcemanager.synapse.models.SparkConfigProperties&text=SparkConfigProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Spark pool Config Properties SparkConfig Properties for a Big Data pool powered by Apache Spark."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.synapse.models.SparkConfigProperties?alt=com.azure.resourcemanager.synapse.models.SparkConfigProperties&text=SparkConfigProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.synapse.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-synapse:1.0.0-beta.8
