### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties
  id: RedisCommonProperties
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models
  children:
  - com.azure.resourcemanager.redis.models.RedisCommonProperties.RedisCommonProperties()
  - com.azure.resourcemanager.redis.models.RedisCommonProperties.enableNonSslPort()
  - com.azure.resourcemanager.redis.models.RedisCommonProperties.minimumTlsVersion()
  - com.azure.resourcemanager.redis.models.RedisCommonProperties.redisConfiguration()
  - com.azure.resourcemanager.redis.models.RedisCommonProperties.shardCount()
  - com.azure.resourcemanager.redis.models.RedisCommonProperties.tenantSettings()
  - com.azure.resourcemanager.redis.models.RedisCommonProperties.validate()
  - com.azure.resourcemanager.redis.models.RedisCommonProperties.withEnableNonSslPort(java.lang.Boolean)
  - com.azure.resourcemanager.redis.models.RedisCommonProperties.withMinimumTlsVersion(com.azure.resourcemanager.redis.models.TlsVersion)
  - com.azure.resourcemanager.redis.models.RedisCommonProperties.withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.redis.models.RedisCommonProperties.withShardCount(java.lang.Integer)
  - com.azure.resourcemanager.redis.models.RedisCommonProperties.withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)
  langs:
  - java
  name: RedisCommonProperties
  nameWithType: RedisCommonProperties
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties
  type: Class
  package: com.azure.resourcemanager.redis.models
  summary: Create/Update/Get common properties of the redis cache.
  syntax:
    content: public class RedisCommonProperties
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.RedisCommonProperties()
  id: RedisCommonProperties()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCommonProperties
  langs:
  - java
  name: RedisCommonProperties()
  nameWithType: RedisCommonProperties.RedisCommonProperties()
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.RedisCommonProperties()
  overload: com.azure.resourcemanager.redis.models.RedisCommonProperties.RedisCommonProperties*
  type: Constructor
  package: com.azure.resourcemanager.redis.models
  syntax:
    content: public RedisCommonProperties()
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.enableNonSslPort()
  id: enableNonSslPort()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCommonProperties
  langs:
  - java
  name: enableNonSslPort()
  nameWithType: RedisCommonProperties.enableNonSslPort()
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.enableNonSslPort()
  overload: com.azure.resourcemanager.redis.models.RedisCommonProperties.enableNonSslPort*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the enableNonSslPort property: Specifies whether the non-ssl Redis server port (6379) is enabled.'
  syntax:
    content: public Boolean enableNonSslPort()
    return:
      type: java.lang.Boolean
      description: the enableNonSslPort value.
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.minimumTlsVersion()
  id: minimumTlsVersion()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCommonProperties
  langs:
  - java
  name: minimumTlsVersion()
  nameWithType: RedisCommonProperties.minimumTlsVersion()
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.minimumTlsVersion()
  overload: com.azure.resourcemanager.redis.models.RedisCommonProperties.minimumTlsVersion*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: "Get the minimumTlsVersion property: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')."
  syntax:
    content: public TlsVersion minimumTlsVersion()
    return:
      type: com.azure.resourcemanager.redis.models.TlsVersion
      description: the minimumTlsVersion value.
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.redisConfiguration()
  id: redisConfiguration()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCommonProperties
  langs:
  - java
  name: redisConfiguration()
  nameWithType: RedisCommonProperties.redisConfiguration()
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.redisConfiguration()
  overload: com.azure.resourcemanager.redis.models.RedisCommonProperties.redisConfiguration*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the redisConfiguration property: All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.'
  syntax:
    content: public Map<String,String> redisConfiguration()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the redisConfiguration value.
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.shardCount()
  id: shardCount()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCommonProperties
  langs:
  - java
  name: shardCount()
  nameWithType: RedisCommonProperties.shardCount()
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.shardCount()
  overload: com.azure.resourcemanager.redis.models.RedisCommonProperties.shardCount*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the shardCount property: The number of shards to be created on a Premium Cluster Cache.'
  syntax:
    content: public Integer shardCount()
    return:
      type: java.lang.Integer
      description: the shardCount value.
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.tenantSettings()
  id: tenantSettings()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCommonProperties
  langs:
  - java
  name: tenantSettings()
  nameWithType: RedisCommonProperties.tenantSettings()
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.tenantSettings()
  overload: com.azure.resourcemanager.redis.models.RedisCommonProperties.tenantSettings*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Get the tenantSettings property: A dictionary of tenant settings.'
  syntax:
    content: public Map<String,String> tenantSettings()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the tenantSettings value.
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.validate()
  id: validate()
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCommonProperties
  langs:
  - java
  name: validate()
  nameWithType: RedisCommonProperties.validate()
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.validate()
  overload: com.azure.resourcemanager.redis.models.RedisCommonProperties.validate*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: Validates the instance.
  syntax:
    content: public void validate()
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.withEnableNonSslPort(java.lang.Boolean)
  id: withEnableNonSslPort(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCommonProperties
  langs:
  - java
  name: withEnableNonSslPort(Boolean enableNonSslPort)
  nameWithType: RedisCommonProperties.withEnableNonSslPort(Boolean enableNonSslPort)
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.withEnableNonSslPort(Boolean enableNonSslPort)
  overload: com.azure.resourcemanager.redis.models.RedisCommonProperties.withEnableNonSslPort*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the enableNonSslPort property: Specifies whether the non-ssl Redis server port (6379) is enabled.'
  syntax:
    content: public RedisCommonProperties withEnableNonSslPort(Boolean enableNonSslPort)
    parameters:
    - id: enableNonSslPort
      type: java.lang.Boolean
      description: the enableNonSslPort value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCommonProperties
      description: the RedisCommonProperties object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.withMinimumTlsVersion(com.azure.resourcemanager.redis.models.TlsVersion)
  id: withMinimumTlsVersion(com.azure.resourcemanager.redis.models.TlsVersion)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCommonProperties
  langs:
  - java
  name: withMinimumTlsVersion(TlsVersion minimumTlsVersion)
  nameWithType: RedisCommonProperties.withMinimumTlsVersion(TlsVersion minimumTlsVersion)
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.withMinimumTlsVersion(TlsVersion minimumTlsVersion)
  overload: com.azure.resourcemanager.redis.models.RedisCommonProperties.withMinimumTlsVersion*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: "Set the minimumTlsVersion property: Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')."
  syntax:
    content: public RedisCommonProperties withMinimumTlsVersion(TlsVersion minimumTlsVersion)
    parameters:
    - id: minimumTlsVersion
      type: com.azure.resourcemanager.redis.models.TlsVersion
      description: the minimumTlsVersion value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCommonProperties
      description: the RedisCommonProperties object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)
  id: withRedisConfiguration(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCommonProperties
  langs:
  - java
  name: withRedisConfiguration(Map<String,String> redisConfiguration)
  nameWithType: RedisCommonProperties.withRedisConfiguration(Map<String,String> redisConfiguration)
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.withRedisConfiguration(Map<String,String> redisConfiguration)
  overload: com.azure.resourcemanager.redis.models.RedisCommonProperties.withRedisConfiguration*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the redisConfiguration property: All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.'
  syntax:
    content: public RedisCommonProperties withRedisConfiguration(Map<String,String> redisConfiguration)
    parameters:
    - id: redisConfiguration
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the redisConfiguration value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCommonProperties
      description: the RedisCommonProperties object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.withShardCount(java.lang.Integer)
  id: withShardCount(java.lang.Integer)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCommonProperties
  langs:
  - java
  name: withShardCount(Integer shardCount)
  nameWithType: RedisCommonProperties.withShardCount(Integer shardCount)
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.withShardCount(Integer shardCount)
  overload: com.azure.resourcemanager.redis.models.RedisCommonProperties.withShardCount*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the shardCount property: The number of shards to be created on a Premium Cluster Cache.'
  syntax:
    content: public RedisCommonProperties withShardCount(Integer shardCount)
    parameters:
    - id: shardCount
      type: java.lang.Integer
      description: the shardCount value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCommonProperties
      description: the RedisCommonProperties object itself.
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)
  id: withTenantSettings(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.0.0-beta.5
  parent: com.azure.resourcemanager.redis.models.RedisCommonProperties
  langs:
  - java
  name: withTenantSettings(Map<String,String> tenantSettings)
  nameWithType: RedisCommonProperties.withTenantSettings(Map<String,String> tenantSettings)
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.withTenantSettings(Map<String,String> tenantSettings)
  overload: com.azure.resourcemanager.redis.models.RedisCommonProperties.withTenantSettings*
  type: Method
  package: com.azure.resourcemanager.redis.models
  summary: 'Set the tenantSettings property: A dictionary of tenant settings.'
  syntax:
    content: public RedisCommonProperties withTenantSettings(Map<String,String> tenantSettings)
    parameters:
    - id: tenantSettings
      type: java.util.Map<java.lang.String,java.lang.String>
      description: the tenantSettings value to set.
    return:
      type: com.azure.resourcemanager.redis.models.RedisCommonProperties
      description: the RedisCommonProperties object itself.
references:
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.RedisCommonProperties*
  name: RedisCommonProperties
  nameWithType: RedisCommonProperties.RedisCommonProperties
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.RedisCommonProperties
  package: com.azure.resourcemanager.redis.models
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.redisConfiguration*
  name: redisConfiguration
  nameWithType: RedisCommonProperties.redisConfiguration
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.redisConfiguration
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.withRedisConfiguration*
  name: withRedisConfiguration
  nameWithType: RedisCommonProperties.withRedisConfiguration
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.withRedisConfiguration
  package: com.azure.resourcemanager.redis.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.enableNonSslPort*
  name: enableNonSslPort
  nameWithType: RedisCommonProperties.enableNonSslPort
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.enableNonSslPort
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.withEnableNonSslPort*
  name: withEnableNonSslPort
  nameWithType: RedisCommonProperties.withEnableNonSslPort
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.withEnableNonSslPort
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.tenantSettings*
  name: tenantSettings
  nameWithType: RedisCommonProperties.tenantSettings
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.tenantSettings
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.withTenantSettings*
  name: withTenantSettings
  nameWithType: RedisCommonProperties.withTenantSettings
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.withTenantSettings
  package: com.azure.resourcemanager.redis.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.shardCount*
  name: shardCount
  nameWithType: RedisCommonProperties.shardCount
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.shardCount
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.withShardCount*
  name: withShardCount
  nameWithType: RedisCommonProperties.withShardCount
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.withShardCount
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.TlsVersion
  name: TlsVersion
  nameWithType: TlsVersion
  fullName: com.azure.resourcemanager.redis.models.TlsVersion
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.minimumTlsVersion*
  name: minimumTlsVersion
  nameWithType: RedisCommonProperties.minimumTlsVersion
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.minimumTlsVersion
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.withMinimumTlsVersion*
  name: withMinimumTlsVersion
  nameWithType: RedisCommonProperties.withMinimumTlsVersion
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.withMinimumTlsVersion
  package: com.azure.resourcemanager.redis.models
- uid: com.azure.resourcemanager.redis.models.RedisCommonProperties.validate*
  name: validate
  nameWithType: RedisCommonProperties.validate
  fullName: com.azure.resourcemanager.redis.models.RedisCommonProperties.validate
  package: com.azure.resourcemanager.redis.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
