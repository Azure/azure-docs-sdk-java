### YamlMime:JavaType
uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient"
fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient"
name: "DocumentAnalysisClient"
nameWithType: "DocumentAnalysisClient"
summary: "This class provides a synchronous client that contains the operations that apply to Azure Form Recognizer."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DocumentAnalysisClient"
methods:
- uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument(java.lang.String,com.azure.core.util.BinaryData,long)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument(String modelId, BinaryData document, long length)"
  name: "beginAnalyzeDocument(String modelId, BinaryData document, long length)"
  nameWithType: "DocumentAnalysisClient.beginAnalyzeDocument(String modelId, BinaryData document, long length)"
  summary: "Analyzes data from documents using optical character recognition (OCR) using any of the prebuilt models or a custom-built analysis model."
  parameters:
  - description: "The unique model ID to be used. Use this to specify the custom model ID or prebuilt model ID.\n Prebuilt model IDs supported can be found <a href=\"https://aka.ms/azsdk/formrecognizer/models\">here</a>"
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data of the document to analyze information from."
    name: "document"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<DocumentOperationResult,AnalyzeResult> beginAnalyzeDocument(String modelId, BinaryData document, long length)"
  desc: "Analyzes data from documents using optical character recognition (OCR) using any of the prebuilt models or a custom-built analysis model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nFile document = new File(\"{local/file_path/fileName.jpg}\");\n     String modelId = \"{custom_trained_model_id}\";\n     byte[] fileContent = Files.readAllBytes(document.toPath());\n\n     documentAnalysisClient.beginAnalyzeDocument(modelId, BinaryData.fromBytes(fileContent), document.length())\n         .getFinalResult()\n         .getDocuments().stream()\n         .map(AnalyzedDocument::getFields)\n         .forEach(documentFieldMap -> documentFieldMap.forEach((key, documentField) -> {\n             System.out.printf(\"Field text: %s%n\", key);\n             System.out.printf(\"Field value data content: %s%n\", documentField.getContent());\n             System.out.printf(\"Confidence score: %.2f%n\", documentField.getConfidence());\n         }));\n }\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the of progress of analyze document operation until it has completed,\n has failed, or has been cancelled. The completed operation returns an <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeResult\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.DocumentOperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.DocumentOperationResult&text=DocumentOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument(java.lang.String,com.azure.core.util.BinaryData,long,com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocument(String modelId, BinaryData document, long length, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  name: "beginAnalyzeDocument(String modelId, BinaryData document, long length, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  nameWithType: "DocumentAnalysisClient.beginAnalyzeDocument(String modelId, BinaryData document, long length, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  summary: "Analyzes data from documents with optical character recognition (OCR) and semantic values from a given document using any of the prebuilt models or a custom-built analysis model."
  parameters:
  - description: "The unique model ID to be used. Use this to specify the custom model ID or prebuilt model ID.\n Prebuilt model IDs supported can be found <a href=\"https://aka.ms/azsdk/formrecognizer/models\">here</a>"
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data of the document to analyze information from."
    name: "document"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional configurable <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> that may be\n passed when analyzing documents."
    name: "analyzeDocumentOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions&text=AnalyzeDocumentOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<DocumentOperationResult,AnalyzeResult> beginAnalyzeDocument(String modelId, BinaryData document, long length, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  desc: "Analyzes data from documents with optical character recognition (OCR) and semantic values from a given document using any of the prebuilt models or a custom-built analysis model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\nAnalyze a document with configurable options.\n\n```java\nFile document = new File(\"{local/file_path/fileName.jpg}\");\n String modelId = \"{custom_trained_model_id}\";\n byte[] fileContent = Files.readAllBytes(document.toPath());\n\n documentAnalysisClient.beginAnalyzeDocument(modelId, BinaryData.fromBytes(fileContent), document.length(),\n         new AnalyzeDocumentOptions().setPages(Arrays.asList(\"1\", \"3\")), Context.NONE)\n     .getFinalResult()\n     .getDocuments().stream()\n     .map(AnalyzedDocument::getFields)\n     .forEach(documentFieldMap -> documentFieldMap.forEach((key, documentField) -> {\n         System.out.printf(\"Field text: %s%n\", key);\n         System.out.printf(\"Field value data content: %s%n\", documentField.getContent());\n         System.out.printf(\"Confidence score: %.2f%n\", documentField.getConfidence());\n     }));\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the of progress of analyze document operation until it has completed,\n has failed, or has been cancelled. The completed operation returns an <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeResult\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.DocumentOperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.DocumentOperationResult&text=DocumentOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocumentFromUrl(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocumentFromUrl(String modelId, String documentUrl)"
  name: "beginAnalyzeDocumentFromUrl(String modelId, String documentUrl)"
  nameWithType: "DocumentAnalysisClient.beginAnalyzeDocumentFromUrl(String modelId, String documentUrl)"
  summary: "Analyzes data from documents with optical character recognition (OCR) and semantic values from a given document using any of the prebuilt models or a custom-built analysis model."
  parameters:
  - description: "The unique model ID to be used. Use this to specify the custom model ID or prebuilt model ID.\n Prebuilt model IDs supported can be found <a href=\"https://aka.ms/azsdk/formrecognizer/models\">here</a>"
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The URL of the document to analyze."
    name: "documentUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<DocumentOperationResult,AnalyzeResult> beginAnalyzeDocumentFromUrl(String modelId, String documentUrl)"
  desc: "Analyzes data from documents with optical character recognition (OCR) and semantic values from a given document using any of the prebuilt models or a custom-built analysis model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support\n\n**Code sample**\n\nAnalyze a document using the URL of the document.\n\n```java\nString documentUrl = \"{document_url}\";\n String modelId = \"{custom_trained_model_id}\";\n\n documentAnalysisClient.beginAnalyzeDocumentFromUrl(modelId, documentUrl).getFinalResult()\n     .getDocuments().stream()\n     .map(AnalyzedDocument::getFields)\n     .forEach(documentFieldMap -> documentFieldMap.forEach((key, documentField) -> {\n         System.out.printf(\"Field text: %s%n\", key);\n         System.out.printf(\"Field value data content: %s%n\", documentField.getContent());\n         System.out.printf(\"Confidence score: %.2f%n\", documentField.getConfidence());\n     }));\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll the progress of the analyze document operation until it has completed,\n has failed, or has been cancelled. The completed operation returns an <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeResult\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.DocumentOperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.DocumentOperationResult&text=DocumentOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocumentFromUrl(java.lang.String,java.lang.String,com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisClient.beginAnalyzeDocumentFromUrl(String modelId, String documentUrl, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  name: "beginAnalyzeDocumentFromUrl(String modelId, String documentUrl, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  nameWithType: "DocumentAnalysisClient.beginAnalyzeDocumentFromUrl(String modelId, String documentUrl, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  summary: "Analyzes data from documents with optical character recognition (OCR) and semantic values from a given document using any of the prebuilt models or a custom-built analysis model."
  parameters:
  - description: "The unique model ID to be used.  Use this to specify the custom model ID or prebuilt model ID.\n Prebuilt model IDs supported can be found <a href=\"https://aka.ms/azsdk/formrecognizer/models\">here</a>"
    name: "modelId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The source URL to the input document."
    name: "documentUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional configurable <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> that may be\n passed when analyzing documents."
    name: "analyzeDocumentOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeDocumentOptions&text=AnalyzeDocumentOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<DocumentOperationResult,AnalyzeResult> beginAnalyzeDocumentFromUrl(String modelId, String documentUrl, AnalyzeDocumentOptions analyzeDocumentOptions, Context context)"
  desc: "Analyzes data from documents with optical character recognition (OCR) and semantic values from a given document using any of the prebuilt models or a custom-built analysis model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support\n\n**Code sample**\n\nAnalyze a document using the URL of the document with configurable options.\n\n```java\nString documentUrl = \"{document_url}\";\n String modelId = \"{custom_trained_model_id}\";\n\n documentAnalysisClient.beginAnalyzeDocumentFromUrl(modelId, documentUrl).getFinalResult()\n     .getDocuments().stream()\n     .map(AnalyzedDocument::getFields)\n     .forEach(documentFieldMap -> documentFieldMap.forEach((key, documentField) -> {\n         System.out.printf(\"Field text: %s%n\", key);\n         System.out.printf(\"Field value data content: %s%n\", documentField.getContent());\n         System.out.printf(\"Confidence score: %.2f%n\", documentField.getConfidence());\n     }));\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll the progress of the analyze document operation until it has completed,\n has failed, or has been cancelled. The completed operation returns an <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnalyzeResult\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.DocumentOperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.DocumentOperationResult&text=DocumentOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.AnalyzeResult&text=AnalyzeResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "This class provides a synchronous client that contains the operations that apply to Azure Form Recognizer. Operations allowed by the client are analyzing information from documents and images using custom-built document analysis models, prebuilt models for invoices, receipts, identity documents and business cards, and the layout model.\n\n**Instantiating an asynchronous Document Analysis Client**\n\n```java\nDocumentAnalysisClient documentAnalysisClient = new DocumentAnalysisClientBuilder()\n     .credential(new AzureKeyCredential(\"{key}\"))\n     .endpoint(\"{endpoint}\")\n     .buildClient();\n```"
metadata: {}
package: "com.azure.ai.formrecognizer.documentanalysis"
artifact: com.azure:azure-ai-formrecognizer:4.0.0-beta.6
