### YamlMime:JavaMember
uid: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoices*"
fullName: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoices"
name: "beginRecognizeInvoices"
nameWithType: "FormRecognizerClient.beginRecognizeInvoices"
members:
- uid: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoices(java.io.InputStream,long)"
  fullName: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoices(InputStream invoice, long length)"
  name: "beginRecognizeInvoices(InputStream invoice, long length)"
  nameWithType: "FormRecognizerClient.beginRecognizeInvoices(InputStream invoice, long length)"
  summary: "Recognizes data from the provided document data using optical character recognition (OCR) and a prebuilt trained invoice model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support\n\nSee [here][] for fields found on a invoice.\n\n**Code sample**\n\n```java\nFile invoice = new File(\"local/file_path/invoice.jpg\");\n ByteArrayInputStream inputStream = new ByteArrayInputStream(Files.readAllBytes(invoice.toPath()));\n // if training polling operation completed, retrieve the final result.\n formRecognizerClient.beginRecognizeInvoices(inputStream, invoice.length())\n     .getFinalResult()\n     .stream()\n     .map(RecognizedForm::getFields)\n     .forEach(recognizedFields -> {\n         FormField customAddrFormField = recognizedFields.get(\"CustomerAddress\");\n         if (customAddrFormField != null) {\n             if (FieldValueType.STRING == customAddrFormField.getValue().getValueType()) {\n                 System.out.printf(\"Customer Address: %s%n\", customAddrFormField.getValue().asString());\n             }\n         }\n         FormField invoiceDateFormField = recognizedFields.get(\"InvoiceDate\");\n         if (invoiceDateFormField != null) {\n             if (FieldValueType.DATE == invoiceDateFormField.getValue().getValueType()) {\n                 LocalDate invoiceDate = invoiceDateFormField.getValue().asDate();\n                 System.out.printf(\"Invoice Date: %s, confidence: %.2f%n\",\n                     invoiceDate, invoiceDateFormField.getConfidence());\n             }\n         }\n     });\n```\n\n\n[here]: https://aka.ms/formrecognizer/invoicefields"
  parameters:
  - description: "The data of the invoice to recognize invoice related information from."
    name: "invoice"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<FormRecognizerOperationResult,List<RecognizedForm>> beginRecognizeInvoices(InputStream invoice, long length)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the recognize invoice operation until it has completed,\n has failed, or has been cancelled. The completed operation returns a list of <xref uid=\"com.azure.ai.formrecognizer.models.RecognizedForm\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RecognizedForm\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.RecognizedForm?alt=com.azure.ai.formrecognizer.models.RecognizedForm&text=RecognizedForm\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoices(java.io.InputStream,long,com.azure.ai.formrecognizer.models.RecognizeInvoicesOptions,com.azure.core.util.Context)"
  fullName: "com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoices(InputStream invoice, long length, RecognizeInvoicesOptions recognizeInvoicesOptions, Context context)"
  name: "beginRecognizeInvoices(InputStream invoice, long length, RecognizeInvoicesOptions recognizeInvoicesOptions, Context context)"
  nameWithType: "FormRecognizerClient.beginRecognizeInvoices(InputStream invoice, long length, RecognizeInvoicesOptions recognizeInvoicesOptions, Context context)"
  summary: "Recognizes data from the provided document data using optical character recognition (OCR) and a prebuilt trained invoice model.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support\n\nSee [here][] for fields found on a invoice.\n\n**Code sample**\n\n```java\nFile invoice = new File(\"local/file_path/invoice.jpg\");\n boolean includeFieldElements = true;\n // Utility method to convert input stream to Byte buffer\n ByteArrayInputStream inputStream = new ByteArrayInputStream(Files.readAllBytes(invoice.toPath()));\n // if training polling operation completed, retrieve the final result.\n formRecognizerClient.beginRecognizeInvoices(inputStream,\n     invoice.length(),\n     new RecognizeInvoicesOptions()\n         .setContentType(FormContentType.IMAGE_JPEG)\n         .setFieldElementsIncluded(includeFieldElements)\n         .setPollInterval(Duration.ofSeconds(5)),\n     Context.NONE)\n     .getFinalResult()\n     .stream()\n     .map(RecognizedForm::getFields)\n     .forEach(recognizedFields -> {\n         FormField customAddrFormField = recognizedFields.get(\"CustomerAddress\");\n         if (customAddrFormField != null) {\n             if (FieldValueType.STRING == customAddrFormField.getValue().getValueType()) {\n                 System.out.printf(\"Customer Address: %s%n\", customAddrFormField.getValue().asString());\n             }\n         }\n         FormField invoiceDateFormField = recognizedFields.get(\"InvoiceDate\");\n         if (invoiceDateFormField != null) {\n             if (FieldValueType.DATE == invoiceDateFormField.getValue().getValueType()) {\n                 LocalDate invoiceDate = invoiceDateFormField.getValue().asDate();\n                 System.out.printf(\"Invoice Date: %s, confidence: %.2f%n\",\n                     invoiceDate, invoiceDateFormField.getConfidence());\n             }\n         }\n     });\n```\n\n\n[here]: https://aka.ms/formrecognizer/invoicefields"
  parameters:
  - description: "The data of the invoice to recognize invoice related information from."
    name: "invoice"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The additional configurable <xref uid=\"com.azure.ai.formrecognizer.models.RecognizeInvoicesOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref>\n that may be passed when analyzing a invoice."
    name: "recognizeInvoicesOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.models.RecognizeInvoicesOptions?alt=com.azure.ai.formrecognizer.models.RecognizeInvoicesOptions&text=RecognizeInvoicesOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<FormRecognizerOperationResult,List<RecognizedForm>> beginRecognizeInvoices(InputStream invoice, long length, RecognizeInvoicesOptions recognizeInvoicesOptions, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> that polls the recognize invoice operation until it has completed, has failed,\n or has been cancelled. The completed operation returns a list of <xref uid=\"com.azure.ai.formrecognizer.models.RecognizedForm\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RecognizedForm\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.FormRecognizerOperationResult?alt=com.azure.ai.formrecognizer.models.FormRecognizerOperationResult&text=FormRecognizerOperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.models.RecognizedForm?alt=com.azure.ai.formrecognizer.models.RecognizedForm&text=RecognizedForm\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.formrecognizer"
artifact: com.azure:azure-ai-formrecognizer:3.1.0-beta.1
