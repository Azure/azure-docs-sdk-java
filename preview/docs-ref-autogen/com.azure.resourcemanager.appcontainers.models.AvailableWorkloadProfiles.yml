### YamlMime:JavaType
uid: "com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfiles"
fullName: "com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfiles"
name: "AvailableWorkloadProfiles"
nameWithType: "AvailableWorkloadProfiles"
summary: "Resource collection API of Available<wbr>Workload<wbr>Profiles."
syntax: "public interface **AvailableWorkloadProfiles**"
methods:
- uid: "com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfiles.get(java.lang.String)"
  fullName: "com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfiles.get(String location)"
  name: "get(String location)"
  nameWithType: "AvailableWorkloadProfiles.get(String location)"
  summary: "Get available workload profiles by location."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of Azure region."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<AvailableWorkloadProfile> get(String location)"
  desc: "Get available workload profiles by location.\n\nGet all available workload profiles for a location."
  returns:
    description: "all available workload profiles for a location as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfile?alt=com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfile&text=AvailableWorkloadProfile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfiles.get(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfiles.get(String location, Context context)"
  name: "get(String location, Context context)"
  nameWithType: "AvailableWorkloadProfiles.get(String location, Context context)"
  summary: "Get available workload profiles by location."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of Azure region."
    name: "location"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<AvailableWorkloadProfile> get(String location, Context context)"
  desc: "Get available workload profiles by location.\n\nGet all available workload profiles for a location."
  returns:
    description: "all available workload profiles for a location as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfile?alt=com.azure.resourcemanager.appcontainers.models.AvailableWorkloadProfile&text=AvailableWorkloadProfile\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Resource collection API of AvailableWorkloadProfiles."
metadata: {}
package: "com.azure.resourcemanager.appcontainers.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appcontainers:1.0.0-beta.4
