### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket"
fullName: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket"
name: "WebSocket"
nameWithType: "WebSocket"
syntax: "public interface WebSocket"
methods:
- uid: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.configure(java.lang.String,java.lang.String,int,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.microsoft.azure.sdk.iot.deps.ws.WebSocketHandler)"
  fullName: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.configure(String host, String path, int port, String protocol, Map<String,String> additionalHeaders, WebSocketHandler webSocketHandler)"
  name: "configure(String host, String path, int port, String protocol, Map<String,String> additionalHeaders, WebSocketHandler webSocketHandler)"
  nameWithType: "WebSocket.configure(String host, String path, int port, String protocol, Map<String,String> additionalHeaders, WebSocketHandler webSocketHandler)"
  summary: "Configure Web<wbr>Socket connection"
  modifiers:
  - "abstract"
  parameters:
  - description: "the hots name"
    name: "host"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the resource path"
    name: "path"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the port"
    name: "port"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "the base protocol"
    name: "protocol"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Map of additional headers"
    name: "additionalHeaders"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "the web socket handler"
    name: "webSocketHandler"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.ws.WebSocketHandler?alt=com.microsoft.azure.sdk.iot.deps.ws.WebSocketHandler&text=WebSocketHandler\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void configure(String host, String path, int port, String protocol, Map<String,String> additionalHeaders, WebSocketHandler webSocketHandler)"
  desc: "Configure WebSocket connection"
- uid: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getEnabled()"
  fullName: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getEnabled()"
  name: "getEnabled()"
  nameWithType: "WebSocket.getEnabled()"
  summary: "Access if Web<wbr>Socket enabled ."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean getEnabled()"
  desc: "Access if WebSocket enabled ."
  returns:
    description: "True if WebSocket enabled otherwise false."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getInputBuffer()"
  fullName: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getInputBuffer()"
  name: "getInputBuffer()"
  nameWithType: "WebSocket.getInputBuffer()"
  summary: "Access the input buffer (read only)."
  modifiers:
  - "abstract"
  syntax: "public abstract ByteBuffer getInputBuffer()"
  desc: "Access the input buffer (read only)."
  returns:
    description: "The current input buffer."
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getOutputBuffer()"
  fullName: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getOutputBuffer()"
  name: "getOutputBuffer()"
  nameWithType: "WebSocket.getOutputBuffer()"
  summary: "Access the output buffer (read only)."
  modifiers:
  - "abstract"
  syntax: "public abstract ByteBuffer getOutputBuffer()"
  desc: "Access the output buffer (read only)."
  returns:
    description: "The current output buffer."
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getPingBuffer()"
  fullName: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getPingBuffer()"
  name: "getPingBuffer()"
  nameWithType: "WebSocket.getPingBuffer()"
  summary: "Access the ping buffer (read only)."
  modifiers:
  - "abstract"
  syntax: "public abstract ByteBuffer getPingBuffer()"
  desc: "Access the ping buffer (read only)."
  returns:
    description: "The ping input buffer."
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getState()"
  fullName: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getState()"
  name: "getState()"
  nameWithType: "WebSocket.getState()"
  summary: "Access the current state of the layer."
  modifiers:
  - "abstract"
  syntax: "public abstract WebSocket.WebSocketState getState()"
  desc: "Access the current state of the layer."
  returns:
    description: "The state of the WebSocket layer."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.ws.WebSocket.WebSocketState?alt=com.microsoft.azure.sdk.iot.deps.ws.WebSocket.WebSocketState&text=WebSocketState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getWebSocketHandler()"
  fullName: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getWebSocketHandler()"
  name: "getWebSocketHandler()"
  nameWithType: "WebSocket.getWebSocketHandler()"
  summary: "Access the handler for Web<wbr>Socket functions."
  modifiers:
  - "abstract"
  syntax: "public abstract WebSocketHandler getWebSocketHandler()"
  desc: "Access the handler for WebSocket functions."
  returns:
    description: "The WebSocket handler class."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.ws.WebSocketHandler?alt=com.microsoft.azure.sdk.iot.deps.ws.WebSocketHandler&text=WebSocketHandler\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getWsInputBuffer()"
  fullName: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.getWsInputBuffer()"
  name: "getWsInputBuffer()"
  nameWithType: "WebSocket.getWsInputBuffer()"
  summary: "Access the websocket input buffer (read only)."
  modifiers:
  - "abstract"
  syntax: "public abstract ByteBuffer getWsInputBuffer()"
  desc: "Access the websocket input buffer (read only)."
  returns:
    description: "The wsInputBuffer input buffer."
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.unwrapBuffer(java.nio.ByteBuffer)"
  fullName: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.unwrapBuffer(ByteBuffer buffer)"
  name: "unwrapBuffer(ByteBuffer buffer)"
  nameWithType: "WebSocket.unwrapBuffer(ByteBuffer buffer)"
  summary: "Remove Web<wbr>Socket frame from the given buffer"
  modifiers:
  - "abstract"
  parameters:
  - description: "the buffer to unwrap"
    name: "buffer"
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WebSocketHandler.WebsocketTuple unwrapBuffer(ByteBuffer buffer)"
  desc: "Remove WebSocket frame from the given buffer"
  returns:
    description: "The payload of the given WebSocket frame."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.deps.ws.WebSocketHandler.WebsocketTuple?alt=com.microsoft.azure.sdk.iot.deps.ws.WebSocketHandler.WebsocketTuple&text=WebsocketTuple\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.wrapBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer)"
  fullName: "com.microsoft.azure.sdk.iot.deps.ws.WebSocket.wrapBuffer(ByteBuffer srcBuffer, ByteBuffer dstBuffer)"
  name: "wrapBuffer(ByteBuffer srcBuffer, ByteBuffer dstBuffer)"
  nameWithType: "WebSocket.wrapBuffer(ByteBuffer srcBuffer, ByteBuffer dstBuffer)"
  summary: "Add Web<wbr>Socket frame to send the given buffer"
  modifiers:
  - "abstract"
  parameters:
  - description: "the source buffer"
    name: "srcBuffer"
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
  - description: "the destination buffer"
    name: "dstBuffer"
    type: "<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void wrapBuffer(ByteBuffer srcBuffer, ByteBuffer dstBuffer)"
  desc: "Add WebSocket frame to send the given buffer"
type: "interface"
metadata: {}
package: "com.microsoft.azure.sdk.iot.deps.ws"
artifact: com.microsoft.azure.sdk.iot:iot-deps-preview:1.1.0
