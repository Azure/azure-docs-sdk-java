### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.escape.CharEscaper"
fullName: "com.azure.cosmos.implementation.guava25.escape.CharEscaper"
name: "CharEscaper"
nameWithType: "CharEscaper"
summary: "An object that converts literal text into a format safe for inclusion in a particular context (such as an XML document). Typically (but not always), the inverse process of \"unescaping\" the text is performed automatically by the relevant parser.\n\nFor example, an XML escaper would convert the literal string `\"Foo\"` into `\"Foo<Bar>\"` to prevent `\"\"` from being confused with an XML tag. When the resulting XML document is parsed, the parser API will return this text as the original literal string `\"Foo\"`.\n\nA `CharEscaper` instance is required to be stateless, and safe when used concurrently by multiple threads.\n\nPopular escapers are defined as constants in classes like <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.html.HtmlEscapers\"></xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.xml.XmlEscapers\"></xref>. To create your own escapers extend this class and implement the <xref uid=\"com.azure.cosmos.implementation.guava25.escape.CharEscaper.escape(char)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#escape(char)\"></xref> method."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.cosmos.implementation.guava25.escape.Escaper\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.cosmos.implementation.guava25.escape.Escaper.asFunction()"
- "com.azure.cosmos.implementation.guava25.escape.Escaper.escape(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class CharEscaper extends Escaper"
constructors:
- "com.azure.cosmos.implementation.guava25.escape.CharEscaper.CharEscaper()"
methods:
- "com.azure.cosmos.implementation.guava25.escape.CharEscaper.escape(char)"
- "com.azure.cosmos.implementation.guava25.escape.CharEscaper.escape(java.lang.String)"
- "com.azure.cosmos.implementation.guava25.escape.CharEscaper.escapeSlow(java.lang.String,int)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.escape"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
