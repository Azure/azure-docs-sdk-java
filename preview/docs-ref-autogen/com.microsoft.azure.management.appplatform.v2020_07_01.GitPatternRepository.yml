### YamlMime:JavaType
uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository"
fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository"
name: "GitPatternRepository"
nameWithType: "GitPatternRepository"
summary: "Git repository property payload."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class GitPatternRepository"
constructors:
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.GitPatternRepository()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.GitPatternRepository()"
  name: "GitPatternRepository()"
  nameWithType: "GitPatternRepository.GitPatternRepository()"
  syntax: "public GitPatternRepository()"
methods:
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.hostKey()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.hostKey()"
  name: "hostKey()"
  nameWithType: "GitPatternRepository.hostKey()"
  summary: "Get public ssh<wbr>Key of git repository."
  syntax: "public String hostKey()"
  desc: "Get public sshKey of git repository."
  returns:
    description: "the hostKey value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.hostKeyAlgorithm()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.hostKeyAlgorithm()"
  name: "hostKeyAlgorithm()"
  nameWithType: "GitPatternRepository.hostKeyAlgorithm()"
  summary: "Get ssh<wbr>Key algorithm of git repository."
  syntax: "public String hostKeyAlgorithm()"
  desc: "Get sshKey algorithm of git repository."
  returns:
    description: "the hostKeyAlgorithm value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.label()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.label()"
  name: "label()"
  nameWithType: "GitPatternRepository.label()"
  summary: "Get label of the repository."
  syntax: "public String label()"
  desc: "Get label of the repository."
  returns:
    description: "the label value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.name()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.name()"
  name: "name()"
  nameWithType: "GitPatternRepository.name()"
  summary: "Get name of the repository."
  syntax: "public String name()"
  desc: "Get name of the repository."
  returns:
    description: "the name value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.password()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.password()"
  name: "password()"
  nameWithType: "GitPatternRepository.password()"
  summary: "Get password of git repository basic auth."
  syntax: "public String password()"
  desc: "Get password of git repository basic auth."
  returns:
    description: "the password value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.pattern()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.pattern()"
  name: "pattern()"
  nameWithType: "GitPatternRepository.pattern()"
  summary: "Get collection of pattern of the repository."
  syntax: "public List<String> pattern()"
  desc: "Get collection of pattern of the repository."
  returns:
    description: "the pattern value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.privateKey()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.privateKey()"
  name: "privateKey()"
  nameWithType: "GitPatternRepository.privateKey()"
  summary: "Get private ssh<wbr>Key algorithm of git repository."
  syntax: "public String privateKey()"
  desc: "Get private sshKey algorithm of git repository."
  returns:
    description: "the privateKey value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.searchPaths()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.searchPaths()"
  name: "searchPaths()"
  nameWithType: "GitPatternRepository.searchPaths()"
  summary: "Get searching path of the repository."
  syntax: "public List<String> searchPaths()"
  desc: "Get searching path of the repository."
  returns:
    description: "the searchPaths value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.strictHostKeyChecking()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.strictHostKeyChecking()"
  name: "strictHostKeyChecking()"
  nameWithType: "GitPatternRepository.strictHostKeyChecking()"
  summary: "Get strict host key checking or not."
  syntax: "public Boolean strictHostKeyChecking()"
  desc: "Get strict host key checking or not."
  returns:
    description: "the strictHostKeyChecking value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.uri()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.uri()"
  name: "uri()"
  nameWithType: "GitPatternRepository.uri()"
  summary: "Get uRI of the repository."
  syntax: "public String uri()"
  desc: "Get uRI of the repository."
  returns:
    description: "the uri value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.username()"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.username()"
  name: "username()"
  nameWithType: "GitPatternRepository.username()"
  summary: "Get username of git repository basic auth."
  syntax: "public String username()"
  desc: "Get username of git repository basic auth."
  returns:
    description: "the username value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withHostKey(java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withHostKey(String hostKey)"
  name: "withHostKey(String hostKey)"
  nameWithType: "GitPatternRepository.withHostKey(String hostKey)"
  summary: "Set public ssh<wbr>Key of git repository."
  parameters:
  - description: "the hostKey value to set"
    name: "hostKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitPatternRepository withHostKey(String hostKey)"
  desc: "Set public sshKey of git repository."
  returns:
    description: "the GitPatternRepository object itself."
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository?alt=com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository&text=GitPatternRepository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withHostKeyAlgorithm(java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withHostKeyAlgorithm(String hostKeyAlgorithm)"
  name: "withHostKeyAlgorithm(String hostKeyAlgorithm)"
  nameWithType: "GitPatternRepository.withHostKeyAlgorithm(String hostKeyAlgorithm)"
  summary: "Set ssh<wbr>Key algorithm of git repository."
  parameters:
  - description: "the hostKeyAlgorithm value to set"
    name: "hostKeyAlgorithm"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitPatternRepository withHostKeyAlgorithm(String hostKeyAlgorithm)"
  desc: "Set sshKey algorithm of git repository."
  returns:
    description: "the GitPatternRepository object itself."
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository?alt=com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository&text=GitPatternRepository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withLabel(java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withLabel(String label)"
  name: "withLabel(String label)"
  nameWithType: "GitPatternRepository.withLabel(String label)"
  summary: "Set label of the repository."
  parameters:
  - description: "the label value to set"
    name: "label"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitPatternRepository withLabel(String label)"
  desc: "Set label of the repository."
  returns:
    description: "the GitPatternRepository object itself."
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository?alt=com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository&text=GitPatternRepository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withName(java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withName(String name)"
  name: "withName(String name)"
  nameWithType: "GitPatternRepository.withName(String name)"
  summary: "Set name of the repository."
  parameters:
  - description: "the name value to set"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitPatternRepository withName(String name)"
  desc: "Set name of the repository."
  returns:
    description: "the GitPatternRepository object itself."
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository?alt=com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository&text=GitPatternRepository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withPassword(java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withPassword(String password)"
  name: "withPassword(String password)"
  nameWithType: "GitPatternRepository.withPassword(String password)"
  summary: "Set password of git repository basic auth."
  parameters:
  - description: "the password value to set"
    name: "password"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitPatternRepository withPassword(String password)"
  desc: "Set password of git repository basic auth."
  returns:
    description: "the GitPatternRepository object itself."
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository?alt=com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository&text=GitPatternRepository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withPattern(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withPattern(List<String> pattern)"
  name: "withPattern(List<String> pattern)"
  nameWithType: "GitPatternRepository.withPattern(List<String> pattern)"
  summary: "Set collection of pattern of the repository."
  parameters:
  - description: "the pattern value to set"
    name: "pattern"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public GitPatternRepository withPattern(List<String> pattern)"
  desc: "Set collection of pattern of the repository."
  returns:
    description: "the GitPatternRepository object itself."
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository?alt=com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository&text=GitPatternRepository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withPrivateKey(java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withPrivateKey(String privateKey)"
  name: "withPrivateKey(String privateKey)"
  nameWithType: "GitPatternRepository.withPrivateKey(String privateKey)"
  summary: "Set private ssh<wbr>Key algorithm of git repository."
  parameters:
  - description: "the privateKey value to set"
    name: "privateKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitPatternRepository withPrivateKey(String privateKey)"
  desc: "Set private sshKey algorithm of git repository."
  returns:
    description: "the GitPatternRepository object itself."
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository?alt=com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository&text=GitPatternRepository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withSearchPaths(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withSearchPaths(List<String> searchPaths)"
  name: "withSearchPaths(List<String> searchPaths)"
  nameWithType: "GitPatternRepository.withSearchPaths(List<String> searchPaths)"
  summary: "Set searching path of the repository."
  parameters:
  - description: "the searchPaths value to set"
    name: "searchPaths"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public GitPatternRepository withSearchPaths(List<String> searchPaths)"
  desc: "Set searching path of the repository."
  returns:
    description: "the GitPatternRepository object itself."
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository?alt=com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository&text=GitPatternRepository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withStrictHostKeyChecking(java.lang.Boolean)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withStrictHostKeyChecking(Boolean strictHostKeyChecking)"
  name: "withStrictHostKeyChecking(Boolean strictHostKeyChecking)"
  nameWithType: "GitPatternRepository.withStrictHostKeyChecking(Boolean strictHostKeyChecking)"
  summary: "Set strict host key checking or not."
  parameters:
  - description: "the strictHostKeyChecking value to set"
    name: "strictHostKeyChecking"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitPatternRepository withStrictHostKeyChecking(Boolean strictHostKeyChecking)"
  desc: "Set strict host key checking or not."
  returns:
    description: "the GitPatternRepository object itself."
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository?alt=com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository&text=GitPatternRepository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withUri(java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withUri(String uri)"
  name: "withUri(String uri)"
  nameWithType: "GitPatternRepository.withUri(String uri)"
  summary: "Set uRI of the repository."
  parameters:
  - description: "the uri value to set"
    name: "uri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitPatternRepository withUri(String uri)"
  desc: "Set uRI of the repository."
  returns:
    description: "the GitPatternRepository object itself."
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository?alt=com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository&text=GitPatternRepository\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withUsername(java.lang.String)"
  fullName: "com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository.withUsername(String username)"
  name: "withUsername(String username)"
  nameWithType: "GitPatternRepository.withUsername(String username)"
  summary: "Set username of git repository basic auth."
  parameters:
  - description: "the username value to set"
    name: "username"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public GitPatternRepository withUsername(String username)"
  desc: "Set username of git repository basic auth."
  returns:
    description: "the GitPatternRepository object itself."
    type: "<xref href=\"com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository?alt=com.microsoft.azure.management.appplatform.v2020_07_01.GitPatternRepository&text=GitPatternRepository\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Git repository property payload."
metadata: {}
package: "com.microsoft.azure.management.appplatform.v2020_07_01"
artifact: com.microsoft.azure.appplatform.v2020_07_01:azure-mgmt-appplatform:1.0.0-beta
