### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform.Factory"
  id: "Factory"
  parent: "com.azure.security.keyvault.keys.cryptography"
  children:
  - "com.azure.security.keyvault.keys.cryptography.ICryptoTransform.Factory.create(T)"
  langs:
  - "java"
  name: "ICryptoTransform.Factory<T>"
  nameWithType: "ICryptoTransform.Factory<T>"
  fullName: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform.Factory<T>"
  type: "Interface"
  package: "com.azure.security.keyvault.keys.cryptography"
  summary: "Factory Strategy for `ICryptoTransform` instances"
  syntax:
    content: "public static interface ICryptoTransform.Factory<T>"
    typeParameters:
    - id: "T"
- uid: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform.Factory.create(T)"
  id: "create(T)"
  parent: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform.Factory"
  langs:
  - "java"
  name: "create(T context)"
  nameWithType: "ICryptoTransform.Factory<T>.create(T context)"
  fullName: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform.Factory<T>.create(T context)"
  overload: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform.Factory.create*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public abstract ICryptoTransform create(T context)"
    parameters:
    - id: "context"
      type: "T"
      description: "The context required for the creation of a new ICryptoTransform instance"
    return:
      type: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform"
      description: "The new instance."
  exceptions:
  - type: "java.security.InvalidKeyException"
    description: "if a particular key is invalid (invalid encoding, wrong length, uninitialized, etc)."
  - type: "javax.crypto.NoSuchPaddingException"
    description: "if a particular key is invalid (invalid encoding, wrong length, uninitialized, etc)."
  - type: "java.security.NoSuchAlgorithmException"
    description: "if a particular key is invalid (invalid encoding, wrong length, uninitialized, etc)."
  - type: "java.security.InvalidAlgorithmParameterException"
    description: "if a particular key is invalid (invalid encoding, wrong length, uninitialized, etc)."
references:
- uid: "java.security.InvalidKeyException"
  spec.java:
  - uid: "java.security.InvalidKeyException"
    name: "InvalidKeyException"
    fullName: "java.security.InvalidKeyException"
- uid: "javax.crypto.NoSuchPaddingException"
  spec.java:
  - uid: "javax.crypto.NoSuchPaddingException"
    name: "NoSuchPaddingException"
    fullName: "javax.crypto.NoSuchPaddingException"
- uid: "java.security.NoSuchAlgorithmException"
  spec.java:
  - uid: "java.security.NoSuchAlgorithmException"
    name: "NoSuchAlgorithmException"
    fullName: "java.security.NoSuchAlgorithmException"
- uid: "java.security.InvalidAlgorithmParameterException"
  spec.java:
  - uid: "java.security.InvalidAlgorithmParameterException"
    name: "InvalidAlgorithmParameterException"
    fullName: "java.security.InvalidAlgorithmParameterException"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform"
  name: "ICryptoTransform"
  nameWithType: "ICryptoTransform"
  fullName: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform"
- uid: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform.Factory.create*"
  name: "create"
  nameWithType: "ICryptoTransform.Factory<T>.create"
  fullName: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform.Factory<T>.create"
  package: "com.azure.security.keyvault.keys.cryptography"
