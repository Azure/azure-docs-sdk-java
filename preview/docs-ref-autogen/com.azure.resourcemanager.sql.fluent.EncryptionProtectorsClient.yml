### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  id: EncryptionProtectorsClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent
  children:
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.EncryptionProtectorsClient(com.azure.resourcemanager.sql.SqlManagementClient)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidate(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidate(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPolling(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.get(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.get(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServer(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServer(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerSinglePageAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidate(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidate(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  langs:
  - java
  name: EncryptionProtectorsClient
  nameWithType: EncryptionProtectorsClient
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  type: Class
  package: com.azure.resourcemanager.sql.fluent
  summary: An instance of this class provides access to all the operations defined in EncryptionProtectors.
  syntax:
    content: public final class EncryptionProtectorsClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.EncryptionProtectorsClient(com.azure.resourcemanager.sql.SqlManagementClient)
  id: EncryptionProtectorsClient(com.azure.resourcemanager.sql.SqlManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: EncryptionProtectorsClient(SqlManagementClient client)
  nameWithType: EncryptionProtectorsClient.EncryptionProtectorsClient(SqlManagementClient client)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.EncryptionProtectorsClient(SqlManagementClient client)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.EncryptionProtectorsClient*
  type: Constructor
  package: com.azure.resourcemanager.sql.fluent
  summary: Initializes an instance of EncryptionProtectorsClient.
  syntax:
    content: public EncryptionProtectorsClient(SqlManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.sql.SqlManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  nameWithType: EncryptionProtectorsClient.beginCreateOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public PollerFlux<PollResult<EncryptionProtectorInner>,EncryptionProtectorInner> beginCreateOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  nameWithType: EncryptionProtectorsClient.beginCreateOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public PollerFlux<PollResult<EncryptionProtectorInner>,EncryptionProtectorInner> beginCreateOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  id: beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  nameWithType: EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public EncryptionProtectorInner beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  nameWithType: EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public EncryptionProtectorInner beginCreateOrUpdateWithoutPolling(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  id: beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  nameWithType: EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public Mono<EncryptionProtectorInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  nameWithType: EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public Mono<EncryptionProtectorInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  id: beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  nameWithType: EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public Mono<Response<EncryptionProtectorInner>> beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>>
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  nameWithType: EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public Mono<Response<EncryptionProtectorInner>> beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>>
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidate(java.lang.String,java.lang.String)
  id: beginRevalidate(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginRevalidate(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.beginRevalidate(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidate(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginRevalidate(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidate(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginRevalidate(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginRevalidate(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.beginRevalidate(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidate(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginRevalidate(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPolling(java.lang.String,java.lang.String)
  id: beginRevalidateWithoutPolling(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginRevalidateWithoutPolling(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.beginRevalidateWithoutPolling(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPolling(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public void beginRevalidateWithoutPolling(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginRevalidateWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginRevalidateWithoutPolling(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.beginRevalidateWithoutPolling(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPolling(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public void beginRevalidateWithoutPolling(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync(java.lang.String,java.lang.String)
  id: beginRevalidateWithoutPollingAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginRevalidateWithoutPollingAsync(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public Mono<Void> beginRevalidateWithoutPollingAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginRevalidateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginRevalidateWithoutPollingAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public Mono<Void> beginRevalidateWithoutPollingAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  id: beginRevalidateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginRevalidateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public Mono<Response<Void>> beginRevalidateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginRevalidateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: beginRevalidateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public Mono<Response<Void>> beginRevalidateWithoutPollingWithResponseAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  nameWithType: EncryptionProtectorsClient.createOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public EncryptionProtectorInner createOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  nameWithType: EncryptionProtectorsClient.createOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public EncryptionProtectorInner createOrUpdate(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  nameWithType: EncryptionProtectorsClient.createOrUpdateAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public Mono<EncryptionProtectorInner> createOrUpdateAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  nameWithType: EncryptionProtectorsClient.createOrUpdateAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public Mono<EncryptionProtectorInner> createOrUpdateAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  nameWithType: EncryptionProtectorsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  nameWithType: EncryptionProtectorsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Updates an existing encryption protector.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String serverName, EncryptionProtectorInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: parameters
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: The server encryption protector.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.get(java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: get(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.get(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.get(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.get*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a server encryption protector.
  syntax:
    content: public EncryptionProtectorInner get(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: a server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.get(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: get(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: get(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.get(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.get(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.get*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a server encryption protector.
  syntax:
    content: public EncryptionProtectorInner get(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
      description: a server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getAsync(java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.getAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a server encryption protector.
  syntax:
    content: public Mono<EncryptionProtectorInner> getAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
      description: a server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: getAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.getAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a server encryption protector.
  syntax:
    content: public Mono<EncryptionProtectorInner> getAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
      description: a server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getWithResponseAsync(java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.getWithResponseAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getWithResponseAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a server encryption protector.
  syntax:
    content: public Mono<Response<EncryptionProtectorInner>> getWithResponseAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>>
      description: a server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.getWithResponseAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getWithResponseAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a server encryption protector.
  syntax:
    content: public Mono<Response<EncryptionProtectorInner>> getWithResponseAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>>
      description: a server encryption protector.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServer(java.lang.String,java.lang.String)
  id: listByServer(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: listByServer(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.listByServer(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServer(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServer*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of server encryption protectors.
  syntax:
    content: public PagedIterable<EncryptionProtectorInner> listByServer(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
      description: a list of server encryption protectors.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServer(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByServer(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: listByServer(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.listByServer(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServer(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServer*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of server encryption protectors.
  syntax:
    content: public PagedIterable<EncryptionProtectorInner> listByServer(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
      description: a list of server encryption protectors.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerAsync(java.lang.String,java.lang.String)
  id: listByServerAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: listByServerAsync(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.listByServerAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of server encryption protectors.
  syntax:
    content: public PagedFlux<EncryptionProtectorInner> listByServerAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
      description: a list of server encryption protectors.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByServerAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: listByServerAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.listByServerAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of server encryption protectors.
  syntax:
    content: public PagedFlux<EncryptionProtectorInner> listByServerAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
      description: a list of server encryption protectors.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerNextSinglePageAsync(java.lang.String)
  id: listByServerNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: listByServerNextSinglePageAsync(String nextLink)
  nameWithType: EncryptionProtectorsClient.listByServerNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<EncryptionProtectorInner>> listByServerNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>>
      description: a list of server encryption protectors.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listByServerNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: listByServerNextSinglePageAsync(String nextLink, Context context)
  nameWithType: EncryptionProtectorsClient.listByServerNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<EncryptionProtectorInner>> listByServerNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>>
      description: a list of server encryption protectors.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerSinglePageAsync(java.lang.String,java.lang.String)
  id: listByServerSinglePageAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: listByServerSinglePageAsync(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.listByServerSinglePageAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerSinglePageAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of server encryption protectors.
  syntax:
    content: public Mono<PagedResponse<EncryptionProtectorInner>> listByServerSinglePageAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>>
      description: a list of server encryption protectors.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listByServerSinglePageAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: listByServerSinglePageAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.listByServerSinglePageAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerSinglePageAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Gets a list of server encryption protectors.
  syntax:
    content: public Mono<PagedResponse<EncryptionProtectorInner>> listByServerSinglePageAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>>
      description: a list of server encryption protectors.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidate(java.lang.String,java.lang.String)
  id: revalidate(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: revalidate(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.revalidate(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidate(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public void revalidate(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidate(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: revalidate(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: revalidate(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.revalidate(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidate(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidate*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public void revalidate(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateAsync(java.lang.String,java.lang.String)
  id: revalidateAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: revalidateAsync(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.revalidateAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public Mono<Void> revalidateAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: revalidateAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: revalidateAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.revalidateAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public Mono<Void> revalidateAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateWithResponseAsync(java.lang.String,java.lang.String)
  id: revalidateWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: revalidateWithResponseAsync(String resourceGroupName, String serverName)
  nameWithType: EncryptionProtectorsClient.revalidateWithResponseAsync(String resourceGroupName, String serverName)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateWithResponseAsync(String resourceGroupName, String serverName)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> revalidateWithResponseAsync(String resourceGroupName, String serverName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: revalidateWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.0.0-beta.2
  parent: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient
  langs:
  - java
  name: revalidateWithResponseAsync(String resourceGroupName, String serverName, Context context)
  nameWithType: EncryptionProtectorsClient.revalidateWithResponseAsync(String resourceGroupName, String serverName, Context context)
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateWithResponseAsync(String resourceGroupName, String serverName, Context context)
  overload: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.sql.fluent
  summary: Revalidates an existing encryption protector.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> revalidateWithResponseAsync(String resourceGroupName, String serverName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group that contains the resource. You can obtain this value
             from the Azure Resource Manager API or the portal.
    - id: serverName
      type: java.lang.String
      description: The name of the server.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
references:
- uid: com.azure.resourcemanager.sql.SqlManagementClient
  name: SqlManagementClient
  nameWithType: SqlManagementClient
  fullName: com.azure.resourcemanager.sql.SqlManagementClient
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.EncryptionProtectorsClient*
  name: EncryptionProtectorsClient
  nameWithType: EncryptionProtectorsClient.EncryptionProtectorsClient
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.EncryptionProtectorsClient
  package: com.azure.resourcemanager.sql.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateWithResponseAsync*
  name: revalidateWithResponseAsync
  nameWithType: EncryptionProtectorsClient.revalidateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidate*
  name: beginRevalidate
  nameWithType: EncryptionProtectorsClient.beginRevalidate
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidate
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateAsync*
  name: revalidateAsync
  nameWithType: EncryptionProtectorsClient.revalidateAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidateAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidate*
  name: revalidate
  nameWithType: EncryptionProtectorsClient.revalidate
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.revalidate
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
    name: EncryptionProtectorInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerSinglePageAsync*
  name: listByServerSinglePageAsync
  nameWithType: EncryptionProtectorsClient.listByServerSinglePageAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerSinglePageAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
    name: EncryptionProtectorInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerAsync*
  name: listByServerAsync
  nameWithType: EncryptionProtectorsClient.listByServerAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
    name: EncryptionProtectorInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServer*
  name: listByServer
  nameWithType: EncryptionProtectorsClient.listByServer
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServer
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
    name: EncryptionProtectorInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: EncryptionProtectorsClient.getWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
    name: EncryptionProtectorInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getAsync*
  name: getAsync
  nameWithType: EncryptionProtectorsClient.getAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.getAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
  name: EncryptionProtectorInner
  nameWithType: EncryptionProtectorInner
  fullName: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.get*
  name: get
  nameWithType: EncryptionProtectorsClient.get
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.get
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: EncryptionProtectorsClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
    name: EncryptionProtectorInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
    name: EncryptionProtectorInner
    fullName: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: EncryptionProtectorsClient.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdate
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: EncryptionProtectorsClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdateAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: EncryptionProtectorsClient.createOrUpdate
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.createOrUpdate
  package: com.azure.resourcemanager.sql.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync*
  name: beginRevalidateWithoutPollingWithResponseAsync
  nameWithType: EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync*
  name: beginRevalidateWithoutPollingAsync
  nameWithType: EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPollingAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPolling*
  name: beginRevalidateWithoutPolling
  nameWithType: EncryptionProtectorsClient.beginRevalidateWithoutPolling
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginRevalidateWithoutPolling
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync
  nameWithType: EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync*
  name: beginCreateOrUpdateWithoutPollingAsync
  nameWithType: EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPollingAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling*
  name: beginCreateOrUpdateWithoutPolling
  nameWithType: EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.beginCreateOrUpdateWithoutPolling
  package: com.azure.resourcemanager.sql.fluent
- uid: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerNextSinglePageAsync*
  name: listByServerNextSinglePageAsync
  nameWithType: EncryptionProtectorsClient.listByServerNextSinglePageAsync
  fullName: com.azure.resourcemanager.sql.fluent.EncryptionProtectorsClient.listByServerNextSinglePageAsync
  package: com.azure.resourcemanager.sql.fluent
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
  name: EncryptionProtectorInner>,EncryptionProtectorInner
  nameWithType: EncryptionProtectorInner>,EncryptionProtectorInner
  fullName: com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner>,com.azure.resourcemanager.sql.fluent.inner.EncryptionProtectorInner
