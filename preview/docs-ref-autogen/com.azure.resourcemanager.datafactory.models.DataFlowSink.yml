### YamlMime:JavaType
uid: "com.azure.resourcemanager.datafactory.models.DataFlowSink"
fullName: "com.azure.resourcemanager.datafactory.models.DataFlowSink"
name: "DataFlowSink"
nameWithType: "DataFlowSink"
summary: "Transformation for data flow sink."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.datafactory.models.Transformation?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.datafactory.models.Transformation.dataset()"
- "com.azure.resourcemanager.datafactory.models.Transformation.description()"
- "com.azure.resourcemanager.datafactory.models.Transformation.flowlet()"
- "com.azure.resourcemanager.datafactory.models.Transformation.linkedService()"
- "com.azure.resourcemanager.datafactory.models.Transformation.name()"
- "com.azure.resourcemanager.datafactory.models.Transformation.validate()"
- "com.azure.resourcemanager.datafactory.models.Transformation.withDataset(com.azure.resourcemanager.datafactory.models.DatasetReference)"
- "com.azure.resourcemanager.datafactory.models.Transformation.withDescription(java.lang.String)"
- "com.azure.resourcemanager.datafactory.models.Transformation.withFlowlet(com.azure.resourcemanager.datafactory.models.DataFlowReference)"
- "com.azure.resourcemanager.datafactory.models.Transformation.withLinkedService(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
- "com.azure.resourcemanager.datafactory.models.Transformation.withName(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class DataFlowSink extends Transformation"
constructors:
- uid: "com.azure.resourcemanager.datafactory.models.DataFlowSink.DataFlowSink()"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlowSink.DataFlowSink()"
  name: "DataFlowSink()"
  nameWithType: "DataFlowSink.DataFlowSink()"
  syntax: "public DataFlowSink()"
methods:
- uid: "com.azure.resourcemanager.datafactory.models.DataFlowSink.rejectedDataLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlowSink.rejectedDataLinkedService()"
  name: "rejectedDataLinkedService()"
  nameWithType: "DataFlowSink.rejectedDataLinkedService()"
  summary: "Get the rejected<wbr>Data<wbr>Linked<wbr>Service property: Rejected data linked service reference."
  syntax: "public LinkedServiceReference rejectedDataLinkedService()"
  desc: "Get the rejectedDataLinkedService property: Rejected data linked service reference."
  returns:
    description: "the rejectedDataLinkedService value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlowSink.schemaLinkedService()"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlowSink.schemaLinkedService()"
  name: "schemaLinkedService()"
  nameWithType: "DataFlowSink.schemaLinkedService()"
  summary: "Get the schema<wbr>Linked<wbr>Service property: Schema linked service reference."
  syntax: "public LinkedServiceReference schemaLinkedService()"
  desc: "Get the schemaLinkedService property: Schema linked service reference."
  returns:
    description: "the schemaLinkedService value."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlowSink.validate()"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlowSink.validate()"
  name: "validate()"
  nameWithType: "DataFlowSink.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.datafactory.models.Transformation.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withDataset(com.azure.resourcemanager.datafactory.models.DatasetReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withDataset(DatasetReference dataset)"
  name: "withDataset(DatasetReference dataset)"
  nameWithType: "DataFlowSink.withDataset(DatasetReference dataset)"
  summary: "Set the dataset property: Dataset reference."
  overridden: "com.azure.resourcemanager.datafactory.models.Transformation.withDataset(com.azure.resourcemanager.datafactory.models.DatasetReference)"
  parameters:
  - name: "dataset"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DatasetReference?alt=com.azure.resourcemanager.datafactory.models.DatasetReference&text=DatasetReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataFlowSink withDataset(DatasetReference dataset)"
  desc: "Set the dataset property: Dataset reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSink?alt=com.azure.resourcemanager.datafactory.models.DataFlowSink&text=DataFlowSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withDescription(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withDescription(String description)"
  name: "withDescription(String description)"
  nameWithType: "DataFlowSink.withDescription(String description)"
  summary: "Set the description property: Transformation description."
  overridden: "com.azure.resourcemanager.datafactory.models.Transformation.withDescription(java.lang.String)"
  parameters:
  - name: "description"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataFlowSink withDescription(String description)"
  desc: "Set the description property: Transformation description."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSink?alt=com.azure.resourcemanager.datafactory.models.DataFlowSink&text=DataFlowSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withFlowlet(com.azure.resourcemanager.datafactory.models.DataFlowReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withFlowlet(DataFlowReference flowlet)"
  name: "withFlowlet(DataFlowReference flowlet)"
  nameWithType: "DataFlowSink.withFlowlet(DataFlowReference flowlet)"
  summary: "Set the flowlet property: Flowlet Reference."
  overridden: "com.azure.resourcemanager.datafactory.models.Transformation.withFlowlet(com.azure.resourcemanager.datafactory.models.DataFlowReference)"
  parameters:
  - name: "flowlet"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowReference?alt=com.azure.resourcemanager.datafactory.models.DataFlowReference&text=DataFlowReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataFlowSink withFlowlet(DataFlowReference flowlet)"
  desc: "Set the flowlet property: Flowlet Reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSink?alt=com.azure.resourcemanager.datafactory.models.DataFlowSink&text=DataFlowSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withLinkedService(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withLinkedService(LinkedServiceReference linkedService)"
  name: "withLinkedService(LinkedServiceReference linkedService)"
  nameWithType: "DataFlowSink.withLinkedService(LinkedServiceReference linkedService)"
  summary: "Set the linked<wbr>Service property: Linked service reference."
  overridden: "com.azure.resourcemanager.datafactory.models.Transformation.withLinkedService(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  parameters:
  - name: "linkedService"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataFlowSink withLinkedService(LinkedServiceReference linkedService)"
  desc: "Set the linkedService property: Linked service reference."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSink?alt=com.azure.resourcemanager.datafactory.models.DataFlowSink&text=DataFlowSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withName(String name)"
  name: "withName(String name)"
  nameWithType: "DataFlowSink.withName(String name)"
  summary: "Set the name property: Transformation name."
  overridden: "com.azure.resourcemanager.datafactory.models.Transformation.withName(java.lang.String)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataFlowSink withName(String name)"
  desc: "Set the name property: Transformation name."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSink?alt=com.azure.resourcemanager.datafactory.models.DataFlowSink&text=DataFlowSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withRejectedDataLinkedService(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withRejectedDataLinkedService(LinkedServiceReference rejectedDataLinkedService)"
  name: "withRejectedDataLinkedService(LinkedServiceReference rejectedDataLinkedService)"
  nameWithType: "DataFlowSink.withRejectedDataLinkedService(LinkedServiceReference rejectedDataLinkedService)"
  summary: "Set the rejected<wbr>Data<wbr>Linked<wbr>Service property: Rejected data linked service reference."
  parameters:
  - description: "the rejectedDataLinkedService value to set."
    name: "rejectedDataLinkedService"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataFlowSink withRejectedDataLinkedService(LinkedServiceReference rejectedDataLinkedService)"
  desc: "Set the rejectedDataLinkedService property: Rejected data linked service reference."
  returns:
    description: "the DataFlowSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSink?alt=com.azure.resourcemanager.datafactory.models.DataFlowSink&text=DataFlowSink\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withSchemaLinkedService(com.azure.resourcemanager.datafactory.models.LinkedServiceReference)"
  fullName: "com.azure.resourcemanager.datafactory.models.DataFlowSink.withSchemaLinkedService(LinkedServiceReference schemaLinkedService)"
  name: "withSchemaLinkedService(LinkedServiceReference schemaLinkedService)"
  nameWithType: "DataFlowSink.withSchemaLinkedService(LinkedServiceReference schemaLinkedService)"
  summary: "Set the schema<wbr>Linked<wbr>Service property: Schema linked service reference."
  parameters:
  - description: "the schemaLinkedService value to set."
    name: "schemaLinkedService"
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.LinkedServiceReference?alt=com.azure.resourcemanager.datafactory.models.LinkedServiceReference&text=LinkedServiceReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataFlowSink withSchemaLinkedService(LinkedServiceReference schemaLinkedService)"
  desc: "Set the schemaLinkedService property: Schema linked service reference."
  returns:
    description: "the DataFlowSink object itself."
    type: "<xref href=\"com.azure.resourcemanager.datafactory.models.DataFlowSink?alt=com.azure.resourcemanager.datafactory.models.DataFlowSink&text=DataFlowSink\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Transformation for data flow sink."
metadata: {}
package: "com.azure.resourcemanager.datafactory.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datafactory:1.0.0-beta.16
