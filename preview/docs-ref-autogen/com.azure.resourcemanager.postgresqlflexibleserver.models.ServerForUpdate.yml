### YamlMime:JavaType
uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate"
fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate"
name: "ServerForUpdate"
nameWithType: "ServerForUpdate"
summary: "Represents a server to be updated."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServerForUpdate"
constructors:
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.ServerForUpdate()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.ServerForUpdate()"
  name: "ServerForUpdate()"
  nameWithType: "ServerForUpdate.ServerForUpdate()"
  syntax: "public ServerForUpdate()"
methods:
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.administratorLoginPassword()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.administratorLoginPassword()"
  name: "administratorLoginPassword()"
  nameWithType: "ServerForUpdate.administratorLoginPassword()"
  summary: "Get the administrator<wbr>Login<wbr>Password property: The password of the administrator login."
  syntax: "public String administratorLoginPassword()"
  desc: "Get the administratorLoginPassword property: The password of the administrator login."
  returns:
    description: "the administratorLoginPassword value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.backup()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.backup()"
  name: "backup()"
  nameWithType: "ServerForUpdate.backup()"
  summary: "Get the backup property: Backup properties of a server."
  syntax: "public Backup backup()"
  desc: "Get the backup property: Backup properties of a server."
  returns:
    description: "the backup value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Backup?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Backup&text=Backup\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.createMode()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.createMode()"
  name: "createMode()"
  nameWithType: "ServerForUpdate.createMode()"
  summary: "Get the create<wbr>Mode property: The mode to update a new PostgreSQL server."
  syntax: "public CreateModeForUpdate createMode()"
  desc: "Get the createMode property: The mode to update a new PostgreSQL server."
  returns:
    description: "the createMode value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CreateModeForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CreateModeForUpdate&text=CreateModeForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.highAvailability()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.highAvailability()"
  name: "highAvailability()"
  nameWithType: "ServerForUpdate.highAvailability()"
  summary: "Get the high<wbr>Availability property: High availability properties of a server."
  syntax: "public HighAvailability highAvailability()"
  desc: "Get the highAvailability property: High availability properties of a server."
  returns:
    description: "the highAvailability value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.HighAvailability?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.HighAvailability&text=HighAvailability\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.location()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.location()"
  name: "location()"
  nameWithType: "ServerForUpdate.location()"
  summary: "Get the location property: The location the resource resides in."
  syntax: "public String location()"
  desc: "Get the location property: The location the resource resides in."
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.maintenanceWindow()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.maintenanceWindow()"
  name: "maintenanceWindow()"
  nameWithType: "ServerForUpdate.maintenanceWindow()"
  summary: "Get the maintenance<wbr>Window property: Maintenance window properties of a server."
  syntax: "public MaintenanceWindow maintenanceWindow()"
  desc: "Get the maintenanceWindow property: Maintenance window properties of a server."
  returns:
    description: "the maintenanceWindow value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.MaintenanceWindow?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.MaintenanceWindow&text=MaintenanceWindow\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.sku()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.sku()"
  name: "sku()"
  nameWithType: "ServerForUpdate.sku()"
  summary: "Get the sku property: The SKU (pricing tier) of the server."
  syntax: "public Sku sku()"
  desc: "Get the sku property: The SKU (pricing tier) of the server."
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Sku?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.storage()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.storage()"
  name: "storage()"
  nameWithType: "ServerForUpdate.storage()"
  summary: "Get the storage property: Storage properties of a server."
  syntax: "public Storage storage()"
  desc: "Get the storage property: Storage properties of a server."
  returns:
    description: "the storage value."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Storage?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Storage&text=Storage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.tags()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.tags()"
  name: "tags()"
  nameWithType: "ServerForUpdate.tags()"
  summary: "Get the tags property: Application-specific metadata in the form of key-value pairs."
  syntax: "public Map<String,String> tags()"
  desc: "Get the tags property: Application-specific metadata in the form of key-value pairs."
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.validate()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.validate()"
  name: "validate()"
  nameWithType: "ServerForUpdate.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withAdministratorLoginPassword(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withAdministratorLoginPassword(String administratorLoginPassword)"
  name: "withAdministratorLoginPassword(String administratorLoginPassword)"
  nameWithType: "ServerForUpdate.withAdministratorLoginPassword(String administratorLoginPassword)"
  summary: "Set the administrator<wbr>Login<wbr>Password property: The password of the administrator login."
  parameters:
  - description: "the administratorLoginPassword value to set."
    name: "administratorLoginPassword"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withAdministratorLoginPassword(String administratorLoginPassword)"
  desc: "Set the administratorLoginPassword property: The password of the administrator login."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withBackup(com.azure.resourcemanager.postgresqlflexibleserver.models.Backup)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withBackup(Backup backup)"
  name: "withBackup(Backup backup)"
  nameWithType: "ServerForUpdate.withBackup(Backup backup)"
  summary: "Set the backup property: Backup properties of a server."
  parameters:
  - description: "the backup value to set."
    name: "backup"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Backup?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Backup&text=Backup\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withBackup(Backup backup)"
  desc: "Set the backup property: Backup properties of a server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withCreateMode(com.azure.resourcemanager.postgresqlflexibleserver.models.CreateModeForUpdate)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withCreateMode(CreateModeForUpdate createMode)"
  name: "withCreateMode(CreateModeForUpdate createMode)"
  nameWithType: "ServerForUpdate.withCreateMode(CreateModeForUpdate createMode)"
  summary: "Set the create<wbr>Mode property: The mode to update a new PostgreSQL server."
  parameters:
  - description: "the createMode value to set."
    name: "createMode"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.CreateModeForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.CreateModeForUpdate&text=CreateModeForUpdate\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withCreateMode(CreateModeForUpdate createMode)"
  desc: "Set the createMode property: The mode to update a new PostgreSQL server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withHighAvailability(com.azure.resourcemanager.postgresqlflexibleserver.models.HighAvailability)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withHighAvailability(HighAvailability highAvailability)"
  name: "withHighAvailability(HighAvailability highAvailability)"
  nameWithType: "ServerForUpdate.withHighAvailability(HighAvailability highAvailability)"
  summary: "Set the high<wbr>Availability property: High availability properties of a server."
  parameters:
  - description: "the highAvailability value to set."
    name: "highAvailability"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.HighAvailability?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.HighAvailability&text=HighAvailability\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withHighAvailability(HighAvailability highAvailability)"
  desc: "Set the highAvailability property: High availability properties of a server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "ServerForUpdate.withLocation(String location)"
  summary: "Set the location property: The location the resource resides in."
  parameters:
  - description: "the location value to set."
    name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withLocation(String location)"
  desc: "Set the location property: The location the resource resides in."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withMaintenanceWindow(com.azure.resourcemanager.postgresqlflexibleserver.models.MaintenanceWindow)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withMaintenanceWindow(MaintenanceWindow maintenanceWindow)"
  name: "withMaintenanceWindow(MaintenanceWindow maintenanceWindow)"
  nameWithType: "ServerForUpdate.withMaintenanceWindow(MaintenanceWindow maintenanceWindow)"
  summary: "Set the maintenance<wbr>Window property: Maintenance window properties of a server."
  parameters:
  - description: "the maintenanceWindow value to set."
    name: "maintenanceWindow"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.MaintenanceWindow?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.MaintenanceWindow&text=MaintenanceWindow\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withMaintenanceWindow(MaintenanceWindow maintenanceWindow)"
  desc: "Set the maintenanceWindow property: Maintenance window properties of a server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withSku(com.azure.resourcemanager.postgresqlflexibleserver.models.Sku)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withSku(Sku sku)"
  name: "withSku(Sku sku)"
  nameWithType: "ServerForUpdate.withSku(Sku sku)"
  summary: "Set the sku property: The SKU (pricing tier) of the server."
  parameters:
  - description: "the sku value to set."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Sku?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withSku(Sku sku)"
  desc: "Set the sku property: The SKU (pricing tier) of the server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withStorage(com.azure.resourcemanager.postgresqlflexibleserver.models.Storage)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withStorage(Storage storage)"
  name: "withStorage(Storage storage)"
  nameWithType: "ServerForUpdate.withStorage(Storage storage)"
  summary: "Set the storage property: Storage properties of a server."
  parameters:
  - description: "the storage value to set."
    name: "storage"
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.Storage?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.Storage&text=Storage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerForUpdate withStorage(Storage storage)"
  desc: "Set the storage property: Storage properties of a server."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "ServerForUpdate.withTags(Map<String,String> tags)"
  summary: "Set the tags property: Application-specific metadata in the form of key-value pairs."
  parameters:
  - description: "the tags value to set."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ServerForUpdate withTags(Map<String,String> tags)"
  desc: "Set the tags property: Application-specific metadata in the form of key-value pairs."
  returns:
    description: "the ServerForUpdate object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.ServerForUpdate&text=ServerForUpdate\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a server to be updated."
metadata: {}
package: "com.azure.resourcemanager.postgresqlflexibleserver.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-postgresqlflexibleserver:1.0.0-beta.4
