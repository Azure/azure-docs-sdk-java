### YamlMime:JavaType
uid: "com.azure.analytics.synapse.spark.models.SparkSessionState"
fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState"
name: "SparkSessionState"
nameWithType: "SparkSessionState"
summary: "The Spark<wbr>Session<wbr>State model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SparkSessionState"
constructors:
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.SparkSessionState()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.SparkSessionState()"
  name: "SparkSessionState()"
  nameWithType: "SparkSessionState.SparkSessionState()"
  syntax: "public SparkSessionState()"
methods:
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.getBusyAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.getBusyAt()"
  name: "getBusyAt()"
  nameWithType: "SparkSessionState.getBusyAt()"
  summary: "Get the busy<wbr>At property: The busy<wbr>At property."
  syntax: "public OffsetDateTime getBusyAt()"
  desc: "Get the busyAt property: The busyAt property."
  returns:
    description: "the busyAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.getCurrentState()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.getCurrentState()"
  name: "getCurrentState()"
  nameWithType: "SparkSessionState.getCurrentState()"
  summary: "Get the current<wbr>State property: The current<wbr>State property."
  syntax: "public String getCurrentState()"
  desc: "Get the currentState property: The currentState property."
  returns:
    description: "the currentState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.getDeadAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.getDeadAt()"
  name: "getDeadAt()"
  nameWithType: "SparkSessionState.getDeadAt()"
  summary: "Get the dead<wbr>At property: The dead<wbr>At property."
  syntax: "public OffsetDateTime getDeadAt()"
  desc: "Get the deadAt property: The deadAt property."
  returns:
    description: "the deadAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.getErrorAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.getErrorAt()"
  name: "getErrorAt()"
  nameWithType: "SparkSessionState.getErrorAt()"
  summary: "Get the error<wbr>At property: The error<wbr>At property."
  syntax: "public OffsetDateTime getErrorAt()"
  desc: "Get the errorAt property: The errorAt property."
  returns:
    description: "the errorAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.getIdleAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.getIdleAt()"
  name: "getIdleAt()"
  nameWithType: "SparkSessionState.getIdleAt()"
  summary: "Get the idle<wbr>At property: The idle<wbr>At property."
  syntax: "public OffsetDateTime getIdleAt()"
  desc: "Get the idleAt property: The idleAt property."
  returns:
    description: "the idleAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.getJobCreationRequest()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.getJobCreationRequest()"
  name: "getJobCreationRequest()"
  nameWithType: "SparkSessionState.getJobCreationRequest()"
  summary: "Get the job<wbr>Creation<wbr>Request property: The job<wbr>Creation<wbr>Request property."
  syntax: "public SparkRequest getJobCreationRequest()"
  desc: "Get the jobCreationRequest property: The jobCreationRequest property."
  returns:
    description: "the jobCreationRequest value."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkRequest?alt=com.azure.analytics.synapse.spark.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.getNotStartedAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.getNotStartedAt()"
  name: "getNotStartedAt()"
  nameWithType: "SparkSessionState.getNotStartedAt()"
  summary: "Get the not<wbr>Started<wbr>At property: The not<wbr>Started<wbr>At property."
  syntax: "public OffsetDateTime getNotStartedAt()"
  desc: "Get the notStartedAt property: The notStartedAt property."
  returns:
    description: "the notStartedAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.getRecoveringAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.getRecoveringAt()"
  name: "getRecoveringAt()"
  nameWithType: "SparkSessionState.getRecoveringAt()"
  summary: "Get the recovering<wbr>At property: The recovering<wbr>At property."
  syntax: "public OffsetDateTime getRecoveringAt()"
  desc: "Get the recoveringAt property: The recoveringAt property."
  returns:
    description: "the recoveringAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.getShuttingDownAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.getShuttingDownAt()"
  name: "getShuttingDownAt()"
  nameWithType: "SparkSessionState.getShuttingDownAt()"
  summary: "Get the shutting<wbr>Down<wbr>At property: The shutting<wbr>Down<wbr>At property."
  syntax: "public OffsetDateTime getShuttingDownAt()"
  desc: "Get the shuttingDownAt property: The shuttingDownAt property."
  returns:
    description: "the shuttingDownAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.getStartingAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.getStartingAt()"
  name: "getStartingAt()"
  nameWithType: "SparkSessionState.getStartingAt()"
  summary: "Get the starting<wbr>At property: The starting<wbr>At property."
  syntax: "public OffsetDateTime getStartingAt()"
  desc: "Get the startingAt property: The startingAt property."
  returns:
    description: "the startingAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.getTerminatedAt()"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.getTerminatedAt()"
  name: "getTerminatedAt()"
  nameWithType: "SparkSessionState.getTerminatedAt()"
  summary: "Get the terminated<wbr>At property: The killed<wbr>At property."
  syntax: "public OffsetDateTime getTerminatedAt()"
  desc: "Get the terminatedAt property: The killedAt property."
  returns:
    description: "the terminatedAt value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.setBusyAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.setBusyAt(OffsetDateTime busyAt)"
  name: "setBusyAt(OffsetDateTime busyAt)"
  nameWithType: "SparkSessionState.setBusyAt(OffsetDateTime busyAt)"
  summary: "Set the busy<wbr>At property: The busy<wbr>At property."
  parameters:
  - description: "the busyAt value to set."
    name: "busyAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionState setBusyAt(OffsetDateTime busyAt)"
  desc: "Set the busyAt property: The busyAt property."
  returns:
    description: "the SparkSessionState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.setCurrentState(java.lang.String)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.setCurrentState(String currentState)"
  name: "setCurrentState(String currentState)"
  nameWithType: "SparkSessionState.setCurrentState(String currentState)"
  summary: "Set the current<wbr>State property: The current<wbr>State property."
  parameters:
  - description: "the currentState value to set."
    name: "currentState"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionState setCurrentState(String currentState)"
  desc: "Set the currentState property: The currentState property."
  returns:
    description: "the SparkSessionState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.setDeadAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.setDeadAt(OffsetDateTime deadAt)"
  name: "setDeadAt(OffsetDateTime deadAt)"
  nameWithType: "SparkSessionState.setDeadAt(OffsetDateTime deadAt)"
  summary: "Set the dead<wbr>At property: The dead<wbr>At property."
  parameters:
  - description: "the deadAt value to set."
    name: "deadAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionState setDeadAt(OffsetDateTime deadAt)"
  desc: "Set the deadAt property: The deadAt property."
  returns:
    description: "the SparkSessionState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.setErrorAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.setErrorAt(OffsetDateTime errorAt)"
  name: "setErrorAt(OffsetDateTime errorAt)"
  nameWithType: "SparkSessionState.setErrorAt(OffsetDateTime errorAt)"
  summary: "Set the error<wbr>At property: The error<wbr>At property."
  parameters:
  - description: "the errorAt value to set."
    name: "errorAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionState setErrorAt(OffsetDateTime errorAt)"
  desc: "Set the errorAt property: The errorAt property."
  returns:
    description: "the SparkSessionState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.setIdleAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.setIdleAt(OffsetDateTime idleAt)"
  name: "setIdleAt(OffsetDateTime idleAt)"
  nameWithType: "SparkSessionState.setIdleAt(OffsetDateTime idleAt)"
  summary: "Set the idle<wbr>At property: The idle<wbr>At property."
  parameters:
  - description: "the idleAt value to set."
    name: "idleAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionState setIdleAt(OffsetDateTime idleAt)"
  desc: "Set the idleAt property: The idleAt property."
  returns:
    description: "the SparkSessionState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.setJobCreationRequest(com.azure.analytics.synapse.spark.models.SparkRequest)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.setJobCreationRequest(SparkRequest jobCreationRequest)"
  name: "setJobCreationRequest(SparkRequest jobCreationRequest)"
  nameWithType: "SparkSessionState.setJobCreationRequest(SparkRequest jobCreationRequest)"
  summary: "Set the job<wbr>Creation<wbr>Request property: The job<wbr>Creation<wbr>Request property."
  parameters:
  - description: "the jobCreationRequest value to set."
    name: "jobCreationRequest"
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkRequest?alt=com.azure.analytics.synapse.spark.models.SparkRequest&text=SparkRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionState setJobCreationRequest(SparkRequest jobCreationRequest)"
  desc: "Set the jobCreationRequest property: The jobCreationRequest property."
  returns:
    description: "the SparkSessionState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.setNotStartedAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.setNotStartedAt(OffsetDateTime notStartedAt)"
  name: "setNotStartedAt(OffsetDateTime notStartedAt)"
  nameWithType: "SparkSessionState.setNotStartedAt(OffsetDateTime notStartedAt)"
  summary: "Set the not<wbr>Started<wbr>At property: The not<wbr>Started<wbr>At property."
  parameters:
  - description: "the notStartedAt value to set."
    name: "notStartedAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionState setNotStartedAt(OffsetDateTime notStartedAt)"
  desc: "Set the notStartedAt property: The notStartedAt property."
  returns:
    description: "the SparkSessionState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.setRecoveringAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.setRecoveringAt(OffsetDateTime recoveringAt)"
  name: "setRecoveringAt(OffsetDateTime recoveringAt)"
  nameWithType: "SparkSessionState.setRecoveringAt(OffsetDateTime recoveringAt)"
  summary: "Set the recovering<wbr>At property: The recovering<wbr>At property."
  parameters:
  - description: "the recoveringAt value to set."
    name: "recoveringAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionState setRecoveringAt(OffsetDateTime recoveringAt)"
  desc: "Set the recoveringAt property: The recoveringAt property."
  returns:
    description: "the SparkSessionState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.setShuttingDownAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.setShuttingDownAt(OffsetDateTime shuttingDownAt)"
  name: "setShuttingDownAt(OffsetDateTime shuttingDownAt)"
  nameWithType: "SparkSessionState.setShuttingDownAt(OffsetDateTime shuttingDownAt)"
  summary: "Set the shutting<wbr>Down<wbr>At property: The shutting<wbr>Down<wbr>At property."
  parameters:
  - description: "the shuttingDownAt value to set."
    name: "shuttingDownAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionState setShuttingDownAt(OffsetDateTime shuttingDownAt)"
  desc: "Set the shuttingDownAt property: The shuttingDownAt property."
  returns:
    description: "the SparkSessionState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.setStartingAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.setStartingAt(OffsetDateTime startingAt)"
  name: "setStartingAt(OffsetDateTime startingAt)"
  nameWithType: "SparkSessionState.setStartingAt(OffsetDateTime startingAt)"
  summary: "Set the starting<wbr>At property: The starting<wbr>At property."
  parameters:
  - description: "the startingAt value to set."
    name: "startingAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionState setStartingAt(OffsetDateTime startingAt)"
  desc: "Set the startingAt property: The startingAt property."
  returns:
    description: "the SparkSessionState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.analytics.synapse.spark.models.SparkSessionState.setTerminatedAt(java.time.OffsetDateTime)"
  fullName: "com.azure.analytics.synapse.spark.models.SparkSessionState.setTerminatedAt(OffsetDateTime terminatedAt)"
  name: "setTerminatedAt(OffsetDateTime terminatedAt)"
  nameWithType: "SparkSessionState.setTerminatedAt(OffsetDateTime terminatedAt)"
  summary: "Set the terminated<wbr>At property: The killed<wbr>At property."
  parameters:
  - description: "the terminatedAt value to set."
    name: "terminatedAt"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SparkSessionState setTerminatedAt(OffsetDateTime terminatedAt)"
  desc: "Set the terminatedAt property: The killedAt property."
  returns:
    description: "the SparkSessionState object itself."
    type: "<xref href=\"com.azure.analytics.synapse.spark.models.SparkSessionState?alt=com.azure.analytics.synapse.spark.models.SparkSessionState&text=SparkSessionState\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The SparkSessionState model."
metadata: {}
package: "com.azure.analytics.synapse.spark.models"
artifact: com.azure:azure-analytics-synapse-spark:1.0.0-beta.5
