### YamlMime:JavaType
uid: "com.azure.resourcemanager.quota.fluent.QuotasClient"
fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient"
name: "QuotasClient"
nameWithType: "QuotasClient"
summary: "An instance of this class provides access to all the operations defined in Quotas<wbr>Client."
syntax: "public interface QuotasClient"
methods:
- uid: "com.azure.resourcemanager.quota.fluent.QuotasClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient.beginCreateOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  name: "beginCreateOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  nameWithType: "QuotasClient.beginCreateOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  summary: "Create or update the quota limit for the specified resource with the requested value."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Quota request payload."
    name: "createQuotaRequest"
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<CurrentQuotaLimitBaseInner>,CurrentQuotaLimitBaseInner> beginCreateOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  desc: "Create or update the quota limit for the specified resource with the requested value. To update the quota, follow these steps: 1. Use the GET operation for quotas and usages to determine how much quota remains for the specific resource and to calculate the new quota limit. These steps are detailed in \\[this example\\](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670). 2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request."
  returns:
    description: "quota limit."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.QuotasClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient.beginCreateOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  name: "beginCreateOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  nameWithType: "QuotasClient.beginCreateOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  summary: "Create or update the quota limit for the specified resource with the requested value."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Quota request payload."
    name: "createQuotaRequest"
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<CurrentQuotaLimitBaseInner>,CurrentQuotaLimitBaseInner> beginCreateOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  desc: "Create or update the quota limit for the specified resource with the requested value. To update the quota, follow these steps: 1. Use the GET operation for quotas and usages to determine how much quota remains for the specific resource and to calculate the new quota limit. These steps are detailed in \\[this example\\](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670). 2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request."
  returns:
    description: "quota limit."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.QuotasClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient.beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  name: "beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  nameWithType: "QuotasClient.beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  summary: "Update the quota limit for a specific resource to the specified value: 1."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Quota requests payload."
    name: "createQuotaRequest"
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<CurrentQuotaLimitBaseInner>,CurrentQuotaLimitBaseInner> beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  desc: "Update the quota limit for a specific resource to the specified value: 1. Use the Usages-GET and Quota-GET operations to determine the remaining quota for the specific resource and to calculate the new quota limit. These steps are detailed in \\[this example\\](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670). 2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request."
  returns:
    description: "quota limit."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.QuotasClient.beginUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient.beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  name: "beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  nameWithType: "QuotasClient.beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  summary: "Update the quota limit for a specific resource to the specified value: 1."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Quota requests payload."
    name: "createQuotaRequest"
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<CurrentQuotaLimitBaseInner>,CurrentQuotaLimitBaseInner> beginUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  desc: "Update the quota limit for a specific resource to the specified value: 1. Use the Usages-GET and Quota-GET operations to determine the remaining quota for the specific resource and to calculate the new quota limit. These steps are detailed in \\[this example\\](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670). 2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request."
  returns:
    description: "quota limit."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.QuotasClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient.createOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  name: "createOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  nameWithType: "QuotasClient.createOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  summary: "Create or update the quota limit for the specified resource with the requested value."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Quota request payload."
    name: "createQuotaRequest"
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CurrentQuotaLimitBaseInner createOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  desc: "Create or update the quota limit for the specified resource with the requested value. To update the quota, follow these steps: 1. Use the GET operation for quotas and usages to determine how much quota remains for the specific resource and to calculate the new quota limit. These steps are detailed in \\[this example\\](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670). 2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request."
  returns:
    description: "quota limit."
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.fluent.QuotasClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient.createOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  name: "createOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  nameWithType: "QuotasClient.createOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  summary: "Create or update the quota limit for the specified resource with the requested value."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Quota request payload."
    name: "createQuotaRequest"
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CurrentQuotaLimitBaseInner createOrUpdate(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  desc: "Create or update the quota limit for the specified resource with the requested value. To update the quota, follow these steps: 1. Use the GET operation for quotas and usages to determine how much quota remains for the specific resource and to calculate the new quota limit. These steps are detailed in \\[this example\\](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670). 2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request."
  returns:
    description: "quota limit."
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.fluent.QuotasClient.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient.get(String resourceName, String scope)"
  name: "get(String resourceName, String scope)"
  nameWithType: "QuotasClient.get(String resourceName, String scope)"
  summary: "Get the quota limit of a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CurrentQuotaLimitBaseInner get(String resourceName, String scope)"
  desc: "Get the quota limit of a resource. The response can be used to determine the remaining quota to calculate a new quota limit that can be submitted with a PUT request."
  returns:
    description: "the quota limit of a resource."
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.fluent.QuotasClient.getWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient.getWithResponse(String resourceName, String scope, Context context)"
  name: "getWithResponse(String resourceName, String scope, Context context)"
  nameWithType: "QuotasClient.getWithResponse(String resourceName, String scope, Context context)"
  summary: "Get the quota limit of a resource."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract QuotasGetResponse getWithResponse(String resourceName, String scope, Context context)"
  desc: "Get the quota limit of a resource. The response can be used to determine the remaining quota to calculate a new quota limit that can be submitted with a PUT request."
  returns:
    description: "the quota limit of a resource."
    type: "<xref href=\"com.azure.resourcemanager.quota.models.QuotasGetResponse?alt=com.azure.resourcemanager.quota.models.QuotasGetResponse&text=QuotasGetResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.fluent.QuotasClient.list(java.lang.String)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient.list(String scope)"
  name: "list(String scope)"
  nameWithType: "QuotasClient.list(String scope)"
  summary: "Get a list of current quota limits of all resources for the specified scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<CurrentQuotaLimitBaseInner> list(String scope)"
  desc: "Get a list of current quota limits of all resources for the specified scope. The response from this GET operation can be leveraged to submit requests to update a quota."
  returns:
    description: "a list of current quota limits of all resources for the specified scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.QuotasClient.list(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient.list(String scope, Context context)"
  name: "list(String scope, Context context)"
  nameWithType: "QuotasClient.list(String scope, Context context)"
  summary: "Get a list of current quota limits of all resources for the specified scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<CurrentQuotaLimitBaseInner> list(String scope, Context context)"
  desc: "Get a list of current quota limits of all resources for the specified scope. The response from this GET operation can be leveraged to submit requests to update a quota."
  returns:
    description: "a list of current quota limits of all resources for the specified scope."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.quota.fluent.QuotasClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient.update(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  name: "update(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  nameWithType: "QuotasClient.update(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  summary: "Update the quota limit for a specific resource to the specified value: 1."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Quota requests payload."
    name: "createQuotaRequest"
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CurrentQuotaLimitBaseInner update(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest)"
  desc: "Update the quota limit for a specific resource to the specified value: 1. Use the Usages-GET and Quota-GET operations to determine the remaining quota for the specific resource and to calculate the new quota limit. These steps are detailed in \\[this example\\](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670). 2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request."
  returns:
    description: "quota limit."
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.quota.fluent.QuotasClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.quota.fluent.QuotasClient.update(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  name: "update(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  nameWithType: "QuotasClient.update(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  summary: "Update the quota limit for a specific resource to the specified value: 1."
  modifiers:
  - "abstract"
  parameters:
  - description: "Resource name for a given resource provider. For example: - SKU name for Microsoft.Compute -\n     SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices For Microsoft.Network PublicIPAddresses."
    name: "resourceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The target Azure resource URI. For example,\n     `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.\n     This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after\n     `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Quota requests payload."
    name: "createQuotaRequest"
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CurrentQuotaLimitBaseInner update(String resourceName, String scope, CurrentQuotaLimitBaseInner createQuotaRequest, Context context)"
  desc: "Update the quota limit for a specific resource to the specified value: 1. Use the Usages-GET and Quota-GET operations to determine the remaining quota for the specific resource and to calculate the new quota limit. These steps are detailed in \\[this example\\](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670). 2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request."
  returns:
    description: "quota limit."
    type: "<xref href=\"com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner?alt=com.azure.resourcemanager.quota.fluent.models.CurrentQuotaLimitBaseInner&text=CurrentQuotaLimitBaseInner\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in QuotasClient."
metadata: {}
package: "com.azure.resourcemanager.quota.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-quota:1.0.0-beta.2
