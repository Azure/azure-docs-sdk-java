### YamlMime:JavaMember
uid: "com.azure.data.tables.implementation.TablesMultipartSerializer.deserialize*"
fullName: "com.azure.data.tables.implementation.TablesMultipartSerializer.<U>deserialize"
name: "<U>deserialize"
nameWithType: "TablesMultipartSerializer.<U>deserialize"
members:
- uid: "com.azure.data.tables.implementation.TablesMultipartSerializer.<U>deserialize(byte[],java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)"
  fullName: "com.azure.data.tables.implementation.TablesMultipartSerializer.<U>deserialize(byte[] bytes, Type type, SerializerEncoding encoding)"
  name: "<U>deserialize(byte[] bytes, Type type, SerializerEncoding encoding)"
  nameWithType: "TablesMultipartSerializer.<U>deserialize(byte[] bytes, Type type, SerializerEncoding encoding)"
  overridden: "com.azure.data.tables.implementation.TablesJacksonSerializer.<U>deserialize(byte[],java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)"
  parameters:
  - name: "bytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "type"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - name: "encoding"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerEncoding?alt=com.azure.core.util.serializer.SerializerEncoding&text=SerializerEncoding\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public U <U>deserialize(byte[] bytes, Type type, SerializerEncoding encoding)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.implementation.TablesMultipartSerializer.<U>deserialize(java.io.InputStream,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)"
  fullName: "com.azure.data.tables.implementation.TablesMultipartSerializer.<U>deserialize(InputStream inputStream, Type type, SerializerEncoding serializerEncoding)"
  name: "<U>deserialize(InputStream inputStream, Type type, SerializerEncoding serializerEncoding)"
  nameWithType: "TablesMultipartSerializer.<U>deserialize(InputStream inputStream, Type type, SerializerEncoding serializerEncoding)"
  overridden: "com.azure.data.tables.implementation.TablesJacksonSerializer.<U>deserialize(java.io.InputStream,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)"
  parameters:
  - name: "inputStream"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "type"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - name: "serializerEncoding"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerEncoding?alt=com.azure.core.util.serializer.SerializerEncoding&text=SerializerEncoding\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public U <U>deserialize(InputStream inputStream, Type type, SerializerEncoding serializerEncoding)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.tables.implementation.TablesMultipartSerializer.<U>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)"
  fullName: "com.azure.data.tables.implementation.TablesMultipartSerializer.<U>deserialize(String value, Type type, SerializerEncoding serializerEncoding)"
  name: "<U>deserialize(String value, Type type, SerializerEncoding serializerEncoding)"
  nameWithType: "TablesMultipartSerializer.<U>deserialize(String value, Type type, SerializerEncoding serializerEncoding)"
  overridden: "com.azure.data.tables.implementation.TablesJacksonSerializer.<U>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.util.serializer.SerializerEncoding)"
  parameters:
  - name: "value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "type"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - name: "serializerEncoding"
    type: "<xref href=\"com.azure.core.util.serializer.SerializerEncoding?alt=com.azure.core.util.serializer.SerializerEncoding&text=SerializerEncoding\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public U <U>deserialize(String value, Type type, SerializerEncoding serializerEncoding)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.data.tables.implementation"
artifact: com.azure:azure-data-tables:12.0.0-beta.6
