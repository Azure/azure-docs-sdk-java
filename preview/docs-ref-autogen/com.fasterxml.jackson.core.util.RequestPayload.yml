### YamlMime:JavaType
uid: "com.fasterxml.jackson.core.util.RequestPayload"
fullName: "com.fasterxml.jackson.core.util.RequestPayload"
name: "RequestPayload"
nameWithType: "RequestPayload"
summary: "Container object used to contain optional information on content being parsed, passed to <xref uid=\"com.fasterxml.jackson.core.JsonParseException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.core.JsonParseException\"></xref> in case of exception being thrown; this may be useful for caller to display information on failure."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RequestPayload implements Serializable"
constructors:
- "com.fasterxml.jackson.core.util.RequestPayload.RequestPayload(byte[],java.lang.String)"
- "com.fasterxml.jackson.core.util.RequestPayload.RequestPayload(java.lang.CharSequence)"
fields:
- "com.fasterxml.jackson.core.util.RequestPayload._charset"
- "com.fasterxml.jackson.core.util.RequestPayload._payloadAsBytes"
- "com.fasterxml.jackson.core.util.RequestPayload._payloadAsText"
methods:
- "com.fasterxml.jackson.core.util.RequestPayload.getRawPayload()"
- "com.fasterxml.jackson.core.util.RequestPayload.toString()"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.core.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
