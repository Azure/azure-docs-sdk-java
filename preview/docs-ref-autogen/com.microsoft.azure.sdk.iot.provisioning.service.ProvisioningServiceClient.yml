### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  id: ProvisioningServiceClient
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service
  children:
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createFromConnectionString(java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateEnrollmentGroup(com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment(com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String,java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(java.lang.String,java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String,java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String,java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getDeviceRegistrationState(java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroup(java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroupAttestationMechanism(java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollment(java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollmentAttestationMechanism(java.lang.String)
  - com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation(com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode,java.util.Collection<com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment>)
  langs:
  - java
  name: ProvisioningServiceClient
  nameWithType: ProvisioningServiceClient
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  type: Class
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Device Provisioning Service Client.


    The IoT Hub Device Provisioning Service is a helper service for IoT Hub that enables automatic device provisioning to a specified IoT hub without requiring human intervention. You can use the Device Provisioning Service to provision millions of devices in a secure and scalable manner.


    This java SDK provides an API to help developers to create and maintain Enrollments on the IoT Hub Device Provisioning Service, it translate the rest API in java Objects and Methods.


    To use the this SDK, you must include the follow package on your application.


    ```java

    // Include the following imports to use the Device Provisioning Service APIs.
     import com.microsoft.azure.sdk.iot.provisioning.service.*;
    ```


    The main APIs are exposed by the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient" data-throw-if-not-resolved="false">ProvisioningServiceClient</xref>, it contains the public Methods that the application shall call to create and maintain the Enrollments. The Objects in the **configs** package shall be filled and passed as parameters of the public API, for example, to create a new enrollment, the application shall create the object <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment" data-throw-if-not-resolved="false">IndividualEnrollment</xref> with the appropriate enrollment configurations, and call the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment(com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment)" data-throw-if-not-resolved="false">#createOrUpdateIndividualEnrollment(IndividualEnrollment)</xref>.


    The IoT Hub Device Provisioning Service supports SQL queries too. The application can create a new query using one of the queries factories, for instance <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)" data-throw-if-not-resolved="false">#createIndividualEnrollmentQuery(QuerySpecification)</xref>, passing the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref>, with the SQL query. This factory returns a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> object, which is an active iterator.


    This java SDK can be represented in the follow diagram, the first layer are the public APIs the your application shall use:


    ```java

    +===============+       +==========================================+                           +============+   +===+
     |    configs    |------>|         ProvisioningServiceClient        |                        +->|    Query   |   |   |
     +===============+       +==+=================+==================+==+                        |  +======+=====+   | e |
                               /                  |                   \                          |         |         | x |
                              /                   |                    \                         |         |         | c |
     +-----------------------+-----+  +-----------+------------+  +-----+---------------------+  |         |         | e |
     | IndividualEnrollmentManager |  | EnrollmentGroupManager |  | RegistrationStatusManager |  |         |         | p |
     +---------------+------+------+  +-----------+------+-----+  +-------------+-------+-----+  |         |         | t |
                      \      \                    |       \                     |        \       |         |         | i |
                       \      +----------------------------+------------------------------+------+         |         | o |
                        \                         |                             |                          |         | n |
      +--------+      +--+------------------------+-----------------------------+--------------------------+-----+   | s |
      |  auth  |----->|                                     ContractApiHttp                                      |   |   |
      +--------+      +-------------------------------------------+----------------------------------------------+   +===+
                                                                  |
                                                                  |
                            +-------------------------------------+------------------------------------------+
                            |                 com.microsoft.azure.sdk.iot.deps.transport.http                |
                            +--------------------------------------------------------------------------------+
    ```
  syntax:
    content: public final class ProvisioningServiceClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.ProvisioningServiceClient(java.lang.String)
  id: ProvisioningServiceClient(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: ProvisioningServiceClient(String connectionString)
  nameWithType: ProvisioningServiceClient.ProvisioningServiceClient(String connectionString)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.ProvisioningServiceClient(String connectionString)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.ProvisioningServiceClient*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: PRIVATE CONSTRUCTOR
  syntax:
    content: private ProvisioningServiceClient(String connectionString)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: the <code>String</code> that contains the connection string for the Provisioning service.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)
  id: createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: createEnrollmentGroupQuery(QuerySpecification querySpecification)
  nameWithType: ProvisioningServiceClient.createEnrollmentGroupQuery(QuerySpecification querySpecification)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(QuerySpecification querySpecification)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Factory to create an enrollmentGroup query.


    This method will create a new enrollment group query on Device Provisioning Service and return it as a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.


    The Device Provisioning Service expects a SQL query in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref>, for instance `"SELECT * FROM enrollments"`.
  syntax:
    content: public Query createEnrollmentGroupQuery(QuerySpecification querySpecification)
    parameters:
    - id: querySpecification
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref> with the SQL query. It cannot be <code>null</code>.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.Query
      description: The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)
  id: createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: createEnrollmentGroupQuery(QuerySpecification querySpecification, int pageSize)
  nameWithType: ProvisioningServiceClient.createEnrollmentGroupQuery(QuerySpecification querySpecification, int pageSize)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(QuerySpecification querySpecification, int pageSize)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Factory to create an enrollmentGroup query.


    This method will create a new enrollment group query on Device Provisioning Service and return it as a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.


    The Device Provisioning Service expects a SQL query in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref>, for instance `"SELECT * FROM enrollments"`.


    For each iteration, the Query will return a List of objects correspondent to the query result. The maximum number of items per iteration can be specified by the pageSize. It is optional, you can provide **0** for default pageSize or use the API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)" data-throw-if-not-resolved="false">#createEnrollmentGroupQuery(QuerySpecification)</xref>.
  syntax:
    content: public Query createEnrollmentGroupQuery(QuerySpecification querySpecification, int pageSize)
    parameters:
    - id: querySpecification
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref> with the SQL query. It cannot be <code>null</code>.
    - id: pageSize
      type: int
      description: the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.Query
      description: The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String)
  id: createEnrollmentGroupRegistrationStateQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId)
  nameWithType: ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Factory to create a registration status query.


    This method will create a new registration status query for a specific enrollment group on the Device Provisioning Service and return it as a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.


    The Device Provisioning Service expects a SQL query in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref>, for instance `"SELECT * FROM enrollments"`.
  syntax:
    content: public Query createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId)
    parameters:
    - id: querySpecification
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref> with the SQL query. It cannot be <code>null</code>.
    - id: enrollmentGroupId
      type: java.lang.String
      description: the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.Query
      description: The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)
  id: createEnrollmentGroupRegistrationStateQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)
  nameWithType: ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Factory to create a registration status query.


    This method will create a new registration status query for a specific enrollment group on the Device Provisioning Service and return it as a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.


    The Device Provisioning Service expects a SQL query in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref>, for instance `"SELECT * FROM enrollments"`.


    For each iteration, the Query will return a List of objects correspondent to the query result. The maximum number of items per iteration can be specified by the pageSize. It is optional, you can provide **0** for default pageSize or use the API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)" data-throw-if-not-resolved="false">#createIndividualEnrollmentQuery(QuerySpecification)</xref>.
  syntax:
    content: public Query createEnrollmentGroupRegistrationStateQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)
    parameters:
    - id: querySpecification
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref> with the SQL query. It cannot be <code>null</code>.
    - id: enrollmentGroupId
      type: java.lang.String
      description: the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.
    - id: pageSize
      type: int
      description: the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.Query
      description: The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String)
  id: createEnrollmentGroupRegistrationStatusQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId)
  nameWithType: ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  syntax:
    content: public Query createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId)
    parameters:
    - id: querySpecification
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref> with the SQL query. It cannot be <code>null</code>.
    - id: enrollmentGroupId
      type: java.lang.String
      description: the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.Query
      description: The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)
  id: createEnrollmentGroupRegistrationStatusQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,java.lang.String,int)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)
  nameWithType: ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  syntax:
    content: public Query createEnrollmentGroupRegistrationStatusQuery(QuerySpecification querySpecification, String enrollmentGroupId, int pageSize)
    parameters:
    - id: querySpecification
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref> with the SQL query. It cannot be <code>null</code>.
    - id: enrollmentGroupId
      type: java.lang.String
      description: the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.
    - id: pageSize
      type: int
      description: the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.Query
      description: The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createFromConnectionString(java.lang.String)
  id: createFromConnectionString(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: createFromConnectionString(String connectionString)
  nameWithType: ProvisioningServiceClient.createFromConnectionString(String connectionString)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createFromConnectionString(String connectionString)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createFromConnectionString*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Create a new instance of the `DeviceProvisioningServiceClient` that exposes the API to the Device Provisioning Service.


    The Device Provisioning Service Client is created based on a **Provisioning Connection String**.


    Once you create a Device Provisioning Service on Azure, you can get the connection string on the Azure portal.
  syntax:
    content: public static ProvisioningServiceClient createFromConnectionString(String connectionString)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: the <code>String</code> that cares the connection string of the Device Provisioning Service.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
      description: The <code>ProvisioningServiceClient</code> with the new instance of this object.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)
  id: createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: createIndividualEnrollmentQuery(QuerySpecification querySpecification)
  nameWithType: ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification querySpecification)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification querySpecification)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Factory to create a individualEnrollment query.


    This method will create a new individualEnrollment query for Device Provisioning Service and return it as a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.


    The Device Provisioning Service expects a SQL query in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref>, for instance `"SELECT * FROM enrollments"`.
  syntax:
    content: public Query createIndividualEnrollmentQuery(QuerySpecification querySpecification)
    parameters:
    - id: querySpecification
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref> with the SQL query. It cannot be <code>null</code>.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.Query
      description: The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)
  id: createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification,int)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: createIndividualEnrollmentQuery(QuerySpecification querySpecification, int pageSize)
  nameWithType: ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification querySpecification, int pageSize)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(QuerySpecification querySpecification, int pageSize)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Factory to create a individualEnrollment query.


    This method will create a new individualEnrollment query for Device Provisioning Service and return it as a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.


    The Device Provisioning Service expects a SQL query in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref>, for instance `"SELECT * FROM enrollments"`.


    For each iteration, the Query will return a List of objects correspondent to the query result. The maximum number of items per iteration can be specified by the pageSize. It is optional, you can provide **0** for default pageSize or use the API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery(com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification)" data-throw-if-not-resolved="false">#createIndividualEnrollmentQuery(QuerySpecification)</xref>.
  syntax:
    content: public Query createIndividualEnrollmentQuery(QuerySpecification querySpecification, int pageSize)
    parameters:
    - id: querySpecification
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification" data-throw-if-not-resolved="false">QuerySpecification</xref> with the SQL query. It cannot be <code>null</code>.
    - id: pageSize
      type: int
      description: the <code>int</code> with the maximum number of items per iteration. It can be 0 for default, but not negative.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.Query
      description: The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.Query" data-throw-if-not-resolved="false">Query</xref> iterator.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateEnrollmentGroup(com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup)
  id: createOrUpdateEnrollmentGroup(com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: createOrUpdateEnrollmentGroup(EnrollmentGroup enrollmentGroup)
  nameWithType: ProvisioningServiceClient.createOrUpdateEnrollmentGroup(EnrollmentGroup enrollmentGroup)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateEnrollmentGroup(EnrollmentGroup enrollmentGroup)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateEnrollmentGroup*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Create or update an enrollment group record.


    This API creates a new enrollment group or update a existed one. All enrollment group in the Device Provisioning Service contains a unique identifier called enrollmentGroupId. If this API is called with an enrollmentGroupId that already exists, it will replace the existed enrollmentGroup information by the new one. On the other hand, if the enrollmentGroupId does not exit, it will be created.


    To use the Device Provisioning Service API, you must include the follow package on your application.


    ```java

    // Include the following imports to use the Device Provisioning Service APIs.
     import com.microsoft.azure.sdk.iot.provisioning.service.*;
    ```


    **Sample:**


    The follow code will create a new enrollmentGroup that will provisioning multiple devices to the ContosoHub.azure-devices.net.


    ```java

    // EnrollmentGroup information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String ENROLLMENT_GROUP_ID = "enrollmentGroupId-1";
     private static final String IOTHUB_HOST_NAME = "ContosoHub.azure-devices.net";
     private static String PUBLIC_CERTIFICATE_STRING =
             "-----BEGIN CERTIFICATE-----\n" +
             "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
             "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
             "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
             "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
             "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
             "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
             "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
             "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
             "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
             "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n" +
             "-----END CERTIFICATE-----\n";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Create a new enrollmentGroup configurations.
         Attestation attestation = X509Attestation.createFromSigningCertificates(PUBLIC_KEY_CERTIFICATE_STRING);
         EnrollmentGroup enrollmentGroup =
             new EnrollmentGroup(
                 enrollmentGroupId,
                 attestation);
         enrollmentGroup.setIotHubHostName(IOTHUB_HOST_NAME);
         enrollmentGroup.setProvisioningStatus(ProvisioningStatus.ENABLED);

         // Create a new enrollmentGroup.
         EnrollmentGroup enrollmentGroupResult =  provisioningServiceClient.createOrUpdateEnrollmentGroup(enrollmentGroup);
     }
    ```
  syntax:
    content: public EnrollmentGroup createOrUpdateEnrollmentGroup(EnrollmentGroup enrollmentGroup)
    parameters:
    - id: enrollmentGroup
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup" data-throw-if-not-resolved="false">EnrollmentGroup</xref> object that describes the individualEnrollment that will be created of updated.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
      description: An <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup" data-throw-if-not-resolved="false">EnrollmentGroup</xref> object with the result of the create or update requested.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: if the Provisioning was not able to create or update the enrollment
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment(com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment)
  id: createOrUpdateIndividualEnrollment(com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: createOrUpdateIndividualEnrollment(IndividualEnrollment individualEnrollment)
  nameWithType: ProvisioningServiceClient.createOrUpdateIndividualEnrollment(IndividualEnrollment individualEnrollment)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment(IndividualEnrollment individualEnrollment)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Create or update a individual Device Enrollment record.


    This API creates a new individualEnrollment or update a existed one. All enrollments in the Device Provisioning Service contains a unique identifier called registrationId. If this API is called for an individualEnrollment with a registrationId that already exists, it will replace the existed individualEnrollment information by the new one. On the other hand, if the registrationId does not exit, this API will create a new individualEnrollment.


    To use the Device Provisioning Service API, you must include the follow package on your application.


    ```java

    // Include the following imports to use the Device Provisioning Service APIs.
     import com.microsoft.azure.sdk.iot.provisioning.service.*;
    ```


    **Sample:**


    The follow code will create a new individualEnrollment that will provisioning the ContosoDevice1000 to the ContosoHub.azure-devices.net using TPM attestation.


    ```java

    // IndividualEnrollment information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String TPM_ENDORSEMENT_KEY = "tpm-endorsement-key";
     private static final String REGISTRATION_ID = "registrationId-1";
     private static final String DEVICE_ID = "ContosoDevice1000";
     private static final String IOTHUB_HOST_NAME = "ContosoHub.azure-devices.net";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Create a new individualEnrollment configurations.
         Attestation attestation = new TpmAttestation(TPM_ENDORSEMENT_KEY);
         IndividualEnrollment individualEnrollment =
            new IndividualEnrollment(
                 REGISTRATION_ID,
                 attestation);
         individualEnrollment.setDeviceId(DEVICE_ID);
         individualEnrollment.setIotHubHostName(IOTHUB_HOST_NAME);
         individualEnrollment.setProvisioningStatus(ProvisioningStatus.DISABLED);

         // Create a new individualEnrollment.
         IndividualEnrollment enrollmentResult =  deviceProvisioningServiceClient.createOrUpdateIndividualEnrollment(individualEnrollment);
     }
    ```


    If the registrationId already exists, this method will update existed enrollments. Note that update the individualEnrollment will not change the status of the device that was already registered using the old individualEnrollment.


    The follow code will update the provisioningStatus of the previous individualEnrollment from **disabled** to **enabled**.


    ```java

    // IndividualEnrollment information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String REGISTRATION_ID = "registrationId-1";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Get the content of the previous individualEnrollment.
         IndividualEnrollment individualEnrollment =  deviceProvisioningServiceClient.getIndividualEnrollment(REGISTRATION_ID);

         // Change the provisioning status, from disabled to enabled
         individualEnrollment.setProvisioningStatus(ProvisioningStatus.ENABLED);

         // Update the individualEnrollment information.
         IndividualEnrollment enrollmentResult =  deviceProvisioningServiceClient.createOrUpdateIndividualEnrollment(individualEnrollment);
     }
    ```
  syntax:
    content: public IndividualEnrollment createOrUpdateIndividualEnrollment(IndividualEnrollment individualEnrollment)
    parameters:
    - id: individualEnrollment
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
      description: >-
        the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment" data-throw-if-not-resolved="false">IndividualEnrollment</xref> object that describes the individualEnrollment that will be created of
                           updated. It cannot be <code>null</code>.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
      description: An <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment" data-throw-if-not-resolved="false">IndividualEnrollment</xref> object with the result of the create or update requested.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: if the provided parameter is not correct.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState)
  id: deleteDeviceRegistrationState(com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: deleteDeviceRegistrationState(DeviceRegistrationState deviceRegistrationState)
  nameWithType: ProvisioningServiceClient.deleteDeviceRegistrationState(DeviceRegistrationState deviceRegistrationState)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(DeviceRegistrationState deviceRegistrationState)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Delete the Registration Status information.


    This method will remove the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState" data-throw-if-not-resolved="false">DeviceRegistrationState</xref> from the Device Provisioning Service using the provided <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState" data-throw-if-not-resolved="false">DeviceRegistrationState</xref> information. The Device Provisioning Service will care about the id and the eTag on the DeviceRegistrationState. If you want to delete the deviceRegistrationState regardless the eTag, you can use the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String)" data-throw-if-not-resolved="false">#deleteDeviceRegistrationState(String)</xref> passing only the id.


    If the id does not exists or the eTag does not matches, this method will throw <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException" data-throw-if-not-resolved="false">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager" data-throw-if-not-resolved="false">ProvisioningServiceClientExceptionManager</xref>


    **Sample:**


    The follow code will delete the information about the deviceRegistrationState "registrationId-1".


    ```java

    // Registration Status information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String REGISTRATION_ID = "registrationId-1";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Get the registration status information.
         DeviceRegistrationState registrationStateResult =  deviceProvisioningServiceClient.getDeviceRegistrationState(REGISTRATION_ID);

         // Delete the registration status information.
         deviceProvisioningServiceClient.deleteDeviceRegistrationState(registrationStateResult);
     }
    ```
  syntax:
    content: public void deleteDeviceRegistrationState(DeviceRegistrationState deviceRegistrationState)
    parameters:
    - id: deviceRegistrationState
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState" data-throw-if-not-resolved="false">DeviceRegistrationState</xref> that identifies the deviceRegistrationState. It cannot be <code>null</code>.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: >-
      if the Provisioning Device Service was not able to delete the
                                                  registration status information for the provided DeviceRegistrationState.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String)
  id: deleteDeviceRegistrationState(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: deleteDeviceRegistrationState(String id)
  nameWithType: ProvisioningServiceClient.deleteDeviceRegistrationState(String id)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(String id)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Delete the registration status information.


    This method will remove the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState" data-throw-if-not-resolved="false">DeviceRegistrationState</xref> from the Device Provisioning Service using the provided id. It will delete the registration status regardless the eTag. It means that this API correspond to the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">#deleteDeviceRegistrationState(String, String)</xref> with the `eTag="*"`.


    If the id does not exists, this method will throw <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException" data-throw-if-not-resolved="false">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager" data-throw-if-not-resolved="false">ProvisioningServiceClientExceptionManager</xref>


    **Sample:**


    The follow code will delete the information about the registration status "registrationId-1".


    ```java

    // deviceRegistrationState information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String REGISTRATION_ID = "registrationId-1";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Delete the registration status information.
         deviceProvisioningServiceClient.deleteDeviceRegistrationState(REGISTRATION_ID);
     }
    ```
  syntax:
    content: public void deleteDeviceRegistrationState(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the <code>String</code> that identifies the deviceRegistrationState. It cannot be <code>null</code> or empty.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: >-
      if the Provisioning Device Service was not able to delete the
                                                  deviceRegistrationState information for the provided registrationId.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String,java.lang.String)
  id: deleteDeviceRegistrationState(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: deleteDeviceRegistrationState(String id, String eTag)
  nameWithType: ProvisioningServiceClient.deleteDeviceRegistrationState(String id, String eTag)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(String id, String eTag)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Delete the registration status information.


    This method will remove the registration status from the Device Provisioning Service using the provided id and eTag. If you want to delete the registration status regardless the eTag, you can use <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState(java.lang.String)" data-throw-if-not-resolved="false">#deleteDeviceRegistrationState(String)</xref> or you can pass the eTag as `null`, empty, or `"*"`.


    If the id does not exists or the eTag does not matches, this method will throw <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException" data-throw-if-not-resolved="false">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager" data-throw-if-not-resolved="false">ProvisioningServiceClientExceptionManager</xref>


    **Sample:**


    The follow code will delete the information about the deviceRegistrationState "registrationId-1" regardless the eTag.


    ```java

    // Registration Status information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String REGISTRATION_ID = "registrationId-1";
     private Static final String ANY_ETAG = "*";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Delete the deviceRegistrationState information.
         deviceProvisioningServiceClient.deleteDeviceRegistrationState(REGISTRATION_ID, ANY_ETAG);
     }
    ```
  syntax:
    content: public void deleteDeviceRegistrationState(String id, String eTag)
    parameters:
    - id: id
      type: java.lang.String
      description: the <code>String</code> that identifies the deviceRegistrationState. It cannot be <code>null</code> or empty.
    - id: eTag
      type: java.lang.String
      description: >-
        the <code>String</code> with the deviceRegistrationState eTag. It can be <code>null</code> or empty.
                     The Device Provisioning Service will ignore it in all of these cases.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: >-
      if the Provisioning Device Service was not able to delete the
                                                  deviceRegistrationState information for the provided registrationId and eTag.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState)
  id: deleteDeviceRegistrationStatus(com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: deleteDeviceRegistrationStatus(DeviceRegistrationState deviceRegistrationState)
  nameWithType: ProvisioningServiceClient.deleteDeviceRegistrationStatus(DeviceRegistrationState deviceRegistrationState)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(DeviceRegistrationState deviceRegistrationState)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  syntax:
    content: public void deleteDeviceRegistrationStatus(DeviceRegistrationState deviceRegistrationState)
    parameters:
    - id: deviceRegistrationState
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState" data-throw-if-not-resolved="false">DeviceRegistrationState</xref> that identifies the deviceRegistrationState. It cannot be <code>null</code>.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: >-
      if the Provisioning Device Service was not able to delete the
                                                  registration status information for the provided DeviceRegistrationState.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(java.lang.String)
  id: deleteDeviceRegistrationStatus(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: deleteDeviceRegistrationStatus(String id)
  nameWithType: ProvisioningServiceClient.deleteDeviceRegistrationStatus(String id)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(String id)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  syntax:
    content: public void deleteDeviceRegistrationStatus(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the <code>String</code> that identifies the deviceRegistrationState. It cannot be <code>null</code> or empty.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: >-
      if the Provisioning Device Service was not able to delete the
                                                  deviceRegistrationState information for the provided registrationId.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(java.lang.String,java.lang.String)
  id: deleteDeviceRegistrationStatus(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: deleteDeviceRegistrationStatus(String id, String eTag)
  nameWithType: ProvisioningServiceClient.deleteDeviceRegistrationStatus(String id, String eTag)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus(String id, String eTag)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  syntax:
    content: public void deleteDeviceRegistrationStatus(String id, String eTag)
    parameters:
    - id: id
      type: java.lang.String
      description: the <code>String</code> that identifies the deviceRegistrationState. It cannot be <code>null</code> or empty.
    - id: eTag
      type: java.lang.String
      description: >-
        the <code>String</code> with the deviceRegistrationState eTag. It can be <code>null</code> or empty.
                     The Device Provisioning Service will ignore it in all of these cases.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: >-
      if the Provisioning Device Service was not able to delete the
                                                  deviceRegistrationState information for the provided registrationId and eTag.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup)
  id: deleteEnrollmentGroup(com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: deleteEnrollmentGroup(EnrollmentGroup enrollmentGroup)
  nameWithType: ProvisioningServiceClient.deleteEnrollmentGroup(EnrollmentGroup enrollmentGroup)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(EnrollmentGroup enrollmentGroup)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Delete the enrollmentGroup information.


    This method will remove the enrollmentGroup from the Device Provisioning Service using the provided <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup" data-throw-if-not-resolved="false">EnrollmentGroup</xref> information. The Device Provisioning Service will care about the enrollmentGroupId and the eTag on the enrollmentGroup. If you want to delete the enrollment regardless the eTag, you can set the `eTag="*"` into the enrollmentGroup, or use the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String)" data-throw-if-not-resolved="false">#deleteEnrollmentGroup(String)</xref> passing only the enrollmentGroupId.


    Note that delete the enrollmentGroup will not remove the Devices itself from the IotHub.


    If the enrollmentGroupId does not exists or the eTag does not matches, this method will throw <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException" data-throw-if-not-resolved="false">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager" data-throw-if-not-resolved="false">ProvisioningServiceClientExceptionManager</xref>


    **Sample:**


    The follow code will delete the information about the enrollmentGroup "enrollmentGroupId-1".


    ```java

    // EnrollmentGroup information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String ENROLLMENT_GROUP_ID = "enrollmentGroupId-1";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Get the enrollmentGroup information.
         EnrollmentGroup enrollmentGroupResult =  deviceProvisioningServiceClient.getEnrollmentGroup(ENROLLMENT_GROUP_ID);

         // Delete the enrollmentGroup information.
         deviceProvisioningServiceClient.deleteEnrollmentGroup(enrollmentResult);
     }
    ```
  syntax:
    content: public void deleteEnrollmentGroup(EnrollmentGroup enrollmentGroup)
    parameters:
    - id: enrollmentGroup
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup" data-throw-if-not-resolved="false">EnrollmentGroup</xref> that identifies the enrollmentGroup. It cannot be <code>null</code>.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: >-
      if the Provisioning Device Service was not able to delete the
                                                  enrollmentGroup information for the provided enrollmentGroup.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String)
  id: deleteEnrollmentGroup(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: deleteEnrollmentGroup(String enrollmentGroupId)
  nameWithType: ProvisioningServiceClient.deleteEnrollmentGroup(String enrollmentGroupId)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(String enrollmentGroupId)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Delete the enrollmentGroup information.


    This method will remove the enrollmentGroup from the Device Provisioning Service using the provided enrollmentGroupId. It will delete the enrollmentGroup regardless the eTag. It means that this API correspond to the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">#deleteEnrollmentGroup(String, String)</xref> with the `eTag="*"`.


    Note that delete the enrollmentGroup will not remove the Devices itself from the IotHub.


    If the enrollmentGroupId does not exists, this method will throw <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException" data-throw-if-not-resolved="false">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager" data-throw-if-not-resolved="false">ProvisioningServiceClientExceptionManager</xref>


    **Sample:**


    The follow code will delete the information about the enrollmentGroup "enrollmentGroupId-1".


    ```java

    // EnrollmentGroup information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String ENROLLMENT_GROUP_ID = "enrollmentGroupId-1";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Delete the enrollmentGroup information.
         deviceProvisioningServiceClient.deleteEnrollmentGroup(ENROLLMENT_GROUP_ID);
     }
    ```
  syntax:
    content: public void deleteEnrollmentGroup(String enrollmentGroupId)
    parameters:
    - id: enrollmentGroupId
      type: java.lang.String
      description: the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: >-
      if the Provisioning Device Service was not able to delete the
                                                  enrollmentGroup information for the provided enrollmentGroupId.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String,java.lang.String)
  id: deleteEnrollmentGroup(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: deleteEnrollmentGroup(String enrollmentGroupId, String eTag)
  nameWithType: ProvisioningServiceClient.deleteEnrollmentGroup(String enrollmentGroupId, String eTag)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(String enrollmentGroupId, String eTag)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Delete the enrollmentGroup information.


    This method will remove the enrollmentGroup from the Device Provisioning Service using the provided enrollmentGroupId and eTag. If you want to delete the enrollmentGroup regardless the eTag, you can use <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup(java.lang.String)" data-throw-if-not-resolved="false">#deleteEnrollmentGroup(String)</xref> or you can pass the eTag as `null`, empty, or `"*"`.


    Note that delete the enrollmentGroup will not remove the Device itself from the IotHub.


    If the enrollmentGroupId does not exists or eTag does not matches, this method will throw <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException" data-throw-if-not-resolved="false">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager" data-throw-if-not-resolved="false">ProvisioningServiceClientExceptionManager</xref>


    **Sample:**


    The follow code will delete the information about the enrollmentGroup "enrollmentGroupId-1" regardless the eTag.


    ```java

    // enrollmentGroup information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String ENROLLMENT_GROUP_ID = "enrollmentGroupId-1";
     private Static final String ANY_ETAG = "*";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Delete the enrollmentGroup information.
         deviceProvisioningServiceClient.deleteEnrollmentGroup(ENROLLMENT_GROUP_ID, ANY_ETAG);
     }
    ```
  syntax:
    content: public void deleteEnrollmentGroup(String enrollmentGroupId, String eTag)
    parameters:
    - id: enrollmentGroupId
      type: java.lang.String
      description: the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.
    - id: eTag
      type: java.lang.String
      description: >-
        the <code>String</code> with the enrollmentGroup eTag. It can be <code>null</code> or empty.
                     The Device Provisioning Service will ignore it in all of these cases.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: >-
      if the Provisioning Device Service was not able to delete the
                                                  enrollmentGroup information for the provided enrollmentGroupId and eTag.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment)
  id: deleteIndividualEnrollment(com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: deleteIndividualEnrollment(IndividualEnrollment individualEnrollment)
  nameWithType: ProvisioningServiceClient.deleteIndividualEnrollment(IndividualEnrollment individualEnrollment)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(IndividualEnrollment individualEnrollment)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Delete the individualEnrollment information.


    This method will remove the individualEnrollment from the Device Provisioning Service using the provided <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment" data-throw-if-not-resolved="false">IndividualEnrollment</xref> information. The Device Provisioning Service will care about the registrationId and the eTag on the individualEnrollment. If you want to delete the individualEnrollment regardless the eTag, you can set the `eTag="*"` into the individualEnrollment, or use the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String)" data-throw-if-not-resolved="false">#deleteIndividualEnrollment(String)</xref> passing only the registrationId.


    Note that delete the individualEnrollment will not remove the Device itself from the IotHub.


    If the registrationId does not exists or the eTag not matches, this method will throw <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException" data-throw-if-not-resolved="false">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager" data-throw-if-not-resolved="false">ProvisioningServiceClientExceptionManager</xref>


    **Sample:**


    The follow code will delete the information about the individualEnrollment "registrationId-1".


    ```java

    // IndividualEnrollment information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String REGISTRATION_ID = "registrationId-1";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Get the individualEnrollment information.
         IndividualEnrollment enrollmentResult =  deviceProvisioningServiceClient.getIndividualEnrollment(REGISTRATION_ID);

         // Delete the individualEnrollment information.
         deviceProvisioningServiceClient.deleteIndividualEnrollment(enrollmentResult);
     }
    ```
  syntax:
    content: public void deleteIndividualEnrollment(IndividualEnrollment individualEnrollment)
    parameters:
    - id: individualEnrollment
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment" data-throw-if-not-resolved="false">IndividualEnrollment</xref> that identifies the individualEnrollment. It cannot be <code>null</code>.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: if the provided parameter is not correct.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String)
  id: deleteIndividualEnrollment(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: deleteIndividualEnrollment(String registrationId)
  nameWithType: ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Delete the individualEnrollment information.


    This method will remove the individualEnrollment from the Device Provisioning Service using the provided registrationId. It will delete the enrollment regardless the eTag. It means that this API correspond to the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">#deleteIndividualEnrollment(String, String)</xref> with the `eTag="*"`.


    Note that delete the enrollment will not remove the Device itself from the IotHub.


    If the registrationId does not exists, this method will throw <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException" data-throw-if-not-resolved="false">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager" data-throw-if-not-resolved="false">ProvisioningServiceClientExceptionManager</xref>


    **Sample:**


    The follow code will delete the information about the individualEnrollment "registrationId-1".


    ```java

    // IndividualEnrollment information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String REGISTRATION_ID = "registrationId-1";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Delete the individualEnrollment information.
         deviceProvisioningServiceClient.deleteIndividualEnrollment(REGISTRATION_ID);
     }
    ```
  syntax:
    content: public void deleteIndividualEnrollment(String registrationId)
    parameters:
    - id: registrationId
      type: java.lang.String
      description: the <code>String</code> that identifies the individualEnrollment. It cannot be <code>null</code> or empty.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: if the provided registrationId is not correct.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String,java.lang.String)
  id: deleteIndividualEnrollment(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: deleteIndividualEnrollment(String registrationId, String eTag)
  nameWithType: ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId, String eTag)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(String registrationId, String eTag)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Delete the individualEnrollment information.


    This method will remove the individualEnrollment from the Device Provisioning Service using the provided registrationId and eTag. If you want to delete the enrollment regardless the eTag, you can use <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment(java.lang.String)" data-throw-if-not-resolved="false">#deleteIndividualEnrollment(String)</xref> or you can pass the eTag as `null`, empty, or `"*"`.


    Note that delete the enrollment will not remove the Device itself from the IotHub.


    If the registrationId does not exists or the eTag does not matches, this method will throw <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException" data-throw-if-not-resolved="false">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager" data-throw-if-not-resolved="false">ProvisioningServiceClientExceptionManager</xref>


    **Sample:**


    The follow code will delete the information about the individualEnrollment "registrationId-1" regardless the eTag.


    ```java

    // IndividualEnrollment information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String REGISTRATION_ID = "registrationId-1";
     private Static final String ANY_ETAG = "*";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Delete the individualEnrollment information.
         deviceProvisioningServiceClient.deleteIndividualEnrollment(REGISTRATION_ID, ANY_ETAG);
     }
    ```
  syntax:
    content: public void deleteIndividualEnrollment(String registrationId, String eTag)
    parameters:
    - id: registrationId
      type: java.lang.String
      description: the <code>String</code> that identifies the individualEnrollment. It cannot be <code>null</code> or empty.
    - id: eTag
      type: java.lang.String
      description: >-
        the <code>String</code> with the IndividualEnrollment eTag. It can be <code>null</code> or empty.
                     The Device Provisioning Service will ignore it in all of these cases.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: if the provided registrationId is not correct.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getDeviceRegistrationState(java.lang.String)
  id: getDeviceRegistrationState(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: getDeviceRegistrationState(String id)
  nameWithType: ProvisioningServiceClient.getDeviceRegistrationState(String id)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getDeviceRegistrationState(String id)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getDeviceRegistrationState*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Retrieve the registration status information.


    This method will return the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState" data-throw-if-not-resolved="false">DeviceRegistrationState</xref> for the provided id. It will retrieve the correspondent deviceRegistrationState from the Device Provisioning Service, and return it in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState" data-throw-if-not-resolved="false">DeviceRegistrationState</xref> object.


    If the id do not exists, this method will throw <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException" data-throw-if-not-resolved="false">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager" data-throw-if-not-resolved="false">ProvisioningServiceClientExceptionManager</xref>


    **Sample:**


    The follow code will get and print the information about the deviceRegistrationState "registrationId-1".


    ```java

    // Registration status information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String REGISTRATION_ID = "registrationId-1";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Get the deviceRegistrationState information.
         DeviceRegistrationState registrationStateResult =  deviceProvisioningServiceClient.getDeviceRegistrationState(REGISTRATION_ID);
         System.out.println(registrationStateResult.toString());
     }
    ```
  syntax:
    content: public DeviceRegistrationState getDeviceRegistrationState(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the <code>String</code> that identifies the deviceRegistrationState. It cannot be <code>null</code> or empty.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState
      description: The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState" data-throw-if-not-resolved="false">DeviceRegistrationState</xref> with the content of the deviceRegistrationState in the Provisioning Device Service.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: >-
      if the Provisioning Device Service was not able to retrieve the
                                                  deviceRegistrationState information for the provided registrationId.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroup(java.lang.String)
  id: getEnrollmentGroup(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: getEnrollmentGroup(String enrollmentGroupId)
  nameWithType: ProvisioningServiceClient.getEnrollmentGroup(String enrollmentGroupId)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroup(String enrollmentGroupId)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroup*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Retrieve the enrollmentGroup information.


    This method will return the enrollmentGroup information for the provided enrollmentGroupId. It will retrieve the correspondent enrollmentGroup from the Device Provisioning Service, and return it in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup" data-throw-if-not-resolved="false">EnrollmentGroup</xref> object.


    If the enrollmentGroupId does not exists, this method will throw <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException" data-throw-if-not-resolved="false">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager" data-throw-if-not-resolved="false">ProvisioningServiceClientExceptionManager</xref>


    **Sample:**


    The follow code will get and print the information about the enrollmentGroupId "enrollmentGroupId-1".


    ```java

    // EnrollmentGroup information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String ENROLLMENT_GROUP_ID = "enrollmentGroupId-1";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Get the individualEnrollment information.
         EnrollmentGroup enrollmentGroupResult =  deviceProvisioningServiceClient.getEnrollmentGroup(ENROLLMENT_GROUP_ID);
         System.out.println(enrollmentGroupResult.toString());
     }
    ```
  syntax:
    content: public EnrollmentGroup getEnrollmentGroup(String enrollmentGroupId)
    parameters:
    - id: enrollmentGroupId
      type: java.lang.String
      description: the <code>String</code> that identifies the enrollmentGroup. It cannot be <code>null</code> or empty.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
      description: The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup" data-throw-if-not-resolved="false">EnrollmentGroup</xref> with the content of the enrollmentGroup in the Provisioning Device Service.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: >-
      if the Provisioning Device Service was not able to retrieve the
                                                  enrollmentGroup information for the provided enrollmentGroupId.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroupAttestationMechanism(java.lang.String)
  id: getEnrollmentGroupAttestationMechanism(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: getEnrollmentGroupAttestationMechanism(String enrollmentGroupId)
  nameWithType: ProvisioningServiceClient.getEnrollmentGroupAttestationMechanism(String enrollmentGroupId)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroupAttestationMechanism(String enrollmentGroupId)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroupAttestationMechanism*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: Get the attestation mechanism details for a given enrollment group
  syntax:
    content: public AttestationMechanism getEnrollmentGroupAttestationMechanism(String enrollmentGroupId)
    parameters:
    - id: enrollmentGroupId
      type: java.lang.String
      description: the group id of the enrollment group to look up the attestation mechanism for
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
      description: the attestation mechanism of the given enrollment group
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: if any exception is thrown while getting the attestation mechanism
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollment(java.lang.String)
  id: getIndividualEnrollment(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: getIndividualEnrollment(String registrationId)
  nameWithType: ProvisioningServiceClient.getIndividualEnrollment(String registrationId)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollment(String registrationId)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollment*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Retrieve the individualEnrollment information.


    This method will return the enrollment information for the provided registrationId. It will retrieve the correspondent individualEnrollment from the Device Provisioning Service, and return it in the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment" data-throw-if-not-resolved="false">IndividualEnrollment</xref> object.


    If the registrationId do not exists, this method will throw <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientNotFoundException" data-throw-if-not-resolved="false">ProvisioningServiceClientNotFoundException</xref>. for more exceptions that this method can throw, please see <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientExceptionManager" data-throw-if-not-resolved="false">ProvisioningServiceClientExceptionManager</xref>


    **Sample:**


    The follow code will get and print the information about the individualEnrollment "registrationId-1".


    ```java

    // IndividualEnrollment information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String REGISTRATION_ID = "registrationId-1";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Get the individualEnrollment information.
         IndividualEnrollment enrollmentResult =  deviceProvisioningServiceClient.getIndividualEnrollment(REGISTRATION_ID);
         System.out.println(enrollmentResult.toString());
     }
    ```
  syntax:
    content: public IndividualEnrollment getIndividualEnrollment(String registrationId)
    parameters:
    - id: registrationId
      type: java.lang.String
      description: the <code>String</code> that identifies the individualEnrollment. It cannot be <code>null</code> or empty.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
      description: The <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment" data-throw-if-not-resolved="false">IndividualEnrollment</xref> with the content of the individualEnrollment in the Provisioning Device Service.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: if the provided parameter is not correct.
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollmentAttestationMechanism(java.lang.String)
  id: getIndividualEnrollmentAttestationMechanism(java.lang.String)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: getIndividualEnrollmentAttestationMechanism(String registrationId)
  nameWithType: ProvisioningServiceClient.getIndividualEnrollmentAttestationMechanism(String registrationId)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollmentAttestationMechanism(String registrationId)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollmentAttestationMechanism*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: Get the attestation mechanism details for a given individual enrollment
  syntax:
    content: public AttestationMechanism getIndividualEnrollmentAttestationMechanism(String registrationId)
    parameters:
    - id: registrationId
      type: java.lang.String
      description: the registration id of the individual enrollment to look up the attestation mechanism for
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
      description: the attestation mechanism of the given individual enrollment
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: if any exception is thrown while getting the attestation mechanism
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation(com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode,java.util.Collection<com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment>)
  id: runBulkEnrollmentOperation(com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode,java.util.Collection<com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment>)
  artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient
  langs:
  - java
  name: runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)
  nameWithType: ProvisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)
  overload: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation*
  type: Method
  package: com.microsoft.azure.sdk.iot.provisioning.service
  summary: >-
    Create, update or delete a set of individual Device Enrollments.


    This API provide the means to do a single operation over multiple individualEnrollments. A valid operation is determined by <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode" data-throw-if-not-resolved="false">BulkOperationMode</xref>, and can be 'create', 'update', 'updateIfMatchETag', or 'delete'.


    To use the Device Provisioning Service API, you must include the follow package on your application.


    ```java

    // Include the following imports to use the Device Provisioning Service APIs.
     import com.microsoft.azure.sdk.iot.provisioning.service.*;
    ```


    **Sample:**


    The follow code will create two new enrollment that will provisioning the ContosoDevice1000 and ContosoDevice1001 to the ContosoHub.azure-devices.net using TPM attestation.


    ```java

    // IndividualEnrollment information.
     private static final String PROVISIONING_CONNECTION_STRING = "HostName=ContosoProvisioning.azure-devices-provisioning.net;" +
                                                                  "SharedAccessKeyName=contosoprovisioningserviceowner;" +
                                                                  "SharedAccessKey=0000000000000000000000000000000000000000000=";
     private static final String TPM_ENDORSEMENT_KEY = "tpm-endorsement-key";
     private static final String IOTHUB_HOST_NAME = "ContosoHub.azure-devices.net";

     private static final String REGISTRATION_ID_1 = "registrationId-1";
     private static final String DEVICE_ID_1 = "ContosoDevice1000";

     private static final String REGISTRATION_ID_2 = "registrationId-2";
     private static final String DEVICE_ID_2 = "ContosoDevice1001";

     public static void main(String[] args) throws IOException, URISyntaxException, ProvisioningServiceClientException
     {
         // Create a Device Provisioning Service Client.
         DeviceProvisioningServiceClient deviceProvisioningServiceClient =
             DeviceProvisioningServiceClient.createFromConnectionString(PROVISIONING_CONNECTION_STRING);

         // Create two new individualEnrollment configurations.
         Attestation attestation = new TpmAttestation(TPM_ENDORSEMENT_KEY);
         IndividualEnrollment enrollment1 =
            new IndividualEnrollment(
                 REGISTRATION_ID_1,
                 attestation);
         enrollment1.setDeviceId(DEVICE_ID_1);
         enrollment1.setIotHubHostName(IOTHUB_HOST_NAME);
         enrollment1.setProvisioningStatus(ProvisioningStatus.DISABLED);

         IndividualEnrollment enrollment2 =
            new IndividualEnrollment(
                 REGISTRATION_ID_2,
                 attestation);
         enrollment2.setDeviceId(DEVICE_ID_2);
         enrollment2.setIotHubHostName(IOTHUB_HOST_NAME);
         enrollment2.setProvisioningStatus(ProvisioningStatus.DISABLED);

         // Add these 2 individualEnrollments to a list of individualEnrollments.
         List individualEnrollments = new LinkedList<>();
         individualEnrollments.add(enrollment1);
         individualEnrollments.add(enrollment2);

         // Create these 2 new individualEnrollment using the bulk operation.
         BulkEnrollmentOperationResult bulkEnrollmentOperationResult =  provisioningServiceClient.runBulkEnrollmentOperation(BulkOperationMode.create, individualEnrollments);
     }
    ```
  syntax:
    content: public BulkEnrollmentOperationResult runBulkEnrollmentOperation(BulkOperationMode bulkOperationMode, Collection<IndividualEnrollment> individualEnrollments)
    parameters:
    - id: bulkOperationMode
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode
      description: the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode" data-throw-if-not-resolved="false">BulkOperationMode</xref> that defines the single operation to do over the individualEnrollments. It cannot be <code>null</code>.
    - id: individualEnrollments
      type: java.util.Collection<com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment>
      description: the collection of <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment" data-throw-if-not-resolved="false">IndividualEnrollment</xref> that contains the description of each individualEnrollment. It cannot be <code>null</code> or empty.
    return:
      type: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult
      description: A <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult" data-throw-if-not-resolved="false">BulkEnrollmentOperationResult</xref> object with the result of operation for each enrollment.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
    description: if the provided parameters are not correct.
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.ProvisioningServiceClient*
  name: ProvisioningServiceClient
  nameWithType: ProvisioningServiceClient.ProvisioningServiceClient
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.ProvisioningServiceClient
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createFromConnectionString*
  name: createFromConnectionString
  nameWithType: ProvisioningServiceClient.createFromConnectionString
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createFromConnectionString
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
  name: ProvisioningServiceClientException
  nameWithType: ProvisioningServiceClientException
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.exceptions.ProvisioningServiceClientException
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
  name: IndividualEnrollment
  nameWithType: IndividualEnrollment
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment*
  name: createOrUpdateIndividualEnrollment
  nameWithType: ProvisioningServiceClient.createOrUpdateIndividualEnrollment
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateIndividualEnrollment
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode
  name: BulkOperationMode
  nameWithType: BulkOperationMode
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkOperationMode
- uid: java.util.Collection<com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
    name: IndividualEnrollment
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult
  name: BulkEnrollmentOperationResult
  nameWithType: BulkEnrollmentOperationResult
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.BulkEnrollmentOperationResult
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation*
  name: runBulkEnrollmentOperation
  nameWithType: ProvisioningServiceClient.runBulkEnrollmentOperation
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.runBulkEnrollmentOperation
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollment*
  name: getIndividualEnrollment
  nameWithType: ProvisioningServiceClient.getIndividualEnrollment
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollment
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
  name: AttestationMechanism
  nameWithType: AttestationMechanism
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollmentAttestationMechanism*
  name: getIndividualEnrollmentAttestationMechanism
  nameWithType: ProvisioningServiceClient.getIndividualEnrollmentAttestationMechanism
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getIndividualEnrollmentAttestationMechanism
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment*
  name: deleteIndividualEnrollment
  nameWithType: ProvisioningServiceClient.deleteIndividualEnrollment
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteIndividualEnrollment
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
  name: QuerySpecification
  nameWithType: QuerySpecification
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.QuerySpecification
- uid: com.microsoft.azure.sdk.iot.provisioning.service.Query
  name: Query
  nameWithType: Query
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.Query
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery*
  name: createIndividualEnrollmentQuery
  nameWithType: ProvisioningServiceClient.createIndividualEnrollmentQuery
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createIndividualEnrollmentQuery
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
  name: EnrollmentGroup
  nameWithType: EnrollmentGroup
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateEnrollmentGroup*
  name: createOrUpdateEnrollmentGroup
  nameWithType: ProvisioningServiceClient.createOrUpdateEnrollmentGroup
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateEnrollmentGroup
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroup*
  name: getEnrollmentGroup
  nameWithType: ProvisioningServiceClient.getEnrollmentGroup
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroup
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroupAttestationMechanism*
  name: getEnrollmentGroupAttestationMechanism
  nameWithType: ProvisioningServiceClient.getEnrollmentGroupAttestationMechanism
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getEnrollmentGroupAttestationMechanism
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup*
  name: deleteEnrollmentGroup
  nameWithType: ProvisioningServiceClient.deleteEnrollmentGroup
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteEnrollmentGroup
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery*
  name: createEnrollmentGroupQuery
  nameWithType: ProvisioningServiceClient.createEnrollmentGroupQuery
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupQuery
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState
  name: DeviceRegistrationState
  nameWithType: DeviceRegistrationState
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.DeviceRegistrationState
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getDeviceRegistrationState*
  name: getDeviceRegistrationState
  nameWithType: ProvisioningServiceClient.getDeviceRegistrationState
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.getDeviceRegistrationState
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState*
  name: deleteDeviceRegistrationState
  nameWithType: ProvisioningServiceClient.deleteDeviceRegistrationState
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationState
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus*
  name: deleteDeviceRegistrationStatus
  nameWithType: ProvisioningServiceClient.deleteDeviceRegistrationStatus
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.deleteDeviceRegistrationStatus
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery*
  name: createEnrollmentGroupRegistrationStateQuery
  nameWithType: ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStateQuery
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery*
  name: createEnrollmentGroupRegistrationStatusQuery
  nameWithType: ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery
  fullName: com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createEnrollmentGroupRegistrationStatusQuery
  package: com.microsoft.azure.sdk.iot.provisioning.service
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
