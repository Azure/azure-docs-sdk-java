### YamlMime:JavaType
uid: "com.azure.cosmos.implementation.guava25.escape.ArrayBasedEscaperMap"
fullName: "com.azure.cosmos.implementation.guava25.escape.ArrayBasedEscaperMap"
name: "ArrayBasedEscaperMap"
nameWithType: "ArrayBasedEscaperMap"
summary: "An implementation-specific parameter class suitable for initializing <xref uid=\"com.azure.cosmos.implementation.guava25.escape.ArrayBasedCharEscaper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ArrayBasedCharEscaper\"></xref> or <xref uid=\"com.azure.cosmos.implementation.guava25.escape.ArrayBasedUnicodeEscaper\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ArrayBasedUnicodeEscaper\"></xref> instances. This class should be used when more than one escaper is created using the same character replacement mapping to allow the underlying (implementation specific) data structures to be shared.\n\nThe size of the data structure used by ArrayBasedCharEscaper and ArrayBasedUnicodeEscaper is proportional to the highest valued character that has a replacement. For example a replacement map containing the single character '\\\\u1000' will require approximately 16K of memory. As such sharing this data structure between escaper instances is the primary goal of this class."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ArrayBasedEscaperMap"
methods:
- "com.azure.cosmos.implementation.guava25.escape.ArrayBasedEscaperMap.create(java.util.Map<java.lang.Character,java.lang.String>)"
type: "class"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.escape"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
