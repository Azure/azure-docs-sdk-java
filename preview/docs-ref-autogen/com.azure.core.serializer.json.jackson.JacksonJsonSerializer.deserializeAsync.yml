### YamlMime:JavaMember
uid: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.deserializeAsync*"
fullName: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.<T>deserializeAsync"
name: "<T>deserializeAsync"
nameWithType: "JacksonJsonSerializer.<T>deserializeAsync"
members:
- uid: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.<T>deserializeAsync(java.io.InputStream,com.azure.core.util.serializer.TypeReference<T>)"
  fullName: "com.azure.core.serializer.json.jackson.JacksonJsonSerializer.<T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)"
  name: "<T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)"
  nameWithType: "JacksonJsonSerializer.<T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)"
  parameters:
  - name: "stream"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "typeReference"
    type: "<xref href=\"com.azure.core.util.serializer.TypeReference?alt=com.azure.core.util.serializer.TypeReference&text=TypeReference\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<T> <T>deserializeAsync(InputStream stream, TypeReference<T> typeReference)"
  returns:
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.core.serializer.json.jackson"
artifact: com.azure:azure-core-serializer-json-jackson:1.0.0-beta.3
