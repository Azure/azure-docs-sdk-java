### YamlMime:ManagedReference
items:
- uid: "com.azure.cosmos.models.ConsistencyPolicy"
  id: "ConsistencyPolicy"
  parent: "com.azure.cosmos.models"
  children:
  - "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy()"
  - "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy(com.fasterxml.jackson.databind.node.ObjectNode)"
  - "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy(java.lang.String)"
  - "com.azure.cosmos.models.ConsistencyPolicy.getDefaultConsistencyLevel()"
  - "com.azure.cosmos.models.ConsistencyPolicy.getMaxStalenessInterval()"
  - "com.azure.cosmos.models.ConsistencyPolicy.getMaxStalenessPrefix()"
  - "com.azure.cosmos.models.ConsistencyPolicy.setDefaultConsistencyLevel(com.azure.cosmos.ConsistencyLevel)"
  - "com.azure.cosmos.models.ConsistencyPolicy.setMaxStalenessInterval(java.time.Duration)"
  - "com.azure.cosmos.models.ConsistencyPolicy.setMaxStalenessPrefix(int)"
  langs:
  - "java"
  name: "ConsistencyPolicy"
  nameWithType: "ConsistencyPolicy"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy"
  type: "Class"
  package: "com.azure.cosmos.models"
  summary: "Encapsulates the properties for consistency policy in the Azure Cosmos DB database service."
  syntax:
    content: "public final class ConsistencyPolicy extends JsonSerializable"
  inheritance:
  - "java.lang.Object"
  - "com.azure.cosmos.models.JsonSerializable"
  inheritedMembers:
  - "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  - "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
  - "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  - "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getLogger()"
  - "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getMap()"
  - "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  - "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
  - "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  - "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
  - "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
  - "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
  - "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  - "com.azure.cosmos.models.JsonSerializable.toJson()"
  - "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
  - "com.azure.cosmos.models.JsonSerializable.toString()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy()"
  id: "ConsistencyPolicy()"
  parent: "com.azure.cosmos.models.ConsistencyPolicy"
  langs:
  - "java"
  name: "ConsistencyPolicy()"
  nameWithType: "ConsistencyPolicy.ConsistencyPolicy()"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy()"
  overload: "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  summary: "Constructor."
  syntax:
    content: "public ConsistencyPolicy()"
- uid: "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy(com.fasterxml.jackson.databind.node.ObjectNode)"
  id: "ConsistencyPolicy(com.fasterxml.jackson.databind.node.ObjectNode)"
  parent: "com.azure.cosmos.models.ConsistencyPolicy"
  langs:
  - "java"
  name: "ConsistencyPolicy(ObjectNode objectNode)"
  nameWithType: "ConsistencyPolicy.ConsistencyPolicy(ObjectNode objectNode)"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy(ObjectNode objectNode)"
  overload: "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  summary: "Constructor."
  syntax:
    content: " ConsistencyPolicy(ObjectNode objectNode)"
    parameters:
    - id: "objectNode"
      type: "com.fasterxml.jackson.databind.node.ObjectNode"
      description: "the <xref uid=\"\" data-throw-if-not-resolved=\"false\">ObjectNode</xref> that represent the\n <xref uid=\"com.azure.cosmos.models.JsonSerializable\" data-throw-if-not-resolved=\"false\">JsonSerializable</xref>"
- uid: "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy(java.lang.String)"
  id: "ConsistencyPolicy(java.lang.String)"
  parent: "com.azure.cosmos.models.ConsistencyPolicy"
  langs:
  - "java"
  name: "ConsistencyPolicy(String jsonString)"
  nameWithType: "ConsistencyPolicy.ConsistencyPolicy(String jsonString)"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy(String jsonString)"
  overload: "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy*"
  type: "Constructor"
  package: "com.azure.cosmos.models"
  summary: "Constructor."
  syntax:
    content: " ConsistencyPolicy(String jsonString)"
    parameters:
    - id: "jsonString"
      type: "java.lang.String"
      description: "the json string that represents the consistency policy."
- uid: "com.azure.cosmos.models.ConsistencyPolicy.getDefaultConsistencyLevel()"
  id: "getDefaultConsistencyLevel()"
  parent: "com.azure.cosmos.models.ConsistencyPolicy"
  langs:
  - "java"
  name: "getDefaultConsistencyLevel()"
  nameWithType: "ConsistencyPolicy.getDefaultConsistencyLevel()"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.getDefaultConsistencyLevel()"
  overload: "com.azure.cosmos.models.ConsistencyPolicy.getDefaultConsistencyLevel*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Get the name of the resource."
  syntax:
    content: "public ConsistencyLevel getDefaultConsistencyLevel()"
    return:
      type: "com.azure.cosmos.ConsistencyLevel"
      description: "the default consistency level."
- uid: "com.azure.cosmos.models.ConsistencyPolicy.getMaxStalenessInterval()"
  id: "getMaxStalenessInterval()"
  parent: "com.azure.cosmos.models.ConsistencyPolicy"
  langs:
  - "java"
  name: "getMaxStalenessInterval()"
  nameWithType: "ConsistencyPolicy.getMaxStalenessInterval()"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.getMaxStalenessInterval()"
  overload: "com.azure.cosmos.models.ConsistencyPolicy.getMaxStalenessInterval*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the in bounded staleness consistency, the maximum allowed staleness in terms time interval. Resolution is in seconds."
  syntax:
    content: "public Duration getMaxStalenessInterval()"
    return:
      type: "java.time.Duration"
      description: "the max staleness prefix."
- uid: "com.azure.cosmos.models.ConsistencyPolicy.getMaxStalenessPrefix()"
  id: "getMaxStalenessPrefix()"
  parent: "com.azure.cosmos.models.ConsistencyPolicy"
  langs:
  - "java"
  name: "getMaxStalenessPrefix()"
  nameWithType: "ConsistencyPolicy.getMaxStalenessPrefix()"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.getMaxStalenessPrefix()"
  overload: "com.azure.cosmos.models.ConsistencyPolicy.getMaxStalenessPrefix*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Gets the bounded staleness consistency, the maximum allowed staleness in terms difference in sequence numbers (aka version)."
  syntax:
    content: "public int getMaxStalenessPrefix()"
    return:
      type: "int"
      description: "the max staleness prefix."
- uid: "com.azure.cosmos.models.ConsistencyPolicy.setDefaultConsistencyLevel(com.azure.cosmos.ConsistencyLevel)"
  id: "setDefaultConsistencyLevel(com.azure.cosmos.ConsistencyLevel)"
  parent: "com.azure.cosmos.models.ConsistencyPolicy"
  langs:
  - "java"
  name: "setDefaultConsistencyLevel(ConsistencyLevel level)"
  nameWithType: "ConsistencyPolicy.setDefaultConsistencyLevel(ConsistencyLevel level)"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.setDefaultConsistencyLevel(ConsistencyLevel level)"
  overload: "com.azure.cosmos.models.ConsistencyPolicy.setDefaultConsistencyLevel*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Set the name of the resource."
  syntax:
    content: "public ConsistencyPolicy setDefaultConsistencyLevel(ConsistencyLevel level)"
    parameters:
    - id: "level"
      type: "com.azure.cosmos.ConsistencyLevel"
      description: "the consistency level."
    return:
      type: "com.azure.cosmos.models.ConsistencyPolicy"
      description: "the ConsistencyPolicy."
- uid: "com.azure.cosmos.models.ConsistencyPolicy.setMaxStalenessInterval(java.time.Duration)"
  id: "setMaxStalenessInterval(java.time.Duration)"
  parent: "com.azure.cosmos.models.ConsistencyPolicy"
  langs:
  - "java"
  name: "setMaxStalenessInterval(Duration maxStalenessInterval)"
  nameWithType: "ConsistencyPolicy.setMaxStalenessInterval(Duration maxStalenessInterval)"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.setMaxStalenessInterval(Duration maxStalenessInterval)"
  overload: "com.azure.cosmos.models.ConsistencyPolicy.setMaxStalenessInterval*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets the in bounded staleness consistency, the maximum allowed staleness in terms time interval. Resolution is in seconds."
  syntax:
    content: "public ConsistencyPolicy setMaxStalenessInterval(Duration maxStalenessInterval)"
    parameters:
    - id: "maxStalenessInterval"
      type: "java.time.Duration"
      description: "the max staleness interval."
    return:
      type: "com.azure.cosmos.models.ConsistencyPolicy"
      description: "the ConsistencyPolicy."
- uid: "com.azure.cosmos.models.ConsistencyPolicy.setMaxStalenessPrefix(int)"
  id: "setMaxStalenessPrefix(int)"
  parent: "com.azure.cosmos.models.ConsistencyPolicy"
  langs:
  - "java"
  name: "setMaxStalenessPrefix(int maxStalenessPrefix)"
  nameWithType: "ConsistencyPolicy.setMaxStalenessPrefix(int maxStalenessPrefix)"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.setMaxStalenessPrefix(int maxStalenessPrefix)"
  overload: "com.azure.cosmos.models.ConsistencyPolicy.setMaxStalenessPrefix*"
  type: "Method"
  package: "com.azure.cosmos.models"
  summary: "Sets the bounded staleness consistency, the maximum allowed staleness in terms difference in sequence numbers (aka version)."
  syntax:
    content: "public ConsistencyPolicy setMaxStalenessPrefix(int maxStalenessPrefix)"
    parameters:
    - id: "maxStalenessPrefix"
      type: "int"
      description: "the max staleness prefix."
    return:
      type: "com.azure.cosmos.models.ConsistencyPolicy"
      description: "the ConsistencyPolicy."
references:
- uid: "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy*"
  name: "ConsistencyPolicy"
  nameWithType: "ConsistencyPolicy.ConsistencyPolicy"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.ConsistencyPolicy"
  package: "com.azure.cosmos.models"
- uid: "com.fasterxml.jackson.databind.node.ObjectNode"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.node.ObjectNode"
    name: "ObjectNode"
    fullName: "com.fasterxml.jackson.databind.node.ObjectNode"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.cosmos.ConsistencyLevel"
  name: "ConsistencyLevel"
  nameWithType: "ConsistencyLevel"
  fullName: "com.azure.cosmos.ConsistencyLevel"
- uid: "com.azure.cosmos.models.ConsistencyPolicy.getDefaultConsistencyLevel*"
  name: "getDefaultConsistencyLevel"
  nameWithType: "ConsistencyPolicy.getDefaultConsistencyLevel"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.getDefaultConsistencyLevel"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.ConsistencyPolicy.setDefaultConsistencyLevel*"
  name: "setDefaultConsistencyLevel"
  nameWithType: "ConsistencyPolicy.setDefaultConsistencyLevel"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.setDefaultConsistencyLevel"
  package: "com.azure.cosmos.models"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.cosmos.models.ConsistencyPolicy.getMaxStalenessPrefix*"
  name: "getMaxStalenessPrefix"
  nameWithType: "ConsistencyPolicy.getMaxStalenessPrefix"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.getMaxStalenessPrefix"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.ConsistencyPolicy.setMaxStalenessPrefix*"
  name: "setMaxStalenessPrefix"
  nameWithType: "ConsistencyPolicy.setMaxStalenessPrefix"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.setMaxStalenessPrefix"
  package: "com.azure.cosmos.models"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.cosmos.models.ConsistencyPolicy.getMaxStalenessInterval*"
  name: "getMaxStalenessInterval"
  nameWithType: "ConsistencyPolicy.getMaxStalenessInterval"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.getMaxStalenessInterval"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.ConsistencyPolicy.setMaxStalenessInterval*"
  name: "setMaxStalenessInterval"
  nameWithType: "ConsistencyPolicy.setMaxStalenessInterval"
  fullName: "com.azure.cosmos.models.ConsistencyPolicy.setMaxStalenessInterval"
  package: "com.azure.cosmos.models"
- uid: "com.azure.cosmos.models.JsonSerializable"
  name: "JsonSerializable"
  nameWithType: "JsonSerializable"
  fullName: "com.azure.cosmos.models.JsonSerializable"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
  name: "JsonSerializable.<T>set(String,T)"
  nameWithType: "JsonSerializable.<T>set(String,T)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>set(java.lang.String,T)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
  name: "JsonSerializable.getObjectByPath(List<String>)"
  nameWithType: "JsonSerializable.getObjectByPath(List<String>)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List<java.lang.String>)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getObject(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getObject(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getObject(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getList(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getList(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getList(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
  name: "JsonSerializable.getValue(JsonNode)"
  nameWithType: "JsonSerializable.getValue(JsonNode)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getValue(com.fasterxml.jackson.databind.JsonNode)"
- uid: "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
  name: "JsonSerializable.serializeJsonToByteBuffer()"
  nameWithType: "JsonSerializable.serializeJsonToByteBuffer()"
  fullName: "com.azure.cosmos.models.JsonSerializable.serializeJsonToByteBuffer()"
- uid: "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
  name: "JsonSerializable.get(String)"
  nameWithType: "JsonSerializable.get(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.get(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
  name: "JsonSerializable.getPropertyBag()"
  nameWithType: "JsonSerializable.getPropertyBag()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getPropertyBag()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
  name: "JsonSerializable.getInt(String)"
  nameWithType: "JsonSerializable.getInt(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getInt(java.lang.String)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
  name: "JsonSerializable.setMapper(ObjectMapper)"
  nameWithType: "JsonSerializable.setMapper(ObjectMapper)"
  fullName: "com.azure.cosmos.models.JsonSerializable.setMapper(com.fasterxml.jackson.databind.ObjectMapper)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
  name: "JsonSerializable.<T>toObject(Class<T>)"
  nameWithType: "JsonSerializable.<T>toObject(Class<T>)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>toObject(java.lang.Class<T>)"
- uid: "com.azure.cosmos.models.JsonSerializable.getMap()"
  name: "JsonSerializable.getMap()"
  nameWithType: "JsonSerializable.getMap()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getMap()"
- uid: "com.azure.cosmos.models.JsonSerializable.toJson()"
  name: "JsonSerializable.toJson()"
  nameWithType: "JsonSerializable.toJson()"
  fullName: "com.azure.cosmos.models.JsonSerializable.toJson()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
  name: "JsonSerializable.getBoolean(String)"
  nameWithType: "JsonSerializable.getBoolean(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getBoolean(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
  name: "JsonSerializable.getDouble(String)"
  nameWithType: "JsonSerializable.getDouble(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getDouble(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
  name: "JsonSerializable.remove(String)"
  nameWithType: "JsonSerializable.remove(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.remove(java.lang.String)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
  name: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  nameWithType: "JsonSerializable.toJson(SerializationFormattingPolicy)"
  fullName: "com.azure.cosmos.models.JsonSerializable.toJson(com.azure.cosmos.models.SerializationFormattingPolicy)"
- uid: "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
  name: "JsonSerializable.getLong(String)"
  nameWithType: "JsonSerializable.getLong(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getLong(java.lang.String)"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.cosmos.models.JsonSerializable.toString()"
  name: "JsonSerializable.toString()"
  nameWithType: "JsonSerializable.toString()"
  fullName: "com.azure.cosmos.models.JsonSerializable.toString()"
- uid: "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
  name: "JsonSerializable.populatePropertyBag()"
  nameWithType: "JsonSerializable.populatePropertyBag()"
  fullName: "com.azure.cosmos.models.JsonSerializable.populatePropertyBag()"
- uid: "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
  name: "JsonSerializable.has(String)"
  nameWithType: "JsonSerializable.has(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.has(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
  name: "JsonSerializable.getString(String)"
  nameWithType: "JsonSerializable.getString(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getString(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
  name: "JsonSerializable.getCollection(String)"
  nameWithType: "JsonSerializable.getCollection(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getCollection(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
  name: "JsonSerializable.getObject(String)"
  nameWithType: "JsonSerializable.getObject(String)"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObject(java.lang.String)"
- uid: "com.azure.cosmos.models.JsonSerializable.getLogger()"
  name: "JsonSerializable.getLogger()"
  nameWithType: "JsonSerializable.getLogger()"
  fullName: "com.azure.cosmos.models.JsonSerializable.getLogger()"
- uid: "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
  name: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  nameWithType: "JsonSerializable.<T>getCollection(String,Class<T>,)"
  fullName: "com.azure.cosmos.models.JsonSerializable.<T>getCollection(java.lang.String,java.lang.Class<T>,boolean...)"
- uid: "com.azure.cosmos.models.JsonSerializable."
  name: "JsonSerializable."
  nameWithType: "JsonSerializable."
  fullName: "com.azure.cosmos.models.JsonSerializable."
- uid: "T>set(java.lang.String,T)"
  name: "T>set(String,T)"
  nameWithType: "T>set(String,T)"
  fullName: "T>set(java.lang.String,T)"
- uid: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List"
  name: "JsonSerializable.getObjectByPath(List"
  nameWithType: "JsonSerializable.getObjectByPath(List"
  fullName: "com.azure.cosmos.models.JsonSerializable.getObjectByPath(java.util.List"
- uid: "java.lang.String>)"
  name: "String>)"
  nameWithType: "String>)"
  fullName: "java.lang.String>)"
- uid: "T>,boolean...)"
  name: "T>,)"
  nameWithType: "T>,)"
  fullName: "T>,boolean...)"
- uid: "T>getObject(java.lang.String,java.lang.Class"
  name: "T>getObject(String,Class"
  nameWithType: "T>getObject(String,Class"
  fullName: "T>getObject(java.lang.String,java.lang.Class"
- uid: "T>getList(java.lang.String,java.lang.Class"
  name: "T>getList(String,Class"
  nameWithType: "T>getList(String,Class"
  fullName: "T>getList(java.lang.String,java.lang.Class"
- uid: "T>toObject(java.lang.Class"
  name: "T>toObject(Class"
  nameWithType: "T>toObject(Class"
  fullName: "T>toObject(java.lang.Class"
- uid: "T>)"
  name: "T>)"
  nameWithType: "T>)"
  fullName: "T>)"
- uid: "T>getCollection(java.lang.String,java.lang.Class"
  name: "T>getCollection(String,Class"
  nameWithType: "T>getCollection(String,Class"
  fullName: "T>getCollection(java.lang.String,java.lang.Class"
