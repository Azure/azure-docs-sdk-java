### YamlMime:ManagedReference
items:
- uid: com.fasterxml.jackson.core.async.NonBlockingInputFeeder
  id: NonBlockingInputFeeder
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.async
  children:
  - com.fasterxml.jackson.core.async.NonBlockingInputFeeder.endOfInput()
  - com.fasterxml.jackson.core.async.NonBlockingInputFeeder.needMoreInput()
  langs:
  - java
  name: NonBlockingInputFeeder
  nameWithType: NonBlockingInputFeeder
  fullName: com.fasterxml.jackson.core.async.NonBlockingInputFeeder
  type: Interface
  package: com.fasterxml.jackson.core.async
  summary: Interface used by non-blocking <xref uid="com.fasterxml.jackson.core.JsonParser" data-throw-if-not-resolved="false">com.fasterxml.jackson.core.JsonParser</xref> implementations to feed input to parse. Feeder is used by entity that feeds content to parse; at any given point only one chunk of content can be processed so caller has to take care to only feed more content when existing content has been parsed (which occurs when parser's `nextToken` is called). Once application using non-blocking parser has no more data to feed it should call <xref uid="com.fasterxml.jackson.core.async.NonBlockingInputFeeder.endOfInput*" data-throw-if-not-resolved="false">#endOfInput</xref> to indicate end of logical input (stream) to parse.
  syntax:
    content: public interface NonBlockingInputFeeder
- uid: com.fasterxml.jackson.core.async.NonBlockingInputFeeder.endOfInput()
  id: endOfInput()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.async.NonBlockingInputFeeder
  langs:
  - java
  name: endOfInput()
  nameWithType: NonBlockingInputFeeder.endOfInput()
  fullName: com.fasterxml.jackson.core.async.NonBlockingInputFeeder.endOfInput()
  overload: com.fasterxml.jackson.core.async.NonBlockingInputFeeder.endOfInput*
  type: Method
  package: com.fasterxml.jackson.core.async
  summary: Method that should be called after last chunk of data to parse has been fed (with `feedInput` in sub-class); can be called regardless of what <xref uid="com.fasterxml.jackson.core.async.NonBlockingInputFeeder.needMoreInput*" data-throw-if-not-resolved="false">#needMoreInput</xref> returns. After calling this method, no more data can be fed; and parser assumes no more data will be available.
  syntax:
    content: public abstract void endOfInput()
- uid: com.fasterxml.jackson.core.async.NonBlockingInputFeeder.needMoreInput()
  id: needMoreInput()
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: com.fasterxml.jackson.core.async.NonBlockingInputFeeder
  langs:
  - java
  name: needMoreInput()
  nameWithType: NonBlockingInputFeeder.needMoreInput()
  fullName: com.fasterxml.jackson.core.async.NonBlockingInputFeeder.needMoreInput()
  overload: com.fasterxml.jackson.core.async.NonBlockingInputFeeder.needMoreInput*
  type: Method
  package: com.fasterxml.jackson.core.async
  summary: 'Method called to check whether it is ok to feed more data: parser returns true if it has no more content to parse (and it is ok to feed more); otherwise false (and no data should yet be fed).'
  syntax:
    content: public abstract boolean needMoreInput()
    return:
      type: boolean
references:
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.fasterxml.jackson.core.async.NonBlockingInputFeeder.needMoreInput*
  name: needMoreInput
  nameWithType: NonBlockingInputFeeder.needMoreInput
  fullName: com.fasterxml.jackson.core.async.NonBlockingInputFeeder.needMoreInput
  package: com.fasterxml.jackson.core.async
- uid: com.fasterxml.jackson.core.async.NonBlockingInputFeeder.endOfInput*
  name: endOfInput
  nameWithType: NonBlockingInputFeeder.endOfInput
  fullName: com.fasterxml.jackson.core.async.NonBlockingInputFeeder.endOfInput
  package: com.fasterxml.jackson.core.async
