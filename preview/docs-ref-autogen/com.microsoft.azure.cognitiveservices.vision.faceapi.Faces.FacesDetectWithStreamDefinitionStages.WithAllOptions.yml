### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions"
fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions"
name: "Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions"
nameWithType: "Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions"
summary: "The stage of the definition which allows for any other optional settings to be specified."
syntax: "public static interface Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions"
methods:
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceAttributes(java.util.List<com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceAttributeType>)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceAttributes(List<FaceAttributeType> returnFaceAttributes)"
  name: "withReturnFaceAttributes(List<FaceAttributeType> returnFaceAttributes)"
  nameWithType: "Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceAttributes(List<FaceAttributeType> returnFaceAttributes)"
  summary: "Analyze and return the one or more specified face attributes in the comma-separated string like \"return<wbr>Face<wbr>Attributes=age,gender\"."
  modifiers:
  - "abstract"
  parameters:
  - name: "returnFaceAttributes"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceAttributeType?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.FaceAttributeType&text=FaceAttributeType\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Faces.FacesDetectWithStreamDefinitionStages.WithExecute withReturnFaceAttributes(List<FaceAttributeType> returnFaceAttributes)"
  desc: "Analyze and return the one or more specified face attributes in the comma-separated string like \"returnFaceAttributes=age,gender\". Supported face attributes include age, gender, headPose, smile, facialHair, glasses and emotion. Note that each face attribute analysis has additional computational and time cost."
  returns:
    description: "next definition stage"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithExecute?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithExecute&text=WithExecute\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceId(java.lang.Boolean)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceId(Boolean returnFaceId)"
  name: "withReturnFaceId(Boolean returnFaceId)"
  nameWithType: "Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceId(Boolean returnFaceId)"
  summary: "A value indicating whether the operation should return face<wbr>Ids of detected faces."
  modifiers:
  - "abstract"
  parameters:
  - name: "returnFaceId"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Faces.FacesDetectWithStreamDefinitionStages.WithExecute withReturnFaceId(Boolean returnFaceId)"
  desc: "A value indicating whether the operation should return faceIds of detected faces."
  returns:
    description: "next definition stage"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithExecute?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithExecute&text=WithExecute\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceLandmarks(java.lang.Boolean)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceLandmarks(Boolean returnFaceLandmarks)"
  name: "withReturnFaceLandmarks(Boolean returnFaceLandmarks)"
  nameWithType: "Faces.FacesDetectWithStreamDefinitionStages.WithAllOptions.withReturnFaceLandmarks(Boolean returnFaceLandmarks)"
  summary: "A value indicating whether the operation should return landmarks of the detected faces."
  modifiers:
  - "abstract"
  parameters:
  - name: "returnFaceLandmarks"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Faces.FacesDetectWithStreamDefinitionStages.WithExecute withReturnFaceLandmarks(Boolean returnFaceLandmarks)"
  desc: "A value indicating whether the operation should return landmarks of the detected faces."
  returns:
    description: "next definition stage"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithExecute?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.Faces.FacesDetectWithStreamDefinitionStages.WithExecute&text=WithExecute\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the definition which allows for any other optional settings to be specified."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.faceapi"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-faceapi:1.0.1-beta
