### YamlMime:JavaMember
uid: "com.fasterxml.jackson.core.JsonParser.getNumberValue*"
fullName: "com.fasterxml.jackson.core.JsonParser.getNumberValue"
name: "getNumberValue"
nameWithType: "JsonParser.getNumberValue"
members:
- uid: "com.fasterxml.jackson.core.JsonParser.getNumberValue()"
  fullName: "com.fasterxml.jackson.core.JsonParser.getNumberValue()"
  name: "getNumberValue()"
  nameWithType: "JsonParser.getNumberValue()"
  summary: "Generic number value accessor method that will work for all kinds of numeric values. It will return the optimal (simplest/smallest possible) wrapper object that can express the numeric value just parsed."
  syntax: "public abstract Number getNumberValue()"
  exceptions:
  - description: "Problem with access: <xref uid=\"JsonParseException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonParseException\"></xref> if\n    the current token is not numeric, or if decoding of the value fails\n    (invalid format for numbers); plain <xref uid=\"IOException\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IOException\"></xref> if underlying\n    content read fails (possible if values are extracted lazily)"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Numeric value of the current token in its most optimal\n   representation"
    type: "<xref href=\"java.lang.Number?alt=java.lang.Number&text=Number\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.core"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.5
