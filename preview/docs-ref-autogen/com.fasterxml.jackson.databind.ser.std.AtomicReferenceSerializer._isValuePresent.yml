### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer._isValuePresent*"
fullName: "com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer._isValuePresent"
name: "_isValuePresent"
nameWithType: "AtomicReferenceSerializer._isValuePresent"
members:
- uid: "com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer._isValuePresent(java.util.concurrent.atomic.AtomicReference<?>)"
  fullName: "com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer._isValuePresent(AtomicReference<?> value)"
  name: "_isValuePresent(AtomicReference<?> value)"
  nameWithType: "AtomicReferenceSerializer._isValuePresent(AtomicReference<?> value)"
  summary: "Method called to see if there is a value present or not. Note that value itself may still be \\`null\\`, even if present, if referential type allows three states (absent, present-null, present-non-null); some only allow two (absent, present-non-null)."
  overridden: "com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._isValuePresent(T)"
  parameters:
  - name: "value"
    type: "<xref href=\"java.util.concurrent.atomic.AtomicReference?alt=java.util.concurrent.atomic.AtomicReference&text=AtomicReference\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "protected boolean _isValuePresent(AtomicReference<?> value)"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.ser.std"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
