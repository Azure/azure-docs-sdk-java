### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  id: TaskGroup
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag
  children:
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(java.lang.String,com.azure.resourcemanager.resources.fluentcore.dag.TaskItem)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependencyTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem,com.azure.resourcemanager.resources.fluentcore.utils.SdkContext)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.dependsOn(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeDependencyAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.key()
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.newInvocationContext()
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.proxyTaskGroupWrapper
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.root()
  - com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.taskResult(java.lang.String)
  langs:
  - java
  name: TaskGroup
  nameWithType: TaskGroup
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  type: Class
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: >-
    Type representing a group of task entries with dependencies between them. Initially a task group will have only one task entry known as root task entry, then more entries can be added by taking dependency on other task groups or adding "post-run" task group dependents.


    The method <xref uid="com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync*" data-throw-if-not-resolved="false">TaskGroup#invokeAsync(InvocationContext)</xref> ()\} kick-off invocation of tasks in the group, task are invoked in topological sorted order.


    <xref uid="com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependencyTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)" data-throw-if-not-resolved="false">TaskGroup#addDependencyTaskGroup(TaskGroup)</xref>: A task group "A" can take dependency on another task group "B" through this method e.g. \`A.addDependencyTaskGroup(B)\` indicates that completion of tasks in the dependency task group "B" is required before the invocation of root task in group "A". A.invokeAsync(cxt) will ensure this order.


    <xref uid="com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)" data-throw-if-not-resolved="false">TaskGroup#addPostRunDependentTaskGroup(TaskGroup)</xref>: there are scenarios where a subset of dependent task groups say "H", "I" may required to run after the invocation of a task group "K" when K.invokeAsync(cxt) is called. Such special dependents can be added via K.addPostRunDependentTaskGroup(H) and K.addPostRunDependentTaskGroup(I).


    The result produced by the tasks in the group are of type <xref uid="com.azure.resourcemanager.resources.fluentcore.model.Indexable" data-throw-if-not-resolved="false">Indexable</xref>.
  syntax:
    content: public class TaskGroup extends DAGraph<TaskItem,TaskGroupEntry<TaskItem>> implements Indexable
  inheritance:
  - java.lang.Object
  - com.azure.resourcemanager.resources.fluentcore.dag.Graph
  - com.azure.resourcemanager.resources.fluentcore.dag.DAGraph
  implements:
  - com.azure.resourcemanager.resources.fluentcore.model.Indexable
  inheritedMembers:
  - com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependencyGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph<DataT,NodeT>)
  - com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependentGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph<DataT,NodeT>)
  - com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.getNext()
  - com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.getNode(java.lang.String)
  - com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.hasParents()
  - com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.isPreparer()
  - com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.isRootNode(NodeT)
  - com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.prepareForEnumeration()
  - com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.reportCompletion(NodeT)
  - com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.reportError(NodeT,java.lang.Throwable)
  - com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.root()
  - com.azure.resourcemanager.resources.fluentcore.dag.Graph.addNode(NodeT)
  - com.azure.resourcemanager.resources.fluentcore.dag.Graph.findPath(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.resources.fluentcore.dag.Graph.getNodes()
  - com.azure.resourcemanager.resources.fluentcore.dag.Graph.visit(com.azure.resourcemanager.resources.fluentcore.dag.Graph.Visitor)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem)
  id: TaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: TaskGroup(IndexableTaskItem rootTaskItem)
  nameWithType: TaskGroup.TaskGroup(IndexableTaskItem rootTaskItem)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(IndexableTaskItem rootTaskItem)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup*
  type: Constructor
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Creates TaskGroup.
  syntax:
    content: public TaskGroup(IndexableTaskItem rootTaskItem)
    parameters:
    - id: rootTaskItem
      type: com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem
      description: the root task
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<com.azure.resourcemanager.resources.fluentcore.dag.TaskItem>)
  id: TaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<com.azure.resourcemanager.resources.fluentcore.dag.TaskItem>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: TaskGroup(TaskGroupEntry<TaskItem> rootTaskEntry)
  nameWithType: TaskGroup.TaskGroup(TaskGroupEntry<TaskItem> rootTaskEntry)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(TaskGroupEntry<TaskItem> rootTaskEntry)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup*
  type: Constructor
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Creates TaskGroup.
  syntax:
    content: private TaskGroup(TaskGroupEntry<TaskItem> rootTaskEntry)
    parameters:
    - id: rootTaskEntry
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<com.azure.resourcemanager.resources.fluentcore.dag.TaskItem>
      description: the entry holding root task
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(java.lang.String,com.azure.resourcemanager.resources.fluentcore.dag.TaskItem)
  id: TaskGroup(java.lang.String,com.azure.resourcemanager.resources.fluentcore.dag.TaskItem)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: TaskGroup(String rootTaskItemId, TaskItem rootTaskItem)
  nameWithType: TaskGroup.TaskGroup(String rootTaskItemId, TaskItem rootTaskItem)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup(String rootTaskItemId, TaskItem rootTaskItem)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup*
  type: Constructor
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Creates TaskGroup.
  syntax:
    content: public TaskGroup(String rootTaskItemId, TaskItem rootTaskItem)
    parameters:
    - id: rootTaskItemId
      type: java.lang.String
      description: the id of the root task in the group
    - id: rootTaskItem
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem
      description: the root task
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem)
  id: addDependency(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: addDependency(FunctionalTaskItem dependencyTaskItem)
  nameWithType: TaskGroup.addDependency(FunctionalTaskItem dependencyTaskItem)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency(FunctionalTaskItem dependencyTaskItem)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Mark root of this task task group depends on the given TaskItem. This ensure this task group's root get picked for execution only after the completion of invocation of provided TaskItem.
  syntax:
    content: public String addDependency(FunctionalTaskItem dependencyTaskItem)
    parameters:
    - id: dependencyTaskItem
      type: com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem
      description: the task item that this task group depends on
    return:
      type: java.lang.String
      description: the key of the dependency
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup)
  id: addDependency(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: addDependency(TaskGroup.HasTaskGroup hasTaskGroup)
  nameWithType: TaskGroup.addDependency(TaskGroup.HasTaskGroup hasTaskGroup)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency(TaskGroup.HasTaskGroup hasTaskGroup)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Mark root of this task task group depends on the given item's taskGroup. This ensure this task group's root get picked for execution only after the completion of invocation of provided TaskItem.
  syntax:
    content: public void addDependency(TaskGroup.HasTaskGroup hasTaskGroup)
    parameters:
    - id: hasTaskGroup
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup
      description: an item with taskGroup that this task group depends on
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependencyTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)
  id: addDependencyTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: addDependencyTaskGroup(TaskGroup dependencyTaskGroup)
  nameWithType: TaskGroup.addDependencyTaskGroup(TaskGroup dependencyTaskGroup)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependencyTaskGroup(TaskGroup dependencyTaskGroup)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependencyTaskGroup*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Mark root of this task task group depends on the given task group's root. This ensure this task group's root get picked for execution only after the completion of all tasks in the given group.
  syntax:
    content: public void addDependencyTaskGroup(TaskGroup dependencyTaskGroup)
    parameters:
    - id: dependencyTaskGroup
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
      description: the task group that this task group depends on
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem)
  id: addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: addPostRunDependent(FunctionalTaskItem dependentTaskItem)
  nameWithType: TaskGroup.addPostRunDependent(FunctionalTaskItem dependentTaskItem)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(FunctionalTaskItem dependentTaskItem)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Mark the given TaskItem depends on this taskGroup.
  syntax:
    content: public String addPostRunDependent(FunctionalTaskItem dependentTaskItem)
    parameters:
    - id: dependentTaskItem
      type: com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem
      description: the task item that depends on this task group
    return:
      type: java.lang.String
      description: >-
        key to be used as parameter to taskResult(string) method to retrieve result of
         invocation of given task item.
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem,com.azure.resourcemanager.resources.fluentcore.utils.SdkContext)
  id: addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem,com.azure.resourcemanager.resources.fluentcore.utils.SdkContext)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: addPostRunDependent(FunctionalTaskItem dependentTaskItem, SdkContext sdkContext)
  nameWithType: TaskGroup.addPostRunDependent(FunctionalTaskItem dependentTaskItem, SdkContext sdkContext)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(FunctionalTaskItem dependentTaskItem, SdkContext sdkContext)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Mark the given TaskItem depends on this taskGroup.
  syntax:
    content: public String addPostRunDependent(FunctionalTaskItem dependentTaskItem, SdkContext sdkContext)
    parameters:
    - id: dependentTaskItem
      type: com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem
      description: the task item that depends on this task group
    - id: sdkContext
      type: com.azure.resourcemanager.resources.fluentcore.utils.SdkContext
      description: the sdkcontext
    return:
      type: java.lang.String
      description: >-
        key to be used as parameter to taskResult(string) method to retrieve result of
         invocation of given task item.
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup)
  id: addPostRunDependent(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: addPostRunDependent(TaskGroup.HasTaskGroup hasTaskGroup)
  nameWithType: TaskGroup.addPostRunDependent(TaskGroup.HasTaskGroup hasTaskGroup)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent(TaskGroup.HasTaskGroup hasTaskGroup)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Mark the given item with taskGroup depends on this taskGroup.
  syntax:
    content: public void addPostRunDependent(TaskGroup.HasTaskGroup hasTaskGroup)
    parameters:
    - id: hasTaskGroup
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup
      description: an item with as task group that depends on this task group
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)
  id: addPostRunDependentTaskGroup(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: addPostRunDependentTaskGroup(TaskGroup dependentTaskGroup)
  nameWithType: TaskGroup.addPostRunDependentTaskGroup(TaskGroup dependentTaskGroup)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup(TaskGroup dependentTaskGroup)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Mark root of the given task group depends on this task group's root. This ensure given task group's root get picked for invocation only after the completion of all tasks in this group. Calling invokeAsync(cxt) will run the tasks in the given dependent task group as well.
  syntax:
    content: public void addPostRunDependentTaskGroup(TaskGroup dependentTaskGroup)
    parameters:
    - id: dependentTaskGroup
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
      description: the task group depends on this task group
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.dependsOn(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)
  id: dependsOn(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: dependsOn(TaskGroup taskGroup)
  nameWithType: TaskGroup.dependsOn(TaskGroup taskGroup)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.dependsOn(TaskGroup taskGroup)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.dependsOn*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Checks this TaskGroup depends on the given TaskGroup.
  syntax:
    content: public boolean dependsOn(TaskGroup taskGroup)
    parameters:
    - id: taskGroup
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
      description: the TaskGroup to check
    return:
      type: boolean
      description: true if TaskGroup is depends on the given TaskGroup
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)
  id: invokeAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: invokeAsync(TaskGroup.InvocationContext context)
  nameWithType: TaskGroup.invokeAsync(TaskGroup.InvocationContext context)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync(TaskGroup.InvocationContext context)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Invokes tasks in the group.
  syntax:
    content: public Flux<Indexable> invokeAsync(TaskGroup.InvocationContext context)
    parameters:
    - id: context
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext
      description: >-
        group level shared context that need be passed to invokeAsync(cxt)
                        method of each task item in the group when it is selected for invocation.
    return:
      type: reactor.core.publisher.Flux<com.azure.resourcemanager.resources.fluentcore.model.Indexable>
      description: an observable that emits the result of tasks in the order they finishes.
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeDependencyAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)
  id: invokeDependencyAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: invokeDependencyAsync(TaskGroup.InvocationContext context)
  nameWithType: TaskGroup.invokeDependencyAsync(TaskGroup.InvocationContext context)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeDependencyAsync(TaskGroup.InvocationContext context)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeDependencyAsync*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: Invokes dependency tasks in the group, but not.
  syntax:
    content: public Flux<Indexable> invokeDependencyAsync(TaskGroup.InvocationContext context)
    parameters:
    - id: context
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext
      description: >-
        group level shared context that need be passed to invokeAsync(cxt)
                        method of each task item in the group when it is selected for invocation.
    return:
      type: reactor.core.publisher.Flux<com.azure.resourcemanager.resources.fluentcore.model.Indexable>
      description: an observable that emits the result of tasks in the order they finishes.
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.key()
  id: key()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: key()
  nameWithType: TaskGroup.key()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.key()
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.key*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  syntax:
    content: public String key()
    return:
      type: java.lang.String
      description: the key of this task group, which is same as key of the root entry in the group
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.newInvocationContext()
  id: newInvocationContext()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: newInvocationContext()
  nameWithType: TaskGroup.newInvocationContext()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.newInvocationContext()
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.newInvocationContext*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  syntax:
    content: public TaskGroup.InvocationContext newInvocationContext()
    return:
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext
      description: a new clean context instance.
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.proxyTaskGroupWrapper
  id: proxyTaskGroupWrapper
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: proxyTaskGroupWrapper
  nameWithType: TaskGroup.proxyTaskGroupWrapper
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.proxyTaskGroupWrapper
  type: Field
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: The helper to operate on proxy TaskGroup of this TaskGroup for supporting dependents marked for post run.
  syntax:
    content: protected TaskGroup.ProxyTaskGroupWrapper proxyTaskGroupWrapper
    return:
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.root()
  id: root()
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: root()
  nameWithType: TaskGroup.root()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.root()
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.root*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  syntax:
    content: protected TaskGroupEntry<TaskItem> root()
    return:
      type: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<com.azure.resourcemanager.resources.fluentcore.dag.TaskItem>
      description: the root task entry in the group.
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.taskResult(java.lang.String)
  id: taskResult(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.0.0-beta.2
  parent: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup
  langs:
  - java
  name: taskResult(String taskId)
  nameWithType: TaskGroup.taskResult(String taskId)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.taskResult(String taskId)
  overload: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.taskResult*
  type: Method
  package: com.azure.resourcemanager.resources.fluentcore.dag
  summary: >-
    Retrieve the result produced by a task with the given id in the group.


    This method can be used to retrieve the result of invocation of both dependency and "post-run" dependent tasks. If task with the given id does not exists then IllegalArgumentException exception will be thrown.
  syntax:
    content: public Indexable taskResult(String taskId)
    parameters:
    - id: taskId
      type: java.lang.String
      description: the task item id
    return:
      type: com.azure.resourcemanager.resources.fluentcore.model.Indexable
      description: the task result, null will be returned if task has not yet been invoked
references:
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<com.azure.resourcemanager.resources.fluentcore.dag.TaskItem>
  spec.java:
  - uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry
    name: TaskGroupEntry
    fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem
    name: TaskItem
    fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup*
  name: TaskGroup
  nameWithType: TaskGroup.TaskGroup
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.TaskGroup
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem
  name: TaskItem
  nameWithType: TaskItem
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem
- uid: com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem
  name: IndexableTaskItem
  nameWithType: IndexableTaskItem
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.IndexableTaskItem
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.key*
  name: key
  nameWithType: TaskGroup.key
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.key
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.model.Indexable
  name: Indexable
  nameWithType: Indexable
  fullName: com.azure.resourcemanager.resources.fluentcore.model.Indexable
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.taskResult*
  name: taskResult
  nameWithType: TaskGroup.taskResult
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.taskResult
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.dependsOn*
  name: dependsOn
  nameWithType: TaskGroup.dependsOn
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.dependsOn
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.root*
  name: root
  nameWithType: TaskGroup.root
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.root
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem
  name: FunctionalTaskItem
  nameWithType: FunctionalTaskItem
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.FunctionalTaskItem
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency*
  name: addDependency
  nameWithType: TaskGroup.addDependency
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependency
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup
  name: TaskGroup.HasTaskGroup
  nameWithType: TaskGroup.HasTaskGroup
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.HasTaskGroup
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependencyTaskGroup*
  name: addDependencyTaskGroup
  nameWithType: TaskGroup.addDependencyTaskGroup
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addDependencyTaskGroup
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent*
  name: addPostRunDependent
  nameWithType: TaskGroup.addPostRunDependent
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependent
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.utils.SdkContext
  name: SdkContext
  nameWithType: SdkContext
  fullName: com.azure.resourcemanager.resources.fluentcore.utils.SdkContext
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup*
  name: addPostRunDependentTaskGroup
  nameWithType: TaskGroup.addPostRunDependentTaskGroup
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.addPostRunDependentTaskGroup
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext
  name: TaskGroup.InvocationContext
  nameWithType: TaskGroup.InvocationContext
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext
- uid: reactor.core.publisher.Flux<com.azure.resourcemanager.resources.fluentcore.model.Indexable>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.resources.fluentcore.model.Indexable
    name: Indexable
    fullName: com.azure.resourcemanager.resources.fluentcore.model.Indexable
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync*
  name: invokeAsync
  nameWithType: TaskGroup.invokeAsync
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeAsync
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeDependencyAsync*
  name: invokeDependencyAsync
  nameWithType: TaskGroup.invokeDependencyAsync
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.invokeDependencyAsync
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.newInvocationContext*
  name: newInvocationContext
  nameWithType: TaskGroup.newInvocationContext
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.newInvocationContext
  package: com.azure.resourcemanager.resources.fluentcore.dag
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper
  name: TaskGroup.ProxyTaskGroupWrapper
  nameWithType: TaskGroup.ProxyTaskGroupWrapper
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.ProxyTaskGroupWrapper
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph<com.azure.resourcemanager.resources.fluentcore.dag.TaskItem,com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<com.azure.resourcemanager.resources.fluentcore.dag.TaskItem>>
  name: DAGraph<TaskItem,TaskGroupEntry<TaskItem>>
  nameWithType: DAGraph<TaskItem,TaskGroupEntry<TaskItem>>
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph<com.azure.resourcemanager.resources.fluentcore.dag.TaskItem,com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<com.azure.resourcemanager.resources.fluentcore.dag.TaskItem>>
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.addNode(NodeT)
  name: Graph.addNode(NodeT)
  nameWithType: Graph.addNode(NodeT)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.addNode(NodeT)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.getNext()
  name: DAGraph.getNext()
  nameWithType: DAGraph.getNext()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.getNext()
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.reportCompletion(NodeT)
  name: DAGraph.reportCompletion(NodeT)
  nameWithType: DAGraph.reportCompletion(NodeT)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.reportCompletion(NodeT)
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.getNodes()
  name: Graph.getNodes()
  nameWithType: Graph.getNodes()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.getNodes()
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.getNode(java.lang.String)
  name: DAGraph.getNode(String)
  nameWithType: DAGraph.getNode(String)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.getNode(java.lang.String)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.isPreparer()
  name: DAGraph.isPreparer()
  nameWithType: DAGraph.isPreparer()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.isPreparer()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.prepareForEnumeration()
  name: DAGraph.prepareForEnumeration()
  nameWithType: DAGraph.prepareForEnumeration()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.prepareForEnumeration()
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.visit(com.azure.resourcemanager.resources.fluentcore.dag.Graph.Visitor)
  name: Graph.visit(Graph.Visitor)
  nameWithType: Graph.visit(Graph.Visitor)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.visit(com.azure.resourcemanager.resources.fluentcore.dag.Graph.Visitor)
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.isRootNode(NodeT)
  name: DAGraph.isRootNode(NodeT)
  nameWithType: DAGraph.isRootNode(NodeT)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.isRootNode(NodeT)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.root()
  name: DAGraph.root()
  nameWithType: DAGraph.root()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.root()
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.reportError(NodeT,java.lang.Throwable)
  name: DAGraph.reportError(NodeT,Throwable)
  nameWithType: DAGraph.reportError(NodeT,Throwable)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.reportError(NodeT,java.lang.Throwable)
- uid: com.azure.resourcemanager.resources.fluentcore.dag.Graph.findPath(java.lang.String,java.lang.String)
  name: Graph.findPath(String,String)
  nameWithType: Graph.findPath(String,String)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.Graph.findPath(java.lang.String,java.lang.String)
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.hasParents()
  name: DAGraph.hasParents()
  nameWithType: DAGraph.hasParents()
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.hasParents()
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependencyGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph<DataT,NodeT>)
  name: DAGraph.addDependencyGraph(DAGraph<DataT,NodeT>)
  nameWithType: DAGraph.addDependencyGraph(DAGraph<DataT,NodeT>)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependencyGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph<DataT,NodeT>)
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependentGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph<DataT,NodeT>)
  name: DAGraph.addDependentGraph(DAGraph<DataT,NodeT>)
  nameWithType: DAGraph.addDependentGraph(DAGraph<DataT,NodeT>)
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependentGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph<DataT,NodeT>)
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry
  name: TaskGroupEntry
  nameWithType: TaskGroupEntry
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph
  name: DAGraph
  nameWithType: DAGraph
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph
- uid: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem,com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry
  name: TaskItem,TaskGroupEntry
  nameWithType: TaskItem,TaskGroupEntry
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.TaskItem,com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry
- uid: DataT,NodeT>)
  name: DataT,NodeT>)
  nameWithType: DataT,NodeT>)
  fullName: DataT,NodeT>)
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependencyGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph
  name: DAGraph.addDependencyGraph(DAGraph
  nameWithType: DAGraph.addDependencyGraph(DAGraph
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependencyGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph
- uid: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependentGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph
  name: DAGraph.addDependentGraph(DAGraph
  nameWithType: DAGraph.addDependentGraph(DAGraph
  fullName: com.azure.resourcemanager.resources.fluentcore.dag.DAGraph.addDependentGraph(com.azure.resourcemanager.resources.fluentcore.dag.DAGraph
