### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData"
fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData"
name: "LiveEventTrackEventData"
nameWithType: "LiveEventTrackEventData"
summary: "The live event track ingest heart beat event data."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **LiveEventTrackEventData**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.LiveEventTrackEventData()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.LiveEventTrackEventData()"
  name: "LiveEventTrackEventData()"
  nameWithType: "LiveEventTrackEventData.LiveEventTrackEventData()"
  summary: "Creates an instance of Live<wbr>Event<wbr>Track<wbr>Event<wbr>Data class."
  syntax: "public LiveEventTrackEventData()"
  desc: "Creates an instance of LiveEventTrackEventData class."
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.bitrate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.bitrate()"
  name: "bitrate()"
  nameWithType: "LiveEventTrackEventData.bitrate()"
  summary: "Get the bitrate property: Bitrate of the track."
  syntax: "public Long bitrate()"
  desc: "Get the bitrate property: Bitrate of the track."
  returns:
    description: "the bitrate value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.discontinuityCount()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.discontinuityCount()"
  name: "discontinuityCount()"
  nameWithType: "LiveEventTrackEventData.discontinuityCount()"
  summary: "Get the discontinuity<wbr>Count property: Number of discontinuities detected in the last 20 seconds."
  syntax: "public Long discontinuityCount()"
  desc: "Get the discontinuityCount property: Number of discontinuities detected in the last 20 seconds."
  returns:
    description: "the discontinuityCount value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "LiveEventTrackEventData.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Live<wbr>Event<wbr>Track<wbr>Event<wbr>Data from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static LiveEventTrackEventData fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the LiveEventTrackEventData."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of LiveEventTrackEventData from the JsonReader."
  returns:
    description: "An instance of LiveEventTrackEventData if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.healthy()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.healthy()"
  name: "healthy()"
  nameWithType: "LiveEventTrackEventData.healthy()"
  summary: "Get the healthy property: Indicates whether ingest is healthy."
  syntax: "public Boolean healthy()"
  desc: "Get the healthy property: Indicates whether ingest is healthy."
  returns:
    description: "the healthy value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.incomingBitrate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.incomingBitrate()"
  name: "incomingBitrate()"
  nameWithType: "LiveEventTrackEventData.incomingBitrate()"
  summary: "Get the incoming<wbr>Bitrate property: Calculated bitrate based on data chunks coming from encoder."
  syntax: "public Long incomingBitrate()"
  desc: "Get the incomingBitrate property: Calculated bitrate based on data chunks coming from encoder."
  returns:
    description: "the incomingBitrate value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.ingestDriftValue()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.ingestDriftValue()"
  name: "ingestDriftValue()"
  nameWithType: "LiveEventTrackEventData.ingestDriftValue()"
  summary: "Get the ingest<wbr>Drift<wbr>Value property: Indicates the speed of delay, in seconds-per-minute, of the incoming audio or video data during the last minute."
  syntax: "public String ingestDriftValue()"
  desc: "Get the ingestDriftValue property: Indicates the speed of delay, in seconds-per-minute, of the incoming audio or video data during the last minute. The value is greater than zero if data is arriving to the live event slower than expected in the last minute; zero if data arrived with no delay; and \"n/a\" if no audio or video data was received. For example, if you have a contribution encoder sending in live content, and it is slowing down due to processing issues, or network latency, it may be only able to deliver a total of 58 seconds of audio or video in a one-minute period. This would be reported as two seconds-per-minute of drift. If the encoder is able to catch up and send all 60 seconds or more of data every minute, you will see this value reported as 0. If there was a disconnection or discontinuity from the encoder, this value may still display as 0, as it does not account for breaks in the data - only data that is delayed in timestamps."
  returns:
    description: "the ingestDriftValue value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.lastFragmentArrivalTime()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.lastFragmentArrivalTime()"
  name: "lastFragmentArrivalTime()"
  nameWithType: "LiveEventTrackEventData.lastFragmentArrivalTime()"
  summary: "Get the last<wbr>Fragment<wbr>Arrival<wbr>Time property: The last timestamp in UTC that a fragment arrived at the ingest endpoint."
  syntax: "public OffsetDateTime lastFragmentArrivalTime()"
  desc: "Get the lastFragmentArrivalTime property: The last timestamp in UTC that a fragment arrived at the ingest endpoint."
  returns:
    description: "the lastFragmentArrivalTime value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.lastTimestamp()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.lastTimestamp()"
  name: "lastTimestamp()"
  nameWithType: "LiveEventTrackEventData.lastTimestamp()"
  summary: "Get the last<wbr>Timestamp property: Latest timestamp received for a track in last 20 seconds."
  syntax: "public String lastTimestamp()"
  desc: "Get the lastTimestamp property: Latest timestamp received for a track in last 20 seconds."
  returns:
    description: "the lastTimestamp value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.nonincreasingCount()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.nonincreasingCount()"
  name: "nonincreasingCount()"
  nameWithType: "LiveEventTrackEventData.nonincreasingCount()"
  summary: "Get the nonincreasing<wbr>Count property: Number of data chunks with timestamps in the past that were received in last 20 seconds."
  syntax: "public Long nonincreasingCount()"
  desc: "Get the nonincreasingCount property: Number of data chunks with timestamps in the past that were received in last 20 seconds."
  returns:
    description: "the nonincreasingCount value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.overlapCount()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.overlapCount()"
  name: "overlapCount()"
  nameWithType: "LiveEventTrackEventData.overlapCount()"
  summary: "Get the overlap<wbr>Count property: Number of data chunks that had overlapped timestamps in last 20 seconds."
  syntax: "public Long overlapCount()"
  desc: "Get the overlapCount property: Number of data chunks that had overlapped timestamps in last 20 seconds."
  returns:
    description: "the overlapCount value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.state()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.state()"
  name: "state()"
  nameWithType: "LiveEventTrackEventData.state()"
  summary: "Get the state property: State of the live event."
  syntax: "public String state()"
  desc: "Get the state property: State of the live event."
  returns:
    description: "the state value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.timescale()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.timescale()"
  name: "timescale()"
  nameWithType: "LiveEventTrackEventData.timescale()"
  summary: "Get the timescale property: Timescale in which timestamps are expressed."
  syntax: "public String timescale()"
  desc: "Get the timescale property: Timescale in which timestamps are expressed."
  returns:
    description: "the timescale value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "LiveEventTrackEventData.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.trackName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.trackName()"
  name: "trackName()"
  nameWithType: "LiveEventTrackEventData.trackName()"
  summary: "Get the track<wbr>Name property: Name of the track."
  syntax: "public String trackName()"
  desc: "Get the trackName property: Name of the track."
  returns:
    description: "the trackName value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.trackType()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.trackType()"
  name: "trackType()"
  nameWithType: "LiveEventTrackEventData.trackType()"
  summary: "Get the track<wbr>Type property: Type of the track."
  syntax: "public LiveEventTrackType trackType()"
  desc: "Get the trackType property: Type of the track."
  returns:
    description: "the trackType value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackType?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackType&text=LiveEventTrackType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.transcriptionLanguage()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.transcriptionLanguage()"
  name: "transcriptionLanguage()"
  nameWithType: "LiveEventTrackEventData.transcriptionLanguage()"
  summary: "Get the transcription<wbr>Language property: The language code (in BCP-47 format) of the transcription language."
  syntax: "public String transcriptionLanguage()"
  desc: "Get the transcriptionLanguage property: The language code (in BCP-47 format) of the transcription language. For example, \"de-de\" indicates German (Germany). The value is empty for the video track heartbeats, or when live transcription is turned off."
  returns:
    description: "the transcriptionLanguage value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.transcriptionState()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.transcriptionState()"
  name: "transcriptionState()"
  nameWithType: "LiveEventTrackEventData.transcriptionState()"
  summary: "Get the transcription<wbr>State property: This value is \"On\" for audio track heartbeats if live transcription is turned on, otherwise you will see an empty string."
  syntax: "public String transcriptionState()"
  desc: "Get the transcriptionState property: This value is \"On\" for audio track heartbeats if live transcription is turned on, otherwise you will see an empty string. This state is only applicable to track type of \"audio\" for Live transcription. All other tracks will have an empty value."
  returns:
    description: "the transcriptionState value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.unexpectedBitrate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.unexpectedBitrate()"
  name: "unexpectedBitrate()"
  nameWithType: "LiveEventTrackEventData.unexpectedBitrate()"
  summary: "Get the unexpected<wbr>Bitrate property: If expected and actual bitrates differ by more than allowed limit in last 20 seconds."
  syntax: "public Boolean unexpectedBitrate()"
  desc: "Get the unexpectedBitrate property: If expected and actual bitrates differ by more than allowed limit in last 20 seconds."
  returns:
    description: "the unexpectedBitrate value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.validate()"
  name: "validate()"
  nameWithType: "LiveEventTrackEventData.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withBitrate(java.lang.Long)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withBitrate(Long bitrate)"
  name: "withBitrate(Long bitrate)"
  nameWithType: "LiveEventTrackEventData.withBitrate(Long bitrate)"
  summary: "Set the bitrate property: Bitrate of the track."
  parameters:
  - description: "the bitrate value to set."
    name: "bitrate"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
  syntax: "public LiveEventTrackEventData withBitrate(Long bitrate)"
  desc: "Set the bitrate property: Bitrate of the track."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withDiscontinuityCount(java.lang.Long)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withDiscontinuityCount(Long discontinuityCount)"
  name: "withDiscontinuityCount(Long discontinuityCount)"
  nameWithType: "LiveEventTrackEventData.withDiscontinuityCount(Long discontinuityCount)"
  summary: "Set the discontinuity<wbr>Count property: Number of discontinuities detected in the last 20 seconds."
  parameters:
  - description: "the discontinuityCount value to set."
    name: "discontinuityCount"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
  syntax: "public LiveEventTrackEventData withDiscontinuityCount(Long discontinuityCount)"
  desc: "Set the discontinuityCount property: Number of discontinuities detected in the last 20 seconds."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withHealthy(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withHealthy(Boolean healthy)"
  name: "withHealthy(Boolean healthy)"
  nameWithType: "LiveEventTrackEventData.withHealthy(Boolean healthy)"
  summary: "Set the healthy property: Indicates whether ingest is healthy."
  parameters:
  - description: "the healthy value to set."
    name: "healthy"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public LiveEventTrackEventData withHealthy(Boolean healthy)"
  desc: "Set the healthy property: Indicates whether ingest is healthy."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withIncomingBitrate(java.lang.Long)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withIncomingBitrate(Long incomingBitrate)"
  name: "withIncomingBitrate(Long incomingBitrate)"
  nameWithType: "LiveEventTrackEventData.withIncomingBitrate(Long incomingBitrate)"
  summary: "Set the incoming<wbr>Bitrate property: Calculated bitrate based on data chunks coming from encoder."
  parameters:
  - description: "the incomingBitrate value to set."
    name: "incomingBitrate"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
  syntax: "public LiveEventTrackEventData withIncomingBitrate(Long incomingBitrate)"
  desc: "Set the incomingBitrate property: Calculated bitrate based on data chunks coming from encoder."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withIngestDriftValue(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withIngestDriftValue(String ingestDriftValue)"
  name: "withIngestDriftValue(String ingestDriftValue)"
  nameWithType: "LiveEventTrackEventData.withIngestDriftValue(String ingestDriftValue)"
  summary: "Set the ingest<wbr>Drift<wbr>Value property: Indicates the speed of delay, in seconds-per-minute, of the incoming audio or video data during the last minute."
  parameters:
  - description: "the ingestDriftValue value to set."
    name: "ingestDriftValue"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LiveEventTrackEventData withIngestDriftValue(String ingestDriftValue)"
  desc: "Set the ingestDriftValue property: Indicates the speed of delay, in seconds-per-minute, of the incoming audio or video data during the last minute. The value is greater than zero if data is arriving to the live event slower than expected in the last minute; zero if data arrived with no delay; and \"n/a\" if no audio or video data was received. For example, if you have a contribution encoder sending in live content, and it is slowing down due to processing issues, or network latency, it may be only able to deliver a total of 58 seconds of audio or video in a one-minute period. This would be reported as two seconds-per-minute of drift. If the encoder is able to catch up and send all 60 seconds or more of data every minute, you will see this value reported as 0. If there was a disconnection or discontinuity from the encoder, this value may still display as 0, as it does not account for breaks in the data - only data that is delayed in timestamps."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withLastFragmentArrivalTime(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withLastFragmentArrivalTime(OffsetDateTime lastFragmentArrivalTime)"
  name: "withLastFragmentArrivalTime(OffsetDateTime lastFragmentArrivalTime)"
  nameWithType: "LiveEventTrackEventData.withLastFragmentArrivalTime(OffsetDateTime lastFragmentArrivalTime)"
  summary: "Set the last<wbr>Fragment<wbr>Arrival<wbr>Time property: The last timestamp in UTC that a fragment arrived at the ingest endpoint."
  parameters:
  - description: "the lastFragmentArrivalTime value to set."
    name: "lastFragmentArrivalTime"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  syntax: "public LiveEventTrackEventData withLastFragmentArrivalTime(OffsetDateTime lastFragmentArrivalTime)"
  desc: "Set the lastFragmentArrivalTime property: The last timestamp in UTC that a fragment arrived at the ingest endpoint."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withLastTimestamp(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withLastTimestamp(String lastTimestamp)"
  name: "withLastTimestamp(String lastTimestamp)"
  nameWithType: "LiveEventTrackEventData.withLastTimestamp(String lastTimestamp)"
  summary: "Set the last<wbr>Timestamp property: Latest timestamp received for a track in last 20 seconds."
  parameters:
  - description: "the lastTimestamp value to set."
    name: "lastTimestamp"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LiveEventTrackEventData withLastTimestamp(String lastTimestamp)"
  desc: "Set the lastTimestamp property: Latest timestamp received for a track in last 20 seconds."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withNonincreasingCount(java.lang.Long)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withNonincreasingCount(Long nonincreasingCount)"
  name: "withNonincreasingCount(Long nonincreasingCount)"
  nameWithType: "LiveEventTrackEventData.withNonincreasingCount(Long nonincreasingCount)"
  summary: "Set the nonincreasing<wbr>Count property: Number of data chunks with timestamps in the past that were received in last 20 seconds."
  parameters:
  - description: "the nonincreasingCount value to set."
    name: "nonincreasingCount"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
  syntax: "public LiveEventTrackEventData withNonincreasingCount(Long nonincreasingCount)"
  desc: "Set the nonincreasingCount property: Number of data chunks with timestamps in the past that were received in last 20 seconds."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withOverlapCount(java.lang.Long)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withOverlapCount(Long overlapCount)"
  name: "withOverlapCount(Long overlapCount)"
  nameWithType: "LiveEventTrackEventData.withOverlapCount(Long overlapCount)"
  summary: "Set the overlap<wbr>Count property: Number of data chunks that had overlapped timestamps in last 20 seconds."
  parameters:
  - description: "the overlapCount value to set."
    name: "overlapCount"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Long.html\">Long</a>"
  syntax: "public LiveEventTrackEventData withOverlapCount(Long overlapCount)"
  desc: "Set the overlapCount property: Number of data chunks that had overlapped timestamps in last 20 seconds."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withState(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withState(String state)"
  name: "withState(String state)"
  nameWithType: "LiveEventTrackEventData.withState(String state)"
  summary: "Set the state property: State of the live event."
  parameters:
  - description: "the state value to set."
    name: "state"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LiveEventTrackEventData withState(String state)"
  desc: "Set the state property: State of the live event."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withTimescale(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withTimescale(String timescale)"
  name: "withTimescale(String timescale)"
  nameWithType: "LiveEventTrackEventData.withTimescale(String timescale)"
  summary: "Set the timescale property: Timescale in which timestamps are expressed."
  parameters:
  - description: "the timescale value to set."
    name: "timescale"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LiveEventTrackEventData withTimescale(String timescale)"
  desc: "Set the timescale property: Timescale in which timestamps are expressed."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withTrackName(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withTrackName(String trackName)"
  name: "withTrackName(String trackName)"
  nameWithType: "LiveEventTrackEventData.withTrackName(String trackName)"
  summary: "Set the track<wbr>Name property: Name of the track."
  parameters:
  - description: "the trackName value to set."
    name: "trackName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LiveEventTrackEventData withTrackName(String trackName)"
  desc: "Set the trackName property: Name of the track."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withTrackType(com.azure.resourcemanager.mediaservices.models.LiveEventTrackType)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withTrackType(LiveEventTrackType trackType)"
  name: "withTrackType(LiveEventTrackType trackType)"
  nameWithType: "LiveEventTrackEventData.withTrackType(LiveEventTrackType trackType)"
  summary: "Set the track<wbr>Type property: Type of the track."
  parameters:
  - description: "the trackType value to set."
    name: "trackType"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackType?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackType&text=LiveEventTrackType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LiveEventTrackEventData withTrackType(LiveEventTrackType trackType)"
  desc: "Set the trackType property: Type of the track."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withTranscriptionLanguage(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withTranscriptionLanguage(String transcriptionLanguage)"
  name: "withTranscriptionLanguage(String transcriptionLanguage)"
  nameWithType: "LiveEventTrackEventData.withTranscriptionLanguage(String transcriptionLanguage)"
  summary: "Set the transcription<wbr>Language property: The language code (in BCP-47 format) of the transcription language."
  parameters:
  - description: "the transcriptionLanguage value to set."
    name: "transcriptionLanguage"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LiveEventTrackEventData withTranscriptionLanguage(String transcriptionLanguage)"
  desc: "Set the transcriptionLanguage property: The language code (in BCP-47 format) of the transcription language. For example, \"de-de\" indicates German (Germany). The value is empty for the video track heartbeats, or when live transcription is turned off."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withTranscriptionState(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withTranscriptionState(String transcriptionState)"
  name: "withTranscriptionState(String transcriptionState)"
  nameWithType: "LiveEventTrackEventData.withTranscriptionState(String transcriptionState)"
  summary: "Set the transcription<wbr>State property: This value is \"On\" for audio track heartbeats if live transcription is turned on, otherwise you will see an empty string."
  parameters:
  - description: "the transcriptionState value to set."
    name: "transcriptionState"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LiveEventTrackEventData withTranscriptionState(String transcriptionState)"
  desc: "Set the transcriptionState property: This value is \"On\" for audio track heartbeats if live transcription is turned on, otherwise you will see an empty string. This state is only applicable to track type of \"audio\" for Live transcription. All other tracks will have an empty value."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withUnexpectedBitrate(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData.withUnexpectedBitrate(Boolean unexpectedBitrate)"
  name: "withUnexpectedBitrate(Boolean unexpectedBitrate)"
  nameWithType: "LiveEventTrackEventData.withUnexpectedBitrate(Boolean unexpectedBitrate)"
  summary: "Set the unexpected<wbr>Bitrate property: If expected and actual bitrates differ by more than allowed limit in last 20 seconds."
  parameters:
  - description: "the unexpectedBitrate value to set."
    name: "unexpectedBitrate"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public LiveEventTrackEventData withUnexpectedBitrate(Boolean unexpectedBitrate)"
  desc: "Set the unexpectedBitrate property: If expected and actual bitrates differ by more than allowed limit in last 20 seconds."
  returns:
    description: "the LiveEventTrackEventData object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The live event track ingest heart beat event data."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData?alt=com.azure.resourcemanager.mediaservices.models.LiveEventTrackEventData&text=LiveEventTrackEventData\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.4.0-beta.2
