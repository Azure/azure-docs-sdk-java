### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.Iterables.consumingIterable*"
fullName: "com.azure.cosmos.implementation.guava25.collect.Iterables.<T>consumingIterable"
name: "<T>consumingIterable"
nameWithType: "Iterables.<T>consumingIterable"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.Iterables.<T>consumingIterable(java.lang.Iterable<T>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.Iterables.<T>consumingIterable(Iterable<T> iterable)"
  name: "<T>consumingIterable(Iterable<T> iterable)"
  nameWithType: "Iterables.<T>consumingIterable(Iterable<T> iterable)"
  summary: "Returns a view of the supplied iterable that wraps each generated <xref uid=\"java.util.Iterator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterator\"></xref> through <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Iterators.&lt;T&gt;consumingIterator(java.util.Iterator&lt;T&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterators#consumingIterator(Iterator)\"></xref>.\n\nNote: If `iterable` is a <xref uid=\"java.util.Queue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Queue\"></xref>, the returned iterable will get entries from <xref uid=\"java.util.Queue.remove*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Queue#remove()\"></xref> since <xref uid=\"java.util.Queue\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Queue\"></xref>'s iteration order is undefined. Calling <xref uid=\"java.util.Iterator.hasNext*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterator#hasNext()\"></xref> on a generated iterator from the returned iterable may cause an item to be immediately dequeued for return on a subsequent call to <xref uid=\"java.util.Iterator.next*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterator#next()\"></xref>."
  parameters:
  - description: "the iterable to wrap"
    name: "iterable"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static Iterable<T> <T>consumingIterable(Iterable<T> iterable)"
  returns:
    description: "a view of the supplied iterable that wraps each generated iterator through <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Iterators.<T>consumingIterator(java.util.Iterator<T>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterators#consumingIterator(Iterator)\"></xref>; for queues, an iterable that generates iterators\n     that return and consume the queue's elements in queue order"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
