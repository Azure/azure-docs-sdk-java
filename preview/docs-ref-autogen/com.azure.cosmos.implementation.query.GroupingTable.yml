### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.query.GroupingTable
  id: GroupingTable
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query
  children:
  - com.azure.cosmos.implementation.query.GroupingTable.addPayLoad(com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<?>.RewrittenGroupByProjection)
  - com.azure.cosmos.implementation.query.GroupingTable.drain(int)
  langs:
  - java
  name: GroupingTable
  nameWithType: GroupingTable
  fullName: com.azure.cosmos.implementation.query.GroupingTable
  type: Class
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public class GroupingTable
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.query.GroupingTable.GroupingTable(java.util.Map<java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator>,java.util.List<java.lang.String>,boolean)
  id: GroupingTable(java.util.Map<java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator>,java.util.List<java.lang.String>,boolean)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.GroupingTable
  langs:
  - java
  name: GroupingTable(Map<String,AggregateOperator> groupByAliasToAggregateType, List<String> orderedAliases, boolean hasSelectValue)
  nameWithType: GroupingTable.GroupingTable(Map<String,AggregateOperator> groupByAliasToAggregateType, List<String> orderedAliases, boolean hasSelectValue)
  fullName: com.azure.cosmos.implementation.query.GroupingTable.GroupingTable(Map<String,AggregateOperator> groupByAliasToAggregateType, List<String> orderedAliases, boolean hasSelectValue)
  overload: com.azure.cosmos.implementation.query.GroupingTable.GroupingTable*
  type: Constructor
  package: com.azure.cosmos.implementation.query
  syntax:
    content: " GroupingTable(Map<String,AggregateOperator> groupByAliasToAggregateType, List<String> orderedAliases, boolean hasSelectValue)"
    parameters:
    - id: groupByAliasToAggregateType
      type: java.util.Map<java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator>
    - id: orderedAliases
      type: java.util.List<java.lang.String>
    - id: hasSelectValue
      type: boolean
- uid: com.azure.cosmos.implementation.query.GroupingTable.addPayLoad(com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<?>.RewrittenGroupByProjection)
  id: addPayLoad(com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<?>.RewrittenGroupByProjection)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.GroupingTable
  langs:
  - java
  name: addPayLoad(GroupByDocumentQueryExecutionContext<?>.RewrittenGroupByProjection rewrittenGroupByProjection)
  nameWithType: GroupingTable.addPayLoad(GroupByDocumentQueryExecutionContext<?>.RewrittenGroupByProjection rewrittenGroupByProjection)
  fullName: com.azure.cosmos.implementation.query.GroupingTable.addPayLoad(GroupByDocumentQueryExecutionContext<?>.RewrittenGroupByProjection rewrittenGroupByProjection)
  overload: com.azure.cosmos.implementation.query.GroupingTable.addPayLoad*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public void addPayLoad(GroupByDocumentQueryExecutionContext<?>.RewrittenGroupByProjection rewrittenGroupByProjection)
    parameters:
    - id: rewrittenGroupByProjection
      type: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<?>.RewrittenGroupByProjection
- uid: com.azure.cosmos.implementation.query.GroupingTable.drain(int)
  id: drain(int)
  artifact: com.azure:azure-cosmos:4.3.2-beta.2
  parent: com.azure.cosmos.implementation.query.GroupingTable
  langs:
  - java
  name: drain(int maxItemCount)
  nameWithType: GroupingTable.drain(int maxItemCount)
  fullName: com.azure.cosmos.implementation.query.GroupingTable.drain(int maxItemCount)
  overload: com.azure.cosmos.implementation.query.GroupingTable.drain*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public List<Document> drain(int maxItemCount)
    parameters:
    - id: maxItemCount
      type: int
    return:
      type: java.util.List<com.azure.cosmos.implementation.Document>
references:
- uid: java.util.Map<java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: com.azure.cosmos.implementation.query.aggregation.AggregateOperator
    name: AggregateOperator
    fullName: com.azure.cosmos.implementation.query.aggregation.AggregateOperator
  - name: '>'
    fullName: '>'
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.implementation.query.GroupingTable.GroupingTable*
  name: GroupingTable
  nameWithType: GroupingTable.GroupingTable
  fullName: com.azure.cosmos.implementation.query.GroupingTable.GroupingTable
  package: com.azure.cosmos.implementation.query
- uid: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext<?>.RewrittenGroupByProjection
  spec.java:
  - uid: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext
    name: GroupByDocumentQueryExecutionContext
    fullName: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
  - uid: .RewrittenGroupByProjection
    name: RewrittenGroupByProjection
    fullName: .RewrittenGroupByProjection
- uid: com.azure.cosmos.implementation.query.GroupingTable.addPayLoad*
  name: addPayLoad
  nameWithType: GroupingTable.addPayLoad
  fullName: com.azure.cosmos.implementation.query.GroupingTable.addPayLoad
  package: com.azure.cosmos.implementation.query
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.util.List<com.azure.cosmos.implementation.Document>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.Document
    name: Document
    fullName: com.azure.cosmos.implementation.Document
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.GroupingTable.drain*
  name: drain
  nameWithType: GroupingTable.drain
  fullName: com.azure.cosmos.implementation.query.GroupingTable.drain
  package: com.azure.cosmos.implementation.query
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator
  name: String,AggregateOperator
  nameWithType: String,AggregateOperator
  fullName: java.lang.String,com.azure.cosmos.implementation.query.aggregation.AggregateOperator
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.String
  name: String
  nameWithType: String
  fullName: java.lang.String
- uid: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext
  name: GroupByDocumentQueryExecutionContext
  nameWithType: GroupByDocumentQueryExecutionContext
  fullName: com.azure.cosmos.implementation.query.GroupByDocumentQueryExecutionContext
- uid: ?>.RewrittenGroupByProjection
  name: ?>.RewrittenGroupByProjection
  nameWithType: ?>.RewrittenGroupByProjection
  fullName: ?>.RewrittenGroupByProjection
- uid: com.azure.cosmos.implementation.Document
  name: Document
  nameWithType: Document
  fullName: com.azure.cosmos.implementation.Document
