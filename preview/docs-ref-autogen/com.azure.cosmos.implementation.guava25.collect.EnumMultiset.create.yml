### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.guava25.collect.EnumMultiset.create*"
fullName: "com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.<E>create"
name: "<E>create"
nameWithType: "EnumMultiset<E>.<E>create"
members:
- uid: "com.azure.cosmos.implementation.guava25.collect.EnumMultiset.<E>create(java.lang.Class<E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.<E>create(Class<E> type)"
  name: "<E>create(Class<E> type)"
  nameWithType: "EnumMultiset<E>.<E>create(Class<E> type)"
  summary: "Creates an empty `EnumMultiset`."
  parameters:
  - name: "type"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static EnumMultiset<E> <E>create(Class<E> type)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.EnumMultiset?alt=com.azure.cosmos.implementation.guava25.collect.EnumMultiset&text=EnumMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.EnumMultiset.<E>create(java.lang.Iterable<E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.<E>create(Iterable<E> elements)"
  name: "<E>create(Iterable<E> elements)"
  nameWithType: "EnumMultiset<E>.<E>create(Iterable<E> elements)"
  summary: "Creates a new `EnumMultiset` containing the specified elements.\n\nThis implementation is highly efficient when `elements` is itself a <xref uid=\"com.azure.cosmos.implementation.guava25.collect.Multiset\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Multiset\"></xref>."
  parameters:
  - description: "the elements that the multiset should contain"
    name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static EnumMultiset<E> <E>create(Iterable<E> elements)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.EnumMultiset?alt=com.azure.cosmos.implementation.guava25.collect.EnumMultiset&text=EnumMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.implementation.guava25.collect.EnumMultiset.<E>create(java.lang.Iterable<E>,java.lang.Class<E>)"
  fullName: "com.azure.cosmos.implementation.guava25.collect.EnumMultiset<E>.<E>create(Iterable<E> elements, Class<E> type)"
  name: "<E>create(Iterable<E> elements, Class<E> type)"
  nameWithType: "EnumMultiset<E>.<E>create(Iterable<E> elements, Class<E> type)"
  summary: "Returns a new `EnumMultiset` instance containing the given elements. Unlike <xref uid=\"com.azure.cosmos.implementation.guava25.collect.EnumMultiset.&lt;E&gt;create(java.lang.Iterable&lt;E&gt;)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnumMultiset#create(Iterable)\"></xref>, this method does not produce an exception on an empty iterable."
  parameters:
  - name: "elements"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "type"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static EnumMultiset<E> <E>create(Iterable<E> elements, Class<E> type)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.guava25.collect.EnumMultiset?alt=com.azure.cosmos.implementation.guava25.collect.EnumMultiset&text=EnumMultiset\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"E?alt=E&text=E\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.guava25.collect"
artifact: com.azure:azure-cosmos:4.4.0-beta.1
