### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.repository.CosmosRepository
  id: CosmosRepository
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository
  children:
  - com.azure.spring.data.cosmos.repository.CosmosRepository.deleteById(ID,com.azure.cosmos.models.PartitionKey)
  - com.azure.spring.data.cosmos.repository.CosmosRepository.findAll(com.azure.cosmos.models.PartitionKey)
  - com.azure.spring.data.cosmos.repository.CosmosRepository.findById(ID,com.azure.cosmos.models.PartitionKey)
  langs:
  - java
  name: CosmosRepository<T,ID>
  nameWithType: CosmosRepository<T,ID>
  fullName: com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>
  type: Interface
  package: com.azure.spring.data.cosmos.repository
  summary: Extension of <xref uid="org.springframework.data.repository.PagingAndSortingRepository" data-throw-if-not-resolved="false">PagingAndSortingRepository</xref> to provide additional methods to retrieve entities using the pagination and sorting abstraction.
  syntax:
    content: public interface CosmosRepository<T,ID> extends PagingAndSortingRepository<T,ID>
    typeParameters:
    - id: T
    - id: ID
  implements:
  - org.springframework.data.repository.PagingAndSortingRepository<T,ID>
- uid: com.azure.spring.data.cosmos.repository.CosmosRepository.deleteById(ID,com.azure.cosmos.models.PartitionKey)
  id: deleteById(ID,com.azure.cosmos.models.PartitionKey)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.CosmosRepository
  langs:
  - java
  name: deleteById(ID id, PartitionKey partitionKey)
  nameWithType: CosmosRepository<T,ID>.deleteById(ID id, PartitionKey partitionKey)
  fullName: com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>.deleteById(ID id, PartitionKey partitionKey)
  overload: com.azure.spring.data.cosmos.repository.CosmosRepository.deleteById*
  type: Method
  package: com.azure.spring.data.cosmos.repository
  summary: Deletes an entity by its id and partition key.
  syntax:
    content: public abstract void deleteById(ID id, PartitionKey partitionKey)
    parameters:
    - id: id
      type: ID
      description: must not be null.
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
      description: partition key value of the entity, must not be null.
- uid: com.azure.spring.data.cosmos.repository.CosmosRepository.findAll(com.azure.cosmos.models.PartitionKey)
  id: findAll(com.azure.cosmos.models.PartitionKey)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.CosmosRepository
  langs:
  - java
  name: findAll(PartitionKey partitionKey)
  nameWithType: CosmosRepository<T,ID>.findAll(PartitionKey partitionKey)
  fullName: com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>.findAll(PartitionKey partitionKey)
  overload: com.azure.spring.data.cosmos.repository.CosmosRepository.findAll*
  type: Method
  package: com.azure.spring.data.cosmos.repository
  summary: Returns list of items in a specific partition
  syntax:
    content: public abstract Iterable<T> findAll(PartitionKey partitionKey)
    parameters:
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
      description: partition key value
    return:
      type: java.lang.Iterable<T>
      description: Iterable of items with partition key value
- uid: com.azure.spring.data.cosmos.repository.CosmosRepository.findById(ID,com.azure.cosmos.models.PartitionKey)
  id: findById(ID,com.azure.cosmos.models.PartitionKey)
  artifact: com.azure:azure-spring-data-cosmos:3.0.0-beta.2
  parent: com.azure.spring.data.cosmos.repository.CosmosRepository
  langs:
  - java
  name: findById(ID id, PartitionKey partitionKey)
  nameWithType: CosmosRepository<T,ID>.findById(ID id, PartitionKey partitionKey)
  fullName: com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>.findById(ID id, PartitionKey partitionKey)
  overload: com.azure.spring.data.cosmos.repository.CosmosRepository.findById*
  type: Method
  package: com.azure.spring.data.cosmos.repository
  summary: Retrieves an entity by its id.
  syntax:
    content: public abstract Optional<T> findById(ID id, PartitionKey partitionKey)
    parameters:
    - id: id
      type: ID
      description: must not be null.
    - id: partitionKey
      type: com.azure.cosmos.models.PartitionKey
      description: partition key value of entity, must not be null.
    return:
      type: java.util.Optional<T>
      description: the entity with the given id or Optional#empty() if none found
references:
- uid: ID
  spec.java:
  - uid: ID
    name: ID
    fullName: ID
- uid: com.azure.cosmos.models.PartitionKey
  spec.java:
  - uid: com.azure.cosmos.models.PartitionKey
    name: PartitionKey
    fullName: com.azure.cosmos.models.PartitionKey
- uid: java.util.Optional<T>
  spec.java:
  - uid: java.util.Optional
    name: Optional
    fullName: java.util.Optional
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.repository.CosmosRepository.findById*
  name: findById
  nameWithType: CosmosRepository<T,ID>.findById
  fullName: com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>.findById
  package: com.azure.spring.data.cosmos.repository
- uid: com.azure.spring.data.cosmos.repository.CosmosRepository.deleteById*
  name: deleteById
  nameWithType: CosmosRepository<T,ID>.deleteById
  fullName: com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>.deleteById
  package: com.azure.spring.data.cosmos.repository
- uid: java.lang.Iterable<T>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.spring.data.cosmos.repository.CosmosRepository.findAll*
  name: findAll
  nameWithType: CosmosRepository<T,ID>.findAll
  fullName: com.azure.spring.data.cosmos.repository.CosmosRepository<T,ID>.findAll
  package: com.azure.spring.data.cosmos.repository
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: org.springframework.data.repository.PagingAndSortingRepository<T,ID>
  name: PagingAndSortingRepository<T,ID>
  nameWithType: PagingAndSortingRepository<T,ID>
  fullName: org.springframework.data.repository.PagingAndSortingRepository<T,ID>
- uid: java.util.Optional
  name: Optional
  nameWithType: Optional
  fullName: java.util.Optional
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: org.springframework.data.repository.PagingAndSortingRepository
  name: PagingAndSortingRepository
  nameWithType: PagingAndSortingRepository
  fullName: org.springframework.data.repository.PagingAndSortingRepository
- uid: T,ID
  name: T,ID
  nameWithType: T,ID
  fullName: T,ID
