### YamlMime:JavaMember
uid: "com.azure.resourcemanager.datamigration.implementation.ProjectTaskImpl.withExistingProject*"
fullName: "com.azure.resourcemanager.datamigration.implementation.ProjectTaskImpl.withExistingProject"
name: "withExistingProject"
nameWithType: "ProjectTaskImpl.withExistingProject"
members:
- uid: "com.azure.resourcemanager.datamigration.implementation.ProjectTaskImpl.withExistingProject(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.datamigration.implementation.ProjectTaskImpl.withExistingProject(String groupName, String serviceName, String projectName)"
  name: "withExistingProject(String groupName, String serviceName, String projectName)"
  nameWithType: "ProjectTaskImpl.withExistingProject(String groupName, String serviceName, String projectName)"
  summary: "Specifies groupName, serviceName, projectName."
  parameters:
  - name: "groupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "projectName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ProjectTaskImpl withExistingProject(String groupName, String serviceName, String projectName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.datamigration.implementation.ProjectTaskImpl?alt=com.azure.resourcemanager.datamigration.implementation.ProjectTaskImpl&text=ProjectTaskImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.datamigration.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-datamigration:1.0.0-beta.1
