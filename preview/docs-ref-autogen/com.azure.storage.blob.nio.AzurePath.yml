### YamlMime:JavaType
uid: "com.azure.storage.blob.nio.AzurePath"
fullName: "com.azure.storage.blob.nio.AzurePath"
name: "AzurePath"
nameWithType: "AzurePath"
summary: "An object that may be used to locate a file in a file system.\n\nThe root component, if it is present, is the first element of the path and is denoted by a `':'` as the last character. Hence, only one instance of `':'` may appear in a path string and it may only be the last character of the first element in the path. The root component is used to identify which container a path belongs to.\n\nConstructing a syntactically valid path does not ensure a resource exists at the given path. An error will not be thrown until trying to access an invalid resource, e.g. trying to access a resource that does not exist.\n\nPath names are case sensitive.\n\nIf a resource is accessed via a relative path, it will be resolved against the default directory of the file system. The default directory is as defined in the <xref uid=\"com.azure.storage.blob.nio.AzureFileSystem\" data-throw-if-not-resolved=\"false\">AzureFileSystem</xref> docs.\n\nLeading and trailing separators will be stripped from each component passed to <xref uid=\"com.azure.storage.blob.nio.AzureFileSystem.getPath*\" data-throw-if-not-resolved=\"false\">AzureFileSystem#getPath(String, String...)</xref>. This has the effect of treating \"foo/\" as though it were simply \"foo\"."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class AzurePath implements Path"
methods:
- "com.azure.storage.blob.nio.AzurePath.compareTo(java.nio.file.Path)"
- "com.azure.storage.blob.nio.AzurePath.endsWith(java.lang.String)"
- "com.azure.storage.blob.nio.AzurePath.endsWith(java.nio.file.Path)"
- "com.azure.storage.blob.nio.AzurePath.equals(java.lang.Object)"
- "com.azure.storage.blob.nio.AzurePath.getFileName()"
- "com.azure.storage.blob.nio.AzurePath.getFileSystem()"
- "com.azure.storage.blob.nio.AzurePath.getName(int)"
- "com.azure.storage.blob.nio.AzurePath.getNameCount()"
- "com.azure.storage.blob.nio.AzurePath.getParent()"
- "com.azure.storage.blob.nio.AzurePath.getRoot()"
- "com.azure.storage.blob.nio.AzurePath.hashCode()"
- "com.azure.storage.blob.nio.AzurePath.isAbsolute()"
- "com.azure.storage.blob.nio.AzurePath.iterator()"
- "com.azure.storage.blob.nio.AzurePath.normalize()"
- "com.azure.storage.blob.nio.AzurePath.register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind<?>...)"
- "com.azure.storage.blob.nio.AzurePath.register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind<?>[],java.nio.file.WatchEvent.Modifier...)"
- "com.azure.storage.blob.nio.AzurePath.relativize(java.nio.file.Path)"
- "com.azure.storage.blob.nio.AzurePath.resolve(java.lang.String)"
- "com.azure.storage.blob.nio.AzurePath.resolve(java.nio.file.Path)"
- "com.azure.storage.blob.nio.AzurePath.resolveSibling(java.lang.String)"
- "com.azure.storage.blob.nio.AzurePath.resolveSibling(java.nio.file.Path)"
- "com.azure.storage.blob.nio.AzurePath.startsWith(java.lang.String)"
- "com.azure.storage.blob.nio.AzurePath.startsWith(java.nio.file.Path)"
- "com.azure.storage.blob.nio.AzurePath.subpath(int,int)"
- "com.azure.storage.blob.nio.AzurePath.toAbsolutePath()"
- "com.azure.storage.blob.nio.AzurePath.toFile()"
- "com.azure.storage.blob.nio.AzurePath.toRealPath(java.nio.file.LinkOption...)"
- "com.azure.storage.blob.nio.AzurePath.toString()"
- "com.azure.storage.blob.nio.AzurePath.toUri()"
type: "class"
implements:
- "<xref href=\"java.nio.file.Path?alt=java.nio.file.Path&text=Path\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.storage.blob.nio"
artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
