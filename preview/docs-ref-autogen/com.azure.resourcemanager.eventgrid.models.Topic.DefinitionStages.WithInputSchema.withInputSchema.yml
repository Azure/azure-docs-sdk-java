### YamlMime:JavaMember
uid: "com.azure.resourcemanager.eventgrid.models.Topic.DefinitionStages.WithInputSchema.withInputSchema*"
fullName: "com.azure.resourcemanager.eventgrid.models.Topic.DefinitionStages.WithInputSchema.withInputSchema"
name: "withInputSchema"
nameWithType: "Topic.DefinitionStages.WithInputSchema.withInputSchema"
members:
- uid: "com.azure.resourcemanager.eventgrid.models.Topic.DefinitionStages.WithInputSchema.withInputSchema(com.azure.resourcemanager.eventgrid.models.InputSchema)"
  fullName: "com.azure.resourcemanager.eventgrid.models.Topic.DefinitionStages.WithInputSchema.withInputSchema(InputSchema inputSchema)"
  name: "withInputSchema(InputSchema inputSchema)"
  nameWithType: "Topic.DefinitionStages.WithInputSchema.withInputSchema(InputSchema inputSchema)"
  summary: "Specifies the inputSchema property: This determines the format that Event Grid should expect for incoming events published to the topic.."
  parameters:
  - description: "This determines the format that Event Grid should expect for incoming events published\n     to the topic."
    name: "inputSchema"
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.InputSchema?alt=com.azure.resourcemanager.eventgrid.models.InputSchema&text=InputSchema\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Topic.DefinitionStages.WithCreate withInputSchema(InputSchema inputSchema)"
  returns:
    description: "the next definition stage."
    type: "<xref href=\"com.azure.resourcemanager.eventgrid.models.Topic.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.eventgrid.models.Topic.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.eventgrid.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-eventgrid:1.0.0-beta.1
