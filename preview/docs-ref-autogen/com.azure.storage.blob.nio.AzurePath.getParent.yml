### YamlMime:JavaMember
uid: "com.azure.storage.blob.nio.AzurePath.getParent*"
fullName: "com.azure.storage.blob.nio.AzurePath.getParent"
name: "getParent"
nameWithType: "AzurePath.getParent"
members:
- uid: "com.azure.storage.blob.nio.AzurePath.getParent()"
  fullName: "com.azure.storage.blob.nio.AzurePath.getParent()"
  name: "getParent()"
  nameWithType: "AzurePath.getParent()"
  summary: "Returns the parent path, or null if this path does not have a parent.\n\nThe parent of this path object consists of this path's root component, if any, and each element in the path except for the farthest from the root in the directory hierarchy. This method does not access the file system; the path or its parent may not exist. Furthermore, this method does not eliminate special names such as \".\" and \"..\" that may be used in some implementations. On UNIX for example, the parent of \"/a/b/c\" is \"/a/b\", and the parent of \"x/y/.\" is \"x/y\". This method may be used with the normalize method, to eliminate redundant names, for cases where shell-like navigation is required.\n\nIf this path has one or more elements, and no root component, then this method is equivalent to evaluating the expression: `subpath(0, getNameCount()-1);`"
  syntax: "public Path getParent()"
  returns:
    description: "a path representing the path's parent"
    type: "<xref href=\"java.nio.file.Path?alt=java.nio.file.Path&text=Path\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.blob.nio"
artifact: com.azure:azure-storage-blob-nio:12.0.0-beta.2
