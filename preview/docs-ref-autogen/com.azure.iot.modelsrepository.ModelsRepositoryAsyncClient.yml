### YamlMime:JavaType
uid: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient"
fullName: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient"
name: "ModelsRepositoryAsyncClient"
nameWithType: "ModelsRepositoryAsyncClient"
summary: "This class provides a client for interacting asynchronously with a Models<wbr>Repository instance."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ModelsRepositoryAsyncClient"
methods:
- uid: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(java.lang.Iterable<java.lang.String>)"
  fullName: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(Iterable<String> dtmis)"
  name: "getModels(Iterable<String> dtmis)"
  nameWithType: "ModelsRepositoryAsyncClient.getModels(Iterable<String> dtmis)"
  summary: "Gets a collection of model definitions."
  parameters:
  - description: "Collection of well-formed DTDL model Ids."
    name: "dtmis"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Mono<Map<String,String>> getModels(Iterable<String> dtmis)"
  desc: "Gets a collection of model definitions."
  returns:
    description: "A Map containing the model definition(s) and dependencies (if applicable) where the key is the dtmi\n and the value is the raw model definition string."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(java.lang.Iterable<java.lang.String>,com.azure.iot.modelsrepository.ModelDependencyResolution)"
  fullName: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(Iterable<String> dtmis, ModelDependencyResolution dependencyResolution)"
  name: "getModels(Iterable<String> dtmis, ModelDependencyResolution dependencyResolution)"
  nameWithType: "ModelsRepositoryAsyncClient.getModels(Iterable<String> dtmis, ModelDependencyResolution dependencyResolution)"
  summary: "Gets a collection of model definitions."
  parameters:
  - description: "An Iterable of well-formed DTDL model Ids. See <a href=\"https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md\">DTDL specs</a>. For example 'dtmi:com:example:Thermostat;1'."
    name: "dtmis"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "A <xref uid=\"com.azure.iot.modelsrepository.ModelDependencyResolution\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ModelDependencyResolution\"></xref> value to dictate model resolution behavior."
    name: "dependencyResolution"
    type: "<xref href=\"com.azure.iot.modelsrepository.ModelDependencyResolution?alt=com.azure.iot.modelsrepository.ModelDependencyResolution&text=ModelDependencyResolution\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Map<String,String>> getModels(Iterable<String> dtmis, ModelDependencyResolution dependencyResolution)"
  desc: "Gets a collection of model definitions."
  returns:
    description: "A Map containing the model definition(s) and dependencies (if applicable) where the key is the dtmi\n and the value is the raw model definition string."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(java.lang.String)"
  fullName: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(String dtmi)"
  name: "getModels(String dtmi)"
  nameWithType: "ModelsRepositoryAsyncClient.getModels(String dtmi)"
  summary: "Gets a collection of model definitions."
  parameters:
  - description: "A well-formed DTDL model Id. See <a href=\"https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md\">DTDL specs</a>. For example 'dtmi:com:example:Thermostat;1'."
    name: "dtmi"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Map<String,String>> getModels(String dtmi)"
  desc: "Gets a collection of model definitions."
  returns:
    description: "A Map containing the model definition(s) and dependencies (if applicable) where the key is the dtmi\n and the value is the raw model definition string."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(java.lang.String,com.azure.iot.modelsrepository.ModelDependencyResolution)"
  fullName: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getModels(String dtmi, ModelDependencyResolution dependencyResolution)"
  name: "getModels(String dtmi, ModelDependencyResolution dependencyResolution)"
  nameWithType: "ModelsRepositoryAsyncClient.getModels(String dtmi, ModelDependencyResolution dependencyResolution)"
  summary: "Gets a collection of model definitions."
  parameters:
  - description: "A well-formed DTDL model Id. See <a href=\"https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md\">DTDL specs</a>. For example 'dtmi:com:example:Thermostat;1'."
    name: "dtmi"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "A <xref uid=\"com.azure.iot.modelsrepository.ModelDependencyResolution\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ModelDependencyResolution\"></xref> value to dictate model resolution behavior."
    name: "dependencyResolution"
    type: "<xref href=\"com.azure.iot.modelsrepository.ModelDependencyResolution?alt=com.azure.iot.modelsrepository.ModelDependencyResolution&text=ModelDependencyResolution\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Map<String,String>> getModels(String dtmi, ModelDependencyResolution dependencyResolution)"
  desc: "Gets a collection of model definitions."
  returns:
    description: "A Map containing the model definition(s) and dependencies (if applicable) where the key is the dtmi\n and the value is the raw model definition string."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getRepositoryEndpoint()"
  fullName: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getRepositoryEndpoint()"
  name: "getRepositoryEndpoint()"
  nameWithType: "ModelsRepositoryAsyncClient.getRepositoryEndpoint()"
  summary: "Gets the repository endpoint that the client has been initialized with."
  syntax: "public String getRepositoryEndpoint()"
  desc: "Gets the repository endpoint that the client has been initialized with."
  returns:
    description: "The target repository endpoint."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getServiceVersion()"
  fullName: "com.azure.iot.modelsrepository.ModelsRepositoryAsyncClient.getServiceVersion()"
  name: "getServiceVersion()"
  nameWithType: "ModelsRepositoryAsyncClient.getServiceVersion()"
  summary: "Gets the Models Repository service API version that this client is configured to use for all service requests."
  syntax: "public ModelsRepositoryServiceVersion getServiceVersion()"
  desc: "Gets the Models Repository service API version that this client is configured to use for all service requests. Unless configured while building this client through <xref uid=\"com.azure.iot.modelsrepository.ModelsRepositoryClientBuilder.serviceVersion(com.azure.iot.modelsrepository.ModelsRepositoryServiceVersion)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ModelsRepositoryClientBuilder#serviceVersion(ModelsRepositoryServiceVersion)\"></xref>, this value will be equal to the latest service API version supported by this client."
  returns:
    description: "The ModelsRepository service API version."
    type: "<xref href=\"com.azure.iot.modelsrepository.ModelsRepositoryServiceVersion?alt=com.azure.iot.modelsrepository.ModelsRepositoryServiceVersion&text=ModelsRepositoryServiceVersion\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This class provides a client for interacting asynchronously with a ModelsRepository instance. This client is instantiated through <xref uid=\"com.azure.iot.modelsrepository.ModelsRepositoryClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ModelsRepositoryClientBuilder\"></xref>."
metadata: {}
package: "com.azure.iot.modelsrepository"
artifact: com.azure:azure-iot-modelsrepository:1.0.0-beta.1
