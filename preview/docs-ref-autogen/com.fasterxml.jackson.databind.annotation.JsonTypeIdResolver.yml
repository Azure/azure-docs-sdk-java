### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver"
fullName: "com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver"
name: "JsonTypeIdResolver"
nameWithType: "JsonTypeIdResolver"
summary: "Annotation that can be used to plug a custom type identifier handler (<xref uid=\"? extends com.fasterxml.jackson.databind.jsontype.TypeIdResolver\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeIdResolver\"></xref>) to be used by <xref uid=\"com.fasterxml.jackson.databind.jsontype.TypeSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.jsontype.TypeSerializer\"></xref>s and <xref uid=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.fasterxml.jackson.databind.jsontype.TypeDeserializer\"></xref>s for converting between java types and type id included in JSON content. In simplest cases this can be a simple class with static mapping between type names and matching classes.\n\nNOTE: since 2.4, applicable to properties as well (should have been long time ago, but problem only found then)"
syntax: "public interface JsonTypeIdResolver implements Annotation"
methods:
- "com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver.value()"
type: "interface"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
