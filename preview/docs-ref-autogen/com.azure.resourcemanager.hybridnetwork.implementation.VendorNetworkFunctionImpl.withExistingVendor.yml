### YamlMime:JavaMember
uid: "com.azure.resourcemanager.hybridnetwork.implementation.VendorNetworkFunctionImpl.withExistingVendor*"
fullName: "com.azure.resourcemanager.hybridnetwork.implementation.VendorNetworkFunctionImpl.withExistingVendor"
name: "withExistingVendor"
nameWithType: "VendorNetworkFunctionImpl.withExistingVendor"
members:
- uid: "com.azure.resourcemanager.hybridnetwork.implementation.VendorNetworkFunctionImpl.withExistingVendor(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.hybridnetwork.implementation.VendorNetworkFunctionImpl.withExistingVendor(String locationName, String vendorName)"
  name: "withExistingVendor(String locationName, String vendorName)"
  nameWithType: "VendorNetworkFunctionImpl.withExistingVendor(String locationName, String vendorName)"
  summary: "Specifies locationName, vendorName."
  parameters:
  - name: "locationName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "vendorName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VendorNetworkFunctionImpl withExistingVendor(String locationName, String vendorName)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.hybridnetwork.implementation.VendorNetworkFunctionImpl?alt=com.azure.resourcemanager.hybridnetwork.implementation.VendorNetworkFunctionImpl&text=VendorNetworkFunctionImpl\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.hybridnetwork.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-hybridnetwork:1.0.0-beta.1
