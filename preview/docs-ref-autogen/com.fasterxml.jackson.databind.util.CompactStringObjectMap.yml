### YamlMime:JavaType
uid: "com.fasterxml.jackson.databind.util.CompactStringObjectMap"
fullName: "com.fasterxml.jackson.databind.util.CompactStringObjectMap"
name: "CompactStringObjectMap"
nameWithType: "CompactStringObjectMap"
summary: "Specialized lookup class that implements functionality similar to <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.util.Map\"></xref>, but for special case of key always being <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.lang.String\"></xref> and using more compact (and memory-access friendly) hashing scheme. Assumption is also that keys are typically intern()ed.\n\nGenerics are not used to avoid bridge methods and since these maps are not exposed as part of external API."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CompactStringObjectMap implements Serializable"
methods:
- "com.fasterxml.jackson.databind.util.CompactStringObjectMap.<T>construct(java.util.Map<java.lang.String,T>)"
- "com.fasterxml.jackson.databind.util.CompactStringObjectMap.find(java.lang.String)"
- "com.fasterxml.jackson.databind.util.CompactStringObjectMap.findCaseInsensitive(java.lang.String)"
- "com.fasterxml.jackson.databind.util.CompactStringObjectMap.keys()"
type: "class"
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.databind.util"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
