### YamlMime:JavaMember
uid: "com.fasterxml.jackson.databind.type.TypeFactory._fromAny*"
fullName: "com.fasterxml.jackson.databind.type.TypeFactory._fromAny"
name: "_fromAny"
nameWithType: "TypeFactory._fromAny"
members:
- uid: "com.fasterxml.jackson.databind.type.TypeFactory._fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)"
  fullName: "com.fasterxml.jackson.databind.type.TypeFactory._fromAny(ClassStack context, Type srcType, TypeBindings bindings)"
  name: "_fromAny(ClassStack context, Type srcType, TypeBindings bindings)"
  nameWithType: "TypeFactory._fromAny(ClassStack context, Type srcType, TypeBindings bindings)"
  summary: "Factory method that can be used if type information is passed as Java typing returned from `getGenericXxx` methods (usually for a return or argument type)."
  parameters:
  - name: "context"
    type: "<xref href=\"com.fasterxml.jackson.databind.type.ClassStack?alt=com.fasterxml.jackson.databind.type.ClassStack&text=ClassStack\" data-throw-if-not-resolved=\"False\" />"
  - name: "srcType"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - name: "bindings"
    type: "<xref href=\"com.fasterxml.jackson.databind.type.TypeBindings?alt=com.fasterxml.jackson.databind.type.TypeBindings&text=TypeBindings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected JavaType _fromAny(ClassStack context, Type srcType, TypeBindings bindings)"
  returns:
    type: "<xref href=\"com.fasterxml.jackson.databind.JavaType?alt=com.fasterxml.jackson.databind.JavaType&text=JavaType\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.fasterxml.jackson.databind.type"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
