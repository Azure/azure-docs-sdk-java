### YamlMime:ManagedReference
items:
- uid: com.azure.core.http.rest.RestProxy
  id: RestProxy
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.rest
  children:
  - com.azure.core.http.rest.RestProxy.<A>create(java.lang.Class<A>)
  - com.azure.core.http.rest.RestProxy.<A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline)
  - com.azure.core.http.rest.RestProxy.<A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter)
  - com.azure.core.http.rest.RestProxy.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
  - com.azure.core.http.rest.RestProxy.send(com.azure.core.http.HttpRequest,com.azure.core.util.Context)
  langs:
  - java
  name: RestProxy
  nameWithType: RestProxy
  fullName: com.azure.core.http.rest.RestProxy
  type: Class
  package: com.azure.core.http.rest
  summary: Type to create a proxy implementation for an interface describing REST API methods. RestProxy can create proxy implementations for interfaces with methods that return deserialized Java objects as well as asynchronous Single objects that resolve to a deserialized Java object.
  syntax:
    content: public final class RestProxy implements InvocationHandler
  inheritance:
  - java.lang.Object
  implements:
  - java.lang.reflect.InvocationHandler
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.http.rest.RestProxy.<A>create(java.lang.Class<A>)
  id: <A>create(java.lang.Class<A>)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.rest.RestProxy
  langs:
  - java
  name: <A>create(Class<A> swaggerInterface)
  nameWithType: RestProxy.<A>create(Class<A> swaggerInterface)
  fullName: com.azure.core.http.rest.RestProxy.<A>create(Class<A> swaggerInterface)
  overload: com.azure.core.http.rest.RestProxy.create*
  type: Method
  package: com.azure.core.http.rest
  summary: Create a proxy implementation of the provided Swagger interface.
  syntax:
    content: public static A <A>create(Class<A> swaggerInterface)
    parameters:
    - id: swaggerInterface
      type: java.lang.Class<A>
      description: the Swagger interface to provide a proxy implementation for
    return:
      type: A
      description: a proxy implementation of the provided Swagger interface
- uid: com.azure.core.http.rest.RestProxy.<A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline)
  id: <A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.rest.RestProxy
  langs:
  - java
  name: <A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline)
  nameWithType: RestProxy.<A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline)
  fullName: com.azure.core.http.rest.RestProxy.<A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline)
  overload: com.azure.core.http.rest.RestProxy.create*
  type: Method
  package: com.azure.core.http.rest
  summary: Create a proxy implementation of the provided Swagger interface.
  syntax:
    content: public static A <A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline)
    parameters:
    - id: swaggerInterface
      type: java.lang.Class<A>
      description: the Swagger interface to provide a proxy implementation for
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: the HttpPipelinePolicy and HttpClient pipeline that will be used to send Http requests
    return:
      type: A
      description: a proxy implementation of the provided Swagger interface
- uid: com.azure.core.http.rest.RestProxy.<A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter)
  id: <A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.rest.RestProxy
  langs:
  - java
  name: <A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline, SerializerAdapter serializer)
  nameWithType: RestProxy.<A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline, SerializerAdapter serializer)
  fullName: com.azure.core.http.rest.RestProxy.<A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline, SerializerAdapter serializer)
  overload: com.azure.core.http.rest.RestProxy.create*
  type: Method
  package: com.azure.core.http.rest
  summary: Create a proxy implementation of the provided Swagger interface.
  syntax:
    content: public static A <A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline, SerializerAdapter serializer)
    parameters:
    - id: swaggerInterface
      type: java.lang.Class<A>
      description: the Swagger interface to provide a proxy implementation for
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: >-
        the HttpPipelinePolicy and HttpClient pipline that will be used to send Http
             requests
    - id: serializer
      type: com.azure.core.util.serializer.SerializerAdapter
      description: >-
        the serializer that will be used to convert POJOs to and from request and
             response bodies
    return:
      type: A
      description: a proxy implementation of the provided Swagger interface
- uid: com.azure.core.http.rest.RestProxy.RestProxy(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.rest.SwaggerInterfaceParser)
  id: RestProxy(com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter,com.azure.core.http.rest.SwaggerInterfaceParser)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.rest.RestProxy
  langs:
  - java
  name: RestProxy(HttpPipeline httpPipeline, SerializerAdapter serializer, SwaggerInterfaceParser interfaceParser)
  nameWithType: RestProxy.RestProxy(HttpPipeline httpPipeline, SerializerAdapter serializer, SwaggerInterfaceParser interfaceParser)
  fullName: com.azure.core.http.rest.RestProxy.RestProxy(HttpPipeline httpPipeline, SerializerAdapter serializer, SwaggerInterfaceParser interfaceParser)
  overload: com.azure.core.http.rest.RestProxy.RestProxy*
  type: Constructor
  package: com.azure.core.http.rest
  summary: Create a RestProxy.
  syntax:
    content: private RestProxy(HttpPipeline httpPipeline, SerializerAdapter serializer, SwaggerInterfaceParser interfaceParser)
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: >-
        the HttpPipelinePolicy and HttpClient httpPipeline that will be used to send HTTP
             requests.
    - id: serializer
      type: com.azure.core.util.serializer.SerializerAdapter
      description: the serializer that will be used to convert response bodies to POJOs.
    - id: interfaceParser
      type: com.azure.core.http.rest.SwaggerInterfaceParser
      description: >-
        the parser that contains information about the interface describing REST API methods
             that this RestProxy "implements".
- uid: com.azure.core.http.rest.RestProxy.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
  id: invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.rest.RestProxy
  langs:
  - java
  name: invoke(Object proxy, Method method, Object[] args)
  nameWithType: RestProxy.invoke(Object proxy, Method method, Object[] args)
  fullName: com.azure.core.http.rest.RestProxy.invoke(Object proxy, Method method, Object[] args)
  overload: com.azure.core.http.rest.RestProxy.invoke*
  type: Method
  package: com.azure.core.http.rest
  syntax:
    content: public Object invoke(Object proxy, Method method, Object[] args)
    parameters:
    - id: proxy
      type: java.lang.Object
    - id: method
      type: java.lang.reflect.Method
    - id: args
      type: java.lang.Object[]
    return:
      type: java.lang.Object
- uid: com.azure.core.http.rest.RestProxy.send(com.azure.core.http.HttpRequest,com.azure.core.util.Context)
  id: send(com.azure.core.http.HttpRequest,com.azure.core.util.Context)
  artifact: com.azure:azure-core:1.3.0-beta.1
  parent: com.azure.core.http.rest.RestProxy
  langs:
  - java
  name: send(HttpRequest request, Context contextData)
  nameWithType: RestProxy.send(HttpRequest request, Context contextData)
  fullName: com.azure.core.http.rest.RestProxy.send(HttpRequest request, Context contextData)
  overload: com.azure.core.http.rest.RestProxy.send*
  type: Method
  package: com.azure.core.http.rest
  summary: Send the provided request asynchronously, applying any request policies provided to the HttpClient instance.
  syntax:
    content: public Mono<HttpResponse> send(HttpRequest request, Context contextData)
    parameters:
    - id: request
      type: com.azure.core.http.HttpRequest
      description: the HTTP request to send
    - id: contextData
      type: com.azure.core.util.Context
      description: the context
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>
      description: a <xref uid="reactor.core.publisher.Mono" data-throw-if-not-resolved="false">Mono</xref> that emits HttpResponse asynchronously
references:
- uid: com.azure.core.http.HttpPipeline
  name: HttpPipeline
  nameWithType: HttpPipeline
  fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.core.util.serializer.SerializerAdapter
  name: SerializerAdapter
  nameWithType: SerializerAdapter
  fullName: com.azure.core.util.serializer.SerializerAdapter
- uid: com.azure.core.http.rest.SwaggerInterfaceParser
  spec.java:
  - uid: com.azure.core.http.rest.SwaggerInterfaceParser
    name: SwaggerInterfaceParser
    fullName: com.azure.core.http.rest.SwaggerInterfaceParser
- uid: com.azure.core.http.rest.RestProxy.RestProxy*
  name: RestProxy
  nameWithType: RestProxy.RestProxy
  fullName: com.azure.core.http.rest.RestProxy.RestProxy
  package: com.azure.core.http.rest
- uid: com.azure.core.http.HttpRequest
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: com.azure.core.http.HttpRequest
- uid: com.azure.core.util.Context
  name: Context
  nameWithType: Context
  fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.HttpResponse
    name: HttpResponse
    fullName: com.azure.core.http.HttpResponse
  - name: '>'
    fullName: '>'
- uid: com.azure.core.http.rest.RestProxy.send*
  name: send
  nameWithType: RestProxy.send
  fullName: com.azure.core.http.rest.RestProxy.send
  package: com.azure.core.http.rest
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: java.lang.reflect.Method
  spec.java:
  - uid: java.lang.reflect.Method
    name: Method
    fullName: java.lang.reflect.Method
- uid: java.lang.Object[]
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '[]'
    fullName: '[]'
- uid: com.azure.core.http.rest.RestProxy.invoke*
  name: invoke
  nameWithType: RestProxy.invoke
  fullName: com.azure.core.http.rest.RestProxy.invoke
  package: com.azure.core.http.rest
- uid: java.lang.Class<A>
  spec.java:
  - uid: java.lang.Class
    name: Class
    fullName: java.lang.Class
  - name: <
    fullName: <
  - uid: A
    name: A
    fullName: A
  - name: '>'
    fullName: '>'
- uid: A
  spec.java:
  - uid: A
    name: A
    fullName: A
- uid: com.azure.core.http.rest.RestProxy.create*
  name: <A>create
  nameWithType: RestProxy.<A>create
  fullName: com.azure.core.http.rest.RestProxy.<A>create
  package: com.azure.core.http.rest
- uid: java.lang.reflect.InvocationHandler
  name: InvocationHandler
  nameWithType: InvocationHandler
  fullName: java.lang.reflect.InvocationHandler
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: com.azure.core.http.HttpResponse
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: java.lang.Class
  name: Class
  nameWithType: Class
  fullName: java.lang.Class
