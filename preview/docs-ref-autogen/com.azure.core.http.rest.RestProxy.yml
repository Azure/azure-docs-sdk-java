### YamlMime:JavaType
uid: "com.azure.core.http.rest.RestProxy"
fullName: "com.azure.core.http.rest.RestProxy"
name: "RestProxy"
nameWithType: "RestProxy"
summary: "Type to create a proxy implementation for an interface describing REST API methods. RestProxy can create proxy implementations for interfaces with methods that return deserialized Java objects as well as asynchronous Single objects that resolve to a deserialized Java object."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class RestProxy implements InvocationHandler"
methods:
- "com.azure.core.http.rest.RestProxy.<A>create(java.lang.Class<A>)"
- "com.azure.core.http.rest.RestProxy.<A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline)"
- "com.azure.core.http.rest.RestProxy.<A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline,com.azure.core.util.serializer.SerializerAdapter)"
- "com.azure.core.http.rest.RestProxy.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
- "com.azure.core.http.rest.RestProxy.send(com.azure.core.http.HttpRequest,com.azure.core.util.Context)"
type: "class"
implements:
- "<xref href=\"java.lang.reflect.InvocationHandler?alt=java.lang.reflect.InvocationHandler&text=InvocationHandler\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.http.rest"
artifact: com.azure:azure-core:1.3.0-beta.1
