### YamlMime:JavaType
uid: "com.fasterxml.jackson.annotation.JsonManagedReference"
fullName: "com.fasterxml.jackson.annotation.JsonManagedReference"
name: "JsonManagedReference"
nameWithType: "JsonManagedReference"
summary: "Annotation used to indicate that annotated property is part of two-way linkage between fields; and that its role is \"parent\" (or \"forward\") link. Value type (class) of property must have a single compatible property annotated with <xref uid=\"com.fasterxml.jackson.annotation.JsonBackReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonBackReference\"></xref>. Linkage is handled such that the property annotated with this annotation is handled normally (serialized normally, no special handling for deserialization); it is the matching back reference that requires special handling\n\nAll references have logical name to allow handling multiple linkages; typical case would be that where nodes have both parent/child and sibling linkages. If so, pairs of references should be named differently. It is an error for a class too have multiple managed references with same name, even if types pointed are different.\n\nNote: only methods and fields can be annotated with this annotation: constructor arguments should NOT be annotated, as they can not be either managed or back references."
syntax: "public interface JsonManagedReference implements Annotation"
methods:
- "com.fasterxml.jackson.annotation.JsonManagedReference.value()"
type: "interface"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.fasterxml.jackson.annotation"
artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
