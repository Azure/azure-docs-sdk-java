### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.Receiver
  id: Receiver
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service
  children:
  - com.microsoft.azure.sdk.iot.service.Receiver.Receiver()
  - com.microsoft.azure.sdk.iot.service.Receiver.closeAsync()
  - com.microsoft.azure.sdk.iot.service.Receiver.openAsync()
  - com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync()
  - com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync(long)
  langs:
  - java
  name: Receiver
  nameWithType: Receiver
  fullName: com.microsoft.azure.sdk.iot.service.Receiver
  type: Class
  package: com.microsoft.azure.sdk.iot.service
  summary: A receiver is a class abstracting the methods to receive messages, in order to use it for multiple endpoints, e.g. feedback endpoint, "alerts" (i.e. D2C).
  syntax:
    content: public abstract class Receiver
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.service.Receiver.Receiver()
  id: Receiver()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.Receiver
  langs:
  - java
  name: Receiver()
  nameWithType: Receiver.Receiver()
  fullName: com.microsoft.azure.sdk.iot.service.Receiver.Receiver()
  overload: com.microsoft.azure.sdk.iot.service.Receiver.Receiver*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service
  syntax:
    content: public Receiver()
- uid: com.microsoft.azure.sdk.iot.service.Receiver.closeAsync()
  id: closeAsync()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.Receiver
  langs:
  - java
  name: closeAsync()
  nameWithType: Receiver.closeAsync()
  fullName: com.microsoft.azure.sdk.iot.service.Receiver.closeAsync()
  overload: com.microsoft.azure.sdk.iot.service.Receiver.closeAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  syntax:
    content: protected abstract CompletableFuture<Void> closeAsync()
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.sdk.iot.service.Receiver.openAsync()
  id: openAsync()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.Receiver
  langs:
  - java
  name: openAsync()
  nameWithType: Receiver.openAsync()
  fullName: com.microsoft.azure.sdk.iot.service.Receiver.openAsync()
  overload: com.microsoft.azure.sdk.iot.service.Receiver.openAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  syntax:
    content: protected abstract CompletableFuture<Void> openAsync()
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
- uid: com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync()
  id: receiveAsync()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.Receiver
  langs:
  - java
  name: receiveAsync()
  nameWithType: Receiver.receiveAsync()
  fullName: com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync()
  overload: com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  syntax:
    content: protected abstract CompletableFuture<?> receiveAsync()
    return:
      type: java.util.concurrent.CompletableFuture<?>
- uid: com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync(long)
  id: receiveAsync(long)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client-preview:1.1.0
  parent: com.microsoft.azure.sdk.iot.service.Receiver
  langs:
  - java
  name: receiveAsync(long timeoutSeconds)
  nameWithType: Receiver.receiveAsync(long timeoutSeconds)
  fullName: com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync(long timeoutSeconds)
  overload: com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync*
  type: Method
  package: com.microsoft.azure.sdk.iot.service
  syntax:
    content: protected abstract CompletableFuture<?> receiveAsync(long timeoutSeconds)
    parameters:
    - id: timeoutSeconds
      type: long
    return:
      type: java.util.concurrent.CompletableFuture<?>
references:
- uid: com.microsoft.azure.sdk.iot.service.Receiver.Receiver*
  name: Receiver
  nameWithType: Receiver.Receiver
  fullName: com.microsoft.azure.sdk.iot.service.Receiver.Receiver
  package: com.microsoft.azure.sdk.iot.service
- uid: java.util.concurrent.CompletableFuture<java.lang.Void>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.Receiver.openAsync*
  name: openAsync
  nameWithType: Receiver.openAsync
  fullName: com.microsoft.azure.sdk.iot.service.Receiver.openAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.Receiver.closeAsync*
  name: closeAsync
  nameWithType: Receiver.closeAsync
  fullName: com.microsoft.azure.sdk.iot.service.Receiver.closeAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: java.util.concurrent.CompletableFuture<?>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync*
  name: receiveAsync
  nameWithType: Receiver.receiveAsync
  fullName: com.microsoft.azure.sdk.iot.service.Receiver.receiveAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.util.concurrent.CompletableFuture
  name: CompletableFuture
  nameWithType: CompletableFuture
  fullName: java.util.concurrent.CompletableFuture
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
