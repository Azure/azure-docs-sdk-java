### YamlMime:JavaType
uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties"
fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties"
name: "CapabilityProperties"
nameWithType: "CapabilityProperties"
summary: "An immutable client-side representation of Capability<wbr>Properties."
syntax: "public interface CapabilityProperties"
methods:
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.geoBackupSupported()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.geoBackupSupported()"
  name: "geoBackupSupported()"
  nameWithType: "CapabilityProperties.geoBackupSupported()"
  summary: "Gets the geo<wbr>Backup<wbr>Supported property: A value indicating whether a new server in this region can have geo-backups to paired region."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean geoBackupSupported()"
  desc: "Gets the geoBackupSupported property: A value indicating whether a new server in this region can have geo-backups to paired region."
  returns:
    description: "the geoBackupSupported value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.innerModel()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.innerModel()"
  name: "innerModel()"
  nameWithType: "CapabilityProperties.innerModel()"
  summary: "Gets the inner com.<wbr>azure.<wbr>resourcemanager.<wbr>postgresqlflexibleserver.<wbr>fluent.<wbr>models.<wbr>Capability<wbr>Properties<wbr>Inner object."
  modifiers:
  - "abstract"
  syntax: "public abstract CapabilityPropertiesInner innerModel()"
  desc: "Gets the inner com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.CapabilityPropertiesInner object."
  returns:
    description: "the inner object."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.CapabilityPropertiesInner?alt=com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.CapabilityPropertiesInner&text=CapabilityPropertiesInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.status()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.status()"
  name: "status()"
  nameWithType: "CapabilityProperties.status()"
  summary: "Gets the status property: The status."
  modifiers:
  - "abstract"
  syntax: "public abstract String status()"
  desc: "Gets the status property: The status."
  returns:
    description: "the status value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.supportedFlexibleServerEditions()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.supportedFlexibleServerEditions()"
  name: "supportedFlexibleServerEditions()"
  nameWithType: "CapabilityProperties.supportedFlexibleServerEditions()"
  summary: "Gets the supported<wbr>Flexible<wbr>Server<wbr>Editions property: The supported<wbr>Flexible<wbr>Server<wbr>Editions property."
  modifiers:
  - "abstract"
  syntax: "public abstract List<FlexibleServerEditionCapability> supportedFlexibleServerEditions()"
  desc: "Gets the supportedFlexibleServerEditions property: The supportedFlexibleServerEditions property."
  returns:
    description: "the supportedFlexibleServerEditions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.FlexibleServerEditionCapability?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.FlexibleServerEditionCapability&text=FlexibleServerEditionCapability\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.supportedHyperscaleNodeEditions()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.supportedHyperscaleNodeEditions()"
  name: "supportedHyperscaleNodeEditions()"
  nameWithType: "CapabilityProperties.supportedHyperscaleNodeEditions()"
  summary: "Gets the supported<wbr>Hyperscale<wbr>Node<wbr>Editions property: The supported<wbr>Hyperscale<wbr>Node<wbr>Editions property."
  modifiers:
  - "abstract"
  syntax: "public abstract List<HyperscaleNodeEditionCapability> supportedHyperscaleNodeEditions()"
  desc: "Gets the supportedHyperscaleNodeEditions property: The supportedHyperscaleNodeEditions property."
  returns:
    description: "the supportedHyperscaleNodeEditions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.models.HyperscaleNodeEditionCapability?alt=com.azure.resourcemanager.postgresqlflexibleserver.models.HyperscaleNodeEditionCapability&text=HyperscaleNodeEditionCapability\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.zone()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.zone()"
  name: "zone()"
  nameWithType: "CapabilityProperties.zone()"
  summary: "Gets the zone property: zone name."
  modifiers:
  - "abstract"
  syntax: "public abstract String zone()"
  desc: "Gets the zone property: zone name."
  returns:
    description: "the zone value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.zoneRedundantHaAndGeoBackupSupported()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.zoneRedundantHaAndGeoBackupSupported()"
  name: "zoneRedundantHaAndGeoBackupSupported()"
  nameWithType: "CapabilityProperties.zoneRedundantHaAndGeoBackupSupported()"
  summary: "Gets the zone<wbr>Redundant<wbr>HaAnd<wbr>Geo<wbr>Backup<wbr>Supported property: A value indicating whether a new server in this region can have geo-backups to paired region."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean zoneRedundantHaAndGeoBackupSupported()"
  desc: "Gets the zoneRedundantHaAndGeoBackupSupported property: A value indicating whether a new server in this region can have geo-backups to paired region."
  returns:
    description: "the zoneRedundantHaAndGeoBackupSupported value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.zoneRedundantHaSupported()"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.models.CapabilityProperties.zoneRedundantHaSupported()"
  name: "zoneRedundantHaSupported()"
  nameWithType: "CapabilityProperties.zoneRedundantHaSupported()"
  summary: "Gets the zone<wbr>Redundant<wbr>HaSupported property: A value indicating whether a new server in this region can support multi zone HA."
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean zoneRedundantHaSupported()"
  desc: "Gets the zoneRedundantHaSupported property: A value indicating whether a new server in this region can support multi zone HA."
  returns:
    description: "the zoneRedundantHaSupported value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of CapabilityProperties."
metadata: {}
package: "com.azure.resourcemanager.postgresqlflexibleserver.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-postgresqlflexibleserver:1.0.0-beta.4
