### YamlMime:ManagedReference
items:
- uid: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy
  id: ConnectionBackoffStrategy
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.classic
  children:
  - org.apache.hc.client5.http.classic.ConnectionBackoffStrategy.shouldBackoff(java.lang.Throwable)
  - org.apache.hc.client5.http.classic.ConnectionBackoffStrategy.shouldBackoff(org.apache.hc.core5.http.HttpResponse)
  langs:
  - java
  name: ConnectionBackoffStrategy
  nameWithType: ConnectionBackoffStrategy
  fullName: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy
  type: Interface
  package: org.apache.hc.client5.http.classic
  summary: When managing a dynamic number of connections for a given route, this strategy assesses whether a given request execution outcome should result in a backoff signal or not, based on either examining the `Throwable` that resulted or by examining the resulting response (e.g. for its status code).
  syntax:
    content: public interface ConnectionBackoffStrategy
- uid: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy.shouldBackoff(java.lang.Throwable)
  id: shouldBackoff(java.lang.Throwable)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy
  langs:
  - java
  name: shouldBackoff(Throwable t)
  nameWithType: ConnectionBackoffStrategy.shouldBackoff(Throwable t)
  fullName: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy.shouldBackoff(Throwable t)
  overload: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy.shouldBackoff*
  type: Method
  package: org.apache.hc.client5.http.classic
  summary: Determines whether seeing the given `Throwable` as a result of request execution should result in a backoff signal.
  syntax:
    content: public abstract boolean shouldBackoff(Throwable t)
    parameters:
    - id: t
      type: java.lang.Throwable
      description: the <code>Throwable</code> that happened
    return:
      type: boolean
      description: >-
        <code>true</code> if a backoff signal should be
           given
- uid: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy.shouldBackoff(org.apache.hc.core5.http.HttpResponse)
  id: shouldBackoff(org.apache.hc.core5.http.HttpResponse)
  artifact: com.azure:azure-security-keyvault-jca:1.0.0-beta.2
  parent: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy
  langs:
  - java
  name: shouldBackoff(HttpResponse response)
  nameWithType: ConnectionBackoffStrategy.shouldBackoff(HttpResponse response)
  fullName: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy.shouldBackoff(HttpResponse response)
  overload: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy.shouldBackoff*
  type: Method
  package: org.apache.hc.client5.http.classic
  summary: Determines whether receiving the given <xref uid="org.apache.hc.core5.http.HttpResponse" data-throw-if-not-resolved="false">HttpResponse</xref> as a result of request execution should result in a backoff signal. Implementations MUST restrict themselves to examining the response header and MUST NOT consume any of the response body, if any.
  syntax:
    content: public abstract boolean shouldBackoff(HttpResponse response)
    parameters:
    - id: response
      type: org.apache.hc.core5.http.HttpResponse
      description: the <code>HttpResponse</code> that was received
    return:
      type: boolean
      description: >-
        <code>true</code> if a backoff signal should be
           given
references:
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy.shouldBackoff*
  name: shouldBackoff
  nameWithType: ConnectionBackoffStrategy.shouldBackoff
  fullName: org.apache.hc.client5.http.classic.ConnectionBackoffStrategy.shouldBackoff
  package: org.apache.hc.client5.http.classic
- uid: org.apache.hc.core5.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: org.apache.hc.core5.http.HttpResponse
