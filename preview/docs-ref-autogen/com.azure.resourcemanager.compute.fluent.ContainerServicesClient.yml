### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  id: ContainerServicesClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent
  children:
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.ContainerServicesClient(com.azure.resourcemanager.compute.ComputeManagementClient)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDelete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.list()
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listAsync()
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listAsync(com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listNextSinglePageAsync(java.lang.String)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listSinglePageAsync()
  - com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listSinglePageAsync(com.azure.core.util.Context)
  langs:
  - java
  name: ContainerServicesClient
  nameWithType: ContainerServicesClient
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  type: Class
  package: com.azure.resourcemanager.compute.fluent
  summary: An instance of this class provides access to all the operations defined in ContainerServices.
  syntax:
    content: public final class ContainerServicesClient implements InnerSupportsGet<ContainerServiceInner>, InnerSupportsListing<ContainerServiceInner>, InnerSupportsDelete<Void>
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.ContainerServicesClient(com.azure.resourcemanager.compute.ComputeManagementClient)
  id: ContainerServicesClient(com.azure.resourcemanager.compute.ComputeManagementClient)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: ContainerServicesClient(ComputeManagementClient client)
  nameWithType: ContainerServicesClient.ContainerServicesClient(ComputeManagementClient client)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.ContainerServicesClient(ComputeManagementClient client)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.ContainerServicesClient*
  type: Constructor
  package: com.azure.resourcemanager.compute.fluent
  summary: Initializes an instance of ContainerServicesClient.
  syntax:
    content: public ContainerServicesClient(ComputeManagementClient client)
    parameters:
    - id: client
      type: com.azure.resourcemanager.compute.ComputeManagementClient
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesClient.beginCreateOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public PollerFlux<PollResult<ContainerServiceInner>,ContainerServiceInner> beginCreateOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  nameWithType: ContainerServicesClient.beginCreateOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public PollerFlux<PollResult<ContainerServiceInner>,ContainerServiceInner> beginCreateOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  id: beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPolling(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public ContainerServiceInner beginCreateOrUpdateWithoutPolling(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    return:
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPolling(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPolling(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  nameWithType: ContainerServicesClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPolling(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public ContainerServiceInner beginCreateOrUpdateWithoutPolling(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  id: beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public Mono<ContainerServiceInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  nameWithType: ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public Mono<ContainerServiceInner> beginCreateOrUpdateWithoutPollingAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  id: beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public Mono<Response<ContainerServiceInner>> beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  id: beginCreateOrUpdateWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  nameWithType: ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public Mono<Response<ContainerServiceInner>> beginCreateOrUpdateWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDelete(java.lang.String,java.lang.String)
  id: beginDelete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesClient.beginDelete(String resourceGroupName, String containerServiceName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDelete(String resourceGroupName, String containerServiceName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, String containerServiceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginDelete(String resourceGroupName, String containerServiceName, Context context)
  nameWithType: ContainerServicesClient.beginDelete(String resourceGroupName, String containerServiceName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDelete(String resourceGroupName, String containerServiceName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDelete*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDelete(String resourceGroupName, String containerServiceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPolling(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesClient.beginDeleteWithoutPolling(String resourceGroupName, String containerServiceName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPolling(String resourceGroupName, String containerServiceName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, String containerServiceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPolling(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginDeleteWithoutPolling(String resourceGroupName, String containerServiceName, Context context)
  nameWithType: ContainerServicesClient.beginDeleteWithoutPolling(String resourceGroupName, String containerServiceName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPolling(String resourceGroupName, String containerServiceName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPolling*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public void beginDeleteWithoutPolling(String resourceGroupName, String containerServiceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String containerServiceName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String containerServiceName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, String containerServiceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginDeleteWithoutPollingAsync(String resourceGroupName, String containerServiceName, Context context)
  nameWithType: ContainerServicesClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String containerServiceName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingAsync(String resourceGroupName, String containerServiceName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public Mono<Void> beginDeleteWithoutPollingAsync(String resourceGroupName, String containerServiceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteWithoutPollingWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName, Context context)
  nameWithType: ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public Mono<Response<Void>> beginDeleteWithoutPollingWithResponseAsync(String resourceGroupName, String containerServiceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesClient.createOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public ContainerServiceInner createOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    return:
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  nameWithType: ContainerServicesClient.createOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public ContainerServiceInner createOrUpdate(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesClient.createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public Mono<ContainerServiceInner> createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  nameWithType: ContainerServicesClient.createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public Mono<ContainerServiceInner> createOrUpdateAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  nameWithType: ContainerServicesClient.createOrUpdateWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  nameWithType: ContainerServicesClient.createOrUpdateWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String containerServiceName, ContainerServiceInner parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: parameters
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: Container service.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: container service.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: delete(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesClient.delete(String resourceGroupName, String containerServiceName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.delete(String resourceGroupName, String containerServiceName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.delete*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public void delete(String resourceGroupName, String containerServiceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: delete(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: delete(String resourceGroupName, String containerServiceName, Context context)
  nameWithType: ContainerServicesClient.delete(String resourceGroupName, String containerServiceName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.delete(String resourceGroupName, String containerServiceName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.delete*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public void delete(String resourceGroupName, String containerServiceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesClient.deleteAsync(String resourceGroupName, String containerServiceName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteAsync(String resourceGroupName, String containerServiceName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String containerServiceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String containerServiceName, Context context)
  nameWithType: ContainerServicesClient.deleteAsync(String resourceGroupName, String containerServiceName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteAsync(String resourceGroupName, String containerServiceName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String containerServiceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesClient.deleteWithResponseAsync(String resourceGroupName, String containerServiceName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteWithResponseAsync(String resourceGroupName, String containerServiceName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String containerServiceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String containerServiceName, Context context)
  nameWithType: ContainerServicesClient.deleteWithResponseAsync(String resourceGroupName, String containerServiceName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteWithResponseAsync(String resourceGroupName, String containerServiceName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String containerServiceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesClient.getByResourceGroup(String resourceGroupName, String containerServiceName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroup(String resourceGroupName, String containerServiceName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public ContainerServiceInner getByResourceGroup(String resourceGroupName, String containerServiceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    return:
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: the properties of the specified container service in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroup(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String containerServiceName, Context context)
  nameWithType: ContainerServicesClient.getByResourceGroup(String resourceGroupName, String containerServiceName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroup(String resourceGroupName, String containerServiceName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public ContainerServiceInner getByResourceGroup(String resourceGroupName, String containerServiceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
      description: the properties of the specified container service in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesClient.getByResourceGroupAsync(String resourceGroupName, String containerServiceName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupAsync(String resourceGroupName, String containerServiceName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public Mono<ContainerServiceInner> getByResourceGroupAsync(String resourceGroupName, String containerServiceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: the properties of the specified container service in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String containerServiceName, Context context)
  nameWithType: ContainerServicesClient.getByResourceGroupAsync(String resourceGroupName, String containerServiceName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupAsync(String resourceGroupName, String containerServiceName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public Mono<ContainerServiceInner> getByResourceGroupAsync(String resourceGroupName, String containerServiceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: the properties of the specified container service in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String containerServiceName)
  nameWithType: ContainerServicesClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String containerServiceName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String containerServiceName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public Mono<Response<ContainerServiceInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String containerServiceName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
      description: the properties of the specified container service in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String containerServiceName, Context context)
  nameWithType: ContainerServicesClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String containerServiceName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String containerServiceName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public Mono<Response<ContainerServiceInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String containerServiceName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: containerServiceName
      type: java.lang.String
      description: The name of the container service in the specified subscription and resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
      description: the properties of the specified container service in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: list()
  nameWithType: ContainerServicesClient.list()
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.list()
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.list*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public PagedIterable<ContainerServiceInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: a list of container services in the specified subscription.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: list(Context context)
  nameWithType: ContainerServicesClient.list(Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.list(Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.list*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public PagedIterable<ContainerServiceInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: a list of container services in the specified subscription.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listAsync()
  nameWithType: ContainerServicesClient.listAsync()
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listAsync()
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public PagedFlux<ContainerServiceInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: a list of container services in the specified subscription.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listAsync(com.azure.core.util.Context)
  id: listAsync(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listAsync(Context context)
  nameWithType: ContainerServicesClient.listAsync(Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listAsync(Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public PagedFlux<ContainerServiceInner> listAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: a list of container services in the specified subscription.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: ContainerServicesClient.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public PagedIterable<ContainerServiceInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: a list of container services in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: ContainerServicesClient.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public PagedIterable<ContainerServiceInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: a list of container services in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: ContainerServicesClient.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public PagedFlux<ContainerServiceInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: a list of container services in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName, Context context)
  nameWithType: ContainerServicesClient.listByResourceGroupAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public PagedFlux<ContainerServiceInner> listByResourceGroupAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
      description: a list of container services in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupNextSinglePageAsync(java.lang.String)
  id: listByResourceGroupNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listByResourceGroupNextSinglePageAsync(String nextLink)
  nameWithType: ContainerServicesClient.listByResourceGroupNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ContainerServiceInner>> listByResourceGroupNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
      description: the response from the List Container Services operation.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
  nameWithType: ContainerServicesClient.listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ContainerServiceInner>> listByResourceGroupNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
      description: the response from the List Container Services operation.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupSinglePageAsync(java.lang.String)
  id: listByResourceGroupSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName)
  nameWithType: ContainerServicesClient.listByResourceGroupSinglePageAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupSinglePageAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public Mono<PagedResponse<ContainerServiceInner>> listByResourceGroupSinglePageAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
      description: a list of container services in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroupSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  nameWithType: ContainerServicesClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public Mono<PagedResponse<ContainerServiceInner>> listByResourceGroupSinglePageAsync(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: The name of the resource group.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
      description: a list of container services in the specified subscription and resource group.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listNextSinglePageAsync(java.lang.String)
  id: listNextSinglePageAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink)
  nameWithType: ContainerServicesClient.listNextSinglePageAsync(String nextLink)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listNextSinglePageAsync(String nextLink)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ContainerServiceInner>> listNextSinglePageAsync(String nextLink)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
      description: the response from the List Container Services operation.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  id: listNextSinglePageAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listNextSinglePageAsync(String nextLink, Context context)
  nameWithType: ContainerServicesClient.listNextSinglePageAsync(String nextLink, Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listNextSinglePageAsync(String nextLink, Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listNextSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Get the next page of items.
  syntax:
    content: public Mono<PagedResponse<ContainerServiceInner>> listNextSinglePageAsync(String nextLink, Context context)
    parameters:
    - id: nextLink
      type: java.lang.String
      description: The nextLink parameter.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
      description: the response from the List Container Services operation.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listSinglePageAsync()
  id: listSinglePageAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listSinglePageAsync()
  nameWithType: ContainerServicesClient.listSinglePageAsync()
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listSinglePageAsync()
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public Mono<PagedResponse<ContainerServiceInner>> listSinglePageAsync()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
      description: a list of container services in the specified subscription.
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listSinglePageAsync(com.azure.core.util.Context)
  id: listSinglePageAsync(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.0.0-beta.2
  parent: com.azure.resourcemanager.compute.fluent.ContainerServicesClient
  langs:
  - java
  name: listSinglePageAsync(Context context)
  nameWithType: ContainerServicesClient.listSinglePageAsync(Context context)
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listSinglePageAsync(Context context)
  overload: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listSinglePageAsync*
  type: Method
  package: com.azure.resourcemanager.compute.fluent
  summary: Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.
  syntax:
    content: public Mono<PagedResponse<ContainerServiceInner>> listSinglePageAsync(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
      description: a list of container services in the specified subscription.
references:
- uid: com.azure.resourcemanager.compute.ComputeManagementClient
  name: ComputeManagementClient
  nameWithType: ComputeManagementClient
  fullName: com.azure.resourcemanager.compute.ComputeManagementClient
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.ContainerServicesClient*
  name: ContainerServicesClient
  nameWithType: ContainerServicesClient.ContainerServicesClient
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.ContainerServicesClient
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.PagedResponse<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.PagedResponse
    name: PagedResponse
    fullName: com.azure.core.http.rest.PagedResponse
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
    name: ContainerServiceInner
    fullName: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: ContainerServicesClient.listSinglePageAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listSinglePageAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
    name: ContainerServiceInner
    fullName: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listAsync*
  name: listAsync
  nameWithType: ContainerServicesClient.listAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
    name: ContainerServiceInner
    fullName: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.list*
  name: list
  nameWithType: ContainerServicesClient.list
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.list
  package: com.azure.resourcemanager.compute.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
  name: ContainerServiceInner
  nameWithType: ContainerServiceInner
  fullName: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: ContainerServicesClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
    name: ContainerServiceInner
    fullName: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
    name: ContainerServiceInner
    fullName: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: ContainerServicesClient.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdate
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
    name: ContainerServiceInner
    fullName: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: ContainerServicesClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdateAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: ContainerServicesClient.createOrUpdate
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.createOrUpdate
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
    name: ContainerServiceInner
    fullName: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: ContainerServicesClient.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: ContainerServicesClient.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroupAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: ContainerServicesClient.getByResourceGroup
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.getByResourceGroup
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: ContainerServicesClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDelete*
  name: beginDelete
  nameWithType: ContainerServicesClient.beginDelete
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDelete
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteAsync*
  name: deleteAsync
  nameWithType: ContainerServicesClient.deleteAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.deleteAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.delete*
  name: delete
  nameWithType: ContainerServicesClient.delete
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.delete
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupSinglePageAsync*
  name: listByResourceGroupSinglePageAsync
  nameWithType: ContainerServicesClient.listByResourceGroupSinglePageAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupSinglePageAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: ContainerServicesClient.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: ContainerServicesClient.listByResourceGroup
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroup
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync*
  name: beginCreateOrUpdateWithoutPollingWithResponseAsync
  nameWithType: ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync*
  name: beginCreateOrUpdateWithoutPollingAsync
  nameWithType: ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPollingAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPolling*
  name: beginCreateOrUpdateWithoutPolling
  nameWithType: ContainerServicesClient.beginCreateOrUpdateWithoutPolling
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginCreateOrUpdateWithoutPolling
  package: com.azure.resourcemanager.compute.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync*
  name: beginDeleteWithoutPollingWithResponseAsync
  nameWithType: ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingWithResponseAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingAsync*
  name: beginDeleteWithoutPollingAsync
  nameWithType: ContainerServicesClient.beginDeleteWithoutPollingAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPollingAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPolling*
  name: beginDeleteWithoutPolling
  nameWithType: ContainerServicesClient.beginDeleteWithoutPolling
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.beginDeleteWithoutPolling
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: ContainerServicesClient.listNextSinglePageAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listNextSinglePageAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupNextSinglePageAsync*
  name: listByResourceGroupNextSinglePageAsync
  nameWithType: ContainerServicesClient.listByResourceGroupNextSinglePageAsync
  fullName: com.azure.resourcemanager.compute.fluent.ContainerServicesClient.listByResourceGroupNextSinglePageAsync
  package: com.azure.resourcemanager.compute.fluent
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
  name: InnerSupportsGet<ContainerServiceInner>
  nameWithType: InnerSupportsGet<ContainerServiceInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
  name: InnerSupportsListing<ContainerServiceInner>
  nameWithType: InnerSupportsListing<ContainerServiceInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.PagedResponse
  name: PagedResponse
  nameWithType: PagedResponse
  fullName: com.azure.core.http.rest.PagedResponse
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
  name: ContainerServiceInner>,ContainerServiceInner
  nameWithType: ContainerServiceInner>,ContainerServiceInner
  fullName: com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner>,com.azure.resourcemanager.compute.fluent.inner.ContainerServiceInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
