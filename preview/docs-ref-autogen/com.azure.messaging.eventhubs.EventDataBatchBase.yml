### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.eventhubs.EventDataBatchBase
  id: EventDataBatchBase
  artifact: com.azure:azure-messaging-eventhubs:5.3.0-beta.1
  parent: com.azure.messaging.eventhubs
  children:
  - com.azure.messaging.eventhubs.EventDataBatchBase.getCount()
  - com.azure.messaging.eventhubs.EventDataBatchBase.getMaxSizeInBytes()
  - com.azure.messaging.eventhubs.EventDataBatchBase.getSizeInBytes()
  - com.azure.messaging.eventhubs.EventDataBatchBase.getStartingPublishedSequenceNumber()
  langs:
  - java
  name: EventDataBatchBase
  nameWithType: EventDataBatchBase
  fullName: com.azure.messaging.eventhubs.EventDataBatchBase
  type: Class
  package: com.azure.messaging.eventhubs
  summary: Base class containing common implementation for batch sending. Implemented by <xref uid="com.azure.messaging.eventhubs.ObjectBatch" data-throw-if-not-resolved="false">ObjectBatch</xref> and <xref uid="com.azure.messaging.eventhubs.EventDataBatch" data-throw-if-not-resolved="false">EventDataBatch</xref>.
  syntax:
    content: public abstract class EventDataBatchBase
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.eventhubs.EventDataBatchBase.EventDataBatchBase(int,java.lang.String,java.lang.String,com.azure.core.amqp.implementation.ErrorContextProvider,com.azure.core.amqp.implementation.TracerProvider,java.lang.String,java.lang.String,boolean)
  id: EventDataBatchBase(int,java.lang.String,java.lang.String,com.azure.core.amqp.implementation.ErrorContextProvider,com.azure.core.amqp.implementation.TracerProvider,java.lang.String,java.lang.String,boolean)
  artifact: com.azure:azure-messaging-eventhubs:5.3.0-beta.1
  parent: com.azure.messaging.eventhubs.EventDataBatchBase
  langs:
  - java
  name: EventDataBatchBase(int maxMessageSize, String partitionId, String partitionKey, ErrorContextProvider contextProvider, TracerProvider tracerProvider, String entityPath, String hostname, boolean isPublishingSequenceNumberRequired)
  nameWithType: EventDataBatchBase.EventDataBatchBase(int maxMessageSize, String partitionId, String partitionKey, ErrorContextProvider contextProvider, TracerProvider tracerProvider, String entityPath, String hostname, boolean isPublishingSequenceNumberRequired)
  fullName: com.azure.messaging.eventhubs.EventDataBatchBase.EventDataBatchBase(int maxMessageSize, String partitionId, String partitionKey, ErrorContextProvider contextProvider, TracerProvider tracerProvider, String entityPath, String hostname, boolean isPublishingSequenceNumberRequired)
  overload: com.azure.messaging.eventhubs.EventDataBatchBase.EventDataBatchBase*
  type: Constructor
  package: com.azure.messaging.eventhubs
  syntax:
    content: " EventDataBatchBase(int maxMessageSize, String partitionId, String partitionKey, ErrorContextProvider contextProvider, TracerProvider tracerProvider, String entityPath, String hostname, boolean isPublishingSequenceNumberRequired)"
    parameters:
    - id: maxMessageSize
      type: int
    - id: partitionId
      type: java.lang.String
    - id: partitionKey
      type: java.lang.String
    - id: contextProvider
      type: com.azure.core.amqp.implementation.ErrorContextProvider
    - id: tracerProvider
      type: com.azure.core.amqp.implementation.TracerProvider
    - id: entityPath
      type: java.lang.String
    - id: hostname
      type: java.lang.String
    - id: isPublishingSequenceNumberRequired
      type: boolean
- uid: com.azure.messaging.eventhubs.EventDataBatchBase.getCount()
  id: getCount()
  artifact: com.azure:azure-messaging-eventhubs:5.3.0-beta.1
  parent: com.azure.messaging.eventhubs.EventDataBatchBase
  langs:
  - java
  name: getCount()
  nameWithType: EventDataBatchBase.getCount()
  fullName: com.azure.messaging.eventhubs.EventDataBatchBase.getCount()
  overload: com.azure.messaging.eventhubs.EventDataBatchBase.getCount*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Gets the number of <xref uid="com.azure.messaging.eventhubs.EventData" data-throw-if-not-resolved="false">events</xref> in the batch.
  syntax:
    content: public int getCount()
    return:
      type: int
      description: The number of <xref uid="com.azure.messaging.eventhubs.EventData" data-throw-if-not-resolved="false">events</xref> in the batch.
- uid: com.azure.messaging.eventhubs.EventDataBatchBase.getMaxSizeInBytes()
  id: getMaxSizeInBytes()
  artifact: com.azure:azure-messaging-eventhubs:5.3.0-beta.1
  parent: com.azure.messaging.eventhubs.EventDataBatchBase
  langs:
  - java
  name: getMaxSizeInBytes()
  nameWithType: EventDataBatchBase.getMaxSizeInBytes()
  fullName: com.azure.messaging.eventhubs.EventDataBatchBase.getMaxSizeInBytes()
  overload: com.azure.messaging.eventhubs.EventDataBatchBase.getMaxSizeInBytes*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Gets the maximum size, in bytes, of the <xref uid="com.azure.messaging.eventhubs.EventDataBatch" data-throw-if-not-resolved="false">EventDataBatch</xref>.
  syntax:
    content: public int getMaxSizeInBytes()
    return:
      type: int
      description: The maximum size, in bytes, of the <xref uid="com.azure.messaging.eventhubs.EventDataBatch" data-throw-if-not-resolved="false">EventDataBatch</xref>.
- uid: com.azure.messaging.eventhubs.EventDataBatchBase.getSizeInBytes()
  id: getSizeInBytes()
  artifact: com.azure:azure-messaging-eventhubs:5.3.0-beta.1
  parent: com.azure.messaging.eventhubs.EventDataBatchBase
  langs:
  - java
  name: getSizeInBytes()
  nameWithType: EventDataBatchBase.getSizeInBytes()
  fullName: com.azure.messaging.eventhubs.EventDataBatchBase.getSizeInBytes()
  overload: com.azure.messaging.eventhubs.EventDataBatchBase.getSizeInBytes*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Gets the size of the <xref uid="com.azure.messaging.eventhubs.EventDataBatch" data-throw-if-not-resolved="false">EventDataBatch</xref> in bytes.
  syntax:
    content: public int getSizeInBytes()
    return:
      type: int
      description: the size of the <xref uid="com.azure.messaging.eventhubs.EventDataBatch" data-throw-if-not-resolved="false">EventDataBatch</xref> in bytes.
- uid: com.azure.messaging.eventhubs.EventDataBatchBase.getStartingPublishedSequenceNumber()
  id: getStartingPublishedSequenceNumber()
  artifact: com.azure:azure-messaging-eventhubs:5.3.0-beta.1
  parent: com.azure.messaging.eventhubs.EventDataBatchBase
  langs:
  - java
  name: getStartingPublishedSequenceNumber()
  nameWithType: EventDataBatchBase.getStartingPublishedSequenceNumber()
  fullName: com.azure.messaging.eventhubs.EventDataBatchBase.getStartingPublishedSequenceNumber()
  overload: com.azure.messaging.eventhubs.EventDataBatchBase.getStartingPublishedSequenceNumber*
  type: Method
  package: com.azure.messaging.eventhubs
  summary: Gets the sequence number of the first event in the batch, if the batch was successfully published by a sequence-aware producer. If the producer was not configured to apply sequence numbering or if the batch has not yet been successfully published, this member will be `null`.
  syntax:
    content: public Integer getStartingPublishedSequenceNumber()
    return:
      type: java.lang.Integer
      description: >-
        the publishing sequence number assigned to the first event in the batch at the time
         the batch was successfully published. <code>null</code> if the producer was not configured to apply
         sequence numbering or if the batch has not yet been successfully published.
references:
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.amqp.implementation.ErrorContextProvider
  spec.java:
  - uid: com.azure.core.amqp.implementation.ErrorContextProvider
    name: ErrorContextProvider
    fullName: com.azure.core.amqp.implementation.ErrorContextProvider
- uid: com.azure.core.amqp.implementation.TracerProvider
  spec.java:
  - uid: com.azure.core.amqp.implementation.TracerProvider
    name: TracerProvider
    fullName: com.azure.core.amqp.implementation.TracerProvider
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.messaging.eventhubs.EventDataBatchBase.EventDataBatchBase*
  name: EventDataBatchBase
  nameWithType: EventDataBatchBase.EventDataBatchBase
  fullName: com.azure.messaging.eventhubs.EventDataBatchBase.EventDataBatchBase
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventDataBatchBase.getCount*
  name: getCount
  nameWithType: EventDataBatchBase.getCount
  fullName: com.azure.messaging.eventhubs.EventDataBatchBase.getCount
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventDataBatchBase.getMaxSizeInBytes*
  name: getMaxSizeInBytes
  nameWithType: EventDataBatchBase.getMaxSizeInBytes
  fullName: com.azure.messaging.eventhubs.EventDataBatchBase.getMaxSizeInBytes
  package: com.azure.messaging.eventhubs
- uid: com.azure.messaging.eventhubs.EventDataBatchBase.getSizeInBytes*
  name: getSizeInBytes
  nameWithType: EventDataBatchBase.getSizeInBytes
  fullName: com.azure.messaging.eventhubs.EventDataBatchBase.getSizeInBytes
  package: com.azure.messaging.eventhubs
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.azure.messaging.eventhubs.EventDataBatchBase.getStartingPublishedSequenceNumber*
  name: getStartingPublishedSequenceNumber
  nameWithType: EventDataBatchBase.getStartingPublishedSequenceNumber
  fullName: com.azure.messaging.eventhubs.EventDataBatchBase.getStartingPublishedSequenceNumber
  package: com.azure.messaging.eventhubs
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
