### YamlMime:JavaType
uid: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy"
fullName: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy"
name: "PopTokenAuthenticationPolicy"
nameWithType: "PopTokenAuthenticationPolicy"
summary: "The Pop token authentication policy for use with Azure SDK clients."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **PopTokenAuthenticationPolicy**</br> implements <xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.PopTokenAuthenticationPolicy(com.azure.core.credential.TokenCredential,java.lang.String...)"
  fullName: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.PopTokenAuthenticationPolicy(TokenCredential credential, String[] scopes)"
  name: "PopTokenAuthenticationPolicy(TokenCredential credential, String[] scopes)"
  nameWithType: "PopTokenAuthenticationPolicy.PopTokenAuthenticationPolicy(TokenCredential credential, String[] scopes)"
  summary: "Creates a new instance of the Pop<wbr>Token<wbr>Authentication<wbr>Policy."
  parameters:
  - description: "The credential to use for authentication."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "The scopes required for the token."
    name: "scopes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>[]"
  syntax: "public PopTokenAuthenticationPolicy(TokenCredential credential, String[] scopes)"
  desc: "Creates a new instance of the PopTokenAuthenticationPolicy."
methods:
- uid: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.authorizeRequest(com.azure.core.http.HttpPipelineCallContext)"
  fullName: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.authorizeRequest(HttpPipelineCallContext context)"
  name: "authorizeRequest(HttpPipelineCallContext context)"
  nameWithType: "PopTokenAuthenticationPolicy.authorizeRequest(HttpPipelineCallContext context)"
  summary: "Authorizes the request."
  parameters:
  - description: "The context of the request."
    name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> authorizeRequest(HttpPipelineCallContext context)"
  desc: "Authorizes the request."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing <xref uid=\"java.lang.Void\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Void\"></xref> ."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.authorizeRequestOnChallenge(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpResponse)"
  fullName: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.authorizeRequestOnChallenge(HttpPipelineCallContext context, HttpResponse response)"
  name: "authorizeRequestOnChallenge(HttpPipelineCallContext context, HttpResponse response)"
  nameWithType: "PopTokenAuthenticationPolicy.authorizeRequestOnChallenge(HttpPipelineCallContext context, HttpResponse response)"
  summary: "Authorizes the request on challenge."
  parameters:
  - description: "The context of the request."
    name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "The response of the request."
    name: "response"
    type: "<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Boolean> authorizeRequestOnChallenge(HttpPipelineCallContext context, HttpResponse response)"
  desc: "Authorizes the request on challenge."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing a <xref uid=\"java.lang.Boolean\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Boolean\"></xref> indicating if the request was authorized."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.authorizeRequestOnChallengeSync(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpResponse)"
  fullName: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.authorizeRequestOnChallengeSync(HttpPipelineCallContext context, HttpResponse response)"
  name: "authorizeRequestOnChallengeSync(HttpPipelineCallContext context, HttpResponse response)"
  nameWithType: "PopTokenAuthenticationPolicy.authorizeRequestOnChallengeSync(HttpPipelineCallContext context, HttpResponse response)"
  summary: "Authorizes the request on challenge synchronously."
  parameters:
  - description: "The context of the request."
    name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "The response of the request."
    name: "response"
    type: "<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean authorizeRequestOnChallengeSync(HttpPipelineCallContext context, HttpResponse response)"
  desc: "Authorizes the request on challenge synchronously."
  returns:
    description: "A <xref uid=\"java.lang.Boolean\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Boolean\"></xref> indicating if the request was authorized."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.authorizeRequestSync(com.azure.core.http.HttpPipelineCallContext)"
  fullName: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.authorizeRequestSync(HttpPipelineCallContext context)"
  name: "authorizeRequestSync(HttpPipelineCallContext context)"
  nameWithType: "PopTokenAuthenticationPolicy.authorizeRequestSync(HttpPipelineCallContext context)"
  summary: "Authorizes the request synchronously."
  parameters:
  - description: "The context of the request."
    name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void authorizeRequestSync(HttpPipelineCallContext context)"
  desc: "Authorizes the request synchronously."
- uid: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
  fullName: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  name: "process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  nameWithType: "PopTokenAuthenticationPolicy.process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  summary: "Processes the request."
  parameters:
  - description: "The context of the request."
    name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "The next policy in the pipeline."
    name: "next"
    type: "<xref href=\"com.azure.core.http.HttpPipelineNextPolicy?alt=com.azure.core.http.HttpPipelineNextPolicy&text=HttpPipelineNextPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next)"
  desc: "Processes the request."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the <xref uid=\"com.azure.core.http.HttpResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponse\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.processSync(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextSyncPolicy)"
  fullName: "com.azure.core.experimental.credential.PopTokenAuthenticationPolicy.processSync(HttpPipelineCallContext context, HttpPipelineNextSyncPolicy next)"
  name: "processSync(HttpPipelineCallContext context, HttpPipelineNextSyncPolicy next)"
  nameWithType: "PopTokenAuthenticationPolicy.processSync(HttpPipelineCallContext context, HttpPipelineNextSyncPolicy next)"
  summary: "Processes the request synchronously."
  parameters:
  - description: "The context of the request."
    name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - description: "The next policy in the pipeline."
    name: "next"
    type: "<xref href=\"com.azure.core.http.HttpPipelineNextSyncPolicy?alt=com.azure.core.http.HttpPipelineNextSyncPolicy&text=HttpPipelineNextSyncPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpResponse processSync(HttpPipelineCallContext context, HttpPipelineNextSyncPolicy next)"
  desc: "Processes the request synchronously."
  returns:
    description: "The <xref uid=\"com.azure.core.http.HttpResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponse\"></xref>."
    type: "<xref href=\"com.azure.core.http.HttpResponse?alt=com.azure.core.http.HttpResponse&text=HttpResponse\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The Pop token authentication policy for use with Azure SDK clients."
implements:
- "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.core.experimental.credential"
artifact: com.azure:azure-core-experimental:1.0.0-beta.53
